{"file_name": "/home/qj213/afp-2021-10-22/thys/DiscretePricing/CRR_Model.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/DiscretePricing", "problem_names": ["lemma (in CRR_market) case_asset:\n  assumes \"asset \\<in> stocks Mkt\"\n  shows \"asset = stk \\<or> asset = risk_free_asset\"", "lemma (in CRR_market)\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nshows bernoulli_gen_filtration: \"filtration N G\"\nand bernoulli_sigma_finite: \"\\<forall>n. sigma_finite_subalgebra N (G n)\"", "lemma (in CRR_market) two_stocks:\nshows \"stk \\<noteq> risk_free_asset\"", "lemma (in CRR_market) stock_pf_vp_expand:\n  assumes \"stock_portfolio Mkt pf\"\n  shows \"val_process Mkt pf n w = geom_proc n w * pf stk (Suc n) w +\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w\"", "lemma (in CRR_market) stock_pf_uvp_expand:\n  assumes \"stock_portfolio Mkt pf\"\n  shows \"cls_val_process Mkt pf (Suc n) w = geom_proc (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w\"", "lemma (in CRR_market) pos_pf_neg_uvp:\n  assumes \"stock_portfolio Mkt pf\"\n  and \"d < 1+r\"\n  and \"0 < pf stk (Suc n) (spick w n False)\"\n  and \"val_process Mkt pf n (spick w n False) \\<le> 0\"\nshows \"cls_val_process Mkt pf (Suc n) (spick w n False) < 0\"", "lemma (in CRR_market) neg_pf_neg_uvp:\n  assumes \"stock_portfolio Mkt pf\"\n  and \"1+r < u\"\n  and \"pf stk (Suc n) (spick w n True) < 0\"\n  and \"val_process Mkt pf n (spick w n True) \\<le> 0\"\nshows \"cls_val_process Mkt pf (Suc n) (spick w n True) < 0\"", "lemma (in CRR_market) zero_pf_neg_uvp:\n  assumes \"stock_portfolio Mkt pf\"\n  and \"pf stk (Suc n) w = 0\"\n  and \"pf risk_free_asset (Suc n) w \\<noteq> 0\"\n  and \"val_process Mkt pf n w \\<le> 0\"\nshows \"cls_val_process Mkt pf (Suc n) w < 0\"", "lemma (in CRR_market) neg_pf_exists:\n  assumes \"stock_portfolio Mkt pf\"\n  and \"trading_strategy pf\"\n  and \"1+r < u\"\n  and \"d < 1+r\"\n  and \"val_process Mkt pf n w \\<le> 0\"\n  and \"pf stk (Suc n) w \\<noteq> 0 \\<or> pf risk_free_asset (Suc n) w \\<noteq> 0\"\nshows \"\\<exists>y. cls_val_process Mkt pf (Suc n) y < 0\"", "lemma (in CRR_market) non_zero_components:\nassumes \"val_process Mkt pf n y \\<noteq> 0\"\nand \"stock_portfolio Mkt pf\"\nshows  \"pf stk (Suc n) y \\<noteq> 0 \\<or> pf risk_free_asset (Suc n) y \\<noteq> 0\"", "lemma (in CRR_market) neg_pf_Suc:\n  assumes \"stock_portfolio Mkt pf\"\n  and \"trading_strategy pf\"\n  and \"self_financing Mkt pf\"\n  and \"1+r < u\"\n  and \"d < 1+r\"\n  and \"cls_val_process Mkt pf n w < 0\"\nshows \"n \\<le> m \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf m y < 0\"", "lemma (in CRR_market) viable_if:\n  assumes \"1+r < u\"\n  and \"d < 1+r\"\nshows \"viable_market Mkt\"", "lemma (in CRR_market) viable_only_if_d:\n  assumes \"viable_market Mkt\"\n  shows \"d < 1+r\"", "lemma (in CRR_market) viable_only_if_u:\n  assumes \"viable_market Mkt\"\n  shows \"1+r < u\"", "lemma (in CRR_market) viable_iff:\nshows \"viable_market Mkt \\<longleftrightarrow> (d < 1+r \\<and> 1+r < u)\"", "lemma (in CRR_market) stock_price_borel_measurable:\n  shows \"borel_adapt_stoch_proc G (prices Mkt stk)\"", "lemma (in CRR_market) risk_free_asset_martingale:\n  assumes \"N = bernoulli_stream q\"\n  and \"0 < q\"\n  and \"q < 1\"\n  shows \"martingale N G (discounted_value r (prices Mkt risk_free_asset))\"", "lemma (in infinite_coin_toss_space) nat_filtration_from_eq_sets:\n  assumes \"N = bernoulli_stream q\"\n  and \"0 < q\"\n  and \"q < 1\"\nshows \"sets (infinite_coin_toss_space.nat_filtration N n) = sets (nat_filtration n)\"", "lemma (in CRR_market) geom_proc_integrable:\n  assumes \"N = bernoulli_stream q\"\nand \"0 \\<le> q\"\nand \"q \\<le> 1\"\nshows \"integrable N (geom_proc n)\"", "lemma (in CRR_market) CRR_infinite_cts_filtration:\n  shows \"infinite_cts_filtration p M nat_filtration\"", "lemma (in CRR_market) proj_stoch_proc_geom_disc_fct:\n  shows \"disc_fct (proj_stoch_proc geom_proc n)\"", "lemma (in CRR_market) proj_stoch_proc_geom_rng:\n  assumes \"N = bernoulli_stream q\"\nshows  \"proj_stoch_proc geom_proc n \\<in> N \\<rightarrow>\\<^sub>M stream_space borel\"", "lemma (in CRR_market) proj_stoch_proc_geom_open_set:\n  shows  \"\\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter> space (stream_space borel).\n     \\<exists>A\\<in>sets (stream_space borel). range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\"", "lemma (in CRR_market) bernoulli_AE_cond_exp:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nand \"integrable N X\"\nshows \"AE w in N. real_cond_exp N (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)) X w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) X w\"", "lemma (in CRR_market) geom_proc_cond_exp:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nshows \"AE w in N. real_cond_exp N (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)) (geom_proc (Suc n)) w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) (geom_proc (Suc n)) w\"", "lemma (in CRR_market) expl_cond_eq_sets:\n  assumes \"N = bernoulli_stream q\"\n  shows  \"expl_cond_expect N (proj_stoch_proc geom_proc n) X \\<in>\n        borel_measurable (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\"", "lemma (in CRR_market) bernoulli_real_cond_exp_AE:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nand \"integrable N X\"\nshows \"real_cond_exp N (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n   X w = expl_cond_expect N (proj_stoch_proc geom_proc n) X w\"", "lemma (in CRR_market) geom_proc_real_cond_exp_AE:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nshows \"real_cond_exp N (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n   (geom_proc (Suc n)) w = expl_cond_expect N (proj_stoch_proc geom_proc n) (geom_proc (Suc n)) w\"", "lemma (in CRR_market) geom_proc_stoch_proc_filt:\n  assumes \"N= bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nshows \"stoch_proc_filt N geom_proc borel n = fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)\"", "lemma (in CRR_market) bernoulli_cond_exp:\n  assumes \"N = bernoulli_stream q\"\n  and \"0 < q\"\n  and \"q < 1\"\nand \"integrable N X\"\nshows \"real_cond_exp N (stoch_proc_filt N geom_proc borel n) X w = expl_cond_expect N (proj_stoch_proc geom_proc n) X w\"", "lemma (in CRR_market) stock_cond_exp:\n  assumes \"N = bernoulli_stream q\"\n  and \"0 < q\"\n  and \"q < 1\"\nshows \"real_cond_exp N (stoch_proc_filt N geom_proc borel n) (geom_proc (Suc n)) w = expl_cond_expect N (proj_stoch_proc geom_proc n) (geom_proc (Suc n)) w\"", "lemma (in prob_space) discount_factor_real_cond_exp:\n  assumes \"integrable M X\"\nand \"subalgebra M G\"\nand \"-1 < r\"\nshows \"AE w in M. real_cond_exp M G (\\<lambda>x. discount_factor r n x * X x) w = discount_factor r n w * (real_cond_exp M G X) w\"", "lemma (in prob_space) discounted_value_real_cond_exp:\n  assumes \"integrable M X\"\n  and \"-1 < r\"\nand \"subalgebra M G\"\n  shows \"AE w in M. real_cond_exp M G ((discounted_value r (\\<lambda> m. X)) n) w =\n    discounted_value r (\\<lambda>m. (real_cond_exp M G X)) n w\"", "lemma (in CRR_market)\n  assumes \"q = (1 + r - d)/(u -d)\"\n  and \"viable_market Mkt\"\n  shows gt_param: \"0 < q\"\n    and lt_param: \"q < 1\"\n    and risk_neutral_param: \"u * q + d * (1 - q) = 1 + r\"", "lemma (in CRR_market) bernoulli_expl_cond_expect_adapt:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\n  shows \"expl_cond_expect N (proj_stoch_proc geom_proc n) f\\<in> borel_measurable (G n)\"", "lemma (in CRR_market) real_cond_exp_discount_stock:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nshows \"AE w in N. real_cond_exp N (G n)\n   (discounted_value r (prices Mkt stk) (Suc n)) w =\n                  discounted_value r (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n) w\"", "lemma (in CRR_market) risky_asset_martingale_only_if:\n  assumes \"N = bernoulli_stream q\"\n  and \"0 < q\"\n  and \"q < 1\"\n  and  \"martingale N G (discounted_value r (prices Mkt stk))\"\nshows \"q = (1 + r - d) / (u - d)\"", "lemma (in CRR_market_viable) real_cond_exp_discount_stock_q_const:\n  assumes \"N = bernoulli_stream q\"\nand \"q = (1+r-d) / (u-d)\"\nshows \"AE w in N. real_cond_exp N (G n)\n   (discounted_value r (prices Mkt stk) (Suc n)) w =\n                  discounted_value r (prices Mkt stk) n w\"", "lemma (in CRR_market_viable) risky_asset_martingale_if:\n  assumes \"N = bernoulli_stream q\"\n  and \"q = (1 + r - d) / (u - d)\"\nshows \"martingale N G (discounted_value r (prices Mkt stk))\"", "lemma (in CRR_market_viable) risk_neutral_iff':\n  assumes \"N = bernoulli_stream q\"\nand \"0 \\<le> q\"\nand \"q \\<le> 1\"\nand \"filt_equiv nat_filtration M N\"\nshows \"rfr_disc_equity_market.risk_neutral_prob G Mkt r N \\<longleftrightarrow> q= (1 + r - d) / (u - d)\"", "lemma (in CRR_market_viable) risk_neutral_iff:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nshows \"rfr_disc_equity_market.risk_neutral_prob G Mkt r N \\<longleftrightarrow> q= (1 + r - d) / (u - d)\"", "lemma (in CRR_market) stock_filtration_eq:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nshows \"G n = stoch_proc_filt N geom_proc borel n\"", "lemma (in CRR_market) real_exp_eq:\n  assumes \"der\\<in> borel_measurable (G matur)\"\nand \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nshows \"real_cond_exp N (stoch_proc_filt N geom_proc borel n) der w =\n      expl_cond_expect N (proj_stoch_proc geom_proc n) der w\"", "lemma (in CRR_market) rn_rev_price_rev_borel_adapt:\nassumes \"cash_flow \\<in> borel_measurable (G matur)\"\nand \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nshows \"(n \\<le> matur) \\<Longrightarrow> (rn_rev_price N cash_flow matur n) \\<in> borel_measurable (G (matur - n))\"", "lemma (in infinite_coin_toss_space) bernoulli_discounted_integrable:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\n  and \"der \\<in> borel_measurable (nat_filtration n)\"\nand \"-1 < r\"\n  shows \"integrable N (discounted_value r (\\<lambda>m. der) m)\"", "lemma (in CRR_market) rn_rev_expl_cond_expect:\n  assumes \"der\\<in> borel_measurable (G matur)\"\nand \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nshows \"n \\<le> matur \\<Longrightarrow> rn_rev_price N der matur n w =\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - n)) (discounted_value r (\\<lambda>m. der) n) w\"", "lemma (in CRR_market) rn_price_eq:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nand \"der \\<in> borel_measurable (G matur)\"\nand \"n \\<le> matur\"\nshows \"rn_price N der matur n w = rn_price_ind N der matur n w\"", "lemma (in CRR_market) geom_proc_filt_info:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"f \\<in> borel_measurable (G n)\"\n  shows \"f w = f (pseudo_proj_True n w)\"", "lemma (in CRR_market) geom_proc_filt_info':\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"f \\<in> borel_measurable (G n)\"\n  shows \"f w = f (pseudo_proj_False n w)\"", "lemma (in CRR_market) rn_price_borel_adapt:\nassumes \"cash_flow \\<in> borel_measurable (G matur)\"\nand \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nand \"n \\<le> matur\"\nshows \"(rn_price N cash_flow matur n) \\<in> borel_measurable (G n)\"", "lemma (in CRR_market) delta_price_eq:\n  assumes \"Suc n \\<le> T\"\n  shows \"delta_price N cash_flow T n w = (rn_price N cash_flow T (Suc n) (spick w n True) - rn_price N cash_flow T (Suc n) (spick w n False))/\n    ((geom_proc n w) * (u - d))\"", "lemma (in CRR_market) geom_proc_spick:\n  shows \"geom_proc (Suc n) (spick w n x)  = (if x then u else d) * geom_proc n w\"", "lemma (in CRR_market) spick_red_geom:\n  shows \"(\\<lambda>w. spick w n x) \\<in> measurable (fct_gen_subalgebra M borel (geom_proc n)) (fct_gen_subalgebra M borel (geom_proc (Suc n)))\"", "lemma (in CRR_market) geom_spick_Suc:\n  assumes \"A \\<in> {(geom_proc (Suc n)) -` B |B. B \\<in> sets borel}\"\n  shows \"(\\<lambda>w. spick w n x) -`A \\<in> {geom_proc n -`B | B. B\\<in> sets borel}\"", "lemma (in CRR_market) geom_spick_lt:\n  assumes \"m< n\"\n  shows \"geom_proc m (spick w n x) = geom_proc m w\"", "lemma (in CRR_market) geom_spick_eq:\n  shows \"geom_proc m (spick w m x) = geom_proc m w\"", "lemma (in CRR_market) spick_red_geom_filt:\n  shows \"(\\<lambda>w. spick w n x) \\<in> measurable (G n) (G (Suc n))\"", "lemma (in CRR_market) delta_price_adapted:\n   fixes cash_flow::\"bool stream \\<Rightarrow> real\"\n   assumes \"cash_flow \\<in> borel_measurable (G T)\"\nand \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\n  shows \"borel_adapt_stoch_proc G (delta_price N cash_flow T)\"", "lemma (in CRR_market) delta_predict_predict:\n  assumes \"der \\<in> borel_measurable (G matur)\"\nand \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\n  shows \"borel_predict_stoch_proc G (delta_predict N der matur)\"", "lemma (in CRR_market) delta_pf_support:\n  shows \"support_set (delta_pf N der matur) \\<subseteq> {stk}\"", "lemma (in disc_equity_market) self_finance_trading_strat:\n  assumes \"trading_strategy pf\"\nand \"portfolio pf\"\nand \"borel_adapt_stoch_proc F (prices Mkt asset)\"\nand \"support_adapt Mkt pf\"\nshows \"trading_strategy (self_finance Mkt v pf asset)\"", "lemma (in CRR_market) self_fin_delta_pf_trad_strat:\n  assumes \"der\\<in> borel_measurable (G matur)\"\nand \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\n  shows \"trading_strategy (self_fin_delta_pf N der matur v0)\"", "lemma (in CRR_market)  geom_proc_eq_snth:\n  shows \"(\\<And>m. m \\<le> Suc n \\<Longrightarrow> geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    (\\<And>m. m \\<le> n \\<Longrightarrow> snth x m = snth y m)\"", "lemma (in CRR_market)  geom_proc_eq_pseudo_proj_True:\n  shows \"(\\<And>m. m \\<le>  n \\<Longrightarrow> geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    (pseudo_proj_True (n) x = pseudo_proj_True (n) y)\"", "lemma (in CRR_market)  proj_stoch_eq_pseudo_proj_True:\n  assumes \"proj_stoch_proc geom_proc m x = proj_stoch_proc geom_proc m y\"\n  shows \"pseudo_proj_True m x = pseudo_proj_True m y\"", "lemma (in CRR_market_viable) rn_rev_price_cond_expect:\n  assumes \"N = bernoulli_stream q\"\nand \"0 <q\"\nand \"q < 1\"\nand \"der \\<in> borel_measurable (G matur)\"\nand \"Suc n \\<le> matur\"\nshows \"expl_cond_expect N (proj_stoch_proc geom_proc n) (rn_rev_price N der matur (matur - Suc n)) w=\n  (q * rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True n w)  +\n      (1 - q) * rn_rev_price N der matur (matur - Suc n) (pseudo_proj_False n w))\"", "lemma (in CRR_market_viable) rn_price_eq_ind:\n  assumes \"N = bernoulli_stream q\"\nand \"n < matur\"\nand \"0 < q\"\nand \"q < 1\"\nand \"der \\<in> borel_measurable (G matur)\"\nshows \"(1+r) * rn_price N der matur n w = q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)\"", "lemma self_finance_updated_suc_suc:\n  assumes \"portfolio pf\"\n  and \"\\<forall>n. prices Mkt asset n w \\<noteq> 0\"\n  shows \"cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w = cls_val_process Mkt pf (Suc (Suc n)) w +\n    (prices Mkt asset (Suc (Suc n)) w / (prices Mkt asset (Suc n) w)) *\n      (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n     val_process Mkt pf (Suc n) w)\"", "lemma self_finance_updated_suc_0:\n  assumes \"portfolio pf\"\n  and \"\\<forall>n w. prices Mkt asset n w \\<noteq> 0\"\n  shows \"cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w = cls_val_process Mkt pf (Suc 0) w +\n    (prices Mkt asset (Suc 0) w / (prices Mkt asset 0 w)) *\n      (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)\"", "lemma self_finance_updated_ind:\n  assumes \"portfolio pf\"\n  and \"\\<forall>n w. prices Mkt asset n w \\<noteq> 0\"\n  shows \"cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w = cls_val_process Mkt pf (Suc n) w +\n    (prices Mkt asset (Suc n) w / (prices Mkt asset n w)) *\n      (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)\"", "lemma  (in rfr_disc_equity_market) self_finance_risk_free_update_ind:\n  assumes \"portfolio pf\"\n  shows \"cls_val_process Mkt (self_finance Mkt v pf risk_free_asset) (Suc n) w = cls_val_process Mkt pf (Suc n) w +\n    (1 + r) * (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w - val_process Mkt pf n w)\"", "lemma (in CRR_market) delta_pf_portfolio:\n  shows \"portfolio (delta_pf N der matur)\"", "lemma (in CRR_market) delta_pf_updated:\n  shows \"cls_val_process Mkt (delta_pf N der matur) (Suc n) w =\n    geom_proc (Suc n) w * delta_price N der matur n w\"", "lemma (in CRR_market) delta_pf_val_process:\n  shows \"val_process Mkt (delta_pf N der matur) n w =\n    geom_proc n w * delta_price N der matur n w\"", "lemma (in CRR_market) delta_hedging_cls_val_process:\n  shows \"cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n    geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) * (val_process Mkt (delta_hedging N der matur) n w - geom_proc n w * delta_price N der matur n w)\"", "lemma (in CRR_market_viable) delta_hedging_eq_derivative_price:\n  fixes der::\"bool stream \\<Rightarrow> real\" and matur::nat\n  assumes \"N = bernoulli_stream ((1 + r - d) / (u - d))\"\n  and \"der\\<in> borel_measurable (G matur)\"\n  shows \"\\<And>n w. n\\<le> matur \\<Longrightarrow>\n    val_process Mkt (delta_hedging N der matur) n w =\n    (rn_price N der matur) n w\"", "lemma (in CRR_market_viable) delta_hedging_same_cash_flow:\n  assumes \"der \\<in> borel_measurable (G matur)\"\nand \"N = bernoulli_stream ((1 + r - d) / (u - d))\"\n  shows \"cls_val_process Mkt (delta_hedging N der matur) matur w =\n    der w\"", "lemma (in CRR_market) delta_hedging_trading_strat:\n  assumes \"N = bernoulli_stream q\"\n  and \"0 < q\"\nand \"q < 1\"\nand \"der \\<in> borel_measurable (G matur)\"\n  shows \"trading_strategy (delta_hedging N der matur)\"", "lemma (in CRR_market) delta_hedging_self_financing:\n  shows \"self_financing Mkt (delta_hedging N der matur)\"", "lemma (in CRR_market_viable) delta_hedging_replicating:\n  assumes \"der \\<in> borel_measurable (G matur)\"\n  and \"N = bernoulli_stream ((1 + r - d) / (u - d))\"\n  shows \"replicating_portfolio (delta_hedging N der matur) der matur\"", "lemma (in CRR_market_viable) CRR_market_complete:\n  shows \"complete_market\"", "lemma subalgebras_filtration:\n  assumes \"filtration M F\"\nand \"\\<forall>t. subalgebra (F t) (G t)\"\nand \"\\<forall> s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s)\"\nshows \"filtration M G\"", "lemma subfilt_filt_equiv:\n  assumes \"filt_equiv F M N\"\nand \"\\<forall> t. subalgebra (F t) (G t)\"\nand \"\\<forall> s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s)\"\nshows \"filt_equiv G M N\"", "lemma (in CRR_market_viable) CRR_market_fair_price:\n  assumes \"pyf\\<in> borel_measurable (G matur)\"\n  shows \"fair_price Mkt\n    (\\<Sum> w\\<in> range (pseudo_proj_True matur). (prod (prob_component ((1 + r - d) / (u - d)) w) {0..<matur}) *\n      ((discounted_value r (\\<lambda>m. pyf) matur) w))\n    pyf matur\""], "translations": [["", "lemma (in CRR_market) case_asset:\n  assumes \"asset \\<in> stocks Mkt\"\n  shows \"asset = stk \\<or> asset = risk_free_asset\""], ["proof (prove)\ngoal (1 subgoal):\n 1. asset = stk \\<or> asset = risk_free_asset", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (asset = stk \\<or> asset = risk_free_asset) \\<Longrightarrow>\n    False", "assume \"\\<not> (asset = stk \\<or> asset = risk_free_asset)\""], ["proof (state)\nthis:\n  \\<not> (asset = stk \\<or> asset = risk_free_asset)\n\ngoal (1 subgoal):\n 1. \\<not> (asset = stk \\<or> asset = risk_free_asset) \\<Longrightarrow>\n    False", "hence \"asset \\<noteq> stk \\<and> asset \\<noteq> risk_free_asset\""], ["proof (prove)\nusing this:\n  \\<not> (asset = stk \\<or> asset = risk_free_asset)\n\ngoal (1 subgoal):\n 1. asset \\<noteq> stk \\<and> asset \\<noteq> risk_free_asset", "by simp"], ["proof (state)\nthis:\n  asset \\<noteq> stk \\<and> asset \\<noteq> risk_free_asset\n\ngoal (1 subgoal):\n 1. \\<not> (asset = stk \\<or> asset = risk_free_asset) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  asset \\<noteq> stk \\<and> asset \\<noteq> risk_free_asset\n\ngoal (1 subgoal):\n 1. \\<not> (asset = stk \\<or> asset = risk_free_asset) \\<Longrightarrow>\n    False", "have \"asset \\<in> {stk, risk_free_asset}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. asset \\<in> {stk, risk_free_asset}", "using assms stocks"], ["proof (prove)\nusing this:\n  asset \\<in> stocks Mkt\n  stocks Mkt = {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. asset \\<in> {stk, risk_free_asset}", "by simp"], ["proof (state)\nthis:\n  asset \\<in> {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. \\<not> (asset = stk \\<or> asset = risk_free_asset) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  asset \\<noteq> stk \\<and> asset \\<noteq> risk_free_asset\n  asset \\<in> {stk, risk_free_asset}", "show False"], ["proof (prove)\nusing this:\n  asset \\<noteq> stk \\<and> asset \\<noteq> risk_free_asset\n  asset \\<in> {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market)\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nshows bernoulli_gen_filtration: \"filtration N G\"\nand bernoulli_sigma_finite: \"\\<forall>n. sigma_finite_subalgebra N (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Filtration.filtration N G &&&\n    \\<forall>n. sigma_finite_subalgebra N (G n)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. Filtration.filtration N G\n 2. \\<forall>n. sigma_finite_subalgebra N (G n)", "show \"filtration N G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Filtration.filtration N G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Filtration.filtration N G", "have \"disc_filtr M (stoch_proc_filt M geom_proc borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc_filtr M (stoch_proc_filt M geom_proc borel)", "proof (rule stoch_proc_filt_disc_filtr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. random_variable borel (geom_proc i)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. random_variable borel (geom_proc i)", "show \"random_variable borel (geom_proc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable borel (geom_proc i)", "by (simp add: geom_rand_walk_borel_measurable)"], ["proof (state)\nthis:\n  random_variable borel (geom_proc i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  disc_filtr M (stoch_proc_filt M geom_proc borel)\n\ngoal (1 subgoal):\n 1. Filtration.filtration N G", "hence \"filtration M G\""], ["proof (prove)\nusing this:\n  disc_filtr M (stoch_proc_filt M geom_proc borel)\n\ngoal (1 subgoal):\n 1. Filtration.filtration M G", "using stock_filtration"], ["proof (prove)\nusing this:\n  disc_filtr M (stoch_proc_filt M geom_proc borel)\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. Filtration.filtration M G", "by (simp add: filtration_def disc_filtr_def)"], ["proof (state)\nthis:\n  Filtration.filtration M G\n\ngoal (1 subgoal):\n 1. Filtration.filtration N G", "have \"filt_equiv nat_filtration M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filt_equiv nat_filtration M N", "using pslt psgt"], ["proof (prove)\nusing this:\n  p < 1\n  0 < p\n\ngoal (1 subgoal):\n 1. filt_equiv nat_filtration M N", "by (simp add: assms bernoulli_stream_equiv)"], ["proof (state)\nthis:\n  filt_equiv nat_filtration M N\n\ngoal (1 subgoal):\n 1. Filtration.filtration N G", "hence \"sets N = sets M\""], ["proof (prove)\nusing this:\n  filt_equiv nat_filtration M N\n\ngoal (1 subgoal):\n 1. sets N = events", "unfolding filt_equiv_def"], ["proof (prove)\nusing this:\n  events = sets N \\<and>\n  Filtration.filtration M nat_filtration \\<and>\n  (\\<forall>t A.\n      A \\<in> sets (nat_filtration t) \\<longrightarrow>\n      (emeasure M A = 0) = (emeasure N A = 0))\n\ngoal (1 subgoal):\n 1. sets N = events", "by simp"], ["proof (state)\nthis:\n  sets N = events\n\ngoal (1 subgoal):\n 1. Filtration.filtration N G", "thus ?thesis"], ["proof (prove)\nusing this:\n  sets N = events\n\ngoal (1 subgoal):\n 1. Filtration.filtration N G", "unfolding filtration_def"], ["proof (prove)\nusing this:\n  sets N = events\n\ngoal (1 subgoal):\n 1. (\\<forall>t. subalgebra N (G t)) \\<and>\n    (\\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s))", "by (metis filtration_def \\<open>Filtration.filtration M G\\<close> sets_eq_imp_space_eq subalgebra_def)"], ["proof (state)\nthis:\n  Filtration.filtration N G\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Filtration.filtration N G\n\ngoal (1 subgoal):\n 1. \\<forall>n. sigma_finite_subalgebra N (G n)", "show \"\\<forall>n. sigma_finite_subalgebra N (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. sigma_finite_subalgebra N (G n)", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. \\<forall>n. sigma_finite_subalgebra N (G n)", "unfolding subalgebra_def"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. \\<forall>n. sigma_finite_subalgebra N (G n)", "using  filtration_def  subalgebra_sigma_finite"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  Filtration.filtration ?M ?F =\n  ((\\<forall>t. subalgebra ?M (?F t)) \\<and>\n   (\\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (?F t) (?F s)))\n  subalgebra M ?N \\<Longrightarrow> sigma_finite_subalgebra M ?N\n\ngoal (1 subgoal):\n 1. \\<forall>n. sigma_finite_subalgebra N (G n)", "by (metis \\<open>Filtration.filtration N G\\<close> bernoulli_stream_def prob_space.prob_space_stream_space\n        prob_space.subalgebra_sigma_finite prob_space_measure_pmf)"], ["proof (state)\nthis:\n  \\<forall>n. sigma_finite_subalgebra N (G n)\n\ngoal:\nNo subgoals!", "qed"], ["", "sublocale CRR_market \\<subseteq> rfr_disc_equity_market  _ G"], ["proof (prove)\ngoal (1 subgoal):\n 1. rfr_disc_equity_market M G Mkt r risk_free_asset", "proof (unfold_locales)"], ["proof (state)\ngoal (2 subgoals):\n 1. disc_filtr M G \\<and> sets (G \\<bottom>) = {{}, space M}\n 2. \\<forall>asset\\<in>stocks Mkt.\n       borel_adapt_stoch_proc G (prices Mkt asset)", "show  \"disc_filtr M G \\<and> sets (G \\<bottom>) = {{}, space M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc_filtr M G \\<and> sets (G \\<bottom>) = {{}, space M}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. disc_filtr M G\n 2. sets (G \\<bottom>) = {{}, space M}", "show \"sets (G \\<bottom>) = {{}, space M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (G \\<bottom>) = {{}, space M}", "using infinite_cts_filtration.stoch_proc_filt_triv_init stock_filtration geometric_process\n        geom_rand_walk_borel_adapted"], ["proof (prove)\nusing this:\n  \\<lbrakk>infinite_cts_filtration ?p ?M ?F;\n   borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration ?M)\n    ?X\\<rbrakk>\n  \\<Longrightarrow> init_triv_filt ?M (stoch_proc_filt ?M ?X borel)\n  G = stoch_proc_filt M geom_proc borel\n  geom_proc = geom_rand_walk u d init\n  borel_adapt_stoch_proc nat_filtration geom_proc\n\ngoal (1 subgoal):\n 1. sets (G \\<bottom>) = {{}, space M}", "by (meson infinite_coin_toss_space_axioms infinite_cts_filtration_axioms.intro infinite_cts_filtration_def\n          init_triv_filt_def)"], ["proof (state)\nthis:\n  sets (G \\<bottom>) = {{}, space M}\n\ngoal (1 subgoal):\n 1. disc_filtr M G", "show \"disc_filtr M G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc_filtr M G", "by (metis Filtration.filtration_def bernoulli bernoulli_gen_filtration disc_filtr_def psgt pslt)"], ["proof (state)\nthis:\n  disc_filtr M G\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  disc_filtr M G \\<and> sets (G \\<bottom>) = {{}, space M}\n\ngoal (1 subgoal):\n 1. \\<forall>asset\\<in>stocks Mkt.\n       borel_adapt_stoch_proc G (prices Mkt asset)", "show \"\\<forall>asset\\<in>stocks Mkt. borel_adapt_stoch_proc G (prices Mkt asset)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>asset\\<in>stocks Mkt.\n       borel_adapt_stoch_proc G (prices Mkt asset)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>asset\\<in>stocks Mkt.\n       borel_adapt_stoch_proc G (prices Mkt asset)", "have \"borel_adapt_stoch_proc G (prices Mkt stk)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc G (prices Mkt stk)", "using stk_price stock_filtration stoch_proc_filt_adapt"], ["proof (prove)\nusing this:\n  prices Mkt stk = geom_proc\n  G = stoch_proc_filt M geom_proc borel\n  (\\<And>n. ?X n \\<in> ?M \\<rightarrow>\\<^sub>M ?N) \\<Longrightarrow>\n  adapt_stoch_proc (stoch_proc_filt ?M ?X ?N) ?X ?N\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc G (prices Mkt stk)", "by (simp add: stoch_proc_filt_adapt geom_rand_walk_borel_measurable)"], ["proof (state)\nthis:\n  borel_adapt_stoch_proc G (prices Mkt stk)\n\ngoal (1 subgoal):\n 1. \\<forall>asset\\<in>stocks Mkt.\n       borel_adapt_stoch_proc G (prices Mkt asset)", "moreover"], ["proof (state)\nthis:\n  borel_adapt_stoch_proc G (prices Mkt stk)\n\ngoal (1 subgoal):\n 1. \\<forall>asset\\<in>stocks Mkt.\n       borel_adapt_stoch_proc G (prices Mkt asset)", "have \"borel_adapt_stoch_proc G (prices Mkt risk_free_asset)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc G (prices Mkt risk_free_asset)", "using \\<open>disc_filtr M G \\<and> sets (G \\<bottom>) = {{}, space M}\\<close> disc_filtr_prob_space.disc_rfr_proc_borel_adapted\n        disc_filtr_prob_space.intro disc_filtr_prob_space_axioms.intro prob_space_axioms rf_price"], ["proof (prove)\nusing this:\n  disc_filtr M G \\<and> sets (G \\<bottom>) = {{}, space M}\n  disc_filtr_prob_space ?M ?F \\<Longrightarrow>\n  borel_adapt_stoch_proc ?F (disc_rfr_proc ?r)\n  \\<lbrakk>prob_space ?M; disc_filtr_prob_space_axioms ?M ?F\\<rbrakk>\n  \\<Longrightarrow> disc_filtr_prob_space ?M ?F\n  disc_filtr ?M ?F \\<Longrightarrow> disc_filtr_prob_space_axioms ?M ?F\n  prob_space M\n  prices Mkt risk_free_asset = disc_rfr_proc r\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc G (prices Mkt risk_free_asset)", "by fastforce"], ["proof (state)\nthis:\n  borel_adapt_stoch_proc G (prices Mkt risk_free_asset)\n\ngoal (1 subgoal):\n 1. \\<forall>asset\\<in>stocks Mkt.\n       borel_adapt_stoch_proc G (prices Mkt asset)", "moreover"], ["proof (state)\nthis:\n  borel_adapt_stoch_proc G (prices Mkt risk_free_asset)\n\ngoal (1 subgoal):\n 1. \\<forall>asset\\<in>stocks Mkt.\n       borel_adapt_stoch_proc G (prices Mkt asset)", "have \"disc_filtr_prob_space M G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc_filtr_prob_space M G", "proof (unfold_locales)"], ["proof (state)\ngoal (1 subgoal):\n 1. disc_filtr M G", "show \"disc_filtr M G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc_filtr M G", "by (simp add: \\<open>disc_filtr M G \\<and> sets (G \\<bottom>) = {{}, space M}\\<close>)"], ["proof (state)\nthis:\n  disc_filtr M G\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  disc_filtr_prob_space M G\n\ngoal (1 subgoal):\n 1. \\<forall>asset\\<in>stocks Mkt.\n       borel_adapt_stoch_proc G (prices Mkt asset)", "ultimately"], ["proof (chain)\npicking this:\n  borel_adapt_stoch_proc G (prices Mkt stk)\n  borel_adapt_stoch_proc G (prices Mkt risk_free_asset)\n  disc_filtr_prob_space M G", "show ?thesis"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc G (prices Mkt stk)\n  borel_adapt_stoch_proc G (prices Mkt risk_free_asset)\n  disc_filtr_prob_space M G\n\ngoal (1 subgoal):\n 1. \\<forall>asset\\<in>stocks Mkt.\n       borel_adapt_stoch_proc G (prices Mkt asset)", "using stocks"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc G (prices Mkt stk)\n  borel_adapt_stoch_proc G (prices Mkt risk_free_asset)\n  disc_filtr_prob_space M G\n  stocks Mkt = {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. \\<forall>asset\\<in>stocks Mkt.\n       borel_adapt_stoch_proc G (prices Mkt asset)", "by force"], ["proof (state)\nthis:\n  \\<forall>asset\\<in>stocks Mkt. borel_adapt_stoch_proc G (prices Mkt asset)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>asset\\<in>stocks Mkt. borel_adapt_stoch_proc G (prices Mkt asset)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) two_stocks:\nshows \"stk \\<noteq> risk_free_asset\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stk \\<noteq> risk_free_asset", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> stk \\<noteq> risk_free_asset \\<Longrightarrow> False", "assume \"\\<not>stk \\<noteq> risk_free_asset\""], ["proof (state)\nthis:\n  \\<not> stk \\<noteq> risk_free_asset\n\ngoal (1 subgoal):\n 1. \\<not> stk \\<noteq> risk_free_asset \\<Longrightarrow> False", "hence \"disc_rfr_proc r = prices Mkt stk\""], ["proof (prove)\nusing this:\n  \\<not> stk \\<noteq> risk_free_asset\n\ngoal (1 subgoal):\n 1. disc_rfr_proc r = prices Mkt stk", "using rf_price"], ["proof (prove)\nusing this:\n  \\<not> stk \\<noteq> risk_free_asset\n  prices Mkt risk_free_asset = disc_rfr_proc r\n\ngoal (1 subgoal):\n 1. disc_rfr_proc r = prices Mkt stk", "by simp"], ["proof (state)\nthis:\n  disc_rfr_proc r = prices Mkt stk\n\ngoal (1 subgoal):\n 1. \\<not> stk \\<noteq> risk_free_asset \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  disc_rfr_proc r = prices Mkt stk\n\ngoal (1 subgoal):\n 1. \\<not> stk \\<noteq> risk_free_asset \\<Longrightarrow> False", "have \"... = geom_proc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prices Mkt stk = geom_proc", "using stk_price"], ["proof (prove)\nusing this:\n  prices Mkt stk = geom_proc\n\ngoal (1 subgoal):\n 1. prices Mkt stk = geom_proc", "by simp"], ["proof (state)\nthis:\n  prices Mkt stk = geom_proc\n\ngoal (1 subgoal):\n 1. \\<not> stk \\<noteq> risk_free_asset \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  disc_rfr_proc r = geom_proc", "have eqf: \"disc_rfr_proc r = geom_proc\""], ["proof (prove)\nusing this:\n  disc_rfr_proc r = geom_proc\n\ngoal (1 subgoal):\n 1. disc_rfr_proc r = geom_proc", "."], ["proof (state)\nthis:\n  disc_rfr_proc r = geom_proc\n\ngoal (1 subgoal):\n 1. \\<not> stk \\<noteq> risk_free_asset \\<Longrightarrow> False", "hence \"\\<forall>w. disc_rfr_proc r 0 w = geom_proc 0 w\""], ["proof (prove)\nusing this:\n  disc_rfr_proc r = geom_proc\n\ngoal (1 subgoal):\n 1. \\<forall>w. disc_rfr_proc r 0 w = geom_proc 0 w", "by simp"], ["proof (state)\nthis:\n  \\<forall>w. disc_rfr_proc r 0 w = geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<not> stk \\<noteq> risk_free_asset \\<Longrightarrow> False", "hence \"1 = init\""], ["proof (prove)\nusing this:\n  \\<forall>w. disc_rfr_proc r 0 w = geom_proc 0 w\n\ngoal (1 subgoal):\n 1. 1 = init", "using geometric_process"], ["proof (prove)\nusing this:\n  \\<forall>w. disc_rfr_proc r 0 w = geom_proc 0 w\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. 1 = init", "by simp"], ["proof (state)\nthis:\n  1 = init\n\ngoal (1 subgoal):\n 1. \\<not> stk \\<noteq> risk_free_asset \\<Longrightarrow> False", "have eqfs: \"\\<forall>w. disc_rfr_proc r (Suc 0) w = geom_proc (Suc 0) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w. disc_rfr_proc r (Suc 0) w = geom_proc (Suc 0) w", "using eqf"], ["proof (prove)\nusing this:\n  disc_rfr_proc r = geom_proc\n\ngoal (1 subgoal):\n 1. \\<forall>w. disc_rfr_proc r (Suc 0) w = geom_proc (Suc 0) w", "by simp"], ["proof (state)\nthis:\n  \\<forall>w. disc_rfr_proc r (Suc 0) w = geom_proc (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<not> stk \\<noteq> risk_free_asset \\<Longrightarrow> False", "hence \"disc_rfr_proc r (Suc 0) (sconst True) = geom_proc (Suc 0) (sconst True)\""], ["proof (prove)\nusing this:\n  \\<forall>w. disc_rfr_proc r (Suc 0) w = geom_proc (Suc 0) w\n\ngoal (1 subgoal):\n 1. disc_rfr_proc r (Suc 0) (sconst True) = geom_proc (Suc 0) (sconst True)", "by simp"], ["proof (state)\nthis:\n  disc_rfr_proc r (Suc 0) (sconst True) = geom_proc (Suc 0) (sconst True)\n\ngoal (1 subgoal):\n 1. \\<not> stk \\<noteq> risk_free_asset \\<Longrightarrow> False", "hence \"1+r = u\""], ["proof (prove)\nusing this:\n  disc_rfr_proc r (Suc 0) (sconst True) = geom_proc (Suc 0) (sconst True)\n\ngoal (1 subgoal):\n 1. 1 + r = u", "using geometric_process \\<open>1 = init\\<close>"], ["proof (prove)\nusing this:\n  disc_rfr_proc r (Suc 0) (sconst True) = geom_proc (Suc 0) (sconst True)\n  geom_proc = geom_rand_walk u d init\n  1 = init\n\ngoal (1 subgoal):\n 1. 1 + r = u", "by simp"], ["proof (state)\nthis:\n  1 + r = u\n\ngoal (1 subgoal):\n 1. \\<not> stk \\<noteq> risk_free_asset \\<Longrightarrow> False", "have \"disc_rfr_proc r (Suc 0) (sconst False) = geom_proc (Suc 0) (sconst False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc_rfr_proc r (Suc 0) (sconst False) =\n    geom_proc (Suc 0) (sconst False)", "using eqfs"], ["proof (prove)\nusing this:\n  \\<forall>w. disc_rfr_proc r (Suc 0) w = geom_proc (Suc 0) w\n\ngoal (1 subgoal):\n 1. disc_rfr_proc r (Suc 0) (sconst False) =\n    geom_proc (Suc 0) (sconst False)", "by simp"], ["proof (state)\nthis:\n  disc_rfr_proc r (Suc 0) (sconst False) = geom_proc (Suc 0) (sconst False)\n\ngoal (1 subgoal):\n 1. \\<not> stk \\<noteq> risk_free_asset \\<Longrightarrow> False", "hence \"1+r = d\""], ["proof (prove)\nusing this:\n  disc_rfr_proc r (Suc 0) (sconst False) = geom_proc (Suc 0) (sconst False)\n\ngoal (1 subgoal):\n 1. 1 + r = d", "using geometric_process \\<open>1 = init\\<close>"], ["proof (prove)\nusing this:\n  disc_rfr_proc r (Suc 0) (sconst False) = geom_proc (Suc 0) (sconst False)\n  geom_proc = geom_rand_walk u d init\n  1 = init\n\ngoal (1 subgoal):\n 1. 1 + r = d", "by simp"], ["proof (state)\nthis:\n  1 + r = d\n\ngoal (1 subgoal):\n 1. \\<not> stk \\<noteq> risk_free_asset \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using \\<open>1+r = u\\<close> \\<open>1+r = d\\<close> down_lt_up"], ["proof (prove)\nusing this:\n  1 + r = u\n  1 + r = d\n  d < u\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) stock_pf_vp_expand:\n  assumes \"stock_portfolio Mkt pf\"\n  shows \"val_process Mkt pf n w = geom_proc n w * pf stk (Suc n) w +\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt pf n w =\n    geom_proc n w * pf stk (Suc n) w +\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. val_process Mkt pf n w =\n    geom_proc n w * pf stk (Suc n) w +\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "have \"val_process Mkt pf n w =(sum (\\<lambda>x. ((prices Mkt) x n w) * (pf x (Suc n) w)) (stocks Mkt))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt pf n w =\n    (\\<Sum>x\\<in>stocks Mkt. prices Mkt x n w * pf x (Suc n) w)", "proof (rule subset_val_process')"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (stocks Mkt)\n 2. support_set pf \\<subseteq> stocks Mkt", "show \"finite (stocks Mkt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (stocks Mkt)", "using stocks"], ["proof (prove)\nusing this:\n  stocks Mkt = {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. finite (stocks Mkt)", "by auto"], ["proof (state)\nthis:\n  finite (stocks Mkt)\n\ngoal (1 subgoal):\n 1. support_set pf \\<subseteq> stocks Mkt", "show \"support_set pf \\<subseteq> stocks Mkt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. support_set pf \\<subseteq> stocks Mkt", "using assms"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n\ngoal (1 subgoal):\n 1. support_set pf \\<subseteq> stocks Mkt", "unfolding stock_portfolio_def"], ["proof (prove)\nusing this:\n  portfolio pf \\<and> support_set pf \\<subseteq> stocks Mkt\n\ngoal (1 subgoal):\n 1. support_set pf \\<subseteq> stocks Mkt", "by simp"], ["proof (state)\nthis:\n  support_set pf \\<subseteq> stocks Mkt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  val_process Mkt pf n w =\n  (\\<Sum>x\\<in>stocks Mkt. prices Mkt x n w * pf x (Suc n) w)\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n w =\n    geom_proc n w * pf stk (Suc n) w +\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "also"], ["proof (state)\nthis:\n  val_process Mkt pf n w =\n  (\\<Sum>x\\<in>stocks Mkt. prices Mkt x n w * pf x (Suc n) w)\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n w =\n    geom_proc n w * pf stk (Suc n) w +\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "have \"... = (\\<Sum>x\\<in> {stk, risk_free_asset}. ((prices Mkt) x n w) * (pf x (Suc n) w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>stocks Mkt. prices Mkt x n w * pf x (Suc n) w) =\n    (\\<Sum>x\\<in>{stk, risk_free_asset}. prices Mkt x n w * pf x (Suc n) w)", "using stocks"], ["proof (prove)\nusing this:\n  stocks Mkt = {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>stocks Mkt. prices Mkt x n w * pf x (Suc n) w) =\n    (\\<Sum>x\\<in>{stk, risk_free_asset}. prices Mkt x n w * pf x (Suc n) w)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>stocks Mkt. prices Mkt x n w * pf x (Suc n) w) =\n  (\\<Sum>x\\<in>{stk, risk_free_asset}. prices Mkt x n w * pf x (Suc n) w)\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n w =\n    geom_proc n w * pf stk (Suc n) w +\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>stocks Mkt. prices Mkt x n w * pf x (Suc n) w) =\n  (\\<Sum>x\\<in>{stk, risk_free_asset}. prices Mkt x n w * pf x (Suc n) w)\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n w =\n    geom_proc n w * pf stk (Suc n) w +\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "have \"... =  prices Mkt stk n w * pf stk (Suc n) w +\n    (\\<Sum> x\\<in> {risk_free_asset}. ((prices Mkt) x n w) * (pf x (Suc n) w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{stk, risk_free_asset}.\n       prices Mkt x n w * pf x (Suc n) w) =\n    prices Mkt stk n w * pf stk (Suc n) w +\n    (\\<Sum>x\\<in>{risk_free_asset}. prices Mkt x n w * pf x (Suc n) w)", "by (simp add:two_stocks)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{stk, risk_free_asset}. prices Mkt x n w * pf x (Suc n) w) =\n  prices Mkt stk n w * pf stk (Suc n) w +\n  (\\<Sum>x\\<in>{risk_free_asset}. prices Mkt x n w * pf x (Suc n) w)\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n w =\n    geom_proc n w * pf stk (Suc n) w +\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{stk, risk_free_asset}. prices Mkt x n w * pf x (Suc n) w) =\n  prices Mkt stk n w * pf stk (Suc n) w +\n  (\\<Sum>x\\<in>{risk_free_asset}. prices Mkt x n w * pf x (Suc n) w)\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n w =\n    geom_proc n w * pf stk (Suc n) w +\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "have \"... = prices Mkt stk n w * pf stk (Suc n) w +\n    prices Mkt risk_free_asset n w * pf risk_free_asset (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prices Mkt stk n w * pf stk (Suc n) w +\n    (\\<Sum>x\\<in>{risk_free_asset}. prices Mkt x n w * pf x (Suc n) w) =\n    prices Mkt stk n w * pf stk (Suc n) w +\n    prices Mkt risk_free_asset n w * pf risk_free_asset (Suc n) w", "by simp"], ["proof (state)\nthis:\n  prices Mkt stk n w * pf stk (Suc n) w +\n  (\\<Sum>x\\<in>{risk_free_asset}. prices Mkt x n w * pf x (Suc n) w) =\n  prices Mkt stk n w * pf stk (Suc n) w +\n  prices Mkt risk_free_asset n w * pf risk_free_asset (Suc n) w\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n w =\n    geom_proc n w * pf stk (Suc n) w +\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "also"], ["proof (state)\nthis:\n  prices Mkt stk n w * pf stk (Suc n) w +\n  (\\<Sum>x\\<in>{risk_free_asset}. prices Mkt x n w * pf x (Suc n) w) =\n  prices Mkt stk n w * pf stk (Suc n) w +\n  prices Mkt risk_free_asset n w * pf risk_free_asset (Suc n) w\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n w =\n    geom_proc n w * pf stk (Suc n) w +\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "have \"... = geom_proc n w * pf stk (Suc n) w + disc_rfr_proc r n w * pf risk_free_asset (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prices Mkt stk n w * pf stk (Suc n) w +\n    prices Mkt risk_free_asset n w * pf risk_free_asset (Suc n) w =\n    geom_proc n w * pf stk (Suc n) w +\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "using rf_price stk_price"], ["proof (prove)\nusing this:\n  prices Mkt risk_free_asset = disc_rfr_proc r\n  prices Mkt stk = geom_proc\n\ngoal (1 subgoal):\n 1. prices Mkt stk n w * pf stk (Suc n) w +\n    prices Mkt risk_free_asset n w * pf risk_free_asset (Suc n) w =\n    geom_proc n w * pf stk (Suc n) w +\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "by simp"], ["proof (state)\nthis:\n  prices Mkt stk n w * pf stk (Suc n) w +\n  prices Mkt risk_free_asset n w * pf risk_free_asset (Suc n) w =\n  geom_proc n w * pf stk (Suc n) w +\n  disc_rfr_proc r n w * pf risk_free_asset (Suc n) w\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n w =\n    geom_proc n w * pf stk (Suc n) w +\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "finally"], ["proof (chain)\npicking this:\n  val_process Mkt pf n w =\n  geom_proc n w * pf stk (Suc n) w +\n  disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "show ?thesis"], ["proof (prove)\nusing this:\n  val_process Mkt pf n w =\n  geom_proc n w * pf stk (Suc n) w +\n  disc_rfr_proc r n w * pf risk_free_asset (Suc n) w\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n w =\n    geom_proc n w * pf stk (Suc n) w +\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "."], ["proof (state)\nthis:\n  val_process Mkt pf n w =\n  geom_proc n w * pf stk (Suc n) w +\n  disc_rfr_proc r n w * pf risk_free_asset (Suc n) w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) stock_pf_uvp_expand:\n  assumes \"stock_portfolio Mkt pf\"\n  shows \"cls_val_process Mkt pf (Suc n) w = geom_proc (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w =\n    geom_proc (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w =\n    geom_proc (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w", "have \"cls_val_process Mkt pf (Suc n) w =(sum (\\<lambda>x. ((prices Mkt) x (Suc n) w) * (pf x (Suc n) w)) (stocks Mkt))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w =\n    (\\<Sum>x\\<in>stocks Mkt. prices Mkt x (Suc n) w * pf x (Suc n) w)", "proof (rule subset_cls_val_process')"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (stocks Mkt)\n 2. support_set pf \\<subseteq> stocks Mkt", "show \"finite (stocks Mkt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (stocks Mkt)", "using stocks"], ["proof (prove)\nusing this:\n  stocks Mkt = {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. finite (stocks Mkt)", "by auto"], ["proof (state)\nthis:\n  finite (stocks Mkt)\n\ngoal (1 subgoal):\n 1. support_set pf \\<subseteq> stocks Mkt", "show \"support_set pf \\<subseteq> stocks Mkt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. support_set pf \\<subseteq> stocks Mkt", "using assms"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n\ngoal (1 subgoal):\n 1. support_set pf \\<subseteq> stocks Mkt", "unfolding stock_portfolio_def"], ["proof (prove)\nusing this:\n  portfolio pf \\<and> support_set pf \\<subseteq> stocks Mkt\n\ngoal (1 subgoal):\n 1. support_set pf \\<subseteq> stocks Mkt", "by simp"], ["proof (state)\nthis:\n  support_set pf \\<subseteq> stocks Mkt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc n) w =\n  (\\<Sum>x\\<in>stocks Mkt. prices Mkt x (Suc n) w * pf x (Suc n) w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w =\n    geom_proc (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc n) w =\n  (\\<Sum>x\\<in>stocks Mkt. prices Mkt x (Suc n) w * pf x (Suc n) w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w =\n    geom_proc (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w", "have \"... = (\\<Sum>x\\<in> {stk, risk_free_asset}. ((prices Mkt) x (Suc n) w) * (pf x (Suc n) w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>stocks Mkt. prices Mkt x (Suc n) w * pf x (Suc n) w) =\n    (\\<Sum>x\\<in>{stk, risk_free_asset}.\n       prices Mkt x (Suc n) w * pf x (Suc n) w)", "using  stocks"], ["proof (prove)\nusing this:\n  stocks Mkt = {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>stocks Mkt. prices Mkt x (Suc n) w * pf x (Suc n) w) =\n    (\\<Sum>x\\<in>{stk, risk_free_asset}.\n       prices Mkt x (Suc n) w * pf x (Suc n) w)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>stocks Mkt. prices Mkt x (Suc n) w * pf x (Suc n) w) =\n  (\\<Sum>x\\<in>{stk, risk_free_asset}.\n     prices Mkt x (Suc n) w * pf x (Suc n) w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w =\n    geom_proc (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>stocks Mkt. prices Mkt x (Suc n) w * pf x (Suc n) w) =\n  (\\<Sum>x\\<in>{stk, risk_free_asset}.\n     prices Mkt x (Suc n) w * pf x (Suc n) w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w =\n    geom_proc (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w", "have \"... =  prices Mkt stk (Suc n) w * pf stk (Suc n) w +\n    (\\<Sum> x\\<in> {risk_free_asset}. ((prices Mkt) x (Suc n) w) * (pf x (Suc n) w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{stk, risk_free_asset}.\n       prices Mkt x (Suc n) w * pf x (Suc n) w) =\n    prices Mkt stk (Suc n) w * pf stk (Suc n) w +\n    (\\<Sum>x\\<in>{risk_free_asset}. prices Mkt x (Suc n) w * pf x (Suc n) w)", "by (simp add:two_stocks)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{stk, risk_free_asset}.\n     prices Mkt x (Suc n) w * pf x (Suc n) w) =\n  prices Mkt stk (Suc n) w * pf stk (Suc n) w +\n  (\\<Sum>x\\<in>{risk_free_asset}. prices Mkt x (Suc n) w * pf x (Suc n) w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w =\n    geom_proc (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{stk, risk_free_asset}.\n     prices Mkt x (Suc n) w * pf x (Suc n) w) =\n  prices Mkt stk (Suc n) w * pf stk (Suc n) w +\n  (\\<Sum>x\\<in>{risk_free_asset}. prices Mkt x (Suc n) w * pf x (Suc n) w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w =\n    geom_proc (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w", "have \"... = prices Mkt stk (Suc n) w * pf stk (Suc n) w +\n    prices Mkt risk_free_asset (Suc n) w * pf risk_free_asset (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prices Mkt stk (Suc n) w * pf stk (Suc n) w +\n    (\\<Sum>x\\<in>{risk_free_asset}.\n       prices Mkt x (Suc n) w * pf x (Suc n) w) =\n    prices Mkt stk (Suc n) w * pf stk (Suc n) w +\n    prices Mkt risk_free_asset (Suc n) w * pf risk_free_asset (Suc n) w", "by simp"], ["proof (state)\nthis:\n  prices Mkt stk (Suc n) w * pf stk (Suc n) w +\n  (\\<Sum>x\\<in>{risk_free_asset}. prices Mkt x (Suc n) w * pf x (Suc n) w) =\n  prices Mkt stk (Suc n) w * pf stk (Suc n) w +\n  prices Mkt risk_free_asset (Suc n) w * pf risk_free_asset (Suc n) w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w =\n    geom_proc (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w", "also"], ["proof (state)\nthis:\n  prices Mkt stk (Suc n) w * pf stk (Suc n) w +\n  (\\<Sum>x\\<in>{risk_free_asset}. prices Mkt x (Suc n) w * pf x (Suc n) w) =\n  prices Mkt stk (Suc n) w * pf stk (Suc n) w +\n  prices Mkt risk_free_asset (Suc n) w * pf risk_free_asset (Suc n) w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w =\n    geom_proc (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w", "have \"... = geom_proc (Suc n) w * pf stk (Suc n) w + disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prices Mkt stk (Suc n) w * pf stk (Suc n) w +\n    prices Mkt risk_free_asset (Suc n) w * pf risk_free_asset (Suc n) w =\n    geom_proc (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w", "using rf_price stk_price"], ["proof (prove)\nusing this:\n  prices Mkt risk_free_asset = disc_rfr_proc r\n  prices Mkt stk = geom_proc\n\ngoal (1 subgoal):\n 1. prices Mkt stk (Suc n) w * pf stk (Suc n) w +\n    prices Mkt risk_free_asset (Suc n) w * pf risk_free_asset (Suc n) w =\n    geom_proc (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w", "by simp"], ["proof (state)\nthis:\n  prices Mkt stk (Suc n) w * pf stk (Suc n) w +\n  prices Mkt risk_free_asset (Suc n) w * pf risk_free_asset (Suc n) w =\n  geom_proc (Suc n) w * pf stk (Suc n) w +\n  disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w =\n    geom_proc (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w", "finally"], ["proof (chain)\npicking this:\n  cls_val_process Mkt pf (Suc n) w =\n  geom_proc (Suc n) w * pf stk (Suc n) w +\n  disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w", "show ?thesis"], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf (Suc n) w =\n  geom_proc (Suc n) w * pf stk (Suc n) w +\n  disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w =\n    geom_proc (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w", "."], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc n) w =\n  geom_proc (Suc n) w * pf stk (Suc n) w +\n  disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) pos_pf_neg_uvp:\n  assumes \"stock_portfolio Mkt pf\"\n  and \"d < 1+r\"\n  and \"0 < pf stk (Suc n) (spick w n False)\"\n  and \"val_process Mkt pf n (spick w n False) \\<le> 0\"\nshows \"cls_val_process Mkt pf (Suc n) (spick w n False) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n False) < 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n False) < 0", "define wnf where \"wnf = spick w n False\""], ["proof (state)\nthis:\n  wnf = spick w n False\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n False) < 0", "have \"cls_val_process Mkt pf (Suc n) (spick w n False) =\n    geom_proc (Suc n) wnf * pf stk (Suc n) wnf +\n    disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n False) =\n    geom_proc (Suc n) wnf * pf stk (Suc n) wnf +\n    disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf", "unfolding wnf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n False) =\n    geom_proc (Suc n) (spick w n False) * pf stk (Suc n) (spick w n False) +\n    disc_rfr_proc r (Suc n) (spick w n False) *\n    pf risk_free_asset (Suc n) (spick w n False)", "using assms"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  d < 1 + r\n  0 < pf stk (Suc n) (spick w n False)\n  val_process Mkt pf n (spick w n False) \\<le> 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n False) =\n    geom_proc (Suc n) (spick w n False) * pf stk (Suc n) (spick w n False) +\n    disc_rfr_proc r (Suc n) (spick w n False) *\n    pf risk_free_asset (Suc n) (spick w n False)", "by (simp add:stock_pf_uvp_expand)"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc n) (spick w n False) =\n  geom_proc (Suc n) wnf * pf stk (Suc n) wnf +\n  disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n False) < 0", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc n) (spick w n False) =\n  geom_proc (Suc n) wnf * pf stk (Suc n) wnf +\n  disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n False) < 0", "have \"... = d * geom_proc n wnf * pf stk (Suc n) wnf + disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) wnf * pf stk (Suc n) wnf +\n    disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf =\n    d * geom_proc n wnf * pf stk (Suc n) wnf +\n    disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf", "unfolding wnf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n False) * pf stk (Suc n) (spick w n False) +\n    disc_rfr_proc r (Suc n) (spick w n False) *\n    pf risk_free_asset (Suc n) (spick w n False) =\n    d * geom_proc n (spick w n False) * pf stk (Suc n) (spick w n False) +\n    disc_rfr_proc r (Suc n) (spick w n False) *\n    pf risk_free_asset (Suc n) (spick w n False)", "using geometric_process spickI[of n w False]"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n  stake n (spick w n False) = stake n w \\<and> spick w n False !! n = False\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n False) * pf stk (Suc n) (spick w n False) +\n    disc_rfr_proc r (Suc n) (spick w n False) *\n    pf risk_free_asset (Suc n) (spick w n False) =\n    d * geom_proc n (spick w n False) * pf stk (Suc n) (spick w n False) +\n    disc_rfr_proc r (Suc n) (spick w n False) *\n    pf risk_free_asset (Suc n) (spick w n False)", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc n) wnf * pf stk (Suc n) wnf +\n  disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf =\n  d * geom_proc n wnf * pf stk (Suc n) wnf +\n  disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n False) < 0", "also"], ["proof (state)\nthis:\n  geom_proc (Suc n) wnf * pf stk (Suc n) wnf +\n  disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf =\n  d * geom_proc n wnf * pf stk (Suc n) wnf +\n  disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n False) < 0", "have \"... = d * geom_proc n wnf * pf stk (Suc n) wnf + (1+r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d * geom_proc n wnf * pf stk (Suc n) wnf +\n    disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf =\n    d * geom_proc n wnf * pf stk (Suc n) wnf +\n    (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf", "by simp"], ["proof (state)\nthis:\n  d * geom_proc n wnf * pf stk (Suc n) wnf +\n  disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf =\n  d * geom_proc n wnf * pf stk (Suc n) wnf +\n  (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n False) < 0", "also"], ["proof (state)\nthis:\n  d * geom_proc n wnf * pf stk (Suc n) wnf +\n  disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf =\n  d * geom_proc n wnf * pf stk (Suc n) wnf +\n  (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n False) < 0", "have \"... < (1+r) * geom_proc n wnf * pf stk (Suc n) wnf + (1+r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d * geom_proc n wnf * pf stk (Suc n) wnf +\n    (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf\n    < (1 + r) * geom_proc n wnf * pf stk (Suc n) wnf +\n      (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf", "unfolding wnf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. d * geom_proc n (spick w n False) * pf stk (Suc n) (spick w n False) +\n    (1 + r) * disc_rfr_proc r n (spick w n False) *\n    pf risk_free_asset (Suc n) (spick w n False)\n    < (1 + r) * geom_proc n (spick w n False) *\n      pf stk (Suc n) (spick w n False) +\n      (1 + r) * disc_rfr_proc r n (spick w n False) *\n      pf risk_free_asset (Suc n) (spick w n False)", "using assms geom_rand_walk_strictly_positive S0_positive\n      down_positive down_lt_up"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  d < 1 + r\n  0 < pf stk (Suc n) (spick w n False)\n  val_process Mkt pf n (spick w n False) \\<le> 0\n  \\<lbrakk>0 < init; 0 < d; d < u\\<rbrakk>\n  \\<Longrightarrow> \\<forall>n w. 0 < geom_proc n w\n  0 < init\n  0 < d\n  d < u\n\ngoal (1 subgoal):\n 1. d * geom_proc n (spick w n False) * pf stk (Suc n) (spick w n False) +\n    (1 + r) * disc_rfr_proc r n (spick w n False) *\n    pf risk_free_asset (Suc n) (spick w n False)\n    < (1 + r) * geom_proc n (spick w n False) *\n      pf stk (Suc n) (spick w n False) +\n      (1 + r) * disc_rfr_proc r n (spick w n False) *\n      pf risk_free_asset (Suc n) (spick w n False)", "by simp"], ["proof (state)\nthis:\n  d * geom_proc n wnf * pf stk (Suc n) wnf +\n  (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf\n  < (1 + r) * geom_proc n wnf * pf stk (Suc n) wnf +\n    (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n False) < 0", "also"], ["proof (state)\nthis:\n  d * geom_proc n wnf * pf stk (Suc n) wnf +\n  (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf\n  < (1 + r) * geom_proc n wnf * pf stk (Suc n) wnf +\n    (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n False) < 0", "have \"... = (1+r) * (geom_proc n wnf * pf stk (Suc n) wnf + disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * geom_proc n wnf * pf stk (Suc n) wnf +\n    (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf =\n    (1 + r) *\n    (geom_proc n wnf * pf stk (Suc n) wnf +\n     disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf)", "by (simp add: distrib_left)"], ["proof (state)\nthis:\n  (1 + r) * geom_proc n wnf * pf stk (Suc n) wnf +\n  (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf =\n  (1 + r) *\n  (geom_proc n wnf * pf stk (Suc n) wnf +\n   disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n False) < 0", "also"], ["proof (state)\nthis:\n  (1 + r) * geom_proc n wnf * pf stk (Suc n) wnf +\n  (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf =\n  (1 + r) *\n  (geom_proc n wnf * pf stk (Suc n) wnf +\n   disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n False) < 0", "have \"... = (1+r) * val_process Mkt pf n wnf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) *\n    (geom_proc n wnf * pf stk (Suc n) wnf +\n     disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf) =\n    (1 + r) * val_process Mkt pf n wnf", "using stock_pf_vp_expand assms"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt ?pf \\<Longrightarrow>\n  val_process Mkt ?pf ?n ?w =\n  geom_proc ?n ?w * ?pf stk (Suc ?n) ?w +\n  disc_rfr_proc r ?n ?w * ?pf risk_free_asset (Suc ?n) ?w\n  stock_portfolio Mkt pf\n  d < 1 + r\n  0 < pf stk (Suc n) (spick w n False)\n  val_process Mkt pf n (spick w n False) \\<le> 0\n\ngoal (1 subgoal):\n 1. (1 + r) *\n    (geom_proc n wnf * pf stk (Suc n) wnf +\n     disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf) =\n    (1 + r) * val_process Mkt pf n wnf", "by simp"], ["proof (state)\nthis:\n  (1 + r) *\n  (geom_proc n wnf * pf stk (Suc n) wnf +\n   disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf) =\n  (1 + r) * val_process Mkt pf n wnf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n False) < 0", "also"], ["proof (state)\nthis:\n  (1 + r) *\n  (geom_proc n wnf * pf stk (Suc n) wnf +\n   disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf) =\n  (1 + r) * val_process Mkt pf n wnf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n False) < 0", "have \"... \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * val_process Mkt pf n wnf \\<le> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (1 + r) * val_process Mkt pf n wnf \\<le> 0", "have \"0 < 1+r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 1 + r", "using assms down_positive"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  d < 1 + r\n  0 < pf stk (Suc n) (spick w n False)\n  val_process Mkt pf n (spick w n False) \\<le> 0\n  0 < d\n\ngoal (1 subgoal):\n 1. 0 < 1 + r", "by simp"], ["proof (state)\nthis:\n  0 < 1 + r\n\ngoal (1 subgoal):\n 1. (1 + r) * val_process Mkt pf n wnf \\<le> 0", "moreover"], ["proof (state)\nthis:\n  0 < 1 + r\n\ngoal (1 subgoal):\n 1. (1 + r) * val_process Mkt pf n wnf \\<le> 0", "have \"val_process Mkt pf n wnf \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt pf n wnf \\<le> 0", "using assms"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  d < 1 + r\n  0 < pf stk (Suc n) (spick w n False)\n  val_process Mkt pf n (spick w n False) \\<le> 0\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n wnf \\<le> 0", "unfolding wnf_def"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  d < 1 + r\n  0 < pf stk (Suc n) (spick w n False)\n  val_process Mkt pf n (spick w n False) \\<le> 0\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n (spick w n False) \\<le> 0", "by simp"], ["proof (state)\nthis:\n  val_process Mkt pf n wnf \\<le> 0\n\ngoal (1 subgoal):\n 1. (1 + r) * val_process Mkt pf n wnf \\<le> 0", "ultimately"], ["proof (chain)\npicking this:\n  0 < 1 + r\n  val_process Mkt pf n wnf \\<le> 0", "show \"(1+r) * (val_process Mkt pf n wnf) \\<le>  0\""], ["proof (prove)\nusing this:\n  0 < 1 + r\n  val_process Mkt pf n wnf \\<le> 0\n\ngoal (1 subgoal):\n 1. (1 + r) * val_process Mkt pf n wnf \\<le> 0", "unfolding wnf_def"], ["proof (prove)\nusing this:\n  0 < 1 + r\n  val_process Mkt pf n (spick w n False) \\<le> 0\n\ngoal (1 subgoal):\n 1. (1 + r) * val_process Mkt pf n (spick w n False) \\<le> 0", "using less_eq_real_def[of 0 \"1+r\"] mult_nonneg_nonpos[of \"1+r\" \"val_process Mkt pf n (spick w n False)\"]"], ["proof (prove)\nusing this:\n  0 < 1 + r\n  val_process Mkt pf n (spick w n False) \\<le> 0\n  (0 \\<le> 1 + r) = (0 < 1 + r \\<or> 0 = 1 + r)\n  \\<lbrakk>0 \\<le> 1 + r;\n   val_process Mkt pf n (spick w n False) \\<le> 0\\<rbrakk>\n  \\<Longrightarrow> (1 + r) * val_process Mkt pf n (spick w n False) \\<le> 0\n\ngoal (1 subgoal):\n 1. (1 + r) * val_process Mkt pf n (spick w n False) \\<le> 0", "by simp"], ["proof (state)\nthis:\n  (1 + r) * val_process Mkt pf n wnf \\<le> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (1 + r) * val_process Mkt pf n wnf \\<le> 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n False) < 0", "finally"], ["proof (chain)\npicking this:\n  cls_val_process Mkt pf (Suc n) (spick w n False) < 0", "show ?thesis"], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf (Suc n) (spick w n False) < 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n False) < 0", "."], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc n) (spick w n False) < 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) neg_pf_neg_uvp:\n  assumes \"stock_portfolio Mkt pf\"\n  and \"1+r < u\"\n  and \"pf stk (Suc n) (spick w n True) < 0\"\n  and \"val_process Mkt pf n (spick w n True) \\<le> 0\"\nshows \"cls_val_process Mkt pf (Suc n) (spick w n True) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n True) < 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n True) < 0", "define wnf where \"wnf = spick w n True\""], ["proof (state)\nthis:\n  wnf = spick w n True\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n True) < 0", "have \"cls_val_process Mkt pf (Suc n) (spick w n True) =\n    geom_proc (Suc n) wnf * pf stk (Suc n) wnf +\n    disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n True) =\n    geom_proc (Suc n) wnf * pf stk (Suc n) wnf +\n    disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf", "unfolding wnf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n True) =\n    geom_proc (Suc n) (spick w n True) * pf stk (Suc n) (spick w n True) +\n    disc_rfr_proc r (Suc n) (spick w n True) *\n    pf risk_free_asset (Suc n) (spick w n True)", "using assms"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  1 + r < u\n  pf stk (Suc n) (spick w n True) < 0\n  val_process Mkt pf n (spick w n True) \\<le> 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n True) =\n    geom_proc (Suc n) (spick w n True) * pf stk (Suc n) (spick w n True) +\n    disc_rfr_proc r (Suc n) (spick w n True) *\n    pf risk_free_asset (Suc n) (spick w n True)", "by (simp add:stock_pf_uvp_expand)"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc n) (spick w n True) =\n  geom_proc (Suc n) wnf * pf stk (Suc n) wnf +\n  disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n True) < 0", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc n) (spick w n True) =\n  geom_proc (Suc n) wnf * pf stk (Suc n) wnf +\n  disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n True) < 0", "have \"... = u * geom_proc n wnf * pf stk (Suc n) wnf + disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) wnf * pf stk (Suc n) wnf +\n    disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf =\n    u * geom_proc n wnf * pf stk (Suc n) wnf +\n    disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf", "unfolding wnf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n True) * pf stk (Suc n) (spick w n True) +\n    disc_rfr_proc r (Suc n) (spick w n True) *\n    pf risk_free_asset (Suc n) (spick w n True) =\n    u * geom_proc n (spick w n True) * pf stk (Suc n) (spick w n True) +\n    disc_rfr_proc r (Suc n) (spick w n True) *\n    pf risk_free_asset (Suc n) (spick w n True)", "using geometric_process spickI[of n w True]"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n  stake n (spick w n True) = stake n w \\<and> spick w n True !! n = True\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n True) * pf stk (Suc n) (spick w n True) +\n    disc_rfr_proc r (Suc n) (spick w n True) *\n    pf risk_free_asset (Suc n) (spick w n True) =\n    u * geom_proc n (spick w n True) * pf stk (Suc n) (spick w n True) +\n    disc_rfr_proc r (Suc n) (spick w n True) *\n    pf risk_free_asset (Suc n) (spick w n True)", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc n) wnf * pf stk (Suc n) wnf +\n  disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf =\n  u * geom_proc n wnf * pf stk (Suc n) wnf +\n  disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n True) < 0", "also"], ["proof (state)\nthis:\n  geom_proc (Suc n) wnf * pf stk (Suc n) wnf +\n  disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf =\n  u * geom_proc n wnf * pf stk (Suc n) wnf +\n  disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n True) < 0", "have \"... = u * geom_proc n wnf * pf stk (Suc n) wnf + (1+r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u * geom_proc n wnf * pf stk (Suc n) wnf +\n    disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf =\n    u * geom_proc n wnf * pf stk (Suc n) wnf +\n    (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf", "by simp"], ["proof (state)\nthis:\n  u * geom_proc n wnf * pf stk (Suc n) wnf +\n  disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf =\n  u * geom_proc n wnf * pf stk (Suc n) wnf +\n  (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n True) < 0", "also"], ["proof (state)\nthis:\n  u * geom_proc n wnf * pf stk (Suc n) wnf +\n  disc_rfr_proc r (Suc n) wnf * pf risk_free_asset (Suc n) wnf =\n  u * geom_proc n wnf * pf stk (Suc n) wnf +\n  (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n True) < 0", "have \"... < (1+r) * geom_proc n wnf * pf stk (Suc n) wnf + (1+r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u * geom_proc n wnf * pf stk (Suc n) wnf +\n    (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf\n    < (1 + r) * geom_proc n wnf * pf stk (Suc n) wnf +\n      (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf", "unfolding wnf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. u * geom_proc n (spick w n True) * pf stk (Suc n) (spick w n True) +\n    (1 + r) * disc_rfr_proc r n (spick w n True) *\n    pf risk_free_asset (Suc n) (spick w n True)\n    < (1 + r) * geom_proc n (spick w n True) *\n      pf stk (Suc n) (spick w n True) +\n      (1 + r) * disc_rfr_proc r n (spick w n True) *\n      pf risk_free_asset (Suc n) (spick w n True)", "using assms geom_rand_walk_strictly_positive S0_positive\n      down_positive down_lt_up"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  1 + r < u\n  pf stk (Suc n) (spick w n True) < 0\n  val_process Mkt pf n (spick w n True) \\<le> 0\n  \\<lbrakk>0 < init; 0 < d; d < u\\<rbrakk>\n  \\<Longrightarrow> \\<forall>n w. 0 < geom_proc n w\n  0 < init\n  0 < d\n  d < u\n\ngoal (1 subgoal):\n 1. u * geom_proc n (spick w n True) * pf stk (Suc n) (spick w n True) +\n    (1 + r) * disc_rfr_proc r n (spick w n True) *\n    pf risk_free_asset (Suc n) (spick w n True)\n    < (1 + r) * geom_proc n (spick w n True) *\n      pf stk (Suc n) (spick w n True) +\n      (1 + r) * disc_rfr_proc r n (spick w n True) *\n      pf risk_free_asset (Suc n) (spick w n True)", "by simp"], ["proof (state)\nthis:\n  u * geom_proc n wnf * pf stk (Suc n) wnf +\n  (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf\n  < (1 + r) * geom_proc n wnf * pf stk (Suc n) wnf +\n    (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n True) < 0", "also"], ["proof (state)\nthis:\n  u * geom_proc n wnf * pf stk (Suc n) wnf +\n  (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf\n  < (1 + r) * geom_proc n wnf * pf stk (Suc n) wnf +\n    (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n True) < 0", "have \"... = (1+r) * (geom_proc n wnf * pf stk (Suc n) wnf + disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * geom_proc n wnf * pf stk (Suc n) wnf +\n    (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf =\n    (1 + r) *\n    (geom_proc n wnf * pf stk (Suc n) wnf +\n     disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf)", "by (simp add: distrib_left)"], ["proof (state)\nthis:\n  (1 + r) * geom_proc n wnf * pf stk (Suc n) wnf +\n  (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf =\n  (1 + r) *\n  (geom_proc n wnf * pf stk (Suc n) wnf +\n   disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n True) < 0", "also"], ["proof (state)\nthis:\n  (1 + r) * geom_proc n wnf * pf stk (Suc n) wnf +\n  (1 + r) * disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf =\n  (1 + r) *\n  (geom_proc n wnf * pf stk (Suc n) wnf +\n   disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n True) < 0", "have \"... = (1+r) * val_process Mkt pf n wnf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) *\n    (geom_proc n wnf * pf stk (Suc n) wnf +\n     disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf) =\n    (1 + r) * val_process Mkt pf n wnf", "using stock_pf_vp_expand assms"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt ?pf \\<Longrightarrow>\n  val_process Mkt ?pf ?n ?w =\n  geom_proc ?n ?w * ?pf stk (Suc ?n) ?w +\n  disc_rfr_proc r ?n ?w * ?pf risk_free_asset (Suc ?n) ?w\n  stock_portfolio Mkt pf\n  1 + r < u\n  pf stk (Suc n) (spick w n True) < 0\n  val_process Mkt pf n (spick w n True) \\<le> 0\n\ngoal (1 subgoal):\n 1. (1 + r) *\n    (geom_proc n wnf * pf stk (Suc n) wnf +\n     disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf) =\n    (1 + r) * val_process Mkt pf n wnf", "by simp"], ["proof (state)\nthis:\n  (1 + r) *\n  (geom_proc n wnf * pf stk (Suc n) wnf +\n   disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf) =\n  (1 + r) * val_process Mkt pf n wnf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n True) < 0", "also"], ["proof (state)\nthis:\n  (1 + r) *\n  (geom_proc n wnf * pf stk (Suc n) wnf +\n   disc_rfr_proc r n wnf * pf risk_free_asset (Suc n) wnf) =\n  (1 + r) * val_process Mkt pf n wnf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n True) < 0", "have \"... \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * val_process Mkt pf n wnf \\<le> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (1 + r) * val_process Mkt pf n wnf \\<le> 0", "have \"0 < 1+r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 1 + r", "using acceptable_rate"], ["proof (prove)\nusing this:\n  - 1 < r\n\ngoal (1 subgoal):\n 1. 0 < 1 + r", "by simp"], ["proof (state)\nthis:\n  0 < 1 + r\n\ngoal (1 subgoal):\n 1. (1 + r) * val_process Mkt pf n wnf \\<le> 0", "moreover"], ["proof (state)\nthis:\n  0 < 1 + r\n\ngoal (1 subgoal):\n 1. (1 + r) * val_process Mkt pf n wnf \\<le> 0", "have \"val_process Mkt pf n wnf \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt pf n wnf \\<le> 0", "using assms"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  1 + r < u\n  pf stk (Suc n) (spick w n True) < 0\n  val_process Mkt pf n (spick w n True) \\<le> 0\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n wnf \\<le> 0", "unfolding wnf_def"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  1 + r < u\n  pf stk (Suc n) (spick w n True) < 0\n  val_process Mkt pf n (spick w n True) \\<le> 0\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n (spick w n True) \\<le> 0", "by simp"], ["proof (state)\nthis:\n  val_process Mkt pf n wnf \\<le> 0\n\ngoal (1 subgoal):\n 1. (1 + r) * val_process Mkt pf n wnf \\<le> 0", "ultimately"], ["proof (chain)\npicking this:\n  0 < 1 + r\n  val_process Mkt pf n wnf \\<le> 0", "show \"(1+r) * (val_process Mkt pf n wnf) \\<le>  0\""], ["proof (prove)\nusing this:\n  0 < 1 + r\n  val_process Mkt pf n wnf \\<le> 0\n\ngoal (1 subgoal):\n 1. (1 + r) * val_process Mkt pf n wnf \\<le> 0", "unfolding wnf_def"], ["proof (prove)\nusing this:\n  0 < 1 + r\n  val_process Mkt pf n (spick w n True) \\<le> 0\n\ngoal (1 subgoal):\n 1. (1 + r) * val_process Mkt pf n (spick w n True) \\<le> 0", "using less_eq_real_def[of 0 \"1+r\"] mult_nonneg_nonpos[of \"1+r\" \"val_process Mkt pf n (spick w n True)\"]"], ["proof (prove)\nusing this:\n  0 < 1 + r\n  val_process Mkt pf n (spick w n True) \\<le> 0\n  (0 \\<le> 1 + r) = (0 < 1 + r \\<or> 0 = 1 + r)\n  \\<lbrakk>0 \\<le> 1 + r;\n   val_process Mkt pf n (spick w n True) \\<le> 0\\<rbrakk>\n  \\<Longrightarrow> (1 + r) * val_process Mkt pf n (spick w n True) \\<le> 0\n\ngoal (1 subgoal):\n 1. (1 + r) * val_process Mkt pf n (spick w n True) \\<le> 0", "by simp"], ["proof (state)\nthis:\n  (1 + r) * val_process Mkt pf n wnf \\<le> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (1 + r) * val_process Mkt pf n wnf \\<le> 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n True) < 0", "finally"], ["proof (chain)\npicking this:\n  cls_val_process Mkt pf (Suc n) (spick w n True) < 0", "show ?thesis"], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf (Suc n) (spick w n True) < 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick w n True) < 0", "."], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc n) (spick w n True) < 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) zero_pf_neg_uvp:\n  assumes \"stock_portfolio Mkt pf\"\n  and \"pf stk (Suc n) w = 0\"\n  and \"pf risk_free_asset (Suc n) w \\<noteq> 0\"\n  and \"val_process Mkt pf n w \\<le> 0\"\nshows \"cls_val_process Mkt pf (Suc n) w < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w < 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w < 0", "have \"cls_val_process Mkt pf (Suc n) w =\n    S (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w =\n    S (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w", "using assms"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  pf stk (Suc n) w = 0\n  pf risk_free_asset (Suc n) w \\<noteq> 0\n  val_process Mkt pf n w \\<le> 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w =\n    S (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w", "by (simp add:stock_pf_uvp_expand)"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc n) w =\n  S (Suc n) w * pf stk (Suc n) w +\n  disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w < 0", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc n) w =\n  S (Suc n) w * pf stk (Suc n) w +\n  disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w < 0", "have \"... = disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w =\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w", "using assms"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  pf stk (Suc n) w = 0\n  pf risk_free_asset (Suc n) w \\<noteq> 0\n  val_process Mkt pf n w \\<le> 0\n\ngoal (1 subgoal):\n 1. S (Suc n) w * pf stk (Suc n) w +\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w =\n    disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w", "by simp"], ["proof (state)\nthis:\n  S (Suc n) w * pf stk (Suc n) w +\n  disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w =\n  disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w < 0", "also"], ["proof (state)\nthis:\n  S (Suc n) w * pf stk (Suc n) w +\n  disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w =\n  disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w < 0", "have \"... = (1+r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w =\n    (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "by simp"], ["proof (state)\nthis:\n  disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w =\n  (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w < 0", "also"], ["proof (state)\nthis:\n  disc_rfr_proc r (Suc n) w * pf risk_free_asset (Suc n) w =\n  (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w < 0", "have \"... < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "have \"0 < 1+r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 1 + r", "using acceptable_rate"], ["proof (prove)\nusing this:\n  - 1 < r\n\ngoal (1 subgoal):\n 1. 0 < 1 + r", "by simp"], ["proof (state)\nthis:\n  0 < 1 + r\n\ngoal (1 subgoal):\n 1. (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "moreover"], ["proof (state)\nthis:\n  0 < 1 + r\n\ngoal (1 subgoal):\n 1. (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "have \"0 < disc_rfr_proc r n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < disc_rfr_proc r n w", "using acceptable_rate"], ["proof (prove)\nusing this:\n  - 1 < r\n\ngoal (1 subgoal):\n 1. 0 < disc_rfr_proc r n w", "by (simp add: disc_rfr_proc_positive)"], ["proof (state)\nthis:\n  0 < disc_rfr_proc r n w\n\ngoal (1 subgoal):\n 1. (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "ultimately"], ["proof (chain)\npicking this:\n  0 < 1 + r\n  0 < disc_rfr_proc r n w", "have \"0 < (1+r) * disc_rfr_proc r n w\""], ["proof (prove)\nusing this:\n  0 < 1 + r\n  0 < disc_rfr_proc r n w\n\ngoal (1 subgoal):\n 1. 0 < (1 + r) * disc_rfr_proc r n w", "by simp"], ["proof (state)\nthis:\n  0 < (1 + r) * disc_rfr_proc r n w\n\ngoal (1 subgoal):\n 1. (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "have 1: \"0< pf risk_free_asset (Suc n) w \\<longrightarrow> 0 <(1+r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < pf risk_free_asset (Suc n) w \\<longrightarrow>\n    0 < (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "proof (intro impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < pf risk_free_asset (Suc n) w \\<Longrightarrow>\n    0 < (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "assume \"0 < pf risk_free_asset (Suc n) w\""], ["proof (state)\nthis:\n  0 < pf risk_free_asset (Suc n) w\n\ngoal (1 subgoal):\n 1. 0 < pf risk_free_asset (Suc n) w \\<Longrightarrow>\n    0 < (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "thus \"0 < (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w\""], ["proof (prove)\nusing this:\n  0 < pf risk_free_asset (Suc n) w\n\ngoal (1 subgoal):\n 1. 0 < (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "using \\<open>0 < (1+r) * disc_rfr_proc r n w\\<close>"], ["proof (prove)\nusing this:\n  0 < pf risk_free_asset (Suc n) w\n  0 < (1 + r) * disc_rfr_proc r n w\n\ngoal (1 subgoal):\n 1. 0 < (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "by simp"], ["proof (state)\nthis:\n  0 < (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < pf risk_free_asset (Suc n) w \\<longrightarrow>\n  0 < (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w\n\ngoal (1 subgoal):\n 1. (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "have 2: \"pf risk_free_asset (Suc n) w < 0 \\<longrightarrow> (1+r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pf risk_free_asset (Suc n) w < 0 \\<longrightarrow>\n    (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "proof (intro impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. pf risk_free_asset (Suc n) w < 0 \\<Longrightarrow>\n    (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "assume \"pf risk_free_asset (Suc n) w < 0\""], ["proof (state)\nthis:\n  pf risk_free_asset (Suc n) w < 0\n\ngoal (1 subgoal):\n 1. pf risk_free_asset (Suc n) w < 0 \\<Longrightarrow>\n    (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "thus \"(1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0\""], ["proof (prove)\nusing this:\n  pf risk_free_asset (Suc n) w < 0\n\ngoal (1 subgoal):\n 1. (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "using \\<open>0 < (1+r) * disc_rfr_proc r n w\\<close>"], ["proof (prove)\nusing this:\n  pf risk_free_asset (Suc n) w < 0\n  0 < (1 + r) * disc_rfr_proc r n w\n\ngoal (1 subgoal):\n 1. (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "by (simp add:mult_pos_neg)"], ["proof (state)\nthis:\n  (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pf risk_free_asset (Suc n) w < 0 \\<longrightarrow>\n  (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0\n\ngoal (1 subgoal):\n 1. (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "have \"0 \\<ge> val_process Mkt pf n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt pf n w \\<le> 0", "using assms"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  pf stk (Suc n) w = 0\n  pf risk_free_asset (Suc n) w \\<noteq> 0\n  val_process Mkt pf n w \\<le> 0\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n w \\<le> 0", "by simp"], ["proof (state)\nthis:\n  val_process Mkt pf n w \\<le> 0\n\ngoal (1 subgoal):\n 1. (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "also"], ["proof (state)\nthis:\n  val_process Mkt pf n w \\<le> 0\n\ngoal (1 subgoal):\n 1. (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "have \"val_process Mkt pf n w = geom_proc n w * pf stk (Suc n) w +\n      disc_rfr_proc r n w * pf risk_free_asset (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt pf n w =\n    geom_proc n w * pf stk (Suc n) w +\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "using assms"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  pf stk (Suc n) w = 0\n  pf risk_free_asset (Suc n) w \\<noteq> 0\n  val_process Mkt pf n w \\<le> 0\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n w =\n    geom_proc n w * pf stk (Suc n) w +\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "by (simp add:stock_pf_vp_expand)"], ["proof (state)\nthis:\n  val_process Mkt pf n w =\n  geom_proc n w * pf stk (Suc n) w +\n  disc_rfr_proc r n w * pf risk_free_asset (Suc n) w\n\ngoal (1 subgoal):\n 1. (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "also"], ["proof (state)\nthis:\n  val_process Mkt pf n w =\n  geom_proc n w * pf stk (Suc n) w +\n  disc_rfr_proc r n w * pf risk_free_asset (Suc n) w\n\ngoal (1 subgoal):\n 1. (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "have \"... = disc_rfr_proc r n w * pf risk_free_asset (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc n w * pf stk (Suc n) w +\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w =\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "using assms"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  pf stk (Suc n) w = 0\n  pf risk_free_asset (Suc n) w \\<noteq> 0\n  val_process Mkt pf n w \\<le> 0\n\ngoal (1 subgoal):\n 1. geom_proc n w * pf stk (Suc n) w +\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w =\n    disc_rfr_proc r n w * pf risk_free_asset (Suc n) w", "by simp"], ["proof (state)\nthis:\n  geom_proc n w * pf stk (Suc n) w +\n  disc_rfr_proc r n w * pf risk_free_asset (Suc n) w =\n  disc_rfr_proc r n w * pf risk_free_asset (Suc n) w\n\ngoal (1 subgoal):\n 1. (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "finally"], ["proof (chain)\npicking this:\n  disc_rfr_proc r n w * pf risk_free_asset (Suc n) w \\<le> 0", "have \"0\\<ge> disc_rfr_proc r n w * pf risk_free_asset (Suc n) w\""], ["proof (prove)\nusing this:\n  disc_rfr_proc r n w * pf risk_free_asset (Suc n) w \\<le> 0\n\ngoal (1 subgoal):\n 1. disc_rfr_proc r n w * pf risk_free_asset (Suc n) w \\<le> 0", "."], ["proof (state)\nthis:\n  disc_rfr_proc r n w * pf risk_free_asset (Suc n) w \\<le> 0\n\ngoal (1 subgoal):\n 1. (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "have \"0< pf risk_free_asset (Suc n) w \\<or> pf risk_free_asset (Suc n) w < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < pf risk_free_asset (Suc n) w \\<or> pf risk_free_asset (Suc n) w < 0", "using assms"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  pf stk (Suc n) w = 0\n  pf risk_free_asset (Suc n) w \\<noteq> 0\n  val_process Mkt pf n w \\<le> 0\n\ngoal (1 subgoal):\n 1. 0 < pf risk_free_asset (Suc n) w \\<or> pf risk_free_asset (Suc n) w < 0", "by linarith"], ["proof (state)\nthis:\n  0 < pf risk_free_asset (Suc n) w \\<or> pf risk_free_asset (Suc n) w < 0\n\ngoal (1 subgoal):\n 1. (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 < pf risk_free_asset (Suc n) w \\<or> pf risk_free_asset (Suc n) w < 0\n\ngoal (1 subgoal):\n 1. (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "using \"2\" \\<open>0 < disc_rfr_proc r n w\\<close> \\<open>disc_rfr_proc r n w * pf risk_free_asset (Suc n) w \\<le> 0\\<close>\n        mult_pos_pos"], ["proof (prove)\nusing this:\n  0 < pf risk_free_asset (Suc n) w \\<or> pf risk_free_asset (Suc n) w < 0\n  pf risk_free_asset (Suc n) w < 0 \\<longrightarrow>\n  (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0\n  0 < disc_rfr_proc r n w\n  disc_rfr_proc r n w * pf risk_free_asset (Suc n) w \\<le> 0\n  \\<lbrakk>(0::?'a) < ?a; (0::?'a) < ?b\\<rbrakk>\n  \\<Longrightarrow> (0::?'a) < ?a * ?b\n\ngoal (1 subgoal):\n 1. (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0", "by fastforce"], ["proof (state)\nthis:\n  (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (1 + r) * disc_rfr_proc r n w * pf risk_free_asset (Suc n) w < 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w < 0", "finally"], ["proof (chain)\npicking this:\n  cls_val_process Mkt pf (Suc n) w < 0", "show ?thesis"], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf (Suc n) w < 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w < 0", "."], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc n) w < 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) neg_pf_exists:\n  assumes \"stock_portfolio Mkt pf\"\n  and \"trading_strategy pf\"\n  and \"1+r < u\"\n  and \"d < 1+r\"\n  and \"val_process Mkt pf n w \\<le> 0\"\n  and \"pf stk (Suc n) w \\<noteq> 0 \\<or> pf risk_free_asset (Suc n) w \\<noteq> 0\"\nshows \"\\<exists>y. cls_val_process Mkt pf (Suc n) y < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "have \"borel_predict_stoch_proc G (pf stk)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_predict_stoch_proc G (pf stk)", "proof (rule inc_predict_support_trading_strat')"], ["proof (state)\ngoal (2 subgoals):\n 1. trading_strategy pf\n 2. stk \\<in> support_set pf \\<union> ?B", "show \"trading_strategy pf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trading_strategy pf", "using assms"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  trading_strategy pf\n  1 + r < u\n  d < 1 + r\n  val_process Mkt pf n w \\<le> 0\n  pf stk (Suc n) w \\<noteq> 0 \\<or> pf risk_free_asset (Suc n) w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. trading_strategy pf", "by simp"], ["proof (state)\nthis:\n  trading_strategy pf\n\ngoal (1 subgoal):\n 1. stk \\<in> support_set pf \\<union> ?B", "show \"stk \\<in> support_set pf \\<union> {stk}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stk \\<in> support_set pf \\<union> {stk}", "by simp"], ["proof (state)\nthis:\n  stk \\<in> support_set pf \\<union> {stk}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  borel_predict_stoch_proc G (pf stk)\n\ngoal (1 subgoal):\n 1. \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "hence \"pf stk (Suc n) \\<in> borel_measurable (G n)\""], ["proof (prove)\nusing this:\n  borel_predict_stoch_proc G (pf stk)\n\ngoal (1 subgoal):\n 1. pf stk (Suc n) \\<in> borel_measurable (G n)", "unfolding predict_stoch_proc_def"], ["proof (prove)\nusing this:\n  pf stk 0 \\<in> borel_measurable (G 0) \\<and>\n  (\\<forall>n. pf stk (Suc n) \\<in> borel_measurable (G n))\n\ngoal (1 subgoal):\n 1. pf stk (Suc n) \\<in> borel_measurable (G n)", "by simp"], ["proof (state)\nthis:\n  pf stk (Suc n) \\<in> borel_measurable (G n)\n\ngoal (1 subgoal):\n 1. \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "have \"val_process Mkt pf n \\<in> borel_measurable (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt pf n \\<in> borel_measurable (G n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. val_process Mkt pf n \\<in> borel_measurable (G n)", "have \"borel_adapt_stoch_proc G (val_process Mkt pf)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc G (val_process Mkt pf)", "using assms"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  trading_strategy pf\n  1 + r < u\n  d < 1 + r\n  val_process Mkt pf n w \\<le> 0\n  pf stk (Suc n) w \\<noteq> 0 \\<or> pf risk_free_asset (Suc n) w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc G (val_process Mkt pf)", "using support_adapt_def ats_val_process_adapted readable"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  trading_strategy pf\n  1 + r < u\n  d < 1 + r\n  val_process Mkt pf n w \\<le> 0\n  pf stk (Suc n) w \\<noteq> 0 \\<or> pf risk_free_asset (Suc n) w \\<noteq> 0\n  support_adapt ?Mkt ?pf =\n  (\\<forall>asset\\<in>support_set ?pf.\n      borel_adapt_stoch_proc G (prices ?Mkt asset))\n  \\<lbrakk>trading_strategy ?p; support_adapt Mkt ?p\\<rbrakk>\n  \\<Longrightarrow> borel_adapt_stoch_proc G (val_process Mkt ?p)\n  \\<forall>asset\\<in>stocks Mkt. borel_adapt_stoch_proc G (prices Mkt asset)\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc G (val_process Mkt pf)", "unfolding  stock_portfolio_def"], ["proof (prove)\nusing this:\n  portfolio pf \\<and> support_set pf \\<subseteq> stocks Mkt\n  trading_strategy pf\n  1 + r < u\n  d < 1 + r\n  val_process Mkt pf n w \\<le> 0\n  pf stk (Suc n) w \\<noteq> 0 \\<or> pf risk_free_asset (Suc n) w \\<noteq> 0\n  support_adapt ?Mkt ?pf =\n  (\\<forall>asset\\<in>support_set ?pf.\n      borel_adapt_stoch_proc G (prices ?Mkt asset))\n  \\<lbrakk>trading_strategy ?p; support_adapt Mkt ?p\\<rbrakk>\n  \\<Longrightarrow> borel_adapt_stoch_proc G (val_process Mkt ?p)\n  \\<forall>asset\\<in>stocks Mkt. borel_adapt_stoch_proc G (prices Mkt asset)\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc G (val_process Mkt pf)", "by blast"], ["proof (state)\nthis:\n  borel_adapt_stoch_proc G (val_process Mkt pf)\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n \\<in> borel_measurable (G n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc G (val_process Mkt pf)\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n \\<in> borel_measurable (G n)", "unfolding adapt_stoch_proc_def"], ["proof (prove)\nusing this:\n  \\<forall>t. val_process Mkt pf t \\<in> borel_measurable (G t)\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n \\<in> borel_measurable (G n)", "by simp"], ["proof (state)\nthis:\n  val_process Mkt pf n \\<in> borel_measurable (G n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  val_process Mkt pf n \\<in> borel_measurable (G n)\n\ngoal (1 subgoal):\n 1. \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "define wn where \"wn = pseudo_proj_True n w\""], ["proof (state)\nthis:\n  wn = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "proof (cases \"pf stk (Suc n) w \\<noteq> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. pf stk (Suc n) w \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0\n 2. \\<not> pf stk (Suc n) w \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "case True"], ["proof (state)\nthis:\n  pf stk (Suc n) w \\<noteq> 0\n\ngoal (2 subgoals):\n 1. pf stk (Suc n) w \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0\n 2. \\<not> pf stk (Suc n) w \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "proof (cases \"pf stk (Suc n) w > 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < pf stk (Suc n) w \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0\n 2. \\<not> 0 < pf stk (Suc n) w \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "case True"], ["proof (state)\nthis:\n  0 < pf stk (Suc n) w\n\ngoal (2 subgoals):\n 1. 0 < pf stk (Suc n) w \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0\n 2. \\<not> 0 < pf stk (Suc n) w \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "have \"0 <pf stk (Suc n) (spick wn n False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < pf stk (Suc n) (spick wn n False)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < pf stk (Suc n) (spick wn n False)", "have \"0 < pf stk (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < pf stk (Suc n) w", "using \\<open>0 < pf stk (Suc n) w\\<close>"], ["proof (prove)\nusing this:\n  0 < pf stk (Suc n) w\n\ngoal (1 subgoal):\n 1. 0 < pf stk (Suc n) w", "by simp"], ["proof (state)\nthis:\n  0 < pf stk (Suc n) w\n\ngoal (1 subgoal):\n 1. 0 < pf stk (Suc n) (spick wn n False)", "also"], ["proof (state)\nthis:\n  0 < pf stk (Suc n) w\n\ngoal (1 subgoal):\n 1. 0 < pf stk (Suc n) (spick wn n False)", "have \"... = pf stk (Suc n) wn\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pf stk (Suc n) w = pf stk (Suc n) wn", "unfolding wn_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. pf stk (Suc n) w = pf stk (Suc n) (pseudo_proj_True n w)", "using \\<open>pf stk (Suc n) \\<in> borel_measurable (G n)\\<close> stoch_proc_subalg_nat_filt[of geom_proc] geometric_process\n          nat_filtration_info stock_filtration"], ["proof (prove)\nusing this:\n  pf stk (Suc n) \\<in> borel_measurable (G n)\n  borel_adapt_stoch_proc nat_filtration geom_proc \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M geom_proc borel ?n)\n  geom_proc = geom_rand_walk u d init\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  ?f \\<circ> pseudo_proj_True ?n = ?f\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. pf stk (Suc n) w = pf stk (Suc n) (pseudo_proj_True n w)", "by (metis comp_apply geom_rand_walk_borel_adapted measurable_from_subalg)"], ["proof (state)\nthis:\n  pf stk (Suc n) w = pf stk (Suc n) wn\n\ngoal (1 subgoal):\n 1. 0 < pf stk (Suc n) (spick wn n False)", "also"], ["proof (state)\nthis:\n  pf stk (Suc n) w = pf stk (Suc n) wn\n\ngoal (1 subgoal):\n 1. 0 < pf stk (Suc n) (spick wn n False)", "have \"... = pf stk (Suc n) (spick wn n False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pf stk (Suc n) wn = pf stk (Suc n) (spick wn n False)", "using \\<open>pf stk (Suc n) \\<in> borel_measurable (G n)\\<close> comp_def nat_filtration_info\n              pseudo_proj_True_stake_image spickI stoch_proc_subalg_nat_filt[of geom_proc] geometric_process stock_filtration"], ["proof (prove)\nusing this:\n  pf stk (Suc n) \\<in> borel_measurable (G n)\n  ?f \\<circ> ?g = (\\<lambda>x. ?f (?g x))\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  ?f \\<circ> pseudo_proj_True ?n = ?f\n  stake ?n ?w = stake ?n ?x \\<Longrightarrow>\n  pseudo_proj_True ?n ?w = pseudo_proj_True ?n ?x\n  stake ?n (spick ?w ?n ?v) = stake ?n ?w \\<and> spick ?w ?n ?v !! ?n = ?v\n  borel_adapt_stoch_proc nat_filtration geom_proc \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M geom_proc borel ?n)\n  geom_proc = geom_rand_walk u d init\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. pf stk (Suc n) wn = pf stk (Suc n) (spick wn n False)", "by (metis geom_rand_walk_borel_adapted measurable_from_subalg)"], ["proof (state)\nthis:\n  pf stk (Suc n) wn = pf stk (Suc n) (spick wn n False)\n\ngoal (1 subgoal):\n 1. 0 < pf stk (Suc n) (spick wn n False)", "finally"], ["proof (chain)\npicking this:\n  0 < pf stk (Suc n) (spick wn n False)", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < pf stk (Suc n) (spick wn n False)\n\ngoal (1 subgoal):\n 1. 0 < pf stk (Suc n) (spick wn n False)", "."], ["proof (state)\nthis:\n  0 < pf stk (Suc n) (spick wn n False)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < pf stk (Suc n) (spick wn n False)\n\ngoal (2 subgoals):\n 1. 0 < pf stk (Suc n) w \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0\n 2. \\<not> 0 < pf stk (Suc n) w \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "moreover"], ["proof (state)\nthis:\n  0 < pf stk (Suc n) (spick wn n False)\n\ngoal (2 subgoals):\n 1. 0 < pf stk (Suc n) w \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0\n 2. \\<not> 0 < pf stk (Suc n) w \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "have \"0 \\<ge> val_process Mkt pf n (spick wn n False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt pf n (spick wn n False) \\<le> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. val_process Mkt pf n (spick wn n False) \\<le> 0", "have \"0 \\<ge> val_process Mkt pf n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt pf n w \\<le> 0", "using assms"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  trading_strategy pf\n  1 + r < u\n  d < 1 + r\n  val_process Mkt pf n w \\<le> 0\n  pf stk (Suc n) w \\<noteq> 0 \\<or> pf risk_free_asset (Suc n) w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n w \\<le> 0", "by simp"], ["proof (state)\nthis:\n  val_process Mkt pf n w \\<le> 0\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n (spick wn n False) \\<le> 0", "also"], ["proof (state)\nthis:\n  val_process Mkt pf n w \\<le> 0\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n (spick wn n False) \\<le> 0", "have \"val_process Mkt pf n w = val_process Mkt pf n wn\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt pf n w = val_process Mkt pf n wn", "unfolding wn_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt pf n w = val_process Mkt pf n (pseudo_proj_True n w)", "using \\<open>val_process Mkt pf n \\<in> borel_measurable (G n)\\<close>\n          nat_filtration_info stoch_proc_subalg_nat_filt[of geom_proc] geometric_process\n          stock_filtration"], ["proof (prove)\nusing this:\n  val_process Mkt pf n \\<in> borel_measurable (G n)\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  ?f \\<circ> pseudo_proj_True ?n = ?f\n  borel_adapt_stoch_proc nat_filtration geom_proc \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M geom_proc borel ?n)\n  geom_proc = geom_rand_walk u d init\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n w = val_process Mkt pf n (pseudo_proj_True n w)", "by (metis comp_apply geom_rand_walk_borel_adapted measurable_from_subalg)"], ["proof (state)\nthis:\n  val_process Mkt pf n w = val_process Mkt pf n wn\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n (spick wn n False) \\<le> 0", "also"], ["proof (state)\nthis:\n  val_process Mkt pf n w = val_process Mkt pf n wn\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n (spick wn n False) \\<le> 0", "have \"... = val_process Mkt pf n (spick wn n False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt pf n wn = val_process Mkt pf n (spick wn n False)", "using \\<open>val_process Mkt pf n \\<in> borel_measurable (G n)\\<close>\n          comp_def nat_filtration_info\n              pseudo_proj_True_stake_image spickI stoch_proc_subalg_nat_filt[of geom_proc] geometric_process stock_filtration"], ["proof (prove)\nusing this:\n  val_process Mkt pf n \\<in> borel_measurable (G n)\n  ?f \\<circ> ?g = (\\<lambda>x. ?f (?g x))\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  ?f \\<circ> pseudo_proj_True ?n = ?f\n  stake ?n ?w = stake ?n ?x \\<Longrightarrow>\n  pseudo_proj_True ?n ?w = pseudo_proj_True ?n ?x\n  stake ?n (spick ?w ?n ?v) = stake ?n ?w \\<and> spick ?w ?n ?v !! ?n = ?v\n  borel_adapt_stoch_proc nat_filtration geom_proc \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M geom_proc borel ?n)\n  geom_proc = geom_rand_walk u d init\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n wn = val_process Mkt pf n (spick wn n False)", "by (metis geom_rand_walk_borel_adapted measurable_from_subalg)"], ["proof (state)\nthis:\n  val_process Mkt pf n wn = val_process Mkt pf n (spick wn n False)\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n (spick wn n False) \\<le> 0", "finally"], ["proof (chain)\npicking this:\n  val_process Mkt pf n (spick wn n False) \\<le> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  val_process Mkt pf n (spick wn n False) \\<le> 0\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n (spick wn n False) \\<le> 0", "."], ["proof (state)\nthis:\n  val_process Mkt pf n (spick wn n False) \\<le> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  val_process Mkt pf n (spick wn n False) \\<le> 0\n\ngoal (2 subgoals):\n 1. 0 < pf stk (Suc n) w \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0\n 2. \\<not> 0 < pf stk (Suc n) w \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "ultimately"], ["proof (chain)\npicking this:\n  0 < pf stk (Suc n) (spick wn n False)\n  val_process Mkt pf n (spick wn n False) \\<le> 0", "have \"cls_val_process Mkt pf (Suc n) (spick wn n False) < 0\""], ["proof (prove)\nusing this:\n  0 < pf stk (Suc n) (spick wn n False)\n  val_process Mkt pf n (spick wn n False) \\<le> 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick wn n False) < 0", "using assms"], ["proof (prove)\nusing this:\n  0 < pf stk (Suc n) (spick wn n False)\n  val_process Mkt pf n (spick wn n False) \\<le> 0\n  stock_portfolio Mkt pf\n  trading_strategy pf\n  1 + r < u\n  d < 1 + r\n  val_process Mkt pf n w \\<le> 0\n  pf stk (Suc n) w \\<noteq> 0 \\<or> pf risk_free_asset (Suc n) w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick wn n False) < 0", "by (simp add:pos_pf_neg_uvp)"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc n) (spick wn n False) < 0\n\ngoal (2 subgoals):\n 1. 0 < pf stk (Suc n) w \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0\n 2. \\<not> 0 < pf stk (Suc n) w \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "thus \"\\<exists>y. cls_val_process Mkt pf (Suc n) y < 0\""], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf (Suc n) (spick wn n False) < 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < pf stk (Suc n) w \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 < pf stk (Suc n) w \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "case False"], ["proof (state)\nthis:\n  \\<not> 0 < pf stk (Suc n) w\n\ngoal (1 subgoal):\n 1. \\<not> 0 < pf stk (Suc n) w \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "have \"0 >pf stk (Suc n) (spick wn n True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pf stk (Suc n) (spick wn n True) < 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pf stk (Suc n) (spick wn n True) < 0", "have \"0 > pf stk (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pf stk (Suc n) w < 0", "using \\<open>\\<not> 0 < pf stk (Suc n) w\\<close> \\<open>pf stk (Suc n) w \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  \\<not> 0 < pf stk (Suc n) w\n  pf stk (Suc n) w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. pf stk (Suc n) w < 0", "by simp"], ["proof (state)\nthis:\n  pf stk (Suc n) w < 0\n\ngoal (1 subgoal):\n 1. pf stk (Suc n) (spick wn n True) < 0", "also"], ["proof (state)\nthis:\n  pf stk (Suc n) w < 0\n\ngoal (1 subgoal):\n 1. pf stk (Suc n) (spick wn n True) < 0", "have \"pf stk (Suc n) w = pf stk (Suc n) wn\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pf stk (Suc n) w = pf stk (Suc n) wn", "unfolding wn_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. pf stk (Suc n) w = pf stk (Suc n) (pseudo_proj_True n w)", "using \\<open>pf stk (Suc n) \\<in> borel_measurable (G n)\\<close>\n          nat_filtration_info stoch_proc_subalg_nat_filt[of geom_proc] geometric_process\n          stock_filtration"], ["proof (prove)\nusing this:\n  pf stk (Suc n) \\<in> borel_measurable (G n)\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  ?f \\<circ> pseudo_proj_True ?n = ?f\n  borel_adapt_stoch_proc nat_filtration geom_proc \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M geom_proc borel ?n)\n  geom_proc = geom_rand_walk u d init\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. pf stk (Suc n) w = pf stk (Suc n) (pseudo_proj_True n w)", "by (metis comp_apply geom_rand_walk_borel_adapted measurable_from_subalg)"], ["proof (state)\nthis:\n  pf stk (Suc n) w = pf stk (Suc n) wn\n\ngoal (1 subgoal):\n 1. pf stk (Suc n) (spick wn n True) < 0", "also"], ["proof (state)\nthis:\n  pf stk (Suc n) w = pf stk (Suc n) wn\n\ngoal (1 subgoal):\n 1. pf stk (Suc n) (spick wn n True) < 0", "have \"... = pf stk (Suc n) (spick wn n True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pf stk (Suc n) wn = pf stk (Suc n) (spick wn n True)", "using \\<open>pf stk (Suc n) \\<in> borel_measurable (G n)\\<close>\n          comp_def nat_filtration_info\n              pseudo_proj_True_stake_image spickI stoch_proc_subalg_nat_filt[of geom_proc] geometric_process stock_filtration"], ["proof (prove)\nusing this:\n  pf stk (Suc n) \\<in> borel_measurable (G n)\n  ?f \\<circ> ?g = (\\<lambda>x. ?f (?g x))\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  ?f \\<circ> pseudo_proj_True ?n = ?f\n  stake ?n ?w = stake ?n ?x \\<Longrightarrow>\n  pseudo_proj_True ?n ?w = pseudo_proj_True ?n ?x\n  stake ?n (spick ?w ?n ?v) = stake ?n ?w \\<and> spick ?w ?n ?v !! ?n = ?v\n  borel_adapt_stoch_proc nat_filtration geom_proc \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M geom_proc borel ?n)\n  geom_proc = geom_rand_walk u d init\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. pf stk (Suc n) wn = pf stk (Suc n) (spick wn n True)", "by (metis geom_rand_walk_borel_adapted measurable_from_subalg)"], ["proof (state)\nthis:\n  pf stk (Suc n) wn = pf stk (Suc n) (spick wn n True)\n\ngoal (1 subgoal):\n 1. pf stk (Suc n) (spick wn n True) < 0", "finally"], ["proof (chain)\npicking this:\n  pf stk (Suc n) (spick wn n True) < 0", "show ?thesis"], ["proof (prove)\nusing this:\n  pf stk (Suc n) (spick wn n True) < 0\n\ngoal (1 subgoal):\n 1. pf stk (Suc n) (spick wn n True) < 0", "."], ["proof (state)\nthis:\n  pf stk (Suc n) (spick wn n True) < 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pf stk (Suc n) (spick wn n True) < 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < pf stk (Suc n) w \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "moreover"], ["proof (state)\nthis:\n  pf stk (Suc n) (spick wn n True) < 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < pf stk (Suc n) w \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "have \"0 \\<ge> val_process Mkt pf n (spick wn n True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt pf n (spick wn n True) \\<le> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. val_process Mkt pf n (spick wn n True) \\<le> 0", "have \"0 \\<ge> val_process Mkt pf n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt pf n w \\<le> 0", "using assms"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  trading_strategy pf\n  1 + r < u\n  d < 1 + r\n  val_process Mkt pf n w \\<le> 0\n  pf stk (Suc n) w \\<noteq> 0 \\<or> pf risk_free_asset (Suc n) w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n w \\<le> 0", "by simp"], ["proof (state)\nthis:\n  val_process Mkt pf n w \\<le> 0\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n (spick wn n True) \\<le> 0", "also"], ["proof (state)\nthis:\n  val_process Mkt pf n w \\<le> 0\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n (spick wn n True) \\<le> 0", "have \"val_process Mkt pf n w = val_process Mkt pf n wn\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt pf n w = val_process Mkt pf n wn", "unfolding wn_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt pf n w = val_process Mkt pf n (pseudo_proj_True n w)", "using \\<open>val_process Mkt pf n \\<in> borel_measurable (G n)\\<close>\n          comp_def nat_filtration_info\n              pseudo_proj_True_stake_image spickI stoch_proc_subalg_nat_filt[of geom_proc] geometric_process stock_filtration"], ["proof (prove)\nusing this:\n  val_process Mkt pf n \\<in> borel_measurable (G n)\n  ?f \\<circ> ?g = (\\<lambda>x. ?f (?g x))\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  ?f \\<circ> pseudo_proj_True ?n = ?f\n  stake ?n ?w = stake ?n ?x \\<Longrightarrow>\n  pseudo_proj_True ?n ?w = pseudo_proj_True ?n ?x\n  stake ?n (spick ?w ?n ?v) = stake ?n ?w \\<and> spick ?w ?n ?v !! ?n = ?v\n  borel_adapt_stoch_proc nat_filtration geom_proc \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M geom_proc borel ?n)\n  geom_proc = geom_rand_walk u d init\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n w = val_process Mkt pf n (pseudo_proj_True n w)", "by (metis geom_rand_walk_borel_adapted measurable_from_subalg)"], ["proof (state)\nthis:\n  val_process Mkt pf n w = val_process Mkt pf n wn\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n (spick wn n True) \\<le> 0", "also"], ["proof (state)\nthis:\n  val_process Mkt pf n w = val_process Mkt pf n wn\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n (spick wn n True) \\<le> 0", "have \"... = val_process Mkt pf n (spick wn n True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt pf n wn = val_process Mkt pf n (spick wn n True)", "using \\<open>val_process Mkt pf n \\<in> borel_measurable (G n)\\<close>\n          comp_def nat_filtration_info\n              pseudo_proj_True_stake_image spickI stoch_proc_subalg_nat_filt[of geom_proc] geometric_process stock_filtration"], ["proof (prove)\nusing this:\n  val_process Mkt pf n \\<in> borel_measurable (G n)\n  ?f \\<circ> ?g = (\\<lambda>x. ?f (?g x))\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  ?f \\<circ> pseudo_proj_True ?n = ?f\n  stake ?n ?w = stake ?n ?x \\<Longrightarrow>\n  pseudo_proj_True ?n ?w = pseudo_proj_True ?n ?x\n  stake ?n (spick ?w ?n ?v) = stake ?n ?w \\<and> spick ?w ?n ?v !! ?n = ?v\n  borel_adapt_stoch_proc nat_filtration geom_proc \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M geom_proc borel ?n)\n  geom_proc = geom_rand_walk u d init\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n wn = val_process Mkt pf n (spick wn n True)", "by (metis geom_rand_walk_borel_adapted measurable_from_subalg)"], ["proof (state)\nthis:\n  val_process Mkt pf n wn = val_process Mkt pf n (spick wn n True)\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n (spick wn n True) \\<le> 0", "finally"], ["proof (chain)\npicking this:\n  val_process Mkt pf n (spick wn n True) \\<le> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  val_process Mkt pf n (spick wn n True) \\<le> 0\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n (spick wn n True) \\<le> 0", "."], ["proof (state)\nthis:\n  val_process Mkt pf n (spick wn n True) \\<le> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  val_process Mkt pf n (spick wn n True) \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < pf stk (Suc n) w \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "ultimately"], ["proof (chain)\npicking this:\n  pf stk (Suc n) (spick wn n True) < 0\n  val_process Mkt pf n (spick wn n True) \\<le> 0", "have \"cls_val_process Mkt pf (Suc n) (spick wn n True) < 0\""], ["proof (prove)\nusing this:\n  pf stk (Suc n) (spick wn n True) < 0\n  val_process Mkt pf n (spick wn n True) \\<le> 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick wn n True) < 0", "using assms"], ["proof (prove)\nusing this:\n  pf stk (Suc n) (spick wn n True) < 0\n  val_process Mkt pf n (spick wn n True) \\<le> 0\n  stock_portfolio Mkt pf\n  trading_strategy pf\n  1 + r < u\n  d < 1 + r\n  val_process Mkt pf n w \\<le> 0\n  pf stk (Suc n) w \\<noteq> 0 \\<or> pf risk_free_asset (Suc n) w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) (spick wn n True) < 0", "by (simp add:neg_pf_neg_uvp)"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc n) (spick wn n True) < 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < pf stk (Suc n) w \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "thus \"\\<exists>y. cls_val_process Mkt pf (Suc n) y < 0\""], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf (Suc n) (spick wn n True) < 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0\n\ngoal (1 subgoal):\n 1. \\<not> pf stk (Suc n) w \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> pf stk (Suc n) w \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "case False"], ["proof (state)\nthis:\n  \\<not> pf stk (Suc n) w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> pf stk (Suc n) w \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "hence \"pf risk_free_asset (Suc n) w \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<not> pf stk (Suc n) w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. pf risk_free_asset (Suc n) w \\<noteq> 0", "using assms"], ["proof (prove)\nusing this:\n  \\<not> pf stk (Suc n) w \\<noteq> 0\n  stock_portfolio Mkt pf\n  trading_strategy pf\n  1 + r < u\n  d < 1 + r\n  val_process Mkt pf n w \\<le> 0\n  pf stk (Suc n) w \\<noteq> 0 \\<or> pf risk_free_asset (Suc n) w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. pf risk_free_asset (Suc n) w \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  pf risk_free_asset (Suc n) w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> pf stk (Suc n) w \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "hence \"cls_val_process Mkt pf (Suc n) w < 0\""], ["proof (prove)\nusing this:\n  pf risk_free_asset (Suc n) w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w < 0", "using False assms"], ["proof (prove)\nusing this:\n  pf risk_free_asset (Suc n) w \\<noteq> 0\n  \\<not> pf stk (Suc n) w \\<noteq> 0\n  stock_portfolio Mkt pf\n  trading_strategy pf\n  1 + r < u\n  d < 1 + r\n  val_process Mkt pf n w \\<le> 0\n  pf stk (Suc n) w \\<noteq> 0 \\<or> pf risk_free_asset (Suc n) w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w < 0", "by (auto simp add:zero_pf_neg_uvp)"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc n) w < 0\n\ngoal (1 subgoal):\n 1. \\<not> pf stk (Suc n) w \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "thus \"\\<exists>y. cls_val_process Mkt pf (Suc n) y < 0\""], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf (Suc n) w < 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>y. cls_val_process Mkt pf (Suc n) y < 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) non_zero_components:\nassumes \"val_process Mkt pf n y \\<noteq> 0\"\nand \"stock_portfolio Mkt pf\"\nshows  \"pf stk (Suc n) y \\<noteq> 0 \\<or> pf risk_free_asset (Suc n) y \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pf stk (Suc n) y \\<noteq> 0 \\<or>\n    pf risk_free_asset (Suc n) y \\<noteq> 0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (pf stk (Suc n) y \\<noteq> 0 \\<or>\n            pf risk_free_asset (Suc n) y \\<noteq> 0) \\<Longrightarrow>\n    False", "assume \"\\<not>(pf stk (Suc n) y \\<noteq> 0 \\<or> pf risk_free_asset (Suc n) y \\<noteq> 0)\""], ["proof (state)\nthis:\n  \\<not> (pf stk (Suc n) y \\<noteq> 0 \\<or>\n          pf risk_free_asset (Suc n) y \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<not> (pf stk (Suc n) y \\<noteq> 0 \\<or>\n            pf risk_free_asset (Suc n) y \\<noteq> 0) \\<Longrightarrow>\n    False", "hence \"pf stk (Suc n) y = 0\" \"pf risk_free_asset (Suc n) y = 0\""], ["proof (prove)\nusing this:\n  \\<not> (pf stk (Suc n) y \\<noteq> 0 \\<or>\n          pf risk_free_asset (Suc n) y \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. pf stk (Suc n) y = 0 &&& pf risk_free_asset (Suc n) y = 0", "by auto"], ["proof (state)\nthis:\n  pf stk (Suc n) y = 0\n  pf risk_free_asset (Suc n) y = 0\n\ngoal (1 subgoal):\n 1. \\<not> (pf stk (Suc n) y \\<noteq> 0 \\<or>\n            pf risk_free_asset (Suc n) y \\<noteq> 0) \\<Longrightarrow>\n    False", "have \"val_process Mkt pf n y = geom_proc n y * pf stk (Suc n) y +\n    disc_rfr_proc r n y * pf risk_free_asset (Suc n) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt pf n y =\n    geom_proc n y * pf stk (Suc n) y +\n    disc_rfr_proc r n y * pf risk_free_asset (Suc n) y", "using \\<open>stock_portfolio Mkt pf\\<close>\n    stock_pf_vp_expand[of pf n]"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  stock_portfolio Mkt pf \\<Longrightarrow>\n  val_process Mkt pf n ?w =\n  geom_proc n ?w * pf stk (Suc n) ?w +\n  disc_rfr_proc r n ?w * pf risk_free_asset (Suc n) ?w\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n y =\n    geom_proc n y * pf stk (Suc n) y +\n    disc_rfr_proc r n y * pf risk_free_asset (Suc n) y", "by simp"], ["proof (state)\nthis:\n  val_process Mkt pf n y =\n  geom_proc n y * pf stk (Suc n) y +\n  disc_rfr_proc r n y * pf risk_free_asset (Suc n) y\n\ngoal (1 subgoal):\n 1. \\<not> (pf stk (Suc n) y \\<noteq> 0 \\<or>\n            pf risk_free_asset (Suc n) y \\<noteq> 0) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  val_process Mkt pf n y =\n  geom_proc n y * pf stk (Suc n) y +\n  disc_rfr_proc r n y * pf risk_free_asset (Suc n) y\n\ngoal (1 subgoal):\n 1. \\<not> (pf stk (Suc n) y \\<noteq> 0 \\<or>\n            pf risk_free_asset (Suc n) y \\<noteq> 0) \\<Longrightarrow>\n    False", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc n y * pf stk (Suc n) y +\n    disc_rfr_proc r n y * pf risk_free_asset (Suc n) y =\n    0", "using \\<open>pf stk (Suc n) y = 0\\<close> \\<open>pf risk_free_asset (Suc n) y = 0\\<close>"], ["proof (prove)\nusing this:\n  pf stk (Suc n) y = 0\n  pf risk_free_asset (Suc n) y = 0\n\ngoal (1 subgoal):\n 1. geom_proc n y * pf stk (Suc n) y +\n    disc_rfr_proc r n y * pf risk_free_asset (Suc n) y =\n    0", "by simp"], ["proof (state)\nthis:\n  geom_proc n y * pf stk (Suc n) y +\n  disc_rfr_proc r n y * pf risk_free_asset (Suc n) y =\n  0\n\ngoal (1 subgoal):\n 1. \\<not> (pf stk (Suc n) y \\<noteq> 0 \\<or>\n            pf risk_free_asset (Suc n) y \\<noteq> 0) \\<Longrightarrow>\n    False", "finally"], ["proof (chain)\npicking this:\n  val_process Mkt pf n y = 0", "have \"val_process Mkt pf n y = 0\""], ["proof (prove)\nusing this:\n  val_process Mkt pf n y = 0\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n y = 0", "."], ["proof (state)\nthis:\n  val_process Mkt pf n y = 0\n\ngoal (1 subgoal):\n 1. \\<not> (pf stk (Suc n) y \\<noteq> 0 \\<or>\n            pf risk_free_asset (Suc n) y \\<noteq> 0) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  val_process Mkt pf n y = 0\n\ngoal (1 subgoal):\n 1. \\<not> (pf stk (Suc n) y \\<noteq> 0 \\<or>\n            pf risk_free_asset (Suc n) y \\<noteq> 0) \\<Longrightarrow>\n    False", "have \"val_process Mkt pf n y \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt pf n y \\<noteq> 0", "using assms"], ["proof (prove)\nusing this:\n  val_process Mkt pf n y \\<noteq> 0\n  stock_portfolio Mkt pf\n\ngoal (1 subgoal):\n 1. val_process Mkt pf n y \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  val_process Mkt pf n y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (pf stk (Suc n) y \\<noteq> 0 \\<or>\n            pf risk_free_asset (Suc n) y \\<noteq> 0) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  val_process Mkt pf n y = 0\n  val_process Mkt pf n y \\<noteq> 0", "show False"], ["proof (prove)\nusing this:\n  val_process Mkt pf n y = 0\n  val_process Mkt pf n y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) neg_pf_Suc:\n  assumes \"stock_portfolio Mkt pf\"\n  and \"trading_strategy pf\"\n  and \"self_financing Mkt pf\"\n  and \"1+r < u\"\n  and \"d < 1+r\"\n  and \"cls_val_process Mkt pf n w < 0\"\nshows \"n \\<le> m \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf m y < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> m \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf m y < 0", "proof (induct m)"], ["proof (state)\ngoal (2 subgoals):\n 1. n \\<le> 0 \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf 0 y < 0\n 2. \\<And>m.\n       \\<lbrakk>n \\<le> m \\<Longrightarrow>\n                \\<exists>y. cls_val_process Mkt pf m y < 0;\n        n \\<le> Suc m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "case 0"], ["proof (state)\nthis:\n  n \\<le> 0\n\ngoal (2 subgoals):\n 1. n \\<le> 0 \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf 0 y < 0\n 2. \\<And>m.\n       \\<lbrakk>n \\<le> m \\<Longrightarrow>\n                \\<exists>y. cls_val_process Mkt pf m y < 0;\n        n \\<le> Suc m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "assume \"n \\<le> 0\""], ["proof (state)\nthis:\n  n \\<le> 0\n\ngoal (2 subgoals):\n 1. n \\<le> 0 \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf 0 y < 0\n 2. \\<And>m.\n       \\<lbrakk>n \\<le> m \\<Longrightarrow>\n                \\<exists>y. cls_val_process Mkt pf m y < 0;\n        n \\<le> Suc m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "hence \"n=0\""], ["proof (prove)\nusing this:\n  n \\<le> 0\n\ngoal (1 subgoal):\n 1. n = 0", "by simp"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n \\<le> 0 \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf 0 y < 0\n 2. \\<And>m.\n       \\<lbrakk>n \\<le> m \\<Longrightarrow>\n                \\<exists>y. cls_val_process Mkt pf m y < 0;\n        n \\<le> Suc m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "thus \"\\<exists>y. cls_val_process Mkt pf 0 y < 0\""], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. cls_val_process Mkt pf 0 y < 0", "using assms"], ["proof (prove)\nusing this:\n  n = 0\n  stock_portfolio Mkt pf\n  trading_strategy pf\n  self_financing Mkt pf\n  1 + r < u\n  d < 1 + r\n  cls_val_process Mkt pf n w < 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. cls_val_process Mkt pf 0 y < 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>y. cls_val_process Mkt pf 0 y < 0\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>n \\<le> m \\<Longrightarrow>\n                \\<exists>y. cls_val_process Mkt pf m y < 0;\n        n \\<le> Suc m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>n \\<le> m \\<Longrightarrow>\n                \\<exists>y. cls_val_process Mkt pf m y < 0;\n        n \\<le> Suc m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "case (Suc m)"], ["proof (state)\nthis:\n  n \\<le> m \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf m y < 0\n  n \\<le> Suc m\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>n \\<le> m \\<Longrightarrow>\n                \\<exists>y. cls_val_process Mkt pf m y < 0;\n        n \\<le> Suc m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "assume \"n \\<le> Suc m\""], ["proof (state)\nthis:\n  n \\<le> Suc m\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>n \\<le> m \\<Longrightarrow>\n                \\<exists>y. cls_val_process Mkt pf m y < 0;\n        n \\<le> Suc m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "thus \"\\<exists>y. cls_val_process Mkt pf (Suc m) y < 0\""], ["proof (prove)\nusing this:\n  n \\<le> Suc m\n\ngoal (1 subgoal):\n 1. \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "proof (cases \"n < Suc m\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>n \\<le> Suc m; n < Suc m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0\n 2. \\<lbrakk>n \\<le> Suc m; \\<not> n < Suc m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "case False"], ["proof (state)\nthis:\n  \\<not> n < Suc m\n\ngoal (2 subgoals):\n 1. \\<lbrakk>n \\<le> Suc m; n < Suc m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0\n 2. \\<lbrakk>n \\<le> Suc m; \\<not> n < Suc m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "hence \"n = Suc m\""], ["proof (prove)\nusing this:\n  \\<not> n < Suc m\n\ngoal (1 subgoal):\n 1. n = Suc m", "using \\<open>n \\<le> Suc m\\<close>"], ["proof (prove)\nusing this:\n  \\<not> n < Suc m\n  n \\<le> Suc m\n\ngoal (1 subgoal):\n 1. n = Suc m", "by simp"], ["proof (state)\nthis:\n  n = Suc m\n\ngoal (2 subgoals):\n 1. \\<lbrakk>n \\<le> Suc m; n < Suc m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0\n 2. \\<lbrakk>n \\<le> Suc m; \\<not> n < Suc m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "thus \"\\<exists>y. cls_val_process Mkt pf (Suc m) y < 0\""], ["proof (prove)\nusing this:\n  n = Suc m\n\ngoal (1 subgoal):\n 1. \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "using assms"], ["proof (prove)\nusing this:\n  n = Suc m\n  stock_portfolio Mkt pf\n  trading_strategy pf\n  self_financing Mkt pf\n  1 + r < u\n  d < 1 + r\n  cls_val_process Mkt pf n w < 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> Suc m; n < Suc m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> Suc m; n < Suc m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "case True"], ["proof (state)\nthis:\n  n < Suc m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> Suc m; n < Suc m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "hence \"n \\<le> m\""], ["proof (prove)\nusing this:\n  n < Suc m\n\ngoal (1 subgoal):\n 1. n \\<le> m", "by simp"], ["proof (state)\nthis:\n  n \\<le> m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> Suc m; n < Suc m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "hence \"\\<exists>y. cls_val_process Mkt pf m y < 0\""], ["proof (prove)\nusing this:\n  n \\<le> m\n\ngoal (1 subgoal):\n 1. \\<exists>y. cls_val_process Mkt pf m y < 0", "using Suc"], ["proof (prove)\nusing this:\n  n \\<le> m\n  n \\<le> m \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf m y < 0\n  n \\<le> Suc m\n\ngoal (1 subgoal):\n 1. \\<exists>y. cls_val_process Mkt pf m y < 0", "by simp"], ["proof (state)\nthis:\n  \\<exists>y. cls_val_process Mkt pf m y < 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> Suc m; n < Suc m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "from this"], ["proof (chain)\npicking this:\n  \\<exists>y. cls_val_process Mkt pf m y < 0", "obtain y where \"cls_val_process Mkt pf m y < 0\""], ["proof (prove)\nusing this:\n  \\<exists>y. cls_val_process Mkt pf m y < 0\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        cls_val_process Mkt pf m y < 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  cls_val_process Mkt pf m y < 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> Suc m; n < Suc m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "hence \"val_process Mkt pf m y < 0\""], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf m y < 0\n\ngoal (1 subgoal):\n 1. val_process Mkt pf m y < 0", "using assms"], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf m y < 0\n  stock_portfolio Mkt pf\n  trading_strategy pf\n  self_financing Mkt pf\n  1 + r < u\n  d < 1 + r\n  cls_val_process Mkt pf n w < 0\n\ngoal (1 subgoal):\n 1. val_process Mkt pf m y < 0", "by (simp add:self_financingE)"], ["proof (state)\nthis:\n  val_process Mkt pf m y < 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> Suc m; n < Suc m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "hence \"val_process Mkt pf m y \\<le> 0\""], ["proof (prove)\nusing this:\n  val_process Mkt pf m y < 0\n\ngoal (1 subgoal):\n 1. val_process Mkt pf m y \\<le> 0", "by simp"], ["proof (state)\nthis:\n  val_process Mkt pf m y \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> Suc m; n < Suc m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "have \"val_process Mkt pf m y \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt pf m y \\<noteq> 0", "using \\<open>val_process Mkt pf m y < 0\\<close>"], ["proof (prove)\nusing this:\n  val_process Mkt pf m y < 0\n\ngoal (1 subgoal):\n 1. val_process Mkt pf m y \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  val_process Mkt pf m y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> Suc m; n < Suc m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "hence \"pf stk (Suc m) y \\<noteq> 0 \\<or> pf risk_free_asset (Suc m) y \\<noteq> 0\""], ["proof (prove)\nusing this:\n  val_process Mkt pf m y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. pf stk (Suc m) y \\<noteq> 0 \\<or>\n    pf risk_free_asset (Suc m) y \\<noteq> 0", "using assms non_zero_components"], ["proof (prove)\nusing this:\n  val_process Mkt pf m y \\<noteq> 0\n  stock_portfolio Mkt pf\n  trading_strategy pf\n  self_financing Mkt pf\n  1 + r < u\n  d < 1 + r\n  cls_val_process Mkt pf n w < 0\n  \\<lbrakk>val_process Mkt ?pf ?n ?y \\<noteq> 0;\n   stock_portfolio Mkt ?pf\\<rbrakk>\n  \\<Longrightarrow> ?pf stk (Suc ?n) ?y \\<noteq> 0 \\<or>\n                    ?pf risk_free_asset (Suc ?n) ?y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. pf stk (Suc m) y \\<noteq> 0 \\<or>\n    pf risk_free_asset (Suc m) y \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  pf stk (Suc m) y \\<noteq> 0 \\<or> pf risk_free_asset (Suc m) y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> Suc m; n < Suc m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "thus \"\\<exists>y. cls_val_process Mkt pf (Suc m) y < 0\""], ["proof (prove)\nusing this:\n  pf stk (Suc m) y \\<noteq> 0 \\<or> pf risk_free_asset (Suc m) y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "using neg_pf_exists[of pf m y] assms\n      \\<open>val_process Mkt pf m y \\<le> 0\\<close>"], ["proof (prove)\nusing this:\n  pf stk (Suc m) y \\<noteq> 0 \\<or> pf risk_free_asset (Suc m) y \\<noteq> 0\n  \\<lbrakk>stock_portfolio Mkt pf; trading_strategy pf; 1 + r < u;\n   d < 1 + r; val_process Mkt pf m y \\<le> 0;\n   pf stk (Suc m) y \\<noteq> 0 \\<or>\n   pf risk_free_asset (Suc m) y \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0\n  stock_portfolio Mkt pf\n  trading_strategy pf\n  self_financing Mkt pf\n  1 + r < u\n  d < 1 + r\n  cls_val_process Mkt pf n w < 0\n  val_process Mkt pf m y \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0", "by simp"], ["proof (state)\nthis:\n  \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>y. cls_val_process Mkt pf (Suc m) y < 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) viable_if:\n  assumes \"1+r < u\"\n  and \"d < 1+r\"\nshows \"viable_market Mkt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. viable_market Mkt", "unfolding viable_market_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p.\n       stock_portfolio Mkt p \\<longrightarrow>\n       \\<not> arbitrage_process Mkt p", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "assume \"\\<not>(\\<forall>p. stock_portfolio Mkt p \\<longrightarrow> \\<not> arbitrage_process Mkt p)\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>p.\n             stock_portfolio Mkt p \\<longrightarrow>\n             \\<not> arbitrage_process Mkt p)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "hence \"\\<exists>p. stock_portfolio Mkt p \\<and> arbitrage_process Mkt p\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>p.\n             stock_portfolio Mkt p \\<longrightarrow>\n             \\<not> arbitrage_process Mkt p)\n\ngoal (1 subgoal):\n 1. \\<exists>p. stock_portfolio Mkt p \\<and> arbitrage_process Mkt p", "by simp"], ["proof (state)\nthis:\n  \\<exists>p. stock_portfolio Mkt p \\<and> arbitrage_process Mkt p\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  \\<exists>p. stock_portfolio Mkt p \\<and> arbitrage_process Mkt p", "obtain pf where \"stock_portfolio Mkt pf\" and \"arbitrage_process Mkt pf\""], ["proof (prove)\nusing this:\n  \\<exists>p. stock_portfolio Mkt p \\<and> arbitrage_process Mkt p\n\ngoal (1 subgoal):\n 1. (\\<And>pf.\n        \\<lbrakk>stock_portfolio Mkt pf; arbitrage_process Mkt pf\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  stock_portfolio Mkt pf\n  arbitrage_process Mkt pf\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "have \"(\\<exists> m. (self_financing Mkt pf) \\<and> (trading_strategy pf) \\<and>\n    (\\<forall>w \\<in> space M. cls_val_process Mkt pf 0 w = 0) \\<and>\n    (AE w in M. 0 \\<le> cls_val_process Mkt pf m w) \\<and>\n    0 < \\<P>(w in M. cls_val_process Mkt pf m w > 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m.\n       self_financing Mkt pf \\<and>\n       trading_strategy pf \\<and>\n       (\\<forall>w\\<in>space M. cls_val_process Mkt pf 0 w = 0) \\<and>\n       (AE w in M. 0 \\<le> cls_val_process Mkt pf m w) \\<and>\n       0 < prob {w \\<in> space M. 0 < cls_val_process Mkt pf m w}", "using \\<open>arbitrage_process Mkt pf\\<close>"], ["proof (prove)\nusing this:\n  arbitrage_process Mkt pf\n\ngoal (1 subgoal):\n 1. \\<exists>m.\n       self_financing Mkt pf \\<and>\n       trading_strategy pf \\<and>\n       (\\<forall>w\\<in>space M. cls_val_process Mkt pf 0 w = 0) \\<and>\n       (AE w in M. 0 \\<le> cls_val_process Mkt pf m w) \\<and>\n       0 < prob {w \\<in> space M. 0 < cls_val_process Mkt pf m w}", "using arbitrage_processE"], ["proof (prove)\nusing this:\n  arbitrage_process Mkt pf\n  arbitrage_process ?Mkt ?p \\<Longrightarrow>\n  \\<exists>m.\n     self_financing ?Mkt ?p \\<and>\n     trading_strategy ?p \\<and>\n     (\\<forall>w\\<in>space M. cls_val_process ?Mkt ?p 0 w = 0) \\<and>\n     (AE w in M. 0 \\<le> cls_val_process ?Mkt ?p m w) \\<and>\n     0 < prob {w \\<in> space M. 0 < cls_val_process ?Mkt ?p m w}\n\ngoal (1 subgoal):\n 1. \\<exists>m.\n       self_financing Mkt pf \\<and>\n       trading_strategy pf \\<and>\n       (\\<forall>w\\<in>space M. cls_val_process Mkt pf 0 w = 0) \\<and>\n       (AE w in M. 0 \\<le> cls_val_process Mkt pf m w) \\<and>\n       0 < prob {w \\<in> space M. 0 < cls_val_process Mkt pf m w}", "by simp"], ["proof (state)\nthis:\n  \\<exists>m.\n     self_financing Mkt pf \\<and>\n     trading_strategy pf \\<and>\n     (\\<forall>w\\<in>space M. cls_val_process Mkt pf 0 w = 0) \\<and>\n     (AE w in M. 0 \\<le> cls_val_process Mkt pf m w) \\<and>\n     0 < prob {w \\<in> space M. 0 < cls_val_process Mkt pf m w}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  \\<exists>m.\n     self_financing Mkt pf \\<and>\n     trading_strategy pf \\<and>\n     (\\<forall>w\\<in>space M. cls_val_process Mkt pf 0 w = 0) \\<and>\n     (AE w in M. 0 \\<le> cls_val_process Mkt pf m w) \\<and>\n     0 < prob {w \\<in> space M. 0 < cls_val_process Mkt pf m w}", "obtain m where \"self_financing Mkt pf\" and \"(trading_strategy pf)\"\n    and \"(\\<forall>w \\<in> space M. cls_val_process Mkt pf 0 w = 0)\"\n    and \"(AE w in M. 0 \\<le> cls_val_process Mkt pf m w)\"\n    and \"0 < \\<P>(w in M. cls_val_process Mkt pf m w > 0)\""], ["proof (prove)\nusing this:\n  \\<exists>m.\n     self_financing Mkt pf \\<and>\n     trading_strategy pf \\<and>\n     (\\<forall>w\\<in>space M. cls_val_process Mkt pf 0 w = 0) \\<and>\n     (AE w in M. 0 \\<le> cls_val_process Mkt pf m w) \\<and>\n     0 < prob {w \\<in> space M. 0 < cls_val_process Mkt pf m w}\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>self_financing Mkt pf; trading_strategy pf;\n         \\<forall>w\\<in>space M. cls_val_process Mkt pf 0 w = 0;\n         AE w in M. 0 \\<le> cls_val_process Mkt pf m w;\n         0 < prob {w \\<in> space M. 0 < cls_val_process Mkt pf m w}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  self_financing Mkt pf\n  trading_strategy pf\n  \\<forall>w\\<in>space M. cls_val_process Mkt pf 0 w = 0\n  AE w in M. 0 \\<le> cls_val_process Mkt pf m w\n  0 < prob {w \\<in> space M. 0 < cls_val_process Mkt pf m w}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "have \"{w\\<in> space M. cls_val_process Mkt pf m w > 0} \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. 0 < cls_val_process Mkt pf m w} \\<noteq> {}", "using\n    \\<open>0 < \\<P>(w in M. cls_val_process Mkt pf m w > 0)\\<close>"], ["proof (prove)\nusing this:\n  0 < prob {w \\<in> space M. 0 < cls_val_process Mkt pf m w}\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. 0 < cls_val_process Mkt pf m w} \\<noteq> {}", "by force"], ["proof (state)\nthis:\n  {w \\<in> space M. 0 < cls_val_process Mkt pf m w} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "hence \"\\<exists>w\\<in> space M. cls_val_process Mkt pf m w > 0\""], ["proof (prove)\nusing this:\n  {w \\<in> space M. 0 < cls_val_process Mkt pf m w} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>w\\<in>space M. 0 < cls_val_process Mkt pf m w", "by auto"], ["proof (state)\nthis:\n  \\<exists>w\\<in>space M. 0 < cls_val_process Mkt pf m w\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  \\<exists>w\\<in>space M. 0 < cls_val_process Mkt pf m w", "obtain y where \"y\\<in> space M\" and \"cls_val_process Mkt pf m y > 0\""], ["proof (prove)\nusing this:\n  \\<exists>w\\<in>space M. 0 < cls_val_process Mkt pf m w\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> space M; 0 < cls_val_process Mkt pf m y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> space M\n  0 < cls_val_process Mkt pf m y\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "define A where \"A = {n::nat. n \\<le> m \\<and> cls_val_process Mkt pf n y > 0}\""], ["proof (state)\nthis:\n  A = {n. n \\<le> m \\<and> 0 < cls_val_process Mkt pf n y}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "have \"finite A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A", "unfolding A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {n. n \\<le> m \\<and> 0 < cls_val_process Mkt pf n y}", "by auto"], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "have \"m \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<in> A", "using \\<open>cls_val_process Mkt pf m y > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < cls_val_process Mkt pf m y\n\ngoal (1 subgoal):\n 1. m \\<in> A", "unfolding A_def"], ["proof (prove)\nusing this:\n  0 < cls_val_process Mkt pf m y\n\ngoal (1 subgoal):\n 1. m \\<in> {n. n \\<le> m \\<and> 0 < cls_val_process Mkt pf n y}", "by simp"], ["proof (state)\nthis:\n  m \\<in> A\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "hence \"A \\<noteq> {}\""], ["proof (prove)\nusing this:\n  m \\<in> A\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "hence \"Min A \\<in> A\""], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Min A \\<in> A", "using \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  finite A\n\ngoal (1 subgoal):\n 1. Min A \\<in> A", "by simp"], ["proof (state)\nthis:\n  Min A \\<in> A\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "have \"Min A \\<le> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Min A \\<le> m", "using \\<open>finite A\\<close> \\<open>m\\<in> A\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  m \\<in> A\n\ngoal (1 subgoal):\n 1. Min A \\<le> m", "by simp"], ["proof (state)\nthis:\n  Min A \\<le> m\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "have \"0 < Min A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Min A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < Min A", "have \"cls_val_process Mkt pf 0 y = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf 0 y = 0", "using \\<open>y\\<in> space M\\<close> \\<open>\\<forall>w \\<in> space M. cls_val_process Mkt pf 0 w = 0\\<close>"], ["proof (prove)\nusing this:\n  y \\<in> space M\n  \\<forall>w\\<in>space M. cls_val_process Mkt pf 0 w = 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf 0 y = 0", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt pf 0 y = 0\n\ngoal (1 subgoal):\n 1. 0 < Min A", "hence \"0\\<notin> A\""], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf 0 y = 0\n\ngoal (1 subgoal):\n 1. 0 \\<notin> A", "unfolding A_def"], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf 0 y = 0\n\ngoal (1 subgoal):\n 1. 0 \\<notin> {n. n \\<le> m \\<and> 0 < cls_val_process Mkt pf n y}", "by simp"], ["proof (state)\nthis:\n  0 \\<notin> A\n\ngoal (1 subgoal):\n 1. 0 < Min A", "moreover"], ["proof (state)\nthis:\n  0 \\<notin> A\n\ngoal (1 subgoal):\n 1. 0 < Min A", "have \"0 \\<le> Min A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Min A", "by simp"], ["proof (state)\nthis:\n  0 \\<le> Min A\n\ngoal (1 subgoal):\n 1. 0 < Min A", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<notin> A\n  0 \\<le> Min A", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<notin> A\n  0 \\<le> Min A\n\ngoal (1 subgoal):\n 1. 0 < Min A", "using \\<open>Min A \\<in> A\\<close> neq0_conv"], ["proof (prove)\nusing this:\n  0 \\<notin> A\n  0 \\<le> Min A\n  Min A \\<in> A\n  (?n \\<noteq> 0) = (0 < ?n)\n\ngoal (1 subgoal):\n 1. 0 < Min A", "by fastforce"], ["proof (state)\nthis:\n  0 < Min A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < Min A\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "hence \"\\<exists>l. Suc l = Min A\""], ["proof (prove)\nusing this:\n  0 < Min A\n\ngoal (1 subgoal):\n 1. \\<exists>l. Suc l = Min A", "using Suc_diff_1"], ["proof (prove)\nusing this:\n  0 < Min A\n  0 < ?n \\<Longrightarrow> Suc (?n - 1) = ?n\n\ngoal (1 subgoal):\n 1. \\<exists>l. Suc l = Min A", "by blast"], ["proof (state)\nthis:\n  \\<exists>l. Suc l = Min A\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  \\<exists>l. Suc l = Min A", "obtain l where \"Suc l = Min A\""], ["proof (prove)\nusing this:\n  \\<exists>l. Suc l = Min A\n\ngoal (1 subgoal):\n 1. (\\<And>l. Suc l = Min A \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Suc l = Min A\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "have \"cls_val_process Mkt pf l y \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf l y \\<le> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf l y \\<le> 0", "have \"l < Min A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l < Min A", "using \\<open>Suc l = Min A\\<close>"], ["proof (prove)\nusing this:\n  Suc l = Min A\n\ngoal (1 subgoal):\n 1. l < Min A", "by simp"], ["proof (state)\nthis:\n  l < Min A\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf l y \\<le> 0", "hence \"l\\<notin> A\""], ["proof (prove)\nusing this:\n  l < Min A\n\ngoal (1 subgoal):\n 1. l \\<notin> A", "using \\<open>finite A\\<close> \\<open>A \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  l < Min A\n  finite A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. l \\<notin> A", "by auto"], ["proof (state)\nthis:\n  l \\<notin> A\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf l y \\<le> 0", "moreover"], ["proof (state)\nthis:\n  l \\<notin> A\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf l y \\<le> 0", "have \"l \\<le> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l \\<le> m", "using \\<open>Suc l = Min A\\<close> \\<open>m\\<in> A\\<close> \\<open>finite A\\<close> \\<open>A \\<noteq> {}\\<close> \\<open>l < Min A\\<close>"], ["proof (prove)\nusing this:\n  Suc l = Min A\n  m \\<in> A\n  finite A\n  A \\<noteq> {}\n  l < Min A\n\ngoal (1 subgoal):\n 1. l \\<le> m", "by auto"], ["proof (state)\nthis:\n  l \\<le> m\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf l y \\<le> 0", "ultimately"], ["proof (chain)\npicking this:\n  l \\<notin> A\n  l \\<le> m", "show ?thesis"], ["proof (prove)\nusing this:\n  l \\<notin> A\n  l \\<le> m\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf l y \\<le> 0", "unfolding A_def"], ["proof (prove)\nusing this:\n  l \\<notin> {n. n \\<le> m \\<and> 0 < cls_val_process Mkt pf n y}\n  l \\<le> m\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf l y \\<le> 0", "by auto"], ["proof (state)\nthis:\n  cls_val_process Mkt pf l y \\<le> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cls_val_process Mkt pf l y \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "hence \"val_process Mkt pf l y \\<le> 0\""], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf l y \\<le> 0\n\ngoal (1 subgoal):\n 1. val_process Mkt pf l y \\<le> 0", "using \\<open>self_financing Mkt pf\\<close>"], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf l y \\<le> 0\n  self_financing Mkt pf\n\ngoal (1 subgoal):\n 1. val_process Mkt pf l y \\<le> 0", "by (simp add:self_financingE)"], ["proof (state)\nthis:\n  val_process Mkt pf l y \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  val_process Mkt pf l y \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "have \"pf stk (Suc l) y \\<noteq> 0 \\<or> pf risk_free_asset (Suc l) y \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pf stk (Suc l) y \\<noteq> 0 \\<or>\n    pf risk_free_asset (Suc l) y \\<noteq> 0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (pf stk (Suc l) y \\<noteq> 0 \\<or>\n            pf risk_free_asset (Suc l) y \\<noteq> 0) \\<Longrightarrow>\n    False", "assume \"\\<not>(pf stk (Suc l) y \\<noteq> 0 \\<or> pf risk_free_asset (Suc l) y \\<noteq> 0)\""], ["proof (state)\nthis:\n  \\<not> (pf stk (Suc l) y \\<noteq> 0 \\<or>\n          pf risk_free_asset (Suc l) y \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<not> (pf stk (Suc l) y \\<noteq> 0 \\<or>\n            pf risk_free_asset (Suc l) y \\<noteq> 0) \\<Longrightarrow>\n    False", "hence \"pf stk (Suc l) y = 0\" \"pf risk_free_asset (Suc l) y = 0\""], ["proof (prove)\nusing this:\n  \\<not> (pf stk (Suc l) y \\<noteq> 0 \\<or>\n          pf risk_free_asset (Suc l) y \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. pf stk (Suc l) y = 0 &&& pf risk_free_asset (Suc l) y = 0", "by auto"], ["proof (state)\nthis:\n  pf stk (Suc l) y = 0\n  pf risk_free_asset (Suc l) y = 0\n\ngoal (1 subgoal):\n 1. \\<not> (pf stk (Suc l) y \\<noteq> 0 \\<or>\n            pf risk_free_asset (Suc l) y \\<noteq> 0) \\<Longrightarrow>\n    False", "have \"cls_val_process Mkt pf (Min A) y = geom_proc (Suc l) y * pf stk (Suc l) y +\n      disc_rfr_proc r (Suc l) y * pf risk_free_asset (Suc l) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Min A) y =\n    geom_proc (Suc l) y * pf stk (Suc l) y +\n    disc_rfr_proc r (Suc l) y * pf risk_free_asset (Suc l) y", "using \\<open>stock_portfolio Mkt pf\\<close>\n      \\<open>Suc l = Min A\\<close> stock_pf_uvp_expand[of pf l]"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt pf\n  Suc l = Min A\n  stock_portfolio Mkt pf \\<Longrightarrow>\n  cls_val_process Mkt pf (Suc l) ?w =\n  geom_proc (Suc l) ?w * pf stk (Suc l) ?w +\n  disc_rfr_proc r (Suc l) ?w * pf risk_free_asset (Suc l) ?w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Min A) y =\n    geom_proc (Suc l) y * pf stk (Suc l) y +\n    disc_rfr_proc r (Suc l) y * pf risk_free_asset (Suc l) y", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Min A) y =\n  geom_proc (Suc l) y * pf stk (Suc l) y +\n  disc_rfr_proc r (Suc l) y * pf risk_free_asset (Suc l) y\n\ngoal (1 subgoal):\n 1. \\<not> (pf stk (Suc l) y \\<noteq> 0 \\<or>\n            pf risk_free_asset (Suc l) y \\<noteq> 0) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Min A) y =\n  geom_proc (Suc l) y * pf stk (Suc l) y +\n  disc_rfr_proc r (Suc l) y * pf risk_free_asset (Suc l) y\n\ngoal (1 subgoal):\n 1. \\<not> (pf stk (Suc l) y \\<noteq> 0 \\<or>\n            pf risk_free_asset (Suc l) y \\<noteq> 0) \\<Longrightarrow>\n    False", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc l) y * pf stk (Suc l) y +\n    disc_rfr_proc r (Suc l) y * pf risk_free_asset (Suc l) y =\n    0", "using \\<open>pf stk (Suc l) y = 0\\<close> \\<open>pf risk_free_asset (Suc l) y = 0\\<close>"], ["proof (prove)\nusing this:\n  pf stk (Suc l) y = 0\n  pf risk_free_asset (Suc l) y = 0\n\ngoal (1 subgoal):\n 1. geom_proc (Suc l) y * pf stk (Suc l) y +\n    disc_rfr_proc r (Suc l) y * pf risk_free_asset (Suc l) y =\n    0", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc l) y * pf stk (Suc l) y +\n  disc_rfr_proc r (Suc l) y * pf risk_free_asset (Suc l) y =\n  0\n\ngoal (1 subgoal):\n 1. \\<not> (pf stk (Suc l) y \\<noteq> 0 \\<or>\n            pf risk_free_asset (Suc l) y \\<noteq> 0) \\<Longrightarrow>\n    False", "finally"], ["proof (chain)\npicking this:\n  cls_val_process Mkt pf (Min A) y = 0", "have \"cls_val_process Mkt pf (Min A) y = 0\""], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf (Min A) y = 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Min A) y = 0", "."], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Min A) y = 0\n\ngoal (1 subgoal):\n 1. \\<not> (pf stk (Suc l) y \\<noteq> 0 \\<or>\n            pf risk_free_asset (Suc l) y \\<noteq> 0) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Min A) y = 0\n\ngoal (1 subgoal):\n 1. \\<not> (pf stk (Suc l) y \\<noteq> 0 \\<or>\n            pf risk_free_asset (Suc l) y \\<noteq> 0) \\<Longrightarrow>\n    False", "have \"cls_val_process Mkt pf (Min A) y > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < cls_val_process Mkt pf (Min A) y", "using \\<open>Min A \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  Min A \\<in> A\n\ngoal (1 subgoal):\n 1. 0 < cls_val_process Mkt pf (Min A) y", "unfolding A_def"], ["proof (prove)\nusing this:\n  Min {n. n \\<le> m \\<and> 0 < cls_val_process Mkt pf n y}\n  \\<in> {n. n \\<le> m \\<and> 0 < cls_val_process Mkt pf n y}\n\ngoal (1 subgoal):\n 1. 0 < cls_val_process Mkt pf\n         (Min {n. n \\<le> m \\<and> 0 < cls_val_process Mkt pf n y}) y", "by simp"], ["proof (state)\nthis:\n  0 < cls_val_process Mkt pf (Min A) y\n\ngoal (1 subgoal):\n 1. \\<not> (pf stk (Suc l) y \\<noteq> 0 \\<or>\n            pf risk_free_asset (Suc l) y \\<noteq> 0) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  cls_val_process Mkt pf (Min A) y = 0\n  0 < cls_val_process Mkt pf (Min A) y", "show False"], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf (Min A) y = 0\n  0 < cls_val_process Mkt pf (Min A) y\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pf stk (Suc l) y \\<noteq> 0 \\<or> pf risk_free_asset (Suc l) y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  val_process Mkt pf l y \\<le> 0\n  pf stk (Suc l) y \\<noteq> 0 \\<or> pf risk_free_asset (Suc l) y \\<noteq> 0", "have \"\\<exists>z. cls_val_process Mkt pf (Suc l) z < 0\""], ["proof (prove)\nusing this:\n  val_process Mkt pf l y \\<le> 0\n  pf stk (Suc l) y \\<noteq> 0 \\<or> pf risk_free_asset (Suc l) y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>z. cls_val_process Mkt pf (Suc l) z < 0", "using assms \\<open>stock_portfolio Mkt pf\\<close>\n    \\<open>trading_strategy pf\\<close>"], ["proof (prove)\nusing this:\n  val_process Mkt pf l y \\<le> 0\n  pf stk (Suc l) y \\<noteq> 0 \\<or> pf risk_free_asset (Suc l) y \\<noteq> 0\n  1 + r < u\n  d < 1 + r\n  stock_portfolio Mkt pf\n  trading_strategy pf\n\ngoal (1 subgoal):\n 1. \\<exists>z. cls_val_process Mkt pf (Suc l) z < 0", "by (simp add:neg_pf_exists)"], ["proof (state)\nthis:\n  \\<exists>z. cls_val_process Mkt pf (Suc l) z < 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  \\<exists>z. cls_val_process Mkt pf (Suc l) z < 0", "obtain z where \"cls_val_process Mkt pf (Suc l) z < 0\""], ["proof (prove)\nusing this:\n  \\<exists>z. cls_val_process Mkt pf (Suc l) z < 0\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        cls_val_process Mkt pf (Suc l) z < 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc l) z < 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "hence \"\\<exists>x'. cls_val_process Mkt pf m x' < 0\""], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf (Suc l) z < 0\n\ngoal (1 subgoal):\n 1. \\<exists>x'. cls_val_process Mkt pf m x' < 0", "using neg_pf_Suc assms \\<open>trading_strategy pf\\<close>\n      \\<open>self_financing Mkt pf\\<close> \\<open>Suc l = Min A\\<close> \\<open>Min A \\<le> m\\<close> \\<open>stock_portfolio Mkt pf\\<close>"], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf (Suc l) z < 0\n  \\<lbrakk>stock_portfolio Mkt ?pf; trading_strategy ?pf;\n   self_financing Mkt ?pf; 1 + r < u; d < 1 + r;\n   cls_val_process Mkt ?pf ?n ?w < 0; ?n \\<le> ?m\\<rbrakk>\n  \\<Longrightarrow> \\<exists>y. cls_val_process Mkt ?pf ?m y < 0\n  1 + r < u\n  d < 1 + r\n  trading_strategy pf\n  self_financing Mkt pf\n  Suc l = Min A\n  Min A \\<le> m\n  stock_portfolio Mkt pf\n\ngoal (1 subgoal):\n 1. \\<exists>x'. cls_val_process Mkt pf m x' < 0", "by simp"], ["proof (state)\nthis:\n  \\<exists>x'. cls_val_process Mkt pf m x' < 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  \\<exists>x'. cls_val_process Mkt pf m x' < 0", "obtain x' where \"cls_val_process Mkt pf m x' < 0\""], ["proof (prove)\nusing this:\n  \\<exists>x'. cls_val_process Mkt pf m x' < 0\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        cls_val_process Mkt pf m x' < 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  cls_val_process Mkt pf m x' < 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "have \"x'\\<in> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x' \\<in> space M", "using bernoulli_stream_space bernoulli"], ["proof (prove)\nusing this:\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n  M = bernoulli_stream p\n\ngoal (1 subgoal):\n 1. x' \\<in> space M", "by auto"], ["proof (state)\nthis:\n  x' \\<in> space M\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "hence \"x'\\<in> {w\\<in> space M. \\<not>0 \\<le> cls_val_process Mkt pf m w}\""], ["proof (prove)\nusing this:\n  x' \\<in> space M\n\ngoal (1 subgoal):\n 1. x' \\<in> {w \\<in> space M. \\<not> 0 \\<le> cls_val_process Mkt pf m w}", "using \\<open>cls_val_process Mkt pf m x' < 0\\<close>"], ["proof (prove)\nusing this:\n  x' \\<in> space M\n  cls_val_process Mkt pf m x' < 0\n\ngoal (1 subgoal):\n 1. x' \\<in> {w \\<in> space M. \\<not> 0 \\<le> cls_val_process Mkt pf m w}", "by auto"], ["proof (state)\nthis:\n  x' \\<in> {w \\<in> space M. \\<not> 0 \\<le> cls_val_process Mkt pf m w}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "from \\<open>AE w in M. 0 \\<le> cls_val_process Mkt pf m w\\<close>"], ["proof (chain)\npicking this:\n  AE w in M. 0 \\<le> cls_val_process Mkt pf m w", "obtain N where\n    \"{w\\<in> space M. \\<not>0 \\<le> cls_val_process Mkt pf m w} \\<subseteq> N\" and \"emeasure M N = 0\" and \"N\\<in> sets M\""], ["proof (prove)\nusing this:\n  AE w in M. 0 \\<le> cls_val_process Mkt pf m w\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>{w \\<in> space M.\n                  \\<not> 0 \\<le> cls_val_process Mkt pf m w}\n                 \\<subseteq> N;\n         emeasure M N = 0; N \\<in> events\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using AE_E"], ["proof (prove)\nusing this:\n  AE w in M. 0 \\<le> cls_val_process Mkt pf m w\n  \\<lbrakk>almost_everywhere ?M ?P;\n   \\<And>N.\n      \\<lbrakk>{x \\<in> space ?M. \\<not> ?P x} \\<subseteq> N;\n       emeasure ?M N = 0; N \\<in> sets ?M\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>{w \\<in> space M.\n                  \\<not> 0 \\<le> cls_val_process Mkt pf m w}\n                 \\<subseteq> N;\n         emeasure M N = 0; N \\<in> events\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  {w \\<in> space M. \\<not> 0 \\<le> cls_val_process Mkt pf m w} \\<subseteq> N\n  emeasure M N = 0\n  N \\<in> events\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "have \"{w\\<in> space M. (stake m w = stake m x')} \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. stake m w = stake m x'} \\<subseteq> N", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. stake m w = stake m x'} \\<Longrightarrow>\n       x \\<in> N", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. stake m w = stake m x'} \\<Longrightarrow>\n       x \\<in> N", "assume \"x \\<in> {w \\<in> space M. stake m w = stake m x'}\""], ["proof (state)\nthis:\n  x \\<in> {w \\<in> space M. stake m w = stake m x'}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. stake m w = stake m x'} \\<Longrightarrow>\n       x \\<in> N", "hence \"x\\<in> space M\" and \"stake m x = stake m x'\""], ["proof (prove)\nusing this:\n  x \\<in> {w \\<in> space M. stake m w = stake m x'}\n\ngoal (1 subgoal):\n 1. x \\<in> space M &&& stake m x = stake m x'", "by auto"], ["proof (state)\nthis:\n  x \\<in> space M\n  stake m x = stake m x'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. stake m w = stake m x'} \\<Longrightarrow>\n       x \\<in> N", "have \"cls_val_process Mkt pf m \\<in> borel_measurable (G m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf m \\<in> borel_measurable (G m)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf m \\<in> borel_measurable (G m)", "have \"borel_adapt_stoch_proc G (cls_val_process Mkt pf)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc G (cls_val_process Mkt pf)", "using \\<open>trading_strategy pf\\<close> \\<open>stock_portfolio Mkt pf\\<close>"], ["proof (prove)\nusing this:\n  trading_strategy pf\n  stock_portfolio Mkt pf\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc G (cls_val_process Mkt pf)", "by (meson support_adapt_def readable  stock_portfolio_def subsetCE cls_val_process_adapted)"], ["proof (state)\nthis:\n  borel_adapt_stoch_proc G (cls_val_process Mkt pf)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf m \\<in> borel_measurable (G m)", "thus ?thesis"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc G (cls_val_process Mkt pf)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf m \\<in> borel_measurable (G m)", "unfolding adapt_stoch_proc_def"], ["proof (prove)\nusing this:\n  \\<forall>t. cls_val_process Mkt pf t \\<in> borel_measurable (G t)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf m \\<in> borel_measurable (G m)", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt pf m \\<in> borel_measurable (G m)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cls_val_process Mkt pf m \\<in> borel_measurable (G m)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. stake m w = stake m x'} \\<Longrightarrow>\n       x \\<in> N", "hence \"cls_val_process Mkt pf m x' = cls_val_process Mkt pf m x\""], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf m \\<in> borel_measurable (G m)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf m x' = cls_val_process Mkt pf m x", "using  \\<open>stake m x = stake m x'\\<close> borel_measurable_stake[of \"cls_val_process Mkt pf m\" m x x']\n      pseudo_proj_True_stake_image spickI stoch_proc_subalg_nat_filt[of geom_proc] geometric_process stock_filtration"], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf m \\<in> borel_measurable (G m)\n  stake m x = stake m x'\n  \\<lbrakk>cls_val_process Mkt pf m\n           \\<in> borel_measurable (nat_filtration m);\n   stake m x = stake m x'\\<rbrakk>\n  \\<Longrightarrow> cls_val_process Mkt pf m x = cls_val_process Mkt pf m x'\n  stake ?n ?w = stake ?n ?x \\<Longrightarrow>\n  pseudo_proj_True ?n ?w = pseudo_proj_True ?n ?x\n  stake ?n (spick ?w ?n ?v) = stake ?n ?w \\<and> spick ?w ?n ?v !! ?n = ?v\n  borel_adapt_stoch_proc nat_filtration geom_proc \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M geom_proc borel ?n)\n  geom_proc = geom_rand_walk u d init\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf m x' = cls_val_process Mkt pf m x", "by (metis geom_rand_walk_borel_adapted measurable_from_subalg)"], ["proof (state)\nthis:\n  cls_val_process Mkt pf m x' = cls_val_process Mkt pf m x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. stake m w = stake m x'} \\<Longrightarrow>\n       x \\<in> N", "hence \"cls_val_process Mkt pf m x < 0\""], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf m x' = cls_val_process Mkt pf m x\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf m x < 0", "using \\<open>cls_val_process Mkt pf m x' < 0\\<close>"], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf m x' = cls_val_process Mkt pf m x\n  cls_val_process Mkt pf m x' < 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf m x < 0", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt pf m x < 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. stake m w = stake m x'} \\<Longrightarrow>\n       x \\<in> N", "thus \"x\\<in> N\""], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf m x < 0\n\ngoal (1 subgoal):\n 1. x \\<in> N", "using \\<open>{w\\<in> space M. \\<not>0 \\<le> cls_val_process Mkt pf m w} \\<subseteq> N\\<close> \\<open>x\\<in> space M\\<close>\n      \\<open>cls_val_process Mkt pf (Suc l) z < 0\\<close>"], ["proof (prove)\nusing this:\n  cls_val_process Mkt pf m x < 0\n  {w \\<in> space M. \\<not> 0 \\<le> cls_val_process Mkt pf m w} \\<subseteq> N\n  x \\<in> space M\n  cls_val_process Mkt pf (Suc l) z < 0\n\ngoal (1 subgoal):\n 1. x \\<in> N", "by auto"], ["proof (state)\nthis:\n  x \\<in> N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w \\<in> space M. stake m w = stake m x'} \\<subseteq> N\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  {w \\<in> space M. stake m w = stake m x'} \\<subseteq> N\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "have \"emeasure M {w\\<in> space M. (stake m w = stake m x')} \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake m w = stake m x'} \\<noteq> 0", "using bernoulli_stream_pref_prob_neq_zero psgt pslt"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < p; p < 1\\<rbrakk>\n  \\<Longrightarrow> emeasure M\n                     {w \\<in> space M. stake ?n w = stake ?n ?x} \\<noteq>\n                    0\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake m w = stake m x'} \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. stake m w = stake m x'} \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               stock_portfolio Mkt p \\<longrightarrow>\n               \\<not> arbitrage_process Mkt p) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  {w \\<in> space M. stake m w = stake m x'} \\<subseteq> N\n  emeasure M {w \\<in> space M. stake m w = stake m x'} \\<noteq> 0", "show False"], ["proof (prove)\nusing this:\n  {w \\<in> space M. stake m w = stake m x'} \\<subseteq> N\n  emeasure M {w \\<in> space M. stake m w = stake m x'} \\<noteq> 0\n\ngoal (1 subgoal):\n 1. False", "using \\<open>emeasure M N = 0\\<close> \\<open>N \\<in> events\\<close> emeasure_eq_0"], ["proof (prove)\nusing this:\n  {w \\<in> space M. stake m w = stake m x'} \\<subseteq> N\n  emeasure M {w \\<in> space M. stake m w = stake m x'} \\<noteq> 0\n  emeasure M N = 0\n  N \\<in> events\n  \\<lbrakk>?N \\<in> sets ?M; emeasure ?M ?N = 0; ?K \\<subseteq> ?N\\<rbrakk>\n  \\<Longrightarrow> emeasure ?M ?K = 0\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) viable_only_if_d:\n  assumes \"viable_market Mkt\"\n  shows \"d < 1+r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d < 1 + r", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> d < 1 + r \\<Longrightarrow> False", "assume \"\\<not> d < 1+r\""], ["proof (state)\nthis:\n  \\<not> d < 1 + r\n\ngoal (1 subgoal):\n 1. \\<not> d < 1 + r \\<Longrightarrow> False", "hence \"1+r \\<le> d\""], ["proof (prove)\nusing this:\n  \\<not> d < 1 + r\n\ngoal (1 subgoal):\n 1. 1 + r \\<le> d", "by simp"], ["proof (state)\nthis:\n  1 + r \\<le> d\n\ngoal (1 subgoal):\n 1. \\<not> d < 1 + r \\<Longrightarrow> False", "define arb_pf where \"arb_pf = (\\<lambda> (x::'a) (n::nat) w. 0::real)(stk:= (\\<lambda> n w. 1), risk_free_asset := (\\<lambda> n w. - geom_proc 0 w))\""], ["proof (state)\nthis:\n  arb_pf = (\\<lambda>x n w. 0)\n  (stk := \\<lambda>n w. 1, risk_free_asset := \\<lambda>n w. - geom_proc 0 w)\n\ngoal (1 subgoal):\n 1. \\<not> d < 1 + r \\<Longrightarrow> False", "have \"support_set arb_pf = {stk, risk_free_asset}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. support_set arb_pf = {stk, risk_free_asset}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. support_set arb_pf \\<subseteq> {stk, risk_free_asset}\n 2. {stk, risk_free_asset} \\<subseteq> support_set arb_pf", "show \"support_set arb_pf \\<subseteq> {stk, risk_free_asset}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. support_set arb_pf \\<subseteq> {stk, risk_free_asset}", "by (simp add: arb_pf_def subset_iff support_set_def)"], ["proof (state)\nthis:\n  support_set arb_pf \\<subseteq> {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. {stk, risk_free_asset} \\<subseteq> support_set arb_pf", "have \"stk\\<in> support_set arb_pf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stk \\<in> support_set arb_pf", "unfolding arb_pf_def support_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. stk\n    \\<in> {x. \\<exists>n w.\n                 ((\\<lambda>x n w. 0)\n                  (stk := \\<lambda>n w. 1,\n                   risk_free_asset := \\<lambda>n w. - geom_proc 0 w))\n                  x n w \\<noteq>\n                 0}", "using two_stocks"], ["proof (prove)\nusing this:\n  stk \\<noteq> risk_free_asset\n\ngoal (1 subgoal):\n 1. stk\n    \\<in> {x. \\<exists>n w.\n                 ((\\<lambda>x n w. 0)\n                  (stk := \\<lambda>n w. 1,\n                   risk_free_asset := \\<lambda>n w. - geom_proc 0 w))\n                  x n w \\<noteq>\n                 0}", "by simp"], ["proof (state)\nthis:\n  stk \\<in> support_set arb_pf\n\ngoal (1 subgoal):\n 1. {stk, risk_free_asset} \\<subseteq> support_set arb_pf", "moreover"], ["proof (state)\nthis:\n  stk \\<in> support_set arb_pf\n\ngoal (1 subgoal):\n 1. {stk, risk_free_asset} \\<subseteq> support_set arb_pf", "have \"risk_free_asset\\<in> support_set arb_pf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. risk_free_asset \\<in> support_set arb_pf", "unfolding arb_pf_def support_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. risk_free_asset\n    \\<in> {x. \\<exists>n w.\n                 ((\\<lambda>x n w. 0)\n                  (stk := \\<lambda>n w. 1,\n                   risk_free_asset := \\<lambda>n w. - geom_proc 0 w))\n                  x n w \\<noteq>\n                 0}", "using two_stocks geometric_process S0_positive"], ["proof (prove)\nusing this:\n  stk \\<noteq> risk_free_asset\n  geom_proc = geom_rand_walk u d init\n  0 < init\n\ngoal (1 subgoal):\n 1. risk_free_asset\n    \\<in> {x. \\<exists>n w.\n                 ((\\<lambda>x n w. 0)\n                  (stk := \\<lambda>n w. 1,\n                   risk_free_asset := \\<lambda>n w. - geom_proc 0 w))\n                  x n w \\<noteq>\n                 0}", "by simp"], ["proof (state)\nthis:\n  risk_free_asset \\<in> support_set arb_pf\n\ngoal (1 subgoal):\n 1. {stk, risk_free_asset} \\<subseteq> support_set arb_pf", "ultimately"], ["proof (chain)\npicking this:\n  stk \\<in> support_set arb_pf\n  risk_free_asset \\<in> support_set arb_pf", "show \"{stk, risk_free_asset}\\<subseteq> support_set arb_pf\""], ["proof (prove)\nusing this:\n  stk \\<in> support_set arb_pf\n  risk_free_asset \\<in> support_set arb_pf\n\ngoal (1 subgoal):\n 1. {stk, risk_free_asset} \\<subseteq> support_set arb_pf", "by simp"], ["proof (state)\nthis:\n  {stk, risk_free_asset} \\<subseteq> support_set arb_pf\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  support_set arb_pf = {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. \\<not> d < 1 + r \\<Longrightarrow> False", "hence \"stock_portfolio Mkt arb_pf\""], ["proof (prove)\nusing this:\n  support_set arb_pf = {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. stock_portfolio Mkt arb_pf", "using stocks"], ["proof (prove)\nusing this:\n  support_set arb_pf = {stk, risk_free_asset}\n  stocks Mkt = {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. stock_portfolio Mkt arb_pf", "by (simp add: portfolio_def stock_portfolio_def)"], ["proof (state)\nthis:\n  stock_portfolio Mkt arb_pf\n\ngoal (1 subgoal):\n 1. \\<not> d < 1 + r \\<Longrightarrow> False", "have \"arbitrage_process Mkt arb_pf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arbitrage_process Mkt arb_pf", "proof (rule arbitrage_processI, intro exI conjI)"], ["proof (state)\ngoal (5 subgoals):\n 1. self_financing Mkt arb_pf\n 2. trading_strategy arb_pf\n 3. \\<forall>w\\<in>space M. cls_val_process Mkt arb_pf 0 w = 0\n 4. AE w in M. 0 \\<le> cls_val_process Mkt arb_pf ?m2 w\n 5. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf ?m2 w}", "show \"self_financing Mkt arb_pf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. self_financing Mkt arb_pf", "unfolding arb_pf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. self_financing Mkt\n     ((\\<lambda>x n w. 0)\n      (stk := \\<lambda>n w. 1,\n       risk_free_asset := \\<lambda>n w. - geom_proc 0 w))", "using \\<open>support_set arb_pf = {stk, risk_free_asset}\\<close>"], ["proof (prove)\nusing this:\n  support_set arb_pf = {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. self_financing Mkt\n     ((\\<lambda>x n w. 0)\n      (stk := \\<lambda>n w. 1,\n       risk_free_asset := \\<lambda>n w. - geom_proc 0 w))", "by (simp add: static_portfolio_self_financing)"], ["proof (state)\nthis:\n  self_financing Mkt arb_pf\n\ngoal (4 subgoals):\n 1. trading_strategy arb_pf\n 2. \\<forall>w\\<in>space M. cls_val_process Mkt arb_pf 0 w = 0\n 3. AE w in M. 0 \\<le> cls_val_process Mkt arb_pf ?m2 w\n 4. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf ?m2 w}", "show \"trading_strategy arb_pf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trading_strategy arb_pf", "unfolding trading_strategy_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. portfolio arb_pf \\<and>\n    (\\<forall>asset\\<in>support_set arb_pf.\n        borel_predict_stoch_proc G (arb_pf asset))", "proof (intro conjI ballI)"], ["proof (state)\ngoal (2 subgoals):\n 1. portfolio arb_pf\n 2. \\<And>asset.\n       asset \\<in> support_set arb_pf \\<Longrightarrow>\n       borel_predict_stoch_proc G (arb_pf asset)", "show \"portfolio arb_pf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. portfolio arb_pf", "unfolding portfolio_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (support_set arb_pf)", "using \\<open>support_set arb_pf = {stk, risk_free_asset}\\<close>"], ["proof (prove)\nusing this:\n  support_set arb_pf = {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. finite (support_set arb_pf)", "by simp"], ["proof (state)\nthis:\n  portfolio arb_pf\n\ngoal (1 subgoal):\n 1. \\<And>asset.\n       asset \\<in> support_set arb_pf \\<Longrightarrow>\n       borel_predict_stoch_proc G (arb_pf asset)", "fix asset"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>asset.\n       asset \\<in> support_set arb_pf \\<Longrightarrow>\n       borel_predict_stoch_proc G (arb_pf asset)", "assume \"asset\\<in> support_set arb_pf\""], ["proof (state)\nthis:\n  asset \\<in> support_set arb_pf\n\ngoal (1 subgoal):\n 1. \\<And>asset.\n       asset \\<in> support_set arb_pf \\<Longrightarrow>\n       borel_predict_stoch_proc G (arb_pf asset)", "show \"borel_predict_stoch_proc G (arb_pf asset)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_predict_stoch_proc G (arb_pf asset)", "proof (cases \"asset = stk\")"], ["proof (state)\ngoal (2 subgoals):\n 1. asset = stk \\<Longrightarrow> borel_predict_stoch_proc G (arb_pf asset)\n 2. asset \\<noteq> stk \\<Longrightarrow>\n    borel_predict_stoch_proc G (arb_pf asset)", "case True"], ["proof (state)\nthis:\n  asset = stk\n\ngoal (2 subgoals):\n 1. asset = stk \\<Longrightarrow> borel_predict_stoch_proc G (arb_pf asset)\n 2. asset \\<noteq> stk \\<Longrightarrow>\n    borel_predict_stoch_proc G (arb_pf asset)", "hence \"arb_pf asset = (\\<lambda> n w. 1)\""], ["proof (prove)\nusing this:\n  asset = stk\n\ngoal (1 subgoal):\n 1. arb_pf asset = (\\<lambda>n w. 1)", "unfolding arb_pf_def"], ["proof (prove)\nusing this:\n  asset = stk\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x n w. 0)\n     (stk := \\<lambda>n w. 1,\n      risk_free_asset := \\<lambda>n w. - geom_proc 0 w))\n     asset =\n    (\\<lambda>n w. 1)", "by (simp add: two_stocks)"], ["proof (state)\nthis:\n  arb_pf asset = (\\<lambda>n w. 1)\n\ngoal (2 subgoals):\n 1. asset = stk \\<Longrightarrow> borel_predict_stoch_proc G (arb_pf asset)\n 2. asset \\<noteq> stk \\<Longrightarrow>\n    borel_predict_stoch_proc G (arb_pf asset)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_predict_stoch_proc G (arb_pf asset)", "unfolding predict_stoch_proc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. arb_pf asset 0 \\<in> borel_measurable (G 0) \\<and>\n    (\\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. arb_pf asset 0 \\<in> borel_measurable (G 0)\n 2. \\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "show \"arb_pf asset 0 \\<in> borel_measurable (G 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arb_pf asset 0 \\<in> borel_measurable (G 0)", "using \\<open>arb_pf asset = (\\<lambda> n w. 1)\\<close>"], ["proof (prove)\nusing this:\n  arb_pf asset = (\\<lambda>n w. 1)\n\ngoal (1 subgoal):\n 1. arb_pf asset 0 \\<in> borel_measurable (G 0)", "by simp"], ["proof (state)\nthis:\n  arb_pf asset 0 \\<in> borel_measurable (G 0)\n\ngoal (1 subgoal):\n 1. \\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "show \"\\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "show \"arb_pf asset (Suc n) \\<in> borel_measurable (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "using \\<open>arb_pf asset = (\\<lambda> n w. 1)\\<close>"], ["proof (prove)\nusing this:\n  arb_pf asset = (\\<lambda>n w. 1)\n\ngoal (1 subgoal):\n 1. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "by simp"], ["proof (state)\nthis:\n  arb_pf asset (Suc n) \\<in> borel_measurable (G n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  borel_predict_stoch_proc G (arb_pf asset)\n\ngoal (1 subgoal):\n 1. asset \\<noteq> stk \\<Longrightarrow>\n    borel_predict_stoch_proc G (arb_pf asset)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. asset \\<noteq> stk \\<Longrightarrow>\n    borel_predict_stoch_proc G (arb_pf asset)", "case False"], ["proof (state)\nthis:\n  asset \\<noteq> stk\n\ngoal (1 subgoal):\n 1. asset \\<noteq> stk \\<Longrightarrow>\n    borel_predict_stoch_proc G (arb_pf asset)", "hence \"arb_pf asset = (\\<lambda> n w. - geom_proc 0 w)\""], ["proof (prove)\nusing this:\n  asset \\<noteq> stk\n\ngoal (1 subgoal):\n 1. arb_pf asset = (\\<lambda>n w. - geom_proc 0 w)", "using \\<open>support_set arb_pf = {stk, risk_free_asset}\\<close>\n          \\<open>asset \\<in> support_set arb_pf\\<close>"], ["proof (prove)\nusing this:\n  asset \\<noteq> stk\n  support_set arb_pf = {stk, risk_free_asset}\n  asset \\<in> support_set arb_pf\n\ngoal (1 subgoal):\n 1. arb_pf asset = (\\<lambda>n w. - geom_proc 0 w)", "unfolding arb_pf_def"], ["proof (prove)\nusing this:\n  asset \\<noteq> stk\n  support_set\n   ((\\<lambda>x n w. 0)\n    (stk := \\<lambda>n w. 1,\n     risk_free_asset := \\<lambda>n w. - geom_proc 0 w)) =\n  {stk, risk_free_asset}\n  asset\n  \\<in> support_set\n         ((\\<lambda>x n w. 0)\n          (stk := \\<lambda>n w. 1,\n           risk_free_asset := \\<lambda>n w. - geom_proc 0 w))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x n w. 0)\n     (stk := \\<lambda>n w. 1,\n      risk_free_asset := \\<lambda>n w. - geom_proc 0 w))\n     asset =\n    (\\<lambda>n w. - geom_proc 0 w)", "by simp"], ["proof (state)\nthis:\n  arb_pf asset = (\\<lambda>n w. - geom_proc 0 w)\n\ngoal (1 subgoal):\n 1. asset \\<noteq> stk \\<Longrightarrow>\n    borel_predict_stoch_proc G (arb_pf asset)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_predict_stoch_proc G (arb_pf asset)", "unfolding predict_stoch_proc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. arb_pf asset 0 \\<in> borel_measurable (G 0) \\<and>\n    (\\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. arb_pf asset 0 \\<in> borel_measurable (G 0)\n 2. \\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "show \"arb_pf asset 0 \\<in> borel_measurable (G 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arb_pf asset 0 \\<in> borel_measurable (G 0)", "using \\<open>arb_pf asset = (\\<lambda> n w. - geom_proc 0 w)\\<close>\n            geometric_process"], ["proof (prove)\nusing this:\n  arb_pf asset = (\\<lambda>n w. - geom_proc 0 w)\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. arb_pf asset 0 \\<in> borel_measurable (G 0)", "by simp"], ["proof (state)\nthis:\n  arb_pf asset 0 \\<in> borel_measurable (G 0)\n\ngoal (1 subgoal):\n 1. \\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "show \"\\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "show \"arb_pf asset (Suc n) \\<in> borel_measurable (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "using \\<open>arb_pf asset = (\\<lambda> n w. - geom_proc 0 w)\\<close>\n              geometric_process"], ["proof (prove)\nusing this:\n  arb_pf asset = (\\<lambda>n w. - geom_proc 0 w)\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "by simp"], ["proof (state)\nthis:\n  arb_pf asset (Suc n) \\<in> borel_measurable (G n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  borel_predict_stoch_proc G (arb_pf asset)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  borel_predict_stoch_proc G (arb_pf asset)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  trading_strategy arb_pf\n\ngoal (3 subgoals):\n 1. \\<forall>w\\<in>space M. cls_val_process Mkt arb_pf 0 w = 0\n 2. AE w in M. 0 \\<le> cls_val_process Mkt arb_pf ?m2 w\n 3. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf ?m2 w}", "show \"\\<forall>w\\<in>space M. cls_val_process Mkt arb_pf 0 w = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>space M. cls_val_process Mkt arb_pf 0 w = 0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "assume \"w\\<in> space M\""], ["proof (state)\nthis:\n  w \\<in> space M\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "have \"cls_val_process Mkt arb_pf 0 w = geom_proc 0 w * arb_pf stk (Suc 0) w +\n        disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf 0 w =\n    geom_proc 0 w * arb_pf stk (Suc 0) w +\n    disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w", "using stock_pf_vp_expand\n        \\<open>stock_portfolio Mkt arb_pf\\<close>"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt ?pf \\<Longrightarrow>\n  val_process Mkt ?pf ?n ?w =\n  geom_proc ?n ?w * ?pf stk (Suc ?n) ?w +\n  disc_rfr_proc r ?n ?w * ?pf risk_free_asset (Suc ?n) ?w\n  stock_portfolio Mkt arb_pf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf 0 w =\n    geom_proc 0 w * arb_pf stk (Suc 0) w +\n    disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w", "using \\<open>self_financing Mkt arb_pf\\<close> self_financingE"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt ?pf \\<Longrightarrow>\n  val_process Mkt ?pf ?n ?w =\n  geom_proc ?n ?w * ?pf stk (Suc ?n) ?w +\n  disc_rfr_proc r ?n ?w * ?pf risk_free_asset (Suc ?n) ?w\n  stock_portfolio Mkt arb_pf\n  self_financing Mkt arb_pf\n  self_financing ?Mkt ?p \\<Longrightarrow>\n  \\<forall>n. val_process ?Mkt ?p n = cls_val_process ?Mkt ?p n\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf 0 w =\n    geom_proc 0 w * arb_pf stk (Suc 0) w +\n    disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w", "by fastforce"], ["proof (state)\nthis:\n  cls_val_process Mkt arb_pf 0 w =\n  geom_proc 0 w * arb_pf stk (Suc 0) w +\n  disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt arb_pf 0 w =\n  geom_proc 0 w * arb_pf stk (Suc 0) w +\n  disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "have \"... = geom_proc 0 w * (1) + disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc 0 w * arb_pf stk (Suc 0) w +\n    disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w =\n    geom_proc 0 w * 1 +\n    disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w", "by (simp add: arb_pf_def two_stocks)"], ["proof (state)\nthis:\n  geom_proc 0 w * arb_pf stk (Suc 0) w +\n  disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w =\n  geom_proc 0 w * 1 + disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "also"], ["proof (state)\nthis:\n  geom_proc 0 w * arb_pf stk (Suc 0) w +\n  disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w =\n  geom_proc 0 w * 1 + disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "have \"... = geom_proc 0 w + arb_pf risk_free_asset (Suc 0) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc 0 w * 1 +\n    disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w =\n    geom_proc 0 w + arb_pf risk_free_asset (Suc 0) w", "by simp"], ["proof (state)\nthis:\n  geom_proc 0 w * 1 +\n  disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w =\n  geom_proc 0 w + arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "also"], ["proof (state)\nthis:\n  geom_proc 0 w * 1 +\n  disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w =\n  geom_proc 0 w + arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "have \"... = geom_proc 0 w  - geom_proc 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc 0 w + arb_pf risk_free_asset (Suc 0) w =\n    geom_proc 0 w - geom_proc 0 w", "unfolding arb_pf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc 0 w +\n    ((\\<lambda>x n w. 0)\n     (stk := \\<lambda>n w. 1,\n      risk_free_asset := \\<lambda>n w. - geom_proc 0 w))\n     risk_free_asset (Suc 0) w =\n    geom_proc 0 w - geom_proc 0 w", "by simp"], ["proof (state)\nthis:\n  geom_proc 0 w + arb_pf risk_free_asset (Suc 0) w =\n  geom_proc 0 w - geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "also"], ["proof (state)\nthis:\n  geom_proc 0 w + arb_pf risk_free_asset (Suc 0) w =\n  geom_proc 0 w - geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc 0 w - geom_proc 0 w = 0", "by simp"], ["proof (state)\nthis:\n  geom_proc 0 w - geom_proc 0 w = 0\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "finally"], ["proof (chain)\npicking this:\n  cls_val_process Mkt arb_pf 0 w = 0", "show \"cls_val_process Mkt arb_pf 0 w = 0\""], ["proof (prove)\nusing this:\n  cls_val_process Mkt arb_pf 0 w = 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf 0 w = 0", "."], ["proof (state)\nthis:\n  cls_val_process Mkt arb_pf 0 w = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w\\<in>space M. cls_val_process Mkt arb_pf 0 w = 0\n\ngoal (2 subgoals):\n 1. AE w in M. 0 \\<le> cls_val_process Mkt arb_pf ?m2 w\n 2. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf ?m2 w}", "have dev: \"\\<forall>w\\<in> space M. cls_val_process Mkt arb_pf (Suc 0) w = geom_proc (Suc 0) w - (1+r) * geom_proc 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>space M.\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w", "proof (intro ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w", "assume \"w\\<in> space M\""], ["proof (state)\nthis:\n  w \\<in> space M\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w", "have \"cls_val_process Mkt arb_pf (Suc 0) w =  geom_proc (Suc 0) w * arb_pf stk (Suc 0) w +\n        disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf (Suc 0) w =\n    geom_proc (Suc 0) w * arb_pf stk (Suc 0) w +\n    disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w", "using stock_pf_uvp_expand\n        \\<open>stock_portfolio Mkt arb_pf\\<close>"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt ?pf \\<Longrightarrow>\n  cls_val_process Mkt ?pf (Suc ?n) ?w =\n  geom_proc (Suc ?n) ?w * ?pf stk (Suc ?n) ?w +\n  disc_rfr_proc r (Suc ?n) ?w * ?pf risk_free_asset (Suc ?n) ?w\n  stock_portfolio Mkt arb_pf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf (Suc 0) w =\n    geom_proc (Suc 0) w * arb_pf stk (Suc 0) w +\n    disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt arb_pf (Suc 0) w =\n  geom_proc (Suc 0) w * arb_pf stk (Suc 0) w +\n  disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt arb_pf (Suc 0) w =\n  geom_proc (Suc 0) w * arb_pf stk (Suc 0) w +\n  disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w", "have \"... = geom_proc (Suc 0) w + disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) w * arb_pf stk (Suc 0) w +\n    disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w =\n    geom_proc (Suc 0) w +\n    disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w", "by (simp add: arb_pf_def two_stocks)"], ["proof (state)\nthis:\n  geom_proc (Suc 0) w * arb_pf stk (Suc 0) w +\n  disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w =\n  geom_proc (Suc 0) w +\n  disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w", "also"], ["proof (state)\nthis:\n  geom_proc (Suc 0) w * arb_pf stk (Suc 0) w +\n  disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w =\n  geom_proc (Suc 0) w +\n  disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w", "have \"... = geom_proc (Suc 0) w + (1+r) * arb_pf risk_free_asset (Suc 0) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) w +\n    disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w =\n    geom_proc (Suc 0) w + (1 + r) * arb_pf risk_free_asset (Suc 0) w", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc 0) w +\n  disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w =\n  geom_proc (Suc 0) w + (1 + r) * arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w", "also"], ["proof (state)\nthis:\n  geom_proc (Suc 0) w +\n  disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w =\n  geom_proc (Suc 0) w + (1 + r) * arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w", "have \"... = geom_proc (Suc 0) w - (1+r) * geom_proc 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) w + (1 + r) * arb_pf risk_free_asset (Suc 0) w =\n    geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w", "by (simp add:arb_pf_def)"], ["proof (state)\nthis:\n  geom_proc (Suc 0) w + (1 + r) * arb_pf risk_free_asset (Suc 0) w =\n  geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w", "finally"], ["proof (chain)\npicking this:\n  cls_val_process Mkt arb_pf (Suc 0) w =\n  geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w", "show \"cls_val_process Mkt arb_pf (Suc 0) w = geom_proc (Suc 0) w - (1+r) * geom_proc 0 w\""], ["proof (prove)\nusing this:\n  cls_val_process Mkt arb_pf (Suc 0) w =\n  geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf (Suc 0) w =\n    geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w", "."], ["proof (state)\nthis:\n  cls_val_process Mkt arb_pf (Suc 0) w =\n  geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w\\<in>space M.\n     cls_val_process Mkt arb_pf (Suc 0) w =\n     geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w\n\ngoal (2 subgoals):\n 1. AE w in M. 0 \\<le> cls_val_process Mkt arb_pf ?m2 w\n 2. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf ?m2 w}", "have iniT: \"\\<forall>w\\<in> space M. snth w 0 \\<longrightarrow> cls_val_process Mkt arb_pf (Suc 0) w > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>space M.\n       w !! 0 \\<longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "proof (intro ballI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "assume \"w\\<in> space M\" and \"snth w 0\""], ["proof (state)\nthis:\n  w \\<in> space M\n  w !! 0\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "have \"cls_val_process Mkt arb_pf (Suc 0) w =  geom_proc (Suc 0) w - (1+r) * geom_proc 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf (Suc 0) w =\n    geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w", "using dev \\<open>w\\<in> space M\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>w\\<in>space M.\n     cls_val_process Mkt arb_pf (Suc 0) w =\n     geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w\n  w \\<in> space M\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf (Suc 0) w =\n    geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt arb_pf (Suc 0) w =\n  geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt arb_pf (Suc 0) w =\n  geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "have \"... = u * geom_proc 0 w - (1+r) * geom_proc 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w =\n    u * geom_proc 0 w - (1 + r) * geom_proc 0 w", "using \\<open>snth w 0\\<close> geometric_process"], ["proof (prove)\nusing this:\n  w !! 0\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w =\n    u * geom_proc 0 w - (1 + r) * geom_proc 0 w", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w =\n  u * geom_proc 0 w - (1 + r) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "also"], ["proof (state)\nthis:\n  geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w =\n  u * geom_proc 0 w - (1 + r) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "have \"... = (u - (1+r)) * geom_proc 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u * geom_proc 0 w - (1 + r) * geom_proc 0 w =\n    (u - (1 + r)) * geom_proc 0 w", "by (simp add: left_diff_distrib)"], ["proof (state)\nthis:\n  u * geom_proc 0 w - (1 + r) * geom_proc 0 w =\n  (u - (1 + r)) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "also"], ["proof (state)\nthis:\n  u * geom_proc 0 w - (1 + r) * geom_proc 0 w =\n  (u - (1 + r)) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "have \"... > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (u - (1 + r)) * geom_proc 0 w", "using S0_positive \\<open>1 + r \\<le> d\\<close> down_lt_up geometric_process"], ["proof (prove)\nusing this:\n  0 < init\n  1 + r \\<le> d\n  d < u\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. 0 < (u - (1 + r)) * geom_proc 0 w", "by auto"], ["proof (state)\nthis:\n  0 < (u - (1 + r)) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "finally"], ["proof (chain)\npicking this:\n  0 < cls_val_process Mkt arb_pf (Suc 0) w", "show \"cls_val_process Mkt arb_pf (Suc 0) w > 0\""], ["proof (prove)\nusing this:\n  0 < cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (1 subgoal):\n 1. 0 < cls_val_process Mkt arb_pf (Suc 0) w", "."], ["proof (state)\nthis:\n  0 < cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w\\<in>space M.\n     w !! 0 \\<longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (2 subgoals):\n 1. AE w in M. 0 \\<le> cls_val_process Mkt arb_pf ?m2 w\n 2. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf ?m2 w}", "have iniF: \"\\<forall>w\\<in> space M. \\<not>snth w 0 \\<longrightarrow> cls_val_process Mkt arb_pf (Suc 0) w \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>space M.\n       \\<not> w !! 0 \\<longrightarrow>\n       0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "proof (intro ballI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; \\<not> w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; \\<not> w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "assume \"w\\<in> space M\" and \"\\<not>snth w 0\""], ["proof (state)\nthis:\n  w \\<in> space M\n  \\<not> w !! 0\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; \\<not> w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "have \"cls_val_process Mkt arb_pf (Suc 0) w =  geom_proc (Suc 0) w - (1+r) * geom_proc 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf (Suc 0) w =\n    geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w", "using dev \\<open>w\\<in> space M\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>w\\<in>space M.\n     cls_val_process Mkt arb_pf (Suc 0) w =\n     geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w\n  w \\<in> space M\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf (Suc 0) w =\n    geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt arb_pf (Suc 0) w =\n  geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; \\<not> w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt arb_pf (Suc 0) w =\n  geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; \\<not> w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "have \"... = d * geom_proc 0 w - (1+r) * geom_proc 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w =\n    d * geom_proc 0 w - (1 + r) * geom_proc 0 w", "using \\<open>\\<not>snth w 0\\<close> geometric_process"], ["proof (prove)\nusing this:\n  \\<not> w !! 0\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w =\n    d * geom_proc 0 w - (1 + r) * geom_proc 0 w", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w =\n  d * geom_proc 0 w - (1 + r) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; \\<not> w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "also"], ["proof (state)\nthis:\n  geom_proc (Suc 0) w - (1 + r) * geom_proc 0 w =\n  d * geom_proc 0 w - (1 + r) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; \\<not> w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "have \"... = (d - (1+r)) * geom_proc 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d * geom_proc 0 w - (1 + r) * geom_proc 0 w =\n    (d - (1 + r)) * geom_proc 0 w", "by (simp add: left_diff_distrib)"], ["proof (state)\nthis:\n  d * geom_proc 0 w - (1 + r) * geom_proc 0 w =\n  (d - (1 + r)) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; \\<not> w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "also"], ["proof (state)\nthis:\n  d * geom_proc 0 w - (1 + r) * geom_proc 0 w =\n  (d - (1 + r)) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; \\<not> w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "have \"... \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (d - (1 + r)) * geom_proc 0 w", "using S0_positive \\<open>1 + r \\<le> d\\<close> down_lt_up geometric_process"], ["proof (prove)\nusing this:\n  0 < init\n  1 + r \\<le> d\n  d < u\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. 0 \\<le> (d - (1 + r)) * geom_proc 0 w", "by auto"], ["proof (state)\nthis:\n  0 \\<le> (d - (1 + r)) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; \\<not> w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "show \"cls_val_process Mkt arb_pf (Suc 0) w \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (1 subgoal):\n 1. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "."], ["proof (state)\nthis:\n  0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w\\<in>space M.\n     \\<not> w !! 0 \\<longrightarrow>\n     0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (2 subgoals):\n 1. AE w in M. 0 \\<le> cls_val_process Mkt arb_pf ?m2 w\n 2. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf ?m2 w}", "have \"\\<forall>w\\<in> space M. cls_val_process Mkt arb_pf (Suc 0) w \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>space M. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "assume \"w\\<in> space M\""], ["proof (state)\nthis:\n  w \\<in> space M\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "show \"cls_val_process Mkt arb_pf (Suc 0) w \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "proof (cases \"snth w 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. w !! 0 \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n 2. \\<not> w !! 0 \\<Longrightarrow>\n    0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "case True"], ["proof (state)\nthis:\n  w !! 0\n\ngoal (2 subgoals):\n 1. w !! 0 \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n 2. \\<not> w !! 0 \\<Longrightarrow>\n    0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "thus ?thesis"], ["proof (prove)\nusing this:\n  w !! 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "using \\<open>w\\<in> space M\\<close> iniT"], ["proof (prove)\nusing this:\n  w !! 0\n  w \\<in> space M\n  \\<forall>w\\<in>space M.\n     w !! 0 \\<longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (1 subgoal):\n 1. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "by auto"], ["proof (state)\nthis:\n  0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<not> w !! 0 \\<Longrightarrow>\n    0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> w !! 0 \\<Longrightarrow>\n    0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "case False"], ["proof (state)\nthis:\n  \\<not> w !! 0\n\ngoal (1 subgoal):\n 1. \\<not> w !! 0 \\<Longrightarrow>\n    0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> w !! 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "using \\<open>w\\<in> space M\\<close> iniF"], ["proof (prove)\nusing this:\n  \\<not> w !! 0\n  w \\<in> space M\n  \\<forall>w\\<in>space M.\n     \\<not> w !! 0 \\<longrightarrow>\n     0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (1 subgoal):\n 1. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "by simp"], ["proof (state)\nthis:\n  0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w\\<in>space M. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (2 subgoals):\n 1. AE w in M. 0 \\<le> cls_val_process Mkt arb_pf ?m2 w\n 2. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf ?m2 w}", "thus \"AE w in M. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\""], ["proof (prove)\nusing this:\n  \\<forall>w\\<in>space M. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (1 subgoal):\n 1. AE w in M. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "by simp"], ["proof (state)\nthis:\n  AE w in M. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "show \"0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "have \"cls_val_process Mkt arb_pf (Suc 0) \\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable borel (cls_val_process Mkt arb_pf (Suc 0))", "using borel_adapt_stoch_proc_borel_measurable\n        cls_val_process_adapted \\<open>trading_strategy arb_pf\\<close> \\<open>stock_portfolio Mkt arb_pf\\<close>"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc G ?X \\<Longrightarrow>\n  \\<forall>n. random_variable borel (?X n)\n  \\<lbrakk>trading_strategy ?p; support_adapt Mkt ?p\\<rbrakk>\n  \\<Longrightarrow> borel_adapt_stoch_proc G (cls_val_process Mkt ?p)\n  trading_strategy arb_pf\n  stock_portfolio Mkt arb_pf\n\ngoal (1 subgoal):\n 1. random_variable borel (cls_val_process Mkt arb_pf (Suc 0))", "using support_adapt_def readable"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc G ?X \\<Longrightarrow>\n  \\<forall>n. random_variable borel (?X n)\n  \\<lbrakk>trading_strategy ?p; support_adapt Mkt ?p\\<rbrakk>\n  \\<Longrightarrow> borel_adapt_stoch_proc G (cls_val_process Mkt ?p)\n  trading_strategy arb_pf\n  stock_portfolio Mkt arb_pf\n  support_adapt ?Mkt ?pf =\n  (\\<forall>asset\\<in>support_set ?pf.\n      borel_adapt_stoch_proc G (prices ?Mkt asset))\n  \\<forall>asset\\<in>stocks Mkt. borel_adapt_stoch_proc G (prices Mkt asset)\n\ngoal (1 subgoal):\n 1. random_variable borel (cls_val_process Mkt arb_pf (Suc 0))", "unfolding  stock_portfolio_def"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc G ?X \\<Longrightarrow>\n  \\<forall>n. random_variable borel (?X n)\n  \\<lbrakk>trading_strategy ?p; support_adapt Mkt ?p\\<rbrakk>\n  \\<Longrightarrow> borel_adapt_stoch_proc G (cls_val_process Mkt ?p)\n  trading_strategy arb_pf\n  portfolio arb_pf \\<and> support_set arb_pf \\<subseteq> stocks Mkt\n  support_adapt ?Mkt ?pf =\n  (\\<forall>asset\\<in>support_set ?pf.\n      borel_adapt_stoch_proc G (prices ?Mkt asset))\n  \\<forall>asset\\<in>stocks Mkt. borel_adapt_stoch_proc G (prices Mkt asset)\n\ngoal (1 subgoal):\n 1. random_variable borel (cls_val_process Mkt arb_pf (Suc 0))", "by blast"], ["proof (state)\nthis:\n  random_variable borel (cls_val_process Mkt arb_pf (Suc 0))\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "hence set_event:\"{w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w} \\<in> sets M\""], ["proof (prove)\nusing this:\n  random_variable borel (cls_val_process Mkt arb_pf (Suc 0))\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w} \\<in> events", "using borel_measurable_iff_greater"], ["proof (prove)\nusing this:\n  random_variable borel (cls_val_process Mkt arb_pf (Suc 0))\n  (?f \\<in> borel_measurable ?M) =\n  (\\<forall>a. {w \\<in> space ?M. a < ?f w} \\<in> sets ?M)\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w} \\<in> events", "by blast"], ["proof (state)\nthis:\n  {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w} \\<in> events\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "have \"\\<forall>n. emeasure M {w \\<in> space M. w !! n} = ennreal p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. emeasure M {w \\<in> space M. w !! n} = ennreal p", "using bernoulli p_gt_0 p_lt_1 bernoulli_stream_component_probability[of M p]"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n  \\<lbrakk>M = bernoulli_stream p; 0 \\<le> p; p \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>n.\n                       emeasure M {w \\<in> space M. w !! n} = ennreal p\n\ngoal (1 subgoal):\n 1. \\<forall>n. emeasure M {w \\<in> space M. w !! n} = ennreal p", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. emeasure M {w \\<in> space M. w !! n} = ennreal p\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "hence \"emeasure M {w \\<in> space M. w !! 0} = ennreal p\""], ["proof (prove)\nusing this:\n  \\<forall>n. emeasure M {w \\<in> space M. w !! n} = ennreal p\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. w !! 0} = ennreal p", "by blast"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. w !! 0} = ennreal p\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "moreover"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. w !! 0} = ennreal p\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "have \"{w \\<in> space M. w !! 0} \\<subseteq> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. w !! 0}\n    \\<subseteq> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. w !! 0} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. w !! 0} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "assume \"w\\<in> {w \\<in> space M. w !! 0}\""], ["proof (state)\nthis:\n  w \\<in> {w \\<in> space M. w !! 0}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. w !! 0} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "hence \"w \\<in> space M\" and \"w !! 0\""], ["proof (prove)\nusing this:\n  w \\<in> {w \\<in> space M. w !! 0}\n\ngoal (1 subgoal):\n 1. w \\<in> space M &&& w !! 0", "by auto"], ["proof (state)\nthis:\n  w \\<in> space M\n  w !! 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. w !! 0} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "note wprops = this"], ["proof (state)\nthis:\n  w \\<in> space M\n  w !! 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. w !! 0} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "hence \"0 < cls_val_process Mkt arb_pf 1 w\""], ["proof (prove)\nusing this:\n  w \\<in> space M\n  w !! 0\n\ngoal (1 subgoal):\n 1. 0 < cls_val_process Mkt arb_pf 1 w", "using iniT"], ["proof (prove)\nusing this:\n  w \\<in> space M\n  w !! 0\n  \\<forall>w\\<in>space M.\n     w !! 0 \\<longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (1 subgoal):\n 1. 0 < cls_val_process Mkt arb_pf 1 w", "by simp"], ["proof (state)\nthis:\n  0 < cls_val_process Mkt arb_pf 1 w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. w !! 0} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "thus \"w\\<in> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\""], ["proof (prove)\nusing this:\n  0 < cls_val_process Mkt arb_pf 1 w\n\ngoal (1 subgoal):\n 1. w \\<in> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "using wprops"], ["proof (prove)\nusing this:\n  0 < cls_val_process Mkt arb_pf 1 w\n  w \\<in> space M\n  w !! 0\n\ngoal (1 subgoal):\n 1. w \\<in> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "by simp"], ["proof (state)\nthis:\n  w \\<in> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w \\<in> space M. w !! 0}\n  \\<subseteq> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "ultimately"], ["proof (chain)\npicking this:\n  emeasure M {w \\<in> space M. w !! 0} = ennreal p\n  {w \\<in> space M. w !! 0}\n  \\<subseteq> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "have \"p \\<le> emeasure M {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\""], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. w !! 0} = ennreal p\n  {w \\<in> space M. w !! 0}\n  \\<subseteq> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\n\ngoal (1 subgoal):\n 1. ennreal p\n    \\<le> emeasure M {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "using emeasure_mono set_event"], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. w !! 0} = ennreal p\n  {w \\<in> space M. w !! 0}\n  \\<subseteq> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\n  \\<lbrakk>?a \\<subseteq> ?b; ?b \\<in> sets ?M\\<rbrakk>\n  \\<Longrightarrow> emeasure ?M ?a \\<le> emeasure ?M ?b\n  {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w} \\<in> events\n\ngoal (1 subgoal):\n 1. ennreal p\n    \\<le> emeasure M {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "by fastforce"], ["proof (state)\nthis:\n  ennreal p\n  \\<le> emeasure M {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "hence \"p \\<le> prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\""], ["proof (prove)\nusing this:\n  ennreal p\n  \\<le> emeasure M {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\n\ngoal (1 subgoal):\n 1. p \\<le> prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "by (simp add: emeasure_eq_measure)"], ["proof (state)\nthis:\n  p \\<le> prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "thus \"0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}\""], ["proof (prove)\nusing this:\n  p \\<le> prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "using psgt"], ["proof (prove)\nusing this:\n  p \\<le> prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\n  0 < p\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "by simp"], ["proof (state)\nthis:\n  0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  arbitrage_process Mkt arb_pf\n\ngoal (1 subgoal):\n 1. \\<not> d < 1 + r \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  arbitrage_process Mkt arb_pf\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  arbitrage_process Mkt arb_pf\n  viable_market Mkt\n\ngoal (1 subgoal):\n 1. False", "unfolding viable_market_def"], ["proof (prove)\nusing this:\n  arbitrage_process Mkt arb_pf\n  \\<forall>p.\n     stock_portfolio Mkt p \\<longrightarrow> \\<not> arbitrage_process Mkt p\n\ngoal (1 subgoal):\n 1. False", "using \\<open>stock_portfolio Mkt arb_pf\\<close>"], ["proof (prove)\nusing this:\n  arbitrage_process Mkt arb_pf\n  \\<forall>p.\n     stock_portfolio Mkt p \\<longrightarrow> \\<not> arbitrage_process Mkt p\n  stock_portfolio Mkt arb_pf\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) viable_only_if_u:\n  assumes \"viable_market Mkt\"\n  shows \"1+r < u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + r < u", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 1 + r < u \\<Longrightarrow> False", "assume \"\\<not> 1+r < u\""], ["proof (state)\nthis:\n  \\<not> 1 + r < u\n\ngoal (1 subgoal):\n 1. \\<not> 1 + r < u \\<Longrightarrow> False", "hence \"u \\<le> 1+r\""], ["proof (prove)\nusing this:\n  \\<not> 1 + r < u\n\ngoal (1 subgoal):\n 1. u \\<le> 1 + r", "by simp"], ["proof (state)\nthis:\n  u \\<le> 1 + r\n\ngoal (1 subgoal):\n 1. \\<not> 1 + r < u \\<Longrightarrow> False", "define arb_pf where \"arb_pf = (\\<lambda> (x::'a) (n::nat) w. 0::real)(stk:= (\\<lambda> n w. -1), risk_free_asset := (\\<lambda> n w. geom_proc 0 w))\""], ["proof (state)\nthis:\n  arb_pf = (\\<lambda>x n w. 0)\n  (stk := \\<lambda>n w. - 1, risk_free_asset := \\<lambda>n. geom_proc 0)\n\ngoal (1 subgoal):\n 1. \\<not> 1 + r < u \\<Longrightarrow> False", "have \"support_set arb_pf = {stk, risk_free_asset}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. support_set arb_pf = {stk, risk_free_asset}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. support_set arb_pf \\<subseteq> {stk, risk_free_asset}\n 2. {stk, risk_free_asset} \\<subseteq> support_set arb_pf", "show \"support_set arb_pf \\<subseteq> {stk, risk_free_asset}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. support_set arb_pf \\<subseteq> {stk, risk_free_asset}", "by (simp add: arb_pf_def subset_iff support_set_def)"], ["proof (state)\nthis:\n  support_set arb_pf \\<subseteq> {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. {stk, risk_free_asset} \\<subseteq> support_set arb_pf", "have \"stk\\<in> support_set arb_pf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stk \\<in> support_set arb_pf", "unfolding arb_pf_def support_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. stk\n    \\<in> {x. \\<exists>n w.\n                 ((\\<lambda>x n w. 0)\n                  (stk := \\<lambda>n w. - 1,\n                   risk_free_asset := \\<lambda>n. geom_proc 0))\n                  x n w \\<noteq>\n                 0}", "using two_stocks"], ["proof (prove)\nusing this:\n  stk \\<noteq> risk_free_asset\n\ngoal (1 subgoal):\n 1. stk\n    \\<in> {x. \\<exists>n w.\n                 ((\\<lambda>x n w. 0)\n                  (stk := \\<lambda>n w. - 1,\n                   risk_free_asset := \\<lambda>n. geom_proc 0))\n                  x n w \\<noteq>\n                 0}", "by simp"], ["proof (state)\nthis:\n  stk \\<in> support_set arb_pf\n\ngoal (1 subgoal):\n 1. {stk, risk_free_asset} \\<subseteq> support_set arb_pf", "moreover"], ["proof (state)\nthis:\n  stk \\<in> support_set arb_pf\n\ngoal (1 subgoal):\n 1. {stk, risk_free_asset} \\<subseteq> support_set arb_pf", "have \"risk_free_asset\\<in> support_set arb_pf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. risk_free_asset \\<in> support_set arb_pf", "unfolding arb_pf_def support_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. risk_free_asset\n    \\<in> {x. \\<exists>n w.\n                 ((\\<lambda>x n w. 0)\n                  (stk := \\<lambda>n w. - 1,\n                   risk_free_asset := \\<lambda>n. geom_proc 0))\n                  x n w \\<noteq>\n                 0}", "using two_stocks geometric_process S0_positive"], ["proof (prove)\nusing this:\n  stk \\<noteq> risk_free_asset\n  geom_proc = geom_rand_walk u d init\n  0 < init\n\ngoal (1 subgoal):\n 1. risk_free_asset\n    \\<in> {x. \\<exists>n w.\n                 ((\\<lambda>x n w. 0)\n                  (stk := \\<lambda>n w. - 1,\n                   risk_free_asset := \\<lambda>n. geom_proc 0))\n                  x n w \\<noteq>\n                 0}", "by simp"], ["proof (state)\nthis:\n  risk_free_asset \\<in> support_set arb_pf\n\ngoal (1 subgoal):\n 1. {stk, risk_free_asset} \\<subseteq> support_set arb_pf", "ultimately"], ["proof (chain)\npicking this:\n  stk \\<in> support_set arb_pf\n  risk_free_asset \\<in> support_set arb_pf", "show \"{stk, risk_free_asset}\\<subseteq> support_set arb_pf\""], ["proof (prove)\nusing this:\n  stk \\<in> support_set arb_pf\n  risk_free_asset \\<in> support_set arb_pf\n\ngoal (1 subgoal):\n 1. {stk, risk_free_asset} \\<subseteq> support_set arb_pf", "by simp"], ["proof (state)\nthis:\n  {stk, risk_free_asset} \\<subseteq> support_set arb_pf\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  support_set arb_pf = {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. \\<not> 1 + r < u \\<Longrightarrow> False", "hence \"stock_portfolio Mkt arb_pf\""], ["proof (prove)\nusing this:\n  support_set arb_pf = {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. stock_portfolio Mkt arb_pf", "using stocks"], ["proof (prove)\nusing this:\n  support_set arb_pf = {stk, risk_free_asset}\n  stocks Mkt = {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. stock_portfolio Mkt arb_pf", "by (simp add: portfolio_def stock_portfolio_def)"], ["proof (state)\nthis:\n  stock_portfolio Mkt arb_pf\n\ngoal (1 subgoal):\n 1. \\<not> 1 + r < u \\<Longrightarrow> False", "have \"arbitrage_process Mkt arb_pf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arbitrage_process Mkt arb_pf", "proof (rule arbitrage_processI, intro exI conjI)"], ["proof (state)\ngoal (5 subgoals):\n 1. self_financing Mkt arb_pf\n 2. trading_strategy arb_pf\n 3. \\<forall>w\\<in>space M. cls_val_process Mkt arb_pf 0 w = 0\n 4. AE w in M. 0 \\<le> cls_val_process Mkt arb_pf ?m2 w\n 5. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf ?m2 w}", "show \"self_financing Mkt arb_pf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. self_financing Mkt arb_pf", "unfolding arb_pf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. self_financing Mkt\n     ((\\<lambda>x n w. 0)\n      (stk := \\<lambda>n w. - 1,\n       risk_free_asset := \\<lambda>n. geom_proc 0))", "using \\<open>support_set arb_pf = {stk, risk_free_asset}\\<close>"], ["proof (prove)\nusing this:\n  support_set arb_pf = {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. self_financing Mkt\n     ((\\<lambda>x n w. 0)\n      (stk := \\<lambda>n w. - 1,\n       risk_free_asset := \\<lambda>n. geom_proc 0))", "by (simp add: static_portfolio_self_financing)"], ["proof (state)\nthis:\n  self_financing Mkt arb_pf\n\ngoal (4 subgoals):\n 1. trading_strategy arb_pf\n 2. \\<forall>w\\<in>space M. cls_val_process Mkt arb_pf 0 w = 0\n 3. AE w in M. 0 \\<le> cls_val_process Mkt arb_pf ?m2 w\n 4. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf ?m2 w}", "show \"trading_strategy arb_pf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trading_strategy arb_pf", "unfolding trading_strategy_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. portfolio arb_pf \\<and>\n    (\\<forall>asset\\<in>support_set arb_pf.\n        borel_predict_stoch_proc G (arb_pf asset))", "proof (intro conjI ballI)"], ["proof (state)\ngoal (2 subgoals):\n 1. portfolio arb_pf\n 2. \\<And>asset.\n       asset \\<in> support_set arb_pf \\<Longrightarrow>\n       borel_predict_stoch_proc G (arb_pf asset)", "show \"portfolio arb_pf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. portfolio arb_pf", "unfolding portfolio_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (support_set arb_pf)", "using \\<open>support_set arb_pf = {stk, risk_free_asset}\\<close>"], ["proof (prove)\nusing this:\n  support_set arb_pf = {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. finite (support_set arb_pf)", "by simp"], ["proof (state)\nthis:\n  portfolio arb_pf\n\ngoal (1 subgoal):\n 1. \\<And>asset.\n       asset \\<in> support_set arb_pf \\<Longrightarrow>\n       borel_predict_stoch_proc G (arb_pf asset)", "fix asset"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>asset.\n       asset \\<in> support_set arb_pf \\<Longrightarrow>\n       borel_predict_stoch_proc G (arb_pf asset)", "assume \"asset\\<in> support_set arb_pf\""], ["proof (state)\nthis:\n  asset \\<in> support_set arb_pf\n\ngoal (1 subgoal):\n 1. \\<And>asset.\n       asset \\<in> support_set arb_pf \\<Longrightarrow>\n       borel_predict_stoch_proc G (arb_pf asset)", "show \"borel_predict_stoch_proc G (arb_pf asset)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_predict_stoch_proc G (arb_pf asset)", "proof (cases \"asset = stk\")"], ["proof (state)\ngoal (2 subgoals):\n 1. asset = stk \\<Longrightarrow> borel_predict_stoch_proc G (arb_pf asset)\n 2. asset \\<noteq> stk \\<Longrightarrow>\n    borel_predict_stoch_proc G (arb_pf asset)", "case True"], ["proof (state)\nthis:\n  asset = stk\n\ngoal (2 subgoals):\n 1. asset = stk \\<Longrightarrow> borel_predict_stoch_proc G (arb_pf asset)\n 2. asset \\<noteq> stk \\<Longrightarrow>\n    borel_predict_stoch_proc G (arb_pf asset)", "hence \"arb_pf asset = (\\<lambda> n w. -1)\""], ["proof (prove)\nusing this:\n  asset = stk\n\ngoal (1 subgoal):\n 1. arb_pf asset = (\\<lambda>n w. - 1)", "unfolding arb_pf_def"], ["proof (prove)\nusing this:\n  asset = stk\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x n w. 0)\n     (stk := \\<lambda>n w. - 1, risk_free_asset := \\<lambda>n. geom_proc 0))\n     asset =\n    (\\<lambda>n w. - 1)", "by (simp add: two_stocks)"], ["proof (state)\nthis:\n  arb_pf asset = (\\<lambda>n w. - 1)\n\ngoal (2 subgoals):\n 1. asset = stk \\<Longrightarrow> borel_predict_stoch_proc G (arb_pf asset)\n 2. asset \\<noteq> stk \\<Longrightarrow>\n    borel_predict_stoch_proc G (arb_pf asset)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_predict_stoch_proc G (arb_pf asset)", "unfolding predict_stoch_proc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. arb_pf asset 0 \\<in> borel_measurable (G 0) \\<and>\n    (\\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. arb_pf asset 0 \\<in> borel_measurable (G 0)\n 2. \\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "show \"arb_pf asset 0 \\<in> borel_measurable (G 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arb_pf asset 0 \\<in> borel_measurable (G 0)", "using \\<open>arb_pf asset = (\\<lambda> n w. -1)\\<close>"], ["proof (prove)\nusing this:\n  arb_pf asset = (\\<lambda>n w. - 1)\n\ngoal (1 subgoal):\n 1. arb_pf asset 0 \\<in> borel_measurable (G 0)", "by simp"], ["proof (state)\nthis:\n  arb_pf asset 0 \\<in> borel_measurable (G 0)\n\ngoal (1 subgoal):\n 1. \\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "show \"\\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "show \"arb_pf asset (Suc n) \\<in> borel_measurable (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "using \\<open>arb_pf asset = (\\<lambda> n w. -1)\\<close>"], ["proof (prove)\nusing this:\n  arb_pf asset = (\\<lambda>n w. - 1)\n\ngoal (1 subgoal):\n 1. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "by simp"], ["proof (state)\nthis:\n  arb_pf asset (Suc n) \\<in> borel_measurable (G n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  borel_predict_stoch_proc G (arb_pf asset)\n\ngoal (1 subgoal):\n 1. asset \\<noteq> stk \\<Longrightarrow>\n    borel_predict_stoch_proc G (arb_pf asset)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. asset \\<noteq> stk \\<Longrightarrow>\n    borel_predict_stoch_proc G (arb_pf asset)", "case False"], ["proof (state)\nthis:\n  asset \\<noteq> stk\n\ngoal (1 subgoal):\n 1. asset \\<noteq> stk \\<Longrightarrow>\n    borel_predict_stoch_proc G (arb_pf asset)", "hence \"arb_pf asset = (\\<lambda> n w. geom_proc 0 w)\""], ["proof (prove)\nusing this:\n  asset \\<noteq> stk\n\ngoal (1 subgoal):\n 1. arb_pf asset = (\\<lambda>n. geom_proc 0)", "using \\<open>support_set arb_pf = {stk, risk_free_asset}\\<close>\n          \\<open>asset \\<in> support_set arb_pf\\<close>"], ["proof (prove)\nusing this:\n  asset \\<noteq> stk\n  support_set arb_pf = {stk, risk_free_asset}\n  asset \\<in> support_set arb_pf\n\ngoal (1 subgoal):\n 1. arb_pf asset = (\\<lambda>n. geom_proc 0)", "unfolding arb_pf_def"], ["proof (prove)\nusing this:\n  asset \\<noteq> stk\n  support_set\n   ((\\<lambda>x n w. 0)\n    (stk := \\<lambda>n w. - 1,\n     risk_free_asset := \\<lambda>n. geom_proc 0)) =\n  {stk, risk_free_asset}\n  asset\n  \\<in> support_set\n         ((\\<lambda>x n w. 0)\n          (stk := \\<lambda>n w. - 1,\n           risk_free_asset := \\<lambda>n. geom_proc 0))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x n w. 0)\n     (stk := \\<lambda>n w. - 1, risk_free_asset := \\<lambda>n. geom_proc 0))\n     asset =\n    (\\<lambda>n. geom_proc 0)", "by simp"], ["proof (state)\nthis:\n  arb_pf asset = (\\<lambda>n. geom_proc 0)\n\ngoal (1 subgoal):\n 1. asset \\<noteq> stk \\<Longrightarrow>\n    borel_predict_stoch_proc G (arb_pf asset)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_predict_stoch_proc G (arb_pf asset)", "unfolding predict_stoch_proc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. arb_pf asset 0 \\<in> borel_measurable (G 0) \\<and>\n    (\\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. arb_pf asset 0 \\<in> borel_measurable (G 0)\n 2. \\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "show \"arb_pf asset 0 \\<in> borel_measurable (G 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arb_pf asset 0 \\<in> borel_measurable (G 0)", "using \\<open>arb_pf asset = (\\<lambda> n w. geom_proc 0 w)\\<close>\n            geometric_process"], ["proof (prove)\nusing this:\n  arb_pf asset = (\\<lambda>n. geom_proc 0)\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. arb_pf asset 0 \\<in> borel_measurable (G 0)", "by simp"], ["proof (state)\nthis:\n  arb_pf asset 0 \\<in> borel_measurable (G 0)\n\ngoal (1 subgoal):\n 1. \\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "show \"\\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "show \"arb_pf asset (Suc n) \\<in> borel_measurable (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "using \\<open>arb_pf asset = (\\<lambda> n w. geom_proc 0 w)\\<close>\n              geometric_process"], ["proof (prove)\nusing this:\n  arb_pf asset = (\\<lambda>n. geom_proc 0)\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. arb_pf asset (Suc n) \\<in> borel_measurable (G n)", "by simp"], ["proof (state)\nthis:\n  arb_pf asset (Suc n) \\<in> borel_measurable (G n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n. arb_pf asset (Suc n) \\<in> borel_measurable (G n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  borel_predict_stoch_proc G (arb_pf asset)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  borel_predict_stoch_proc G (arb_pf asset)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  trading_strategy arb_pf\n\ngoal (3 subgoals):\n 1. \\<forall>w\\<in>space M. cls_val_process Mkt arb_pf 0 w = 0\n 2. AE w in M. 0 \\<le> cls_val_process Mkt arb_pf ?m2 w\n 3. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf ?m2 w}", "show \"\\<forall>w\\<in>space M. cls_val_process Mkt arb_pf 0 w = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>space M. cls_val_process Mkt arb_pf 0 w = 0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "assume \"w\\<in> space M\""], ["proof (state)\nthis:\n  w \\<in> space M\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "have \"cls_val_process Mkt arb_pf 0 w = geom_proc 0 w * arb_pf stk (Suc 0) w +\n        disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf 0 w =\n    geom_proc 0 w * arb_pf stk (Suc 0) w +\n    disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w", "using stock_pf_vp_expand\n        \\<open>stock_portfolio Mkt arb_pf\\<close>"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt ?pf \\<Longrightarrow>\n  val_process Mkt ?pf ?n ?w =\n  geom_proc ?n ?w * ?pf stk (Suc ?n) ?w +\n  disc_rfr_proc r ?n ?w * ?pf risk_free_asset (Suc ?n) ?w\n  stock_portfolio Mkt arb_pf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf 0 w =\n    geom_proc 0 w * arb_pf stk (Suc 0) w +\n    disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w", "using \\<open>self_financing Mkt arb_pf\\<close> self_financingE"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt ?pf \\<Longrightarrow>\n  val_process Mkt ?pf ?n ?w =\n  geom_proc ?n ?w * ?pf stk (Suc ?n) ?w +\n  disc_rfr_proc r ?n ?w * ?pf risk_free_asset (Suc ?n) ?w\n  stock_portfolio Mkt arb_pf\n  self_financing Mkt arb_pf\n  self_financing ?Mkt ?p \\<Longrightarrow>\n  \\<forall>n. val_process ?Mkt ?p n = cls_val_process ?Mkt ?p n\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf 0 w =\n    geom_proc 0 w * arb_pf stk (Suc 0) w +\n    disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w", "by fastforce"], ["proof (state)\nthis:\n  cls_val_process Mkt arb_pf 0 w =\n  geom_proc 0 w * arb_pf stk (Suc 0) w +\n  disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt arb_pf 0 w =\n  geom_proc 0 w * arb_pf stk (Suc 0) w +\n  disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "have \"... = geom_proc 0 w * (-1) + disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc 0 w * arb_pf stk (Suc 0) w +\n    disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w =\n    geom_proc 0 w * - 1 +\n    disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w", "by (simp add: arb_pf_def two_stocks)"], ["proof (state)\nthis:\n  geom_proc 0 w * arb_pf stk (Suc 0) w +\n  disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w =\n  geom_proc 0 w * - 1 +\n  disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "also"], ["proof (state)\nthis:\n  geom_proc 0 w * arb_pf stk (Suc 0) w +\n  disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w =\n  geom_proc 0 w * - 1 +\n  disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "have \"... = -geom_proc 0 w + arb_pf risk_free_asset (Suc 0) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc 0 w * - 1 +\n    disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w =\n    - geom_proc 0 w + arb_pf risk_free_asset (Suc 0) w", "by simp"], ["proof (state)\nthis:\n  geom_proc 0 w * - 1 +\n  disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w =\n  - geom_proc 0 w + arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "also"], ["proof (state)\nthis:\n  geom_proc 0 w * - 1 +\n  disc_rfr_proc r 0 w * arb_pf risk_free_asset (Suc 0) w =\n  - geom_proc 0 w + arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "have \"... = geom_proc 0 w  - geom_proc 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - geom_proc 0 w + arb_pf risk_free_asset (Suc 0) w =\n    geom_proc 0 w - geom_proc 0 w", "unfolding arb_pf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. - geom_proc 0 w +\n    ((\\<lambda>x n w. 0)\n     (stk := \\<lambda>n w. - 1, risk_free_asset := \\<lambda>n. geom_proc 0))\n     risk_free_asset (Suc 0) w =\n    geom_proc 0 w - geom_proc 0 w", "by simp"], ["proof (state)\nthis:\n  - geom_proc 0 w + arb_pf risk_free_asset (Suc 0) w =\n  geom_proc 0 w - geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "also"], ["proof (state)\nthis:\n  - geom_proc 0 w + arb_pf risk_free_asset (Suc 0) w =\n  geom_proc 0 w - geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc 0 w - geom_proc 0 w = 0", "by simp"], ["proof (state)\nthis:\n  geom_proc 0 w - geom_proc 0 w = 0\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow> cls_val_process Mkt arb_pf 0 w = 0", "finally"], ["proof (chain)\npicking this:\n  cls_val_process Mkt arb_pf 0 w = 0", "show \"cls_val_process Mkt arb_pf 0 w = 0\""], ["proof (prove)\nusing this:\n  cls_val_process Mkt arb_pf 0 w = 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf 0 w = 0", "."], ["proof (state)\nthis:\n  cls_val_process Mkt arb_pf 0 w = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w\\<in>space M. cls_val_process Mkt arb_pf 0 w = 0\n\ngoal (2 subgoals):\n 1. AE w in M. 0 \\<le> cls_val_process Mkt arb_pf ?m2 w\n 2. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf ?m2 w}", "have dev: \"\\<forall>w\\<in> space M. cls_val_process Mkt arb_pf (Suc 0) w = -geom_proc (Suc 0) w + (1+r) * geom_proc 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>space M.\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w", "proof (intro ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w", "assume \"w\\<in> space M\""], ["proof (state)\nthis:\n  w \\<in> space M\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w", "have \"cls_val_process Mkt arb_pf (Suc 0) w =  geom_proc (Suc 0) w * arb_pf stk (Suc 0) w +\n        disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf (Suc 0) w =\n    geom_proc (Suc 0) w * arb_pf stk (Suc 0) w +\n    disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w", "using stock_pf_uvp_expand\n        \\<open>stock_portfolio Mkt arb_pf\\<close>"], ["proof (prove)\nusing this:\n  stock_portfolio Mkt ?pf \\<Longrightarrow>\n  cls_val_process Mkt ?pf (Suc ?n) ?w =\n  geom_proc (Suc ?n) ?w * ?pf stk (Suc ?n) ?w +\n  disc_rfr_proc r (Suc ?n) ?w * ?pf risk_free_asset (Suc ?n) ?w\n  stock_portfolio Mkt arb_pf\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf (Suc 0) w =\n    geom_proc (Suc 0) w * arb_pf stk (Suc 0) w +\n    disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt arb_pf (Suc 0) w =\n  geom_proc (Suc 0) w * arb_pf stk (Suc 0) w +\n  disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt arb_pf (Suc 0) w =\n  geom_proc (Suc 0) w * arb_pf stk (Suc 0) w +\n  disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w", "have \"... = -geom_proc (Suc 0) w + disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) w * arb_pf stk (Suc 0) w +\n    disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w =\n    - geom_proc (Suc 0) w +\n    disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w", "by (simp add: arb_pf_def two_stocks)"], ["proof (state)\nthis:\n  geom_proc (Suc 0) w * arb_pf stk (Suc 0) w +\n  disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w =\n  - geom_proc (Suc 0) w +\n  disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w", "also"], ["proof (state)\nthis:\n  geom_proc (Suc 0) w * arb_pf stk (Suc 0) w +\n  disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w =\n  - geom_proc (Suc 0) w +\n  disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w", "have \"... = -geom_proc (Suc 0) w + (1+r) * arb_pf risk_free_asset (Suc 0) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - geom_proc (Suc 0) w +\n    disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w =\n    - geom_proc (Suc 0) w + (1 + r) * arb_pf risk_free_asset (Suc 0) w", "by simp"], ["proof (state)\nthis:\n  - geom_proc (Suc 0) w +\n  disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w =\n  - geom_proc (Suc 0) w + (1 + r) * arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w", "also"], ["proof (state)\nthis:\n  - geom_proc (Suc 0) w +\n  disc_rfr_proc r (Suc 0) w * arb_pf risk_free_asset (Suc 0) w =\n  - geom_proc (Suc 0) w + (1 + r) * arb_pf risk_free_asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w", "have \"... = -geom_proc (Suc 0) w + (1+r) * geom_proc 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - geom_proc (Suc 0) w + (1 + r) * arb_pf risk_free_asset (Suc 0) w =\n    - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w", "by (simp add:arb_pf_def)"], ["proof (state)\nthis:\n  - geom_proc (Suc 0) w + (1 + r) * arb_pf risk_free_asset (Suc 0) w =\n  - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       cls_val_process Mkt arb_pf (Suc 0) w =\n       - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w", "finally"], ["proof (chain)\npicking this:\n  cls_val_process Mkt arb_pf (Suc 0) w =\n  - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w", "show \"cls_val_process Mkt arb_pf (Suc 0) w = -geom_proc (Suc 0) w + (1+r) * geom_proc 0 w\""], ["proof (prove)\nusing this:\n  cls_val_process Mkt arb_pf (Suc 0) w =\n  - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf (Suc 0) w =\n    - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w", "."], ["proof (state)\nthis:\n  cls_val_process Mkt arb_pf (Suc 0) w =\n  - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w\\<in>space M.\n     cls_val_process Mkt arb_pf (Suc 0) w =\n     - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w\n\ngoal (2 subgoals):\n 1. AE w in M. 0 \\<le> cls_val_process Mkt arb_pf ?m2 w\n 2. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf ?m2 w}", "have iniT: \"\\<forall>w\\<in> space M. snth w 0 \\<longrightarrow> cls_val_process Mkt arb_pf (Suc 0) w \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>space M.\n       w !! 0 \\<longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "proof (intro ballI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "assume \"w\\<in> space M\" and \"snth w 0\""], ["proof (state)\nthis:\n  w \\<in> space M\n  w !! 0\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "have \"cls_val_process Mkt arb_pf (Suc 0) w =  -geom_proc (Suc 0) w + (1+r) * geom_proc 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf (Suc 0) w =\n    - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w", "using dev \\<open>w\\<in> space M\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>w\\<in>space M.\n     cls_val_process Mkt arb_pf (Suc 0) w =\n     - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w\n  w \\<in> space M\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf (Suc 0) w =\n    - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt arb_pf (Suc 0) w =\n  - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt arb_pf (Suc 0) w =\n  - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "have \"... = - u * geom_proc 0 w + (1+r) * geom_proc 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w =\n    - u * geom_proc 0 w + (1 + r) * geom_proc 0 w", "using \\<open>snth w 0\\<close> geometric_process"], ["proof (prove)\nusing this:\n  w !! 0\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w =\n    - u * geom_proc 0 w + (1 + r) * geom_proc 0 w", "by simp"], ["proof (state)\nthis:\n  - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w =\n  - u * geom_proc 0 w + (1 + r) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "also"], ["proof (state)\nthis:\n  - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w =\n  - u * geom_proc 0 w + (1 + r) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "have \"... = (-u + (1+r)) * geom_proc 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - u * geom_proc 0 w + (1 + r) * geom_proc 0 w =\n    (- u + (1 + r)) * geom_proc 0 w", "by (simp add: left_diff_distrib)"], ["proof (state)\nthis:\n  - u * geom_proc 0 w + (1 + r) * geom_proc 0 w =\n  (- u + (1 + r)) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "also"], ["proof (state)\nthis:\n  - u * geom_proc 0 w + (1 + r) * geom_proc 0 w =\n  (- u + (1 + r)) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "have \"... \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (- u + (1 + r)) * geom_proc 0 w", "using S0_positive \\<open>u\\<le> 1 + r\\<close> down_lt_up geometric_process"], ["proof (prove)\nusing this:\n  0 < init\n  u \\<le> 1 + r\n  d < u\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. 0 \\<le> (- u + (1 + r)) * geom_proc 0 w", "by auto"], ["proof (state)\nthis:\n  0 \\<le> (- u + (1 + r)) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "show \"cls_val_process Mkt arb_pf (Suc 0) w \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (1 subgoal):\n 1. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "."], ["proof (state)\nthis:\n  0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w\\<in>space M.\n     w !! 0 \\<longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (2 subgoals):\n 1. AE w in M. 0 \\<le> cls_val_process Mkt arb_pf ?m2 w\n 2. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf ?m2 w}", "have iniF: \"\\<forall>w\\<in> space M. \\<not>snth w 0 \\<longrightarrow> cls_val_process Mkt arb_pf (Suc 0) w > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>space M.\n       \\<not> w !! 0 \\<longrightarrow>\n       0 < cls_val_process Mkt arb_pf (Suc 0) w", "proof (intro ballI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; \\<not> w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; \\<not> w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "assume \"w\\<in> space M\" and \"\\<not>snth w 0\""], ["proof (state)\nthis:\n  w \\<in> space M\n  \\<not> w !! 0\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; \\<not> w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "have \"cls_val_process Mkt arb_pf (Suc 0) w =  -geom_proc (Suc 0) w + (1+r) * geom_proc 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf (Suc 0) w =\n    - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w", "using dev \\<open>w\\<in> space M\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>w\\<in>space M.\n     cls_val_process Mkt arb_pf (Suc 0) w =\n     - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w\n  w \\<in> space M\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt arb_pf (Suc 0) w =\n    - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt arb_pf (Suc 0) w =\n  - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; \\<not> w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt arb_pf (Suc 0) w =\n  - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; \\<not> w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "have \"... = -d * geom_proc 0 w + (1+r) * geom_proc 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w =\n    - d * geom_proc 0 w + (1 + r) * geom_proc 0 w", "using \\<open>\\<not>snth w 0\\<close> geometric_process"], ["proof (prove)\nusing this:\n  \\<not> w !! 0\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w =\n    - d * geom_proc 0 w + (1 + r) * geom_proc 0 w", "by simp"], ["proof (state)\nthis:\n  - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w =\n  - d * geom_proc 0 w + (1 + r) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; \\<not> w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "also"], ["proof (state)\nthis:\n  - geom_proc (Suc 0) w + (1 + r) * geom_proc 0 w =\n  - d * geom_proc 0 w + (1 + r) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; \\<not> w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "have \"... = (-d + (1+r)) * geom_proc 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - d * geom_proc 0 w + (1 + r) * geom_proc 0 w =\n    (- d + (1 + r)) * geom_proc 0 w", "by (simp add: left_diff_distrib)"], ["proof (state)\nthis:\n  - d * geom_proc 0 w + (1 + r) * geom_proc 0 w =\n  (- d + (1 + r)) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; \\<not> w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "also"], ["proof (state)\nthis:\n  - d * geom_proc 0 w + (1 + r) * geom_proc 0 w =\n  (- d + (1 + r)) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; \\<not> w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "have \"... > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (- d + (1 + r)) * geom_proc 0 w", "using S0_positive \\<open>u <= 1 + r\\<close> down_lt_up geometric_process"], ["proof (prove)\nusing this:\n  0 < init\n  u \\<le> 1 + r\n  d < u\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. 0 < (- d + (1 + r)) * geom_proc 0 w", "by auto"], ["proof (state)\nthis:\n  0 < (- d + (1 + r)) * geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<lbrakk>w \\<in> space M; \\<not> w !! 0\\<rbrakk>\n       \\<Longrightarrow> 0 < cls_val_process Mkt arb_pf (Suc 0) w", "finally"], ["proof (chain)\npicking this:\n  0 < cls_val_process Mkt arb_pf (Suc 0) w", "show \"cls_val_process Mkt arb_pf (Suc 0) w > 0\""], ["proof (prove)\nusing this:\n  0 < cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (1 subgoal):\n 1. 0 < cls_val_process Mkt arb_pf (Suc 0) w", "."], ["proof (state)\nthis:\n  0 < cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w\\<in>space M.\n     \\<not> w !! 0 \\<longrightarrow>\n     0 < cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (2 subgoals):\n 1. AE w in M. 0 \\<le> cls_val_process Mkt arb_pf ?m2 w\n 2. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf ?m2 w}", "have \"\\<forall>w\\<in> space M. cls_val_process Mkt arb_pf (Suc 0) w \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>space M. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "assume \"w\\<in> space M\""], ["proof (state)\nthis:\n  w \\<in> space M\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> space M \\<Longrightarrow>\n       0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "show \"cls_val_process Mkt arb_pf (Suc 0) w \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "proof (cases \"snth w 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. w !! 0 \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n 2. \\<not> w !! 0 \\<Longrightarrow>\n    0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "case True"], ["proof (state)\nthis:\n  w !! 0\n\ngoal (2 subgoals):\n 1. w !! 0 \\<Longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n 2. \\<not> w !! 0 \\<Longrightarrow>\n    0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "thus ?thesis"], ["proof (prove)\nusing this:\n  w !! 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "using \\<open>w\\<in> space M\\<close> iniT"], ["proof (prove)\nusing this:\n  w !! 0\n  w \\<in> space M\n  \\<forall>w\\<in>space M.\n     w !! 0 \\<longrightarrow> 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (1 subgoal):\n 1. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "by simp"], ["proof (state)\nthis:\n  0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (1 subgoal):\n 1. \\<not> w !! 0 \\<Longrightarrow>\n    0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> w !! 0 \\<Longrightarrow>\n    0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "case False"], ["proof (state)\nthis:\n  \\<not> w !! 0\n\ngoal (1 subgoal):\n 1. \\<not> w !! 0 \\<Longrightarrow>\n    0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> w !! 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "using \\<open>w\\<in> space M\\<close> iniF"], ["proof (prove)\nusing this:\n  \\<not> w !! 0\n  w \\<in> space M\n  \\<forall>w\\<in>space M.\n     \\<not> w !! 0 \\<longrightarrow>\n     0 < cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (1 subgoal):\n 1. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "by auto"], ["proof (state)\nthis:\n  0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w\\<in>space M. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (2 subgoals):\n 1. AE w in M. 0 \\<le> cls_val_process Mkt arb_pf ?m2 w\n 2. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf ?m2 w}", "thus \"AE w in M. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\""], ["proof (prove)\nusing this:\n  \\<forall>w\\<in>space M. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (1 subgoal):\n 1. AE w in M. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w", "by simp"], ["proof (state)\nthis:\n  AE w in M. 0 \\<le> cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "show \"0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "have \"cls_val_process Mkt arb_pf (Suc 0) \\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable borel (cls_val_process Mkt arb_pf (Suc 0))", "using borel_adapt_stoch_proc_borel_measurable\n        cls_val_process_adapted \\<open>trading_strategy arb_pf\\<close> \\<open>stock_portfolio Mkt arb_pf\\<close>"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc G ?X \\<Longrightarrow>\n  \\<forall>n. random_variable borel (?X n)\n  \\<lbrakk>trading_strategy ?p; support_adapt Mkt ?p\\<rbrakk>\n  \\<Longrightarrow> borel_adapt_stoch_proc G (cls_val_process Mkt ?p)\n  trading_strategy arb_pf\n  stock_portfolio Mkt arb_pf\n\ngoal (1 subgoal):\n 1. random_variable borel (cls_val_process Mkt arb_pf (Suc 0))", "using support_adapt_def readable"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc G ?X \\<Longrightarrow>\n  \\<forall>n. random_variable borel (?X n)\n  \\<lbrakk>trading_strategy ?p; support_adapt Mkt ?p\\<rbrakk>\n  \\<Longrightarrow> borel_adapt_stoch_proc G (cls_val_process Mkt ?p)\n  trading_strategy arb_pf\n  stock_portfolio Mkt arb_pf\n  support_adapt ?Mkt ?pf =\n  (\\<forall>asset\\<in>support_set ?pf.\n      borel_adapt_stoch_proc G (prices ?Mkt asset))\n  \\<forall>asset\\<in>stocks Mkt. borel_adapt_stoch_proc G (prices Mkt asset)\n\ngoal (1 subgoal):\n 1. random_variable borel (cls_val_process Mkt arb_pf (Suc 0))", "unfolding stock_portfolio_def"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc G ?X \\<Longrightarrow>\n  \\<forall>n. random_variable borel (?X n)\n  \\<lbrakk>trading_strategy ?p; support_adapt Mkt ?p\\<rbrakk>\n  \\<Longrightarrow> borel_adapt_stoch_proc G (cls_val_process Mkt ?p)\n  trading_strategy arb_pf\n  portfolio arb_pf \\<and> support_set arb_pf \\<subseteq> stocks Mkt\n  support_adapt ?Mkt ?pf =\n  (\\<forall>asset\\<in>support_set ?pf.\n      borel_adapt_stoch_proc G (prices ?Mkt asset))\n  \\<forall>asset\\<in>stocks Mkt. borel_adapt_stoch_proc G (prices Mkt asset)\n\ngoal (1 subgoal):\n 1. random_variable borel (cls_val_process Mkt arb_pf (Suc 0))", "by blast"], ["proof (state)\nthis:\n  random_variable borel (cls_val_process Mkt arb_pf (Suc 0))\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "hence set_event:\"{w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w} \\<in> sets M\""], ["proof (prove)\nusing this:\n  random_variable borel (cls_val_process Mkt arb_pf (Suc 0))\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w} \\<in> events", "using borel_measurable_iff_greater"], ["proof (prove)\nusing this:\n  random_variable borel (cls_val_process Mkt arb_pf (Suc 0))\n  (?f \\<in> borel_measurable ?M) =\n  (\\<forall>a. {w \\<in> space ?M. a < ?f w} \\<in> sets ?M)\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w} \\<in> events", "by blast"], ["proof (state)\nthis:\n  {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w} \\<in> events\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "have \"\\<forall>n. emeasure M {w \\<in> space M. \\<not>w !! n} = ennreal (1-p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       emeasure M {w \\<in> space M. \\<not> w !! n} = ennreal (1 - p)", "using bernoulli p_gt_0 p_lt_1 bernoulli_stream_component_probability_compl[of M p]"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n  \\<lbrakk>M = bernoulli_stream p; 0 \\<le> p; p \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>n.\n                       emeasure M {w \\<in> space M. \\<not> w !! n} =\n                       ennreal (1 - p)\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       emeasure M {w \\<in> space M. \\<not> w !! n} = ennreal (1 - p)", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. emeasure M {w \\<in> space M. \\<not> w !! n} = ennreal (1 - p)\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "hence \"emeasure M {w \\<in> space M. \\<not>w !! 0} = ennreal (1-p)\""], ["proof (prove)\nusing this:\n  \\<forall>n. emeasure M {w \\<in> space M. \\<not> w !! n} = ennreal (1 - p)\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. \\<not> w !! 0} = ennreal (1 - p)", "by blast"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. \\<not> w !! 0} = ennreal (1 - p)\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "moreover"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. \\<not> w !! 0} = ennreal (1 - p)\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "have \"{w \\<in> space M. \\<not>w !! 0} \\<subseteq> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. \\<not> w !! 0}\n    \\<subseteq> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. \\<not> w !! 0} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. \\<not> w !! 0} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "assume \"w\\<in> {w \\<in> space M. \\<not>w !! 0}\""], ["proof (state)\nthis:\n  w \\<in> {w \\<in> space M. \\<not> w !! 0}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. \\<not> w !! 0} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "hence \"w \\<in> space M\" and \"\\<not>w !! 0\""], ["proof (prove)\nusing this:\n  w \\<in> {w \\<in> space M. \\<not> w !! 0}\n\ngoal (1 subgoal):\n 1. w \\<in> space M &&& \\<not> w !! 0", "by auto"], ["proof (state)\nthis:\n  w \\<in> space M\n  \\<not> w !! 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. \\<not> w !! 0} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "note wprops = this"], ["proof (state)\nthis:\n  w \\<in> space M\n  \\<not> w !! 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. \\<not> w !! 0} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "hence \"0 < cls_val_process Mkt arb_pf 1 w\""], ["proof (prove)\nusing this:\n  w \\<in> space M\n  \\<not> w !! 0\n\ngoal (1 subgoal):\n 1. 0 < cls_val_process Mkt arb_pf 1 w", "using iniF"], ["proof (prove)\nusing this:\n  w \\<in> space M\n  \\<not> w !! 0\n  \\<forall>w\\<in>space M.\n     \\<not> w !! 0 \\<longrightarrow>\n     0 < cls_val_process Mkt arb_pf (Suc 0) w\n\ngoal (1 subgoal):\n 1. 0 < cls_val_process Mkt arb_pf 1 w", "by simp"], ["proof (state)\nthis:\n  0 < cls_val_process Mkt arb_pf 1 w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. \\<not> w !! 0} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "thus \"w\\<in> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\""], ["proof (prove)\nusing this:\n  0 < cls_val_process Mkt arb_pf 1 w\n\ngoal (1 subgoal):\n 1. w \\<in> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "using wprops"], ["proof (prove)\nusing this:\n  0 < cls_val_process Mkt arb_pf 1 w\n  w \\<in> space M\n  \\<not> w !! 0\n\ngoal (1 subgoal):\n 1. w \\<in> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "by simp"], ["proof (state)\nthis:\n  w \\<in> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w \\<in> space M. \\<not> w !! 0}\n  \\<subseteq> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "ultimately"], ["proof (chain)\npicking this:\n  emeasure M {w \\<in> space M. \\<not> w !! 0} = ennreal (1 - p)\n  {w \\<in> space M. \\<not> w !! 0}\n  \\<subseteq> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "have \"1-p \\<le> emeasure M {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\""], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. \\<not> w !! 0} = ennreal (1 - p)\n  {w \\<in> space M. \\<not> w !! 0}\n  \\<subseteq> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\n\ngoal (1 subgoal):\n 1. ennreal (1 - p)\n    \\<le> emeasure M {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "using emeasure_mono set_event"], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. \\<not> w !! 0} = ennreal (1 - p)\n  {w \\<in> space M. \\<not> w !! 0}\n  \\<subseteq> {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\n  \\<lbrakk>?a \\<subseteq> ?b; ?b \\<in> sets ?M\\<rbrakk>\n  \\<Longrightarrow> emeasure ?M ?a \\<le> emeasure ?M ?b\n  {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w} \\<in> events\n\ngoal (1 subgoal):\n 1. ennreal (1 - p)\n    \\<le> emeasure M {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "by fastforce"], ["proof (state)\nthis:\n  ennreal (1 - p)\n  \\<le> emeasure M {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "hence \"1-p \\<le> prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\""], ["proof (prove)\nusing this:\n  ennreal (1 - p)\n  \\<le> emeasure M {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\n\ngoal (1 subgoal):\n 1. 1 - p \\<le> prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}", "by (simp add: emeasure_eq_measure)"], ["proof (state)\nthis:\n  1 - p \\<le> prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "thus \"0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}\""], ["proof (prove)\nusing this:\n  1 - p \\<le> prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "using pslt"], ["proof (prove)\nusing this:\n  1 - p \\<le> prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf 1 w}\n  p < 1\n\ngoal (1 subgoal):\n 1. 0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}", "by simp"], ["proof (state)\nthis:\n  0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < prob {w \\<in> space M. 0 < cls_val_process Mkt arb_pf (Suc 0) w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  arbitrage_process Mkt arb_pf\n\ngoal (1 subgoal):\n 1. \\<not> 1 + r < u \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  arbitrage_process Mkt arb_pf\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  arbitrage_process Mkt arb_pf\n  viable_market Mkt\n\ngoal (1 subgoal):\n 1. False", "unfolding viable_market_def"], ["proof (prove)\nusing this:\n  arbitrage_process Mkt arb_pf\n  \\<forall>p.\n     stock_portfolio Mkt p \\<longrightarrow> \\<not> arbitrage_process Mkt p\n\ngoal (1 subgoal):\n 1. False", "using \\<open>stock_portfolio Mkt arb_pf\\<close>"], ["proof (prove)\nusing this:\n  arbitrage_process Mkt arb_pf\n  \\<forall>p.\n     stock_portfolio Mkt p \\<longrightarrow> \\<not> arbitrage_process Mkt p\n  stock_portfolio Mkt arb_pf\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) viable_iff:\nshows \"viable_market Mkt \\<longleftrightarrow> (d < 1+r \\<and> 1+r < u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. viable_market Mkt = (d < 1 + r \\<and> 1 + r < u)", "using viable_if viable_only_if_d viable_only_if_u"], ["proof (prove)\nusing this:\n  \\<lbrakk>1 + r < u; d < 1 + r\\<rbrakk> \\<Longrightarrow> viable_market Mkt\n  viable_market Mkt \\<Longrightarrow> d < 1 + r\n  viable_market Mkt \\<Longrightarrow> 1 + r < u\n\ngoal (1 subgoal):\n 1. viable_market Mkt = (d < 1 + r \\<and> 1 + r < u)", "by auto"], ["", "subsection \\<open>Risk-neutral probability space for the geometric random walk\\<close>"], ["", "lemma (in CRR_market) stock_price_borel_measurable:\n  shows \"borel_adapt_stoch_proc G (prices Mkt stk)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc G (prices Mkt stk)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc G (prices Mkt stk)", "have \"borel_adapt_stoch_proc (stoch_proc_filt M geom_proc borel) (prices Mkt stk)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc (stoch_proc_filt M geom_proc borel)\n     (prices Mkt stk)", "by (simp add: geom_rand_walk_borel_measurable stk_price stoch_proc_filt_adapt)"], ["proof (state)\nthis:\n  borel_adapt_stoch_proc (stoch_proc_filt M geom_proc borel)\n   (prices Mkt stk)\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc G (prices Mkt stk)", "thus ?thesis"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc (stoch_proc_filt M geom_proc borel)\n   (prices Mkt stk)\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc G (prices Mkt stk)", "by (simp add:stock_filtration)"], ["proof (state)\nthis:\n  borel_adapt_stoch_proc G (prices Mkt stk)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) risk_free_asset_martingale:\n  assumes \"N = bernoulli_stream q\"\n  and \"0 < q\"\n  and \"q < 1\"\n  shows \"martingale N G (discounted_value r (prices Mkt risk_free_asset))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. martingale N G (discounted_value r (prices Mkt risk_free_asset))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. martingale N G (discounted_value r (prices Mkt risk_free_asset))", "have \"filtration N G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Filtration.filtration N G", "by (simp add: assms bernoulli_gen_filtration)"], ["proof (state)\nthis:\n  Filtration.filtration N G\n\ngoal (1 subgoal):\n 1. martingale N G (discounted_value r (prices Mkt risk_free_asset))", "moreover"], ["proof (state)\nthis:\n  Filtration.filtration N G\n\ngoal (1 subgoal):\n 1. martingale N G (discounted_value r (prices Mkt risk_free_asset))", "have \"\\<forall>n. sigma_finite_subalgebra N (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. sigma_finite_subalgebra N (G n)", "by (simp add: assms bernoulli_sigma_finite)"], ["proof (state)\nthis:\n  \\<forall>n. sigma_finite_subalgebra N (G n)\n\ngoal (1 subgoal):\n 1. martingale N G (discounted_value r (prices Mkt risk_free_asset))", "moreover"], ["proof (state)\nthis:\n  \\<forall>n. sigma_finite_subalgebra N (G n)\n\ngoal (1 subgoal):\n 1. martingale N G (discounted_value r (prices Mkt risk_free_asset))", "have \"finite_measure N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_measure N", "using assms bernoulli_stream_def prob_space.prob_space_stream_space\n    prob_space_def prob_space_measure_pmf"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  bernoulli_stream ?p = stream_space (measure_pmf (bernoulli_pmf ?p))\n  prob_space ?M \\<Longrightarrow> prob_space (stream_space ?M)\n  prob_space ?M \\<equiv> finite_measure ?M \\<and> prob_space_axioms ?M\n  prob_space (measure_pmf ?p)\n\ngoal (1 subgoal):\n 1. finite_measure N", "by auto"], ["proof (state)\nthis:\n  finite_measure N\n\ngoal (1 subgoal):\n 1. martingale N G (discounted_value r (prices Mkt risk_free_asset))", "moreover"], ["proof (state)\nthis:\n  finite_measure N\n\ngoal (1 subgoal):\n 1. martingale N G (discounted_value r (prices Mkt risk_free_asset))", "have \"discounted_value r (prices Mkt risk_free_asset) = (\\<lambda> n w. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discounted_value r (prices Mkt risk_free_asset) = (\\<lambda>n w. 1)", "using discounted_rfr"], ["proof (prove)\nusing this:\n  discounted_value r (prices Mkt risk_free_asset) ?n ?w = 1\n\ngoal (1 subgoal):\n 1. discounted_value r (prices Mkt risk_free_asset) = (\\<lambda>n w. 1)", "by auto"], ["proof (state)\nthis:\n  discounted_value r (prices Mkt risk_free_asset) = (\\<lambda>n w. 1)\n\ngoal (1 subgoal):\n 1. martingale N G (discounted_value r (prices Mkt risk_free_asset))", "ultimately"], ["proof (chain)\npicking this:\n  Filtration.filtration N G\n  \\<forall>n. sigma_finite_subalgebra N (G n)\n  finite_measure N\n  discounted_value r (prices Mkt risk_free_asset) = (\\<lambda>n w. 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  Filtration.filtration N G\n  \\<forall>n. sigma_finite_subalgebra N (G n)\n  finite_measure N\n  discounted_value r (prices Mkt risk_free_asset) = (\\<lambda>n w. 1)\n\ngoal (1 subgoal):\n 1. martingale N G (discounted_value r (prices Mkt risk_free_asset))", "using finite_measure.constant_martingale"], ["proof (prove)\nusing this:\n  Filtration.filtration N G\n  \\<forall>n. sigma_finite_subalgebra N (G n)\n  finite_measure N\n  discounted_value r (prices Mkt risk_free_asset) = (\\<lambda>n w. 1)\n  \\<lbrakk>finite_measure ?M; \\<forall>t. sigma_finite_subalgebra ?M (?F t);\n   Filtration.filtration ?M ?F\\<rbrakk>\n  \\<Longrightarrow> martingale ?M ?F (\\<lambda>n w. ?c)\n\ngoal (1 subgoal):\n 1. martingale N G (discounted_value r (prices Mkt risk_free_asset))", "by simp"], ["proof (state)\nthis:\n  martingale N G (discounted_value r (prices Mkt risk_free_asset))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_from_eq_sets:\n  assumes \"N = bernoulli_stream q\"\n  and \"0 < q\"\n  and \"q < 1\"\nshows \"sets (infinite_coin_toss_space.nat_filtration N n) = sets (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (infinite_coin_toss_space.nat_filtration N n) =\n    sets (nat_filtration n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sets (infinite_coin_toss_space.nat_filtration N n) =\n    sets (nat_filtration n)", "have \"sigma_sets (space (bernoulli_stream q)) {pseudo_proj_True n -` B \\<inter> space N |B. B \\<in> sets (bernoulli_stream q)} = sigma_sets (space (bernoulli_stream p))\n          {pseudo_proj_True n -` B \\<inter> space M |B. B \\<in> sets (bernoulli_stream p)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_sets (space (bernoulli_stream q))\n     {pseudo_proj_True n -` B \\<inter> space N |B.\n      B \\<in> sets (bernoulli_stream q)} =\n    sigma_sets (space (bernoulli_stream p))\n     {pseudo_proj_True n -` B \\<inter> space M |B.\n      B \\<in> sets (bernoulli_stream p)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sigma_sets (space (bernoulli_stream q))\n     {pseudo_proj_True n -` B \\<inter> space N |B.\n      B \\<in> sets (bernoulli_stream q)} =\n    sigma_sets (space (bernoulli_stream p))\n     {pseudo_proj_True n -` B \\<inter> space M |B.\n      B \\<in> sets (bernoulli_stream p)}", "have \"sets N = events\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets N = events", "by (metis assms(1) bernoulli_stream_def infinite_coin_toss_space_axioms infinite_coin_toss_space_def sets_measure_pmf sets_stream_space_cong)"], ["proof (state)\nthis:\n  sets N = events\n\ngoal (1 subgoal):\n 1. sigma_sets (space (bernoulli_stream q))\n     {pseudo_proj_True n -` B \\<inter> space N |B.\n      B \\<in> sets (bernoulli_stream q)} =\n    sigma_sets (space (bernoulli_stream p))\n     {pseudo_proj_True n -` B \\<inter> space M |B.\n      B \\<in> sets (bernoulli_stream p)}", "then"], ["proof (chain)\npicking this:\n  sets N = events", "show ?thesis"], ["proof (prove)\nusing this:\n  sets N = events\n\ngoal (1 subgoal):\n 1. sigma_sets (space (bernoulli_stream q))\n     {pseudo_proj_True n -` B \\<inter> space N |B.\n      B \\<in> sets (bernoulli_stream q)} =\n    sigma_sets (space (bernoulli_stream p))\n     {pseudo_proj_True n -` B \\<inter> space M |B.\n      B \\<in> sets (bernoulli_stream p)}", "using assms(1) bernoulli_stream_space infinite_coin_toss_space_axioms infinite_coin_toss_space_def"], ["proof (prove)\nusing this:\n  sets N = events\n  N = bernoulli_stream q\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n  infinite_coin_toss_space p M\n  infinite_coin_toss_space ?p ?M \\<equiv>\n  0 \\<le> ?p \\<and> ?p \\<le> 1 \\<and> ?M = bernoulli_stream ?p\n\ngoal (1 subgoal):\n 1. sigma_sets (space (bernoulli_stream q))\n     {pseudo_proj_True n -` B \\<inter> space N |B.\n      B \\<in> sets (bernoulli_stream q)} =\n    sigma_sets (space (bernoulli_stream p))\n     {pseudo_proj_True n -` B \\<inter> space M |B.\n      B \\<in> sets (bernoulli_stream p)}", "by auto"], ["proof (state)\nthis:\n  sigma_sets (space (bernoulli_stream q))\n   {pseudo_proj_True n -` B \\<inter> space N |B.\n    B \\<in> sets (bernoulli_stream q)} =\n  sigma_sets (space (bernoulli_stream p))\n   {pseudo_proj_True n -` B \\<inter> space M |B.\n    B \\<in> sets (bernoulli_stream p)}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sigma_sets (space (bernoulli_stream q))\n   {pseudo_proj_True n -` B \\<inter> space N |B.\n    B \\<in> sets (bernoulli_stream q)} =\n  sigma_sets (space (bernoulli_stream p))\n   {pseudo_proj_True n -` B \\<inter> space M |B.\n    B \\<in> sets (bernoulli_stream p)}\n\ngoal (1 subgoal):\n 1. sets (infinite_coin_toss_space.nat_filtration N n) =\n    sets (nat_filtration n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  sigma_sets (space (bernoulli_stream q))\n   {pseudo_proj_True n -` B \\<inter> space N |B.\n    B \\<in> sets (bernoulli_stream q)} =\n  sigma_sets (space (bernoulli_stream p))\n   {pseudo_proj_True n -` B \\<inter> space M |B.\n    B \\<in> sets (bernoulli_stream p)}\n\ngoal (1 subgoal):\n 1. sets (infinite_coin_toss_space.nat_filtration N n) =\n    sets (nat_filtration n)", "using infinite_coin_toss_space.nat_filtration_sets"], ["proof (prove)\nusing this:\n  sigma_sets (space (bernoulli_stream q))\n   {pseudo_proj_True n -` B \\<inter> space N |B.\n    B \\<in> sets (bernoulli_stream q)} =\n  sigma_sets (space (bernoulli_stream p))\n   {pseudo_proj_True n -` B \\<inter> space M |B.\n    B \\<in> sets (bernoulli_stream p)}\n  infinite_coin_toss_space ?p ?M \\<Longrightarrow>\n  sets (infinite_coin_toss_space.nat_filtration ?M ?n) =\n  sigma_sets (space (bernoulli_stream ?p))\n   {pseudo_proj_True ?n -` B \\<inter> space ?M |B.\n    B \\<in> sets (bernoulli_stream ?p)}\n\ngoal (1 subgoal):\n 1. sets (infinite_coin_toss_space.nat_filtration N n) =\n    sets (nat_filtration n)", "using assms(1) assms(2) assms(3) infinite_coin_toss_space_axioms infinite_coin_toss_space_def"], ["proof (prove)\nusing this:\n  sigma_sets (space (bernoulli_stream q))\n   {pseudo_proj_True n -` B \\<inter> space N |B.\n    B \\<in> sets (bernoulli_stream q)} =\n  sigma_sets (space (bernoulli_stream p))\n   {pseudo_proj_True n -` B \\<inter> space M |B.\n    B \\<in> sets (bernoulli_stream p)}\n  infinite_coin_toss_space ?p ?M \\<Longrightarrow>\n  sets (infinite_coin_toss_space.nat_filtration ?M ?n) =\n  sigma_sets (space (bernoulli_stream ?p))\n   {pseudo_proj_True ?n -` B \\<inter> space ?M |B.\n    B \\<in> sets (bernoulli_stream ?p)}\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  infinite_coin_toss_space p M\n  infinite_coin_toss_space ?p ?M \\<equiv>\n  0 \\<le> ?p \\<and> ?p \\<le> 1 \\<and> ?M = bernoulli_stream ?p\n\ngoal (1 subgoal):\n 1. sets (infinite_coin_toss_space.nat_filtration N n) =\n    sets (nat_filtration n)", "by auto"], ["proof (state)\nthis:\n  sets (infinite_coin_toss_space.nat_filtration N n) =\n  sets (nat_filtration n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) geom_proc_integrable:\n  assumes \"N = bernoulli_stream q\"\nand \"0 \\<le> q\"\nand \"q \\<le> 1\"\nshows \"integrable N (geom_proc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable N (geom_proc n)", "proof (rule infinite_coin_toss_space.nat_filtration_borel_measurable_integrable)"], ["proof (state)\ngoal (2 subgoals):\n 1. infinite_coin_toss_space ?p N\n 2. geom_proc n\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)", "show \"infinite_coin_toss_space q N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 \\<le> q\n  q \\<le> 1\n\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "by unfold_locales"], ["proof (state)\nthis:\n  infinite_coin_toss_space q N\n\ngoal (1 subgoal):\n 1. geom_proc n\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)", "show \"geom_proc n \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc n\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "using geometric_process\n    prob_grw.geom_rand_walk_borel_adapted[of q N geom_proc u d init]"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n  prob_grw q N geom_proc u d init \\<Longrightarrow>\n  borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n   geom_proc\n\ngoal (1 subgoal):\n 1. geom_proc n\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "by (metis \\<open>infinite_coin_toss_space q N\\<close> geom_rand_walk_pseudo_proj_True infinite_coin_toss_space.nat_filtration_borel_measurable_characterization\n         prob_grw.geom_rand_walk_borel_measurable prob_grw_axioms prob_grw_def)"], ["proof (state)\nthis:\n  geom_proc n\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) CRR_infinite_cts_filtration:\n  shows \"infinite_cts_filtration p M nat_filtration\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_cts_filtration p M nat_filtration", "by (unfold_locales, simp)"], ["", "lemma (in CRR_market) proj_stoch_proc_geom_disc_fct:\n  shows \"disc_fct (proj_stoch_proc geom_proc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc_fct (proj_stoch_proc geom_proc n)", "unfolding disc_fct_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. countable (range (proj_stoch_proc geom_proc n))", "using CRR_infinite_cts_filtration"], ["proof (prove)\nusing this:\n  infinite_cts_filtration p M nat_filtration\n\ngoal (1 subgoal):\n 1. countable (range (proj_stoch_proc geom_proc n))", "by (simp add: countable_finite geom_rand_walk_borel_adapted infinite_cts_filtration.proj_stoch_set_finite_range)"], ["", "lemma (in CRR_market) proj_stoch_proc_geom_rng:\n  assumes \"N = bernoulli_stream q\"\nshows  \"proj_stoch_proc geom_proc n \\<in> N \\<rightarrow>\\<^sub>M stream_space borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n\n    \\<in> N \\<rightarrow>\\<^sub>M stream_space borel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n\n    \\<in> N \\<rightarrow>\\<^sub>M stream_space borel", "have \"random_variable (stream_space borel) (proj_stoch_proc geom_proc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable (stream_space borel) (proj_stoch_proc geom_proc n)", "using CRR_infinite_cts_filtration"], ["proof (prove)\nusing this:\n  infinite_cts_filtration p M nat_filtration\n\ngoal (1 subgoal):\n 1. random_variable (stream_space borel) (proj_stoch_proc geom_proc n)", "using geom_rand_walk_borel_adapted nat_discrete_filtration proj_stoch_measurable_if_adapted"], ["proof (prove)\nusing this:\n  infinite_cts_filtration p M nat_filtration\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  Filtration.filtration M nat_filtration\n  \\<lbrakk>Filtration.filtration ?M ?F; adapt_stoch_proc ?F ?f ?N\\<rbrakk>\n  \\<Longrightarrow> proj_stoch_proc ?f ?n\n                    \\<in> ?M \\<rightarrow>\\<^sub>M stream_space ?N\n\ngoal (1 subgoal):\n 1. random_variable (stream_space borel) (proj_stoch_proc geom_proc n)", "by blast"], ["proof (state)\nthis:\n  random_variable (stream_space borel) (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n\n    \\<in> N \\<rightarrow>\\<^sub>M stream_space borel", "then"], ["proof (chain)\npicking this:\n  random_variable (stream_space borel) (proj_stoch_proc geom_proc n)", "show ?thesis"], ["proof (prove)\nusing this:\n  random_variable (stream_space borel) (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n\n    \\<in> N \\<rightarrow>\\<^sub>M stream_space borel", "using assms(1) bernoulli bernoulli_stream_def"], ["proof (prove)\nusing this:\n  random_variable (stream_space borel) (proj_stoch_proc geom_proc n)\n  N = bernoulli_stream q\n  M = bernoulli_stream p\n  bernoulli_stream ?p = stream_space (measure_pmf (bernoulli_pmf ?p))\n\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n\n    \\<in> N \\<rightarrow>\\<^sub>M stream_space borel", "by auto"], ["proof (state)\nthis:\n  proj_stoch_proc geom_proc n\n  \\<in> N \\<rightarrow>\\<^sub>M stream_space borel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) proj_stoch_proc_geom_open_set:\n  shows  \"\\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter> space (stream_space borel).\n     \\<exists>A\\<in>sets (stream_space borel). range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n               space (stream_space borel) \\<Longrightarrow>\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n               space (stream_space borel) \\<Longrightarrow>\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "assume \"r\\<in> range (proj_stoch_proc geom_proc n) \\<inter> space (stream_space borel)\""], ["proof (state)\nthis:\n  r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n          space (stream_space borel)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n               space (stream_space borel) \\<Longrightarrow>\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "show \"\\<exists>A\\<in>sets (stream_space borel). range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets (stream_space borel).\n       range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. range (proj_stoch_proc geom_proc n) \\<inter> ?x = {r}\n 2. ?x \\<in> sets (stream_space borel)", "show \"infinite_cts_filtration.stream_space_single (proj_stoch_proc geom_proc n) r \\<in> sets (stream_space borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_cts_filtration.stream_space_single\n     (proj_stoch_proc geom_proc n) r\n    \\<in> sets (stream_space borel)", "using infinite_cts_filtration.stream_space_single_set \\<open>r \\<in> range (proj_stoch_proc geom_proc n) \\<inter> space (stream_space borel)\\<close>\n        geom_rand_walk_borel_adapted CRR_infinite_cts_filtration"], ["proof (prove)\nusing this:\n  \\<lbrakk>infinite_cts_filtration ?p ?M ?F; borel_adapt_stoch_proc ?F ?X;\n   ?r \\<in> range (proj_stoch_proc ?X ?n)\\<rbrakk>\n  \\<Longrightarrow> infinite_cts_filtration.stream_space_single\n                     (proj_stoch_proc ?X ?n) ?r\n                    \\<in> sets (stream_space borel)\n  r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n          space (stream_space borel)\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  infinite_cts_filtration p M nat_filtration\n\ngoal (1 subgoal):\n 1. infinite_cts_filtration.stream_space_single\n     (proj_stoch_proc geom_proc n) r\n    \\<in> sets (stream_space borel)", "by blast"], ["proof (state)\nthis:\n  infinite_cts_filtration.stream_space_single (proj_stoch_proc geom_proc n)\n   r\n  \\<in> sets (stream_space borel)\n\ngoal (1 subgoal):\n 1. range (proj_stoch_proc geom_proc n) \\<inter>\n    infinite_cts_filtration.stream_space_single\n     (proj_stoch_proc geom_proc n) r =\n    {r}", "show \"range (proj_stoch_proc geom_proc n) \\<inter> infinite_cts_filtration.stream_space_single (proj_stoch_proc geom_proc n) r = {r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (proj_stoch_proc geom_proc n) \\<inter>\n    infinite_cts_filtration.stream_space_single\n     (proj_stoch_proc geom_proc n) r =\n    {r}", "using infinite_cts_filtration.stream_space_single_preimage \\<open>r \\<in> range (proj_stoch_proc geom_proc n) \\<inter> space (stream_space borel)\\<close>\n        geom_rand_walk_borel_adapted CRR_infinite_cts_filtration"], ["proof (prove)\nusing this:\n  \\<lbrakk>infinite_cts_filtration ?p ?M ?F; borel_adapt_stoch_proc ?F ?X;\n   ?r \\<in> range (proj_stoch_proc ?X ?n)\\<rbrakk>\n  \\<Longrightarrow> infinite_cts_filtration.stream_space_single\n                     (proj_stoch_proc ?X ?n) ?r \\<inter>\n                    range (proj_stoch_proc ?X ?n) =\n                    {?r}\n  r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n          space (stream_space borel)\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  infinite_cts_filtration p M nat_filtration\n\ngoal (1 subgoal):\n 1. range (proj_stoch_proc geom_proc n) \\<inter>\n    infinite_cts_filtration.stream_space_single\n     (proj_stoch_proc geom_proc n) r =\n    {r}", "by blast"], ["proof (state)\nthis:\n  range (proj_stoch_proc geom_proc n) \\<inter>\n  infinite_cts_filtration.stream_space_single (proj_stoch_proc geom_proc n)\n   r =\n  {r}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>A\\<in>sets (stream_space borel).\n     range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) bernoulli_AE_cond_exp:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nand \"integrable N X\"\nshows \"AE w in N. real_cond_exp N (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)) X w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) X w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       X)\n     (expl_cond_expect N (proj_stoch_proc geom_proc n) X)", "proof (rule finite_measure.charact_cond_exp')"], ["proof (state)\ngoal (5 subgoals):\n 1. finite_measure N\n 2. disc_fct (proj_stoch_proc geom_proc n)\n 3. integrable N X\n 4. proj_stoch_proc geom_proc n\n    \\<in> N \\<rightarrow>\\<^sub>M stream_space borel\n 5. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "have \"infinite_cts_filtration p M nat_filtration\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_cts_filtration p M nat_filtration", "by (unfold_locales, simp)"], ["proof (state)\nthis:\n  infinite_cts_filtration p M nat_filtration\n\ngoal (5 subgoals):\n 1. finite_measure N\n 2. disc_fct (proj_stoch_proc geom_proc n)\n 3. integrable N X\n 4. proj_stoch_proc geom_proc n\n    \\<in> N \\<rightarrow>\\<^sub>M stream_space borel\n 5. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "show \"finite_measure N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_measure N", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  integrable N X\n\ngoal (1 subgoal):\n 1. finite_measure N", "by (simp add: bernoulli_stream_def prob_space.finite_measure prob_space.prob_space_stream_space prob_space_measure_pmf)"], ["proof (state)\nthis:\n  finite_measure N\n\ngoal (4 subgoals):\n 1. disc_fct (proj_stoch_proc geom_proc n)\n 2. integrable N X\n 3. proj_stoch_proc geom_proc n\n    \\<in> N \\<rightarrow>\\<^sub>M stream_space borel\n 4. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "show \"disc_fct (proj_stoch_proc geom_proc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc_fct (proj_stoch_proc geom_proc n)", "using proj_stoch_proc_geom_disc_fct"], ["proof (prove)\nusing this:\n  disc_fct (proj_stoch_proc geom_proc ?n)\n\ngoal (1 subgoal):\n 1. disc_fct (proj_stoch_proc geom_proc n)", "by simp"], ["proof (state)\nthis:\n  disc_fct (proj_stoch_proc geom_proc n)\n\ngoal (3 subgoals):\n 1. integrable N X\n 2. proj_stoch_proc geom_proc n\n    \\<in> N \\<rightarrow>\\<^sub>M stream_space borel\n 3. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "show \"integrable N X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable N X", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  integrable N X\n\ngoal (1 subgoal):\n 1. integrable N X", "by simp"], ["proof (state)\nthis:\n  integrable N X\n\ngoal (2 subgoals):\n 1. proj_stoch_proc geom_proc n\n    \\<in> N \\<rightarrow>\\<^sub>M stream_space borel\n 2. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "show \"proj_stoch_proc geom_proc n \\<in> N \\<rightarrow>\\<^sub>M stream_space borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n\n    \\<in> N \\<rightarrow>\\<^sub>M stream_space borel", "using assms proj_stoch_proc_geom_rng"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  integrable N X\n  ?N = bernoulli_stream ?q \\<Longrightarrow>\n  proj_stoch_proc geom_proc ?n\n  \\<in> ?N \\<rightarrow>\\<^sub>M stream_space borel\n\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n\n    \\<in> N \\<rightarrow>\\<^sub>M stream_space borel", "by simp"], ["proof (state)\nthis:\n  proj_stoch_proc geom_proc n\n  \\<in> N \\<rightarrow>\\<^sub>M stream_space borel\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "show \"\\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter> space (stream_space borel).\n     \\<exists>A\\<in>sets (stream_space borel). range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "using proj_stoch_proc_geom_open_set"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>range (proj_stoch_proc geom_proc ?n) \\<inter>\n                 space (stream_space borel).\n     \\<exists>A\\<in>sets (stream_space borel).\n        range (proj_stoch_proc geom_proc ?n) \\<inter> A = {r}\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "by simp"], ["proof (state)\nthis:\n  \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                 space (stream_space borel).\n     \\<exists>A\\<in>sets (stream_space borel).\n        range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) geom_proc_cond_exp:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nshows \"AE w in N. real_cond_exp N (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)) (geom_proc (Suc n)) w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) (geom_proc (Suc n)) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       (geom_proc (Suc n)))\n     (expl_cond_expect N (proj_stoch_proc geom_proc n) (geom_proc (Suc n)))", "proof (rule bernoulli_AE_cond_exp)"], ["proof (state)\ngoal (4 subgoals):\n 1. N = bernoulli_stream ?q\n 2. 0 < ?q\n 3. ?q < 1\n 4. integrable N (geom_proc (Suc n))", "show \"integrable N (geom_proc (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable N (geom_proc (Suc n))", "using assms geom_proc_integrable[of N q \"Suc n\"]"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  \\<lbrakk>N = bernoulli_stream q; 0 \\<le> q; q \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> integrable N (geom_proc (Suc n))\n\ngoal (1 subgoal):\n 1. integrable N (geom_proc (Suc n))", "by simp"], ["proof (state)\nthis:\n  integrable N (geom_proc (Suc n))\n\ngoal (3 subgoals):\n 1. N = bernoulli_stream ?q\n 2. 0 < ?q\n 3. ?q < 1", "qed (auto simp add: assms)"], ["", "lemma (in CRR_market) expl_cond_eq_sets:\n  assumes \"N = bernoulli_stream q\"\n  shows  \"expl_cond_expect N (proj_stoch_proc geom_proc n) X \\<in>\n        borel_measurable (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) X\n    \\<in> borel_measurable\n           (fct_gen_subalgebra N (stream_space borel)\n             (proj_stoch_proc geom_proc n))", "proof (rule expl_cond_exp_borel)"], ["proof (state)\ngoal (3 subgoals):\n 1. proj_stoch_proc geom_proc n\n    \\<in> space N \\<rightarrow> space (stream_space borel)\n 2. disc_fct (proj_stoch_proc geom_proc n)\n 3. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "show \"proj_stoch_proc geom_proc n \\<in> space N \\<rightarrow> space (stream_space borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n\n    \\<in> space N \\<rightarrow> space (stream_space borel)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n\n    \\<in> space N \\<rightarrow> space (stream_space borel)", "have \"random_variable (stream_space borel) (proj_stoch_proc geom_proc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable (stream_space borel) (proj_stoch_proc geom_proc n)", "using CRR_infinite_cts_filtration geom_rand_walk_borel_adapted proj_stoch_measurable_if_adapted\n        nat_discrete_filtration"], ["proof (prove)\nusing this:\n  infinite_cts_filtration p M nat_filtration\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  \\<lbrakk>Filtration.filtration ?M ?F; adapt_stoch_proc ?F ?f ?N\\<rbrakk>\n  \\<Longrightarrow> proj_stoch_proc ?f ?n\n                    \\<in> ?M \\<rightarrow>\\<^sub>M stream_space ?N\n  Filtration.filtration M nat_filtration\n\ngoal (1 subgoal):\n 1. random_variable (stream_space borel) (proj_stoch_proc geom_proc n)", "by blast"], ["proof (state)\nthis:\n  random_variable (stream_space borel) (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n\n    \\<in> space N \\<rightarrow> space (stream_space borel)", "then"], ["proof (chain)\npicking this:\n  random_variable (stream_space borel) (proj_stoch_proc geom_proc n)", "show ?thesis"], ["proof (prove)\nusing this:\n  random_variable (stream_space borel) (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n\n    \\<in> space N \\<rightarrow> space (stream_space borel)", "by (simp add: assms(1) bernoulli bernoulli_stream_space measurable_def)"], ["proof (state)\nthis:\n  proj_stoch_proc geom_proc n\n  \\<in> space N \\<rightarrow> space (stream_space borel)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  proj_stoch_proc geom_proc n\n  \\<in> space N \\<rightarrow> space (stream_space borel)\n\ngoal (2 subgoals):\n 1. disc_fct (proj_stoch_proc geom_proc n)\n 2. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "show \"disc_fct (proj_stoch_proc geom_proc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc_fct (proj_stoch_proc geom_proc n)", "unfolding disc_fct_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. countable (range (proj_stoch_proc geom_proc n))", "using CRR_infinite_cts_filtration"], ["proof (prove)\nusing this:\n  infinite_cts_filtration p M nat_filtration\n\ngoal (1 subgoal):\n 1. countable (range (proj_stoch_proc geom_proc n))", "by (simp add: countable_finite geom_rand_walk_borel_adapted infinite_cts_filtration.proj_stoch_set_finite_range)"], ["proof (state)\nthis:\n  disc_fct (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "show \"\\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter> space (stream_space borel).\n    \\<exists>A\\<in>sets (stream_space borel). range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n               space (stream_space borel) \\<Longrightarrow>\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n               space (stream_space borel) \\<Longrightarrow>\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "assume \"r\\<in>range (proj_stoch_proc geom_proc n) \\<inter> space (stream_space borel)\""], ["proof (state)\nthis:\n  r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n          space (stream_space borel)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n               space (stream_space borel) \\<Longrightarrow>\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "show \"\\<exists>A\\<in>sets (stream_space borel). range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets (stream_space borel).\n       range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. range (proj_stoch_proc geom_proc n) \\<inter> ?x = {r}\n 2. ?x \\<in> sets (stream_space borel)", "show \"infinite_cts_filtration.stream_space_single (proj_stoch_proc geom_proc n) r \\<in> sets (stream_space borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_cts_filtration.stream_space_single\n     (proj_stoch_proc geom_proc n) r\n    \\<in> sets (stream_space borel)", "using infinite_cts_filtration.stream_space_single_set \\<open>r \\<in> range (proj_stoch_proc geom_proc n) \\<inter> space (stream_space borel)\\<close>\n          geom_rand_walk_borel_adapted CRR_infinite_cts_filtration"], ["proof (prove)\nusing this:\n  \\<lbrakk>infinite_cts_filtration ?p ?M ?F; borel_adapt_stoch_proc ?F ?X;\n   ?r \\<in> range (proj_stoch_proc ?X ?n)\\<rbrakk>\n  \\<Longrightarrow> infinite_cts_filtration.stream_space_single\n                     (proj_stoch_proc ?X ?n) ?r\n                    \\<in> sets (stream_space borel)\n  r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n          space (stream_space borel)\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  infinite_cts_filtration p M nat_filtration\n\ngoal (1 subgoal):\n 1. infinite_cts_filtration.stream_space_single\n     (proj_stoch_proc geom_proc n) r\n    \\<in> sets (stream_space borel)", "by blast"], ["proof (state)\nthis:\n  infinite_cts_filtration.stream_space_single (proj_stoch_proc geom_proc n)\n   r\n  \\<in> sets (stream_space borel)\n\ngoal (1 subgoal):\n 1. range (proj_stoch_proc geom_proc n) \\<inter>\n    infinite_cts_filtration.stream_space_single\n     (proj_stoch_proc geom_proc n) r =\n    {r}", "show \"range (proj_stoch_proc geom_proc n) \\<inter> infinite_cts_filtration.stream_space_single (proj_stoch_proc geom_proc n) r = {r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (proj_stoch_proc geom_proc n) \\<inter>\n    infinite_cts_filtration.stream_space_single\n     (proj_stoch_proc geom_proc n) r =\n    {r}", "using infinite_cts_filtration.stream_space_single_preimage \\<open>r \\<in> range (proj_stoch_proc geom_proc n) \\<inter> space (stream_space borel)\\<close>\n          geom_rand_walk_borel_adapted CRR_infinite_cts_filtration"], ["proof (prove)\nusing this:\n  \\<lbrakk>infinite_cts_filtration ?p ?M ?F; borel_adapt_stoch_proc ?F ?X;\n   ?r \\<in> range (proj_stoch_proc ?X ?n)\\<rbrakk>\n  \\<Longrightarrow> infinite_cts_filtration.stream_space_single\n                     (proj_stoch_proc ?X ?n) ?r \\<inter>\n                    range (proj_stoch_proc ?X ?n) =\n                    {?r}\n  r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n          space (stream_space borel)\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  infinite_cts_filtration p M nat_filtration\n\ngoal (1 subgoal):\n 1. range (proj_stoch_proc geom_proc n) \\<inter>\n    infinite_cts_filtration.stream_space_single\n     (proj_stoch_proc geom_proc n) r =\n    {r}", "by blast"], ["proof (state)\nthis:\n  range (proj_stoch_proc geom_proc n) \\<inter>\n  infinite_cts_filtration.stream_space_single (proj_stoch_proc geom_proc n)\n   r =\n  {r}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>A\\<in>sets (stream_space borel).\n     range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                 space (stream_space borel).\n     \\<exists>A\\<in>sets (stream_space borel).\n        range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) bernoulli_real_cond_exp_AE:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nand \"integrable N X\"\nshows \"real_cond_exp N (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n   X w = expl_cond_expect N (proj_stoch_proc geom_proc n) X w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     X w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) X w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     X w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) X w", "have \"real_cond_exp N (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n   X w = expl_cond_expect N (proj_stoch_proc geom_proc n) X w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     X w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) X w", "proof (rule infinite_coin_toss_space.nat_filtration_AE_eq)"], ["proof (state)\ngoal (6 subgoals):\n 1. infinite_coin_toss_space ?p ?M\n 2. AEeq ?M\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       X)\n     (expl_cond_expect N (proj_stoch_proc geom_proc n) X)\n 3. 0 < ?p\n 4. ?p < 1\n 5. real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration ?M ?n)\n 6. expl_cond_expect N (proj_stoch_proc geom_proc n) X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration ?M ?n)", "show \"infinite_coin_toss_space q N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  integrable N X\n\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "by (simp add: infinite_coin_toss_space_def)"], ["proof (state)\nthis:\n  infinite_coin_toss_space q N\n\ngoal (5 subgoals):\n 1. AEeq N\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       X)\n     (expl_cond_expect N (proj_stoch_proc geom_proc n) X)\n 2. 0 < q\n 3. q < 1\n 4. real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)\n 5. expl_cond_expect N (proj_stoch_proc geom_proc n) X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)", "show \"AE w in N. real_cond_exp N (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)) X w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) X w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       X)\n     (expl_cond_expect N (proj_stoch_proc geom_proc n) X)", "using assms bernoulli_AE_cond_exp"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  integrable N X\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1;\n   integrable ?N ?X\\<rbrakk>\n  \\<Longrightarrow> AEeq ?N\n                     (real_cond_exp ?N\n                       (fct_gen_subalgebra ?N (stream_space borel)\n                         (proj_stoch_proc geom_proc ?n))\n                       ?X)\n                     (expl_cond_expect ?N (proj_stoch_proc geom_proc ?n) ?X)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       X)\n     (expl_cond_expect N (proj_stoch_proc geom_proc n) X)", "by simp"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     X)\n   (expl_cond_expect N (proj_stoch_proc geom_proc n) X)\n\ngoal (4 subgoals):\n 1. 0 < q\n 2. q < 1\n 3. real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)\n 4. expl_cond_expect N (proj_stoch_proc geom_proc n) X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)", "show \"real_cond_exp N (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)) X\n      \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "have \"real_cond_exp N (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)) X\n        \\<in> borel_measurable (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     X\n    \\<in> borel_measurable\n           (fct_gen_subalgebra N (stream_space borel)\n             (proj_stoch_proc geom_proc n))", "by simp"], ["proof (state)\nthis:\n  real_cond_exp N\n   (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n   X\n  \\<in> borel_measurable\n         (fct_gen_subalgebra N (stream_space borel)\n           (proj_stoch_proc geom_proc n))\n\ngoal (1 subgoal):\n 1. real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "moreover"], ["proof (state)\nthis:\n  real_cond_exp N\n   (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n   X\n  \\<in> borel_measurable\n         (fct_gen_subalgebra N (stream_space borel)\n           (proj_stoch_proc geom_proc n))\n\ngoal (1 subgoal):\n 1. real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "have \"subalgebra (infinite_coin_toss_space.nat_filtration N n) (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subalgebra (infinite_coin_toss_space.nat_filtration N n)\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))", "using stock_filtration infinite_coin_toss_space.stoch_proc_subalg_nat_filt[of q N geom_proc n]\n        infinite_cts_filtration.stoch_proc_filt_gen[of q N]"], ["proof (prove)\nusing this:\n  G = stoch_proc_filt M geom_proc borel\n  \\<lbrakk>infinite_coin_toss_space q N;\n   borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n    geom_proc\\<rbrakk>\n  \\<Longrightarrow> subalgebra (infinite_coin_toss_space.nat_filtration N n)\n                     (stoch_proc_filt N geom_proc borel n)\n  \\<lbrakk>infinite_cts_filtration q N ?F;\n   borel_adapt_stoch_proc ?F ?X\\<rbrakk>\n  \\<Longrightarrow> stoch_proc_filt N ?X borel ?n =\n                    fct_gen_subalgebra N (stream_space borel)\n                     (proj_stoch_proc ?X ?n)\n\ngoal (1 subgoal):\n 1. subalgebra (infinite_coin_toss_space.nat_filtration N n)\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))", "by (metis \\<open>infinite_coin_toss_space q N\\<close> infinite_cts_filtration_axioms.intro infinite_cts_filtration_def\n            prob_grw.geom_rand_walk_borel_adapted prob_grw_axioms prob_grw_def)"], ["proof (state)\nthis:\n  subalgebra (infinite_coin_toss_space.nat_filtration N n)\n   (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n\ngoal (1 subgoal):\n 1. real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "ultimately"], ["proof (chain)\npicking this:\n  real_cond_exp N\n   (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n   X\n  \\<in> borel_measurable\n         (fct_gen_subalgebra N (stream_space borel)\n           (proj_stoch_proc geom_proc n))\n  subalgebra (infinite_coin_toss_space.nat_filtration N n)\n   (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  real_cond_exp N\n   (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n   X\n  \\<in> borel_measurable\n         (fct_gen_subalgebra N (stream_space borel)\n           (proj_stoch_proc geom_proc n))\n  subalgebra (infinite_coin_toss_space.nat_filtration N n)\n   (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n\ngoal (1 subgoal):\n 1. real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "using measurable_from_subalg"], ["proof (prove)\nusing this:\n  real_cond_exp N\n   (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n   X\n  \\<in> borel_measurable\n         (fct_gen_subalgebra N (stream_space borel)\n           (proj_stoch_proc geom_proc n))\n  subalgebra (infinite_coin_toss_space.nat_filtration N n)\n   (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n  \\<lbrakk>subalgebra ?M ?F; ?f \\<in> ?F \\<rightarrow>\\<^sub>M ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> ?M \\<rightarrow>\\<^sub>M ?N\n\ngoal (1 subgoal):\n 1. real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "by blast"], ["proof (state)\nthis:\n  real_cond_exp N\n   (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n   X\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real_cond_exp N\n   (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n   X\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)\n\ngoal (3 subgoals):\n 1. 0 < q\n 2. q < 1\n 3. expl_cond_expect N (proj_stoch_proc geom_proc n) X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "show \"expl_cond_expect N (proj_stoch_proc geom_proc n) X \\<in>\n      borel_measurable (infinite_coin_toss_space.nat_filtration N n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "have \"expl_cond_expect N (proj_stoch_proc geom_proc n) X \\<in>\n        borel_measurable (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) X\n    \\<in> borel_measurable\n           (fct_gen_subalgebra N (stream_space borel)\n             (proj_stoch_proc geom_proc n))", "by (simp add: expl_cond_eq_sets assms)"], ["proof (state)\nthis:\n  expl_cond_expect N (proj_stoch_proc geom_proc n) X\n  \\<in> borel_measurable\n         (fct_gen_subalgebra N (stream_space borel)\n           (proj_stoch_proc geom_proc n))\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "moreover"], ["proof (state)\nthis:\n  expl_cond_expect N (proj_stoch_proc geom_proc n) X\n  \\<in> borel_measurable\n         (fct_gen_subalgebra N (stream_space borel)\n           (proj_stoch_proc geom_proc n))\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "have \"subalgebra (infinite_coin_toss_space.nat_filtration N n) (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subalgebra (infinite_coin_toss_space.nat_filtration N n)\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))", "using stock_filtration infinite_coin_toss_space.stoch_proc_subalg_nat_filt[of q N geom_proc n]\n        infinite_cts_filtration.stoch_proc_filt_gen[of q N]"], ["proof (prove)\nusing this:\n  G = stoch_proc_filt M geom_proc borel\n  \\<lbrakk>infinite_coin_toss_space q N;\n   borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n    geom_proc\\<rbrakk>\n  \\<Longrightarrow> subalgebra (infinite_coin_toss_space.nat_filtration N n)\n                     (stoch_proc_filt N geom_proc borel n)\n  \\<lbrakk>infinite_cts_filtration q N ?F;\n   borel_adapt_stoch_proc ?F ?X\\<rbrakk>\n  \\<Longrightarrow> stoch_proc_filt N ?X borel ?n =\n                    fct_gen_subalgebra N (stream_space borel)\n                     (proj_stoch_proc ?X ?n)\n\ngoal (1 subgoal):\n 1. subalgebra (infinite_coin_toss_space.nat_filtration N n)\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))", "by (metis \\<open>infinite_coin_toss_space q N\\<close> infinite_cts_filtration_axioms.intro infinite_cts_filtration_def\n            prob_grw.geom_rand_walk_borel_adapted prob_grw_axioms prob_grw_def)"], ["proof (state)\nthis:\n  subalgebra (infinite_coin_toss_space.nat_filtration N n)\n   (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "ultimately"], ["proof (chain)\npicking this:\n  expl_cond_expect N (proj_stoch_proc geom_proc n) X\n  \\<in> borel_measurable\n         (fct_gen_subalgebra N (stream_space borel)\n           (proj_stoch_proc geom_proc n))\n  subalgebra (infinite_coin_toss_space.nat_filtration N n)\n   (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  expl_cond_expect N (proj_stoch_proc geom_proc n) X\n  \\<in> borel_measurable\n         (fct_gen_subalgebra N (stream_space borel)\n           (proj_stoch_proc geom_proc n))\n  subalgebra (infinite_coin_toss_space.nat_filtration N n)\n   (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "using measurable_from_subalg"], ["proof (prove)\nusing this:\n  expl_cond_expect N (proj_stoch_proc geom_proc n) X\n  \\<in> borel_measurable\n         (fct_gen_subalgebra N (stream_space borel)\n           (proj_stoch_proc geom_proc n))\n  subalgebra (infinite_coin_toss_space.nat_filtration N n)\n   (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n  \\<lbrakk>subalgebra ?M ?F; ?f \\<in> ?F \\<rightarrow>\\<^sub>M ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> ?M \\<rightarrow>\\<^sub>M ?N\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) X\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "by blast"], ["proof (state)\nthis:\n  expl_cond_expect N (proj_stoch_proc geom_proc n) X\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  expl_cond_expect N (proj_stoch_proc geom_proc n) X\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)\n\ngoal (2 subgoals):\n 1. 0 < q\n 2. q < 1", "show \"0 < q\" and \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  integrable N X\n\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "by auto"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real_cond_exp N\n   (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n   X w =\n  expl_cond_expect N (proj_stoch_proc geom_proc n) X w\n\ngoal (1 subgoal):\n 1. real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     X w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) X w", "thus ?thesis"], ["proof (prove)\nusing this:\n  real_cond_exp N\n   (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n   X w =\n  expl_cond_expect N (proj_stoch_proc geom_proc n) X w\n\ngoal (1 subgoal):\n 1. real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     X w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) X w", "by simp"], ["proof (state)\nthis:\n  real_cond_exp N\n   (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n   X w =\n  expl_cond_expect N (proj_stoch_proc geom_proc n) X w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) geom_proc_real_cond_exp_AE:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nshows \"real_cond_exp N (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n   (geom_proc (Suc n)) w = expl_cond_expect N (proj_stoch_proc geom_proc n) (geom_proc (Suc n)) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (geom_proc (Suc n)) w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) (geom_proc (Suc n)) w", "proof (rule bernoulli_real_cond_exp_AE)"], ["proof (state)\ngoal (4 subgoals):\n 1. N = bernoulli_stream ?q\n 2. 0 < ?q\n 3. ?q < 1\n 4. integrable N (geom_proc (Suc n))", "show \"integrable N (geom_proc (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable N (geom_proc (Suc n))", "using assms geom_proc_integrable[of N q \"Suc n\"]"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  \\<lbrakk>N = bernoulli_stream q; 0 \\<le> q; q \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> integrable N (geom_proc (Suc n))\n\ngoal (1 subgoal):\n 1. integrable N (geom_proc (Suc n))", "by simp"], ["proof (state)\nthis:\n  integrable N (geom_proc (Suc n))\n\ngoal (3 subgoals):\n 1. N = bernoulli_stream ?q\n 2. 0 < ?q\n 3. ?q < 1", "qed (auto simp add: assms)"], ["", "lemma (in CRR_market) geom_proc_stoch_proc_filt:\n  assumes \"N= bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nshows \"stoch_proc_filt N geom_proc borel n = fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stoch_proc_filt N geom_proc borel n =\n    fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)", "proof (rule infinite_cts_filtration.stoch_proc_filt_gen)"], ["proof (state)\ngoal (2 subgoals):\n 1. infinite_cts_filtration ?p N ?F\n 2. borel_adapt_stoch_proc ?F geom_proc", "show \"infinite_cts_filtration q N (infinite_coin_toss_space.nat_filtration N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_cts_filtration q N (infinite_coin_toss_space.nat_filtration N)", "unfolding infinite_cts_filtration_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N \\<and>\n    infinite_cts_filtration_axioms N\n     (infinite_coin_toss_space.nat_filtration N)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. infinite_coin_toss_space q N\n 2. infinite_cts_filtration_axioms N\n     (infinite_coin_toss_space.nat_filtration N)", "show \"infinite_coin_toss_space q N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "by (simp add: infinite_coin_toss_space_def)"], ["proof (state)\nthis:\n  infinite_coin_toss_space q N\n\ngoal (1 subgoal):\n 1. infinite_cts_filtration_axioms N\n     (infinite_coin_toss_space.nat_filtration N)", "show \"infinite_cts_filtration_axioms N (infinite_coin_toss_space.nat_filtration N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_cts_filtration_axioms N\n     (infinite_coin_toss_space.nat_filtration N)", "using infinite_cts_filtration_axioms_def"], ["proof (prove)\nusing this:\n  infinite_cts_filtration_axioms ?M ?F \\<equiv>\n  ?F = infinite_coin_toss_space.nat_filtration ?M\n\ngoal (1 subgoal):\n 1. infinite_cts_filtration_axioms N\n     (infinite_coin_toss_space.nat_filtration N)", "by blast"], ["proof (state)\nthis:\n  infinite_cts_filtration_axioms N\n   (infinite_coin_toss_space.nat_filtration N)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  infinite_cts_filtration q N (infinite_coin_toss_space.nat_filtration N)\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n     geom_proc", "show \"borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N) geom_proc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n     geom_proc", "using \\<open>infinite_cts_filtration q N (infinite_coin_toss_space.nat_filtration N)\\<close>\n      prob_grw.geom_rand_walk_borel_adapted prob_grw_axioms prob_grw_def"], ["proof (prove)\nusing this:\n  infinite_cts_filtration q N (infinite_coin_toss_space.nat_filtration N)\n  prob_grw ?p ?M ?geom_proc ?u ?d ?init \\<Longrightarrow>\n  borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration ?M)\n   ?geom_proc\n  prob_grw p M geom_proc u d init\n  prob_grw ?p ?M ?geom_proc ?u ?d ?init \\<equiv>\n  infinite_coin_toss_space ?p ?M \\<and>\n  prob_grw_axioms ?geom_proc ?u ?d ?init\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n     geom_proc", "using infinite_cts_filtration_def"], ["proof (prove)\nusing this:\n  infinite_cts_filtration q N (infinite_coin_toss_space.nat_filtration N)\n  prob_grw ?p ?M ?geom_proc ?u ?d ?init \\<Longrightarrow>\n  borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration ?M)\n   ?geom_proc\n  prob_grw p M geom_proc u d init\n  prob_grw ?p ?M ?geom_proc ?u ?d ?init \\<equiv>\n  infinite_coin_toss_space ?p ?M \\<and>\n  prob_grw_axioms ?geom_proc ?u ?d ?init\n  infinite_cts_filtration ?p ?M ?F \\<equiv>\n  infinite_coin_toss_space ?p ?M \\<and> infinite_cts_filtration_axioms ?M ?F\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n     geom_proc", "by auto"], ["proof (state)\nthis:\n  borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n   geom_proc\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) bernoulli_cond_exp:\n  assumes \"N = bernoulli_stream q\"\n  and \"0 < q\"\n  and \"q < 1\"\nand \"integrable N X\"\nshows \"real_cond_exp N (stoch_proc_filt N geom_proc borel n) X w = expl_cond_expect N (proj_stoch_proc geom_proc n) X w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel n) X w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) X w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel n) X w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) X w", "have aeq: \"AE w in N. real_cond_exp N (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)) X w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) X w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       X)\n     (expl_cond_expect N (proj_stoch_proc geom_proc n) X)", "using assms\n    bernoulli_AE_cond_exp"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  integrable N X\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1;\n   integrable ?N ?X\\<rbrakk>\n  \\<Longrightarrow> AEeq ?N\n                     (real_cond_exp ?N\n                       (fct_gen_subalgebra ?N (stream_space borel)\n                         (proj_stoch_proc geom_proc ?n))\n                       ?X)\n                     (expl_cond_expect ?N (proj_stoch_proc geom_proc ?n) ?X)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       X)\n     (expl_cond_expect N (proj_stoch_proc geom_proc n) X)", "by simp"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     X)\n   (expl_cond_expect N (proj_stoch_proc geom_proc n) X)\n\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel n) X w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) X w", "have \"\\<forall>w. real_cond_exp N (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n   X w = expl_cond_expect N (proj_stoch_proc geom_proc n) X w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w.\n       real_cond_exp N\n        (fct_gen_subalgebra N (stream_space borel)\n          (proj_stoch_proc geom_proc n))\n        X w =\n       expl_cond_expect N (proj_stoch_proc geom_proc n) X w", "using assms bernoulli_real_cond_exp_AE"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  integrable N X\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1;\n   integrable ?N ?X\\<rbrakk>\n  \\<Longrightarrow> real_cond_exp ?N\n                     (fct_gen_subalgebra ?N (stream_space borel)\n                       (proj_stoch_proc geom_proc ?n))\n                     ?X ?w =\n                    expl_cond_expect ?N (proj_stoch_proc geom_proc ?n) ?X ?w\n\ngoal (1 subgoal):\n 1. \\<forall>w.\n       real_cond_exp N\n        (fct_gen_subalgebra N (stream_space borel)\n          (proj_stoch_proc geom_proc n))\n        X w =\n       expl_cond_expect N (proj_stoch_proc geom_proc n) X w", "by simp"], ["proof (state)\nthis:\n  \\<forall>w.\n     real_cond_exp N\n      (fct_gen_subalgebra N (stream_space borel)\n        (proj_stoch_proc geom_proc n))\n      X w =\n     expl_cond_expect N (proj_stoch_proc geom_proc n) X w\n\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel n) X w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) X w", "moreover"], ["proof (state)\nthis:\n  \\<forall>w.\n     real_cond_exp N\n      (fct_gen_subalgebra N (stream_space borel)\n        (proj_stoch_proc geom_proc n))\n      X w =\n     expl_cond_expect N (proj_stoch_proc geom_proc n) X w\n\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel n) X w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) X w", "have \"stoch_proc_filt N geom_proc borel n = fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stoch_proc_filt N geom_proc borel n =\n    fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)", "using assms geom_proc_stoch_proc_filt"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  integrable N X\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> stoch_proc_filt ?N geom_proc borel ?n =\n                    fct_gen_subalgebra ?N (stream_space borel)\n                     (proj_stoch_proc geom_proc ?n)\n\ngoal (1 subgoal):\n 1. stoch_proc_filt N geom_proc borel n =\n    fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)", "by simp"], ["proof (state)\nthis:\n  stoch_proc_filt N geom_proc borel n =\n  fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel n) X w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) X w", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>w.\n     real_cond_exp N\n      (fct_gen_subalgebra N (stream_space borel)\n        (proj_stoch_proc geom_proc n))\n      X w =\n     expl_cond_expect N (proj_stoch_proc geom_proc n) X w\n  stoch_proc_filt N geom_proc borel n =\n  fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>w.\n     real_cond_exp N\n      (fct_gen_subalgebra N (stream_space borel)\n        (proj_stoch_proc geom_proc n))\n      X w =\n     expl_cond_expect N (proj_stoch_proc geom_proc n) X w\n  stoch_proc_filt N geom_proc borel n =\n  fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel n) X w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) X w", "by simp"], ["proof (state)\nthis:\n  real_cond_exp N (stoch_proc_filt N geom_proc borel n) X w =\n  expl_cond_expect N (proj_stoch_proc geom_proc n) X w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) stock_cond_exp:\n  assumes \"N = bernoulli_stream q\"\n  and \"0 < q\"\n  and \"q < 1\"\nshows \"real_cond_exp N (stoch_proc_filt N geom_proc borel n) (geom_proc (Suc n)) w = expl_cond_expect N (proj_stoch_proc geom_proc n) (geom_proc (Suc n)) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel n)\n     (geom_proc (Suc n)) w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) (geom_proc (Suc n)) w", "proof (rule bernoulli_cond_exp)"], ["proof (state)\ngoal (4 subgoals):\n 1. N = bernoulli_stream ?q\n 2. 0 < ?q\n 3. ?q < 1\n 4. integrable N (geom_proc (Suc n))", "show \"integrable N (geom_proc (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable N (geom_proc (Suc n))", "using assms geom_proc_integrable[of N q \"Suc n\"]"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  \\<lbrakk>N = bernoulli_stream q; 0 \\<le> q; q \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> integrable N (geom_proc (Suc n))\n\ngoal (1 subgoal):\n 1. integrable N (geom_proc (Suc n))", "by simp"], ["proof (state)\nthis:\n  integrable N (geom_proc (Suc n))\n\ngoal (3 subgoals):\n 1. N = bernoulli_stream ?q\n 2. 0 < ?q\n 3. ?q < 1", "qed (auto simp add: assms)"], ["", "lemma (in prob_space) discount_factor_real_cond_exp:\n  assumes \"integrable M X\"\nand \"subalgebra M G\"\nand \"-1 < r\"\nshows \"AE w in M. real_cond_exp M G (\\<lambda>x. discount_factor r n x * X x) w = discount_factor r n w * (real_cond_exp M G X) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq M (real_cond_exp M G (\\<lambda>x. discount_factor r n x * X x))\n     (\\<lambda>w. discount_factor r n w * real_cond_exp M G X w)", "proof (rule sigma_finite_subalgebra.real_cond_exp_mult)"], ["proof (state)\ngoal (4 subgoals):\n 1. sigma_finite_subalgebra M G\n 2. discount_factor r n \\<in> borel_measurable G\n 3. random_variable borel X\n 4. integrable M (\\<lambda>x. discount_factor r n x * X x)", "show \"sigma_finite_subalgebra M G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_finite_subalgebra M G", "using assms subalgebra_sigma_finite"], ["proof (prove)\nusing this:\n  integrable M X\n  subalgebra M G\n  - 1 < r\n  subalgebra M ?N \\<Longrightarrow> sigma_finite_subalgebra M ?N\n\ngoal (1 subgoal):\n 1. sigma_finite_subalgebra M G", "by simp"], ["proof (state)\nthis:\n  sigma_finite_subalgebra M G\n\ngoal (3 subgoals):\n 1. discount_factor r n \\<in> borel_measurable G\n 2. random_variable borel X\n 3. integrable M (\\<lambda>x. discount_factor r n x * X x)", "show \"discount_factor r n \\<in> borel_measurable G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discount_factor r n \\<in> borel_measurable G", "by (simp add: discount_factor_borel_measurable)"], ["proof (state)\nthis:\n  discount_factor r n \\<in> borel_measurable G\n\ngoal (2 subgoals):\n 1. random_variable borel X\n 2. integrable M (\\<lambda>x. discount_factor r n x * X x)", "show \"random_variable borel X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable borel X", "using assms"], ["proof (prove)\nusing this:\n  integrable M X\n  subalgebra M G\n  - 1 < r\n\ngoal (1 subgoal):\n 1. random_variable borel X", "by simp"], ["proof (state)\nthis:\n  random_variable borel X\n\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. discount_factor r n x * X x)", "show \"integrable M (\\<lambda>x. discount_factor r n x * X x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. discount_factor r n x * X x)", "using assms discounted_integrable[of M \"\\<lambda>n. X\"]"], ["proof (prove)\nusing this:\n  integrable M X\n  subalgebra M G\n  - 1 < r\n  \\<lbrakk>integrable M X; - 1 < ?r; space M = space M\\<rbrakk>\n  \\<Longrightarrow> integrable M (discounted_value ?r (\\<lambda>n. X) ?n)\n\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. discount_factor r n x * X x)", "unfolding discounted_value_def"], ["proof (prove)\nusing this:\n  integrable M X\n  subalgebra M G\n  - 1 < r\n  \\<lbrakk>integrable M X; - 1 < ?r; space M = space M\\<rbrakk>\n  \\<Longrightarrow> integrable M (\\<lambda>w. discount_factor ?r ?n w * X w)\n\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. discount_factor r n x * X x)", "by simp"], ["proof (state)\nthis:\n  integrable M (\\<lambda>x. discount_factor r n x * X x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in prob_space) discounted_value_real_cond_exp:\n  assumes \"integrable M X\"\n  and \"-1 < r\"\nand \"subalgebra M G\"\n  shows \"AE w in M. real_cond_exp M G ((discounted_value r (\\<lambda> m. X)) n) w =\n    discounted_value r (\\<lambda>m. (real_cond_exp M G X)) n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq M (real_cond_exp M G (discounted_value r (\\<lambda>m. X) n))\n     (discounted_value r (\\<lambda>m. real_cond_exp M G X) n)", "using  assms"], ["proof (prove)\nusing this:\n  integrable M X\n  - 1 < r\n  subalgebra M G\n\ngoal (1 subgoal):\n 1. AEeq M (real_cond_exp M G (discounted_value r (\\<lambda>m. X) n))\n     (discounted_value r (\\<lambda>m. real_cond_exp M G X) n)", "unfolding discounted_value_def  init_triv_filt_def filtration_def"], ["proof (prove)\nusing this:\n  integrable M X\n  - 1 < r\n  subalgebra M G\n\ngoal (1 subgoal):\n 1. AEeq M (real_cond_exp M G (\\<lambda>w. discount_factor r n w * X w))\n     (\\<lambda>w. discount_factor r n w * real_cond_exp M G X w)", "by (simp add: assms discount_factor_real_cond_exp)"], ["", "lemma (in CRR_market)\n  assumes \"q = (1 + r - d)/(u -d)\"\n  and \"viable_market Mkt\"\n  shows gt_param: \"0 < q\"\n    and lt_param: \"q < 1\"\n    and risk_neutral_param: \"u * q + d * (1 - q) = 1 + r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1 &&& u * q + d * (1 - q) = 1 + r", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. 0 < q\n 2. q < 1\n 3. u * q + d * (1 - q) = 1 + r", "show \"0 < q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q", "using  down_lt_up viable_only_if_d assms"], ["proof (prove)\nusing this:\n  d < u\n  viable_market Mkt \\<Longrightarrow> d < 1 + r\n  q = (1 + r - d) / (u - d)\n  viable_market Mkt\n\ngoal (1 subgoal):\n 1. 0 < q", "by simp"], ["proof (state)\nthis:\n  0 < q\n\ngoal (2 subgoals):\n 1. q < 1\n 2. u * q + d * (1 - q) = 1 + r", "show \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q < 1", "using down_lt_up viable_only_if_u assms"], ["proof (prove)\nusing this:\n  d < u\n  viable_market Mkt \\<Longrightarrow> 1 + r < u\n  q = (1 + r - d) / (u - d)\n  viable_market Mkt\n\ngoal (1 subgoal):\n 1. q < 1", "by simp"], ["proof (state)\nthis:\n  q < 1\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "show \"u * q + d * (1 - q) = 1 + r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "have \"1 - q = 1 - (1 + r - d) / (u - d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 - q = 1 - (1 + r - d) / (u - d)", "using assms"], ["proof (prove)\nusing this:\n  q = (1 + r - d) / (u - d)\n  viable_market Mkt\n\ngoal (1 subgoal):\n 1. 1 - q = 1 - (1 + r - d) / (u - d)", "by simp"], ["proof (state)\nthis:\n  1 - q = 1 - (1 + r - d) / (u - d)\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "also"], ["proof (state)\nthis:\n  1 - q = 1 - (1 + r - d) / (u - d)\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "have \"... = (u - d)/(u - d) - (1 + r - d) / (u - d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 - (1 + r - d) / (u - d) = (u - d) / (u - d) - (1 + r - d) / (u - d)", "using down_lt_up"], ["proof (prove)\nusing this:\n  d < u\n\ngoal (1 subgoal):\n 1. 1 - (1 + r - d) / (u - d) = (u - d) / (u - d) - (1 + r - d) / (u - d)", "by simp"], ["proof (state)\nthis:\n  1 - (1 + r - d) / (u - d) = (u - d) / (u - d) - (1 + r - d) / (u - d)\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "also"], ["proof (state)\nthis:\n  1 - (1 + r - d) / (u - d) = (u - d) / (u - d) - (1 + r - d) / (u - d)\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "have \"... = (u - d - (1 + r - d))/(u-d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u - d) / (u - d) - (1 + r - d) / (u - d) =\n    (u - d - (1 + r - d)) / (u - d)", "using  diff_divide_distrib[of \"u - d\" \"1 + r -d\" \"u -d\"]"], ["proof (prove)\nusing this:\n  (u - d - (1 + r - d)) / (u - d) =\n  (u - d) / (u - d) - (1 + r - d) / (u - d)\n\ngoal (1 subgoal):\n 1. (u - d) / (u - d) - (1 + r - d) / (u - d) =\n    (u - d - (1 + r - d)) / (u - d)", "by simp"], ["proof (state)\nthis:\n  (u - d) / (u - d) - (1 + r - d) / (u - d) =\n  (u - d - (1 + r - d)) / (u - d)\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "also"], ["proof (state)\nthis:\n  (u - d) / (u - d) - (1 + r - d) / (u - d) =\n  (u - d - (1 + r - d)) / (u - d)\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "have \"... = (u - 1 - r)/(u-d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u - d - (1 + r - d)) / (u - d) = (u - 1 - r) / (u - d)", "by simp"], ["proof (state)\nthis:\n  (u - d - (1 + r - d)) / (u - d) = (u - 1 - r) / (u - d)\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "finally"], ["proof (chain)\npicking this:\n  1 - q = (u - 1 - r) / (u - d)", "have \"1 - q = (u - 1 - r)/(u -d)\""], ["proof (prove)\nusing this:\n  1 - q = (u - 1 - r) / (u - d)\n\ngoal (1 subgoal):\n 1. 1 - q = (u - 1 - r) / (u - d)", "."], ["proof (state)\nthis:\n  1 - q = (u - 1 - r) / (u - d)\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "hence \"u * q + d * (1 - q) = u * (1 + r - d)/(u - d) + d * (u - 1 - r)/(u - d)\""], ["proof (prove)\nusing this:\n  1 - q = (u - 1 - r) / (u - d)\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) =\n    u * (1 + r - d) / (u - d) + d * (u - 1 - r) / (u - d)", "using assms"], ["proof (prove)\nusing this:\n  1 - q = (u - 1 - r) / (u - d)\n  q = (1 + r - d) / (u - d)\n  viable_market Mkt\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) =\n    u * (1 + r - d) / (u - d) + d * (u - 1 - r) / (u - d)", "by simp"], ["proof (state)\nthis:\n  u * q + d * (1 - q) =\n  u * (1 + r - d) / (u - d) + d * (u - 1 - r) / (u - d)\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "also"], ["proof (state)\nthis:\n  u * q + d * (1 - q) =\n  u * (1 + r - d) / (u - d) + d * (u - 1 - r) / (u - d)\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "have \"... = (u * (1 + r - d) + d * (u - 1 - r))/(u - d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u * (1 + r - d) / (u - d) + d * (u - 1 - r) / (u - d) =\n    (u * (1 + r - d) + d * (u - 1 - r)) / (u - d)", "using add_divide_distrib[of \"u * (1 + r - d)\"]"], ["proof (prove)\nusing this:\n  (u * (1 + r - d) + ?b) / ?c = u * (1 + r - d) / ?c + ?b / ?c\n\ngoal (1 subgoal):\n 1. u * (1 + r - d) / (u - d) + d * (u - 1 - r) / (u - d) =\n    (u * (1 + r - d) + d * (u - 1 - r)) / (u - d)", "by simp"], ["proof (state)\nthis:\n  u * (1 + r - d) / (u - d) + d * (u - 1 - r) / (u - d) =\n  (u * (1 + r - d) + d * (u - 1 - r)) / (u - d)\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "also"], ["proof (state)\nthis:\n  u * (1 + r - d) / (u - d) + d * (u - 1 - r) / (u - d) =\n  (u * (1 + r - d) + d * (u - 1 - r)) / (u - d)\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "have \"... = (u * (1 + r) - u * d + d * u - d * (1 + r))/(u - d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u * (1 + r - d) + d * (u - 1 - r)) / (u - d) =\n    (u * (1 + r) - u * d + d * u - d * (1 + r)) / (u - d)", "by (simp add: diff_diff_add right_diff_distrib')"], ["proof (state)\nthis:\n  (u * (1 + r - d) + d * (u - 1 - r)) / (u - d) =\n  (u * (1 + r) - u * d + d * u - d * (1 + r)) / (u - d)\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "also"], ["proof (state)\nthis:\n  (u * (1 + r - d) + d * (u - 1 - r)) / (u - d) =\n  (u * (1 + r) - u * d + d * u - d * (1 + r)) / (u - d)\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "have \"... = (u * (1+r) - d * (1+r))/(u - d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u * (1 + r) - u * d + d * u - d * (1 + r)) / (u - d) =\n    (u * (1 + r) - d * (1 + r)) / (u - d)", "by simp"], ["proof (state)\nthis:\n  (u * (1 + r) - u * d + d * u - d * (1 + r)) / (u - d) =\n  (u * (1 + r) - d * (1 + r)) / (u - d)\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "also"], ["proof (state)\nthis:\n  (u * (1 + r) - u * d + d * u - d * (1 + r)) / (u - d) =\n  (u * (1 + r) - d * (1 + r)) / (u - d)\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "have \"... = ((u - d) * (1+r))/(u - d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u * (1 + r) - d * (1 + r)) / (u - d) = (u - d) * (1 + r) / (u - d)", "by (simp add: left_diff_distrib)"], ["proof (state)\nthis:\n  (u * (1 + r) - d * (1 + r)) / (u - d) = (u - d) * (1 + r) / (u - d)\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "also"], ["proof (state)\nthis:\n  (u * (1 + r) - d * (1 + r)) / (u - d) = (u - d) * (1 + r) / (u - d)\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "have \"... = 1 + r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u - d) * (1 + r) / (u - d) = 1 + r", "using down_lt_up"], ["proof (prove)\nusing this:\n  d < u\n\ngoal (1 subgoal):\n 1. (u - d) * (1 + r) / (u - d) = 1 + r", "by simp"], ["proof (state)\nthis:\n  (u - d) * (1 + r) / (u - d) = 1 + r\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "finally"], ["proof (chain)\npicking this:\n  u * q + d * (1 - q) = 1 + r", "show ?thesis"], ["proof (prove)\nusing this:\n  u * q + d * (1 - q) = 1 + r\n\ngoal (1 subgoal):\n 1. u * q + d * (1 - q) = 1 + r", "."], ["proof (state)\nthis:\n  u * q + d * (1 - q) = 1 + r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u * q + d * (1 - q) = 1 + r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) bernoulli_expl_cond_expect_adapt:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\n  shows \"expl_cond_expect N (proj_stoch_proc geom_proc n) f\\<in> borel_measurable (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) f\n    \\<in> borel_measurable (G n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) f\n    \\<in> borel_measurable (G n)", "have \"sets N = sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets N = events", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. sets N = events", "by (simp add: bernoulli bernoulli_stream_def sets_stream_space_cong)"], ["proof (state)\nthis:\n  sets N = events\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) f\n    \\<in> borel_measurable (G n)", "have icf: \"infinite_cts_filtration p M nat_filtration\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_cts_filtration p M nat_filtration", "by (unfold_locales, simp)"], ["proof (state)\nthis:\n  infinite_cts_filtration p M nat_filtration\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) f\n    \\<in> borel_measurable (G n)", "have \"G n = stoch_proc_filt M geom_proc borel n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G n = stoch_proc_filt M geom_proc borel n", "using stock_filtration"], ["proof (prove)\nusing this:\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. G n = stoch_proc_filt M geom_proc borel n", "by simp"], ["proof (state)\nthis:\n  G n = stoch_proc_filt M geom_proc borel n\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) f\n    \\<in> borel_measurable (G n)", "also"], ["proof (state)\nthis:\n  G n = stoch_proc_filt M geom_proc borel n\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) f\n    \\<in> borel_measurable (G n)", "have \"... = fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc geom_proc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stoch_proc_filt M geom_proc borel n =\n    fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc geom_proc n)", "proof (rule infinite_cts_filtration.stoch_proc_filt_gen)"], ["proof (state)\ngoal (2 subgoals):\n 1. infinite_cts_filtration ?p M ?F\n 2. borel_adapt_stoch_proc ?F geom_proc", "show \"infinite_cts_filtration p M nat_filtration\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_cts_filtration p M nat_filtration", "using icf"], ["proof (prove)\nusing this:\n  infinite_cts_filtration p M nat_filtration\n\ngoal (1 subgoal):\n 1. infinite_cts_filtration p M nat_filtration", "."], ["proof (state)\nthis:\n  infinite_cts_filtration p M nat_filtration\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc nat_filtration geom_proc", "show \"borel_adapt_stoch_proc nat_filtration geom_proc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc nat_filtration geom_proc", "using geom_rand_walk_borel_adapted"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc nat_filtration geom_proc\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc nat_filtration geom_proc", "."], ["proof (state)\nthis:\n  borel_adapt_stoch_proc nat_filtration geom_proc\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  stoch_proc_filt M geom_proc borel n =\n  fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) f\n    \\<in> borel_measurable (G n)", "also"], ["proof (state)\nthis:\n  stoch_proc_filt M geom_proc borel n =\n  fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) f\n    \\<in> borel_measurable (G n)", "have \"... = fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fct_gen_subalgebra M (stream_space borel)\n     (proj_stoch_proc geom_proc n) =\n    fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)", "by (rule fct_gen_subalgebra_eq_sets, (simp add: \\<open>sets N = sets M\\<close>))"], ["proof (state)\nthis:\n  fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc geom_proc n) =\n  fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) f\n    \\<in> borel_measurable (G n)", "finally"], ["proof (chain)\npicking this:\n  G n =\n  fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)", "have \"G n = fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)\""], ["proof (prove)\nusing this:\n  G n =\n  fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. G n =\n    fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)", "."], ["proof (state)\nthis:\n  G n =\n  fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) f\n    \\<in> borel_measurable (G n)", "moreover"], ["proof (state)\nthis:\n  G n =\n  fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) f\n    \\<in> borel_measurable (G n)", "have \"expl_cond_expect N (proj_stoch_proc geom_proc n) f \\<in>\n    borel_measurable (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) f\n    \\<in> borel_measurable\n           (fct_gen_subalgebra N (stream_space borel)\n             (proj_stoch_proc geom_proc n))", "by (simp add: expl_cond_eq_sets assms)"], ["proof (state)\nthis:\n  expl_cond_expect N (proj_stoch_proc geom_proc n) f\n  \\<in> borel_measurable\n         (fct_gen_subalgebra N (stream_space borel)\n           (proj_stoch_proc geom_proc n))\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) f\n    \\<in> borel_measurable (G n)", "ultimately"], ["proof (chain)\npicking this:\n  G n =\n  fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)\n  expl_cond_expect N (proj_stoch_proc geom_proc n) f\n  \\<in> borel_measurable\n         (fct_gen_subalgebra N (stream_space borel)\n           (proj_stoch_proc geom_proc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  G n =\n  fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)\n  expl_cond_expect N (proj_stoch_proc geom_proc n) f\n  \\<in> borel_measurable\n         (fct_gen_subalgebra N (stream_space borel)\n           (proj_stoch_proc geom_proc n))\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n) f\n    \\<in> borel_measurable (G n)", "by simp"], ["proof (state)\nthis:\n  expl_cond_expect N (proj_stoch_proc geom_proc n) f\n  \\<in> borel_measurable (G n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) real_cond_exp_discount_stock:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nshows \"AE w in N. real_cond_exp N (G n)\n   (discounted_value r (prices Mkt stk) (Suc n)) w =\n                  discounted_value r (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))", "have qlt: \"0 < q\" and qgt: \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "by auto"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))", "have \"G n = (fct_gen_subalgebra M (stream_space borel)\n                                (proj_stoch_proc geom_proc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G n =\n    fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc geom_proc n)", "using stock_filtration infinite_cts_filtration.stoch_proc_filt_gen[of p M nat_filtration geom_proc n] geometric_process\n      geom_rand_walk_borel_adapted CRR_infinite_cts_filtration"], ["proof (prove)\nusing this:\n  G = stoch_proc_filt M geom_proc borel\n  \\<lbrakk>infinite_cts_filtration p M nat_filtration;\n   borel_adapt_stoch_proc nat_filtration geom_proc\\<rbrakk>\n  \\<Longrightarrow> stoch_proc_filt M geom_proc borel n =\n                    fct_gen_subalgebra M (stream_space borel)\n                     (proj_stoch_proc geom_proc n)\n  geom_proc = geom_rand_walk u d init\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  infinite_cts_filtration p M nat_filtration\n\ngoal (1 subgoal):\n 1. G n =\n    fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc geom_proc n)", "by simp"], ["proof (state)\nthis:\n  G n =\n  fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))", "also"], ["proof (state)\nthis:\n  G n =\n  fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))", "have \"... = (fct_gen_subalgebra N (stream_space borel)\n                                (proj_stoch_proc geom_proc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fct_gen_subalgebra M (stream_space borel)\n     (proj_stoch_proc geom_proc n) =\n    fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)", "proof (rule fct_gen_subalgebra_eq_sets)"], ["proof (state)\ngoal (1 subgoal):\n 1. events = sets N", "show \"events = sets N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. events = sets N", "using assms qlt qgt"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. events = sets N", "by (simp add: bernoulli bernoulli_stream_def sets_stream_space_cong)"], ["proof (state)\nthis:\n  events = sets N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc geom_proc n) =\n  fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))", "finally"], ["proof (chain)\npicking this:\n  G n =\n  fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)", "have \"G n = (fct_gen_subalgebra N (stream_space borel)\n                                (proj_stoch_proc geom_proc n))\""], ["proof (prove)\nusing this:\n  G n =\n  fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. G n =\n    fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)", "."], ["proof (state)\nthis:\n  G n =\n  fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))", "hence \"AE w in N. real_cond_exp N (G n)\n   (discounted_value r (prices Mkt stk) (Suc n)) w = real_cond_exp N (fct_gen_subalgebra N (stream_space borel)\n                                (proj_stoch_proc geom_proc n))\n                                (discounted_value r (prices Mkt stk) (Suc n)) w\""], ["proof (prove)\nusing this:\n  G n =\n  fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       (discounted_value r (prices Mkt stk) (Suc n)))", "by simp"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (discounted_value r (prices Mkt stk) (Suc n)))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))", "moreover"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (discounted_value r (prices Mkt stk) (Suc n)))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))", "have \"AE w in N. real_cond_exp N (fct_gen_subalgebra N (stream_space borel)\n                                (proj_stoch_proc geom_proc n))\n                                (discounted_value r (prices Mkt stk) (Suc n)) w =\n                            real_cond_exp N (fct_gen_subalgebra N (stream_space borel)\n                                (proj_stoch_proc geom_proc n))\n                                (discounted_value r (\\<lambda>m. (prices Mkt stk) (Suc n)) (Suc n)) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       (discounted_value r (prices Mkt stk) (Suc n)))\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       (discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       (discounted_value r (prices Mkt stk) (Suc n)))\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       (discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n)))", "have \"\\<forall>w. (discounted_value r (prices Mkt stk) (Suc n)) w =\n      (discounted_value r (\\<lambda>m. (prices Mkt stk) (Suc n)) (Suc n)) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w.\n       discounted_value r (prices Mkt stk) (Suc n) w =\n       discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n) w", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       discounted_value r (prices Mkt stk) (Suc n) w =\n       discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n) w", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       discounted_value r (prices Mkt stk) (Suc n) w =\n       discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n) w", "show \"discounted_value r (prices Mkt stk) (Suc n) w = discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discounted_value r (prices Mkt stk) (Suc n) w =\n    discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n) w", "by (simp add: discounted_value_def)"], ["proof (state)\nthis:\n  discounted_value r (prices Mkt stk) (Suc n) w =\n  discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w.\n     discounted_value r (prices Mkt stk) (Suc n) w =\n     discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n) w\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       (discounted_value r (prices Mkt stk) (Suc n)))\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       (discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n)))", "hence \"(discounted_value r (prices Mkt stk) (Suc n)) =\n      (discounted_value r (\\<lambda>m. (prices Mkt stk) (Suc n)) (Suc n))\""], ["proof (prove)\nusing this:\n  \\<forall>w.\n     discounted_value r (prices Mkt stk) (Suc n) w =\n     discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n) w\n\ngoal (1 subgoal):\n 1. discounted_value r (prices Mkt stk) (Suc n) =\n    discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n)", "by auto"], ["proof (state)\nthis:\n  discounted_value r (prices Mkt stk) (Suc n) =\n  discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       (discounted_value r (prices Mkt stk) (Suc n)))\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       (discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n)))", "thus ?thesis"], ["proof (prove)\nusing this:\n  discounted_value r (prices Mkt stk) (Suc n) =\n  discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       (discounted_value r (prices Mkt stk) (Suc n)))\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       (discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n)))", "by simp"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (discounted_value r (prices Mkt stk) (Suc n)))\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (discounted_value r (prices Mkt stk) (Suc n)))\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n)))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))", "moreover"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (discounted_value r (prices Mkt stk) (Suc n)))\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n)))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))", "have \"AE w in N. (real_cond_exp N (fct_gen_subalgebra N (stream_space borel)\n                                (proj_stoch_proc geom_proc n))\n                                (discounted_value r (\\<lambda>m. (prices Mkt stk) (Suc n)) (Suc n))) w =\n               discounted_value r (\\<lambda>m. real_cond_exp N (fct_gen_subalgebra N (stream_space borel)\n                                                     (proj_stoch_proc geom_proc n))\n                                                     ((prices Mkt stk) (Suc n))) (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       (discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n)))\n     (discounted_value r\n       (\\<lambda>m.\n           real_cond_exp N\n            (fct_gen_subalgebra N (stream_space borel)\n              (proj_stoch_proc geom_proc n))\n            (prices Mkt stk (Suc n)))\n       (Suc n))", "proof (rule prob_space.discounted_value_real_cond_exp)"], ["proof (state)\ngoal (4 subgoals):\n 1. prob_space N\n 2. integrable N (prices Mkt stk (Suc n))\n 3. - 1 < r\n 4. subalgebra N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))", "show \"-1 < r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 < r", "using acceptable_rate"], ["proof (prove)\nusing this:\n  - 1 < r\n\ngoal (1 subgoal):\n 1. - 1 < r", "by simp"], ["proof (state)\nthis:\n  - 1 < r\n\ngoal (3 subgoals):\n 1. prob_space N\n 2. integrable N (prices Mkt stk (Suc n))\n 3. subalgebra N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))", "show \"integrable N (prices Mkt stk (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable N (prices Mkt stk (Suc n))", "using stk_price geom_proc_integrable assms qlt qgt"], ["proof (prove)\nusing this:\n  prices Mkt stk = geom_proc\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 \\<le> ?q; ?q \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> integrable ?N (geom_proc ?n)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. integrable N (prices Mkt stk (Suc n))", "by simp"], ["proof (state)\nthis:\n  integrable N (prices Mkt stk (Suc n))\n\ngoal (2 subgoals):\n 1. prob_space N\n 2. subalgebra N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))", "show \"subalgebra N (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subalgebra N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))", "proof (rule fct_gen_subalgebra_is_subalgebra)"], ["proof (state)\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n\n    \\<in> N \\<rightarrow>\\<^sub>M stream_space borel", "show \"proj_stoch_proc geom_proc n \\<in> N \\<rightarrow>\\<^sub>M stream_space borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n\n    \\<in> N \\<rightarrow>\\<^sub>M stream_space borel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n\n    \\<in> N \\<rightarrow>\\<^sub>M stream_space borel", "have \"proj_stoch_proc geom_proc n \\<in> measurable M (stream_space borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable (stream_space borel) (proj_stoch_proc geom_proc n)", "proof (rule proj_stoch_measurable_if_adapted)"], ["proof (state)\ngoal (2 subgoals):\n 1. Filtration.filtration M ?F\n 2. borel_adapt_stoch_proc ?F geom_proc", "show \"borel_adapt_stoch_proc nat_filtration geom_proc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc nat_filtration geom_proc", "using\n            geometric_process\n            geom_rand_walk_borel_adapted"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n  borel_adapt_stoch_proc nat_filtration geom_proc\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc nat_filtration geom_proc", "by simp"], ["proof (state)\nthis:\n  borel_adapt_stoch_proc nat_filtration geom_proc\n\ngoal (1 subgoal):\n 1. Filtration.filtration M nat_filtration", "show \"filtration M nat_filtration\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Filtration.filtration M nat_filtration", "using CRR_infinite_cts_filtration"], ["proof (prove)\nusing this:\n  infinite_cts_filtration p M nat_filtration\n\ngoal (1 subgoal):\n 1. Filtration.filtration M nat_filtration", "by (simp add: nat_discrete_filtration)"], ["proof (state)\nthis:\n  Filtration.filtration M nat_filtration\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  random_variable (stream_space borel) (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n\n    \\<in> N \\<rightarrow>\\<^sub>M stream_space borel", "thus ?thesis"], ["proof (prove)\nusing this:\n  random_variable (stream_space borel) (proj_stoch_proc geom_proc n)\n\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n\n    \\<in> N \\<rightarrow>\\<^sub>M stream_space borel", "using assms bernoulli_stream_equiv filt_equiv_measurable qlt qgt psgt pslt"], ["proof (prove)\nusing this:\n  random_variable (stream_space borel) (proj_stoch_proc geom_proc n)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < p; p < 1; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> filt_equiv nat_filtration M ?N\n  \\<lbrakk>filt_equiv ?F ?M ?N;\n   ?f \\<in> ?M \\<rightarrow>\\<^sub>M ?P\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> ?N \\<rightarrow>\\<^sub>M ?P\n  0 < q\n  q < 1\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n\n    \\<in> N \\<rightarrow>\\<^sub>M stream_space borel", "by blast"], ["proof (state)\nthis:\n  proj_stoch_proc geom_proc n\n  \\<in> N \\<rightarrow>\\<^sub>M stream_space borel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  proj_stoch_proc geom_proc n\n  \\<in> N \\<rightarrow>\\<^sub>M stream_space borel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subalgebra N\n   (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc n))\n\ngoal (1 subgoal):\n 1. prob_space N", "show \"prob_space N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space N", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. prob_space N", "by (simp add: bernoulli bernoulli_stream_def prob_space.prob_space_stream_space prob_space_measure_pmf)"], ["proof (state)\nthis:\n  prob_space N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n)))\n   (discounted_value r\n     (\\<lambda>m.\n         real_cond_exp N\n          (fct_gen_subalgebra N (stream_space borel)\n            (proj_stoch_proc geom_proc n))\n          (prices Mkt stk (Suc n)))\n     (Suc n))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))", "moreover"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n)))\n   (discounted_value r\n     (\\<lambda>m.\n         real_cond_exp N\n          (fct_gen_subalgebra N (stream_space borel)\n            (proj_stoch_proc geom_proc n))\n          (prices Mkt stk (Suc n)))\n     (Suc n))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))", "have \"AE w in N. discounted_value r (\\<lambda>m. real_cond_exp N (fct_gen_subalgebra N (stream_space borel)\n                                                     (proj_stoch_proc geom_proc n))\n                                                     ((prices Mkt stk) (Suc n))) (Suc n) w =\n                    discounted_value r (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (discounted_value r\n       (\\<lambda>m.\n           real_cond_exp N\n            (fct_gen_subalgebra N (stream_space borel)\n              (proj_stoch_proc geom_proc n))\n            (prices Mkt stk (Suc n)))\n       (Suc n))\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))", "proof (rule discounted_AE_cong)"], ["proof (state)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       (prices Mkt stk (Suc n)))\n     (\\<lambda>w. (q * u + (1 - q) * d) * prices Mkt stk n w)", "have \"AEeq N (real_cond_exp N (fct_gen_subalgebra N (stream_space borel)\n                                (proj_stoch_proc geom_proc n))\n                                ((prices Mkt stk) (Suc n)))\n               (\\<lambda>w. q * (prices Mkt stk) (Suc n) (pseudo_proj_True n w) +\n                (1 - q) * (prices Mkt stk) (Suc n) (pseudo_proj_False n w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       (prices Mkt stk (Suc n)))\n     (\\<lambda>w.\n         q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n         (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w))", "proof (rule infinite_cts_filtration.f_borel_Suc_real_cond_exp)"], ["proof (state)\ngoal (9 subgoals):\n 1. infinite_cts_filtration q N ?F\n 2. prices Mkt stk (Suc n) \\<in> borel_measurable (?F (Suc n))\n 3. proj_stoch_proc geom_proc n\n    \\<in> ?F n \\<rightarrow>\\<^sub>M stream_space borel\n 4. set_discriminating n (proj_stoch_proc geom_proc n) (stream_space borel)\n 5. \\<forall>w.\n       proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n       \\<in> sets (?F n)\n 6. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\n 7. \\<forall>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       prices Mkt stk (Suc n) y = prices Mkt stk (Suc n) z\n 8. 0 < q\n 9. q < 1", "show icf: \"infinite_cts_filtration q N (infinite_coin_toss_space.nat_filtration N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_cts_filtration q N (infinite_coin_toss_space.nat_filtration N)", "unfolding infinite_cts_filtration_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N \\<and>\n    infinite_cts_filtration_axioms N\n     (infinite_coin_toss_space.nat_filtration N)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. infinite_coin_toss_space q N\n 2. infinite_cts_filtration_axioms N\n     (infinite_coin_toss_space.nat_filtration N)", "show \"infinite_coin_toss_space q N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "using assms qlt qgt"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "by (simp add: infinite_coin_toss_space_def)"], ["proof (state)\nthis:\n  infinite_coin_toss_space q N\n\ngoal (1 subgoal):\n 1. infinite_cts_filtration_axioms N\n     (infinite_coin_toss_space.nat_filtration N)", "show \"infinite_cts_filtration_axioms N (infinite_coin_toss_space.nat_filtration N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_cts_filtration_axioms N\n     (infinite_coin_toss_space.nat_filtration N)", "using infinite_cts_filtration_axioms_def"], ["proof (prove)\nusing this:\n  infinite_cts_filtration_axioms ?M ?F \\<equiv>\n  ?F = infinite_coin_toss_space.nat_filtration ?M\n\ngoal (1 subgoal):\n 1. infinite_cts_filtration_axioms N\n     (infinite_coin_toss_space.nat_filtration N)", "by blast"], ["proof (state)\nthis:\n  infinite_cts_filtration_axioms N\n   (infinite_coin_toss_space.nat_filtration N)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  infinite_cts_filtration q N (infinite_coin_toss_space.nat_filtration N)\n\ngoal (8 subgoals):\n 1. prices Mkt stk (Suc n)\n    \\<in> borel_measurable\n           (infinite_coin_toss_space.nat_filtration N (Suc n))\n 2. proj_stoch_proc geom_proc n\n    \\<in> infinite_coin_toss_space.nat_filtration N n \\<rightarrow>\\<^sub>M\n          stream_space borel\n 3. set_discriminating n (proj_stoch_proc geom_proc n) (stream_space borel)\n 4. \\<forall>w.\n       proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n       \\<in> sets (infinite_coin_toss_space.nat_filtration N n)\n 5. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\n 6. \\<forall>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       prices Mkt stk (Suc n) y = prices Mkt stk (Suc n) z\n 7. 0 < q\n 8. q < 1", "have badapt: \"borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N) (prices Mkt stk)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n     (prices Mkt stk)", "using stk_price prob_grw.geom_rand_walk_borel_adapted[of q N  geom_proc]"], ["proof (prove)\nusing this:\n  prices Mkt stk = geom_proc\n  prob_grw q N geom_proc ?u ?d ?init \\<Longrightarrow>\n  borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n   geom_proc\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n     (prices Mkt stk)", "unfolding adapt_stoch_proc_def"], ["proof (prove)\nusing this:\n  prices Mkt stk = geom_proc\n  prob_grw q N geom_proc ?u ?d ?init \\<Longrightarrow>\n  \\<forall>t.\n     geom_proc t\n     \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N t)\n\ngoal (1 subgoal):\n 1. \\<forall>t.\n       prices Mkt stk t\n       \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N t)", "by (metis (full_types) borel_measurable_integrable geom_proc_integrable geom_rand_walk_pseudo_proj_True icf\n            infinite_coin_toss_space.nat_filtration_borel_measurable_characterization infinite_coin_toss_space_def\n            infinite_cts_filtration_def)"], ["proof (state)\nthis:\n  borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n   (prices Mkt stk)\n\ngoal (8 subgoals):\n 1. prices Mkt stk (Suc n)\n    \\<in> borel_measurable\n           (infinite_coin_toss_space.nat_filtration N (Suc n))\n 2. proj_stoch_proc geom_proc n\n    \\<in> infinite_coin_toss_space.nat_filtration N n \\<rightarrow>\\<^sub>M\n          stream_space borel\n 3. set_discriminating n (proj_stoch_proc geom_proc n) (stream_space borel)\n 4. \\<forall>w.\n       proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n       \\<in> sets (infinite_coin_toss_space.nat_filtration N n)\n 5. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\n 6. \\<forall>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       prices Mkt stk (Suc n) y = prices Mkt stk (Suc n) z\n 7. 0 < q\n 8. q < 1", "show \"prices Mkt stk (Suc n) \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prices Mkt stk (Suc n)\n    \\<in> borel_measurable\n           (infinite_coin_toss_space.nat_filtration N (Suc n))", "using badapt"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n   (prices Mkt stk)\n\ngoal (1 subgoal):\n 1. prices Mkt stk (Suc n)\n    \\<in> borel_measurable\n           (infinite_coin_toss_space.nat_filtration N (Suc n))", "unfolding adapt_stoch_proc_def"], ["proof (prove)\nusing this:\n  \\<forall>t.\n     prices Mkt stk t\n     \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N t)\n\ngoal (1 subgoal):\n 1. prices Mkt stk (Suc n)\n    \\<in> borel_measurable\n           (infinite_coin_toss_space.nat_filtration N (Suc n))", "by simp"], ["proof (state)\nthis:\n  prices Mkt stk (Suc n)\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N (Suc n))\n\ngoal (7 subgoals):\n 1. proj_stoch_proc geom_proc n\n    \\<in> infinite_coin_toss_space.nat_filtration N n \\<rightarrow>\\<^sub>M\n          stream_space borel\n 2. set_discriminating n (proj_stoch_proc geom_proc n) (stream_space borel)\n 3. \\<forall>w.\n       proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n       \\<in> sets (infinite_coin_toss_space.nat_filtration N n)\n 4. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\n 5. \\<forall>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       prices Mkt stk (Suc n) y = prices Mkt stk (Suc n) z\n 6. 0 < q\n 7. q < 1", "show \"proj_stoch_proc geom_proc n \\<in> infinite_coin_toss_space.nat_filtration N n \\<rightarrow>\\<^sub>M stream_space borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n\n    \\<in> infinite_coin_toss_space.nat_filtration N n \\<rightarrow>\\<^sub>M\n          stream_space borel", "proof (rule proj_stoch_adapted_if_adapted)"], ["proof (state)\ngoal (2 subgoals):\n 1. Filtration.filtration ?M (infinite_coin_toss_space.nat_filtration N)\n 2. borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n     geom_proc", "show \"filtration N (infinite_coin_toss_space.nat_filtration N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Filtration.filtration N (infinite_coin_toss_space.nat_filtration N)", "using icf"], ["proof (prove)\nusing this:\n  infinite_cts_filtration q N (infinite_coin_toss_space.nat_filtration N)\n\ngoal (1 subgoal):\n 1. Filtration.filtration N (infinite_coin_toss_space.nat_filtration N)", "using infinite_coin_toss_space.nat_discrete_filtration infinite_cts_filtration_def"], ["proof (prove)\nusing this:\n  infinite_cts_filtration q N (infinite_coin_toss_space.nat_filtration N)\n  infinite_coin_toss_space ?p ?M \\<Longrightarrow>\n  Filtration.filtration ?M (infinite_coin_toss_space.nat_filtration ?M)\n  infinite_cts_filtration ?p ?M ?F \\<equiv>\n  infinite_coin_toss_space ?p ?M \\<and> infinite_cts_filtration_axioms ?M ?F\n\ngoal (1 subgoal):\n 1. Filtration.filtration N (infinite_coin_toss_space.nat_filtration N)", "by blast"], ["proof (state)\nthis:\n  Filtration.filtration N (infinite_coin_toss_space.nat_filtration N)\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n     geom_proc", "show \"borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N) geom_proc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n     geom_proc", "using badapt stk_price"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n   (prices Mkt stk)\n  prices Mkt stk = geom_proc\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n     geom_proc", "by simp"], ["proof (state)\nthis:\n  borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n   geom_proc\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  proj_stoch_proc geom_proc n\n  \\<in> infinite_coin_toss_space.nat_filtration N n \\<rightarrow>\\<^sub>M\n        stream_space borel\n\ngoal (6 subgoals):\n 1. set_discriminating n (proj_stoch_proc geom_proc n) (stream_space borel)\n 2. \\<forall>w.\n       proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n       \\<in> sets (infinite_coin_toss_space.nat_filtration N n)\n 3. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\n 4. \\<forall>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       prices Mkt stk (Suc n) y = prices Mkt stk (Suc n) z\n 5. 0 < q\n 6. q < 1", "show \"set_discriminating n (proj_stoch_proc geom_proc n) (stream_space borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_discriminating n (proj_stoch_proc geom_proc n) (stream_space borel)", "unfolding set_discriminating_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w.\n       proj_stoch_proc geom_proc n w \\<noteq>\n       proj_stoch_proc geom_proc n (pseudo_proj_True n w) \\<longrightarrow>\n       (\\<exists>A\\<in>sets (stream_space borel).\n           (proj_stoch_proc geom_proc n w \\<in> A) =\n           (proj_stoch_proc geom_proc n (pseudo_proj_True n w) \\<notin> A))", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       proj_stoch_proc geom_proc n w \\<noteq>\n       proj_stoch_proc geom_proc n (pseudo_proj_True n w) \\<Longrightarrow>\n       \\<exists>A\\<in>sets (stream_space borel).\n          (proj_stoch_proc geom_proc n w \\<in> A) =\n          (proj_stoch_proc geom_proc n (pseudo_proj_True n w) \\<notin> A)", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       proj_stoch_proc geom_proc n w \\<noteq>\n       proj_stoch_proc geom_proc n (pseudo_proj_True n w) \\<Longrightarrow>\n       \\<exists>A\\<in>sets (stream_space borel).\n          (proj_stoch_proc geom_proc n w \\<in> A) =\n          (proj_stoch_proc geom_proc n (pseudo_proj_True n w) \\<notin> A)", "assume \"proj_stoch_proc geom_proc n w \\<noteq> proj_stoch_proc geom_proc n (pseudo_proj_True n w)\""], ["proof (state)\nthis:\n  proj_stoch_proc geom_proc n w \\<noteq>\n  proj_stoch_proc geom_proc n (pseudo_proj_True n w)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       proj_stoch_proc geom_proc n w \\<noteq>\n       proj_stoch_proc geom_proc n (pseudo_proj_True n w) \\<Longrightarrow>\n       \\<exists>A\\<in>sets (stream_space borel).\n          (proj_stoch_proc geom_proc n w \\<in> A) =\n          (proj_stoch_proc geom_proc n (pseudo_proj_True n w) \\<notin> A)", "hence False"], ["proof (prove)\nusing this:\n  proj_stoch_proc geom_proc n w \\<noteq>\n  proj_stoch_proc geom_proc n (pseudo_proj_True n w)\n\ngoal (1 subgoal):\n 1. False", "using CRR_infinite_cts_filtration"], ["proof (prove)\nusing this:\n  proj_stoch_proc geom_proc n w \\<noteq>\n  proj_stoch_proc geom_proc n (pseudo_proj_True n w)\n  infinite_cts_filtration p M nat_filtration\n\ngoal (1 subgoal):\n 1. False", "by (metis \\<open>proj_stoch_proc geom_proc n w \\<noteq> proj_stoch_proc geom_proc n (pseudo_proj_True n w)\\<close>\n            geom_rand_walk_borel_adapted infinite_cts_filtration.proj_stoch_proj_invariant)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       proj_stoch_proc geom_proc n w \\<noteq>\n       proj_stoch_proc geom_proc n (pseudo_proj_True n w) \\<Longrightarrow>\n       \\<exists>A\\<in>sets (stream_space borel).\n          (proj_stoch_proc geom_proc n w \\<in> A) =\n          (proj_stoch_proc geom_proc n (pseudo_proj_True n w) \\<notin> A)", "thus \"\\<exists>A\\<in>sets (stream_space borel).\n      (proj_stoch_proc geom_proc n w \\<in> A) = (proj_stoch_proc geom_proc n (pseudo_proj_True n w) \\<notin> A)\""], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets (stream_space borel).\n       (proj_stoch_proc geom_proc n w \\<in> A) =\n       (proj_stoch_proc geom_proc n (pseudo_proj_True n w) \\<notin> A)", "by simp"], ["proof (state)\nthis:\n  \\<exists>A\\<in>sets (stream_space borel).\n     (proj_stoch_proc geom_proc n w \\<in> A) =\n     (proj_stoch_proc geom_proc n (pseudo_proj_True n w) \\<notin> A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set_discriminating n (proj_stoch_proc geom_proc n) (stream_space borel)\n\ngoal (5 subgoals):\n 1. \\<forall>w.\n       proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n       \\<in> sets (infinite_coin_toss_space.nat_filtration N n)\n 2. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\n 3. \\<forall>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       prices Mkt stk (Suc n) y = prices Mkt stk (Suc n) z\n 4. 0 < q\n 5. q < 1", "show \"\\<forall>w. proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w} \\<in>\n        sets (infinite_coin_toss_space.nat_filtration N n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w.\n       proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n       \\<in> sets (infinite_coin_toss_space.nat_filtration N n)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n       \\<in> sets (infinite_coin_toss_space.nat_filtration N n)", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n       \\<in> sets (infinite_coin_toss_space.nat_filtration N n)", "show \"proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w} \\<in> sets (infinite_coin_toss_space.nat_filtration N n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n    \\<in> sets (infinite_coin_toss_space.nat_filtration N n)", "using \\<open>proj_stoch_proc geom_proc n \\<in> infinite_coin_toss_space.nat_filtration N n \\<rightarrow>\\<^sub>M stream_space borel\\<close>"], ["proof (prove)\nusing this:\n  proj_stoch_proc geom_proc n\n  \\<in> infinite_coin_toss_space.nat_filtration N n \\<rightarrow>\\<^sub>M\n        stream_space borel\n\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n    \\<in> sets (infinite_coin_toss_space.nat_filtration N n)", "using assms geom_rand_walk_borel_adapted nat_filtration_from_eq_sets   qlt qgt\n            infinite_cts_filtration.proj_stoch_singleton_set CRR_infinite_cts_filtration"], ["proof (prove)\nusing this:\n  proj_stoch_proc geom_proc n\n  \\<in> infinite_coin_toss_space.nat_filtration N n \\<rightarrow>\\<^sub>M\n        stream_space borel\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> sets (infinite_coin_toss_space.nat_filtration ?N ?n) =\n                    sets (nat_filtration ?n)\n  0 < q\n  q < 1\n  \\<lbrakk>infinite_cts_filtration ?p ?M ?F;\n   borel_adapt_stoch_proc ?F ?X\\<rbrakk>\n  \\<Longrightarrow> proj_stoch_proc ?X ?n -` {proj_stoch_proc ?X ?n ?w}\n                    \\<in> sets (?F ?n)\n  infinite_cts_filtration p M nat_filtration\n\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n    \\<in> sets (infinite_coin_toss_space.nat_filtration N n)", "by blast"], ["proof (state)\nthis:\n  proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n  \\<in> sets (infinite_coin_toss_space.nat_filtration N n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w.\n     proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n     \\<in> sets (infinite_coin_toss_space.nat_filtration N n)\n\ngoal (4 subgoals):\n 1. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\n 2. \\<forall>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       prices Mkt stk (Suc n) y = prices Mkt stk (Suc n) z\n 3. 0 < q\n 4. q < 1", "show \"\\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter> space (stream_space borel).\n        \\<exists>A\\<in>sets (stream_space borel). range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n               space (stream_space borel) \\<Longrightarrow>\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n               space (stream_space borel) \\<Longrightarrow>\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "assume asm: \"r \\<in> range (proj_stoch_proc geom_proc n) \\<inter> space (stream_space borel)\""], ["proof (state)\nthis:\n  r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n          space (stream_space borel)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n               space (stream_space borel) \\<Longrightarrow>\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "define A where \"A = infinite_cts_filtration.stream_space_single (proj_stoch_proc geom_proc n) r\""], ["proof (state)\nthis:\n  A =\n  infinite_cts_filtration.stream_space_single (proj_stoch_proc geom_proc n)\n   r\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n               space (stream_space borel) \\<Longrightarrow>\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "have \"A \\<in> sets (stream_space borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> sets (stream_space borel)", "using infinite_cts_filtration.stream_space_single_set"], ["proof (prove)\nusing this:\n  \\<lbrakk>infinite_cts_filtration ?p ?M ?F; borel_adapt_stoch_proc ?F ?X;\n   ?r \\<in> range (proj_stoch_proc ?X ?n)\\<rbrakk>\n  \\<Longrightarrow> infinite_cts_filtration.stream_space_single\n                     (proj_stoch_proc ?X ?n) ?r\n                    \\<in> sets (stream_space borel)\n\ngoal (1 subgoal):\n 1. A \\<in> sets (stream_space borel)", "unfolding A_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>infinite_cts_filtration ?p ?M ?F; borel_adapt_stoch_proc ?F ?X;\n   ?r \\<in> range (proj_stoch_proc ?X ?n)\\<rbrakk>\n  \\<Longrightarrow> infinite_cts_filtration.stream_space_single\n                     (proj_stoch_proc ?X ?n) ?r\n                    \\<in> sets (stream_space borel)\n\ngoal (1 subgoal):\n 1. infinite_cts_filtration.stream_space_single\n     (proj_stoch_proc geom_proc n) r\n    \\<in> sets (stream_space borel)", "using badapt icf stk_price asm"], ["proof (prove)\nusing this:\n  \\<lbrakk>infinite_cts_filtration ?p ?M ?F; borel_adapt_stoch_proc ?F ?X;\n   ?r \\<in> range (proj_stoch_proc ?X ?n)\\<rbrakk>\n  \\<Longrightarrow> infinite_cts_filtration.stream_space_single\n                     (proj_stoch_proc ?X ?n) ?r\n                    \\<in> sets (stream_space borel)\n  borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n   (prices Mkt stk)\n  infinite_cts_filtration q N (infinite_coin_toss_space.nat_filtration N)\n  prices Mkt stk = geom_proc\n  r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n          space (stream_space borel)\n\ngoal (1 subgoal):\n 1. infinite_cts_filtration.stream_space_single\n     (proj_stoch_proc geom_proc n) r\n    \\<in> sets (stream_space borel)", "by blast"], ["proof (state)\nthis:\n  A \\<in> sets (stream_space borel)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n               space (stream_space borel) \\<Longrightarrow>\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "moreover"], ["proof (state)\nthis:\n  A \\<in> sets (stream_space borel)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n               space (stream_space borel) \\<Longrightarrow>\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "have \"range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "unfolding A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. range (proj_stoch_proc geom_proc n) \\<inter>\n    infinite_cts_filtration.stream_space_single\n     (proj_stoch_proc geom_proc n) r =\n    {r}", "using badapt icf stk_price infinite_cts_filtration.stream_space_single_preimage asm"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration N)\n   (prices Mkt stk)\n  infinite_cts_filtration q N (infinite_coin_toss_space.nat_filtration N)\n  prices Mkt stk = geom_proc\n  \\<lbrakk>infinite_cts_filtration ?p ?M ?F; borel_adapt_stoch_proc ?F ?X;\n   ?r \\<in> range (proj_stoch_proc ?X ?n)\\<rbrakk>\n  \\<Longrightarrow> infinite_cts_filtration.stream_space_single\n                     (proj_stoch_proc ?X ?n) ?r \\<inter>\n                    range (proj_stoch_proc ?X ?n) =\n                    {?r}\n  r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n          space (stream_space borel)\n\ngoal (1 subgoal):\n 1. range (proj_stoch_proc geom_proc n) \\<inter>\n    infinite_cts_filtration.stream_space_single\n     (proj_stoch_proc geom_proc n) r =\n    {r}", "by blast"], ["proof (state)\nthis:\n  range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (proj_stoch_proc geom_proc n) \\<inter>\n               space (stream_space borel) \\<Longrightarrow>\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "ultimately"], ["proof (chain)\npicking this:\n  A \\<in> sets (stream_space borel)\n  range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "show \"\\<exists>A\\<in>sets (stream_space borel). range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\""], ["proof (prove)\nusing this:\n  A \\<in> sets (stream_space borel)\n  range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets (stream_space borel).\n       range (proj_stoch_proc geom_proc n) \\<inter> A = {r}", "by auto"], ["proof (state)\nthis:\n  \\<exists>A\\<in>sets (stream_space borel).\n     range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>r\\<in>range (proj_stoch_proc geom_proc n) \\<inter>\n                 space (stream_space borel).\n     \\<exists>A\\<in>sets (stream_space borel).\n        range (proj_stoch_proc geom_proc n) \\<inter> A = {r}\n\ngoal (3 subgoals):\n 1. \\<forall>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       prices Mkt stk (Suc n) y = prices Mkt stk (Suc n) z\n 2. 0 < q\n 3. q < 1", "show \"\\<forall>y z. proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and> y !! n = z !! n \\<longrightarrow>\n        prices Mkt stk (Suc n) y = prices Mkt stk (Suc n) z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       prices Mkt stk (Suc n) y = prices Mkt stk (Suc n) z", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       prices Mkt stk (Suc n) y = prices Mkt stk (Suc n) z", "fix y z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       prices Mkt stk (Suc n) y = prices Mkt stk (Suc n) z", "assume \"proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and> y !! n = z !! n\""], ["proof (state)\nthis:\n  proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n  y !! n = z !! n\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       prices Mkt stk (Suc n) y = prices Mkt stk (Suc n) z", "hence \"geom_proc n y = geom_proc n z\""], ["proof (prove)\nusing this:\n  proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n  y !! n = z !! n\n\ngoal (1 subgoal):\n 1. geom_proc n y = geom_proc n z", "using proj_stoch_proc_component(2)[of n n]"], ["proof (prove)\nusing this:\n  proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n  y !! n = z !! n\n  n \\<le> n \\<Longrightarrow> proj_stoch_proc ?f n ?w !! n = ?f n ?w\n\ngoal (1 subgoal):\n 1. geom_proc n y = geom_proc n z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>proj_stoch_proc geom_proc n y =\n             proj_stoch_proc geom_proc n z \\<and>\n             y !! n = z !! n;\n     \\<And>f w.\n        n \\<le> n \\<Longrightarrow>\n        proj_stoch_proc f n w !! n = f n w\\<rbrakk>\n    \\<Longrightarrow> geom_proc n y = geom_proc n z", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc n y = geom_proc n z", "by (metis \\<open>\\<And>w f. n \\<le> n \\<Longrightarrow> proj_stoch_proc f n w !! n = f n w\\<close> \\<open>proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and> y !! n = z !! n\\<close> order_refl)"], ["proof (state)\nthis:\n  geom_proc n y = geom_proc n z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  geom_proc n y = geom_proc n z\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       prices Mkt stk (Suc n) y = prices Mkt stk (Suc n) z", "hence \"geom_proc (Suc n) y = geom_proc (Suc n) z\""], ["proof (prove)\nusing this:\n  geom_proc n y = geom_proc n z\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) y = geom_proc (Suc n) z", "using geometric_process"], ["proof (prove)\nusing this:\n  geom_proc n y = geom_proc n z\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) y = geom_proc (Suc n) z", "by (simp add: \\<open>proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and> y !! n = z !! n\\<close>)"], ["proof (state)\nthis:\n  geom_proc (Suc n) y = geom_proc (Suc n) z\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       prices Mkt stk (Suc n) y = prices Mkt stk (Suc n) z", "thus \"prices Mkt stk (Suc n) y = prices Mkt stk (Suc n) z\""], ["proof (prove)\nusing this:\n  geom_proc (Suc n) y = geom_proc (Suc n) z\n\ngoal (1 subgoal):\n 1. prices Mkt stk (Suc n) y = prices Mkt stk (Suc n) z", "using stk_price"], ["proof (prove)\nusing this:\n  geom_proc (Suc n) y = geom_proc (Suc n) z\n  prices Mkt stk = geom_proc\n\ngoal (1 subgoal):\n 1. prices Mkt stk (Suc n) y = prices Mkt stk (Suc n) z", "by simp"], ["proof (state)\nthis:\n  prices Mkt stk (Suc n) y = prices Mkt stk (Suc n) z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>y z.\n     proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n     y !! n = z !! n \\<longrightarrow>\n     prices Mkt stk (Suc n) y = prices Mkt stk (Suc n) z\n\ngoal (2 subgoals):\n 1. 0 < q\n 2. q < 1", "show \"0 < q\" and \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "by auto"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (prices Mkt stk (Suc n)))\n   (\\<lambda>w.\n       q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n       (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       (prices Mkt stk (Suc n)))\n     (\\<lambda>w. (q * u + (1 - q) * d) * prices Mkt stk n w)", "moreover"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (prices Mkt stk (Suc n)))\n   (\\<lambda>w.\n       q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n       (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       (prices Mkt stk (Suc n)))\n     (\\<lambda>w. (q * u + (1 - q) * d) * prices Mkt stk n w)", "have \"\\<forall>w. q * prices Mkt stk (Suc n) (pseudo_proj_True n w) + (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n      (q * u + (1 - q) * d) * prices Mkt stk n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w.\n       q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n       (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n       (q * u + (1 - q) * d) * prices Mkt stk n w", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n       (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n       (q * u + (1 - q) * d) * prices Mkt stk n w", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n       (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n       (q * u + (1 - q) * d) * prices Mkt stk n w", "have \"q * prices Mkt stk (Suc n) (pseudo_proj_True n w) + (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n        q * geom_proc (Suc n) (pseudo_proj_True n w) + (1-q) * geom_proc (Suc n) (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n    q * geom_proc (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w)", "by (simp add:stk_price)"], ["proof (state)\nthis:\n  q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n  q * geom_proc (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n       (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n       (q * u + (1 - q) * d) * prices Mkt stk n w", "also"], ["proof (state)\nthis:\n  q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n  q * geom_proc (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n       (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n       (q * u + (1 - q) * d) * prices Mkt stk n w", "have \"... = q * u * geom_proc n (pseudo_proj_True n w) + (1-q) * geom_proc (Suc n) (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q * geom_proc (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w) =\n    q * u * geom_proc n (pseudo_proj_True n w) +\n    (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w)", "using geometric_process"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. q * geom_proc (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w) =\n    q * u * geom_proc n (pseudo_proj_True n w) +\n    (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w)", "unfolding pseudo_proj_True_def"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. q * geom_proc (Suc n) (stake n w @- sconst True) +\n    (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w) =\n    q * u * geom_proc n (stake n w @- sconst True) +\n    (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w)", "by simp"], ["proof (state)\nthis:\n  q * geom_proc (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w) =\n  q * u * geom_proc n (pseudo_proj_True n w) +\n  (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n       (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n       (q * u + (1 - q) * d) * prices Mkt stk n w", "also"], ["proof (state)\nthis:\n  q * geom_proc (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w) =\n  q * u * geom_proc n (pseudo_proj_True n w) +\n  (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n       (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n       (q * u + (1 - q) * d) * prices Mkt stk n w", "have \"... = q * u * geom_proc n w + (1-q) * geom_proc (Suc n) (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q * u * geom_proc n (pseudo_proj_True n w) +\n    (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w) =\n    q * u * geom_proc n w +\n    (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w)", "by (metis geom_rand_walk_pseudo_proj_True o_apply)"], ["proof (state)\nthis:\n  q * u * geom_proc n (pseudo_proj_True n w) +\n  (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w) =\n  q * u * geom_proc n w +\n  (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n       (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n       (q * u + (1 - q) * d) * prices Mkt stk n w", "also"], ["proof (state)\nthis:\n  q * u * geom_proc n (pseudo_proj_True n w) +\n  (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w) =\n  q * u * geom_proc n w +\n  (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n       (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n       (q * u + (1 - q) * d) * prices Mkt stk n w", "have \"... = q * u * geom_proc n w + (1-q) * d * geom_proc n (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q * u * geom_proc n w +\n    (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w) =\n    q * u * geom_proc n w +\n    (1 - q) * d * geom_proc n (pseudo_proj_False n w)", "using geometric_process"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. q * u * geom_proc n w +\n    (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w) =\n    q * u * geom_proc n w +\n    (1 - q) * d * geom_proc n (pseudo_proj_False n w)", "unfolding pseudo_proj_False_def"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. q * u * geom_proc n w +\n    (1 - q) * geom_proc (Suc n) ((stake n w @ [False]) @- sconst True) =\n    q * u * geom_proc n w +\n    (1 - q) * d * geom_proc n ((stake n w @ [False]) @- sconst True)", "by simp"], ["proof (state)\nthis:\n  q * u * geom_proc n w +\n  (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w) =\n  q * u * geom_proc n w + (1 - q) * d * geom_proc n (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n       (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n       (q * u + (1 - q) * d) * prices Mkt stk n w", "also"], ["proof (state)\nthis:\n  q * u * geom_proc n w +\n  (1 - q) * geom_proc (Suc n) (pseudo_proj_False n w) =\n  q * u * geom_proc n w + (1 - q) * d * geom_proc n (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n       (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n       (q * u + (1 - q) * d) * prices Mkt stk n w", "have \"... = q * u * geom_proc n w + (1-q) * d * geom_proc n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q * u * geom_proc n w +\n    (1 - q) * d * geom_proc n (pseudo_proj_False n w) =\n    q * u * geom_proc n w + (1 - q) * d * geom_proc n w", "by (metis geom_rand_walk_pseudo_proj_False o_apply)"], ["proof (state)\nthis:\n  q * u * geom_proc n w +\n  (1 - q) * d * geom_proc n (pseudo_proj_False n w) =\n  q * u * geom_proc n w + (1 - q) * d * geom_proc n w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n       (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n       (q * u + (1 - q) * d) * prices Mkt stk n w", "also"], ["proof (state)\nthis:\n  q * u * geom_proc n w +\n  (1 - q) * d * geom_proc n (pseudo_proj_False n w) =\n  q * u * geom_proc n w + (1 - q) * d * geom_proc n w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n       (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n       (q * u + (1 - q) * d) * prices Mkt stk n w", "have \"... = (q * u + (1 - q) * d) * geom_proc n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q * u * geom_proc n w + (1 - q) * d * geom_proc n w =\n    (q * u + (1 - q) * d) * geom_proc n w", "by (simp add: distrib_right)"], ["proof (state)\nthis:\n  q * u * geom_proc n w + (1 - q) * d * geom_proc n w =\n  (q * u + (1 - q) * d) * geom_proc n w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n       (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n       (q * u + (1 - q) * d) * prices Mkt stk n w", "finally"], ["proof (chain)\npicking this:\n  q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n  (q * u + (1 - q) * d) * geom_proc n w", "show \"q * prices Mkt stk (Suc n) (pseudo_proj_True n w) + (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n        (q * u + (1 - q) * d) * prices Mkt stk n w\""], ["proof (prove)\nusing this:\n  q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n  (q * u + (1 - q) * d) * geom_proc n w\n\ngoal (1 subgoal):\n 1. q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n    (q * u + (1 - q) * d) * prices Mkt stk n w", "using stk_price"], ["proof (prove)\nusing this:\n  q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n  (q * u + (1 - q) * d) * geom_proc n w\n  prices Mkt stk = geom_proc\n\ngoal (1 subgoal):\n 1. q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n    (q * u + (1 - q) * d) * prices Mkt stk n w", "by simp"], ["proof (state)\nthis:\n  q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n  (q * u + (1 - q) * d) * prices Mkt stk n w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w.\n     q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n     (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n     (q * u + (1 - q) * d) * prices Mkt stk n w\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       (prices Mkt stk (Suc n)))\n     (\\<lambda>w. (q * u + (1 - q) * d) * prices Mkt stk n w)", "ultimately"], ["proof (chain)\npicking this:\n  AEeq N\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (prices Mkt stk (Suc n)))\n   (\\<lambda>w.\n       q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n       (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w))\n  \\<forall>w.\n     q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n     (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n     (q * u + (1 - q) * d) * prices Mkt stk n w", "show \"AEeq N (real_cond_exp N (fct_gen_subalgebra N (stream_space borel)\n                                  (proj_stoch_proc geom_proc n))\n                                  ((prices Mkt stk) (Suc n)))\n                    (\\<lambda>w. (q * u + (1 - q) * d) * prices Mkt stk n w)\""], ["proof (prove)\nusing this:\n  AEeq N\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (prices Mkt stk (Suc n)))\n   (\\<lambda>w.\n       q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n       (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w))\n  \\<forall>w.\n     q * prices Mkt stk (Suc n) (pseudo_proj_True n w) +\n     (1 - q) * prices Mkt stk (Suc n) (pseudo_proj_False n w) =\n     (q * u + (1 - q) * d) * prices Mkt stk n w\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N\n       (fct_gen_subalgebra N (stream_space borel)\n         (proj_stoch_proc geom_proc n))\n       (prices Mkt stk (Suc n)))\n     (\\<lambda>w. (q * u + (1 - q) * d) * prices Mkt stk n w)", "by simp"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (prices Mkt stk (Suc n)))\n   (\\<lambda>w. (q * u + (1 - q) * d) * prices Mkt stk n w)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AEeq N\n   (discounted_value r\n     (\\<lambda>m.\n         real_cond_exp N\n          (fct_gen_subalgebra N (stream_space borel)\n            (proj_stoch_proc geom_proc n))\n          (prices Mkt stk (Suc n)))\n     (Suc n))\n   (discounted_value r\n     (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))", "ultimately"], ["proof (chain)\npicking this:\n  AEeq N\n   (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (discounted_value r (prices Mkt stk) (Suc n)))\n  AEeq N\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (discounted_value r (prices Mkt stk) (Suc n)))\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n)))\n  AEeq N\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n)))\n   (discounted_value r\n     (\\<lambda>m.\n         real_cond_exp N\n          (fct_gen_subalgebra N (stream_space borel)\n            (proj_stoch_proc geom_proc n))\n          (prices Mkt stk (Suc n)))\n     (Suc n))\n  AEeq N\n   (discounted_value r\n     (\\<lambda>m.\n         real_cond_exp N\n          (fct_gen_subalgebra N (stream_space borel)\n            (proj_stoch_proc geom_proc n))\n          (prices Mkt stk (Suc n)))\n     (Suc n))\n   (discounted_value r\n     (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  AEeq N\n   (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (discounted_value r (prices Mkt stk) (Suc n)))\n  AEeq N\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (discounted_value r (prices Mkt stk) (Suc n)))\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n)))\n  AEeq N\n   (real_cond_exp N\n     (fct_gen_subalgebra N (stream_space borel)\n       (proj_stoch_proc geom_proc n))\n     (discounted_value r (\\<lambda>m. prices Mkt stk (Suc n)) (Suc n)))\n   (discounted_value r\n     (\\<lambda>m.\n         real_cond_exp N\n          (fct_gen_subalgebra N (stream_space borel)\n            (proj_stoch_proc geom_proc n))\n          (prices Mkt stk (Suc n)))\n     (Suc n))\n  AEeq N\n   (discounted_value r\n     (\\<lambda>m.\n         real_cond_exp N\n          (fct_gen_subalgebra N (stream_space borel)\n            (proj_stoch_proc geom_proc n))\n          (prices Mkt stk (Suc n)))\n     (Suc n))\n   (discounted_value r\n     (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))", "by auto"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n   (discounted_value r\n     (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) risky_asset_martingale_only_if:\n  assumes \"N = bernoulli_stream q\"\n  and \"0 < q\"\n  and \"q < 1\"\n  and  \"martingale N G (discounted_value r (prices Mkt stk))\"\nshows \"q = (1 + r - d) / (u - d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d)", "have \"AE w in N. real_cond_exp N (G 0)\n       (discounted_value r (prices Mkt stk) (Suc 0)) w =  discounted_value r (prices Mkt stk) 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G 0) (discounted_value r (prices Mkt stk) (Suc 0)))\n     (discounted_value r (prices Mkt stk) 0)", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  martingale N G (discounted_value r (prices Mkt stk))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G 0) (discounted_value r (prices Mkt stk) (Suc 0)))\n     (discounted_value r (prices Mkt stk) 0)", "unfolding martingale_def"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  Filtration.filtration N G \\<and>\n  (\\<forall>t. integrable N (discounted_value r (prices Mkt stk) t)) \\<and>\n  borel_adapt_stoch_proc G (discounted_value r (prices Mkt stk)) \\<and>\n  (\\<forall>t s.\n      t \\<le> s \\<longrightarrow>\n      AEeq N (real_cond_exp N (G t) (discounted_value r (prices Mkt stk) s))\n       (discounted_value r (prices Mkt stk) t))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G 0) (discounted_value r (prices Mkt stk) (Suc 0)))\n     (discounted_value r (prices Mkt stk) 0)", "by simp"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N (G 0) (discounted_value r (prices Mkt stk) (Suc 0)))\n   (discounted_value r (prices Mkt stk) 0)\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d)", "hence \"AE w in N. real_cond_exp N (G 0)\n       (discounted_value r (prices Mkt stk) (Suc 0)) w =  prices Mkt stk 0 w\""], ["proof (prove)\nusing this:\n  AEeq N\n   (real_cond_exp N (G 0) (discounted_value r (prices Mkt stk) (Suc 0)))\n   (discounted_value r (prices Mkt stk) 0)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G 0) (discounted_value r (prices Mkt stk) (Suc 0)))\n     (prices Mkt stk 0)", "by (simp add: discounted_init)"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N (G 0) (discounted_value r (prices Mkt stk) (Suc 0)))\n   (prices Mkt stk 0)\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d)", "moreover"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N (G 0) (discounted_value r (prices Mkt stk) (Suc 0)))\n   (prices Mkt stk 0)\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d)", "have \"AE w in N. real_cond_exp N (G 0) (discounted_value r (prices Mkt stk) (Suc 0)) w =\n    discounted_value r (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk 0 w) (Suc 0) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G 0) (discounted_value r (prices Mkt stk) (Suc 0)))\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk 0 w) (Suc 0))", "using assms real_cond_exp_discount_stock"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  martingale N G (discounted_value r (prices Mkt stk))\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> AEeq ?N\n                     (real_cond_exp ?N (G ?n)\n                       (discounted_value r (prices Mkt stk) (Suc ?n)))\n                     (discounted_value r\n                       (\\<lambda>m w.\n                           (?q * u + (1 - ?q) * d) * prices Mkt stk ?n w)\n                       (Suc ?n))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G 0) (discounted_value r (prices Mkt stk) (Suc 0)))\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk 0 w) (Suc 0))", "by simp"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N (G 0) (discounted_value r (prices Mkt stk) (Suc 0)))\n   (discounted_value r\n     (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk 0 w) (Suc 0))\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d)", "ultimately"], ["proof (chain)\npicking this:\n  AEeq N\n   (real_cond_exp N (G 0) (discounted_value r (prices Mkt stk) (Suc 0)))\n   (prices Mkt stk 0)\n  AEeq N\n   (real_cond_exp N (G 0) (discounted_value r (prices Mkt stk) (Suc 0)))\n   (discounted_value r\n     (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk 0 w) (Suc 0))", "have \"AE w in N. discounted_value r (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk 0 w) (Suc 0) w =\n    prices Mkt stk 0 w\""], ["proof (prove)\nusing this:\n  AEeq N\n   (real_cond_exp N (G 0) (discounted_value r (prices Mkt stk) (Suc 0)))\n   (prices Mkt stk 0)\n  AEeq N\n   (real_cond_exp N (G 0) (discounted_value r (prices Mkt stk) (Suc 0)))\n   (discounted_value r\n     (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk 0 w) (Suc 0))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk 0 w) (Suc 0))\n     (prices Mkt stk 0)", "by auto"], ["proof (state)\nthis:\n  AEeq N\n   (discounted_value r\n     (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk 0 w) (Suc 0))\n   (prices Mkt stk 0)\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d)", "hence \"AE w in N. discounted_value r (\\<lambda>m w. (q * u + (1 - q) * d) * init) (Suc 0) w =\n    (\\<lambda>w. init) w\""], ["proof (prove)\nusing this:\n  AEeq N\n   (discounted_value r\n     (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk 0 w) (Suc 0))\n   (prices Mkt stk 0)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (discounted_value r (\\<lambda>m w. (q * u + (1 - q) * d) * init)\n       (Suc 0))\n     (\\<lambda>w. init)", "using stk_price geometric_process"], ["proof (prove)\nusing this:\n  AEeq N\n   (discounted_value r\n     (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk 0 w) (Suc 0))\n   (prices Mkt stk 0)\n  prices Mkt stk = geom_proc\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. AEeq N\n     (discounted_value r (\\<lambda>m w. (q * u + (1 - q) * d) * init)\n       (Suc 0))\n     (\\<lambda>w. init)", "by simp"], ["proof (state)\nthis:\n  AEeq N\n   (discounted_value r (\\<lambda>m w. (q * u + (1 - q) * d) * init) (Suc 0))\n   (\\<lambda>w. init)\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d)", "hence \"AE w in N. discount_factor r (Suc 0) w * (q * u + (1 - q) * d) * init =\n    (\\<lambda>w. init) w\""], ["proof (prove)\nusing this:\n  AEeq N\n   (discounted_value r (\\<lambda>m w. (q * u + (1 - q) * d) * init) (Suc 0))\n   (\\<lambda>w. init)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w * (q * u + (1 - q) * d) * init)\n     (\\<lambda>w. init)", "unfolding discounted_value_def"], ["proof (prove)\nusing this:\n  AEeq N\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w * ((q * u + (1 - q) * d) * init))\n   (\\<lambda>w. init)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w * (q * u + (1 - q) * d) * init)\n     (\\<lambda>w. init)", "by simp"], ["proof (state)\nthis:\n  AEeq N\n   (\\<lambda>w. discount_factor r (Suc 0) w * (q * u + (1 - q) * d) * init)\n   (\\<lambda>w. init)\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d)", "hence \"AE w in N. (1+r) * discount_factor r (Suc 0) w * (q * u + (1 - q) * d) * init =\n    (1+r) * (\\<lambda>w. init) w\""], ["proof (prove)\nusing this:\n  AEeq N\n   (\\<lambda>w. discount_factor r (Suc 0) w * (q * u + (1 - q) * d) * init)\n   (\\<lambda>w. init)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         (1 + r) * discount_factor r (Suc 0) w * (q * u + (1 - q) * d) *\n         init)\n     (\\<lambda>w. (1 + r) * init)", "by auto"], ["proof (state)\nthis:\n  AEeq N\n   (\\<lambda>w.\n       (1 + r) * discount_factor r (Suc 0) w * (q * u + (1 - q) * d) * init)\n   (\\<lambda>w. (1 + r) * init)\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d)", "hence prev: \"AE w in N. discount_factor r 0 w * (q * u + (1 - q) * d) * init =\n    (1+r) * (\\<lambda>w. init) w\""], ["proof (prove)\nusing this:\n  AEeq N\n   (\\<lambda>w.\n       (1 + r) * discount_factor r (Suc 0) w * (q * u + (1 - q) * d) * init)\n   (\\<lambda>w. (1 + r) * init)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n     (\\<lambda>w. (1 + r) * init)", "using discount_factor_times_rfr[of r 0] acceptable_rate"], ["proof (prove)\nusing this:\n  AEeq N\n   (\\<lambda>w.\n       (1 + r) * discount_factor r (Suc 0) w * (q * u + (1 - q) * d) * init)\n   (\\<lambda>w. (1 + r) * init)\n  - 1 < r \\<Longrightarrow>\n  (1 + r) * discount_factor r (Suc 0) ?w = discount_factor r 0 ?w\n  - 1 < r\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n     (\\<lambda>w. (1 + r) * init)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>AEeq N\n              (\\<lambda>w.\n                  (1 + r) * discount_factor r (Suc 0) w *\n                  (q * u + (1 - q) * d) *\n                  init)\n              (\\<lambda>w. (1 + r) * init);\n     \\<And>w.\n        - 1 < r \\<Longrightarrow>\n        (1 + r) * discount_factor r (Suc 0) w = discount_factor r 0 w;\n     - 1 < r\\<rbrakk>\n    \\<Longrightarrow> AEeq N\n                       (\\<lambda>w.\n                           discount_factor r 0 w * (q * u + (1 - q) * d) *\n                           init)\n                       (\\<lambda>w. (1 + r) * init)", "have \"\\<forall>s. (1 + r) * discount_factor r (Suc 0) (s::bool stream) = discount_factor r 0 s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       (1 + r) * discount_factor r (Suc 0) s = discount_factor r 0 s", "by (metis (no_types) \\<open>\\<And>w. - 1 < r \\<Longrightarrow> (1 + r) * discount_factor r (Suc 0) w = discount_factor r 0 w\\<close> acceptable_rate)"], ["proof (state)\nthis:\n  \\<forall>s. (1 + r) * discount_factor r (Suc 0) s = discount_factor r 0 s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>AEeq N\n              (\\<lambda>w.\n                  (1 + r) * discount_factor r (Suc 0) w *\n                  (q * u + (1 - q) * d) *\n                  init)\n              (\\<lambda>w. (1 + r) * init);\n     \\<And>w.\n        - 1 < r \\<Longrightarrow>\n        (1 + r) * discount_factor r (Suc 0) w = discount_factor r 0 w;\n     - 1 < r\\<rbrakk>\n    \\<Longrightarrow> AEeq N\n                       (\\<lambda>w.\n                           discount_factor r 0 w * (q * u + (1 - q) * d) *\n                           init)\n                       (\\<lambda>w. (1 + r) * init)", "then"], ["proof (chain)\npicking this:\n  \\<forall>s. (1 + r) * discount_factor r (Suc 0) s = discount_factor r 0 s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>s. (1 + r) * discount_factor r (Suc 0) s = discount_factor r 0 s\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n     (\\<lambda>w. (1 + r) * init)", "using \\<open>AEeq N (\\<lambda>w. (1 + r) * discount_factor r (Suc 0) w * (q * u + (1 - q) * d) * init) (\\<lambda>w. (1 + r) * init)\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>s. (1 + r) * discount_factor r (Suc 0) s = discount_factor r 0 s\n  AEeq N\n   (\\<lambda>w.\n       (1 + r) * discount_factor r (Suc 0) w * (q * u + (1 - q) * d) * init)\n   (\\<lambda>w. (1 + r) * init)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n     (\\<lambda>w. (1 + r) * init)", "by presburger"], ["proof (state)\nthis:\n  AEeq N (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n   (\\<lambda>w. (1 + r) * init)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AEeq N (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n   (\\<lambda>w. (1 + r) * init)\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d)", "hence \"\\<forall>w. (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init) w =\n    (\\<lambda>w. (1+r) * init) w\""], ["proof (prove)\nusing this:\n  AEeq N (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n   (\\<lambda>w. (1 + r) * init)\n\ngoal (1 subgoal):\n 1. \\<forall>w.\n       discount_factor r 0 w * (q * u + (1 - q) * d) * init = (1 + r) * init", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n     (\\<lambda>w. (1 + r) * init) \\<Longrightarrow>\n    \\<forall>w.\n       discount_factor r 0 w * (q * u + (1 - q) * d) * init = (1 + r) * init", "have \"(\\<lambda>w. discount_factor r 0 w *  (q * u + (1 - q) * d) * init)\n      \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)", "proof (rule borel_measurable_times)+"], ["proof (state)\ngoal (3 subgoals):\n 1. discount_factor r 0\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\n 2. (\\<lambda>x. q * u + (1 - q) * d)\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\n 3. (\\<lambda>x. init)\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)", "show \"(\\<lambda>x. init) \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. init)\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. init)\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\n\ngoal (2 subgoals):\n 1. discount_factor r 0\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\n 2. (\\<lambda>x. q * u + (1 - q) * d)\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)", "show \"(\\<lambda>x. q * u + (1 - q) * d) \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. q * u + (1 - q) * d)\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. q * u + (1 - q) * d)\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\n\ngoal (1 subgoal):\n 1. discount_factor r 0\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)", "show \"discount_factor r 0 \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discount_factor r 0\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)", "using discount_factor_nonrandom[of r 0 \"infinite_coin_toss_space.nat_filtration N 0\"]"], ["proof (prove)\nusing this:\n  discount_factor r 0\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\n\ngoal (1 subgoal):\n 1. discount_factor r 0\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)", "by simp"], ["proof (state)\nthis:\n  discount_factor r 0\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n     (\\<lambda>w. (1 + r) * init) \\<Longrightarrow>\n    \\<forall>w.\n       discount_factor r 0 w * (q * u + (1 - q) * d) * init = (1 + r) * init", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n     (\\<lambda>w. (1 + r) * init) \\<Longrightarrow>\n    \\<forall>w.\n       discount_factor r 0 w * (q * u + (1 - q) * d) * init = (1 + r) * init", "have \"(\\<lambda>w. (1 + r) * init) \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. (1 + r) * init)\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. (1 + r) * init)\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n     (\\<lambda>w. (1 + r) * init) \\<Longrightarrow>\n    \\<forall>w.\n       discount_factor r 0 w * (q * u + (1 - q) * d) * init = (1 + r) * init", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>w. (1 + r) * init)\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n     (\\<lambda>w. (1 + r) * init) \\<Longrightarrow>\n    \\<forall>w.\n       discount_factor r 0 w * (q * u + (1 - q) * d) * init = (1 + r) * init", "have \"infinite_coin_toss_space q N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  martingale N G (discounted_value r (prices Mkt stk))\n\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "by (simp add: infinite_coin_toss_space_def)"], ["proof (state)\nthis:\n  infinite_coin_toss_space q N\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n     (\\<lambda>w. (1 + r) * init) \\<Longrightarrow>\n    \\<forall>w.\n       discount_factor r 0 w * (q * u + (1 - q) * d) * init = (1 + r) * init", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\n  (\\<lambda>w. (1 + r) * init)\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\n  infinite_coin_toss_space q N", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\n  (\\<lambda>w. (1 + r) * init)\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\n  infinite_coin_toss_space q N\n\ngoal (1 subgoal):\n 1. \\<forall>w.\n       discount_factor r 0 w * (q * u + (1 - q) * d) * init = (1 + r) * init", "using  prev infinite_coin_toss_space.nat_filtration_AE_eq[of q N\n        \"(\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\" \"(\\<lambda>w. (1 + r) * init)\" 0] assms"], ["proof (prove)\nusing this:\n  (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\n  (\\<lambda>w. (1 + r) * init)\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0)\n  infinite_coin_toss_space q N\n  AEeq N (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n   (\\<lambda>w. (1 + r) * init)\n  \\<lbrakk>infinite_coin_toss_space q N;\n   AEeq N (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n    (\\<lambda>w. (1 + r) * init);\n   0 < q; q < 1;\n   (\\<lambda>w. discount_factor r 0 w * (q * u + (1 - q) * d) * init)\n   \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N 0);\n   (\\<lambda>w. (1 + r) * init)\n   \\<in> borel_measurable\n          (infinite_coin_toss_space.nat_filtration N 0)\\<rbrakk>\n  \\<Longrightarrow> discount_factor r 0 ?w * (q * u + (1 - q) * d) * init =\n                    (1 + r) * init\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  martingale N G (discounted_value r (prices Mkt stk))\n\ngoal (1 subgoal):\n 1. \\<forall>w.\n       discount_factor r 0 w * (q * u + (1 - q) * d) * init = (1 + r) * init", "by (simp add: discount_factor_init)"], ["proof (state)\nthis:\n  \\<forall>w.\n     discount_factor r 0 w * (q * u + (1 - q) * d) * init = (1 + r) * init\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w.\n     discount_factor r 0 w * (q * u + (1 - q) * d) * init = (1 + r) * init\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d)", "hence \"(q * u + (1 - q) * d) * init = (1+r) * init\""], ["proof (prove)\nusing this:\n  \\<forall>w.\n     discount_factor r 0 w * (q * u + (1 - q) * d) * init = (1 + r) * init\n\ngoal (1 subgoal):\n 1. (q * u + (1 - q) * d) * init = (1 + r) * init", "by (simp add: discount_factor_init)"], ["proof (state)\nthis:\n  (q * u + (1 - q) * d) * init = (1 + r) * init\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d)", "hence \"q * u + (1 - q) * d = 1+r\""], ["proof (prove)\nusing this:\n  (q * u + (1 - q) * d) * init = (1 + r) * init\n\ngoal (1 subgoal):\n 1. q * u + (1 - q) * d = 1 + r", "using S0_positive"], ["proof (prove)\nusing this:\n  (q * u + (1 - q) * d) * init = (1 + r) * init\n  0 < init\n\ngoal (1 subgoal):\n 1. q * u + (1 - q) * d = 1 + r", "by simp"], ["proof (state)\nthis:\n  q * u + (1 - q) * d = 1 + r\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d)", "hence \"q * u + d - q * d = 1+r\""], ["proof (prove)\nusing this:\n  q * u + (1 - q) * d = 1 + r\n\ngoal (1 subgoal):\n 1. q * u + d - q * d = 1 + r", "by (simp add: left_diff_distrib)"], ["proof (state)\nthis:\n  q * u + d - q * d = 1 + r\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d)", "hence \"q * (u - d) = 1 + r - d\""], ["proof (prove)\nusing this:\n  q * u + d - q * d = 1 + r\n\ngoal (1 subgoal):\n 1. q * (u - d) = 1 + r - d", "by (metis (no_types, hide_lams) add.commute add.left_commute add_diff_cancel_left' add_uminus_conv_diff left_diff_distrib mult.commute)"], ["proof (state)\nthis:\n  q * (u - d) = 1 + r - d\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d)", "thus \"q = (1 + r - d) / (u - d)\""], ["proof (prove)\nusing this:\n  q * (u - d) = 1 + r - d\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d)", "using down_lt_up"], ["proof (prove)\nusing this:\n  q * (u - d) = 1 + r - d\n  d < u\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d)", "by (metis add.commute add.right_neutral diff_add_cancel nonzero_eq_divide_eq order_less_irrefl)"], ["proof (state)\nthis:\n  q = (1 + r - d) / (u - d)\n\ngoal:\nNo subgoals!", "qed"], ["", "locale CRR_market_viable = CRR_market +\n  assumes CRR_viable: \"viable_market Mkt\""], ["", "lemma (in CRR_market_viable) real_cond_exp_discount_stock_q_const:\n  assumes \"N = bernoulli_stream q\"\nand \"q = (1+r-d) / (u-d)\"\nshows \"AE w in N. real_cond_exp N (G n)\n   (discounted_value r (prices Mkt stk) (Suc n)) w =\n                  discounted_value r (prices Mkt stk) n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r (prices Mkt stk) n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r (prices Mkt stk) n)", "have qlt: \"0 < q\" and qgt: \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "using assms gt_param lt_param CRR_viable"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  q = (1 + r - d) / (u - d)\n  \\<lbrakk>?q = (1 + r - d) / (u - d); viable_market Mkt\\<rbrakk>\n  \\<Longrightarrow> 0 < ?q\n  \\<lbrakk>?q = (1 + r - d) / (u - d); viable_market Mkt\\<rbrakk>\n  \\<Longrightarrow> ?q < 1\n  viable_market Mkt\n\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "by auto"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r (prices Mkt stk) n)", "have \"AE w in N. real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)) w =\n                  discounted_value r (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))", "using assms real_cond_exp_discount_stock[of N q] qlt qgt"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  q = (1 + r - d) / (u - d)\n  \\<lbrakk>N = bernoulli_stream q; 0 < q; q < 1\\<rbrakk>\n  \\<Longrightarrow> AEeq N\n                     (real_cond_exp N (G ?n)\n                       (discounted_value r (prices Mkt stk) (Suc ?n)))\n                     (discounted_value r\n                       (\\<lambda>m w.\n                           (q * u + (1 - q) * d) * prices Mkt stk ?n w)\n                       (Suc ?n))\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r\n       (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))", "by simp"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n   (discounted_value r\n     (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r (prices Mkt stk) n)", "moreover"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n   (discounted_value r\n     (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r (prices Mkt stk) n)", "have \"\\<forall>w. (q * u + (1 - q) * d) * prices Mkt stk n w =\n    (1+r) * prices Mkt stk n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w.\n       (q * u + (1 - q) * d) * prices Mkt stk n w =\n       (1 + r) * prices Mkt stk n w", "using risk_neutral_param assms CRR_viable"], ["proof (prove)\nusing this:\n  \\<lbrakk>?q = (1 + r - d) / (u - d); viable_market Mkt\\<rbrakk>\n  \\<Longrightarrow> u * ?q + d * (1 - ?q) = 1 + r\n  N = bernoulli_stream q\n  q = (1 + r - d) / (u - d)\n  viable_market Mkt\n\ngoal (1 subgoal):\n 1. \\<forall>w.\n       (q * u + (1 - q) * d) * prices Mkt stk n w =\n       (1 + r) * prices Mkt stk n w", "by (simp add: mult.commute)"], ["proof (state)\nthis:\n  \\<forall>w.\n     (q * u + (1 - q) * d) * prices Mkt stk n w =\n     (1 + r) * prices Mkt stk n w\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r (prices Mkt stk) n)", "ultimately"], ["proof (chain)\npicking this:\n  AEeq N\n   (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n   (discounted_value r\n     (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))\n  \\<forall>w.\n     (q * u + (1 - q) * d) * prices Mkt stk n w =\n     (1 + r) * prices Mkt stk n w", "have \"AE w in N. real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)) w =\n                  discounted_value r (\\<lambda>m w. (1+r) * prices Mkt stk n w) (Suc n) w\""], ["proof (prove)\nusing this:\n  AEeq N\n   (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n   (discounted_value r\n     (\\<lambda>m w. (q * u + (1 - q) * d) * prices Mkt stk n w) (Suc n))\n  \\<forall>w.\n     (q * u + (1 - q) * d) * prices Mkt stk n w =\n     (1 + r) * prices Mkt stk n w\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r (\\<lambda>m w. (1 + r) * prices Mkt stk n w)\n       (Suc n))", "by simp"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n   (discounted_value r (\\<lambda>m w. (1 + r) * prices Mkt stk n w) (Suc n))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r (prices Mkt stk) n)", "moreover"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n   (discounted_value r (\\<lambda>m w. (1 + r) * prices Mkt stk n w) (Suc n))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r (prices Mkt stk) n)", "have \"\\<forall>w\\<in> space N. discounted_value r (\\<lambda>m w. (1+r) * prices Mkt stk n w) (Suc n) w =\n                     discounted_value r (\\<lambda>m w. prices Mkt stk n w) n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>space N.\n       discounted_value r (\\<lambda>m w. (1 + r) * prices Mkt stk n w)\n        (Suc n) w =\n       discounted_value r (\\<lambda>m. prices Mkt stk n) n w", "using  acceptable_rate"], ["proof (prove)\nusing this:\n  - 1 < r\n\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>space N.\n       discounted_value r (\\<lambda>m w. (1 + r) * prices Mkt stk n w)\n        (Suc n) w =\n       discounted_value r (\\<lambda>m. prices Mkt stk n) n w", "by (simp add:discounted_mult_times_rfr)"], ["proof (state)\nthis:\n  \\<forall>w\\<in>space N.\n     discounted_value r (\\<lambda>m w. (1 + r) * prices Mkt stk n w) (Suc n)\n      w =\n     discounted_value r (\\<lambda>m. prices Mkt stk n) n w\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r (prices Mkt stk) n)", "moreover"], ["proof (state)\nthis:\n  \\<forall>w\\<in>space N.\n     discounted_value r (\\<lambda>m w. (1 + r) * prices Mkt stk n w) (Suc n)\n      w =\n     discounted_value r (\\<lambda>m. prices Mkt stk n) n w\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r (prices Mkt stk) n)", "hence \"\\<forall>w\\<in> space N. discounted_value r (\\<lambda>m w. (1+r) * prices Mkt stk n w) (Suc n) w =\n                     discounted_value r (prices Mkt stk) n w\""], ["proof (prove)\nusing this:\n  \\<forall>w\\<in>space N.\n     discounted_value r (\\<lambda>m w. (1 + r) * prices Mkt stk n w) (Suc n)\n      w =\n     discounted_value r (\\<lambda>m. prices Mkt stk n) n w\n\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>space N.\n       discounted_value r (\\<lambda>m w. (1 + r) * prices Mkt stk n w)\n        (Suc n) w =\n       discounted_value r (prices Mkt stk) n w", "using  acceptable_rate"], ["proof (prove)\nusing this:\n  \\<forall>w\\<in>space N.\n     discounted_value r (\\<lambda>m w. (1 + r) * prices Mkt stk n w) (Suc n)\n      w =\n     discounted_value r (\\<lambda>m. prices Mkt stk n) n w\n  - 1 < r\n\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>space N.\n       discounted_value r (\\<lambda>m w. (1 + r) * prices Mkt stk n w)\n        (Suc n) w =\n       discounted_value r (prices Mkt stk) n w", "by (simp add:discounted_value_def)"], ["proof (state)\nthis:\n  \\<forall>w\\<in>space N.\n     discounted_value r (\\<lambda>m w. (1 + r) * prices Mkt stk n w) (Suc n)\n      w =\n     discounted_value r (prices Mkt stk) n w\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r (prices Mkt stk) n)", "ultimately"], ["proof (chain)\npicking this:\n  AEeq N\n   (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n   (discounted_value r (\\<lambda>m w. (1 + r) * prices Mkt stk n w) (Suc n))\n  \\<forall>w\\<in>space N.\n     discounted_value r (\\<lambda>m w. (1 + r) * prices Mkt stk n w) (Suc n)\n      w =\n     discounted_value r (\\<lambda>m. prices Mkt stk n) n w\n  \\<forall>w\\<in>space N.\n     discounted_value r (\\<lambda>m w. (1 + r) * prices Mkt stk n w) (Suc n)\n      w =\n     discounted_value r (prices Mkt stk) n w", "show \"AE w in N. real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)) w =\n                    discounted_value r (prices Mkt stk) n w\""], ["proof (prove)\nusing this:\n  AEeq N\n   (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n   (discounted_value r (\\<lambda>m w. (1 + r) * prices Mkt stk n w) (Suc n))\n  \\<forall>w\\<in>space N.\n     discounted_value r (\\<lambda>m w. (1 + r) * prices Mkt stk n w) (Suc n)\n      w =\n     discounted_value r (\\<lambda>m. prices Mkt stk n) n w\n  \\<forall>w\\<in>space N.\n     discounted_value r (\\<lambda>m w. (1 + r) * prices Mkt stk n w) (Suc n)\n      w =\n     discounted_value r (prices Mkt stk) n w\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r (prices Mkt stk) n)", "by simp"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n   (discounted_value r (prices Mkt stk) n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market_viable) risky_asset_martingale_if:\n  assumes \"N = bernoulli_stream q\"\n  and \"q = (1 + r - d) / (u - d)\"\nshows \"martingale N G (discounted_value r (prices Mkt stk))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. martingale N G (discounted_value r (prices Mkt stk))", "proof (rule disc_martingale_charact)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<forall>n. integrable N (discounted_value r (prices Mkt stk) n)\n 2. Filtration.filtration N G\n 3. \\<forall>m. sigma_finite_subalgebra N (G m)\n 4. \\<forall>m.\n       discounted_value r (prices Mkt stk) m \\<in> borel_measurable (G m)\n 5. \\<forall>n.\n       AEeq N\n        (real_cond_exp N (G n)\n          (discounted_value r (prices Mkt stk) (Suc n)))\n        (discounted_value r (prices Mkt stk) n)", "have qlt: \"0 < q\" and qgt: \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "using assms gt_param lt_param CRR_viable"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  q = (1 + r - d) / (u - d)\n  \\<lbrakk>?q = (1 + r - d) / (u - d); viable_market Mkt\\<rbrakk>\n  \\<Longrightarrow> 0 < ?q\n  \\<lbrakk>?q = (1 + r - d) / (u - d); viable_market Mkt\\<rbrakk>\n  \\<Longrightarrow> ?q < 1\n  viable_market Mkt\n\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "by auto"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal (5 subgoals):\n 1. \\<forall>n. integrable N (discounted_value r (prices Mkt stk) n)\n 2. Filtration.filtration N G\n 3. \\<forall>m. sigma_finite_subalgebra N (G m)\n 4. \\<forall>m.\n       discounted_value r (prices Mkt stk) m \\<in> borel_measurable (G m)\n 5. \\<forall>n.\n       AEeq N\n        (real_cond_exp N (G n)\n          (discounted_value r (prices Mkt stk) (Suc n)))\n        (discounted_value r (prices Mkt stk) n)", "show \"\\<forall>n. integrable N (discounted_value r (prices Mkt stk) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. integrable N (discounted_value r (prices Mkt stk) n)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. integrable N (discounted_value r (prices Mkt stk) n)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. integrable N (discounted_value r (prices Mkt stk) n)", "show \"integrable N (discounted_value r (prices Mkt stk) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable N (discounted_value r (prices Mkt stk) n)", "proof (rule discounted_integrable)"], ["proof (state)\ngoal (3 subgoals):\n 1. integrable N (prices Mkt stk n)\n 2. - 1 < r\n 3. space N = space M", "show \"space N = space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space N = space M", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  q = (1 + r - d) / (u - d)\n\ngoal (1 subgoal):\n 1. space N = space M", "by (simp add: bernoulli bernoulli_stream_space)"], ["proof (state)\nthis:\n  space N = space M\n\ngoal (2 subgoals):\n 1. integrable N (prices Mkt stk n)\n 2. - 1 < r", "show \"integrable N (prices Mkt stk n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable N (prices Mkt stk n)", "proof (rule infinite_coin_toss_space.nat_filtration_borel_measurable_integrable)"], ["proof (state)\ngoal (2 subgoals):\n 1. infinite_coin_toss_space ?p N\n 2. prices Mkt stk n\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)", "show \"infinite_coin_toss_space q N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "using assms qlt qgt"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  q = (1 + r - d) / (u - d)\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "by (simp add: infinite_coin_toss_space_def)"], ["proof (state)\nthis:\n  infinite_coin_toss_space q N\n\ngoal (1 subgoal):\n 1. prices Mkt stk n\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)", "show \"prices Mkt stk n \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prices Mkt stk n\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "using geom_rand_walk_borel_adapted stk_price  nat_filtration_from_eq_sets"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  prices Mkt stk = geom_proc\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> sets (infinite_coin_toss_space.nat_filtration ?N ?n) =\n                    sets (nat_filtration ?n)\n\ngoal (1 subgoal):\n 1. prices Mkt stk n\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "unfolding adapt_stoch_proc_def"], ["proof (prove)\nusing this:\n  \\<forall>t. geom_proc t \\<in> borel_measurable (nat_filtration t)\n  prices Mkt stk = geom_proc\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> sets (infinite_coin_toss_space.nat_filtration ?N ?n) =\n                    sets (nat_filtration ?n)\n\ngoal (1 subgoal):\n 1. prices Mkt stk n\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "by (metis \\<open>infinite_coin_toss_space q N\\<close> borel_measurable_integrable geom_proc_integrable geom_rand_walk_pseudo_proj_True\n              infinite_coin_toss_space.nat_filtration_borel_measurable_characterization infinite_coin_toss_space_def)"], ["proof (state)\nthis:\n  prices Mkt stk n\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  integrable N (prices Mkt stk n)\n\ngoal (1 subgoal):\n 1. - 1 < r", "show \"-1 < r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 < r", "using acceptable_rate"], ["proof (prove)\nusing this:\n  - 1 < r\n\ngoal (1 subgoal):\n 1. - 1 < r", "by simp"], ["proof (state)\nthis:\n  - 1 < r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  integrable N (discounted_value r (prices Mkt stk) n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n. integrable N (discounted_value r (prices Mkt stk) n)\n\ngoal (4 subgoals):\n 1. Filtration.filtration N G\n 2. \\<forall>m. sigma_finite_subalgebra N (G m)\n 3. \\<forall>m.\n       discounted_value r (prices Mkt stk) m \\<in> borel_measurable (G m)\n 4. \\<forall>n.\n       AEeq N\n        (real_cond_exp N (G n)\n          (discounted_value r (prices Mkt stk) (Suc n)))\n        (discounted_value r (prices Mkt stk) n)", "show \"filtration N G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Filtration.filtration N G", "using qlt qgt"], ["proof (prove)\nusing this:\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. Filtration.filtration N G", "by (simp add: bernoulli_gen_filtration assms)"], ["proof (state)\nthis:\n  Filtration.filtration N G\n\ngoal (3 subgoals):\n 1. \\<forall>m. sigma_finite_subalgebra N (G m)\n 2. \\<forall>m.\n       discounted_value r (prices Mkt stk) m \\<in> borel_measurable (G m)\n 3. \\<forall>n.\n       AEeq N\n        (real_cond_exp N (G n)\n          (discounted_value r (prices Mkt stk) (Suc n)))\n        (discounted_value r (prices Mkt stk) n)", "show \"\\<forall>n. sigma_finite_subalgebra N (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. sigma_finite_subalgebra N (G n)", "using qlt qgt"], ["proof (prove)\nusing this:\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. \\<forall>n. sigma_finite_subalgebra N (G n)", "by (simp add: assms bernoulli_sigma_finite)"], ["proof (state)\nthis:\n  \\<forall>n. sigma_finite_subalgebra N (G n)\n\ngoal (2 subgoals):\n 1. \\<forall>m.\n       discounted_value r (prices Mkt stk) m \\<in> borel_measurable (G m)\n 2. \\<forall>n.\n       AEeq N\n        (real_cond_exp N (G n)\n          (discounted_value r (prices Mkt stk) (Suc n)))\n        (discounted_value r (prices Mkt stk) n)", "show \"\\<forall>m. discounted_value r (prices Mkt stk) m \\<in> borel_measurable (G m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m.\n       discounted_value r (prices Mkt stk) m \\<in> borel_measurable (G m)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       discounted_value r (prices Mkt stk) m \\<in> borel_measurable (G m)", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       discounted_value r (prices Mkt stk) m \\<in> borel_measurable (G m)", "have \"discounted_value r (\\<lambda>ma. prices Mkt stk m) m \\<in> borel_measurable (G m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discounted_value r (\\<lambda>ma. prices Mkt stk m) m\n    \\<in> borel_measurable (G m)", "proof (rule discounted_measurable)"], ["proof (state)\ngoal (1 subgoal):\n 1. prices Mkt stk m \\<in> borel_measurable (G m)", "show \"prices Mkt stk m \\<in> borel_measurable (G m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prices Mkt stk m \\<in> borel_measurable (G m)", "using stock_price_borel_measurable"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc G (prices Mkt stk)\n\ngoal (1 subgoal):\n 1. prices Mkt stk m \\<in> borel_measurable (G m)", "unfolding adapt_stoch_proc_def"], ["proof (prove)\nusing this:\n  \\<forall>t. prices Mkt stk t \\<in> borel_measurable (G t)\n\ngoal (1 subgoal):\n 1. prices Mkt stk m \\<in> borel_measurable (G m)", "by simp"], ["proof (state)\nthis:\n  prices Mkt stk m \\<in> borel_measurable (G m)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  discounted_value r (\\<lambda>ma. prices Mkt stk m) m\n  \\<in> borel_measurable (G m)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       discounted_value r (prices Mkt stk) m \\<in> borel_measurable (G m)", "thus \"discounted_value r (prices Mkt stk) m \\<in> borel_measurable (G m)\""], ["proof (prove)\nusing this:\n  discounted_value r (\\<lambda>ma. prices Mkt stk m) m\n  \\<in> borel_measurable (G m)\n\ngoal (1 subgoal):\n 1. discounted_value r (prices Mkt stk) m \\<in> borel_measurable (G m)", "by (metis (mono_tags, lifting) discounted_value_def measurable_cong)"], ["proof (state)\nthis:\n  discounted_value r (prices Mkt stk) m \\<in> borel_measurable (G m)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>m.\n     discounted_value r (prices Mkt stk) m \\<in> borel_measurable (G m)\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       AEeq N\n        (real_cond_exp N (G n)\n          (discounted_value r (prices Mkt stk) (Suc n)))\n        (discounted_value r (prices Mkt stk) n)", "show \"\\<forall>n. AE w in N. real_cond_exp N (G n)\n       (discounted_value r (prices Mkt stk) (Suc n)) w = discounted_value r (prices Mkt stk) n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       AEeq N\n        (real_cond_exp N (G n)\n          (discounted_value r (prices Mkt stk) (Suc n)))\n        (discounted_value r (prices Mkt stk) n)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       AEeq N\n        (real_cond_exp N (G n)\n          (discounted_value r (prices Mkt stk) (Suc n)))\n        (discounted_value r (prices Mkt stk) n)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       AEeq N\n        (real_cond_exp N (G n)\n          (discounted_value r (prices Mkt stk) (Suc n)))\n        (discounted_value r (prices Mkt stk) n)", "show \"AE w in N. real_cond_exp N (G n)\n       (discounted_value r (prices Mkt stk) (Suc n)) w = discounted_value r (prices Mkt stk) n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r (prices Mkt stk) n)", "using assms real_cond_exp_discount_stock_q_const"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  q = (1 + r - d) / (u - d)\n  \\<lbrakk>?N = bernoulli_stream ?q; ?q = (1 + r - d) / (u - d)\\<rbrakk>\n  \\<Longrightarrow> AEeq ?N\n                     (real_cond_exp ?N (G ?n)\n                       (discounted_value r (prices Mkt stk) (Suc ?n)))\n                     (discounted_value r (prices Mkt stk) ?n)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n     (discounted_value r (prices Mkt stk) n)", "by simp"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n   (discounted_value r (prices Mkt stk) n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n.\n     AEeq N\n      (real_cond_exp N (G n) (discounted_value r (prices Mkt stk) (Suc n)))\n      (discounted_value r (prices Mkt stk) n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market_viable) risk_neutral_iff':\n  assumes \"N = bernoulli_stream q\"\nand \"0 \\<le> q\"\nand \"q \\<le> 1\"\nand \"filt_equiv nat_filtration M N\"\nshows \"rfr_disc_equity_market.risk_neutral_prob G Mkt r N \\<longleftrightarrow> q= (1 + r - d) / (u - d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. risk_neutral_prob N = (q = (1 + r - d) / (u - d))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. risk_neutral_prob N \\<Longrightarrow> q = (1 + r - d) / (u - d)\n 2. q = (1 + r - d) / (u - d) \\<Longrightarrow> risk_neutral_prob N", "have \"0 < q\" and \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "using assms filt_equiv_sgt filt_equiv_slt psgt pslt"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 \\<le> q\n  q \\<le> 1\n  filt_equiv nat_filtration M N\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 \\<le> ?q; ?q \\<le> 1; 0 < p; p < 1;\n   filt_equiv nat_filtration M ?N\\<rbrakk>\n  \\<Longrightarrow> 0 < ?q\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 \\<le> ?q; ?q \\<le> 1; 0 < p; p < 1;\n   filt_equiv nat_filtration M ?N\\<rbrakk>\n  \\<Longrightarrow> ?q < 1\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "by auto"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal (2 subgoals):\n 1. risk_neutral_prob N \\<Longrightarrow> q = (1 + r - d) / (u - d)\n 2. q = (1 + r - d) / (u - d) \\<Longrightarrow> risk_neutral_prob N", "note qprops = this"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal (2 subgoals):\n 1. risk_neutral_prob N \\<Longrightarrow> q = (1 + r - d) / (u - d)\n 2. q = (1 + r - d) / (u - d) \\<Longrightarrow> risk_neutral_prob N", "have dem: \"rfr_disc_equity_market M G Mkt r risk_free_asset\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rfr_disc_equity_market M G Mkt r risk_free_asset", "by unfold_locales"], ["proof (state)\nthis:\n  rfr_disc_equity_market M G Mkt r risk_free_asset\n\ngoal (2 subgoals):\n 1. risk_neutral_prob N \\<Longrightarrow> q = (1 + r - d) / (u - d)\n 2. q = (1 + r - d) / (u - d) \\<Longrightarrow> risk_neutral_prob N", "{"], ["proof (state)\nthis:\n  rfr_disc_equity_market M G Mkt r risk_free_asset\n\ngoal (2 subgoals):\n 1. risk_neutral_prob N \\<Longrightarrow> q = (1 + r - d) / (u - d)\n 2. q = (1 + r - d) / (u - d) \\<Longrightarrow> risk_neutral_prob N", "assume \"rfr_disc_equity_market.risk_neutral_prob G Mkt r N\""], ["proof (state)\nthis:\n  risk_neutral_prob N\n\ngoal (2 subgoals):\n 1. risk_neutral_prob N \\<Longrightarrow> q = (1 + r - d) / (u - d)\n 2. q = (1 + r - d) / (u - d) \\<Longrightarrow> risk_neutral_prob N", "hence \"(prob_space N) \\<and> (\\<forall> asset \\<in> stocks Mkt. martingale N G (discounted_value r (prices Mkt asset)))\""], ["proof (prove)\nusing this:\n  risk_neutral_prob N\n\ngoal (1 subgoal):\n 1. prob_space N \\<and>\n    (\\<forall>asset\\<in>stocks Mkt.\n        martingale N G (discounted_value r (prices Mkt asset)))", "using rfr_disc_equity_market.risk_neutral_prob_def[of M G Mkt] dem"], ["proof (prove)\nusing this:\n  risk_neutral_prob N\n  rfr_disc_equity_market M G Mkt ?r ?risk_free_asset \\<Longrightarrow>\n  rfr_disc_equity_market.risk_neutral_prob G Mkt ?r ?N =\n  (prob_space ?N \\<and>\n   (\\<forall>asset\\<in>stocks Mkt.\n       martingale ?N G (discounted_value ?r (prices Mkt asset))))\n  rfr_disc_equity_market M G Mkt r risk_free_asset\n\ngoal (1 subgoal):\n 1. prob_space N \\<and>\n    (\\<forall>asset\\<in>stocks Mkt.\n        martingale N G (discounted_value r (prices Mkt asset)))", "by simp"], ["proof (state)\nthis:\n  prob_space N \\<and>\n  (\\<forall>asset\\<in>stocks Mkt.\n      martingale N G (discounted_value r (prices Mkt asset)))\n\ngoal (2 subgoals):\n 1. risk_neutral_prob N \\<Longrightarrow> q = (1 + r - d) / (u - d)\n 2. q = (1 + r - d) / (u - d) \\<Longrightarrow> risk_neutral_prob N", "hence \"martingale N G (discounted_value r (prices Mkt stk))\""], ["proof (prove)\nusing this:\n  prob_space N \\<and>\n  (\\<forall>asset\\<in>stocks Mkt.\n      martingale N G (discounted_value r (prices Mkt asset)))\n\ngoal (1 subgoal):\n 1. martingale N G (discounted_value r (prices Mkt stk))", "using stocks"], ["proof (prove)\nusing this:\n  prob_space N \\<and>\n  (\\<forall>asset\\<in>stocks Mkt.\n      martingale N G (discounted_value r (prices Mkt asset)))\n  stocks Mkt = {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. martingale N G (discounted_value r (prices Mkt stk))", "by simp"], ["proof (state)\nthis:\n  martingale N G (discounted_value r (prices Mkt stk))\n\ngoal (2 subgoals):\n 1. risk_neutral_prob N \\<Longrightarrow> q = (1 + r - d) / (u - d)\n 2. q = (1 + r - d) / (u - d) \\<Longrightarrow> risk_neutral_prob N", "thus \"q = (1 + r - d) / (u - d)\""], ["proof (prove)\nusing this:\n  martingale N G (discounted_value r (prices Mkt stk))\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d)", "using assms risky_asset_martingale_only_if[of N q] qprops"], ["proof (prove)\nusing this:\n  martingale N G (discounted_value r (prices Mkt stk))\n  N = bernoulli_stream q\n  0 \\<le> q\n  q \\<le> 1\n  filt_equiv nat_filtration M N\n  \\<lbrakk>N = bernoulli_stream q; 0 < q; q < 1;\n   martingale N G (discounted_value r (prices Mkt stk))\\<rbrakk>\n  \\<Longrightarrow> q = (1 + r - d) / (u - d)\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d)", "by simp"], ["proof (state)\nthis:\n  q = (1 + r - d) / (u - d)\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d) \\<Longrightarrow> risk_neutral_prob N", "}"], ["proof (state)\nthis:\n  risk_neutral_prob N \\<Longrightarrow> q = (1 + r - d) / (u - d)\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d) \\<Longrightarrow> risk_neutral_prob N", "{"], ["proof (state)\nthis:\n  risk_neutral_prob N \\<Longrightarrow> q = (1 + r - d) / (u - d)\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d) \\<Longrightarrow> risk_neutral_prob N", "assume \"q = (1 + r - d) / (u - d)\""], ["proof (state)\nthis:\n  q = (1 + r - d) / (u - d)\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d) \\<Longrightarrow> risk_neutral_prob N", "hence \"martingale N G (discounted_value r (prices Mkt stk))\""], ["proof (prove)\nusing this:\n  q = (1 + r - d) / (u - d)\n\ngoal (1 subgoal):\n 1. martingale N G (discounted_value r (prices Mkt stk))", "using risky_asset_martingale_if[of N q] assms"], ["proof (prove)\nusing this:\n  q = (1 + r - d) / (u - d)\n  \\<lbrakk>N = bernoulli_stream q; q = (1 + r - d) / (u - d)\\<rbrakk>\n  \\<Longrightarrow> martingale N G (discounted_value r (prices Mkt stk))\n  N = bernoulli_stream q\n  0 \\<le> q\n  q \\<le> 1\n  filt_equiv nat_filtration M N\n\ngoal (1 subgoal):\n 1. martingale N G (discounted_value r (prices Mkt stk))", "by simp"], ["proof (state)\nthis:\n  martingale N G (discounted_value r (prices Mkt stk))\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d) \\<Longrightarrow> risk_neutral_prob N", "moreover"], ["proof (state)\nthis:\n  martingale N G (discounted_value r (prices Mkt stk))\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d) \\<Longrightarrow> risk_neutral_prob N", "have \"martingale N G (discounted_value r (prices Mkt risk_free_asset))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. martingale N G (discounted_value r (prices Mkt risk_free_asset))", "using risk_free_asset_martingale\n      assms qprops"], ["proof (prove)\nusing this:\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> martingale ?N G\n                     (discounted_value r (prices Mkt risk_free_asset))\n  N = bernoulli_stream q\n  0 \\<le> q\n  q \\<le> 1\n  filt_equiv nat_filtration M N\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. martingale N G (discounted_value r (prices Mkt risk_free_asset))", "by simp"], ["proof (state)\nthis:\n  martingale N G (discounted_value r (prices Mkt risk_free_asset))\n\ngoal (1 subgoal):\n 1. q = (1 + r - d) / (u - d) \\<Longrightarrow> risk_neutral_prob N", "ultimately"], ["proof (chain)\npicking this:\n  martingale N G (discounted_value r (prices Mkt stk))\n  martingale N G (discounted_value r (prices Mkt risk_free_asset))", "show \"rfr_disc_equity_market.risk_neutral_prob G Mkt r N\""], ["proof (prove)\nusing this:\n  martingale N G (discounted_value r (prices Mkt stk))\n  martingale N G (discounted_value r (prices Mkt risk_free_asset))\n\ngoal (1 subgoal):\n 1. risk_neutral_prob N", "using stocks"], ["proof (prove)\nusing this:\n  martingale N G (discounted_value r (prices Mkt stk))\n  martingale N G (discounted_value r (prices Mkt risk_free_asset))\n  stocks Mkt = {stk, risk_free_asset}\n\ngoal (1 subgoal):\n 1. risk_neutral_prob N", "using assms(1) bernoulli_stream_def dem prob_space.prob_space_stream_space prob_space_measure_pmf\n        rfr_disc_equity_market.risk_neutral_prob_def"], ["proof (prove)\nusing this:\n  martingale N G (discounted_value r (prices Mkt stk))\n  martingale N G (discounted_value r (prices Mkt risk_free_asset))\n  stocks Mkt = {stk, risk_free_asset}\n  N = bernoulli_stream q\n  bernoulli_stream ?p = stream_space (measure_pmf (bernoulli_pmf ?p))\n  rfr_disc_equity_market M G Mkt r risk_free_asset\n  prob_space ?M \\<Longrightarrow> prob_space (stream_space ?M)\n  prob_space (measure_pmf ?p)\n  rfr_disc_equity_market ?M ?F ?Mkt ?r ?risk_free_asset \\<Longrightarrow>\n  rfr_disc_equity_market.risk_neutral_prob ?F ?Mkt ?r ?N =\n  (prob_space ?N \\<and>\n   (\\<forall>asset\\<in>stocks ?Mkt.\n       martingale ?N ?F (discounted_value ?r (prices ?Mkt asset))))\n\ngoal (1 subgoal):\n 1. risk_neutral_prob N", "by fastforce"], ["proof (state)\nthis:\n  risk_neutral_prob N\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  q = (1 + r - d) / (u - d) \\<Longrightarrow> risk_neutral_prob N\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market_viable) risk_neutral_iff:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nshows \"rfr_disc_equity_market.risk_neutral_prob G Mkt r N \\<longleftrightarrow> q= (1 + r - d) / (u - d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. risk_neutral_prob N = (q = (1 + r - d) / (u - d))", "using bernoulli_stream_equiv assms risk_neutral_iff' psgt pslt"], ["proof (prove)\nusing this:\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < p; p < 1; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> filt_equiv nat_filtration M ?N\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 \\<le> ?q; ?q \\<le> 1;\n   filt_equiv nat_filtration M ?N\\<rbrakk>\n  \\<Longrightarrow> risk_neutral_prob ?N = (?q = (1 + r - d) / (u - d))\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. risk_neutral_prob N = (q = (1 + r - d) / (u - d))", "by auto"], ["", "subsection \\<open>Existence of a replicating portfolio\\<close>"], ["", "fun (in CRR_market) rn_rev_price where\n  \"rn_rev_price N der matur 0 w = der w\" |\n  \"rn_rev_price N der matur (Suc n) w = discount_factor r (Suc 0) w *\n                                  expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n)) (rn_rev_price N der matur n) w\""], ["", "lemma (in CRR_market) stock_filtration_eq:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nshows \"G n = stoch_proc_filt N geom_proc borel n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G n = stoch_proc_filt N geom_proc borel n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. G n = stoch_proc_filt N geom_proc borel n", "have \"G n= stoch_proc_filt M geom_proc borel n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G n = stoch_proc_filt M geom_proc borel n", "using stock_filtration"], ["proof (prove)\nusing this:\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. G n = stoch_proc_filt M geom_proc borel n", "by simp"], ["proof (state)\nthis:\n  G n = stoch_proc_filt M geom_proc borel n\n\ngoal (1 subgoal):\n 1. G n = stoch_proc_filt N geom_proc borel n", "also"], ["proof (state)\nthis:\n  G n = stoch_proc_filt M geom_proc borel n\n\ngoal (1 subgoal):\n 1. G n = stoch_proc_filt N geom_proc borel n", "have \"... = stoch_proc_filt N geom_proc borel n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stoch_proc_filt M geom_proc borel n =\n    stoch_proc_filt N geom_proc borel n", "proof (rule stoch_proc_filt_filt_equiv)"], ["proof (state)\ngoal (1 subgoal):\n 1. filt_equiv ?F M N", "show \"filt_equiv nat_filtration M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filt_equiv nat_filtration M N", "using assms bernoulli_stream_equiv psgt pslt"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < p; p < 1; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> filt_equiv nat_filtration M ?N\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. filt_equiv nat_filtration M N", "by simp"], ["proof (state)\nthis:\n  filt_equiv nat_filtration M N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  stoch_proc_filt M geom_proc borel n = stoch_proc_filt N geom_proc borel n\n\ngoal (1 subgoal):\n 1. G n = stoch_proc_filt N geom_proc borel n", "finally"], ["proof (chain)\npicking this:\n  G n = stoch_proc_filt N geom_proc borel n", "show ?thesis"], ["proof (prove)\nusing this:\n  G n = stoch_proc_filt N geom_proc borel n\n\ngoal (1 subgoal):\n 1. G n = stoch_proc_filt N geom_proc borel n", "."], ["proof (state)\nthis:\n  G n = stoch_proc_filt N geom_proc borel n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) real_exp_eq:\n  assumes \"der\\<in> borel_measurable (G matur)\"\nand \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nshows \"real_cond_exp N (stoch_proc_filt N geom_proc borel n) der w =\n      expl_cond_expect N (proj_stoch_proc geom_proc n) der w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel n) der w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) der w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel n) der w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) der w", "have \"der \\<in> borel_measurable (nat_filtration matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (nat_filtration matur)", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (nat_filtration matur)", "using geom_rand_walk_borel_adapted measurable_from_subalg stoch_proc_subalg_nat_filt stock_filtration"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  \\<lbrakk>subalgebra ?M ?F; ?f \\<in> ?F \\<rightarrow>\\<^sub>M ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> ?M \\<rightarrow>\\<^sub>M ?N\n  borel_adapt_stoch_proc nat_filtration ?X \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M ?X borel ?n)\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (nat_filtration matur)", "by blast"], ["proof (state)\nthis:\n  der \\<in> borel_measurable (nat_filtration matur)\n\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel n) der w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) der w", "have \"integrable N der\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable N der", "proof (rule infinite_coin_toss_space.nat_filtration_borel_measurable_integrable)"], ["proof (state)\ngoal (2 subgoals):\n 1. infinite_coin_toss_space ?p N\n 2. der\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)", "show \"infinite_coin_toss_space q N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "by (simp add: infinite_coin_toss_space_def)"], ["proof (state)\nthis:\n  infinite_coin_toss_space q N\n\ngoal (1 subgoal):\n 1. der\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)", "show \"der \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. der\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N matur)", "by (metis \\<open>der \\<in> borel_measurable (nat_filtration matur)\\<close> \\<open>infinite_coin_toss_space q N\\<close>\n          assms(2) assms(3) assms(4) infinite_coin_toss_space.nat_filtration_space measurable_from_subalg\n          nat_filtration_from_eq_sets nat_filtration_space subalgebra_def subset_eq)"], ["proof (state)\nthis:\n  der\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N matur)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  integrable N der\n\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel n) der w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) der w", "show \"real_cond_exp N (stoch_proc_filt N geom_proc borel n) der w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) der w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel n) der w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n) der w", "proof (rule bernoulli_cond_exp)"], ["proof (state)\ngoal (4 subgoals):\n 1. N = bernoulli_stream ?q\n 2. 0 < ?q\n 3. ?q < 1\n 4. integrable N der", "show \"N = bernoulli_stream q\" \"0 < q\" \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N = bernoulli_stream q &&& 0 < q &&& q < 1", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. N = bernoulli_stream q &&& 0 < q &&& q < 1", "by auto"], ["proof (state)\nthis:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. integrable N der", "show \"integrable N der\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable N der", "using \\<open>integrable N der\\<close>"], ["proof (prove)\nusing this:\n  integrable N der\n\ngoal (1 subgoal):\n 1. integrable N der", "."], ["proof (state)\nthis:\n  integrable N der\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real_cond_exp N (stoch_proc_filt N geom_proc borel n) der w =\n  expl_cond_expect N (proj_stoch_proc geom_proc n) der w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) rn_rev_price_rev_borel_adapt:\nassumes \"cash_flow \\<in> borel_measurable (G matur)\"\nand \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nshows \"(n \\<le> matur) \\<Longrightarrow> (rn_rev_price N cash_flow matur n) \\<in> borel_measurable (G (matur - n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> matur \\<Longrightarrow>\n    rn_rev_price N cash_flow matur n \\<in> borel_measurable (G (matur - n))", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> matur \\<Longrightarrow>\n    rn_rev_price N cash_flow matur 0 \\<in> borel_measurable (G (matur - 0))\n 2. \\<And>n.\n       \\<lbrakk>n \\<le> matur \\<Longrightarrow>\n                rn_rev_price N cash_flow matur n\n                \\<in> borel_measurable (G (matur - n));\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N cash_flow matur (Suc n)\n                         \\<in> borel_measurable (G (matur - Suc n))", "case 0"], ["proof (state)\nthis:\n  0 \\<le> matur\n\ngoal (2 subgoals):\n 1. 0 \\<le> matur \\<Longrightarrow>\n    rn_rev_price N cash_flow matur 0 \\<in> borel_measurable (G (matur - 0))\n 2. \\<And>n.\n       \\<lbrakk>n \\<le> matur \\<Longrightarrow>\n                rn_rev_price N cash_flow matur n\n                \\<in> borel_measurable (G (matur - n));\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N cash_flow matur (Suc n)\n                         \\<in> borel_measurable (G (matur - Suc n))", "thus ?case"], ["proof (prove)\nusing this:\n  0 \\<le> matur\n\ngoal (1 subgoal):\n 1. rn_rev_price N cash_flow matur 0 \\<in> borel_measurable (G (matur - 0))", "using assms"], ["proof (prove)\nusing this:\n  0 \\<le> matur\n  cash_flow \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. rn_rev_price N cash_flow matur 0 \\<in> borel_measurable (G (matur - 0))", "by simp"], ["proof (state)\nthis:\n  rn_rev_price N cash_flow matur 0 \\<in> borel_measurable (G (matur - 0))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n \\<le> matur \\<Longrightarrow>\n                rn_rev_price N cash_flow matur n\n                \\<in> borel_measurable (G (matur - n));\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N cash_flow matur (Suc n)\n                         \\<in> borel_measurable (G (matur - Suc n))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n \\<le> matur \\<Longrightarrow>\n                rn_rev_price N cash_flow matur n\n                \\<in> borel_measurable (G (matur - n));\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N cash_flow matur (Suc n)\n                         \\<in> borel_measurable (G (matur - Suc n))", "case (Suc n)"], ["proof (state)\nthis:\n  n \\<le> matur \\<Longrightarrow>\n  rn_rev_price N cash_flow matur n \\<in> borel_measurable (G (matur - n))\n  Suc n \\<le> matur\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n \\<le> matur \\<Longrightarrow>\n                rn_rev_price N cash_flow matur n\n                \\<in> borel_measurable (G (matur - n));\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N cash_flow matur (Suc n)\n                         \\<in> borel_measurable (G (matur - Suc n))", "have \"rn_rev_price N cash_flow matur (Suc n) =\n      (\\<lambda>w. discount_factor r (Suc 0) w *\n        (expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n)) (rn_rev_price N cash_flow matur n)) w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rn_rev_price N cash_flow matur (Suc n) =\n    (\\<lambda>w.\n        discount_factor r (Suc 0) w *\n        expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n         (rn_rev_price N cash_flow matur n) w)", "using rn_rev_price.simps(2)"], ["proof (prove)\nusing this:\n  rn_rev_price ?N ?der ?matur (Suc ?n) ?w =\n  discount_factor r (Suc 0) ?w *\n  expl_cond_expect ?N (proj_stoch_proc geom_proc (?matur - Suc ?n))\n   (rn_rev_price ?N ?der ?matur ?n) ?w\n\ngoal (1 subgoal):\n 1. rn_rev_price N cash_flow matur (Suc n) =\n    (\\<lambda>w.\n        discount_factor r (Suc 0) w *\n        expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n         (rn_rev_price N cash_flow matur n) w)", "by blast"], ["proof (state)\nthis:\n  rn_rev_price N cash_flow matur (Suc n) =\n  (\\<lambda>w.\n      discount_factor r (Suc 0) w *\n      expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n       (rn_rev_price N cash_flow matur n) w)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n \\<le> matur \\<Longrightarrow>\n                rn_rev_price N cash_flow matur n\n                \\<in> borel_measurable (G (matur - n));\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N cash_flow matur (Suc n)\n                         \\<in> borel_measurable (G (matur - Suc n))", "also"], ["proof (state)\nthis:\n  rn_rev_price N cash_flow matur (Suc n) =\n  (\\<lambda>w.\n      discount_factor r (Suc 0) w *\n      expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n       (rn_rev_price N cash_flow matur n) w)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n \\<le> matur \\<Longrightarrow>\n                rn_rev_price N cash_flow matur n\n                \\<in> borel_measurable (G (matur - n));\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N cash_flow matur (Suc n)\n                         \\<in> borel_measurable (G (matur - Suc n))", "have \"... \\<in> borel_measurable (G (matur - Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w.\n        discount_factor r (Suc 0) w *\n        expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n         (rn_rev_price N cash_flow matur n) w)\n    \\<in> borel_measurable (G (matur - Suc n))", "proof (rule borel_measurable_times)"], ["proof (state)\ngoal (2 subgoals):\n 1. discount_factor r (Suc 0) \\<in> borel_measurable (G (matur - Suc n))\n 2. expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n     (rn_rev_price N cash_flow matur n)\n    \\<in> borel_measurable (G (matur - Suc n))", "show \"discount_factor r (Suc 0) \\<in> borel_measurable (G (matur - Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discount_factor r (Suc 0) \\<in> borel_measurable (G (matur - Suc n))", "by (simp add:discount_factor_borel_measurable)"], ["proof (state)\nthis:\n  discount_factor r (Suc 0) \\<in> borel_measurable (G (matur - Suc n))\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n     (rn_rev_price N cash_flow matur n)\n    \\<in> borel_measurable (G (matur - Suc n))", "show \"expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n)) (rn_rev_price N cash_flow matur n)\n      \\<in> borel_measurable (G (matur - Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n     (rn_rev_price N cash_flow matur n)\n    \\<in> borel_measurable (G (matur - Suc n))", "using assms"], ["proof (prove)\nusing this:\n  cash_flow \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n     (rn_rev_price N cash_flow matur n)\n    \\<in> borel_measurable (G (matur - Suc n))", "by (simp add: bernoulli_expl_cond_expect_adapt)"], ["proof (state)\nthis:\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n   (rn_rev_price N cash_flow matur n)\n  \\<in> borel_measurable (G (matur - Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>w.\n      discount_factor r (Suc 0) w *\n      expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n       (rn_rev_price N cash_flow matur n) w)\n  \\<in> borel_measurable (G (matur - Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n \\<le> matur \\<Longrightarrow>\n                rn_rev_price N cash_flow matur n\n                \\<in> borel_measurable (G (matur - n));\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N cash_flow matur (Suc n)\n                         \\<in> borel_measurable (G (matur - Suc n))", "finally"], ["proof (chain)\npicking this:\n  rn_rev_price N cash_flow matur (Suc n)\n  \\<in> borel_measurable (G (matur - Suc n))", "show \"rn_rev_price N cash_flow matur (Suc n) \\<in> borel_measurable (G (matur - Suc n))\""], ["proof (prove)\nusing this:\n  rn_rev_price N cash_flow matur (Suc n)\n  \\<in> borel_measurable (G (matur - Suc n))\n\ngoal (1 subgoal):\n 1. rn_rev_price N cash_flow matur (Suc n)\n    \\<in> borel_measurable (G (matur - Suc n))", "."], ["proof (state)\nthis:\n  rn_rev_price N cash_flow matur (Suc n)\n  \\<in> borel_measurable (G (matur - Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) bernoulli_discounted_integrable:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\n  and \"der \\<in> borel_measurable (nat_filtration n)\"\nand \"-1 < r\"\n  shows \"integrable N (discounted_value r (\\<lambda>m. der) m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable N (discounted_value r (\\<lambda>m. der) m)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. integrable N (discounted_value r (\\<lambda>m. der) m)", "have \"prob_space N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space N", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  der \\<in> borel_measurable (nat_filtration n)\n  - 1 < r\n\ngoal (1 subgoal):\n 1. prob_space N", "by (simp add: bernoulli bernoulli_stream_def prob_space.prob_space_stream_space prob_space_measure_pmf)"], ["proof (state)\nthis:\n  prob_space N\n\ngoal (1 subgoal):\n 1. integrable N (discounted_value r (\\<lambda>m. der) m)", "have \"integrable N der\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable N der", "proof (rule infinite_coin_toss_space.nat_filtration_borel_measurable_integrable)"], ["proof (state)\ngoal (2 subgoals):\n 1. infinite_coin_toss_space ?p N\n 2. der\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)", "show \"infinite_coin_toss_space q N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  der \\<in> borel_measurable (nat_filtration n)\n  - 1 < r\n\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "by (simp add: infinite_coin_toss_space_def)"], ["proof (state)\nthis:\n  infinite_coin_toss_space q N\n\ngoal (1 subgoal):\n 1. der\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)", "show \"der \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "using assms filt_equiv_filtration"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  der \\<in> borel_measurable (nat_filtration n)\n  - 1 < r\n  filt_equiv ?F ?M ?N \\<Longrightarrow> Filtration.filtration ?N ?F\n\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)", "by (simp add: assms(1) measurable_def nat_filtration_from_eq_sets nat_filtration_space)"], ["proof (state)\nthis:\n  der \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  integrable N der\n\ngoal (1 subgoal):\n 1. integrable N (discounted_value r (\\<lambda>m. der) m)", "thus ?thesis"], ["proof (prove)\nusing this:\n  integrable N der\n\ngoal (1 subgoal):\n 1. integrable N (discounted_value r (\\<lambda>m. der) m)", "using discounted_integrable assms"], ["proof (prove)\nusing this:\n  integrable N der\n  \\<lbrakk>integrable ?N (?X ?n); - 1 < ?r; space ?N = space M\\<rbrakk>\n  \\<Longrightarrow> integrable ?N (discounted_value ?r ?X ?n)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  der \\<in> borel_measurable (nat_filtration n)\n  - 1 < r\n\ngoal (1 subgoal):\n 1. integrable N (discounted_value r (\\<lambda>m. der) m)", "by (metis \\<open>prob_space N\\<close> prob_space.discounted_integrable)"], ["proof (state)\nthis:\n  integrable N (discounted_value r (\\<lambda>m. der) m)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) rn_rev_expl_cond_expect:\n  assumes \"der\\<in> borel_measurable (G matur)\"\nand \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nshows \"n \\<le> matur \\<Longrightarrow> rn_rev_price N der matur n w =\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - n)) (discounted_value r (\\<lambda>m. der) n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> matur \\<Longrightarrow>\n    rn_rev_price N der matur n w =\n    expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n) w", "proof (induct n arbitrary: w)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>w.\n       0 \\<le> matur \\<Longrightarrow>\n       rn_rev_price N der matur 0 w =\n       expl_cond_expect N (proj_stoch_proc geom_proc (matur - 0))\n        (discounted_value r (\\<lambda>m. der) 0) w\n 2. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "case 0"], ["proof (state)\nthis:\n  0 \\<le> matur\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       0 \\<le> matur \\<Longrightarrow>\n       rn_rev_price N der matur 0 w =\n       expl_cond_expect N (proj_stoch_proc geom_proc (matur - 0))\n        (discounted_value r (\\<lambda>m. der) 0) w\n 2. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "have \"der \\<in> borel_measurable (nat_filtration matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (nat_filtration matur)", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (nat_filtration matur)", "using geom_rand_walk_borel_adapted measurable_from_subalg stoch_proc_subalg_nat_filt stock_filtration"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  \\<lbrakk>subalgebra ?M ?F; ?f \\<in> ?F \\<rightarrow>\\<^sub>M ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> ?M \\<rightarrow>\\<^sub>M ?N\n  borel_adapt_stoch_proc nat_filtration ?X \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M ?X borel ?n)\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (nat_filtration matur)", "by blast"], ["proof (state)\nthis:\n  der \\<in> borel_measurable (nat_filtration matur)\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       0 \\<le> matur \\<Longrightarrow>\n       rn_rev_price N der matur 0 w =\n       expl_cond_expect N (proj_stoch_proc geom_proc (matur - 0))\n        (discounted_value r (\\<lambda>m. der) 0) w\n 2. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "have \"integrable N der\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable N der", "proof (rule infinite_coin_toss_space.nat_filtration_borel_measurable_integrable)"], ["proof (state)\ngoal (2 subgoals):\n 1. infinite_coin_toss_space ?p N\n 2. der\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)", "show \"infinite_coin_toss_space q N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "by (simp add: infinite_coin_toss_space_def)"], ["proof (state)\nthis:\n  infinite_coin_toss_space q N\n\ngoal (1 subgoal):\n 1. der\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)", "show \"der \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. der\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N matur)", "by (metis \\<open>der \\<in> borel_measurable (nat_filtration matur)\\<close> \\<open>infinite_coin_toss_space q N\\<close>\n          assms(2) assms(3) assms(4) infinite_coin_toss_space.nat_filtration_space measurable_from_subalg\n          nat_filtration_from_eq_sets nat_filtration_space subalgebra_def subset_eq)"], ["proof (state)\nthis:\n  der\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N matur)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  integrable N der\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       0 \\<le> matur \\<Longrightarrow>\n       rn_rev_price N der matur 0 w =\n       expl_cond_expect N (proj_stoch_proc geom_proc (matur - 0))\n        (discounted_value r (\\<lambda>m. der) 0) w\n 2. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "have \"rn_rev_price N der matur 0 w = der w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rn_rev_price N der matur 0 w = der w", "by simp"], ["proof (state)\nthis:\n  rn_rev_price N der matur 0 w = der w\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       0 \\<le> matur \\<Longrightarrow>\n       rn_rev_price N der matur 0 w =\n       expl_cond_expect N (proj_stoch_proc geom_proc (matur - 0))\n        (discounted_value r (\\<lambda>m. der) 0) w\n 2. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "also"], ["proof (state)\nthis:\n  rn_rev_price N der matur 0 w = der w\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       0 \\<le> matur \\<Longrightarrow>\n       rn_rev_price N der matur 0 w =\n       expl_cond_expect N (proj_stoch_proc geom_proc (matur - 0))\n        (discounted_value r (\\<lambda>m. der) 0) w\n 2. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "have \"... = expl_cond_expect N (proj_stoch_proc geom_proc matur) (discounted_value r (\\<lambda>m. der) 0) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. der w =\n    expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0) w", "proof (rule nat_filtration_AE_eq)"], ["proof (state)\ngoal (5 subgoals):\n 1. AEeq M der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))\n 2. 0 < p\n 3. p < 1\n 4. der \\<in> borel_measurable (nat_filtration ?n)\n 5. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (nat_filtration ?n)", "show \"der \\<in> borel_measurable (nat_filtration matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (nat_filtration matur)", "using \\<open>der \\<in> borel_measurable (nat_filtration matur)\\<close>"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (nat_filtration matur)\n\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (nat_filtration matur)", "."], ["proof (state)\nthis:\n  der \\<in> borel_measurable (nat_filtration matur)\n\ngoal (4 subgoals):\n 1. AEeq M der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))\n 2. 0 < p\n 3. p < 1\n 4. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (nat_filtration matur)", "have \"(discounted_value r (\\<lambda>m. der) 0) = der\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discounted_value r (\\<lambda>m. der) 0 = der", "unfolding discounted_value_def discount_factor_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. inverse (disc_rfr_proc r 0 w) * der w) = der", "by simp"], ["proof (state)\nthis:\n  discounted_value r (\\<lambda>m. der) 0 = der\n\ngoal (4 subgoals):\n 1. AEeq M der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))\n 2. 0 < p\n 3. p < 1\n 4. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (nat_filtration matur)", "moreover"], ["proof (state)\nthis:\n  discounted_value r (\\<lambda>m. der) 0 = der\n\ngoal (4 subgoals):\n 1. AEeq M der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))\n 2. 0 < p\n 3. p < 1\n 4. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (nat_filtration matur)", "have \"AEeq N (real_cond_exp N (G matur) der) der\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N (real_cond_exp N (G matur) der) der", "proof (rule sigma_finite_subalgebra.real_cond_exp_F_meas)"], ["proof (state)\ngoal (3 subgoals):\n 1. sigma_finite_subalgebra N (G matur)\n 2. integrable N der\n 3. der \\<in> borel_measurable (G matur)", "show \"der \\<in> borel_measurable (G matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (G matur)", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (G matur)", "by simp"], ["proof (state)\nthis:\n  der \\<in> borel_measurable (G matur)\n\ngoal (2 subgoals):\n 1. sigma_finite_subalgebra N (G matur)\n 2. integrable N der", "show \"integrable N der\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable N der", "using \\<open>integrable N der\\<close>"], ["proof (prove)\nusing this:\n  integrable N der\n\ngoal (1 subgoal):\n 1. integrable N der", "."], ["proof (state)\nthis:\n  integrable N der\n\ngoal (1 subgoal):\n 1. sigma_finite_subalgebra N (G matur)", "show \"sigma_finite_subalgebra N (G matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_finite_subalgebra N (G matur)", "using bernoulli_sigma_finite"], ["proof (prove)\nusing this:\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>n. sigma_finite_subalgebra ?N (G n)\n\ngoal (1 subgoal):\n 1. sigma_finite_subalgebra N (G matur)", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>n. sigma_finite_subalgebra ?N (G n)\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. sigma_finite_subalgebra N (G matur)", "by simp"], ["proof (state)\nthis:\n  sigma_finite_subalgebra N (G matur)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AEeq N (real_cond_exp N (G matur) der) der\n\ngoal (4 subgoals):\n 1. AEeq M der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))\n 2. 0 < p\n 3. p < 1\n 4. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (nat_filtration matur)", "moreover"], ["proof (state)\nthis:\n  AEeq N (real_cond_exp N (G matur) der) der\n\ngoal (4 subgoals):\n 1. AEeq M der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))\n 2. 0 < p\n 3. p < 1\n 4. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (nat_filtration matur)", "have \"\\<forall>w. real_cond_exp N (stoch_proc_filt N geom_proc borel matur) der w =\n      expl_cond_expect N (proj_stoch_proc geom_proc matur) der w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w.\n       real_cond_exp N (stoch_proc_filt N geom_proc borel matur) der w =\n       expl_cond_expect N (proj_stoch_proc geom_proc matur) der w", "using assms real_exp_eq"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  \\<lbrakk>?der \\<in> borel_measurable (G ?matur); ?N = bernoulli_stream ?q;\n   0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> real_cond_exp ?N (stoch_proc_filt ?N geom_proc borel ?n)\n                     ?der ?w =\n                    expl_cond_expect ?N (proj_stoch_proc geom_proc ?n) ?der\n                     ?w\n\ngoal (1 subgoal):\n 1. \\<forall>w.\n       real_cond_exp N (stoch_proc_filt N geom_proc borel matur) der w =\n       expl_cond_expect N (proj_stoch_proc geom_proc matur) der w", "by simp"], ["proof (state)\nthis:\n  \\<forall>w.\n     real_cond_exp N (stoch_proc_filt N geom_proc borel matur) der w =\n     expl_cond_expect N (proj_stoch_proc geom_proc matur) der w\n\ngoal (4 subgoals):\n 1. AEeq M der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))\n 2. 0 < p\n 3. p < 1\n 4. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (nat_filtration matur)", "ultimately"], ["proof (chain)\npicking this:\n  discounted_value r (\\<lambda>m. der) 0 = der\n  AEeq N (real_cond_exp N (G matur) der) der\n  \\<forall>w.\n     real_cond_exp N (stoch_proc_filt N geom_proc borel matur) der w =\n     expl_cond_expect N (proj_stoch_proc geom_proc matur) der w", "have eqn: \"AEeq N der (expl_cond_expect N (proj_stoch_proc geom_proc matur) (discounted_value r (\\<lambda>m. der) 0))\""], ["proof (prove)\nusing this:\n  discounted_value r (\\<lambda>m. der) 0 = der\n  AEeq N (real_cond_exp N (G matur) der) der\n  \\<forall>w.\n     real_cond_exp N (stoch_proc_filt N geom_proc borel matur) der w =\n     expl_cond_expect N (proj_stoch_proc geom_proc matur) der w\n\ngoal (1 subgoal):\n 1. AEeq N der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))", "using stock_filtration_eq assms"], ["proof (prove)\nusing this:\n  discounted_value r (\\<lambda>m. der) 0 = der\n  AEeq N (real_cond_exp N (G matur) der) der\n  \\<forall>w.\n     real_cond_exp N (stoch_proc_filt N geom_proc borel matur) der w =\n     expl_cond_expect N (proj_stoch_proc geom_proc matur) der w\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> G ?n = stoch_proc_filt ?N geom_proc borel ?n\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. AEeq N der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))", "by auto"], ["proof (state)\nthis:\n  AEeq N der\n   (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0))\n\ngoal (4 subgoals):\n 1. AEeq M der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))\n 2. 0 < p\n 3. p < 1\n 4. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (nat_filtration matur)", "have \"stoch_proc_filt M geom_proc borel matur = stoch_proc_filt N geom_proc borel matur\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stoch_proc_filt M geom_proc borel matur =\n    stoch_proc_filt N geom_proc borel matur", "using  bernoulli_stream_equiv[of N q] assms psgt pslt"], ["proof (prove)\nusing this:\n  \\<lbrakk>N = bernoulli_stream q; 0 < p; p < 1; 0 < q; q < 1\\<rbrakk>\n  \\<Longrightarrow> filt_equiv nat_filtration M N\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. stoch_proc_filt M geom_proc borel matur =\n    stoch_proc_filt N geom_proc borel matur", "by (simp add: stoch_proc_filt_filt_equiv)"], ["proof (state)\nthis:\n  stoch_proc_filt M geom_proc borel matur =\n  stoch_proc_filt N geom_proc borel matur\n\ngoal (4 subgoals):\n 1. AEeq M der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))\n 2. 0 < p\n 3. p < 1\n 4. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (nat_filtration matur)", "also"], ["proof (state)\nthis:\n  stoch_proc_filt M geom_proc borel matur =\n  stoch_proc_filt N geom_proc borel matur\n\ngoal (4 subgoals):\n 1. AEeq M der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))\n 2. 0 < p\n 3. p < 1\n 4. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (nat_filtration matur)", "have \"stoch_proc_filt N geom_proc borel matur =\n      fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stoch_proc_filt N geom_proc borel matur =\n    fct_gen_subalgebra N (stream_space borel)\n     (proj_stoch_proc geom_proc matur)", "using assms geom_proc_stoch_proc_filt"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> stoch_proc_filt ?N geom_proc borel ?n =\n                    fct_gen_subalgebra ?N (stream_space borel)\n                     (proj_stoch_proc geom_proc ?n)\n\ngoal (1 subgoal):\n 1. stoch_proc_filt N geom_proc borel matur =\n    fct_gen_subalgebra N (stream_space borel)\n     (proj_stoch_proc geom_proc matur)", "by simp"], ["proof (state)\nthis:\n  stoch_proc_filt N geom_proc borel matur =\n  fct_gen_subalgebra N (stream_space borel)\n   (proj_stoch_proc geom_proc matur)\n\ngoal (4 subgoals):\n 1. AEeq M der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))\n 2. 0 < p\n 3. p < 1\n 4. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (nat_filtration matur)", "finally"], ["proof (chain)\npicking this:\n  stoch_proc_filt M geom_proc borel matur =\n  fct_gen_subalgebra N (stream_space borel)\n   (proj_stoch_proc geom_proc matur)", "have \"stoch_proc_filt M geom_proc borel matur =\n      fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc matur)\""], ["proof (prove)\nusing this:\n  stoch_proc_filt M geom_proc borel matur =\n  fct_gen_subalgebra N (stream_space borel)\n   (proj_stoch_proc geom_proc matur)\n\ngoal (1 subgoal):\n 1. stoch_proc_filt M geom_proc borel matur =\n    fct_gen_subalgebra N (stream_space borel)\n     (proj_stoch_proc geom_proc matur)", "."], ["proof (state)\nthis:\n  stoch_proc_filt M geom_proc borel matur =\n  fct_gen_subalgebra N (stream_space borel)\n   (proj_stoch_proc geom_proc matur)\n\ngoal (4 subgoals):\n 1. AEeq M der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))\n 2. 0 < p\n 3. p < 1\n 4. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (nat_filtration matur)", "moreover"], ["proof (state)\nthis:\n  stoch_proc_filt M geom_proc borel matur =\n  fct_gen_subalgebra N (stream_space borel)\n   (proj_stoch_proc geom_proc matur)\n\ngoal (4 subgoals):\n 1. AEeq M der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))\n 2. 0 < p\n 3. p < 1\n 4. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (nat_filtration matur)", "have \"expl_cond_expect N (proj_stoch_proc geom_proc matur) (discounted_value r (\\<lambda>m. der) 0)\n      \\<in> borel_measurable (fct_gen_subalgebra N (stream_space borel) (proj_stoch_proc geom_proc matur))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable\n           (fct_gen_subalgebra N (stream_space borel)\n             (proj_stoch_proc geom_proc matur))", "proof (rule expl_cond_exp_borel)"], ["proof (state)\ngoal (3 subgoals):\n 1. proj_stoch_proc geom_proc matur\n    \\<in> space N \\<rightarrow> space (stream_space borel)\n 2. disc_fct (proj_stoch_proc geom_proc matur)\n 3. \\<forall>r\\<in>range (proj_stoch_proc geom_proc matur) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc matur) \\<inter> A = {r}", "show \"proj_stoch_proc geom_proc matur \\<in> space N \\<rightarrow> space (stream_space borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc matur\n    \\<in> space N \\<rightarrow> space (stream_space borel)", "using assms proj_stoch_proc_geom_rng"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  ?N = bernoulli_stream ?q \\<Longrightarrow>\n  proj_stoch_proc geom_proc ?n\n  \\<in> ?N \\<rightarrow>\\<^sub>M stream_space borel\n\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc matur\n    \\<in> space N \\<rightarrow> space (stream_space borel)", "by (simp add: measurable_def)"], ["proof (state)\nthis:\n  proj_stoch_proc geom_proc matur\n  \\<in> space N \\<rightarrow> space (stream_space borel)\n\ngoal (2 subgoals):\n 1. disc_fct (proj_stoch_proc geom_proc matur)\n 2. \\<forall>r\\<in>range (proj_stoch_proc geom_proc matur) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc matur) \\<inter> A = {r}", "show \"disc_fct (proj_stoch_proc geom_proc matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc_fct (proj_stoch_proc geom_proc matur)", "using proj_stoch_proc_geom_disc_fct"], ["proof (prove)\nusing this:\n  disc_fct (proj_stoch_proc geom_proc ?n)\n\ngoal (1 subgoal):\n 1. disc_fct (proj_stoch_proc geom_proc matur)", "by simp"], ["proof (state)\nthis:\n  disc_fct (proj_stoch_proc geom_proc matur)\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>range (proj_stoch_proc geom_proc matur) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc matur) \\<inter> A = {r}", "show \"\\<forall>r\\<in>range (proj_stoch_proc geom_proc matur) \\<inter> space (stream_space borel).\n        \\<exists>A\\<in>sets (stream_space borel). range (proj_stoch_proc geom_proc matur) \\<inter> A = {r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>range (proj_stoch_proc geom_proc matur) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc matur) \\<inter> A = {r}", "using proj_stoch_proc_geom_open_set"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>range (proj_stoch_proc geom_proc ?n) \\<inter>\n                 space (stream_space borel).\n     \\<exists>A\\<in>sets (stream_space borel).\n        range (proj_stoch_proc geom_proc ?n) \\<inter> A = {r}\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>range (proj_stoch_proc geom_proc matur) \\<inter>\n                   space (stream_space borel).\n       \\<exists>A\\<in>sets (stream_space borel).\n          range (proj_stoch_proc geom_proc matur) \\<inter> A = {r}", "by simp"], ["proof (state)\nthis:\n  \\<forall>r\\<in>range (proj_stoch_proc geom_proc matur) \\<inter>\n                 space (stream_space borel).\n     \\<exists>A\\<in>sets (stream_space borel).\n        range (proj_stoch_proc geom_proc matur) \\<inter> A = {r}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  expl_cond_expect N (proj_stoch_proc geom_proc matur)\n   (discounted_value r (\\<lambda>m. der) 0)\n  \\<in> borel_measurable\n         (fct_gen_subalgebra N (stream_space borel)\n           (proj_stoch_proc geom_proc matur))\n\ngoal (4 subgoals):\n 1. AEeq M der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))\n 2. 0 < p\n 3. p < 1\n 4. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (nat_filtration matur)", "ultimately"], ["proof (chain)\npicking this:\n  stoch_proc_filt M geom_proc borel matur =\n  fct_gen_subalgebra N (stream_space borel)\n   (proj_stoch_proc geom_proc matur)\n  expl_cond_expect N (proj_stoch_proc geom_proc matur)\n   (discounted_value r (\\<lambda>m. der) 0)\n  \\<in> borel_measurable\n         (fct_gen_subalgebra N (stream_space borel)\n           (proj_stoch_proc geom_proc matur))", "show ebm: \"expl_cond_expect N (proj_stoch_proc geom_proc matur) (discounted_value r (\\<lambda>m. der) 0)\n      \\<in> borel_measurable (nat_filtration matur)\""], ["proof (prove)\nusing this:\n  stoch_proc_filt M geom_proc borel matur =\n  fct_gen_subalgebra N (stream_space borel)\n   (proj_stoch_proc geom_proc matur)\n  expl_cond_expect N (proj_stoch_proc geom_proc matur)\n   (discounted_value r (\\<lambda>m. der) 0)\n  \\<in> borel_measurable\n         (fct_gen_subalgebra N (stream_space borel)\n           (proj_stoch_proc geom_proc matur))\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (nat_filtration matur)", "by (metis geom_rand_walk_borel_adapted measurable_from_subalg stoch_proc_subalg_nat_filt)"], ["proof (state)\nthis:\n  expl_cond_expect N (proj_stoch_proc geom_proc matur)\n   (discounted_value r (\\<lambda>m. der) 0)\n  \\<in> borel_measurable (nat_filtration matur)\n\ngoal (3 subgoals):\n 1. AEeq M der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))\n 2. 0 < p\n 3. p < 1", "show \"AEeq M der (expl_cond_expect N (proj_stoch_proc geom_proc matur) (discounted_value r (\\<lambda>m. der) 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq M der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))", "proof (rule filt_equiv_borel_AE_eq_iff[THEN iffD2])"], ["proof (state)\ngoal (6 subgoals):\n 1. filt_equiv ?F1 M ?N1\n 2. der \\<in> borel_measurable (?F1 ?t1)\n 3. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (?F1 ?t1)\n 4. prob_space ?N1\n 5. prob_space M\n 6. AEeq ?N1 der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))", "show \"filt_equiv nat_filtration M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filt_equiv nat_filtration M N", "using assms bernoulli_stream_equiv psgt pslt"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < p; p < 1; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> filt_equiv nat_filtration M ?N\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. filt_equiv nat_filtration M N", "by simp"], ["proof (state)\nthis:\n  filt_equiv nat_filtration M N\n\ngoal (5 subgoals):\n 1. der \\<in> borel_measurable (nat_filtration ?t1)\n 2. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (nat_filtration ?t1)\n 3. prob_space N\n 4. prob_space M\n 5. AEeq N der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))", "show \"der \\<in> borel_measurable (nat_filtration matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (nat_filtration matur)", "using \\<open>der \\<in> borel_measurable (nat_filtration matur)\\<close>"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (nat_filtration matur)\n\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (nat_filtration matur)", "."], ["proof (state)\nthis:\n  der \\<in> borel_measurable (nat_filtration matur)\n\ngoal (4 subgoals):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (nat_filtration matur)\n 2. prob_space N\n 3. prob_space M\n 4. AEeq N der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))", "show \"AEeq N der (expl_cond_expect N (proj_stoch_proc geom_proc matur) (discounted_value r (\\<lambda>m. der) 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))", "using eqn"], ["proof (prove)\nusing this:\n  AEeq N der\n   (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0))\n\ngoal (1 subgoal):\n 1. AEeq N der\n     (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n       (discounted_value r (\\<lambda>m. der) 0))", "."], ["proof (state)\nthis:\n  AEeq N der\n   (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0))\n\ngoal (3 subgoals):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (nat_filtration matur)\n 2. prob_space N\n 3. prob_space M", "show \"expl_cond_expect N (proj_stoch_proc geom_proc matur) (discounted_value r (\\<lambda>m. der) 0)\n        \\<in> borel_measurable (nat_filtration matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (nat_filtration matur)", "using ebm"], ["proof (prove)\nusing this:\n  expl_cond_expect N (proj_stoch_proc geom_proc matur)\n   (discounted_value r (\\<lambda>m. der) 0)\n  \\<in> borel_measurable (nat_filtration matur)\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0)\n    \\<in> borel_measurable (nat_filtration matur)", "."], ["proof (state)\nthis:\n  expl_cond_expect N (proj_stoch_proc geom_proc matur)\n   (discounted_value r (\\<lambda>m. der) 0)\n  \\<in> borel_measurable (nat_filtration matur)\n\ngoal (2 subgoals):\n 1. prob_space N\n 2. prob_space M", "show \"prob_space N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space N", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. prob_space N", "by (simp add: bernoulli_stream_def\n            prob_space.prob_space_stream_space prob_space_measure_pmf)"], ["proof (state)\nthis:\n  prob_space N\n\ngoal (1 subgoal):\n 1. prob_space M", "show \"prob_space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space M", "by (simp add: bernoulli bernoulli_stream_def\n            prob_space.prob_space_stream_space prob_space_measure_pmf)"], ["proof (state)\nthis:\n  prob_space M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AEeq M der\n   (expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0))\n\ngoal (2 subgoals):\n 1. 0 < p\n 2. p < 1", "show \"0 < p\" \"p < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < p &&& p < 1", "using psgt pslt"], ["proof (prove)\nusing this:\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. 0 < p &&& p < 1", "by auto"], ["proof (state)\nthis:\n  0 < p\n  p < 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  der w =\n  expl_cond_expect N (proj_stoch_proc geom_proc matur)\n   (discounted_value r (\\<lambda>m. der) 0) w\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       0 \\<le> matur \\<Longrightarrow>\n       rn_rev_price N der matur 0 w =\n       expl_cond_expect N (proj_stoch_proc geom_proc (matur - 0))\n        (discounted_value r (\\<lambda>m. der) 0) w\n 2. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "also"], ["proof (state)\nthis:\n  der w =\n  expl_cond_expect N (proj_stoch_proc geom_proc matur)\n   (discounted_value r (\\<lambda>m. der) 0) w\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       0 \\<le> matur \\<Longrightarrow>\n       rn_rev_price N der matur 0 w =\n       expl_cond_expect N (proj_stoch_proc geom_proc (matur - 0))\n        (discounted_value r (\\<lambda>m. der) 0) w\n 2. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "have \"... = expl_cond_expect N (proj_stoch_proc geom_proc (matur - 0)) (discounted_value r (\\<lambda>m. der) 0) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc matur)\n     (discounted_value r (\\<lambda>m. der) 0) w =\n    expl_cond_expect N (proj_stoch_proc geom_proc (matur - 0))\n     (discounted_value r (\\<lambda>m. der) 0) w", "by simp"], ["proof (state)\nthis:\n  expl_cond_expect N (proj_stoch_proc geom_proc matur)\n   (discounted_value r (\\<lambda>m. der) 0) w =\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - 0))\n   (discounted_value r (\\<lambda>m. der) 0) w\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       0 \\<le> matur \\<Longrightarrow>\n       rn_rev_price N der matur 0 w =\n       expl_cond_expect N (proj_stoch_proc geom_proc (matur - 0))\n        (discounted_value r (\\<lambda>m. der) 0) w\n 2. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "finally"], ["proof (chain)\npicking this:\n  rn_rev_price N der matur 0 w =\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - 0))\n   (discounted_value r (\\<lambda>m. der) 0) w", "show \"rn_rev_price N der matur 0 w =\n    expl_cond_expect N (proj_stoch_proc geom_proc (matur - 0)) (discounted_value r (\\<lambda>m. der) 0) w\""], ["proof (prove)\nusing this:\n  rn_rev_price N der matur 0 w =\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - 0))\n   (discounted_value r (\\<lambda>m. der) 0) w\n\ngoal (1 subgoal):\n 1. rn_rev_price N der matur 0 w =\n    expl_cond_expect N (proj_stoch_proc geom_proc (matur - 0))\n     (discounted_value r (\\<lambda>m. der) 0) w", "."], ["proof (state)\nthis:\n  rn_rev_price N der matur 0 w =\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - 0))\n   (discounted_value r (\\<lambda>m. der) 0) w\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "case (Suc n)"], ["proof (state)\nthis:\n  n \\<le> matur \\<Longrightarrow>\n  rn_rev_price N der matur n ?w1 =\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n   (discounted_value r (\\<lambda>m. der) n) ?w1\n  Suc n \\<le> matur\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "have \"rn_rev_price N der matur (Suc n) w = discount_factor r (Suc 0) w *\n          expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n)) (rn_rev_price N der matur n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rn_rev_price N der matur (Suc n) w =\n    discount_factor r (Suc 0) w *\n    expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n     (rn_rev_price N der matur n) w", "by simp"], ["proof (state)\nthis:\n  rn_rev_price N der matur (Suc n) w =\n  discount_factor r (Suc 0) w *\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n   (rn_rev_price N der matur n) w\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "also"], ["proof (state)\nthis:\n  rn_rev_price N der matur (Suc n) w =\n  discount_factor r (Suc 0) w *\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n   (rn_rev_price N der matur n) w\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "have \"... = discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n)) (rn_rev_price N der matur n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discount_factor r (Suc 0) w *\n    expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n     (rn_rev_price N der matur n) w =\n    discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (rn_rev_price N der matur n) w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. discount_factor r (Suc 0) w *\n    expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n     (rn_rev_price N der matur n) w =\n    discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (rn_rev_price N der matur n) w", "have \"expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n)) (rn_rev_price N der matur n) w =\n     real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n)) (rn_rev_price N der matur n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n     (rn_rev_price N der matur n) w =\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (rn_rev_price N der matur n) w", "proof (rule real_exp_eq[symmetric])"], ["proof (state)\ngoal (4 subgoals):\n 1. rn_rev_price N der matur n \\<in> borel_measurable (G ?matur)\n 2. N = bernoulli_stream ?q\n 3. 0 < ?q\n 4. ?q < 1", "show \"rn_rev_price N der matur n \\<in> borel_measurable (G (matur - n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rn_rev_price N der matur n \\<in> borel_measurable (G (matur - n))", "using assms rn_rev_price_rev_borel_adapt Suc"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  \\<lbrakk>?cash_flow \\<in> borel_measurable (G ?matur);\n   ?N = bernoulli_stream ?q; 0 < ?q; ?q < 1; ?n \\<le> ?matur\\<rbrakk>\n  \\<Longrightarrow> rn_rev_price ?N ?cash_flow ?matur ?n\n                    \\<in> borel_measurable (G (?matur - ?n))\n  n \\<le> matur \\<Longrightarrow>\n  rn_rev_price N der matur n ?w1 =\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n   (discounted_value r (\\<lambda>m. der) n) ?w1\n  Suc n \\<le> matur\n\ngoal (1 subgoal):\n 1. rn_rev_price N der matur n \\<in> borel_measurable (G (matur - n))", "by simp"], ["proof (state)\nthis:\n  rn_rev_price N der matur n \\<in> borel_measurable (G (matur - n))\n\ngoal (3 subgoals):\n 1. N = bernoulli_stream ?q\n 2. 0 < ?q\n 3. ?q < 1", "show \"N = bernoulli_stream q\" \"0 < q\" \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N = bernoulli_stream q &&& 0 < q &&& q < 1", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. N = bernoulli_stream q &&& 0 < q &&& q < 1", "by auto"], ["proof (state)\nthis:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n   (rn_rev_price N der matur n) w =\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (rn_rev_price N der matur n) w\n\ngoal (1 subgoal):\n 1. discount_factor r (Suc 0) w *\n    expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n     (rn_rev_price N der matur n) w =\n    discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (rn_rev_price N der matur n) w", "thus ?thesis"], ["proof (prove)\nusing this:\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n   (rn_rev_price N der matur n) w =\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (rn_rev_price N der matur n) w\n\ngoal (1 subgoal):\n 1. discount_factor r (Suc 0) w *\n    expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n     (rn_rev_price N der matur n) w =\n    discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (rn_rev_price N der matur n) w", "by simp"], ["proof (state)\nthis:\n  discount_factor r (Suc 0) w *\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n   (rn_rev_price N der matur n) w =\n  discount_factor r (Suc 0) w *\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (rn_rev_price N der matur n) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  discount_factor r (Suc 0) w *\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n   (rn_rev_price N der matur n) w =\n  discount_factor r (Suc 0) w *\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (rn_rev_price N der matur n) w\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "also"], ["proof (state)\nthis:\n  discount_factor r (Suc 0) w *\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n   (rn_rev_price N der matur n) w =\n  discount_factor r (Suc 0) w *\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (rn_rev_price N der matur n) w\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "have \"... = discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n    (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n)) (discounted_value r (\\<lambda>m. der) n)) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (rn_rev_price N der matur n) w =\n    discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (rn_rev_price N der matur n) w =\n    discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     w", "have \"real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n)) (rn_rev_price N der matur n) w =\n      real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n    (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n)) (discounted_value r (\\<lambda>m. der) n)) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (rn_rev_price N der matur n) w =\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     w", "proof (rule infinite_coin_toss_space.nat_filtration_AE_eq)"], ["proof (state)\ngoal (6 subgoals):\n 1. infinite_coin_toss_space ?p ?M\n 2. AEeq ?M\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (rn_rev_price N der matur n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n         (discounted_value r (\\<lambda>m. der) n)))\n 3. 0 < ?p\n 4. ?p < 1\n 5. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (rn_rev_price N der matur n)\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration ?M ?n)\n 6. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration ?M ?n)", "show \"AEeq N (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n)) (rn_rev_price N der matur n))\n        (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n)) (discounted_value r (\\<lambda>m. der) n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (rn_rev_price N der matur n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n         (discounted_value r (\\<lambda>m. der) n)))", "proof (rule sigma_finite_subalgebra.real_cond_exp_cong)"], ["proof (state)\ngoal (4 subgoals):\n 1. sigma_finite_subalgebra N\n     (stoch_proc_filt N geom_proc borel (matur - Suc n))\n 2. AEeq N (rn_rev_price N der matur n)\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n 3. rn_rev_price N der matur n \\<in> borel_measurable N\n 4. expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n)\n    \\<in> borel_measurable N", "show \"sigma_finite_subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_finite_subalgebra N\n     (stoch_proc_filt N geom_proc borel (matur - Suc n))", "using assms(2) assms(3) assms(4) bernoulli_sigma_finite stock_filtration_eq"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>n. sigma_finite_subalgebra ?N (G n)\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> G ?n = stoch_proc_filt ?N geom_proc borel ?n\n\ngoal (1 subgoal):\n 1. sigma_finite_subalgebra N\n     (stoch_proc_filt N geom_proc borel (matur - Suc n))", "by auto"], ["proof (state)\nthis:\n  sigma_finite_subalgebra N\n   (stoch_proc_filt N geom_proc borel (matur - Suc n))\n\ngoal (3 subgoals):\n 1. AEeq N (rn_rev_price N der matur n)\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n 2. rn_rev_price N der matur n \\<in> borel_measurable N\n 3. expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n)\n    \\<in> borel_measurable N", "show \"rn_rev_price N der matur n \\<in> borel_measurable N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rn_rev_price N der matur n \\<in> borel_measurable N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rn_rev_price N der matur n \\<in> borel_measurable N", "have \"rn_rev_price N der matur n \\<in> borel_measurable (G (matur - n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rn_rev_price N der matur n \\<in> borel_measurable (G (matur - n))", "by (metis (full_types) Suc.prems Suc_leD assms(1) assms(2) assms(3) assms(4) rn_rev_price_rev_borel_adapt)"], ["proof (state)\nthis:\n  rn_rev_price N der matur n \\<in> borel_measurable (G (matur - n))\n\ngoal (1 subgoal):\n 1. rn_rev_price N der matur n \\<in> borel_measurable N", "then"], ["proof (chain)\npicking this:\n  rn_rev_price N der matur n \\<in> borel_measurable (G (matur - n))", "show ?thesis"], ["proof (prove)\nusing this:\n  rn_rev_price N der matur n \\<in> borel_measurable (G (matur - n))\n\ngoal (1 subgoal):\n 1. rn_rev_price N der matur n \\<in> borel_measurable N", "by (metis (no_types) assms(2) bernoulli bernoulli_stream_def filtration_measurable measurable_cong_sets sets_measure_pmf sets_stream_space_cong)"], ["proof (state)\nthis:\n  rn_rev_price N der matur n \\<in> borel_measurable N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rn_rev_price N der matur n \\<in> borel_measurable N\n\ngoal (2 subgoals):\n 1. AEeq N (rn_rev_price N der matur n)\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n 2. expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n)\n    \\<in> borel_measurable N", "show \"expl_cond_expect N (proj_stoch_proc geom_proc (matur - n)) (discounted_value r (\\<lambda>m. der) n) \\<in> borel_measurable N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n)\n    \\<in> borel_measurable N", "using Suc.hyps Suc.prems Suc_leD \\<open>rn_rev_price N der matur n \\<in> borel_measurable N\\<close>"], ["proof (prove)\nusing this:\n  n \\<le> matur \\<Longrightarrow>\n  rn_rev_price N der matur n ?w1 =\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n   (discounted_value r (\\<lambda>m. der) n) ?w1\n  Suc n \\<le> matur\n  Suc ?m \\<le> ?n \\<Longrightarrow> ?m \\<le> ?n\n  rn_rev_price N der matur n \\<in> borel_measurable N\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n)\n    \\<in> borel_measurable N", "by presburger"], ["proof (state)\nthis:\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n   (discounted_value r (\\<lambda>m. der) n)\n  \\<in> borel_measurable N\n\ngoal (1 subgoal):\n 1. AEeq N (rn_rev_price N der matur n)\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))", "show \"AEeq N (rn_rev_price N der matur n)\n          (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n)) (discounted_value r (\\<lambda>m. der) n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N (rn_rev_price N der matur n)\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))", "using Suc"], ["proof (prove)\nusing this:\n  n \\<le> matur \\<Longrightarrow>\n  rn_rev_price N der matur n ?w1 =\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n   (discounted_value r (\\<lambda>m. der) n) ?w1\n  Suc n \\<le> matur\n\ngoal (1 subgoal):\n 1. AEeq N (rn_rev_price N der matur n)\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))", "by auto"], ["proof (state)\nthis:\n  AEeq N (rn_rev_price N der matur n)\n   (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (rn_rev_price N der matur n))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n)))\n\ngoal (5 subgoals):\n 1. infinite_coin_toss_space ?p N\n 2. 0 < ?p\n 3. ?p < 1\n 4. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (rn_rev_price N der matur n)\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)\n 5. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)", "show \"real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n)) (rn_rev_price N der matur n)\n        \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N (matur - Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (rn_rev_price N der matur n)\n    \\<in> borel_measurable\n           (infinite_coin_toss_space.nat_filtration N (matur - Suc n))", "by (metis assms(2) assms(3) assms(4) borel_measurable_cond_exp infinite_coin_toss_space.intro\n            infinite_coin_toss_space.stoch_proc_subalg_nat_filt linear measurable_from_subalg not_less\n            prob_grw.geom_rand_walk_borel_adapted prob_grw_axioms prob_grw_def)"], ["proof (state)\nthis:\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (rn_rev_price N der matur n)\n  \\<in> borel_measurable\n         (infinite_coin_toss_space.nat_filtration N (matur - Suc n))\n\ngoal (4 subgoals):\n 1. infinite_coin_toss_space ?p N\n 2. 0 < ?p\n 3. ?p < 1\n 4. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n    \\<in> borel_measurable\n           (infinite_coin_toss_space.nat_filtration N (matur - Suc n))", "show \"real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n         (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n)) (discounted_value r (\\<lambda>m. der) n))\n        \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N (matur - Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n    \\<in> borel_measurable\n           (infinite_coin_toss_space.nat_filtration N (matur - Suc n))", "by (metis assms(2) assms(3) assms(4) borel_measurable_cond_exp infinite_coin_toss_space.intro\n              infinite_coin_toss_space.stoch_proc_subalg_nat_filt linear measurable_from_subalg not_less\n              prob_grw.geom_rand_walk_borel_adapted prob_grw_axioms prob_grw_def)"], ["proof (state)\nthis:\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n  \\<in> borel_measurable\n         (infinite_coin_toss_space.nat_filtration N (matur - Suc n))\n\ngoal (3 subgoals):\n 1. infinite_coin_toss_space ?p N\n 2. 0 < ?p\n 3. ?p < 1", "show \"0 < q\" \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "by auto"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "show \"infinite_coin_toss_space q N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "by (simp add: infinite_coin_toss_space_def)"], ["proof (state)\nthis:\n  infinite_coin_toss_space q N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (rn_rev_price N der matur n) w =\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n   w\n\ngoal (1 subgoal):\n 1. discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (rn_rev_price N der matur n) w =\n    discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     w", "thus ?thesis"], ["proof (prove)\nusing this:\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (rn_rev_price N der matur n) w =\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n   w\n\ngoal (1 subgoal):\n 1. discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (rn_rev_price N der matur n) w =\n    discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     w", "by simp"], ["proof (state)\nthis:\n  discount_factor r (Suc 0) w *\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (rn_rev_price N der matur n) w =\n  discount_factor r (Suc 0) w *\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n   w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  discount_factor r (Suc 0) w *\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (rn_rev_price N der matur n) w =\n  discount_factor r (Suc 0) w *\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n   w\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "also"], ["proof (state)\nthis:\n  discount_factor r (Suc 0) w *\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (rn_rev_price N der matur n) w =\n  discount_factor r (Suc 0) w *\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n   w\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "have \"... = discount_factor r (Suc 0) w *\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n)) (discounted_value r (\\<lambda>m. der) n)) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     w =\n    discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     w =\n    discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     w", "have \"real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n      (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n)) (discounted_value r (\\<lambda>m. der) n)) w =\n      real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n      (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n)) (discounted_value r (\\<lambda>m. der) n)) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     w =\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     w", "proof (rule infinite_coin_toss_space.nat_filtration_AE_eq)"], ["proof (state)\ngoal (6 subgoals):\n 1. infinite_coin_toss_space ?p ?M\n 2. AEeq ?M\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n         (discounted_value r (\\<lambda>m. der) n)))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n         (discounted_value r (\\<lambda>m. der) n)))\n 3. 0 < ?p\n 4. ?p < 1\n 5. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration ?M ?n)\n 6. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration ?M ?n)", "show \"AEeq N (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n             (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n)) (discounted_value r (\\<lambda>m. der) n)))\n         (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n           (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n)) (discounted_value r (\\<lambda>m. der) n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n         (discounted_value r (\\<lambda>m. der) n)))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n         (discounted_value r (\\<lambda>m. der) n)))", "proof (rule sigma_finite_subalgebra.real_cond_exp_cong)"], ["proof (state)\ngoal (4 subgoals):\n 1. sigma_finite_subalgebra N\n     (stoch_proc_filt N geom_proc borel (matur - Suc n))\n 2. AEeq N\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n 3. expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n)\n    \\<in> borel_measurable N\n 4. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n     (discounted_value r (\\<lambda>m. der) n)\n    \\<in> borel_measurable N", "show \"sigma_finite_subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_finite_subalgebra N\n     (stoch_proc_filt N geom_proc borel (matur - Suc n))", "using assms(2) assms(3) assms(4) bernoulli_sigma_finite stock_filtration_eq"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>n. sigma_finite_subalgebra ?N (G n)\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> G ?n = stoch_proc_filt ?N geom_proc borel ?n\n\ngoal (1 subgoal):\n 1. sigma_finite_subalgebra N\n     (stoch_proc_filt N geom_proc borel (matur - Suc n))", "by auto"], ["proof (state)\nthis:\n  sigma_finite_subalgebra N\n   (stoch_proc_filt N geom_proc borel (matur - Suc n))\n\ngoal (3 subgoals):\n 1. AEeq N\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n 2. expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n)\n    \\<in> borel_measurable N\n 3. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n     (discounted_value r (\\<lambda>m. der) n)\n    \\<in> borel_measurable N", "show \"real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n)) (discounted_value r (\\<lambda>m. der) n) \\<in> borel_measurable N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n     (discounted_value r (\\<lambda>m. der) n)\n    \\<in> borel_measurable N", "by simp"], ["proof (state)\nthis:\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n   (discounted_value r (\\<lambda>m. der) n)\n  \\<in> borel_measurable N\n\ngoal (2 subgoals):\n 1. AEeq N\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n 2. expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n)\n    \\<in> borel_measurable N", "show \"expl_cond_expect N (proj_stoch_proc geom_proc (matur - n)) (discounted_value r (\\<lambda>m. der) n) \\<in> borel_measurable N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n)\n    \\<in> borel_measurable N", "by (metis assms(2) assms(3) assms(4) bernoulli bernoulli_expl_cond_expect_adapt bernoulli_stream_def filtration_measurable\n              measurable_cong_sets sets_measure_pmf sets_stream_space_cong)"], ["proof (state)\nthis:\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n   (discounted_value r (\\<lambda>m. der) n)\n  \\<in> borel_measurable N\n\ngoal (1 subgoal):\n 1. AEeq N\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))", "show \"AEeq N (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n)) (discounted_value r (\\<lambda>m. der) n))\n          (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n)) (discounted_value r (\\<lambda>m. der) n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. AEeq N\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))", "have \"discounted_value r (\\<lambda>m. der) n \\<in> borel_measurable (G matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discounted_value r (\\<lambda>m. der) n \\<in> borel_measurable (G matur)", "using assms discounted_measurable[of der]"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  der \\<in> borel_measurable ?N \\<Longrightarrow>\n  discounted_value ?r (\\<lambda>m. der) ?m \\<in> borel_measurable ?N\n\ngoal (1 subgoal):\n 1. discounted_value r (\\<lambda>m. der) n \\<in> borel_measurable (G matur)", "by simp"], ["proof (state)\nthis:\n  discounted_value r (\\<lambda>m. der) n \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))", "hence \"\\<forall>w. (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n)) (discounted_value r (\\<lambda>m. der) n)) w =\n            (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n)) (discounted_value r (\\<lambda>m. der) n)) w\""], ["proof (prove)\nusing this:\n  discounted_value r (\\<lambda>m. der) n \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. \\<forall>w.\n       expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n        (discounted_value r (\\<lambda>m. der) n) w =\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n        (discounted_value r (\\<lambda>m. der) n) w", "using real_exp_eq[of _ matur N q \"matur-n\"] assms"], ["proof (prove)\nusing this:\n  discounted_value r (\\<lambda>m. der) n \\<in> borel_measurable (G matur)\n  \\<lbrakk>?der \\<in> borel_measurable (G matur); N = bernoulli_stream q;\n   0 < q; q < 1\\<rbrakk>\n  \\<Longrightarrow> real_cond_exp N\n                     (stoch_proc_filt N geom_proc borel (matur - n)) ?der\n                     ?w =\n                    expl_cond_expect N\n                     (proj_stoch_proc geom_proc (matur - n)) ?der ?w\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. \\<forall>w.\n       expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n        (discounted_value r (\\<lambda>m. der) n) w =\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n        (discounted_value r (\\<lambda>m. der) n) w", "by simp"], ["proof (state)\nthis:\n  \\<forall>w.\n     expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n      (discounted_value r (\\<lambda>m. der) n) w =\n     real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n      (discounted_value r (\\<lambda>m. der) n) w\n\ngoal (1 subgoal):\n 1. AEeq N\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>w.\n     expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n      (discounted_value r (\\<lambda>m. der) n) w =\n     real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n      (discounted_value r (\\<lambda>m. der) n) w\n\ngoal (1 subgoal):\n 1. AEeq N\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))", "by simp"], ["proof (state)\nthis:\n  AEeq N\n   (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AEeq N\n   (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n)))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n)))\n\ngoal (5 subgoals):\n 1. infinite_coin_toss_space ?p N\n 2. 0 < ?p\n 3. ?p < 1\n 4. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)\n 5. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)", "show \"real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n         (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n)) (discounted_value r (\\<lambda>m. der) n))\n        \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N (matur - Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n    \\<in> borel_measurable\n           (infinite_coin_toss_space.nat_filtration N (matur - Suc n))", "by (metis assms(2) assms(3) assms(4) borel_measurable_cond_exp infinite_coin_toss_space.intro\n              infinite_coin_toss_space.stoch_proc_subalg_nat_filt linear measurable_from_subalg not_less\n              prob_grw.geom_rand_walk_borel_adapted prob_grw_axioms prob_grw_def)"], ["proof (state)\nthis:\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n  \\<in> borel_measurable\n         (infinite_coin_toss_space.nat_filtration N (matur - Suc n))\n\ngoal (4 subgoals):\n 1. infinite_coin_toss_space ?p N\n 2. 0 < ?p\n 3. ?p < 1\n 4. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n    \\<in> borel_measurable\n           (infinite_coin_toss_space.nat_filtration N (matur - Suc n))", "show \"real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n         (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n)) (discounted_value r (\\<lambda>m. der) n))\n        \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N (matur - Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n    \\<in> borel_measurable\n           (infinite_coin_toss_space.nat_filtration N (matur - Suc n))", "by (metis assms(2) assms(3) assms(4) borel_measurable_cond_exp infinite_coin_toss_space.intro\n              infinite_coin_toss_space.stoch_proc_subalg_nat_filt linear measurable_from_subalg not_less\n              prob_grw.geom_rand_walk_borel_adapted prob_grw_axioms prob_grw_def)"], ["proof (state)\nthis:\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n  \\<in> borel_measurable\n         (infinite_coin_toss_space.nat_filtration N (matur - Suc n))\n\ngoal (3 subgoals):\n 1. infinite_coin_toss_space ?p N\n 2. 0 < ?p\n 3. ?p < 1", "show \"0 < q\" \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "by auto"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "show \"infinite_coin_toss_space q N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "by (simp add: infinite_coin_toss_space_def)"], ["proof (state)\nthis:\n  infinite_coin_toss_space q N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n   w =\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n   w\n\ngoal (1 subgoal):\n 1. discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     w =\n    discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     w", "thus ?thesis"], ["proof (prove)\nusing this:\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n   w =\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n   w\n\ngoal (1 subgoal):\n 1. discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     w =\n    discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     w", "by simp"], ["proof (state)\nthis:\n  discount_factor r (Suc 0) w *\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n   w =\n  discount_factor r (Suc 0) w *\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n   w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  discount_factor r (Suc 0) w *\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n   w =\n  discount_factor r (Suc 0) w *\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n   w\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "also"], ["proof (state)\nthis:\n  discount_factor r (Suc 0) w *\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (expl_cond_expect N (proj_stoch_proc geom_proc (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n   w =\n  discount_factor r (Suc 0) w *\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n   w\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "have \"... = real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n    (discounted_value r (\\<lambda>m. der) (Suc n)) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discount_factor r (Suc 0) w *\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n     w =\n    real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (discounted_value r (\\<lambda>m. der) (Suc n)) w", "proof (rule infinite_coin_toss_space.nat_filtration_AE_eq)"], ["proof (state)\ngoal (6 subgoals):\n 1. infinite_coin_toss_space ?p ?M\n 2. AEeq ?M\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n            (discounted_value r (\\<lambda>m. der) n))\n          w)\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (discounted_value r (\\<lambda>m. der) (Suc n)))\n 3. 0 < ?p\n 4. ?p < 1\n 5. (\\<lambda>a.\n        discount_factor r (Suc 0) a *\n        real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n         (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n           (discounted_value r (\\<lambda>m. der) n))\n         a)\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration ?M ?n)\n 6. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (discounted_value r (\\<lambda>m. der) (Suc n))\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration ?M ?n)", "show \"real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n)) (discounted_value r (\\<lambda>m. der) (Suc n))\n      \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N (matur - Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (discounted_value r (\\<lambda>m. der) (Suc n))\n    \\<in> borel_measurable\n           (infinite_coin_toss_space.nat_filtration N (matur - Suc n))", "by (metis assms(2) assms(3) assms(4) borel_measurable_cond_exp infinite_coin_toss_space.intro\n              infinite_coin_toss_space.stoch_proc_subalg_nat_filt linear measurable_from_subalg not_less\n              prob_grw.geom_rand_walk_borel_adapted prob_grw_axioms prob_grw_def)"], ["proof (state)\nthis:\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (discounted_value r (\\<lambda>m. der) (Suc n))\n  \\<in> borel_measurable\n         (infinite_coin_toss_space.nat_filtration N (matur - Suc n))\n\ngoal (5 subgoals):\n 1. infinite_coin_toss_space ?p N\n 2. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n            (discounted_value r (\\<lambda>m. der) n))\n          w)\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (discounted_value r (\\<lambda>m. der) (Suc n)))\n 3. 0 < ?p\n 4. ?p < 1\n 5. (\\<lambda>a.\n        discount_factor r (Suc 0) a *\n        real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n         (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n           (discounted_value r (\\<lambda>m. der) n))\n         a)\n    \\<in> borel_measurable\n           (infinite_coin_toss_space.nat_filtration N (matur - Suc n))", "show \"(\\<lambda>a. discount_factor r (Suc 0) a *\n          real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n           (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n)) (discounted_value r (\\<lambda>m. der) n)) a)\n        \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N (matur - Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a.\n        discount_factor r (Suc 0) a *\n        real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n         (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n           (discounted_value r (\\<lambda>m. der) n))\n         a)\n    \\<in> borel_measurable\n           (infinite_coin_toss_space.nat_filtration N (matur - Suc n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>a.\n        discount_factor r (Suc 0) a *\n        real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n         (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n           (discounted_value r (\\<lambda>m. der) n))\n         a)\n    \\<in> borel_measurable\n           (infinite_coin_toss_space.nat_filtration N (matur - Suc n))", "have \"real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n           (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n)) (discounted_value r (\\<lambda>m. der) n))\n        \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N (matur - Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n))\n    \\<in> borel_measurable\n           (infinite_coin_toss_space.nat_filtration N (matur - Suc n))", "by (metis assms(2) assms(3) assms(4) borel_measurable_cond_exp infinite_coin_toss_space.intro\n              infinite_coin_toss_space.stoch_proc_subalg_nat_filt linear measurable_from_subalg not_less\n              prob_grw.geom_rand_walk_borel_adapted prob_grw_axioms prob_grw_def)"], ["proof (state)\nthis:\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n  \\<in> borel_measurable\n         (infinite_coin_toss_space.nat_filtration N (matur - Suc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>a.\n        discount_factor r (Suc 0) a *\n        real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n         (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n           (discounted_value r (\\<lambda>m. der) n))\n         a)\n    \\<in> borel_measurable\n           (infinite_coin_toss_space.nat_filtration N (matur - Suc n))", "thus ?thesis"], ["proof (prove)\nusing this:\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n  \\<in> borel_measurable\n         (infinite_coin_toss_space.nat_filtration N (matur - Suc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>a.\n        discount_factor r (Suc 0) a *\n        real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n         (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n           (discounted_value r (\\<lambda>m. der) n))\n         a)\n    \\<in> borel_measurable\n           (infinite_coin_toss_space.nat_filtration N (matur - Suc n))", "using discounted_measurable[of \"real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n)) (discounted_value r (\\<lambda>m. der) n))\"]"], ["proof (prove)\nusing this:\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n  \\<in> borel_measurable\n         (infinite_coin_toss_space.nat_filtration N (matur - Suc n))\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n  \\<in> borel_measurable ?N \\<Longrightarrow>\n  discounted_value ?r\n   (\\<lambda>m.\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n          (discounted_value r (\\<lambda>m. der) n)))\n   ?m\n  \\<in> borel_measurable ?N\n\ngoal (1 subgoal):\n 1. (\\<lambda>a.\n        discount_factor r (Suc 0) a *\n        real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n         (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n           (discounted_value r (\\<lambda>m. der) n))\n         a)\n    \\<in> borel_measurable\n           (infinite_coin_toss_space.nat_filtration N (matur - Suc n))", "unfolding discounted_value_def"], ["proof (prove)\nusing this:\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n     (\\<lambda>w. discount_factor r n w * der w))\n  \\<in> borel_measurable\n         (infinite_coin_toss_space.nat_filtration N (matur - Suc n))\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n     (\\<lambda>w. discount_factor r n w * der w))\n  \\<in> borel_measurable ?N \\<Longrightarrow>\n  (\\<lambda>w.\n      discount_factor ?r ?m w *\n      real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n         (\\<lambda>w. discount_factor r n w * der w))\n       w)\n  \\<in> borel_measurable ?N\n\ngoal (1 subgoal):\n 1. (\\<lambda>a.\n        discount_factor r (Suc 0) a *\n        real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n         (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n           (\\<lambda>w. discount_factor r n w * der w))\n         a)\n    \\<in> borel_measurable\n           (infinite_coin_toss_space.nat_filtration N (matur - Suc n))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>a.\n      discount_factor r (Suc 0) a *\n      real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n         (discounted_value r (\\<lambda>m. der) n))\n       a)\n  \\<in> borel_measurable\n         (infinite_coin_toss_space.nat_filtration N (matur - Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>a.\n      discount_factor r (Suc 0) a *\n      real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n         (discounted_value r (\\<lambda>m. der) n))\n       a)\n  \\<in> borel_measurable\n         (infinite_coin_toss_space.nat_filtration N (matur - Suc n))\n\ngoal (4 subgoals):\n 1. infinite_coin_toss_space ?p N\n 2. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n            (discounted_value r (\\<lambda>m. der) n))\n          w)\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (discounted_value r (\\<lambda>m. der) (Suc n)))\n 3. 0 < ?p\n 4. ?p < 1", "show \"0 < q\" \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "by auto"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal (2 subgoals):\n 1. infinite_coin_toss_space q N\n 2. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n            (discounted_value r (\\<lambda>m. der) n))\n          w)\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (discounted_value r (\\<lambda>m. der) (Suc n)))", "show \"infinite_coin_toss_space q N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "by (simp add: infinite_coin_toss_space_def)"], ["proof (state)\nthis:\n  infinite_coin_toss_space q N\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n            (discounted_value r (\\<lambda>m. der) n))\n          w)\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (discounted_value r (\\<lambda>m. der) (Suc n)))", "show \"AEeq N (\\<lambda>w. discount_factor r (Suc 0) w *\n                 real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n                  (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n)) (discounted_value r (\\<lambda>m. der) n)) w)\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n)) (discounted_value r (\\<lambda>m. der) (Suc n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n            (discounted_value r (\\<lambda>m. der) n))\n          w)\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (discounted_value r (\\<lambda>m. der) (Suc n)))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n            (discounted_value r (\\<lambda>m. der) n))\n          w)\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (discounted_value r (\\<lambda>m. der) (Suc n)))", "have \"AEeq N\n        (\\<lambda>w. discount_factor r (Suc 0) w *\n                 real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n                  (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n)) (discounted_value r (\\<lambda>m. der) n)) w)\n        (\\<lambda>w. discount_factor r (Suc 0) w *\n                 real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n)) (discounted_value r (\\<lambda>m. der) n) w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n            (discounted_value r (\\<lambda>m. der) n))\n          w)\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (discounted_value r (\\<lambda>m. der) n) w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n            (discounted_value r (\\<lambda>m. der) n))\n          w)\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (discounted_value r (\\<lambda>m. der) n) w)", "have \"AEeq N (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n                  (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n)) (discounted_value r (\\<lambda>m. der) n)))\n                (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n)) (discounted_value r (\\<lambda>m. der) n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n         (discounted_value r (\\<lambda>m. der) n)))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (discounted_value r (\\<lambda>m. der) n))", "proof (rule sigma_finite_subalgebra.real_cond_exp_nested_subalg)"], ["proof (state)\ngoal (4 subgoals):\n 1. sigma_finite_subalgebra N\n     (stoch_proc_filt N geom_proc borel (matur - Suc n))\n 2. subalgebra N (stoch_proc_filt N geom_proc borel (matur - n))\n 3. subalgebra (stoch_proc_filt N geom_proc borel (matur - n))\n     (stoch_proc_filt N geom_proc borel (matur - Suc n))\n 4. integrable N (discounted_value r (\\<lambda>m. der) n)", "show \"sigma_finite_subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_finite_subalgebra N\n     (stoch_proc_filt N geom_proc borel (matur - Suc n))", "using assms(2) assms(3) assms(4) bernoulli_sigma_finite stock_filtration_eq"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>n. sigma_finite_subalgebra ?N (G n)\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> G ?n = stoch_proc_filt ?N geom_proc borel ?n\n\ngoal (1 subgoal):\n 1. sigma_finite_subalgebra N\n     (stoch_proc_filt N geom_proc borel (matur - Suc n))", "by auto"], ["proof (state)\nthis:\n  sigma_finite_subalgebra N\n   (stoch_proc_filt N geom_proc borel (matur - Suc n))\n\ngoal (3 subgoals):\n 1. subalgebra N (stoch_proc_filt N geom_proc borel (matur - n))\n 2. subalgebra (stoch_proc_filt N geom_proc borel (matur - n))\n     (stoch_proc_filt N geom_proc borel (matur - Suc n))\n 3. integrable N (discounted_value r (\\<lambda>m. der) n)", "show \"subalgebra N (stoch_proc_filt N geom_proc borel (matur - n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subalgebra N (stoch_proc_filt N geom_proc borel (matur - n))", "using assms(2) assms(3) assms(4) bernoulli_sigma_finite sigma_finite_subalgebra.subalg\n              stock_filtration_eq"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>n. sigma_finite_subalgebra ?N (G n)\n  sigma_finite_subalgebra ?M ?F \\<Longrightarrow> subalgebra ?M ?F\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> G ?n = stoch_proc_filt ?N geom_proc borel ?n\n\ngoal (1 subgoal):\n 1. subalgebra N (stoch_proc_filt N geom_proc borel (matur - n))", "by fastforce"], ["proof (state)\nthis:\n  subalgebra N (stoch_proc_filt N geom_proc borel (matur - n))\n\ngoal (2 subgoals):\n 1. subalgebra (stoch_proc_filt N geom_proc borel (matur - n))\n     (stoch_proc_filt N geom_proc borel (matur - Suc n))\n 2. integrable N (discounted_value r (\\<lambda>m. der) n)", "show \"subalgebra (stoch_proc_filt N geom_proc borel (matur - n)) (stoch_proc_filt N geom_proc borel (matur - Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subalgebra (stoch_proc_filt N geom_proc borel (matur - n))\n     (stoch_proc_filt N geom_proc borel (matur - Suc n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subalgebra (stoch_proc_filt N geom_proc borel (matur - n))\n     (stoch_proc_filt N geom_proc borel (matur - Suc n))", "have \"init_triv_filt M (stoch_proc_filt M geom_proc borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. init_triv_filt M (stoch_proc_filt M geom_proc borel)", "using infinite_cts_filtration.stoch_proc_filt_triv_init"], ["proof (prove)\nusing this:\n  \\<lbrakk>infinite_cts_filtration ?p ?M ?F;\n   borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration ?M)\n    ?X\\<rbrakk>\n  \\<Longrightarrow> init_triv_filt ?M (stoch_proc_filt ?M ?X borel)\n\ngoal (1 subgoal):\n 1. init_triv_filt M (stoch_proc_filt M geom_proc borel)", "using info_filtration stock_filtration"], ["proof (prove)\nusing this:\n  \\<lbrakk>infinite_cts_filtration ?p ?M ?F;\n   borel_adapt_stoch_proc (infinite_coin_toss_space.nat_filtration ?M)\n    ?X\\<rbrakk>\n  \\<Longrightarrow> init_triv_filt ?M (stoch_proc_filt ?M ?X borel)\n  init_triv_filt M G\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. init_triv_filt M (stoch_proc_filt M geom_proc borel)", "by auto"], ["proof (state)\nthis:\n  init_triv_filt M (stoch_proc_filt M geom_proc borel)\n\ngoal (1 subgoal):\n 1. subalgebra (stoch_proc_filt N geom_proc borel (matur - n))\n     (stoch_proc_filt N geom_proc borel (matur - Suc n))", "moreover"], ["proof (state)\nthis:\n  init_triv_filt M (stoch_proc_filt M geom_proc borel)\n\ngoal (1 subgoal):\n 1. subalgebra (stoch_proc_filt N geom_proc borel (matur - n))\n     (stoch_proc_filt N geom_proc borel (matur - Suc n))", "have \"matur - (Suc n) \\<le> matur - n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matur - Suc n \\<le> matur - n", "by simp"], ["proof (state)\nthis:\n  matur - Suc n \\<le> matur - n\n\ngoal (1 subgoal):\n 1. subalgebra (stoch_proc_filt N geom_proc borel (matur - n))\n     (stoch_proc_filt N geom_proc borel (matur - Suc n))", "ultimately"], ["proof (chain)\npicking this:\n  init_triv_filt M (stoch_proc_filt M geom_proc borel)\n  matur - Suc n \\<le> matur - n", "show ?thesis"], ["proof (prove)\nusing this:\n  init_triv_filt M (stoch_proc_filt M geom_proc borel)\n  matur - Suc n \\<le> matur - n\n\ngoal (1 subgoal):\n 1. subalgebra (stoch_proc_filt N geom_proc borel (matur - n))\n     (stoch_proc_filt N geom_proc borel (matur - Suc n))", "unfolding init_triv_filt_def filtration_def"], ["proof (prove)\nusing this:\n  ((\\<forall>t. subalgebra M (stoch_proc_filt M geom_proc borel t)) \\<and>\n   (\\<forall>s t.\n       s \\<le> t \\<longrightarrow>\n       subalgebra (stoch_proc_filt M geom_proc borel t)\n        (stoch_proc_filt M geom_proc borel s))) \\<and>\n  sets (stoch_proc_filt M geom_proc borel \\<bottom>) = {{}, space M}\n  matur - Suc n \\<le> matur - n\n\ngoal (1 subgoal):\n 1. subalgebra (stoch_proc_filt N geom_proc borel (matur - n))\n     (stoch_proc_filt N geom_proc borel (matur - Suc n))", "using assms(2) assms(3) assms(4) stock_filtration stock_filtration_eq"], ["proof (prove)\nusing this:\n  ((\\<forall>t. subalgebra M (stoch_proc_filt M geom_proc borel t)) \\<and>\n   (\\<forall>s t.\n       s \\<le> t \\<longrightarrow>\n       subalgebra (stoch_proc_filt M geom_proc borel t)\n        (stoch_proc_filt M geom_proc borel s))) \\<and>\n  sets (stoch_proc_filt M geom_proc borel \\<bottom>) = {{}, space M}\n  matur - Suc n \\<le> matur - n\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  G = stoch_proc_filt M geom_proc borel\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> G ?n = stoch_proc_filt ?N geom_proc borel ?n\n\ngoal (1 subgoal):\n 1. subalgebra (stoch_proc_filt N geom_proc borel (matur - n))\n     (stoch_proc_filt N geom_proc borel (matur - Suc n))", "by auto"], ["proof (state)\nthis:\n  subalgebra (stoch_proc_filt N geom_proc borel (matur - n))\n   (stoch_proc_filt N geom_proc borel (matur - Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subalgebra (stoch_proc_filt N geom_proc borel (matur - n))\n   (stoch_proc_filt N geom_proc borel (matur - Suc n))\n\ngoal (1 subgoal):\n 1. integrable N (discounted_value r (\\<lambda>m. der) n)", "show \"integrable N (discounted_value r (\\<lambda>m. der) n) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable N (discounted_value r (\\<lambda>m. der) n)", "using bernoulli_discounted_integrable[of N q der matur r n] acceptable_rate assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>N = bernoulli_stream q; 0 < q; q < 1;\n   der \\<in> borel_measurable (nat_filtration matur); - 1 < r\\<rbrakk>\n  \\<Longrightarrow> integrable N (discounted_value r (\\<lambda>m. der) n)\n  - 1 < r\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. integrable N (discounted_value r (\\<lambda>m. der) n)", "using geom_rand_walk_borel_adapted measurable_from_subalg stoch_proc_subalg_nat_filt stock_filtration"], ["proof (prove)\nusing this:\n  \\<lbrakk>N = bernoulli_stream q; 0 < q; q < 1;\n   der \\<in> borel_measurable (nat_filtration matur); - 1 < r\\<rbrakk>\n  \\<Longrightarrow> integrable N (discounted_value r (\\<lambda>m. der) n)\n  - 1 < r\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  \\<lbrakk>subalgebra ?M ?F; ?f \\<in> ?F \\<rightarrow>\\<^sub>M ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> ?M \\<rightarrow>\\<^sub>M ?N\n  borel_adapt_stoch_proc nat_filtration ?X \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M ?X borel ?n)\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. integrable N (discounted_value r (\\<lambda>m. der) n)", "by blast"], ["proof (state)\nthis:\n  integrable N (discounted_value r (\\<lambda>m. der) n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n)))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (discounted_value r (\\<lambda>m. der) n))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n            (discounted_value r (\\<lambda>m. der) n))\n          w)\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (discounted_value r (\\<lambda>m. der) n) w)", "thus ?thesis"], ["proof (prove)\nusing this:\n  AEeq N\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n       (discounted_value r (\\<lambda>m. der) n)))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (discounted_value r (\\<lambda>m. der) n))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n            (discounted_value r (\\<lambda>m. der) n))\n          w)\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (discounted_value r (\\<lambda>m. der) n) w)", "by auto"], ["proof (state)\nthis:\n  AEeq N\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n          (discounted_value r (\\<lambda>m. der) n))\n        w)\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (discounted_value r (\\<lambda>m. der) n) w)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AEeq N\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n          (discounted_value r (\\<lambda>m. der) n))\n        w)\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (discounted_value r (\\<lambda>m. der) n) w)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n            (discounted_value r (\\<lambda>m. der) n))\n          w)\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (discounted_value r (\\<lambda>m. der) (Suc n)))", "moreover"], ["proof (state)\nthis:\n  AEeq N\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n          (discounted_value r (\\<lambda>m. der) n))\n        w)\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (discounted_value r (\\<lambda>m. der) n) w)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n            (discounted_value r (\\<lambda>m. der) n))\n          w)\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (discounted_value r (\\<lambda>m. der) (Suc n)))", "have \"AEeq N\n        (\\<lambda>w. discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n)) (discounted_value r (\\<lambda>m. der) n) w)\n        (\\<lambda>w. discount_factor r (Suc 0) w * (discounted_value r\n         (\\<lambda>m. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n)) der) n) w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (discounted_value r (\\<lambda>m. der) n) w)\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         discounted_value r\n          (\\<lambda>m.\n              real_cond_exp N\n               (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n          n w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (discounted_value r (\\<lambda>m. der) n) w)\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         discounted_value r\n          (\\<lambda>m.\n              real_cond_exp N\n               (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n          n w)", "have \"AEeq N (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n)) (discounted_value r (\\<lambda>m. der) n))\n          (discounted_value r\n         (\\<lambda>m. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n)) der) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (discounted_value r (\\<lambda>m. der) n))\n     (discounted_value r\n       (\\<lambda>m.\n           real_cond_exp N\n            (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n       n)", "proof (rule prob_space.discounted_value_real_cond_exp)"], ["proof (state)\ngoal (4 subgoals):\n 1. prob_space N\n 2. integrable N der\n 3. - 1 < r\n 4. subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))", "show \"prob_space N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space N", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. prob_space N", "by (simp add: bernoulli bernoulli_stream_def prob_space.prob_space_stream_space prob_space_measure_pmf)"], ["proof (state)\nthis:\n  prob_space N\n\ngoal (3 subgoals):\n 1. integrable N der\n 2. - 1 < r\n 3. subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))", "have \"der \\<in> borel_measurable (nat_filtration matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (nat_filtration matur)", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (nat_filtration matur)", "using geom_rand_walk_borel_adapted measurable_from_subalg stoch_proc_subalg_nat_filt stock_filtration"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  \\<lbrakk>subalgebra ?M ?F; ?f \\<in> ?F \\<rightarrow>\\<^sub>M ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> ?M \\<rightarrow>\\<^sub>M ?N\n  borel_adapt_stoch_proc nat_filtration ?X \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M ?X borel ?n)\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (nat_filtration matur)", "by blast"], ["proof (state)\nthis:\n  der \\<in> borel_measurable (nat_filtration matur)\n\ngoal (3 subgoals):\n 1. integrable N der\n 2. - 1 < r\n 3. subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))", "show \"integrable N der\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable N der", "proof (rule infinite_coin_toss_space.nat_filtration_borel_measurable_integrable)"], ["proof (state)\ngoal (2 subgoals):\n 1. infinite_coin_toss_space ?p N\n 2. der\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)", "show \"infinite_coin_toss_space q N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "by (simp add: infinite_coin_toss_space_def)"], ["proof (state)\nthis:\n  infinite_coin_toss_space q N\n\ngoal (1 subgoal):\n 1. der\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)", "show \"der \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. der\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N matur)", "by (metis \\<open>der \\<in> borel_measurable (nat_filtration matur)\\<close> \\<open>infinite_coin_toss_space q N\\<close>\n                  assms(2) assms(3) assms(4) infinite_coin_toss_space.nat_filtration_space measurable_from_subalg\n                  nat_filtration_from_eq_sets nat_filtration_space subalgebra_def subset_eq)"], ["proof (state)\nthis:\n  der\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N matur)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  integrable N der\n\ngoal (2 subgoals):\n 1. - 1 < r\n 2. subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))", "show \"-1 < r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 < r", "using acceptable_rate"], ["proof (prove)\nusing this:\n  - 1 < r\n\ngoal (1 subgoal):\n 1. - 1 < r", "."], ["proof (state)\nthis:\n  - 1 < r\n\ngoal (1 subgoal):\n 1. subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))", "show \"subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))", "using assms(2) assms(3) assms(4) bernoulli_sigma_finite sigma_finite_subalgebra.subalg\n              stock_filtration_eq"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>n. sigma_finite_subalgebra ?N (G n)\n  sigma_finite_subalgebra ?M ?F \\<Longrightarrow> subalgebra ?M ?F\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> G ?n = stoch_proc_filt ?N geom_proc borel ?n\n\ngoal (1 subgoal):\n 1. subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))", "by fastforce"], ["proof (state)\nthis:\n  subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (discounted_value r (\\<lambda>m. der) n))\n   (discounted_value r\n     (\\<lambda>m.\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          der)\n     n)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (discounted_value r (\\<lambda>m. der) n) w)\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         discounted_value r\n          (\\<lambda>m.\n              real_cond_exp N\n               (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n          n w)", "thus ?thesis"], ["proof (prove)\nusing this:\n  AEeq N\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (discounted_value r (\\<lambda>m. der) n))\n   (discounted_value r\n     (\\<lambda>m.\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          der)\n     n)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (discounted_value r (\\<lambda>m. der) n) w)\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         discounted_value r\n          (\\<lambda>m.\n              real_cond_exp N\n               (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n          n w)", "by auto"], ["proof (state)\nthis:\n  AEeq N\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (discounted_value r (\\<lambda>m. der) n) w)\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       discounted_value r\n        (\\<lambda>m.\n            real_cond_exp N\n             (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n        n w)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AEeq N\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (discounted_value r (\\<lambda>m. der) n) w)\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       discounted_value r\n        (\\<lambda>m.\n            real_cond_exp N\n             (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n        n w)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n            (discounted_value r (\\<lambda>m. der) n))\n          w)\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (discounted_value r (\\<lambda>m. der) (Suc n)))", "moreover"], ["proof (state)\nthis:\n  AEeq N\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (discounted_value r (\\<lambda>m. der) n) w)\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       discounted_value r\n        (\\<lambda>m.\n            real_cond_exp N\n             (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n        n w)\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n            (discounted_value r (\\<lambda>m. der) n))\n          w)\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (discounted_value r (\\<lambda>m. der) (Suc n)))", "have \"\\<forall>w. (\\<lambda>w. discount_factor r (Suc 0) w * (discounted_value r\n         (\\<lambda>m. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n)) der) n) w) w =\n        (discounted_value r\n         (\\<lambda>m. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n)) der) (Suc n)) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w.\n       discount_factor r (Suc 0) w *\n       discounted_value r\n        (\\<lambda>m.\n            real_cond_exp N\n             (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n        n w =\n       discounted_value r\n        (\\<lambda>m.\n            real_cond_exp N\n             (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n        (Suc n) w", "unfolding discounted_value_def discount_factor_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w.\n       inverse (disc_rfr_proc r (Suc 0) w) *\n       (inverse (disc_rfr_proc r n w) *\n        real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n         der w) =\n       inverse (disc_rfr_proc r (Suc n) w) *\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        der w", "by simp"], ["proof (state)\nthis:\n  \\<forall>w.\n     discount_factor r (Suc 0) w *\n     discounted_value r\n      (\\<lambda>m.\n          real_cond_exp N\n           (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n      n w =\n     discounted_value r\n      (\\<lambda>m.\n          real_cond_exp N\n           (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n      (Suc n) w\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n            (discounted_value r (\\<lambda>m. der) n))\n          w)\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (discounted_value r (\\<lambda>m. der) (Suc n)))", "moreover"], ["proof (state)\nthis:\n  \\<forall>w.\n     discount_factor r (Suc 0) w *\n     discounted_value r\n      (\\<lambda>m.\n          real_cond_exp N\n           (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n      n w =\n     discounted_value r\n      (\\<lambda>m.\n          real_cond_exp N\n           (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n      (Suc n) w\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n            (discounted_value r (\\<lambda>m. der) n))\n          w)\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (discounted_value r (\\<lambda>m. der) (Suc n)))", "have \"AEeq N\n        (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (discounted_value r (\\<lambda>m. der) (Suc n)))\n        (discounted_value r\n        (\\<lambda>m. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n)) der) (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq N\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (discounted_value r (\\<lambda>m. der) (Suc n)))\n     (discounted_value r\n       (\\<lambda>m.\n           real_cond_exp N\n            (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n       (Suc n))", "proof (rule prob_space.discounted_value_real_cond_exp)"], ["proof (state)\ngoal (4 subgoals):\n 1. prob_space N\n 2. integrable N der\n 3. - 1 < r\n 4. subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))", "show \"prob_space N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space N", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. prob_space N", "by (simp add: bernoulli bernoulli_stream_def prob_space.prob_space_stream_space prob_space_measure_pmf)"], ["proof (state)\nthis:\n  prob_space N\n\ngoal (3 subgoals):\n 1. integrable N der\n 2. - 1 < r\n 3. subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))", "have \"der \\<in> borel_measurable (nat_filtration matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (nat_filtration matur)", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (nat_filtration matur)", "using geom_rand_walk_borel_adapted measurable_from_subalg stoch_proc_subalg_nat_filt stock_filtration"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  \\<lbrakk>subalgebra ?M ?F; ?f \\<in> ?F \\<rightarrow>\\<^sub>M ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> ?M \\<rightarrow>\\<^sub>M ?N\n  borel_adapt_stoch_proc nat_filtration ?X \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M ?X borel ?n)\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (nat_filtration matur)", "by blast"], ["proof (state)\nthis:\n  der \\<in> borel_measurable (nat_filtration matur)\n\ngoal (3 subgoals):\n 1. integrable N der\n 2. - 1 < r\n 3. subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))", "show \"integrable N der\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable N der", "proof (rule infinite_coin_toss_space.nat_filtration_borel_measurable_integrable)"], ["proof (state)\ngoal (2 subgoals):\n 1. infinite_coin_toss_space ?p N\n 2. der\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)", "show \"infinite_coin_toss_space q N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. infinite_coin_toss_space q N", "by (simp add: infinite_coin_toss_space_def)"], ["proof (state)\nthis:\n  infinite_coin_toss_space q N\n\ngoal (1 subgoal):\n 1. der\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N ?n)", "show \"der \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. der\n    \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N matur)", "by (metis \\<open>der \\<in> borel_measurable (nat_filtration matur)\\<close> \\<open>infinite_coin_toss_space q N\\<close>\n                assms(2) assms(3) assms(4) infinite_coin_toss_space.nat_filtration_space measurable_from_subalg\n                nat_filtration_from_eq_sets nat_filtration_space subalgebra_def subset_eq)"], ["proof (state)\nthis:\n  der\n  \\<in> borel_measurable (infinite_coin_toss_space.nat_filtration N matur)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  integrable N der\n\ngoal (2 subgoals):\n 1. - 1 < r\n 2. subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))", "show \"-1 < r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 < r", "using acceptable_rate"], ["proof (prove)\nusing this:\n  - 1 < r\n\ngoal (1 subgoal):\n 1. - 1 < r", "."], ["proof (state)\nthis:\n  - 1 < r\n\ngoal (1 subgoal):\n 1. subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))", "show \"subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))", "using assms(2) assms(3) assms(4) bernoulli_sigma_finite sigma_finite_subalgebra.subalg\n            stock_filtration_eq"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>n. sigma_finite_subalgebra ?N (G n)\n  sigma_finite_subalgebra ?M ?F \\<Longrightarrow> subalgebra ?M ?F\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> G ?n = stoch_proc_filt ?N geom_proc borel ?n\n\ngoal (1 subgoal):\n 1. subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))", "by fastforce"], ["proof (state)\nthis:\n  subalgebra N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AEeq N\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (discounted_value r (\\<lambda>m. der) (Suc n)))\n   (discounted_value r\n     (\\<lambda>m.\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          der)\n     (Suc n))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n            (discounted_value r (\\<lambda>m. der) n))\n          w)\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (discounted_value r (\\<lambda>m. der) (Suc n)))", "ultimately"], ["proof (chain)\npicking this:\n  AEeq N\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n          (discounted_value r (\\<lambda>m. der) n))\n        w)\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (discounted_value r (\\<lambda>m. der) n) w)\n  AEeq N\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (discounted_value r (\\<lambda>m. der) n) w)\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       discounted_value r\n        (\\<lambda>m.\n            real_cond_exp N\n             (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n        n w)\n  \\<forall>w.\n     discount_factor r (Suc 0) w *\n     discounted_value r\n      (\\<lambda>m.\n          real_cond_exp N\n           (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n      n w =\n     discounted_value r\n      (\\<lambda>m.\n          real_cond_exp N\n           (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n      (Suc n) w\n  AEeq N\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (discounted_value r (\\<lambda>m. der) (Suc n)))\n   (discounted_value r\n     (\\<lambda>m.\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          der)\n     (Suc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  AEeq N\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n          (discounted_value r (\\<lambda>m. der) n))\n        w)\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (discounted_value r (\\<lambda>m. der) n) w)\n  AEeq N\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (discounted_value r (\\<lambda>m. der) n) w)\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       discounted_value r\n        (\\<lambda>m.\n            real_cond_exp N\n             (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n        n w)\n  \\<forall>w.\n     discount_factor r (Suc 0) w *\n     discounted_value r\n      (\\<lambda>m.\n          real_cond_exp N\n           (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n      n w =\n     discounted_value r\n      (\\<lambda>m.\n          real_cond_exp N\n           (stoch_proc_filt N geom_proc borel (matur - Suc n)) der)\n      (Suc n) w\n  AEeq N\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (discounted_value r (\\<lambda>m. der) (Suc n)))\n   (discounted_value r\n     (\\<lambda>m.\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          der)\n     (Suc n))\n\ngoal (1 subgoal):\n 1. AEeq N\n     (\\<lambda>w.\n         discount_factor r (Suc 0) w *\n         real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n          (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n            (discounted_value r (\\<lambda>m. der) n))\n          w)\n     (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n       (discounted_value r (\\<lambda>m. der) (Suc n)))", "by auto"], ["proof (state)\nthis:\n  AEeq N\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n          (discounted_value r (\\<lambda>m. der) n))\n        w)\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (discounted_value r (\\<lambda>m. der) (Suc n)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AEeq N\n   (\\<lambda>w.\n       discount_factor r (Suc 0) w *\n       real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n        (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n          (discounted_value r (\\<lambda>m. der) n))\n        w)\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (discounted_value r (\\<lambda>m. der) (Suc n)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  discount_factor r (Suc 0) w *\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n   w =\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (discounted_value r (\\<lambda>m. der) (Suc n)) w\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "also"], ["proof (state)\nthis:\n  discount_factor r (Suc 0) w *\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - n))\n     (discounted_value r (\\<lambda>m. der) n))\n   w =\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (discounted_value r (\\<lambda>m. der) (Suc n)) w\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "have \"... = expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n    (discounted_value r (\\<lambda>m. der) (Suc n)) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n     (discounted_value r (\\<lambda>m. der) (Suc n)) w =\n    expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n     (discounted_value r (\\<lambda>m. der) (Suc n)) w", "proof (rule real_exp_eq)"], ["proof (state)\ngoal (4 subgoals):\n 1. discounted_value r (\\<lambda>m. der) (Suc n)\n    \\<in> borel_measurable (G ?matur)\n 2. N = bernoulli_stream ?q\n 3. 0 < ?q\n 4. ?q < 1", "show \"discounted_value r (\\<lambda>m. der) (Suc n) \\<in> borel_measurable (G matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discounted_value r (\\<lambda>m. der) (Suc n)\n    \\<in> borel_measurable (G matur)", "using assms discounted_measurable[of der]"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  der \\<in> borel_measurable ?N \\<Longrightarrow>\n  discounted_value ?r (\\<lambda>m. der) ?m \\<in> borel_measurable ?N\n\ngoal (1 subgoal):\n 1. discounted_value r (\\<lambda>m. der) (Suc n)\n    \\<in> borel_measurable (G matur)", "by simp"], ["proof (state)\nthis:\n  discounted_value r (\\<lambda>m. der) (Suc n)\n  \\<in> borel_measurable (G matur)\n\ngoal (3 subgoals):\n 1. N = bernoulli_stream ?q\n 2. 0 < ?q\n 3. ?q < 1", "show \"N = bernoulli_stream q\" \"0 < q\" \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N = bernoulli_stream q &&& 0 < q &&& q < 1", "using assms"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. N = bernoulli_stream q &&& 0 < q &&& q < 1", "by auto"], ["proof (state)\nthis:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real_cond_exp N (stoch_proc_filt N geom_proc borel (matur - Suc n))\n   (discounted_value r (\\<lambda>m. der) (Suc n)) w =\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n   (discounted_value r (\\<lambda>m. der) (Suc n)) w\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       \\<lbrakk>\\<And>w.\n                   n \\<le> matur \\<Longrightarrow>\n                   rn_rev_price N der matur n w =\n                   expl_cond_expect N\n                    (proj_stoch_proc geom_proc (matur - n))\n                    (discounted_value r (\\<lambda>m. der) n) w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> rn_rev_price N der matur (Suc n) w =\n                         expl_cond_expect N\n                          (proj_stoch_proc geom_proc (matur - Suc n))\n                          (discounted_value r (\\<lambda>m. der) (Suc n)) w", "finally"], ["proof (chain)\npicking this:\n  rn_rev_price N der matur (Suc n) w =\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n   (discounted_value r (\\<lambda>m. der) (Suc n)) w", "show \"rn_rev_price N der matur (Suc n) w =\n    expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n)) (discounted_value r (\\<lambda>m. der) (Suc n)) w\""], ["proof (prove)\nusing this:\n  rn_rev_price N der matur (Suc n) w =\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n   (discounted_value r (\\<lambda>m. der) (Suc n)) w\n\ngoal (1 subgoal):\n 1. rn_rev_price N der matur (Suc n) w =\n    expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n     (discounted_value r (\\<lambda>m. der) (Suc n)) w", "."], ["proof (state)\nthis:\n  rn_rev_price N der matur (Suc n) w =\n  expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc n))\n   (discounted_value r (\\<lambda>m. der) (Suc n)) w\n\ngoal:\nNo subgoals!", "qed"], ["", "definition (in CRR_market) rn_price where\n\"rn_price N der matur n w = expl_cond_expect N (proj_stoch_proc geom_proc n) (discounted_value r (\\<lambda>m. der) (matur - n)) w\""], ["", "definition (in CRR_market) rn_price_ind where\n\"rn_price_ind N der matur n w = rn_rev_price N der matur (matur - n) w\""], ["", "lemma (in CRR_market) rn_price_eq:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nand \"der \\<in> borel_measurable (G matur)\"\nand \"n \\<le> matur\"\nshows \"rn_price N der matur n w = rn_price_ind N der matur n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rn_price N der matur n w = rn_price_ind N der matur n w", "using rn_rev_expl_cond_expect"], ["proof (prove)\nusing this:\n  \\<lbrakk>?der \\<in> borel_measurable (G ?matur); ?N = bernoulli_stream ?q;\n   0 < ?q; ?q < 1; ?n \\<le> ?matur\\<rbrakk>\n  \\<Longrightarrow> rn_rev_price ?N ?der ?matur ?n ?w =\n                    expl_cond_expect ?N\n                     (proj_stoch_proc geom_proc (?matur - ?n))\n                     (discounted_value r (\\<lambda>m. ?der) ?n) ?w\n\ngoal (1 subgoal):\n 1. rn_price N der matur n w = rn_price_ind N der matur n w", "unfolding rn_price_def rn_price_ind_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?der \\<in> borel_measurable (G ?matur); ?N = bernoulli_stream ?q;\n   0 < ?q; ?q < 1; ?n \\<le> ?matur\\<rbrakk>\n  \\<Longrightarrow> rn_rev_price ?N ?der ?matur ?n ?w =\n                    expl_cond_expect ?N\n                     (proj_stoch_proc geom_proc (?matur - ?n))\n                     (discounted_value r (\\<lambda>m. ?der) ?n) ?w\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n)\n     (discounted_value r (\\<lambda>m. der) (matur - n)) w =\n    rn_rev_price N der matur (matur - n) w", "by (simp add: assms)"], ["", "lemma (in CRR_market) geom_proc_filt_info:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"f \\<in> borel_measurable (G n)\"\n  shows \"f w = f (pseudo_proj_True n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f w = f (pseudo_proj_True n w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f w = f (pseudo_proj_True n w)", "have \"subalgebra (nat_filtration n) (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subalgebra (nat_filtration n) (G n)", "using stoch_proc_subalg_nat_filt[of geom_proc n] geometric_process\n    stock_filtration geom_rand_walk_borel_adapted"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc nat_filtration geom_proc \\<Longrightarrow>\n  subalgebra (nat_filtration n) (stoch_proc_filt M geom_proc borel n)\n  geom_proc = geom_rand_walk u d init\n  G = stoch_proc_filt M geom_proc borel\n  borel_adapt_stoch_proc nat_filtration geom_proc\n\ngoal (1 subgoal):\n 1. subalgebra (nat_filtration n) (G n)", "by simp"], ["proof (state)\nthis:\n  subalgebra (nat_filtration n) (G n)\n\ngoal (1 subgoal):\n 1. f w = f (pseudo_proj_True n w)", "hence \"f\\<in> borel_measurable (nat_filtration n)\""], ["proof (prove)\nusing this:\n  subalgebra (nat_filtration n) (G n)\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (nat_filtration n)", "using assms"], ["proof (prove)\nusing this:\n  subalgebra (nat_filtration n) (G n)\n  f \\<in> borel_measurable (G n)\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (nat_filtration n)", "by (simp add: measurable_from_subalg)"], ["proof (state)\nthis:\n  f \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. f w = f (pseudo_proj_True n w)", "thus ?thesis"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. f w = f (pseudo_proj_True n w)", "using nat_filtration_info[of f n]"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (nat_filtration n)\n  f \\<in> borel_measurable (nat_filtration n) \\<Longrightarrow>\n  f \\<circ> pseudo_proj_True n = f\n\ngoal (1 subgoal):\n 1. f w = f (pseudo_proj_True n w)", "by (metis comp_apply)"], ["proof (state)\nthis:\n  f w = f (pseudo_proj_True n w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) geom_proc_filt_info':\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"f \\<in> borel_measurable (G n)\"\n  shows \"f w = f (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f w = f (pseudo_proj_False n w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f w = f (pseudo_proj_False n w)", "have \"subalgebra (nat_filtration n) (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subalgebra (nat_filtration n) (G n)", "using stoch_proc_subalg_nat_filt[of geom_proc n] geometric_process\n    stock_filtration geom_rand_walk_borel_adapted"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc nat_filtration geom_proc \\<Longrightarrow>\n  subalgebra (nat_filtration n) (stoch_proc_filt M geom_proc borel n)\n  geom_proc = geom_rand_walk u d init\n  G = stoch_proc_filt M geom_proc borel\n  borel_adapt_stoch_proc nat_filtration geom_proc\n\ngoal (1 subgoal):\n 1. subalgebra (nat_filtration n) (G n)", "by simp"], ["proof (state)\nthis:\n  subalgebra (nat_filtration n) (G n)\n\ngoal (1 subgoal):\n 1. f w = f (pseudo_proj_False n w)", "hence \"f\\<in> borel_measurable (nat_filtration n)\""], ["proof (prove)\nusing this:\n  subalgebra (nat_filtration n) (G n)\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (nat_filtration n)", "using assms"], ["proof (prove)\nusing this:\n  subalgebra (nat_filtration n) (G n)\n  f \\<in> borel_measurable (G n)\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (nat_filtration n)", "by (simp add: measurable_from_subalg)"], ["proof (state)\nthis:\n  f \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. f w = f (pseudo_proj_False n w)", "thus ?thesis"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. f w = f (pseudo_proj_False n w)", "using nat_filtration_info'[of f n]"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (nat_filtration n)\n  f \\<in> borel_measurable (nat_filtration n) \\<Longrightarrow>\n  f \\<circ> pseudo_proj_False n = f\n\ngoal (1 subgoal):\n 1. f w = f (pseudo_proj_False n w)", "by (metis comp_apply)"], ["proof (state)\nthis:\n  f w = f (pseudo_proj_False n w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) rn_price_borel_adapt:\nassumes \"cash_flow \\<in> borel_measurable (G matur)\"\nand \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nand \"n \\<le> matur\"\nshows \"(rn_price N cash_flow matur n) \\<in> borel_measurable (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rn_price N cash_flow matur n \\<in> borel_measurable (G n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rn_price N cash_flow matur n \\<in> borel_measurable (G n)", "show \"(rn_price N cash_flow matur n) \\<in> borel_measurable (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rn_price N cash_flow matur n \\<in> borel_measurable (G n)", "using assms rn_rev_price_rev_borel_adapt[of cash_flow matur N q \"matur - n\"] rn_price_eq rn_price_ind_def"], ["proof (prove)\nusing this:\n  cash_flow \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  n \\<le> matur\n  \\<lbrakk>cash_flow \\<in> borel_measurable (G matur);\n   N = bernoulli_stream q; 0 < q; q < 1; matur - n \\<le> matur\\<rbrakk>\n  \\<Longrightarrow> rn_rev_price N cash_flow matur (matur - n)\n                    \\<in> borel_measurable (G (matur - (matur - n)))\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1;\n   ?der \\<in> borel_measurable (G ?matur); ?n \\<le> ?matur\\<rbrakk>\n  \\<Longrightarrow> rn_price ?N ?der ?matur ?n ?w =\n                    rn_price_ind ?N ?der ?matur ?n ?w\n  rn_price_ind ?N ?der ?matur ?n ?w =\n  rn_rev_price ?N ?der ?matur (?matur - ?n) ?w\n\ngoal (1 subgoal):\n 1. rn_price N cash_flow matur n \\<in> borel_measurable (G n)", "by (smt add.right_neutral cancel_comm_monoid_add_class.diff_cancel diff_commute diff_le_self\n        increasing_measurable_info measurable_cong nat_le_linear ordered_cancel_comm_monoid_diff_class.add_diff_inverse)"], ["proof (state)\nthis:\n  rn_price N cash_flow matur n \\<in> borel_measurable (G n)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition (in CRR_market) delta_price where\n  \"delta_price N cash_flow T =\n    (\\<lambda> n w. if (Suc n \\<le> T)\n      then (rn_price N cash_flow T (Suc n) (pseudo_proj_True n w) - rn_price N cash_flow T (Suc n) (pseudo_proj_False n w))/\n        (geom_proc (Suc n) (spick w n True) - geom_proc (Suc n) (spick w n False))\n      else 0)\""], ["", "lemma (in CRR_market) delta_price_eq:\n  assumes \"Suc n \\<le> T\"\n  shows \"delta_price N cash_flow T n w = (rn_price N cash_flow T (Suc n) (spick w n True) - rn_price N cash_flow T (Suc n) (spick w n False))/\n    ((geom_proc n w) * (u - d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. delta_price N cash_flow T n w =\n    (rn_price N cash_flow T (Suc n) (spick w n True) -\n     rn_price N cash_flow T (Suc n) (spick w n False)) /\n    (geom_proc n w * (u - d))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. delta_price N cash_flow T n w =\n    (rn_price N cash_flow T (Suc n) (spick w n True) -\n     rn_price N cash_flow T (Suc n) (spick w n False)) /\n    (geom_proc n w * (u - d))", "have \"(geom_proc (Suc n) (spick w n True) - geom_proc (Suc n) (spick w n False)) = geom_proc n w * (u - d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n True) -\n    geom_proc (Suc n) (spick w n False) =\n    geom_proc n w * (u - d)", "by (simp add: geom_rand_walk_diff_induct)"], ["proof (state)\nthis:\n  geom_proc (Suc n) (spick w n True) - geom_proc (Suc n) (spick w n False) =\n  geom_proc n w * (u - d)\n\ngoal (1 subgoal):\n 1. delta_price N cash_flow T n w =\n    (rn_price N cash_flow T (Suc n) (spick w n True) -\n     rn_price N cash_flow T (Suc n) (spick w n False)) /\n    (geom_proc n w * (u - d))", "then"], ["proof (chain)\npicking this:\n  geom_proc (Suc n) (spick w n True) - geom_proc (Suc n) (spick w n False) =\n  geom_proc n w * (u - d)", "show ?thesis"], ["proof (prove)\nusing this:\n  geom_proc (Suc n) (spick w n True) - geom_proc (Suc n) (spick w n False) =\n  geom_proc n w * (u - d)\n\ngoal (1 subgoal):\n 1. delta_price N cash_flow T n w =\n    (rn_price N cash_flow T (Suc n) (spick w n True) -\n     rn_price N cash_flow T (Suc n) (spick w n False)) /\n    (geom_proc n w * (u - d))", "unfolding delta_price_def"], ["proof (prove)\nusing this:\n  geom_proc (Suc n) (spick w n True) - geom_proc (Suc n) (spick w n False) =\n  geom_proc n w * (u - d)\n\ngoal (1 subgoal):\n 1. (if Suc n \\<le> T\n     then (rn_price N cash_flow T (Suc n) (pseudo_proj_True n w) -\n           rn_price N cash_flow T (Suc n) (pseudo_proj_False n w)) /\n          (geom_proc (Suc n) (spick w n True) -\n           geom_proc (Suc n) (spick w n False))\n     else 0) =\n    (rn_price N cash_flow T (Suc n) (spick w n True) -\n     rn_price N cash_flow T (Suc n) (spick w n False)) /\n    (geom_proc n w * (u - d))", "using assms spick_eq_pseudo_proj_True spick_eq_pseudo_proj_False"], ["proof (prove)\nusing this:\n  geom_proc (Suc n) (spick w n True) - geom_proc (Suc n) (spick w n False) =\n  geom_proc n w * (u - d)\n  Suc n \\<le> T\n  spick ?w ?n True = pseudo_proj_True ?n ?w\n  spick ?w ?n False = pseudo_proj_False ?n ?w\n\ngoal (1 subgoal):\n 1. (if Suc n \\<le> T\n     then (rn_price N cash_flow T (Suc n) (pseudo_proj_True n w) -\n           rn_price N cash_flow T (Suc n) (pseudo_proj_False n w)) /\n          (geom_proc (Suc n) (spick w n True) -\n           geom_proc (Suc n) (spick w n False))\n     else 0) =\n    (rn_price N cash_flow T (Suc n) (spick w n True) -\n     rn_price N cash_flow T (Suc n) (spick w n False)) /\n    (geom_proc n w * (u - d))", "by simp"], ["proof (state)\nthis:\n  delta_price N cash_flow T n w =\n  (rn_price N cash_flow T (Suc n) (spick w n True) -\n   rn_price N cash_flow T (Suc n) (spick w n False)) /\n  (geom_proc n w * (u - d))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) geom_proc_spick:\n  shows \"geom_proc (Suc n) (spick w n x)  = (if x then u else d) * geom_proc n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n x) = (if x then u else d) * geom_proc n w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n x) = (if x then u else d) * geom_proc n w", "have \"geom_proc (Suc n) (spick w n x)  = geom_rand_walk u d init (Suc n) (spick w n x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n x) =\n    geom_rand_walk u d init (Suc n) (spick w n x)", "using geometric_process"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n x) =\n    geom_rand_walk u d init (Suc n) (spick w n x)", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc n) (spick w n x) =\n  geom_rand_walk u d init (Suc n) (spick w n x)\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n x) = (if x then u else d) * geom_proc n w", "also"], ["proof (state)\nthis:\n  geom_proc (Suc n) (spick w n x) =\n  geom_rand_walk u d init (Suc n) (spick w n x)\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n x) = (if x then u else d) * geom_proc n w", "have \"... = (case (spick w n x) !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) * geom_rand_walk u d init n (spick w n x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_rand_walk u d init (Suc n) (spick w n x) =\n    (case spick w n x !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_rand_walk u d init n (spick w n x)", "by simp"], ["proof (state)\nthis:\n  geom_rand_walk u d init (Suc n) (spick w n x) =\n  (case spick w n x !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n  geom_rand_walk u d init n (spick w n x)\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n x) = (if x then u else d) * geom_proc n w", "also"], ["proof (state)\nthis:\n  geom_rand_walk u d init (Suc n) (spick w n x) =\n  (case spick w n x !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n  geom_rand_walk u d init n (spick w n x)\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n x) = (if x then u else d) * geom_proc n w", "have \"... = (case x of True \\<Rightarrow> u | False \\<Rightarrow> d) * geom_rand_walk u d init n (spick w n x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (case spick w n x !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_rand_walk u d init n (spick w n x) =\n    (case x of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n    geom_rand_walk u d init n (spick w n x)", "unfolding spick_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case (stake n w @- x ## sconst True) !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_rand_walk u d init n (stake n w @- x ## sconst True) =\n    (case x of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n    geom_rand_walk u d init n (stake n w @- x ## sconst True)", "by simp"], ["proof (state)\nthis:\n  (case spick w n x !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n  geom_rand_walk u d init n (spick w n x) =\n  (case x of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n  geom_rand_walk u d init n (spick w n x)\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n x) = (if x then u else d) * geom_proc n w", "also"], ["proof (state)\nthis:\n  (case spick w n x !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n  geom_rand_walk u d init n (spick w n x) =\n  (case x of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n  geom_rand_walk u d init n (spick w n x)\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n x) = (if x then u else d) * geom_proc n w", "have \"... = (if x then u else d) * geom_rand_walk u d init n (spick w n x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (case x of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n    geom_rand_walk u d init n (spick w n x) =\n    (if x then u else d) * geom_rand_walk u d init n (spick w n x)", "by simp"], ["proof (state)\nthis:\n  (case x of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n  geom_rand_walk u d init n (spick w n x) =\n  (if x then u else d) * geom_rand_walk u d init n (spick w n x)\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n x) = (if x then u else d) * geom_proc n w", "also"], ["proof (state)\nthis:\n  (case x of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n  geom_rand_walk u d init n (spick w n x) =\n  (if x then u else d) * geom_rand_walk u d init n (spick w n x)\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n x) = (if x then u else d) * geom_proc n w", "have \"... = (if x then u else d) * geom_rand_walk u d init n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if x then u else d) * geom_rand_walk u d init n (spick w n x) =\n    (if x then u else d) * geom_rand_walk u d init n w", "by (metis comp_def geom_rand_walk_pseudo_proj_True geometric_process pseudo_proj_True_stake_image spickI)"], ["proof (state)\nthis:\n  (if x then u else d) * geom_rand_walk u d init n (spick w n x) =\n  (if x then u else d) * geom_rand_walk u d init n w\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n x) = (if x then u else d) * geom_proc n w", "finally"], ["proof (chain)\npicking this:\n  geom_proc (Suc n) (spick w n x) =\n  (if x then u else d) * geom_rand_walk u d init n w", "show ?thesis"], ["proof (prove)\nusing this:\n  geom_proc (Suc n) (spick w n x) =\n  (if x then u else d) * geom_rand_walk u d init n w\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n x) = (if x then u else d) * geom_proc n w", "using geometric_process"], ["proof (prove)\nusing this:\n  geom_proc (Suc n) (spick w n x) =\n  (if x then u else d) * geom_rand_walk u d init n w\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n x) = (if x then u else d) * geom_proc n w", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc n) (spick w n x) = (if x then u else d) * geom_proc n w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) spick_red_geom:\n  shows \"(\\<lambda>w. spick w n x) \\<in> measurable (fct_gen_subalgebra M borel (geom_proc n)) (fct_gen_subalgebra M borel (geom_proc (Suc n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x)\n    \\<in> fct_gen_subalgebra M borel (geom_proc n) \\<rightarrow>\\<^sub>M\n          fct_gen_subalgebra M borel (geom_proc (Suc n))", "unfolding measurable_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x)\n    \\<in> {f \\<in> space\n                    (fct_gen_subalgebra M borel (geom_proc n)) \\<rightarrow>\n                   space (fct_gen_subalgebra M borel (geom_proc (Suc n))).\n           \\<forall>y\\<in>sets\n                           (fct_gen_subalgebra M borel (geom_proc (Suc n))).\n              f -` y \\<inter>\n              space (fct_gen_subalgebra M borel (geom_proc n))\n              \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))}", "proof (intro CollectI conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>w. spick w n x)\n    \\<in> space (fct_gen_subalgebra M borel (geom_proc n)) \\<rightarrow>\n          space (fct_gen_subalgebra M borel (geom_proc (Suc n)))\n 2. \\<forall>y\\<in>sets (fct_gen_subalgebra M borel (geom_proc (Suc n))).\n       (\\<lambda>w. spick w n x) -` y \\<inter>\n       space (fct_gen_subalgebra M borel (geom_proc n))\n       \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "show \"(\\<lambda>w. spick w n x)\n    \\<in> space (fct_gen_subalgebra M borel (geom_proc n)) \\<rightarrow> space (fct_gen_subalgebra M borel (geom_proc (Suc n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x)\n    \\<in> space (fct_gen_subalgebra M borel (geom_proc n)) \\<rightarrow>\n          space (fct_gen_subalgebra M borel (geom_proc (Suc n)))", "by (simp add: bernoulli bernoulli_stream_space fct_gen_subalgebra_space)"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x)\n  \\<in> space (fct_gen_subalgebra M borel (geom_proc n)) \\<rightarrow>\n        space (fct_gen_subalgebra M borel (geom_proc (Suc n)))\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>sets (fct_gen_subalgebra M borel (geom_proc (Suc n))).\n       (\\<lambda>w. spick w n x) -` y \\<inter>\n       space (fct_gen_subalgebra M borel (geom_proc n))\n       \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "show \"\\<forall>y\\<in>sets (fct_gen_subalgebra M borel (geom_proc (Suc n))).\n       (\\<lambda>w. spick w n x) -` y \\<inter> space (fct_gen_subalgebra M borel (geom_proc n))\n       \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>sets (fct_gen_subalgebra M borel (geom_proc (Suc n))).\n       (\\<lambda>w. spick w n x) -` y \\<inter>\n       space (fct_gen_subalgebra M borel (geom_proc n))\n       \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets\n                (fct_gen_subalgebra M borel\n                  (geom_proc (Suc n))) \\<Longrightarrow>\n       (\\<lambda>w. spick w n x) -` y \\<inter>\n       space (fct_gen_subalgebra M borel (geom_proc n))\n       \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "fix A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets\n                (fct_gen_subalgebra M borel\n                  (geom_proc (Suc n))) \\<Longrightarrow>\n       (\\<lambda>w. spick w n x) -` y \\<inter>\n       space (fct_gen_subalgebra M borel (geom_proc n))\n       \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "assume A: \"A \\<in> sets (fct_gen_subalgebra M borel (geom_proc (Suc n)))\""], ["proof (state)\nthis:\n  A \\<in> sets (fct_gen_subalgebra M borel (geom_proc (Suc n)))\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets\n                (fct_gen_subalgebra M borel\n                  (geom_proc (Suc n))) \\<Longrightarrow>\n       (\\<lambda>w. spick w n x) -` y \\<inter>\n       space (fct_gen_subalgebra M borel (geom_proc n))\n       \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "show \"(\\<lambda>w. spick w n x) -` A \\<inter> space (fct_gen_subalgebra M borel (geom_proc n)) \\<in>\n    sets (fct_gen_subalgebra M borel (geom_proc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A \\<inter>\n    space (fct_gen_subalgebra M borel (geom_proc n))\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A \\<inter>\n    space (fct_gen_subalgebra M borel (geom_proc n))\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "define sp where \"sp = (\\<lambda>w. spick w n x)\""], ["proof (state)\nthis:\n  sp = (\\<lambda>w. spick w n x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A \\<inter>\n    space (fct_gen_subalgebra M borel (geom_proc n))\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "have \"A \\<in> {(geom_proc (Suc n)) -` B \\<inter> space M |B. B \\<in> sets borel}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> {geom_proc (Suc n) -` B \\<inter> space M |B. B \\<in> sets borel}", "using A"], ["proof (prove)\nusing this:\n  A \\<in> sets (fct_gen_subalgebra M borel (geom_proc (Suc n)))\n\ngoal (1 subgoal):\n 1. A \\<in> {geom_proc (Suc n) -` B \\<inter> space M |B. B \\<in> sets borel}", "by (simp add:fct_gen_subalgebra_sigma_sets)"], ["proof (state)\nthis:\n  A \\<in> {geom_proc (Suc n) -` B \\<inter> space M |B. B \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A \\<inter>\n    space (fct_gen_subalgebra M borel (geom_proc n))\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "from this"], ["proof (chain)\npicking this:\n  A \\<in> {geom_proc (Suc n) -` B \\<inter> space M |B. B \\<in> sets borel}", "obtain C where \"C\\<in> sets borel\" and \"A = (geom_proc (Suc n)) -`C \\<inter> space M\""], ["proof (prove)\nusing this:\n  A \\<in> {geom_proc (Suc n) -` B \\<inter> space M |B. B \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>C \\<in> sets borel;\n         A = geom_proc (Suc n) -` C \\<inter> space M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C \\<in> sets borel\n  A = geom_proc (Suc n) -` C \\<inter> space M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A \\<inter>\n    space (fct_gen_subalgebra M borel (geom_proc n))\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "hence \"A = (geom_proc (Suc n)) -`C\""], ["proof (prove)\nusing this:\n  C \\<in> sets borel\n  A = geom_proc (Suc n) -` C \\<inter> space M\n\ngoal (1 subgoal):\n 1. A = geom_proc (Suc n) -` C", "using bernoulli bernoulli_stream_space"], ["proof (prove)\nusing this:\n  C \\<in> sets borel\n  A = geom_proc (Suc n) -` C \\<inter> space M\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. A = geom_proc (Suc n) -` C", "by simp"], ["proof (state)\nthis:\n  A = geom_proc (Suc n) -` C\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A \\<inter>\n    space (fct_gen_subalgebra M borel (geom_proc n))\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "hence \"sp -`A = sp -` (geom_proc (Suc n)) -`C\""], ["proof (prove)\nusing this:\n  A = geom_proc (Suc n) -` C\n\ngoal (1 subgoal):\n 1. sp -` A = sp -` geom_proc (Suc n) -` C", "by simp"], ["proof (state)\nthis:\n  sp -` A = sp -` geom_proc (Suc n) -` C\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A \\<inter>\n    space (fct_gen_subalgebra M borel (geom_proc n))\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "also"], ["proof (state)\nthis:\n  sp -` A = sp -` geom_proc (Suc n) -` C\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A \\<inter>\n    space (fct_gen_subalgebra M borel (geom_proc n))\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "have \"... = (geom_proc (Suc n) \\<circ> sp) -` C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sp -` geom_proc (Suc n) -` C = (geom_proc (Suc n) \\<circ> sp) -` C", "by auto"], ["proof (state)\nthis:\n  sp -` geom_proc (Suc n) -` C = (geom_proc (Suc n) \\<circ> sp) -` C\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A \\<inter>\n    space (fct_gen_subalgebra M borel (geom_proc n))\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "also"], ["proof (state)\nthis:\n  sp -` geom_proc (Suc n) -` C = (geom_proc (Suc n) \\<circ> sp) -` C\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A \\<inter>\n    space (fct_gen_subalgebra M borel (geom_proc n))\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "have \"... = (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (geom_proc (Suc n) \\<circ> sp) -` C =\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C", "using geom_proc_spick\n        sp_def"], ["proof (prove)\nusing this:\n  geom_proc (Suc ?n) (spick ?w ?n ?x) =\n  (if ?x then u else d) * geom_proc ?n ?w\n  sp = (\\<lambda>w. spick w n x)\n\ngoal (1 subgoal):\n 1. (geom_proc (Suc n) \\<circ> sp) -` C =\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C", "by auto"], ["proof (state)\nthis:\n  (geom_proc (Suc n) \\<circ> sp) -` C =\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A \\<inter>\n    space (fct_gen_subalgebra M borel (geom_proc n))\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "also"], ["proof (state)\nthis:\n  (geom_proc (Suc n) \\<circ> sp) -` C =\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A \\<inter>\n    space (fct_gen_subalgebra M borel (geom_proc n))\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "have \"... \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "proof (cases x)"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))\n 2. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "case True"], ["proof (state)\nthis:\n  x\n\ngoal (2 subgoals):\n 1. x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))\n 2. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "hence \"(\\<lambda>w. (if x then u else d) * geom_proc n w) -` C = (\\<lambda>w. u * geom_proc n w) -` C\""], ["proof (prove)\nusing this:\n  x\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n    (\\<lambda>w. u * geom_proc n w) -` C", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n  (\\<lambda>w. u * geom_proc n w) -` C\n\ngoal (2 subgoals):\n 1. x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))\n 2. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n  (\\<lambda>w. u * geom_proc n w) -` C\n\ngoal (2 subgoals):\n 1. x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))\n 2. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "have \"(\\<lambda>w. u * geom_proc n w) \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. u * geom_proc n w)\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>w. u * geom_proc n w)\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "have \"geom_proc n \\<in>borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc n\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "using fct_gen_subalgebra_fct_measurable"], ["proof (prove)\nusing this:\n  ?X \\<in> space ?M \\<rightarrow> space ?N \\<Longrightarrow>\n  ?X \\<in> fct_gen_subalgebra ?M ?N ?X \\<rightarrow>\\<^sub>M ?N\n\ngoal (1 subgoal):\n 1. geom_proc n\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "by (metis (no_types, lifting) geom_rand_walk_borel_measurable measurable_def mem_Collect_eq)"], ["proof (state)\nthis:\n  geom_proc n\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. u * geom_proc n w)\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "thus ?thesis"], ["proof (prove)\nusing this:\n  geom_proc n\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. u * geom_proc n w)\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. u * geom_proc n w)\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>w. u * geom_proc n w)\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal (2 subgoals):\n 1. x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))\n 2. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n  (\\<lambda>w. u * geom_proc n w) -` C\n  (\\<lambda>w. u * geom_proc n w)\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n  (\\<lambda>w. u * geom_proc n w) -` C\n  (\\<lambda>w. u * geom_proc n w)\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "using \\<open>C\\<in> sets borel\\<close>"], ["proof (prove)\nusing this:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n  (\\<lambda>w. u * geom_proc n w) -` C\n  (\\<lambda>w. u * geom_proc n w)\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n  C \\<in> sets borel\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "by (metis bernoulli bernoulli_stream_preimage fct_gen_subalgebra_space measurable_sets)"], ["proof (state)\nthis:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n  \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal (1 subgoal):\n 1. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "case False"], ["proof (state)\nthis:\n  \\<not> x\n\ngoal (1 subgoal):\n 1. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "hence \"(\\<lambda>w. (if x then u else d) * geom_proc n w) -` C = (\\<lambda>w. d * geom_proc n w) -` C\""], ["proof (prove)\nusing this:\n  \\<not> x\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n    (\\<lambda>w. d * geom_proc n w) -` C", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n  (\\<lambda>w. d * geom_proc n w) -` C\n\ngoal (1 subgoal):\n 1. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n  (\\<lambda>w. d * geom_proc n w) -` C\n\ngoal (1 subgoal):\n 1. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "have \"(\\<lambda>w. d * geom_proc n w) \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. d * geom_proc n w)\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>w. d * geom_proc n w)\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "have \"geom_proc n \\<in>borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc n\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "using fct_gen_subalgebra_fct_measurable"], ["proof (prove)\nusing this:\n  ?X \\<in> space ?M \\<rightarrow> space ?N \\<Longrightarrow>\n  ?X \\<in> fct_gen_subalgebra ?M ?N ?X \\<rightarrow>\\<^sub>M ?N\n\ngoal (1 subgoal):\n 1. geom_proc n\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "by (metis (no_types, lifting) geom_rand_walk_borel_measurable measurable_def mem_Collect_eq)"], ["proof (state)\nthis:\n  geom_proc n\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. d * geom_proc n w)\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "thus ?thesis"], ["proof (prove)\nusing this:\n  geom_proc n\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. d * geom_proc n w)\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. d * geom_proc n w)\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>w. d * geom_proc n w)\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal (1 subgoal):\n 1. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n  (\\<lambda>w. d * geom_proc n w) -` C\n  (\\<lambda>w. d * geom_proc n w)\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n  (\\<lambda>w. d * geom_proc n w) -` C\n  (\\<lambda>w. d * geom_proc n w)\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "using \\<open>C\\<in> sets borel\\<close>"], ["proof (prove)\nusing this:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n  (\\<lambda>w. d * geom_proc n w) -` C\n  (\\<lambda>w. d * geom_proc n w)\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n  C \\<in> sets borel\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "by (metis bernoulli bernoulli_stream_preimage fct_gen_subalgebra_space measurable_sets)"], ["proof (state)\nthis:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n  \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n  \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A \\<inter>\n    space (fct_gen_subalgebra M borel (geom_proc n))\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "finally"], ["proof (chain)\npicking this:\n  sp -` A \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  sp -` A \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A \\<inter>\n    space (fct_gen_subalgebra M borel (geom_proc n))\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "unfolding sp_def"], ["proof (prove)\nusing this:\n  (\\<lambda>w. spick w n x) -` A\n  \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A \\<inter>\n    space (fct_gen_subalgebra M borel (geom_proc n))\n    \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))", "by (simp add: bernoulli bernoulli_stream_space fct_gen_subalgebra_space)"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` A \\<inter>\n  space (fct_gen_subalgebra M borel (geom_proc n))\n  \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` A \\<inter>\n  space (fct_gen_subalgebra M borel (geom_proc n))\n  \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>y\\<in>sets (fct_gen_subalgebra M borel (geom_proc (Suc n))).\n     (\\<lambda>w. spick w n x) -` y \\<inter>\n     space (fct_gen_subalgebra M borel (geom_proc n))\n     \\<in> sets (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) geom_spick_Suc:\n  assumes \"A \\<in> {(geom_proc (Suc n)) -` B |B. B \\<in> sets borel}\"\n  shows \"(\\<lambda>w. spick w n x) -`A \\<in> {geom_proc n -`B | B. B\\<in> sets borel}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "have \"sets (fct_gen_subalgebra M borel (geom_proc n)) = {geom_proc n -` B \\<inter>space M |B. B \\<in> sets borel}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (fct_gen_subalgebra M borel (geom_proc n)) =\n    {geom_proc n -` B \\<inter> space M |B. B \\<in> sets borel}", "by (simp add: fct_gen_subalgebra_sigma_sets)"], ["proof (state)\nthis:\n  sets (fct_gen_subalgebra M borel (geom_proc n)) =\n  {geom_proc n -` B \\<inter> space M |B. B \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "also"], ["proof (state)\nthis:\n  sets (fct_gen_subalgebra M borel (geom_proc n)) =\n  {geom_proc n -` B \\<inter> space M |B. B \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "have \"... =  {geom_proc n -` B |B. B \\<in> sets borel}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {geom_proc n -` B \\<inter> space M |B. B \\<in> sets borel} =\n    {geom_proc n -` B |B. B \\<in> sets borel}", "using bernoulli bernoulli_stream_space"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. {geom_proc n -` B \\<inter> space M |B. B \\<in> sets borel} =\n    {geom_proc n -` B |B. B \\<in> sets borel}", "by simp"], ["proof (state)\nthis:\n  {geom_proc n -` B \\<inter> space M |B. B \\<in> sets borel} =\n  {geom_proc n -` B |B. B \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "finally"], ["proof (chain)\npicking this:\n  sets (fct_gen_subalgebra M borel (geom_proc n)) =\n  {geom_proc n -` B |B. B \\<in> sets borel}", "have sf: \"sets (fct_gen_subalgebra M borel (geom_proc n)) = {geom_proc n -` B |B. B \\<in> sets borel}\""], ["proof (prove)\nusing this:\n  sets (fct_gen_subalgebra M borel (geom_proc n)) =\n  {geom_proc n -` B |B. B \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. sets (fct_gen_subalgebra M borel (geom_proc n)) =\n    {geom_proc n -` B |B. B \\<in> sets borel}", "."], ["proof (state)\nthis:\n  sets (fct_gen_subalgebra M borel (geom_proc n)) =\n  {geom_proc n -` B |B. B \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "define sp where \"sp = (\\<lambda>w. spick w n x)\""], ["proof (state)\nthis:\n  sp = (\\<lambda>w. spick w n x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "from assms(1)"], ["proof (chain)\npicking this:\n  A \\<in> {geom_proc (Suc n) -` B |B. B \\<in> sets borel}", "obtain C where \"C\\<in> sets borel\" and \"A = (geom_proc (Suc n)) -`C\""], ["proof (prove)\nusing this:\n  A \\<in> {geom_proc (Suc n) -` B |B. B \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>C \\<in> sets borel; A = geom_proc (Suc n) -` C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C \\<in> sets borel\n  A = geom_proc (Suc n) -` C\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "hence \"A = (geom_proc (Suc n)) -`C\""], ["proof (prove)\nusing this:\n  C \\<in> sets borel\n  A = geom_proc (Suc n) -` C\n\ngoal (1 subgoal):\n 1. A = geom_proc (Suc n) -` C", "using bernoulli bernoulli_stream_space"], ["proof (prove)\nusing this:\n  C \\<in> sets borel\n  A = geom_proc (Suc n) -` C\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. A = geom_proc (Suc n) -` C", "by simp"], ["proof (state)\nthis:\n  A = geom_proc (Suc n) -` C\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "hence \"sp -`A = sp -` (geom_proc (Suc n)) -`C\""], ["proof (prove)\nusing this:\n  A = geom_proc (Suc n) -` C\n\ngoal (1 subgoal):\n 1. sp -` A = sp -` geom_proc (Suc n) -` C", "by simp"], ["proof (state)\nthis:\n  sp -` A = sp -` geom_proc (Suc n) -` C\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "also"], ["proof (state)\nthis:\n  sp -` A = sp -` geom_proc (Suc n) -` C\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "have \"... = (geom_proc (Suc n) \\<circ> sp) -` C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sp -` geom_proc (Suc n) -` C = (geom_proc (Suc n) \\<circ> sp) -` C", "by auto"], ["proof (state)\nthis:\n  sp -` geom_proc (Suc n) -` C = (geom_proc (Suc n) \\<circ> sp) -` C\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "also"], ["proof (state)\nthis:\n  sp -` geom_proc (Suc n) -` C = (geom_proc (Suc n) \\<circ> sp) -` C\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "have \"... = (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (geom_proc (Suc n) \\<circ> sp) -` C =\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C", "using geom_proc_spick\n    sp_def"], ["proof (prove)\nusing this:\n  geom_proc (Suc ?n) (spick ?w ?n ?x) =\n  (if ?x then u else d) * geom_proc ?n ?w\n  sp = (\\<lambda>w. spick w n x)\n\ngoal (1 subgoal):\n 1. (geom_proc (Suc n) \\<circ> sp) -` C =\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C", "by auto"], ["proof (state)\nthis:\n  (geom_proc (Suc n) \\<circ> sp) -` C =\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "also"], ["proof (state)\nthis:\n  (geom_proc (Suc n) \\<circ> sp) -` C =\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "have \"... \\<in> {geom_proc n -`B | B. B\\<in> sets borel}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "proof (cases x)"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}\n 2. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "case True"], ["proof (state)\nthis:\n  x\n\ngoal (2 subgoals):\n 1. x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}\n 2. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "hence \"(\\<lambda>w. (if x then u else d) * geom_proc n w) -` C = (\\<lambda>w. u * geom_proc n w) -` C\""], ["proof (prove)\nusing this:\n  x\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n    (\\<lambda>w. u * geom_proc n w) -` C", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n  (\\<lambda>w. u * geom_proc n w) -` C\n\ngoal (2 subgoals):\n 1. x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}\n 2. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n  (\\<lambda>w. u * geom_proc n w) -` C\n\ngoal (2 subgoals):\n 1. x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}\n 2. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "have \"(\\<lambda>w. u * geom_proc n w) \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. u * geom_proc n w)\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>w. u * geom_proc n w)\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "have \"geom_proc n \\<in>borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc n\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "using fct_gen_subalgebra_fct_measurable"], ["proof (prove)\nusing this:\n  ?X \\<in> space ?M \\<rightarrow> space ?N \\<Longrightarrow>\n  ?X \\<in> fct_gen_subalgebra ?M ?N ?X \\<rightarrow>\\<^sub>M ?N\n\ngoal (1 subgoal):\n 1. geom_proc n\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "by (metis (no_types, lifting) geom_rand_walk_borel_measurable measurable_def mem_Collect_eq)"], ["proof (state)\nthis:\n  geom_proc n\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. u * geom_proc n w)\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "thus ?thesis"], ["proof (prove)\nusing this:\n  geom_proc n\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. u * geom_proc n w)\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. u * geom_proc n w)\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>w. u * geom_proc n w)\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal (2 subgoals):\n 1. x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}\n 2. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n  (\\<lambda>w. u * geom_proc n w) -` C\n  (\\<lambda>w. u * geom_proc n w)\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n  (\\<lambda>w. u * geom_proc n w) -` C\n  (\\<lambda>w. u * geom_proc n w)\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "using \\<open>C\\<in> sets borel\\<close> sf"], ["proof (prove)\nusing this:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n  (\\<lambda>w. u * geom_proc n w) -` C\n  (\\<lambda>w. u * geom_proc n w)\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n  C \\<in> sets borel\n  sets (fct_gen_subalgebra M borel (geom_proc n)) =\n  {geom_proc n -` B |B. B \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "by (simp add: bernoulli bernoulli_stream_preimage fct_gen_subalgebra_space in_borel_measurable_borel)"], ["proof (state)\nthis:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n  \\<in> {geom_proc n -` B |B. B \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "case False"], ["proof (state)\nthis:\n  \\<not> x\n\ngoal (1 subgoal):\n 1. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "hence \"(\\<lambda>w. (if x then u else d) * geom_proc n w) -` C = (\\<lambda>w. d * geom_proc n w) -` C\""], ["proof (prove)\nusing this:\n  \\<not> x\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n    (\\<lambda>w. d * geom_proc n w) -` C", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n  (\\<lambda>w. d * geom_proc n w) -` C\n\ngoal (1 subgoal):\n 1. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n  (\\<lambda>w. d * geom_proc n w) -` C\n\ngoal (1 subgoal):\n 1. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "have \"(\\<lambda>w. d * geom_proc n w) \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. d * geom_proc n w)\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>w. d * geom_proc n w)\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "have \"geom_proc n \\<in>borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc n\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "using fct_gen_subalgebra_fct_measurable"], ["proof (prove)\nusing this:\n  ?X \\<in> space ?M \\<rightarrow> space ?N \\<Longrightarrow>\n  ?X \\<in> fct_gen_subalgebra ?M ?N ?X \\<rightarrow>\\<^sub>M ?N\n\ngoal (1 subgoal):\n 1. geom_proc n\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "by (metis (no_types, lifting) geom_rand_walk_borel_measurable measurable_def mem_Collect_eq)"], ["proof (state)\nthis:\n  geom_proc n\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. d * geom_proc n w)\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "thus ?thesis"], ["proof (prove)\nusing this:\n  geom_proc n\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. d * geom_proc n w)\n    \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. d * geom_proc n w)\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>w. d * geom_proc n w)\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal (1 subgoal):\n 1. \\<not> x \\<Longrightarrow>\n    (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n  (\\<lambda>w. d * geom_proc n w) -` C\n  (\\<lambda>w. d * geom_proc n w)\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n  (\\<lambda>w. d * geom_proc n w) -` C\n  (\\<lambda>w. d * geom_proc n w)\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "using \\<open>C\\<in> sets borel\\<close> sf"], ["proof (prove)\nusing this:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C =\n  (\\<lambda>w. d * geom_proc n w) -` C\n  (\\<lambda>w. d * geom_proc n w)\n  \\<in> borel_measurable (fct_gen_subalgebra M borel (geom_proc n))\n  C \\<in> sets borel\n  sets (fct_gen_subalgebra M borel (geom_proc n)) =\n  {geom_proc n -` B |B. B \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "by (simp add: bernoulli bernoulli_stream_preimage fct_gen_subalgebra_space in_borel_measurable_borel)"], ["proof (state)\nthis:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n  \\<in> {geom_proc n -` B |B. B \\<in> sets borel}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>w. (if x then u else d) * geom_proc n w) -` C\n  \\<in> {geom_proc n -` B |B. B \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "finally"], ["proof (chain)\npicking this:\n  sp -` A \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "show ?thesis"], ["proof (prove)\nusing this:\n  sp -` A \\<in> {geom_proc n -` B |B. B \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "unfolding sp_def"], ["proof (prove)\nusing this:\n  (\\<lambda>w. spick w n x) -` A\n  \\<in> {geom_proc n -` B |B. B \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` A\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "."], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` A\n  \\<in> {geom_proc n -` B |B. B \\<in> sets borel}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) geom_spick_lt:\n  assumes \"m< n\"\n  shows \"geom_proc m (spick w n x) = geom_proc m w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc m (spick w n x) = geom_proc m w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. geom_proc m (spick w n x) = geom_proc m w", "have \"geom_proc m (spick w n x) = geom_proc m (pseudo_proj_True m (spick w n x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc m (spick w n x) =\n    geom_proc m (pseudo_proj_True m (spick w n x))", "using  geom_rand_walk_pseudo_proj_True"], ["proof (prove)\nusing this:\n  geom_proc ?n = geom_proc ?n \\<circ> pseudo_proj_True ?n\n\ngoal (1 subgoal):\n 1. geom_proc m (spick w n x) =\n    geom_proc m (pseudo_proj_True m (spick w n x))", "by (metis comp_apply)"], ["proof (state)\nthis:\n  geom_proc m (spick w n x) = geom_proc m (pseudo_proj_True m (spick w n x))\n\ngoal (1 subgoal):\n 1. geom_proc m (spick w n x) = geom_proc m w", "also"], ["proof (state)\nthis:\n  geom_proc m (spick w n x) = geom_proc m (pseudo_proj_True m (spick w n x))\n\ngoal (1 subgoal):\n 1. geom_proc m (spick w n x) = geom_proc m w", "have \"... = geom_proc m (pseudo_proj_True m w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc m (pseudo_proj_True m (spick w n x)) =\n    geom_proc m (pseudo_proj_True m w)", "using assms"], ["proof (prove)\nusing this:\n  m < n\n\ngoal (1 subgoal):\n 1. geom_proc m (pseudo_proj_True m (spick w n x)) =\n    geom_proc m (pseudo_proj_True m w)", "by (metis less_imp_le_nat pseudo_proj_True_def pseudo_proj_True_prefix spickI)"], ["proof (state)\nthis:\n  geom_proc m (pseudo_proj_True m (spick w n x)) =\n  geom_proc m (pseudo_proj_True m w)\n\ngoal (1 subgoal):\n 1. geom_proc m (spick w n x) = geom_proc m w", "also"], ["proof (state)\nthis:\n  geom_proc m (pseudo_proj_True m (spick w n x)) =\n  geom_proc m (pseudo_proj_True m w)\n\ngoal (1 subgoal):\n 1. geom_proc m (spick w n x) = geom_proc m w", "have \"... = geom_proc m w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc m (pseudo_proj_True m w) = geom_proc m w", "using  geom_rand_walk_pseudo_proj_True"], ["proof (prove)\nusing this:\n  geom_proc ?n = geom_proc ?n \\<circ> pseudo_proj_True ?n\n\ngoal (1 subgoal):\n 1. geom_proc m (pseudo_proj_True m w) = geom_proc m w", "by (metis comp_apply)"], ["proof (state)\nthis:\n  geom_proc m (pseudo_proj_True m w) = geom_proc m w\n\ngoal (1 subgoal):\n 1. geom_proc m (spick w n x) = geom_proc m w", "finally"], ["proof (chain)\npicking this:\n  geom_proc m (spick w n x) = geom_proc m w", "show ?thesis"], ["proof (prove)\nusing this:\n  geom_proc m (spick w n x) = geom_proc m w\n\ngoal (1 subgoal):\n 1. geom_proc m (spick w n x) = geom_proc m w", "."], ["proof (state)\nthis:\n  geom_proc m (spick w n x) = geom_proc m w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) geom_spick_eq:\n  shows \"geom_proc m (spick w m x) = geom_proc m w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc m (spick w m x) = geom_proc m w", "proof (cases x)"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w\n 2. \\<not> x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w", "case True"], ["proof (state)\nthis:\n  x\n\ngoal (2 subgoals):\n 1. x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w\n 2. \\<not> x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w", "have \"geom_proc m (spick w m x) = geom_proc m (pseudo_proj_True m (spick w m x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc m (spick w m x) =\n    geom_proc m (pseudo_proj_True m (spick w m x))", "using  geom_rand_walk_pseudo_proj_True"], ["proof (prove)\nusing this:\n  geom_proc ?n = geom_proc ?n \\<circ> pseudo_proj_True ?n\n\ngoal (1 subgoal):\n 1. geom_proc m (spick w m x) =\n    geom_proc m (pseudo_proj_True m (spick w m x))", "by (metis comp_apply)"], ["proof (state)\nthis:\n  geom_proc m (spick w m x) = geom_proc m (pseudo_proj_True m (spick w m x))\n\ngoal (2 subgoals):\n 1. x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w\n 2. \\<not> x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w", "also"], ["proof (state)\nthis:\n  geom_proc m (spick w m x) = geom_proc m (pseudo_proj_True m (spick w m x))\n\ngoal (2 subgoals):\n 1. x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w\n 2. \\<not> x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w", "have \"... = geom_proc m (pseudo_proj_True m w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc m (pseudo_proj_True m (spick w m x)) =\n    geom_proc m (pseudo_proj_True m w)", "using True"], ["proof (prove)\nusing this:\n  x\n\ngoal (1 subgoal):\n 1. geom_proc m (pseudo_proj_True m (spick w m x)) =\n    geom_proc m (pseudo_proj_True m w)", "by (metis pseudo_proj_True_def spickI)"], ["proof (state)\nthis:\n  geom_proc m (pseudo_proj_True m (spick w m x)) =\n  geom_proc m (pseudo_proj_True m w)\n\ngoal (2 subgoals):\n 1. x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w\n 2. \\<not> x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w", "also"], ["proof (state)\nthis:\n  geom_proc m (pseudo_proj_True m (spick w m x)) =\n  geom_proc m (pseudo_proj_True m w)\n\ngoal (2 subgoals):\n 1. x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w\n 2. \\<not> x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w", "have \"... = geom_proc m w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc m (pseudo_proj_True m w) = geom_proc m w", "using  geom_rand_walk_pseudo_proj_True"], ["proof (prove)\nusing this:\n  geom_proc ?n = geom_proc ?n \\<circ> pseudo_proj_True ?n\n\ngoal (1 subgoal):\n 1. geom_proc m (pseudo_proj_True m w) = geom_proc m w", "by (metis comp_apply)"], ["proof (state)\nthis:\n  geom_proc m (pseudo_proj_True m w) = geom_proc m w\n\ngoal (2 subgoals):\n 1. x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w\n 2. \\<not> x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w", "finally"], ["proof (chain)\npicking this:\n  geom_proc m (spick w m x) = geom_proc m w", "show ?thesis"], ["proof (prove)\nusing this:\n  geom_proc m (spick w m x) = geom_proc m w\n\ngoal (1 subgoal):\n 1. geom_proc m (spick w m x) = geom_proc m w", "."], ["proof (state)\nthis:\n  geom_proc m (spick w m x) = geom_proc m w\n\ngoal (1 subgoal):\n 1. \\<not> x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w", "case False"], ["proof (state)\nthis:\n  \\<not> x\n\ngoal (1 subgoal):\n 1. \\<not> x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w", "have \"geom_proc m (spick w m x) = geom_proc m (pseudo_proj_False m (spick w m x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc m (spick w m x) =\n    geom_proc m (pseudo_proj_False m (spick w m x))", "using  geom_rand_walk_pseudo_proj_False"], ["proof (prove)\nusing this:\n  geom_proc ?n = geom_proc ?n \\<circ> pseudo_proj_False ?n\n\ngoal (1 subgoal):\n 1. geom_proc m (spick w m x) =\n    geom_proc m (pseudo_proj_False m (spick w m x))", "by (metis comp_apply)"], ["proof (state)\nthis:\n  geom_proc m (spick w m x) =\n  geom_proc m (pseudo_proj_False m (spick w m x))\n\ngoal (1 subgoal):\n 1. \\<not> x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w", "also"], ["proof (state)\nthis:\n  geom_proc m (spick w m x) =\n  geom_proc m (pseudo_proj_False m (spick w m x))\n\ngoal (1 subgoal):\n 1. \\<not> x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w", "have \"... = geom_proc m (pseudo_proj_False m w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc m (pseudo_proj_False m (spick w m x)) =\n    geom_proc m (pseudo_proj_False m w)", "using False"], ["proof (prove)\nusing this:\n  \\<not> x\n\ngoal (1 subgoal):\n 1. geom_proc m (pseudo_proj_False m (spick w m x)) =\n    geom_proc m (pseudo_proj_False m w)", "by (metis pseudo_proj_False_def spickI)"], ["proof (state)\nthis:\n  geom_proc m (pseudo_proj_False m (spick w m x)) =\n  geom_proc m (pseudo_proj_False m w)\n\ngoal (1 subgoal):\n 1. \\<not> x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w", "also"], ["proof (state)\nthis:\n  geom_proc m (pseudo_proj_False m (spick w m x)) =\n  geom_proc m (pseudo_proj_False m w)\n\ngoal (1 subgoal):\n 1. \\<not> x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w", "have \"... = geom_proc m w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc m (pseudo_proj_False m w) = geom_proc m w", "using  geom_rand_walk_pseudo_proj_False"], ["proof (prove)\nusing this:\n  geom_proc ?n = geom_proc ?n \\<circ> pseudo_proj_False ?n\n\ngoal (1 subgoal):\n 1. geom_proc m (pseudo_proj_False m w) = geom_proc m w", "by (metis comp_apply)"], ["proof (state)\nthis:\n  geom_proc m (pseudo_proj_False m w) = geom_proc m w\n\ngoal (1 subgoal):\n 1. \\<not> x \\<Longrightarrow> geom_proc m (spick w m x) = geom_proc m w", "finally"], ["proof (chain)\npicking this:\n  geom_proc m (spick w m x) = geom_proc m w", "show ?thesis"], ["proof (prove)\nusing this:\n  geom_proc m (spick w m x) = geom_proc m w\n\ngoal (1 subgoal):\n 1. geom_proc m (spick w m x) = geom_proc m w", "."], ["proof (state)\nthis:\n  geom_proc m (spick w m x) = geom_proc m w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) spick_red_geom_filt:\n  shows \"(\\<lambda>w. spick w n x) \\<in> measurable (G n) (G (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) \\<in> G n \\<rightarrow>\\<^sub>M G (Suc n)", "unfolding measurable_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x)\n    \\<in> {f \\<in> space (G n) \\<rightarrow> space (G (Suc n)).\n           \\<forall>y\\<in>sets (G (Suc n)).\n              f -` y \\<inter> space (G n) \\<in> sets (G n)}", "proof (intro CollectI conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>w. spick w n x)\n    \\<in> space (G n) \\<rightarrow> space (G (Suc n))\n 2. \\<forall>y\\<in>sets (G (Suc n)).\n       (\\<lambda>w. spick w n x) -` y \\<inter> space (G n) \\<in> sets (G n)", "show \"(\\<lambda>w. spick w n x) \\<in> space (G n) \\<rightarrow> space (G (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x)\n    \\<in> space (G n) \\<rightarrow> space (G (Suc n))", "using stock_filtration"], ["proof (prove)\nusing this:\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x)\n    \\<in> space (G n) \\<rightarrow> space (G (Suc n))", "by (simp add: bernoulli bernoulli_stream_space stoch_proc_filt_space)"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x)\n  \\<in> space (G n) \\<rightarrow> space (G (Suc n))\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>sets (G (Suc n)).\n       (\\<lambda>w. spick w n x) -` y \\<inter> space (G n) \\<in> sets (G n)", "show \"\\<forall>y\\<in>sets (G (Suc n)). (\\<lambda>w. spick w n x) -` y \\<inter> space (G n) \\<in> sets (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>sets (G (Suc n)).\n       (\\<lambda>w. spick w n x) -` y \\<inter> space (G n) \\<in> sets (G n)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (G (Suc n)) \\<Longrightarrow>\n       (\\<lambda>w. spick w n x) -` y \\<inter> space (G n) \\<in> sets (G n)", "fix B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (G (Suc n)) \\<Longrightarrow>\n       (\\<lambda>w. spick w n x) -` y \\<inter> space (G n) \\<in> sets (G n)", "assume \"B\\<in> sets (G (Suc n))\""], ["proof (state)\nthis:\n  B \\<in> sets (G (Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (G (Suc n)) \\<Longrightarrow>\n       (\\<lambda>w. spick w n x) -` y \\<inter> space (G n) \\<in> sets (G n)", "hence \"B\\<in> (sigma_sets (space M) (\\<Union> i\\<in> {m. m\\<le> (Suc n)}. {(geom_proc i -`A) \\<inter> (space M) | A. A\\<in> sets borel }))\""], ["proof (prove)\nusing this:\n  B \\<in> sets (G (Suc n))\n\ngoal (1 subgoal):\n 1. B \\<in> sigma_sets (space M)\n             (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                 {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})", "using stock_filtration stoch_proc_filt_sets geometric_process"], ["proof (prove)\nusing this:\n  B \\<in> sets (G (Suc n))\n  G = stoch_proc_filt M geom_proc borel\n  (\\<And>i.\n      i \\<le> ?n \\<Longrightarrow>\n      ?X i \\<in> ?M \\<rightarrow>\\<^sub>M ?N) \\<Longrightarrow>\n  sets (stoch_proc_filt ?M ?X ?N ?n) =\n  sigma_sets (space ?M)\n   (\\<Union>i\\<in>{m. m \\<le> ?n}.\n       {?X i -` A \\<inter> space ?M |A. A \\<in> sets ?N})\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. B \\<in> sigma_sets (space M)\n             (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                 {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<in> sets (G (Suc n));\n     G = stoch_proc_filt M geom_proc borel;\n     \\<And>n X M N.\n        (\\<And>i.\n            i \\<le> n \\<Longrightarrow>\n            X i \\<in> M \\<rightarrow>\\<^sub>M N) \\<Longrightarrow>\n        sets (stoch_proc_filt M X N n) =\n        sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets N});\n     geom_proc = geom_rand_walk u d init\\<rbrakk>\n    \\<Longrightarrow> B \\<in> sigma_sets (space M)\n                               (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                                   {geom_proc i -` A \\<inter> space M |A.\n                                    A \\<in> sets borel})", "have \"\\<forall>n. sigma_sets (space M) (\\<Union>n\\<in>{na. na \\<le> n}. {geom_proc n -` R \\<inter> space M |R. R \\<in> sets borel}) = sets (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       sigma_sets (space M)\n        (\\<Union>n\\<in>{na. na \\<le> n}.\n            {geom_proc n -` R \\<inter> space M |R. R \\<in> sets borel}) =\n       sets (G n)", "by (simp add: geom_rand_walk_borel_measurable stoch_proc_filt_sets stock_filtration)"], ["proof (state)\nthis:\n  \\<forall>n.\n     sigma_sets (space M)\n      (\\<Union>n\\<in>{na. na \\<le> n}.\n          {geom_proc n -` R \\<inter> space M |R. R \\<in> sets borel}) =\n     sets (G n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<in> sets (G (Suc n));\n     G = stoch_proc_filt M geom_proc borel;\n     \\<And>n X M N.\n        (\\<And>i.\n            i \\<le> n \\<Longrightarrow>\n            X i \\<in> M \\<rightarrow>\\<^sub>M N) \\<Longrightarrow>\n        sets (stoch_proc_filt M X N n) =\n        sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets N});\n     geom_proc = geom_rand_walk u d init\\<rbrakk>\n    \\<Longrightarrow> B \\<in> sigma_sets (space M)\n                               (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                                   {geom_proc i -` A \\<inter> space M |A.\n                                    A \\<in> sets borel})", "then"], ["proof (chain)\npicking this:\n  \\<forall>n.\n     sigma_sets (space M)\n      (\\<Union>n\\<in>{na. na \\<le> n}.\n          {geom_proc n -` R \\<inter> space M |R. R \\<in> sets borel}) =\n     sets (G n)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     sigma_sets (space M)\n      (\\<Union>n\\<in>{na. na \\<le> n}.\n          {geom_proc n -` R \\<inter> space M |R. R \\<in> sets borel}) =\n     sets (G n)\n\ngoal (1 subgoal):\n 1. B \\<in> sigma_sets (space M)\n             (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                 {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})", "using \\<open>B \\<in> sets (G (Suc n))\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     sigma_sets (space M)\n      (\\<Union>n\\<in>{na. na \\<le> n}.\n          {geom_proc n -` R \\<inter> space M |R. R \\<in> sets borel}) =\n     sets (G n)\n  B \\<in> sets (G (Suc n))\n\ngoal (1 subgoal):\n 1. B \\<in> sigma_sets (space M)\n             (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                 {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})", "by blast"], ["proof (state)\nthis:\n  B \\<in> sigma_sets (space M)\n           (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n               {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B \\<in> sigma_sets (space M)\n           (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n               {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (G (Suc n)) \\<Longrightarrow>\n       (\\<lambda>w. spick w n x) -` y \\<inter> space (G n) \\<in> sets (G n)", "hence \"(\\<lambda>w. spick w n x) -` B \\<in> sets (G n)\""], ["proof (prove)\nusing this:\n  B \\<in> sigma_sets (space M)\n           (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n               {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` B \\<in> sets (G n)", "proof (induct rule:sigma_sets.induct)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a.\n       a \\<in> (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                   {geom_proc i -` A \\<inter> space M |A.\n                    A \\<in> sets borel}) \\<Longrightarrow>\n       (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\n 2. (\\<lambda>w. spick w n x) -` {} \\<in> sets (G n)\n 3. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 4. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "{"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a.\n       a \\<in> (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                   {geom_proc i -` A \\<inter> space M |A.\n                    A \\<in> sets borel}) \\<Longrightarrow>\n       (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\n 2. (\\<lambda>w. spick w n x) -` {} \\<in> sets (G n)\n 3. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 4. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "fix C"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a.\n       a \\<in> (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                   {geom_proc i -` A \\<inter> space M |A.\n                    A \\<in> sets borel}) \\<Longrightarrow>\n       (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\n 2. (\\<lambda>w. spick w n x) -` {} \\<in> sets (G n)\n 3. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 4. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "assume \"C \\<in> (\\<Union>i\\<in>{m. m \\<le> Suc n}. {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})\""], ["proof (state)\nthis:\n  C \\<in> (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n              {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (4 subgoals):\n 1. \\<And>a.\n       a \\<in> (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                   {geom_proc i -` A \\<inter> space M |A.\n                    A \\<in> sets borel}) \\<Longrightarrow>\n       (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\n 2. (\\<lambda>w. spick w n x) -` {} \\<in> sets (G n)\n 3. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 4. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "hence \"\\<exists>m \\<le> Suc n. C\\<in> {geom_proc m -` A \\<inter> space M |A. A \\<in> sets borel}\""], ["proof (prove)\nusing this:\n  C \\<in> (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n              {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. \\<exists>m\\<le>Suc n.\n       C \\<in> {geom_proc m -` A \\<inter> space M |A. A \\<in> sets borel}", "by auto"], ["proof (state)\nthis:\n  \\<exists>m\\<le>Suc n.\n     C \\<in> {geom_proc m -` A \\<inter> space M |A. A \\<in> sets borel}\n\ngoal (4 subgoals):\n 1. \\<And>a.\n       a \\<in> (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                   {geom_proc i -` A \\<inter> space M |A.\n                    A \\<in> sets borel}) \\<Longrightarrow>\n       (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\n 2. (\\<lambda>w. spick w n x) -` {} \\<in> sets (G n)\n 3. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 4. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>m\\<le>Suc n.\n     C \\<in> {geom_proc m -` A \\<inter> space M |A. A \\<in> sets borel}", "obtain m where \"m\\<le> Suc n\" and \"C\\<in> {geom_proc m -` A \\<inter> space M |A. A \\<in> sets borel}\""], ["proof (prove)\nusing this:\n  \\<exists>m\\<le>Suc n.\n     C \\<in> {geom_proc m -` A \\<inter> space M |A. A \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>m \\<le> Suc n;\n         C \\<in> {geom_proc m -` A \\<inter> space M |A.\n                  A \\<in> sets borel}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  m \\<le> Suc n\n  C \\<in> {geom_proc m -` A \\<inter> space M |A. A \\<in> sets borel}\n\ngoal (4 subgoals):\n 1. \\<And>a.\n       a \\<in> (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                   {geom_proc i -` A \\<inter> space M |A.\n                    A \\<in> sets borel}) \\<Longrightarrow>\n       (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\n 2. (\\<lambda>w. spick w n x) -` {} \\<in> sets (G n)\n 3. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 4. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "note Cprops = this"], ["proof (state)\nthis:\n  m \\<le> Suc n\n  C \\<in> {geom_proc m -` A \\<inter> space M |A. A \\<in> sets borel}\n\ngoal (4 subgoals):\n 1. \\<And>a.\n       a \\<in> (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                   {geom_proc i -` A \\<inter> space M |A.\n                    A \\<in> sets borel}) \\<Longrightarrow>\n       (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\n 2. (\\<lambda>w. spick w n x) -` {} \\<in> sets (G n)\n 3. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 4. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "from this"], ["proof (chain)\npicking this:\n  m \\<le> Suc n\n  C \\<in> {geom_proc m -` A \\<inter> space M |A. A \\<in> sets borel}", "obtain D where \"C = geom_proc m -` D\\<inter> space M\" and \"D\\<in> sets borel\""], ["proof (prove)\nusing this:\n  m \\<le> Suc n\n  C \\<in> {geom_proc m -` A \\<inter> space M |A. A \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        \\<lbrakk>C = geom_proc m -` D \\<inter> space M;\n         D \\<in> sets borel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C = geom_proc m -` D \\<inter> space M\n  D \\<in> sets borel\n\ngoal (4 subgoals):\n 1. \\<And>a.\n       a \\<in> (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                   {geom_proc i -` A \\<inter> space M |A.\n                    A \\<in> sets borel}) \\<Longrightarrow>\n       (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\n 2. (\\<lambda>w. spick w n x) -` {} \\<in> sets (G n)\n 3. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 4. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "hence \"C = geom_proc m -`D\""], ["proof (prove)\nusing this:\n  C = geom_proc m -` D \\<inter> space M\n  D \\<in> sets borel\n\ngoal (1 subgoal):\n 1. C = geom_proc m -` D", "using bernoulli bernoulli_stream_space"], ["proof (prove)\nusing this:\n  C = geom_proc m -` D \\<inter> space M\n  D \\<in> sets borel\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. C = geom_proc m -` D", "by simp"], ["proof (state)\nthis:\n  C = geom_proc m -` D\n\ngoal (4 subgoals):\n 1. \\<And>a.\n       a \\<in> (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                   {geom_proc i -` A \\<inter> space M |A.\n                    A \\<in> sets borel}) \\<Longrightarrow>\n       (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\n 2. (\\<lambda>w. spick w n x) -` {} \\<in> sets (G n)\n 3. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 4. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "have \"C\\<in> {geom_proc m -` A |A. A \\<in> sets borel}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<in> {geom_proc m -` A |A. A \\<in> sets borel}", "using bernoulli bernoulli_stream_space Cprops"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n  m \\<le> Suc n\n  C \\<in> {geom_proc m -` A \\<inter> space M |A. A \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. C \\<in> {geom_proc m -` A |A. A \\<in> sets borel}", "by simp"], ["proof (state)\nthis:\n  C \\<in> {geom_proc m -` A |A. A \\<in> sets borel}\n\ngoal (4 subgoals):\n 1. \\<And>a.\n       a \\<in> (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                   {geom_proc i -` A \\<inter> space M |A.\n                    A \\<in> sets borel}) \\<Longrightarrow>\n       (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\n 2. (\\<lambda>w. spick w n x) -` {} \\<in> sets (G n)\n 3. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 4. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "show \"(\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "proof (cases \"m \\<le> n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\n 2. \\<not> m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "case True"], ["proof (state)\nthis:\n  m \\<le> n\n\ngoal (2 subgoals):\n 1. m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\n 2. \\<not> m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "have \"(\\<lambda>w. spick w n x) -` C = (\\<lambda>w. spick w n x) -` geom_proc m -`D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` C =\n    (\\<lambda>w. spick w n x) -` geom_proc m -` D", "using \\<open>C = geom_proc m -`D\\<close>"], ["proof (prove)\nusing this:\n  C = geom_proc m -` D\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` C =\n    (\\<lambda>w. spick w n x) -` geom_proc m -` D", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` C =\n  (\\<lambda>w. spick w n x) -` geom_proc m -` D\n\ngoal (2 subgoals):\n 1. m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\n 2. \\<not> m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "also"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` C =\n  (\\<lambda>w. spick w n x) -` geom_proc m -` D\n\ngoal (2 subgoals):\n 1. m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\n 2. \\<not> m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "have \"... = (geom_proc m \\<circ> (\\<lambda>w. spick w n x)) -`D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` geom_proc m -` D =\n    (geom_proc m \\<circ> (\\<lambda>w. spick w n x)) -` D", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` geom_proc m -` D =\n  (geom_proc m \\<circ> (\\<lambda>w. spick w n x)) -` D\n\ngoal (2 subgoals):\n 1. m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\n 2. \\<not> m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "also"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` geom_proc m -` D =\n  (geom_proc m \\<circ> (\\<lambda>w. spick w n x)) -` D\n\ngoal (2 subgoals):\n 1. m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\n 2. \\<not> m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "have \"... = geom_proc m -`D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (geom_proc m \\<circ> (\\<lambda>w. spick w n x)) -` D = geom_proc m -` D", "using geom_spick_lt geom_spick_eq \\<open>m\\<le>n\\<close>"], ["proof (prove)\nusing this:\n  ?m < ?n \\<Longrightarrow> geom_proc ?m (spick ?w ?n ?x) = geom_proc ?m ?w\n  geom_proc ?m (spick ?w ?m ?x) = geom_proc ?m ?w\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. (geom_proc m \\<circ> (\\<lambda>w. spick w n x)) -` D = geom_proc m -` D", "using le_eq_less_or_eq"], ["proof (prove)\nusing this:\n  ?m < ?n \\<Longrightarrow> geom_proc ?m (spick ?w ?n ?x) = geom_proc ?m ?w\n  geom_proc ?m (spick ?w ?m ?x) = geom_proc ?m ?w\n  m \\<le> n\n  (?m \\<le> ?n) = (?m < ?n \\<or> ?m = ?n)\n\ngoal (1 subgoal):\n 1. (geom_proc m \\<circ> (\\<lambda>w. spick w n x)) -` D = geom_proc m -` D", "by auto"], ["proof (state)\nthis:\n  (geom_proc m \\<circ> (\\<lambda>w. spick w n x)) -` D = geom_proc m -` D\n\ngoal (2 subgoals):\n 1. m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\n 2. \\<not> m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "also"], ["proof (state)\nthis:\n  (geom_proc m \\<circ> (\\<lambda>w. spick w n x)) -` D = geom_proc m -` D\n\ngoal (2 subgoals):\n 1. m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\n 2. \\<not> m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "have \"... \\<in> sets (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc m -` D \\<in> sets (G n)", "using stock_filtration geometric_process\n            \\<open>D\\<in> sets borel\\<close>"], ["proof (prove)\nusing this:\n  G = stoch_proc_filt M geom_proc borel\n  geom_proc = geom_rand_walk u d init\n  D \\<in> sets borel\n\ngoal (1 subgoal):\n 1. geom_proc m -` D \\<in> sets (G n)", "by (metis (no_types, lifting) True adapt_stoch_proc_def bernoulli bernoulli_stream_preimage\n                geom_rand_walk_borel_measurable increasing_measurable_info measurable_sets stoch_proc_filt_adapt\n                stoch_proc_filt_space)"], ["proof (state)\nthis:\n  geom_proc m -` D \\<in> sets (G n)\n\ngoal (2 subgoals):\n 1. m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\n 2. \\<not> m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "show \"(\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\""], ["proof (prove)\nusing this:\n  (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "."], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\n\ngoal (1 subgoal):\n 1. \\<not> m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "case False"], ["proof (state)\nthis:\n  \\<not> m \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "hence \"m = Suc n\""], ["proof (prove)\nusing this:\n  \\<not> m \\<le> n\n\ngoal (1 subgoal):\n 1. m = Suc n", "using \\<open>m \\<le> Suc n\\<close>"], ["proof (prove)\nusing this:\n  \\<not> m \\<le> n\n  m \\<le> Suc n\n\ngoal (1 subgoal):\n 1. m = Suc n", "by simp"], ["proof (state)\nthis:\n  m = Suc n\n\ngoal (1 subgoal):\n 1. \\<not> m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "hence \"(\\<lambda>w. spick w n x) -` C \\<in> {geom_proc n -` B |B. B \\<in> sets borel}\""], ["proof (prove)\nusing this:\n  m = Suc n\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "using \\<open>C\\<in> {geom_proc m -` A |A. A \\<in> sets borel}\\<close> geom_spick_Suc"], ["proof (prove)\nusing this:\n  m = Suc n\n  C \\<in> {geom_proc m -` A |A. A \\<in> sets borel}\n  ?A \\<in> {geom_proc (Suc ?n) -` B |B.\n            B \\<in> sets borel} \\<Longrightarrow>\n  (\\<lambda>w. spick w ?n ?x) -` ?A\n  \\<in> {geom_proc ?n -` B |B. B \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` C\n    \\<in> {geom_proc n -` B |B. B \\<in> sets borel}", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` C\n  \\<in> {geom_proc n -` B |B. B \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. \\<not> m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "also"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` C\n  \\<in> {geom_proc n -` B |B. B \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. \\<not> m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "have \"... \\<subseteq> sets (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {geom_proc n -` B |B. B \\<in> sets borel} \\<subseteq> sets (G n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {geom_proc n -` B |B. B \\<in> sets borel} \\<subseteq> sets (G n)", "have \"{geom_proc n -` B |B. B \\<in> sets borel} \\<subseteq> {geom_proc n -` B \\<inter> space M |B. B \\<in> sets borel}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {geom_proc n -` B |B. B \\<in> sets borel}\n    \\<subseteq> {geom_proc n -` B \\<inter> space M |B. B \\<in> sets borel}", "using bernoulli bernoulli_stream_space"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. {geom_proc n -` B |B. B \\<in> sets borel}\n    \\<subseteq> {geom_proc n -` B \\<inter> space M |B. B \\<in> sets borel}", "by simp"], ["proof (state)\nthis:\n  {geom_proc n -` B |B. B \\<in> sets borel}\n  \\<subseteq> {geom_proc n -` B \\<inter> space M |B. B \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. {geom_proc n -` B |B. B \\<in> sets borel} \\<subseteq> sets (G n)", "also"], ["proof (state)\nthis:\n  {geom_proc n -` B |B. B \\<in> sets borel}\n  \\<subseteq> {geom_proc n -` B \\<inter> space M |B. B \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. {geom_proc n -` B |B. B \\<in> sets borel} \\<subseteq> sets (G n)", "have \"... \\<subseteq> (\\<Union>i\\<in>{m. m \\<le> n}. {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {geom_proc n -` B \\<inter> space M |B. B \\<in> sets borel}\n    \\<subseteq> (\\<Union>i\\<in>{m. m \\<le> n}.\n                    {geom_proc i -` A \\<inter> space M |A.\n                     A \\<in> sets borel})", "by auto"], ["proof (state)\nthis:\n  {geom_proc n -` B \\<inter> space M |B. B \\<in> sets borel}\n  \\<subseteq> (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {geom_proc i -` A \\<inter> space M |A.\n                   A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. {geom_proc n -` B |B. B \\<in> sets borel} \\<subseteq> sets (G n)", "also"], ["proof (state)\nthis:\n  {geom_proc n -` B \\<inter> space M |B. B \\<in> sets borel}\n  \\<subseteq> (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {geom_proc i -` A \\<inter> space M |A.\n                   A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. {geom_proc n -` B |B. B \\<in> sets borel} \\<subseteq> sets (G n)", "have \"... \\<subseteq>  sigma_sets (space M) (\\<Union>i\\<in>{m. m \\<le> n}. {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>i\\<in>{m. m \\<le> n}.\n        {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})\n    \\<subseteq> sigma_sets (space M)\n                 (\\<Union>i\\<in>{m. m \\<le> n}.\n                     {geom_proc i -` A \\<inter> space M |A.\n                      A \\<in> sets borel})", "by (rule sigma_sets_superset_generator)"], ["proof (state)\nthis:\n  (\\<Union>i\\<in>{m. m \\<le> n}.\n      {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})\n  \\<subseteq> sigma_sets (space M)\n               (\\<Union>i\\<in>{m. m \\<le> n}.\n                   {geom_proc i -` A \\<inter> space M |A.\n                    A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. {geom_proc n -` B |B. B \\<in> sets borel} \\<subseteq> sets (G n)", "also"], ["proof (state)\nthis:\n  (\\<Union>i\\<in>{m. m \\<le> n}.\n      {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})\n  \\<subseteq> sigma_sets (space M)\n               (\\<Union>i\\<in>{m. m \\<le> n}.\n                   {geom_proc i -` A \\<inter> space M |A.\n                    A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. {geom_proc n -` B |B. B \\<in> sets borel} \\<subseteq> sets (G n)", "have \"... = sets (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_sets (space M)\n     (\\<Union>i\\<in>{m. m \\<le> n}.\n         {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel}) =\n    sets (G n)", "using stock_filtration geometric_process\n              stoch_proc_filt_sets[of n geom_proc M borel] geom_rand_walk_borel_measurable"], ["proof (prove)\nusing this:\n  G = stoch_proc_filt M geom_proc borel\n  geom_proc = geom_rand_walk u d init\n  (\\<And>i.\n      i \\<le> n \\<Longrightarrow>\n      random_variable borel (geom_proc i)) \\<Longrightarrow>\n  sets (stoch_proc_filt M geom_proc borel n) =\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})\n  random_variable borel (geom_proc ?n)\n\ngoal (1 subgoal):\n 1. sigma_sets (space M)\n     (\\<Union>i\\<in>{m. m \\<le> n}.\n         {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel}) =\n    sets (G n)", "by blast"], ["proof (state)\nthis:\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel}) =\n  sets (G n)\n\ngoal (1 subgoal):\n 1. {geom_proc n -` B |B. B \\<in> sets borel} \\<subseteq> sets (G n)", "finally"], ["proof (chain)\npicking this:\n  {geom_proc n -` B |B. B \\<in> sets borel} \\<subseteq> sets (G n)", "show ?thesis"], ["proof (prove)\nusing this:\n  {geom_proc n -` B |B. B \\<in> sets borel} \\<subseteq> sets (G n)\n\ngoal (1 subgoal):\n 1. {geom_proc n -` B |B. B \\<in> sets borel} \\<subseteq> sets (G n)", "."], ["proof (state)\nthis:\n  {geom_proc n -` B |B. B \\<in> sets borel} \\<subseteq> sets (G n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {geom_proc n -` B |B. B \\<in> sets borel} \\<subseteq> sets (G n)\n\ngoal (1 subgoal):\n 1. \\<not> m \\<le> n \\<Longrightarrow>\n    (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "."], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\n\ngoal (3 subgoals):\n 1. (\\<lambda>w. spick w n x) -` {} \\<in> sets (G n)\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 3. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "}"], ["proof (state)\nthis:\n  ?C3\n  \\<in> (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n            {geom_proc i -` A \\<inter> space M |A.\n             A \\<in> sets borel}) \\<Longrightarrow>\n  (\\<lambda>w. spick w n x) -` ?C3 \\<in> sets (G n)\n\ngoal (3 subgoals):\n 1. (\\<lambda>w. spick w n x) -` {} \\<in> sets (G n)\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 3. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "show \"(\\<lambda>w. spick w n x) -` {} \\<in> sets (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` {} \\<in> sets (G n)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` {} \\<in> sets (G n)\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 2. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "{"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` {} \\<in> sets (G n)\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 2. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "fix C"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 2. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "assume \"C \\<in> sigma_sets (space M) (\\<Union>i\\<in>{m. m \\<le> Suc n}. {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})\"\n          and \"(\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\""], ["proof (state)\nthis:\n  C \\<in> sigma_sets (space M)\n           (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n               {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})\n  (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 2. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "hence \"(\\<lambda>w. spick w n x) -` (space M - C) = (\\<lambda>w. spick w n x) -` (space M) - (\\<lambda>w. spick w n x) -` C\""], ["proof (prove)\nusing this:\n  C \\<in> sigma_sets (space M)\n           (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n               {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})\n  (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` (space M - C) =\n    (\\<lambda>w. spick w n x) -` space M - (\\<lambda>w. spick w n x) -` C", "by (simp add: vimage_Diff)"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` (space M - C) =\n  (\\<lambda>w. spick w n x) -` space M - (\\<lambda>w. spick w n x) -` C\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 2. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "also"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` (space M - C) =\n  (\\<lambda>w. spick w n x) -` space M - (\\<lambda>w. spick w n x) -` C\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 2. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "have \"... = space M - (\\<lambda>w. spick w n x) -` C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` space M - (\\<lambda>w. spick w n x) -` C =\n    space M - (\\<lambda>w. spick w n x) -` C", "using bernoulli bernoulli_stream_space"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` space M - (\\<lambda>w. spick w n x) -` C =\n    space M - (\\<lambda>w. spick w n x) -` C", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` space M - (\\<lambda>w. spick w n x) -` C =\n  space M - (\\<lambda>w. spick w n x) -` C\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 2. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "also"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` space M - (\\<lambda>w. spick w n x) -` C =\n  space M - (\\<lambda>w. spick w n x) -` C\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 2. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "have \"... \\<in> sets (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space M - (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "using \\<open>(\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\\<close>"], ["proof (prove)\nusing this:\n  (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\n\ngoal (1 subgoal):\n 1. space M - (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)", "by (metis algebra.compl_sets disc_filtr_def discrete_filtration sets.sigma_algebra_axioms\n              sigma_algebra_def subalgebra_def)"], ["proof (state)\nthis:\n  space M - (\\<lambda>w. spick w n x) -` C \\<in> sets (G n)\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                             {geom_proc i -` A \\<inter> space M |A.\n                              A \\<in> sets borel});\n        (\\<lambda>w. spick w n x) -` a \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - a)\n                         \\<in> sets (G n)\n 2. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>w. spick w n x) -` (space M - C) \\<in> sets (G n)", "show \"(\\<lambda>w. spick w n x) -` (space M - C) \\<in> sets (G n)\""], ["proof (prove)\nusing this:\n  (\\<lambda>w. spick w n x) -` (space M - C) \\<in> sets (G n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` (space M - C) \\<in> sets (G n)", "."], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` (space M - C) \\<in> sets (G n)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?C3\n           \\<in> sigma_sets (space M)\n                  (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                      {geom_proc i -` A \\<inter> space M |A.\n                       A \\<in> sets borel});\n   (\\<lambda>w. spick w n x) -` ?C3 \\<in> sets (G n)\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - ?C3)\n                    \\<in> sets (G n)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?C3\n           \\<in> sigma_sets (space M)\n                  (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                      {geom_proc i -` A \\<inter> space M |A.\n                       A \\<in> sets borel});\n   (\\<lambda>w. spick w n x) -` ?C3 \\<in> sets (G n)\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>w. spick w n x) -` (space M - ?C3)\n                    \\<in> sets (G n)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "fix C::\"nat \\<Rightarrow> bool stream set\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "assume \"(\\<And>i. C i \\<in> sigma_sets (space M) (\\<Union>i\\<in>{m. m \\<le> Suc n}. {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel}))\"\n          and \"(\\<And>i. (\\<lambda>w. spick w n x) -` C i \\<in> sets (G n))\""], ["proof (state)\nthis:\n  C ?i1\n  \\<in> sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n             {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})\n  (\\<lambda>w. spick w n x) -` C ?i1 \\<in> sets (G n)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "hence \"(\\<lambda>w. spick w n x) -` \\<Union>(C ` UNIV) = (\\<Union> i\\<in> UNIV. (\\<lambda>w. spick w n x) -` (C i))\""], ["proof (prove)\nusing this:\n  C ?i1\n  \\<in> sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n             {geom_proc i -` A \\<inter> space M |A. A \\<in> sets borel})\n  (\\<lambda>w. spick w n x) -` C ?i1 \\<in> sets (G n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` \\<Union> (range C) =\n    (\\<Union>i. (\\<lambda>w. spick w n x) -` C i)", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` \\<Union> (range C) =\n  (\\<Union>i. (\\<lambda>w. spick w n x) -` C i)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "also"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` \\<Union> (range C) =\n  (\\<Union>i. (\\<lambda>w. spick w n x) -` C i)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "have \"... \\<in> sets (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>i. (\\<lambda>w. spick w n x) -` C i) \\<in> sets (G n)", "using \\<open>\\<And>i. (\\<lambda>w. spick w n x) -` C i \\<in> sets (G n)\\<close>"], ["proof (prove)\nusing this:\n  (\\<lambda>w. spick w n x) -` C ?i \\<in> sets (G n)\n\ngoal (1 subgoal):\n 1. (\\<Union>i. (\\<lambda>w. spick w n x) -` C i) \\<in> sets (G n)", "by simp"], ["proof (state)\nthis:\n  (\\<Union>i. (\\<lambda>w. spick w n x) -` C i) \\<in> sets (G n)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<And>i.\n                   a i\n                   \\<in> sigma_sets (space M)\n                          (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                              {geom_proc i -` A \\<inter> space M |A.\n                               A \\<in> sets borel});\n        \\<And>i. (\\<lambda>w. spick w n x) -` a i \\<in> sets (G n)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range a)\n                         \\<in> sets (G n)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>w. spick w n x) -` \\<Union> (range C) \\<in> sets (G n)", "show \"(\\<lambda>w. spick w n x) -` \\<Union>(C ` UNIV) \\<in> sets (G n)\""], ["proof (prove)\nusing this:\n  (\\<lambda>w. spick w n x) -` \\<Union> (range C) \\<in> sets (G n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` \\<Union> (range C) \\<in> sets (G n)", "."], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` \\<Union> (range C) \\<in> sets (G n)\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>i.\n              ?C3 i\n              \\<in> sigma_sets (space M)\n                     (\\<Union>i\\<in>{m. m \\<le> Suc n}.\n                         {geom_proc i -` A \\<inter> space M |A.\n                          A \\<in> sets borel});\n   \\<And>i. (\\<lambda>w. spick w n x) -` ?C3 i \\<in> sets (G n)\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>w. spick w n x) -` \\<Union> (range ?C3)\n                    \\<in> sets (G n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` B \\<in> sets (G n)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (G (Suc n)) \\<Longrightarrow>\n       (\\<lambda>w. spick w n x) -` y \\<inter> space (G n) \\<in> sets (G n)", "thus \"(\\<lambda>w. spick w n x) -` B \\<inter> space (G n) \\<in> sets (G n)\""], ["proof (prove)\nusing this:\n  (\\<lambda>w. spick w n x) -` B \\<in> sets (G n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` B \\<inter> space (G n) \\<in> sets (G n)", "using stock_filtration stoch_proc_filt_space\n      bernoulli bernoulli_stream_space"], ["proof (prove)\nusing this:\n  (\\<lambda>w. spick w n x) -` B \\<in> sets (G n)\n  G = stoch_proc_filt M geom_proc borel\n  space (stoch_proc_filt ?M ?X ?N ?n) = space ?M\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n x) -` B \\<inter> space (G n) \\<in> sets (G n)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n x) -` B \\<inter> space (G n) \\<in> sets (G n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>y\\<in>sets (G (Suc n)).\n     (\\<lambda>w. spick w n x) -` y \\<inter> space (G n) \\<in> sets (G n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) delta_price_adapted:\n   fixes cash_flow::\"bool stream \\<Rightarrow> real\"\n   assumes \"cash_flow \\<in> borel_measurable (G T)\"\nand \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\n  shows \"borel_adapt_stoch_proc G (delta_price N cash_flow T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc G (delta_price N cash_flow T)", "unfolding adapt_stoch_proc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t. delta_price N cash_flow T t \\<in> borel_measurable (G t)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t. delta_price N cash_flow T t \\<in> borel_measurable (G t)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t. delta_price N cash_flow T t \\<in> borel_measurable (G t)", "show \"delta_price N cash_flow T n \\<in> borel_measurable (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. delta_price N cash_flow T n \\<in> borel_measurable (G n)", "proof (cases \"Suc n \\<le> T\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)\n 2. \\<not> Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)", "case True"], ["proof (state)\nthis:\n  Suc n \\<le> T\n\ngoal (2 subgoals):\n 1. Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)\n 2. \\<not> Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)", "hence deleq: \"\\<forall>w. delta_price N cash_flow T n w = (rn_price N cash_flow T (Suc n) (spick w n True) - rn_price N cash_flow T (Suc n) (spick w n False))/\n    ((geom_proc n w) * (u - d))\""], ["proof (prove)\nusing this:\n  Suc n \\<le> T\n\ngoal (1 subgoal):\n 1. \\<forall>w.\n       delta_price N cash_flow T n w =\n       (rn_price N cash_flow T (Suc n) (spick w n True) -\n        rn_price N cash_flow T (Suc n) (spick w n False)) /\n       (geom_proc n w * (u - d))", "using delta_price_eq"], ["proof (prove)\nusing this:\n  Suc n \\<le> T\n  Suc ?n \\<le> ?T \\<Longrightarrow>\n  delta_price ?N ?cash_flow ?T ?n ?w =\n  (rn_price ?N ?cash_flow ?T (Suc ?n) (spick ?w ?n True) -\n   rn_price ?N ?cash_flow ?T (Suc ?n) (spick ?w ?n False)) /\n  (geom_proc ?n ?w * (u - d))\n\ngoal (1 subgoal):\n 1. \\<forall>w.\n       delta_price N cash_flow T n w =\n       (rn_price N cash_flow T (Suc n) (spick w n True) -\n        rn_price N cash_flow T (Suc n) (spick w n False)) /\n       (geom_proc n w * (u - d))", "by simp"], ["proof (state)\nthis:\n  \\<forall>w.\n     delta_price N cash_flow T n w =\n     (rn_price N cash_flow T (Suc n) (spick w n True) -\n      rn_price N cash_flow T (Suc n) (spick w n False)) /\n     (geom_proc n w * (u - d))\n\ngoal (2 subgoals):\n 1. Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)\n 2. \\<not> Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)", "have \"(\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n True)) \\<in> borel_measurable (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n True))\n    \\<in> borel_measurable (G n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n True))\n    \\<in> borel_measurable (G n)", "have \"rn_price N cash_flow T (Suc n) \\<in> borel_measurable  (G (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rn_price N cash_flow T (Suc n) \\<in> borel_measurable (G (Suc n))", "using rn_price_borel_adapt assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?cash_flow \\<in> borel_measurable (G ?matur);\n   ?N = bernoulli_stream ?q; 0 < ?q; ?q < 1; ?n \\<le> ?matur\\<rbrakk>\n  \\<Longrightarrow> rn_price ?N ?cash_flow ?matur ?n\n                    \\<in> borel_measurable (G ?n)\n  cash_flow \\<in> borel_measurable (G T)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. rn_price N cash_flow T (Suc n) \\<in> borel_measurable (G (Suc n))", "using True"], ["proof (prove)\nusing this:\n  \\<lbrakk>?cash_flow \\<in> borel_measurable (G ?matur);\n   ?N = bernoulli_stream ?q; 0 < ?q; ?q < 1; ?n \\<le> ?matur\\<rbrakk>\n  \\<Longrightarrow> rn_price ?N ?cash_flow ?matur ?n\n                    \\<in> borel_measurable (G ?n)\n  cash_flow \\<in> borel_measurable (G T)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  Suc n \\<le> T\n\ngoal (1 subgoal):\n 1. rn_price N cash_flow T (Suc n) \\<in> borel_measurable (G (Suc n))", "by blast"], ["proof (state)\nthis:\n  rn_price N cash_flow T (Suc n) \\<in> borel_measurable (G (Suc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n True))\n    \\<in> borel_measurable (G n)", "moreover"], ["proof (state)\nthis:\n  rn_price N cash_flow T (Suc n) \\<in> borel_measurable (G (Suc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n True))\n    \\<in> borel_measurable (G n)", "have \"(\\<lambda>w. spick w n True) \\<in> G n \\<rightarrow>\\<^sub>M G (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n True) \\<in> G n \\<rightarrow>\\<^sub>M G (Suc n)", "using spick_red_geom_filt"], ["proof (prove)\nusing this:\n  (\\<lambda>w. spick w ?n ?x) \\<in> G ?n \\<rightarrow>\\<^sub>M G (Suc ?n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n True) \\<in> G n \\<rightarrow>\\<^sub>M G (Suc n)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n True) \\<in> G n \\<rightarrow>\\<^sub>M G (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n True))\n    \\<in> borel_measurable (G n)", "ultimately"], ["proof (chain)\npicking this:\n  rn_price N cash_flow T (Suc n) \\<in> borel_measurable (G (Suc n))\n  (\\<lambda>w. spick w n True) \\<in> G n \\<rightarrow>\\<^sub>M G (Suc n)", "show ?thesis"], ["proof (prove)\nusing this:\n  rn_price N cash_flow T (Suc n) \\<in> borel_measurable (G (Suc n))\n  (\\<lambda>w. spick w n True) \\<in> G n \\<rightarrow>\\<^sub>M G (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n True))\n    \\<in> borel_measurable (G n)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n True))\n  \\<in> borel_measurable (G n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n True))\n  \\<in> borel_measurable (G n)\n\ngoal (2 subgoals):\n 1. Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)\n 2. \\<not> Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n True))\n  \\<in> borel_measurable (G n)\n\ngoal (2 subgoals):\n 1. Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)\n 2. \\<not> Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)", "have \"(\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n False)) \\<in> borel_measurable (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n False))\n    \\<in> borel_measurable (G n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n False))\n    \\<in> borel_measurable (G n)", "have \"rn_price N cash_flow T (Suc n) \\<in> borel_measurable  (G (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rn_price N cash_flow T (Suc n) \\<in> borel_measurable (G (Suc n))", "using rn_price_borel_adapt assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?cash_flow \\<in> borel_measurable (G ?matur);\n   ?N = bernoulli_stream ?q; 0 < ?q; ?q < 1; ?n \\<le> ?matur\\<rbrakk>\n  \\<Longrightarrow> rn_price ?N ?cash_flow ?matur ?n\n                    \\<in> borel_measurable (G ?n)\n  cash_flow \\<in> borel_measurable (G T)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. rn_price N cash_flow T (Suc n) \\<in> borel_measurable (G (Suc n))", "using True"], ["proof (prove)\nusing this:\n  \\<lbrakk>?cash_flow \\<in> borel_measurable (G ?matur);\n   ?N = bernoulli_stream ?q; 0 < ?q; ?q < 1; ?n \\<le> ?matur\\<rbrakk>\n  \\<Longrightarrow> rn_price ?N ?cash_flow ?matur ?n\n                    \\<in> borel_measurable (G ?n)\n  cash_flow \\<in> borel_measurable (G T)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  Suc n \\<le> T\n\ngoal (1 subgoal):\n 1. rn_price N cash_flow T (Suc n) \\<in> borel_measurable (G (Suc n))", "by blast"], ["proof (state)\nthis:\n  rn_price N cash_flow T (Suc n) \\<in> borel_measurable (G (Suc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n False))\n    \\<in> borel_measurable (G n)", "moreover"], ["proof (state)\nthis:\n  rn_price N cash_flow T (Suc n) \\<in> borel_measurable (G (Suc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n False))\n    \\<in> borel_measurable (G n)", "have \"(\\<lambda>w. spick w n False) \\<in> G n \\<rightarrow>\\<^sub>M G (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n False) \\<in> G n \\<rightarrow>\\<^sub>M G (Suc n)", "using spick_red_geom_filt"], ["proof (prove)\nusing this:\n  (\\<lambda>w. spick w ?n ?x) \\<in> G ?n \\<rightarrow>\\<^sub>M G (Suc ?n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n False) \\<in> G n \\<rightarrow>\\<^sub>M G (Suc n)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n False) \\<in> G n \\<rightarrow>\\<^sub>M G (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n False))\n    \\<in> borel_measurable (G n)", "ultimately"], ["proof (chain)\npicking this:\n  rn_price N cash_flow T (Suc n) \\<in> borel_measurable (G (Suc n))\n  (\\<lambda>w. spick w n False) \\<in> G n \\<rightarrow>\\<^sub>M G (Suc n)", "show ?thesis"], ["proof (prove)\nusing this:\n  rn_price N cash_flow T (Suc n) \\<in> borel_measurable (G (Suc n))\n  (\\<lambda>w. spick w n False) \\<in> G n \\<rightarrow>\\<^sub>M G (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n False))\n    \\<in> borel_measurable (G n)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n False))\n  \\<in> borel_measurable (G n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n False))\n  \\<in> borel_measurable (G n)\n\ngoal (2 subgoals):\n 1. Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)\n 2. \\<not> Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n True))\n  \\<in> borel_measurable (G n)\n  (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n False))\n  \\<in> borel_measurable (G n)", "have \"(\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n True) - rn_price N cash_flow T (Suc n) (spick w n False))\n      \\<in> borel_measurable (G n)\""], ["proof (prove)\nusing this:\n  (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n True))\n  \\<in> borel_measurable (G n)\n  (\\<lambda>w. rn_price N cash_flow T (Suc n) (spick w n False))\n  \\<in> borel_measurable (G n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w.\n        rn_price N cash_flow T (Suc n) (spick w n True) -\n        rn_price N cash_flow T (Suc n) (spick w n False))\n    \\<in> borel_measurable (G n)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w.\n      rn_price N cash_flow T (Suc n) (spick w n True) -\n      rn_price N cash_flow T (Suc n) (spick w n False))\n  \\<in> borel_measurable (G n)\n\ngoal (2 subgoals):\n 1. Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)\n 2. \\<not> Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>w.\n      rn_price N cash_flow T (Suc n) (spick w n True) -\n      rn_price N cash_flow T (Suc n) (spick w n False))\n  \\<in> borel_measurable (G n)\n\ngoal (2 subgoals):\n 1. Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)\n 2. \\<not> Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)", "have \"(\\<lambda>w. (geom_proc n w) * (u - d)) \\<in> borel_measurable (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. geom_proc n w * (u - d)) \\<in> borel_measurable (G n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>w. geom_proc n w * (u - d)) \\<in> borel_measurable (G n)", "have \"geom_proc n \\<in> borel_measurable (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc n \\<in> borel_measurable (G n)", "using stock_filtration"], ["proof (prove)\nusing this:\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. geom_proc n \\<in> borel_measurable (G n)", "by (metis adapt_stoch_proc_def stk_price stock_price_borel_measurable)"], ["proof (state)\nthis:\n  geom_proc n \\<in> borel_measurable (G n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. geom_proc n w * (u - d)) \\<in> borel_measurable (G n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  geom_proc n \\<in> borel_measurable (G n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. geom_proc n w * (u - d)) \\<in> borel_measurable (G n)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. geom_proc n w * (u - d)) \\<in> borel_measurable (G n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>w. geom_proc n w * (u - d)) \\<in> borel_measurable (G n)\n\ngoal (2 subgoals):\n 1. Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)\n 2. \\<not> Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>w.\n      rn_price N cash_flow T (Suc n) (spick w n True) -\n      rn_price N cash_flow T (Suc n) (spick w n False))\n  \\<in> borel_measurable (G n)\n  (\\<lambda>w. geom_proc n w * (u - d)) \\<in> borel_measurable (G n)", "have \"(\\<lambda>w. (rn_price N cash_flow T (Suc n) (spick w n True) - rn_price N cash_flow T (Suc n) (spick w n False))/\n      ((geom_proc n w) * (u - d)))\\<in> borel_measurable (G n)\""], ["proof (prove)\nusing this:\n  (\\<lambda>w.\n      rn_price N cash_flow T (Suc n) (spick w n True) -\n      rn_price N cash_flow T (Suc n) (spick w n False))\n  \\<in> borel_measurable (G n)\n  (\\<lambda>w. geom_proc n w * (u - d)) \\<in> borel_measurable (G n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w.\n        (rn_price N cash_flow T (Suc n) (spick w n True) -\n         rn_price N cash_flow T (Suc n) (spick w n False)) /\n        (geom_proc n w * (u - d)))\n    \\<in> borel_measurable (G n)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w.\n      (rn_price N cash_flow T (Suc n) (spick w n True) -\n       rn_price N cash_flow T (Suc n) (spick w n False)) /\n      (geom_proc n w * (u - d)))\n  \\<in> borel_measurable (G n)\n\ngoal (2 subgoals):\n 1. Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)\n 2. \\<not> Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>w.\n      (rn_price N cash_flow T (Suc n) (spick w n True) -\n       rn_price N cash_flow T (Suc n) (spick w n False)) /\n      (geom_proc n w * (u - d)))\n  \\<in> borel_measurable (G n)\n\ngoal (1 subgoal):\n 1. delta_price N cash_flow T n \\<in> borel_measurable (G n)", "using deleq"], ["proof (prove)\nusing this:\n  (\\<lambda>w.\n      (rn_price N cash_flow T (Suc n) (spick w n True) -\n       rn_price N cash_flow T (Suc n) (spick w n False)) /\n      (geom_proc n w * (u - d)))\n  \\<in> borel_measurable (G n)\n  \\<forall>w.\n     delta_price N cash_flow T n w =\n     (rn_price N cash_flow T (Suc n) (spick w n True) -\n      rn_price N cash_flow T (Suc n) (spick w n False)) /\n     (geom_proc n w * (u - d))\n\ngoal (1 subgoal):\n 1. delta_price N cash_flow T n \\<in> borel_measurable (G n)", "by presburger"], ["proof (state)\nthis:\n  delta_price N cash_flow T n \\<in> borel_measurable (G n)\n\ngoal (1 subgoal):\n 1. \\<not> Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)", "case False"], ["proof (state)\nthis:\n  \\<not> Suc n \\<le> T\n\ngoal (1 subgoal):\n 1. \\<not> Suc n \\<le> T \\<Longrightarrow>\n    delta_price N cash_flow T n \\<in> borel_measurable (G n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> Suc n \\<le> T\n\ngoal (1 subgoal):\n 1. delta_price N cash_flow T n \\<in> borel_measurable (G n)", "unfolding delta_price_def"], ["proof (prove)\nusing this:\n  \\<not> Suc n \\<le> T\n\ngoal (1 subgoal):\n 1. (\\<lambda>w.\n        if Suc n \\<le> T\n        then (rn_price N cash_flow T (Suc n) (pseudo_proj_True n w) -\n              rn_price N cash_flow T (Suc n) (pseudo_proj_False n w)) /\n             (geom_proc (Suc n) (spick w n True) -\n              geom_proc (Suc n) (spick w n False))\n        else 0)\n    \\<in> borel_measurable (G n)", "by simp"], ["proof (state)\nthis:\n  delta_price N cash_flow T n \\<in> borel_measurable (G n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  delta_price N cash_flow T n \\<in> borel_measurable (G n)\n\ngoal:\nNo subgoals!", "qed"], ["", "fun (in CRR_market) delta_predict where\n  \"delta_predict N der matur 0  = (\\<lambda>w. delta_price N der matur 0 w)\" |\n  \"delta_predict N der matur (Suc n) = (\\<lambda>w. delta_price N der matur n w)\""], ["", "lemma (in CRR_market) delta_predict_predict:\n  assumes \"der \\<in> borel_measurable (G matur)\"\nand \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\n  shows \"borel_predict_stoch_proc G (delta_predict N der matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_predict_stoch_proc G (delta_predict N der matur)", "unfolding predict_stoch_proc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. delta_predict N der matur 0 \\<in> borel_measurable (G 0) \\<and>\n    (\\<forall>n.\n        delta_predict N der matur (Suc n) \\<in> borel_measurable (G n))", "proof (intro conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. delta_predict N der matur 0 \\<in> borel_measurable (G 0)\n 2. \\<forall>n.\n       delta_predict N der matur (Suc n) \\<in> borel_measurable (G n)", "show \"delta_predict N der matur 0 \\<in> borel_measurable (G 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. delta_predict N der matur 0 \\<in> borel_measurable (G 0)", "using delta_price_adapted[of der matur N q]\n    assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>der \\<in> borel_measurable (G matur); N = bernoulli_stream q;\n   0 < q; q < 1\\<rbrakk>\n  \\<Longrightarrow> borel_adapt_stoch_proc G (delta_price N der matur)\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. delta_predict N der matur 0 \\<in> borel_measurable (G 0)", "unfolding adapt_stoch_proc_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>der \\<in> borel_measurable (G matur); N = bernoulli_stream q;\n   0 < q; q < 1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>t.\n                       delta_price N der matur t\n                       \\<in> borel_measurable (G t)\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. delta_predict N der matur 0 \\<in> borel_measurable (G 0)", "by force"], ["proof (state)\nthis:\n  delta_predict N der matur 0 \\<in> borel_measurable (G 0)\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       delta_predict N der matur (Suc n) \\<in> borel_measurable (G n)", "show \"\\<forall>n. delta_predict N der matur (Suc n) \\<in> borel_measurable (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       delta_predict N der matur (Suc n) \\<in> borel_measurable (G n)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. delta_predict N der matur (Suc n) \\<in> borel_measurable (G n)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. delta_predict N der matur (Suc n) \\<in> borel_measurable (G n)", "show \"delta_predict N der matur (Suc n) \\<in> borel_measurable (G n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. delta_predict N der matur (Suc n) \\<in> borel_measurable (G n)", "using delta_price_adapted[of der matur N q]\n    assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>der \\<in> borel_measurable (G matur); N = bernoulli_stream q;\n   0 < q; q < 1\\<rbrakk>\n  \\<Longrightarrow> borel_adapt_stoch_proc G (delta_price N der matur)\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. delta_predict N der matur (Suc n) \\<in> borel_measurable (G n)", "unfolding adapt_stoch_proc_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>der \\<in> borel_measurable (G matur); N = bernoulli_stream q;\n   0 < q; q < 1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>t.\n                       delta_price N der matur t\n                       \\<in> borel_measurable (G t)\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. delta_predict N der matur (Suc n) \\<in> borel_measurable (G n)", "by force"], ["proof (state)\nthis:\n  delta_predict N der matur (Suc n) \\<in> borel_measurable (G n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n. delta_predict N der matur (Suc n) \\<in> borel_measurable (G n)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition (in CRR_market) delta_pf where\n\"delta_pf N der matur = qty_single stk (delta_predict N der matur)\""], ["", "lemma (in CRR_market) delta_pf_support:\n  shows \"support_set (delta_pf N der matur) \\<subseteq> {stk}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. support_set (delta_pf N der matur) \\<subseteq> {stk}", "unfolding delta_pf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. support_set (qty_single stk (delta_predict N der matur))\n    \\<subseteq> {stk}", "using single_comp_support[of stk \"delta_predict N der matur\"]"], ["proof (prove)\nusing this:\n  support_set (qty_single stk (delta_predict N der matur)) \\<subseteq> {stk}\n\ngoal (1 subgoal):\n 1. support_set (qty_single stk (delta_predict N der matur))\n    \\<subseteq> {stk}", "by simp"], ["", "definition (in CRR_market) self_fin_delta_pf where\n\"self_fin_delta_pf N der matur v0 = self_finance Mkt v0 (delta_pf N der matur) risk_free_asset\""], ["", "lemma (in disc_equity_market) self_finance_trading_strat:\n  assumes \"trading_strategy pf\"\nand \"portfolio pf\"\nand \"borel_adapt_stoch_proc F (prices Mkt asset)\"\nand \"support_adapt Mkt pf\"\nshows \"trading_strategy (self_finance Mkt v pf asset)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trading_strategy (self_finance Mkt v pf asset)", "unfolding self_finance_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. trading_strategy\n     (qty_sum pf (qty_single asset (remaining_qty Mkt v pf asset)))", "proof (rule sum_trading_strat)"], ["proof (state)\ngoal (2 subgoals):\n 1. trading_strategy pf\n 2. trading_strategy (qty_single asset (remaining_qty Mkt v pf asset))", "show \"trading_strategy pf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trading_strategy pf", "using assms"], ["proof (prove)\nusing this:\n  trading_strategy pf\n  portfolio pf\n  borel_adapt_stoch_proc F (prices Mkt asset)\n  support_adapt Mkt pf\n\ngoal (1 subgoal):\n 1. trading_strategy pf", "by simp"], ["proof (state)\nthis:\n  trading_strategy pf\n\ngoal (1 subgoal):\n 1. trading_strategy (qty_single asset (remaining_qty Mkt v pf asset))", "show \"trading_strategy (qty_single asset (remaining_qty Mkt v pf asset))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trading_strategy (qty_single asset (remaining_qty Mkt v pf asset))", "unfolding trading_strategy_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. portfolio (qty_single asset (remaining_qty Mkt v pf asset)) \\<and>\n    (\\<forall>asseta\n              \\<in>support_set\n                    (qty_single asset (remaining_qty Mkt v pf asset)).\n        borel_predict_stoch_proc F\n         (qty_single asset (remaining_qty Mkt v pf asset) asseta))", "proof (intro conjI ballI)"], ["proof (state)\ngoal (2 subgoals):\n 1. portfolio (qty_single asset (remaining_qty Mkt v pf asset))\n 2. \\<And>asseta.\n       asseta\n       \\<in> support_set\n              (qty_single asset\n                (remaining_qty Mkt v pf asset)) \\<Longrightarrow>\n       borel_predict_stoch_proc F\n        (qty_single asset (remaining_qty Mkt v pf asset) asseta)", "show \"portfolio (qty_single asset (remaining_qty Mkt v pf asset))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. portfolio (qty_single asset (remaining_qty Mkt v pf asset))", "by (simp add: self_finance_def single_comp_portfolio)"], ["proof (state)\nthis:\n  portfolio (qty_single asset (remaining_qty Mkt v pf asset))\n\ngoal (1 subgoal):\n 1. \\<And>asseta.\n       asseta\n       \\<in> support_set\n              (qty_single asset\n                (remaining_qty Mkt v pf asset)) \\<Longrightarrow>\n       borel_predict_stoch_proc F\n        (qty_single asset (remaining_qty Mkt v pf asset) asseta)", "show \"\\<And>a.\n       a \\<in> support_set (qty_single asset (remaining_qty Mkt v pf asset)) \\<Longrightarrow>\n       borel_predict_stoch_proc F (qty_single asset (remaining_qty Mkt v pf asset) a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> support_set\n                (qty_single asset\n                  (remaining_qty Mkt v pf asset)) \\<Longrightarrow>\n       borel_predict_stoch_proc F\n        (qty_single asset (remaining_qty Mkt v pf asset) a)", "proof (cases \"support_set (qty_single asset (remaining_qty Mkt v pf asset)) = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set (qty_single asset (remaining_qty Mkt v pf asset)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set\n         (qty_single asset (remaining_qty Mkt v pf asset)) \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)", "case False"], ["proof (state)\nthis:\n  support_set (qty_single asset (remaining_qty Mkt v pf asset)) \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set (qty_single asset (remaining_qty Mkt v pf asset)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set\n         (qty_single asset (remaining_qty Mkt v pf asset)) \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)", "hence eqasset: \"support_set (qty_single asset (remaining_qty Mkt v pf asset)) = {asset}\""], ["proof (prove)\nusing this:\n  support_set (qty_single asset (remaining_qty Mkt v pf asset)) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. support_set (qty_single asset (remaining_qty Mkt v pf asset)) = {asset}", "using single_comp_support"], ["proof (prove)\nusing this:\n  support_set (qty_single asset (remaining_qty Mkt v pf asset)) \\<noteq> {}\n  support_set (qty_single ?asset ?qty) \\<subseteq> {?asset}\n\ngoal (1 subgoal):\n 1. support_set (qty_single asset (remaining_qty Mkt v pf asset)) = {asset}", "by fastforce"], ["proof (state)\nthis:\n  support_set (qty_single asset (remaining_qty Mkt v pf asset)) = {asset}\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set (qty_single asset (remaining_qty Mkt v pf asset)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set\n         (qty_single asset (remaining_qty Mkt v pf asset)) \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set (qty_single asset (remaining_qty Mkt v pf asset)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set\n         (qty_single asset (remaining_qty Mkt v pf asset)) \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)", "assume \"a\\<in> support_set (qty_single asset (remaining_qty Mkt v pf asset))\""], ["proof (state)\nthis:\n  a \\<in> support_set (qty_single asset (remaining_qty Mkt v pf asset))\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set (qty_single asset (remaining_qty Mkt v pf asset)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set\n         (qty_single asset (remaining_qty Mkt v pf asset)) \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)", "hence \"a = asset\""], ["proof (prove)\nusing this:\n  a \\<in> support_set (qty_single asset (remaining_qty Mkt v pf asset))\n\ngoal (1 subgoal):\n 1. a = asset", "using eqasset"], ["proof (prove)\nusing this:\n  a \\<in> support_set (qty_single asset (remaining_qty Mkt v pf asset))\n  support_set (qty_single asset (remaining_qty Mkt v pf asset)) = {asset}\n\ngoal (1 subgoal):\n 1. a = asset", "by simp"], ["proof (state)\nthis:\n  a = asset\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set (qty_single asset (remaining_qty Mkt v pf asset)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set\n         (qty_single asset (remaining_qty Mkt v pf asset)) \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)", "hence \"qty_single asset (remaining_qty Mkt v pf asset) a = (remaining_qty Mkt v pf asset)\""], ["proof (prove)\nusing this:\n  a = asset\n\ngoal (1 subgoal):\n 1. qty_single asset (remaining_qty Mkt v pf asset) a =\n    remaining_qty Mkt v pf asset", "unfolding qty_single_def"], ["proof (prove)\nusing this:\n  a = asset\n\ngoal (1 subgoal):\n 1. (qty_empty(asset := remaining_qty Mkt v pf asset)) a =\n    remaining_qty Mkt v pf asset", "by simp"], ["proof (state)\nthis:\n  qty_single asset (remaining_qty Mkt v pf asset) a =\n  remaining_qty Mkt v pf asset\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set (qty_single asset (remaining_qty Mkt v pf asset)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set\n         (qty_single asset (remaining_qty Mkt v pf asset)) \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)", "moreover"], ["proof (state)\nthis:\n  qty_single asset (remaining_qty Mkt v pf asset) a =\n  remaining_qty Mkt v pf asset\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set (qty_single asset (remaining_qty Mkt v pf asset)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set\n         (qty_single asset (remaining_qty Mkt v pf asset)) \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)", "have \"borel_predict_stoch_proc F (remaining_qty Mkt v pf asset)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_predict_stoch_proc F (remaining_qty Mkt v pf asset)", "proof (rule remaining_qty_predict)"], ["proof (state)\ngoal (3 subgoals):\n 1. borel_adapt_stoch_proc F (prices Mkt asset)\n 2. trading_strategy pf\n 3. support_adapt Mkt pf", "show \"trading_strategy pf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trading_strategy pf", "using assms"], ["proof (prove)\nusing this:\n  trading_strategy pf\n  portfolio pf\n  borel_adapt_stoch_proc F (prices Mkt asset)\n  support_adapt Mkt pf\n\ngoal (1 subgoal):\n 1. trading_strategy pf", "by simp"], ["proof (state)\nthis:\n  trading_strategy pf\n\ngoal (2 subgoals):\n 1. borel_adapt_stoch_proc F (prices Mkt asset)\n 2. support_adapt Mkt pf", "show \"borel_adapt_stoch_proc F (prices Mkt asset)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc F (prices Mkt asset)", "using assms"], ["proof (prove)\nusing this:\n  trading_strategy pf\n  portfolio pf\n  borel_adapt_stoch_proc F (prices Mkt asset)\n  support_adapt Mkt pf\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc F (prices Mkt asset)", "by simp"], ["proof (state)\nthis:\n  borel_adapt_stoch_proc F (prices Mkt asset)\n\ngoal (1 subgoal):\n 1. support_adapt Mkt pf", "show \"support_adapt Mkt pf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. support_adapt Mkt pf", "using assms"], ["proof (prove)\nusing this:\n  trading_strategy pf\n  portfolio pf\n  borel_adapt_stoch_proc F (prices Mkt asset)\n  support_adapt Mkt pf\n\ngoal (1 subgoal):\n 1. support_adapt Mkt pf", "by simp"], ["proof (state)\nthis:\n  support_adapt Mkt pf\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  borel_predict_stoch_proc F (remaining_qty Mkt v pf asset)\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set (qty_single asset (remaining_qty Mkt v pf asset)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set\n         (qty_single asset (remaining_qty Mkt v pf asset)) \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)", "ultimately"], ["proof (chain)\npicking this:\n  qty_single asset (remaining_qty Mkt v pf asset) a =\n  remaining_qty Mkt v pf asset\n  borel_predict_stoch_proc F (remaining_qty Mkt v pf asset)", "show \"borel_predict_stoch_proc F (qty_single asset (remaining_qty Mkt v pf asset) a)\""], ["proof (prove)\nusing this:\n  qty_single asset (remaining_qty Mkt v pf asset) a =\n  remaining_qty Mkt v pf asset\n  borel_predict_stoch_proc F (remaining_qty Mkt v pf asset)\n\ngoal (1 subgoal):\n 1. borel_predict_stoch_proc F\n     (qty_single asset (remaining_qty Mkt v pf asset) a)", "by simp"], ["proof (state)\nthis:\n  borel_predict_stoch_proc F\n   (qty_single asset (remaining_qty Mkt v pf asset) a)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set (qty_single asset (remaining_qty Mkt v pf asset)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set (qty_single asset (remaining_qty Mkt v pf asset)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)", "case True"], ["proof (state)\nthis:\n  support_set (qty_single asset (remaining_qty Mkt v pf asset)) = {}\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set (qty_single asset (remaining_qty Mkt v pf asset)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)", "thus \"\\<And>a. a \\<in> support_set (qty_single asset (remaining_qty Mkt v pf asset)) \\<Longrightarrow>\n         support_set (qty_single asset (remaining_qty Mkt v pf asset)) = {} \\<Longrightarrow>\n         borel_predict_stoch_proc F (qty_single asset (remaining_qty Mkt v pf asset) a)\""], ["proof (prove)\nusing this:\n  support_set (qty_single asset (remaining_qty Mkt v pf asset)) = {}\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> support_set\n                         (qty_single asset (remaining_qty Mkt v pf asset));\n        support_set (qty_single asset (remaining_qty Mkt v pf asset)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc F\n                          (qty_single asset (remaining_qty Mkt v pf asset)\n                            a)", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?a13\n           \\<in> support_set\n                  (qty_single asset (remaining_qty Mkt v pf asset));\n   support_set (qty_single asset (remaining_qty Mkt v pf asset)) =\n   {}\\<rbrakk>\n  \\<Longrightarrow> borel_predict_stoch_proc F\n                     (qty_single asset (remaining_qty Mkt v pf asset) ?a13)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?a13\n  \\<in> support_set\n         (qty_single asset (remaining_qty Mkt v pf asset)) \\<Longrightarrow>\n  borel_predict_stoch_proc F\n   (qty_single asset (remaining_qty Mkt v pf asset) ?a13)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  trading_strategy (qty_single asset (remaining_qty Mkt v pf asset))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) self_fin_delta_pf_trad_strat:\n  assumes \"der\\<in> borel_measurable (G matur)\"\nand \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\n  shows \"trading_strategy (self_fin_delta_pf N der matur v0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trading_strategy (self_fin_delta_pf N der matur v0)", "unfolding self_fin_delta_pf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. trading_strategy\n     (self_finance Mkt v0 (delta_pf N der matur) risk_free_asset)", "proof (rule self_finance_trading_strat)"], ["proof (state)\ngoal (4 subgoals):\n 1. trading_strategy (delta_pf N der matur)\n 2. portfolio (delta_pf N der matur)\n 3. borel_adapt_stoch_proc G (prices Mkt risk_free_asset)\n 4. support_adapt Mkt (delta_pf N der matur)", "show \"trading_strategy (delta_pf N der matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trading_strategy (delta_pf N der matur)", "unfolding trading_strategy_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. portfolio (delta_pf N der matur) \\<and>\n    (\\<forall>asset\\<in>support_set (delta_pf N der matur).\n        borel_predict_stoch_proc G (delta_pf N der matur asset))", "proof (intro conjI ballI)"], ["proof (state)\ngoal (2 subgoals):\n 1. portfolio (delta_pf N der matur)\n 2. \\<And>asset.\n       asset \\<in> support_set (delta_pf N der matur) \\<Longrightarrow>\n       borel_predict_stoch_proc G (delta_pf N der matur asset)", "show \"portfolio (delta_pf N der matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. portfolio (delta_pf N der matur)", "unfolding portfolio_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (support_set (delta_pf N der matur))", "using delta_pf_support"], ["proof (prove)\nusing this:\n  support_set (delta_pf ?N ?der ?matur) \\<subseteq> {stk}\n\ngoal (1 subgoal):\n 1. finite (support_set (delta_pf N der matur))", "by (meson finite.emptyI finite_insert infinite_super)"], ["proof (state)\nthis:\n  portfolio (delta_pf N der matur)\n\ngoal (1 subgoal):\n 1. \\<And>asset.\n       asset \\<in> support_set (delta_pf N der matur) \\<Longrightarrow>\n       borel_predict_stoch_proc G (delta_pf N der matur asset)", "show \"\\<And>asset. asset \\<in> support_set (delta_pf N der matur) \\<Longrightarrow> borel_predict_stoch_proc G (delta_pf N der matur asset)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>asset.\n       asset \\<in> support_set (delta_pf N der matur) \\<Longrightarrow>\n       borel_predict_stoch_proc G (delta_pf N der matur asset)", "proof (cases \"support_set (delta_pf N der matur) = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) = {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc G\n                          (delta_pf N der matur asset)\n 2. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc G\n                          (delta_pf N der matur asset)", "case False"], ["proof (state)\nthis:\n  support_set (delta_pf N der matur) \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) = {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc G\n                          (delta_pf N der matur asset)\n 2. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc G\n                          (delta_pf N der matur asset)", "fix asset"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) = {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc G\n                          (delta_pf N der matur asset)\n 2. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc G\n                          (delta_pf N der matur asset)", "assume \"asset \\<in> support_set (delta_pf N der matur)\""], ["proof (state)\nthis:\n  asset \\<in> support_set (delta_pf N der matur)\n\ngoal (2 subgoals):\n 1. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) = {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc G\n                          (delta_pf N der matur asset)\n 2. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc G\n                          (delta_pf N der matur asset)", "hence \"asset = stk\""], ["proof (prove)\nusing this:\n  asset \\<in> support_set (delta_pf N der matur)\n\ngoal (1 subgoal):\n 1. asset = stk", "using False delta_pf_support"], ["proof (prove)\nusing this:\n  asset \\<in> support_set (delta_pf N der matur)\n  support_set (delta_pf N der matur) \\<noteq> {}\n  support_set (delta_pf ?N ?der ?matur) \\<subseteq> {stk}\n\ngoal (1 subgoal):\n 1. asset = stk", "by auto"], ["proof (state)\nthis:\n  asset = stk\n\ngoal (2 subgoals):\n 1. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) = {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc G\n                          (delta_pf N der matur asset)\n 2. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc G\n                          (delta_pf N der matur asset)", "hence \"delta_pf N der matur asset = delta_predict N der matur\""], ["proof (prove)\nusing this:\n  asset = stk\n\ngoal (1 subgoal):\n 1. delta_pf N der matur asset = delta_predict N der matur", "unfolding delta_pf_def qty_single_def"], ["proof (prove)\nusing this:\n  asset = stk\n\ngoal (1 subgoal):\n 1. (qty_empty(stk := delta_predict N der matur)) asset =\n    delta_predict N der matur", "by simp"], ["proof (state)\nthis:\n  delta_pf N der matur asset = delta_predict N der matur\n\ngoal (2 subgoals):\n 1. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) = {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc G\n                          (delta_pf N der matur asset)\n 2. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc G\n                          (delta_pf N der matur asset)", "thus \"borel_predict_stoch_proc G (delta_pf N der matur asset)\""], ["proof (prove)\nusing this:\n  delta_pf N der matur asset = delta_predict N der matur\n\ngoal (1 subgoal):\n 1. borel_predict_stoch_proc G (delta_pf N der matur asset)", "using delta_predict_predict\n        assms"], ["proof (prove)\nusing this:\n  delta_pf N der matur asset = delta_predict N der matur\n  \\<lbrakk>?der \\<in> borel_measurable (G ?matur); ?N = bernoulli_stream ?q;\n   0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> borel_predict_stoch_proc G\n                     (delta_predict ?N ?der ?matur)\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. borel_predict_stoch_proc G (delta_pf N der matur asset)", "by simp"], ["proof (state)\nthis:\n  borel_predict_stoch_proc G (delta_pf N der matur asset)\n\ngoal (1 subgoal):\n 1. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) = {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc G\n                          (delta_pf N der matur asset)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) = {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc G\n                          (delta_pf N der matur asset)", "case True"], ["proof (state)\nthis:\n  support_set (delta_pf N der matur) = {}\n\ngoal (1 subgoal):\n 1. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) = {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc G\n                          (delta_pf N der matur asset)", "thus \"\\<And>asset. asset \\<in> support_set (delta_pf N der matur) \\<Longrightarrow>\n             support_set (delta_pf N der matur) = {} \\<Longrightarrow> borel_predict_stoch_proc G (delta_pf N der matur asset)\""], ["proof (prove)\nusing this:\n  support_set (delta_pf N der matur) = {}\n\ngoal (1 subgoal):\n 1. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) = {}\\<rbrakk>\n       \\<Longrightarrow> borel_predict_stoch_proc G\n                          (delta_pf N der matur asset)", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?asset1 \\<in> support_set (delta_pf N der matur);\n   support_set (delta_pf N der matur) = {}\\<rbrakk>\n  \\<Longrightarrow> borel_predict_stoch_proc G\n                     (delta_pf N der matur ?asset1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?asset1 \\<in> support_set (delta_pf N der matur) \\<Longrightarrow>\n  borel_predict_stoch_proc G (delta_pf N der matur ?asset1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  trading_strategy (delta_pf N der matur)\n\ngoal (3 subgoals):\n 1. portfolio (delta_pf N der matur)\n 2. borel_adapt_stoch_proc G (prices Mkt risk_free_asset)\n 3. support_adapt Mkt (delta_pf N der matur)", "show \"portfolio (delta_pf N der matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. portfolio (delta_pf N der matur)", "using delta_pf_support"], ["proof (prove)\nusing this:\n  support_set (delta_pf ?N ?der ?matur) \\<subseteq> {stk}\n\ngoal (1 subgoal):\n 1. portfolio (delta_pf N der matur)", "unfolding portfolio_def"], ["proof (prove)\nusing this:\n  support_set (delta_pf ?N ?der ?matur) \\<subseteq> {stk}\n\ngoal (1 subgoal):\n 1. finite (support_set (delta_pf N der matur))", "by (meson finite.emptyI finite_insert infinite_super)"], ["proof (state)\nthis:\n  portfolio (delta_pf N der matur)\n\ngoal (2 subgoals):\n 1. borel_adapt_stoch_proc G (prices Mkt risk_free_asset)\n 2. support_adapt Mkt (delta_pf N der matur)", "show \"borel_adapt_stoch_proc G (prices Mkt risk_free_asset)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc G (prices Mkt risk_free_asset)", "using rf_price\n    disc_rfr_proc_borel_adapted"], ["proof (prove)\nusing this:\n  prices Mkt risk_free_asset = disc_rfr_proc r\n  borel_adapt_stoch_proc G (disc_rfr_proc ?r)\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc G (prices Mkt risk_free_asset)", "by simp"], ["proof (state)\nthis:\n  borel_adapt_stoch_proc G (prices Mkt risk_free_asset)\n\ngoal (1 subgoal):\n 1. support_adapt Mkt (delta_pf N der matur)", "show \"support_adapt Mkt (delta_pf N der matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. support_adapt Mkt (delta_pf N der matur)", "unfolding support_adapt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>asset\\<in>support_set (delta_pf N der matur).\n       borel_adapt_stoch_proc G (prices Mkt asset)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>asset.\n       asset \\<in> support_set (delta_pf N der matur) \\<Longrightarrow>\n       borel_adapt_stoch_proc G (prices Mkt asset)", "show \"\\<And>asset. asset \\<in> support_set (delta_pf N der matur) \\<Longrightarrow> borel_adapt_stoch_proc G (prices Mkt asset)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>asset.\n       asset \\<in> support_set (delta_pf N der matur) \\<Longrightarrow>\n       borel_adapt_stoch_proc G (prices Mkt asset)", "proof (cases \"support_set (delta_pf N der matur) = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) = {}\\<rbrakk>\n       \\<Longrightarrow> borel_adapt_stoch_proc G (prices Mkt asset)\n 2. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> borel_adapt_stoch_proc G (prices Mkt asset)", "case False"], ["proof (state)\nthis:\n  support_set (delta_pf N der matur) \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) = {}\\<rbrakk>\n       \\<Longrightarrow> borel_adapt_stoch_proc G (prices Mkt asset)\n 2. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> borel_adapt_stoch_proc G (prices Mkt asset)", "fix asset"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) = {}\\<rbrakk>\n       \\<Longrightarrow> borel_adapt_stoch_proc G (prices Mkt asset)\n 2. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> borel_adapt_stoch_proc G (prices Mkt asset)", "assume \"asset \\<in> support_set (delta_pf N der matur)\""], ["proof (state)\nthis:\n  asset \\<in> support_set (delta_pf N der matur)\n\ngoal (2 subgoals):\n 1. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) = {}\\<rbrakk>\n       \\<Longrightarrow> borel_adapt_stoch_proc G (prices Mkt asset)\n 2. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> borel_adapt_stoch_proc G (prices Mkt asset)", "hence \"asset = stk\""], ["proof (prove)\nusing this:\n  asset \\<in> support_set (delta_pf N der matur)\n\ngoal (1 subgoal):\n 1. asset = stk", "using False delta_pf_support"], ["proof (prove)\nusing this:\n  asset \\<in> support_set (delta_pf N der matur)\n  support_set (delta_pf N der matur) \\<noteq> {}\n  support_set (delta_pf ?N ?der ?matur) \\<subseteq> {stk}\n\ngoal (1 subgoal):\n 1. asset = stk", "by auto"], ["proof (state)\nthis:\n  asset = stk\n\ngoal (2 subgoals):\n 1. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) = {}\\<rbrakk>\n       \\<Longrightarrow> borel_adapt_stoch_proc G (prices Mkt asset)\n 2. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> borel_adapt_stoch_proc G (prices Mkt asset)", "hence \"prices Mkt asset = geom_proc\""], ["proof (prove)\nusing this:\n  asset = stk\n\ngoal (1 subgoal):\n 1. prices Mkt asset = geom_proc", "using stk_price"], ["proof (prove)\nusing this:\n  asset = stk\n  prices Mkt stk = geom_proc\n\ngoal (1 subgoal):\n 1. prices Mkt asset = geom_proc", "by simp"], ["proof (state)\nthis:\n  prices Mkt asset = geom_proc\n\ngoal (2 subgoals):\n 1. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) = {}\\<rbrakk>\n       \\<Longrightarrow> borel_adapt_stoch_proc G (prices Mkt asset)\n 2. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> borel_adapt_stoch_proc G (prices Mkt asset)", "thus \"borel_adapt_stoch_proc G (prices Mkt asset)\""], ["proof (prove)\nusing this:\n  prices Mkt asset = geom_proc\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc G (prices Mkt asset)", "using \\<open>asset = stk\\<close> stock_price_borel_measurable"], ["proof (prove)\nusing this:\n  prices Mkt asset = geom_proc\n  asset = stk\n  borel_adapt_stoch_proc G (prices Mkt stk)\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc G (prices Mkt asset)", "by auto"], ["proof (state)\nthis:\n  borel_adapt_stoch_proc G (prices Mkt asset)\n\ngoal (1 subgoal):\n 1. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) = {}\\<rbrakk>\n       \\<Longrightarrow> borel_adapt_stoch_proc G (prices Mkt asset)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) = {}\\<rbrakk>\n       \\<Longrightarrow> borel_adapt_stoch_proc G (prices Mkt asset)", "case True"], ["proof (state)\nthis:\n  support_set (delta_pf N der matur) = {}\n\ngoal (1 subgoal):\n 1. \\<And>asset.\n       \\<lbrakk>asset \\<in> support_set (delta_pf N der matur);\n        support_set (delta_pf N der matur) = {}\\<rbrakk>\n       \\<Longrightarrow> borel_adapt_stoch_proc G (prices Mkt asset)", "thus \"\\<And>asset. asset \\<in> support_set (delta_pf N der matur) \\<Longrightarrow> borel_adapt_stoch_proc G (prices Mkt asset)\""], ["proof (prove)\nusing this:\n  support_set (delta_pf N der matur) = {}\n\ngoal (1 subgoal):\n 1. \\<And>asset.\n       asset \\<in> support_set (delta_pf N der matur) \\<Longrightarrow>\n       borel_adapt_stoch_proc G (prices Mkt asset)", "by simp"], ["proof (state)\nthis:\n  ?asset1 \\<in> support_set (delta_pf N der matur) \\<Longrightarrow>\n  borel_adapt_stoch_proc G (prices Mkt ?asset1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?asset1 \\<in> support_set (delta_pf N der matur) \\<Longrightarrow>\n  borel_adapt_stoch_proc G (prices Mkt ?asset1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  support_adapt Mkt (delta_pf N der matur)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition (in CRR_market) delta_hedging where\n\"delta_hedging N der matur = self_fin_delta_pf N der matur\n  (prob_space.expectation N (discounted_value r (\\<lambda>m. der) matur))\""], ["", "lemma (in CRR_market)  geom_proc_eq_snth:\n  shows \"(\\<And>m. m \\<le> Suc n \\<Longrightarrow> geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    (\\<And>m. m \\<le> n \\<Longrightarrow> snth x m = snth y m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m \\<le> Suc n \\<Longrightarrow>\n        geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    (\\<And>m. m \\<le> n \\<Longrightarrow> x !! m = y !! m)", "proof (induct n )"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>\\<And>m.\n                   m \\<le> Suc 0 \\<Longrightarrow>\n                   geom_proc m x = geom_proc m y;\n        m \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x !! m = y !! m\n 2. \\<And>n m.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<And>m.\n                               m \\<le> Suc n \\<Longrightarrow>\n                               geom_proc m x = geom_proc m y;\n                    m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> x !! m = y !! m;\n        \\<And>m.\n           m \\<le> Suc (Suc n) \\<Longrightarrow>\n           geom_proc m x = geom_proc m y;\n        m \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> x !! m = y !! m", "case 0"], ["proof (state)\nthis:\n  ?m1 \\<le> Suc 0 \\<Longrightarrow> geom_proc ?m1 x = geom_proc ?m1 y\n  m \\<le> 0\n\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>\\<And>m.\n                   m \\<le> Suc 0 \\<Longrightarrow>\n                   geom_proc m x = geom_proc m y;\n        m \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x !! m = y !! m\n 2. \\<And>n m.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<And>m.\n                               m \\<le> Suc n \\<Longrightarrow>\n                               geom_proc m x = geom_proc m y;\n                    m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> x !! m = y !! m;\n        \\<And>m.\n           m \\<le> Suc (Suc n) \\<Longrightarrow>\n           geom_proc m x = geom_proc m y;\n        m \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> x !! m = y !! m", "assume asm: \"(\\<And>m. m \\<le>Suc  0 \\<Longrightarrow> geom_proc m x = geom_proc m y)\" and \"m\\<le> 0\""], ["proof (state)\nthis:\n  ?m1 \\<le> Suc 0 \\<Longrightarrow> geom_proc ?m1 x = geom_proc ?m1 y\n  m \\<le> 0\n\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>\\<And>m.\n                   m \\<le> Suc 0 \\<Longrightarrow>\n                   geom_proc m x = geom_proc m y;\n        m \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x !! m = y !! m\n 2. \\<And>n m.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<And>m.\n                               m \\<le> Suc n \\<Longrightarrow>\n                               geom_proc m x = geom_proc m y;\n                    m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> x !! m = y !! m;\n        \\<And>m.\n           m \\<le> Suc (Suc n) \\<Longrightarrow>\n           geom_proc m x = geom_proc m y;\n        m \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> x !! m = y !! m", "hence \"m = 0\""], ["proof (prove)\nusing this:\n  ?m1 \\<le> Suc 0 \\<Longrightarrow> geom_proc ?m1 x = geom_proc ?m1 y\n  m \\<le> 0\n\ngoal (1 subgoal):\n 1. m = 0", "by simp"], ["proof (state)\nthis:\n  m = 0\n\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>\\<And>m.\n                   m \\<le> Suc 0 \\<Longrightarrow>\n                   geom_proc m x = geom_proc m y;\n        m \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x !! m = y !! m\n 2. \\<And>n m.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<And>m.\n                               m \\<le> Suc n \\<Longrightarrow>\n                               geom_proc m x = geom_proc m y;\n                    m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> x !! m = y !! m;\n        \\<And>m.\n           m \\<le> Suc (Suc n) \\<Longrightarrow>\n           geom_proc m x = geom_proc m y;\n        m \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> x !! m = y !! m", "have \"geom_proc (Suc 0) x = geom_proc (Suc 0) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) x = geom_proc (Suc 0) y", "using asm"], ["proof (prove)\nusing this:\n  ?m1 \\<le> Suc 0 \\<Longrightarrow> geom_proc ?m1 x = geom_proc ?m1 y\n\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) x = geom_proc (Suc 0) y", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc 0) x = geom_proc (Suc 0) y\n\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>\\<And>m.\n                   m \\<le> Suc 0 \\<Longrightarrow>\n                   geom_proc m x = geom_proc m y;\n        m \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x !! m = y !! m\n 2. \\<And>n m.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<And>m.\n                               m \\<le> Suc n \\<Longrightarrow>\n                               geom_proc m x = geom_proc m y;\n                    m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> x !! m = y !! m;\n        \\<And>m.\n           m \\<le> Suc (Suc n) \\<Longrightarrow>\n           geom_proc m x = geom_proc m y;\n        m \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> x !! m = y !! m", "have \"snth x 0 = snth y 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x !! 0 = y !! 0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. x !! 0 \\<noteq> y !! 0 \\<Longrightarrow> False", "assume \"snth x 0 \\<noteq> snth y 0\""], ["proof (state)\nthis:\n  x !! 0 \\<noteq> y !! 0\n\ngoal (1 subgoal):\n 1. x !! 0 \\<noteq> y !! 0 \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"snth x 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x !! 0 \\<Longrightarrow> False\n 2. \\<not> x !! 0 \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  x !! 0\n\ngoal (2 subgoals):\n 1. x !! 0 \\<Longrightarrow> False\n 2. \\<not> x !! 0 \\<Longrightarrow> False", "hence \"\\<not> snth y 0\""], ["proof (prove)\nusing this:\n  x !! 0\n\ngoal (1 subgoal):\n 1. \\<not> y !! 0", "using \\<open>snth x 0 \\<noteq> snth y 0\\<close>"], ["proof (prove)\nusing this:\n  x !! 0\n  x !! 0 \\<noteq> y !! 0\n\ngoal (1 subgoal):\n 1. \\<not> y !! 0", "by simp"], ["proof (state)\nthis:\n  \\<not> y !! 0\n\ngoal (2 subgoals):\n 1. x !! 0 \\<Longrightarrow> False\n 2. \\<not> x !! 0 \\<Longrightarrow> False", "have \"geom_proc (Suc 0) x = u * init\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) x = u * init", "using geometric_process True"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n  x !! 0\n\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) x = u * init", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc 0) x = u * init\n\ngoal (2 subgoals):\n 1. x !! 0 \\<Longrightarrow> False\n 2. \\<not> x !! 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  geom_proc (Suc 0) x = u * init\n\ngoal (2 subgoals):\n 1. x !! 0 \\<Longrightarrow> False\n 2. \\<not> x !! 0 \\<Longrightarrow> False", "have \"geom_proc (Suc 0) y = d * init\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) y = d * init", "using geometric_process \\<open>\\<not> snth y 0\\<close>"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n  \\<not> y !! 0\n\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) y = d * init", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc 0) y = d * init\n\ngoal (2 subgoals):\n 1. x !! 0 \\<Longrightarrow> False\n 2. \\<not> x !! 0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  geom_proc (Suc 0) x = u * init\n  geom_proc (Suc 0) y = d * init", "have \"geom_proc (Suc 0) x \\<noteq> geom_proc (Suc 0) y\""], ["proof (prove)\nusing this:\n  geom_proc (Suc 0) x = u * init\n  geom_proc (Suc 0) y = d * init\n\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) x \\<noteq> geom_proc (Suc 0) y", "using S0_positive down_lt_up"], ["proof (prove)\nusing this:\n  geom_proc (Suc 0) x = u * init\n  geom_proc (Suc 0) y = d * init\n  0 < init\n  d < u\n\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) x \\<noteq> geom_proc (Suc 0) y", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc 0) x \\<noteq> geom_proc (Suc 0) y\n\ngoal (2 subgoals):\n 1. x !! 0 \\<Longrightarrow> False\n 2. \\<not> x !! 0 \\<Longrightarrow> False", "thus ?thesis"], ["proof (prove)\nusing this:\n  geom_proc (Suc 0) x \\<noteq> geom_proc (Suc 0) y\n\ngoal (1 subgoal):\n 1. False", "using \\<open>geom_proc (Suc 0) x = geom_proc (Suc 0) y\\<close>"], ["proof (prove)\nusing this:\n  geom_proc (Suc 0) x \\<noteq> geom_proc (Suc 0) y\n  geom_proc (Suc 0) x = geom_proc (Suc 0) y\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> x !! 0 \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x !! 0 \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> x !! 0\n\ngoal (1 subgoal):\n 1. \\<not> x !! 0 \\<Longrightarrow> False", "hence \"snth y 0\""], ["proof (prove)\nusing this:\n  \\<not> x !! 0\n\ngoal (1 subgoal):\n 1. y !! 0", "using \\<open>snth x 0 \\<noteq> snth y 0\\<close>"], ["proof (prove)\nusing this:\n  \\<not> x !! 0\n  x !! 0 \\<noteq> y !! 0\n\ngoal (1 subgoal):\n 1. y !! 0", "by simp"], ["proof (state)\nthis:\n  y !! 0\n\ngoal (1 subgoal):\n 1. \\<not> x !! 0 \\<Longrightarrow> False", "have \"geom_proc (Suc 0) x = d * init\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) x = d * init", "using geometric_process False"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n  \\<not> x !! 0\n\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) x = d * init", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc 0) x = d * init\n\ngoal (1 subgoal):\n 1. \\<not> x !! 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  geom_proc (Suc 0) x = d * init\n\ngoal (1 subgoal):\n 1. \\<not> x !! 0 \\<Longrightarrow> False", "have \"geom_proc (Suc 0) y = u * init\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) y = u * init", "using geometric_process \\<open>snth y 0\\<close>"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n  y !! 0\n\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) y = u * init", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc 0) y = u * init\n\ngoal (1 subgoal):\n 1. \\<not> x !! 0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  geom_proc (Suc 0) x = d * init\n  geom_proc (Suc 0) y = u * init", "have \"geom_proc (Suc 0) x \\<noteq> geom_proc (Suc 0) y\""], ["proof (prove)\nusing this:\n  geom_proc (Suc 0) x = d * init\n  geom_proc (Suc 0) y = u * init\n\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) x \\<noteq> geom_proc (Suc 0) y", "using S0_positive down_lt_up"], ["proof (prove)\nusing this:\n  geom_proc (Suc 0) x = d * init\n  geom_proc (Suc 0) y = u * init\n  0 < init\n  d < u\n\ngoal (1 subgoal):\n 1. geom_proc (Suc 0) x \\<noteq> geom_proc (Suc 0) y", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc 0) x \\<noteq> geom_proc (Suc 0) y\n\ngoal (1 subgoal):\n 1. \\<not> x !! 0 \\<Longrightarrow> False", "thus ?thesis"], ["proof (prove)\nusing this:\n  geom_proc (Suc 0) x \\<noteq> geom_proc (Suc 0) y\n\ngoal (1 subgoal):\n 1. False", "using \\<open>geom_proc (Suc 0) x = geom_proc (Suc 0) y\\<close>"], ["proof (prove)\nusing this:\n  geom_proc (Suc 0) x \\<noteq> geom_proc (Suc 0) y\n  geom_proc (Suc 0) x = geom_proc (Suc 0) y\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x !! 0 = y !! 0\n\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>\\<And>m.\n                   m \\<le> Suc 0 \\<Longrightarrow>\n                   geom_proc m x = geom_proc m y;\n        m \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x !! m = y !! m\n 2. \\<And>n m.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<And>m.\n                               m \\<le> Suc n \\<Longrightarrow>\n                               geom_proc m x = geom_proc m y;\n                    m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> x !! m = y !! m;\n        \\<And>m.\n           m \\<le> Suc (Suc n) \\<Longrightarrow>\n           geom_proc m x = geom_proc m y;\n        m \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> x !! m = y !! m", "thus \"\\<And>m. (\\<And>m. m \\<le> Suc 0 \\<Longrightarrow> geom_proc m x = geom_proc m y) \\<Longrightarrow> m \\<le> 0 \\<Longrightarrow> x !! m = y !! m\""], ["proof (prove)\nusing this:\n  x !! 0 = y !! 0\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>\\<And>m.\n                   m \\<le> Suc 0 \\<Longrightarrow>\n                   geom_proc m x = geom_proc m y;\n        m \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x !! m = y !! m", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>m.\n              m \\<le> Suc 0 \\<Longrightarrow> geom_proc m x = geom_proc m y;\n   ?m1 \\<le> 0\\<rbrakk>\n  \\<Longrightarrow> x !! ?m1 = y !! ?m1\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<And>m.\n                               m \\<le> Suc n \\<Longrightarrow>\n                               geom_proc m x = geom_proc m y;\n                    m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> x !! m = y !! m;\n        \\<And>m.\n           m \\<le> Suc (Suc n) \\<Longrightarrow>\n           geom_proc m x = geom_proc m y;\n        m \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> x !! m = y !! m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<And>m.\n                               m \\<le> Suc n \\<Longrightarrow>\n                               geom_proc m x = geom_proc m y;\n                    m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> x !! m = y !! m;\n        \\<And>m.\n           m \\<le> Suc (Suc n) \\<Longrightarrow>\n           geom_proc m x = geom_proc m y;\n        m \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> x !! m = y !! m", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>m.\n              m \\<le> Suc n \\<Longrightarrow> geom_proc m x = geom_proc m y;\n   ?m1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> x !! ?m1 = y !! ?m1\n  ?m1 \\<le> Suc (Suc n) \\<Longrightarrow> geom_proc ?m1 x = geom_proc ?m1 y\n  m \\<le> Suc n\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<And>m.\n                               m \\<le> Suc n \\<Longrightarrow>\n                               geom_proc m x = geom_proc m y;\n                    m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> x !! m = y !! m;\n        \\<And>m.\n           m \\<le> Suc (Suc n) \\<Longrightarrow>\n           geom_proc m x = geom_proc m y;\n        m \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> x !! m = y !! m", "assume fst: \"(\\<And>m. (\\<And>m. m \\<le> Suc n \\<Longrightarrow> geom_proc m x = geom_proc m y) \\<Longrightarrow> m \\<le> n \\<Longrightarrow> x !! m = y !! m)\"\n    and scd: \"(\\<And>m. m \\<le> Suc (Suc n) \\<Longrightarrow> geom_proc m x = geom_proc m y)\" and \"m \\<le> Suc n\""], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>m.\n              m \\<le> Suc n \\<Longrightarrow> geom_proc m x = geom_proc m y;\n   ?m1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> x !! ?m1 = y !! ?m1\n  ?m1 \\<le> Suc (Suc n) \\<Longrightarrow> geom_proc ?m1 x = geom_proc ?m1 y\n  m \\<le> Suc n\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<And>m.\n                               m \\<le> Suc n \\<Longrightarrow>\n                               geom_proc m x = geom_proc m y;\n                    m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> x !! m = y !! m;\n        \\<And>m.\n           m \\<le> Suc (Suc n) \\<Longrightarrow>\n           geom_proc m x = geom_proc m y;\n        m \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> x !! m = y !! m", "show \"x !! m = y !! m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x !! m = y !! m", "proof (cases \"m \\<le> n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. m \\<le> n \\<Longrightarrow> x !! m = y !! m\n 2. \\<not> m \\<le> n \\<Longrightarrow> x !! m = y !! m", "case True"], ["proof (state)\nthis:\n  m \\<le> n\n\ngoal (2 subgoals):\n 1. m \\<le> n \\<Longrightarrow> x !! m = y !! m\n 2. \\<not> m \\<le> n \\<Longrightarrow> x !! m = y !! m", "thus ?thesis"], ["proof (prove)\nusing this:\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. x !! m = y !! m", "using fst scd"], ["proof (prove)\nusing this:\n  m \\<le> n\n  \\<lbrakk>\\<And>m.\n              m \\<le> Suc n \\<Longrightarrow> geom_proc m x = geom_proc m y;\n   ?m1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> x !! ?m1 = y !! ?m1\n  ?m1 \\<le> Suc (Suc n) \\<Longrightarrow> geom_proc ?m1 x = geom_proc ?m1 y\n\ngoal (1 subgoal):\n 1. x !! m = y !! m", "by simp"], ["proof (state)\nthis:\n  x !! m = y !! m\n\ngoal (1 subgoal):\n 1. \\<not> m \\<le> n \\<Longrightarrow> x !! m = y !! m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> m \\<le> n \\<Longrightarrow> x !! m = y !! m", "case False"], ["proof (state)\nthis:\n  \\<not> m \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> m \\<le> n \\<Longrightarrow> x !! m = y !! m", "hence \"m = Suc n\""], ["proof (prove)\nusing this:\n  \\<not> m \\<le> n\n\ngoal (1 subgoal):\n 1. m = Suc n", "using \\<open>m\\<le> Suc n\\<close>"], ["proof (prove)\nusing this:\n  \\<not> m \\<le> n\n  m \\<le> Suc n\n\ngoal (1 subgoal):\n 1. m = Suc n", "by simp"], ["proof (state)\nthis:\n  m = Suc n\n\ngoal (1 subgoal):\n 1. \\<not> m \\<le> n \\<Longrightarrow> x !! m = y !! m", "have \"geom_proc (Suc (Suc n)) x = geom_proc (Suc (Suc n)) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc (Suc n)) x = geom_proc (Suc (Suc n)) y", "using scd"], ["proof (prove)\nusing this:\n  ?m1 \\<le> Suc (Suc n) \\<Longrightarrow> geom_proc ?m1 x = geom_proc ?m1 y\n\ngoal (1 subgoal):\n 1. geom_proc (Suc (Suc n)) x = geom_proc (Suc (Suc n)) y", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc (Suc n)) x = geom_proc (Suc (Suc n)) y\n\ngoal (1 subgoal):\n 1. \\<not> m \\<le> n \\<Longrightarrow> x !! m = y !! m", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x !! m = y !! m", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. x !! m \\<noteq> y !! m \\<Longrightarrow> False", "assume \"x !! m \\<noteq> y !! m\""], ["proof (state)\nthis:\n  x !! m \\<noteq> y !! m\n\ngoal (1 subgoal):\n 1. x !! m \\<noteq> y !! m \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  x !! m \\<noteq> y !! m\n\ngoal (1 subgoal):\n 1. False", "proof (cases \"x !! m\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; x !! m\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  x !! m\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; x !! m\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "hence \"\\<not> y !! m\""], ["proof (prove)\nusing this:\n  x !! m\n\ngoal (1 subgoal):\n 1. \\<not> y !! m", "using \\<open>x !! m \\<noteq> y !! m\\<close>"], ["proof (prove)\nusing this:\n  x !! m\n  x !! m \\<noteq> y !! m\n\ngoal (1 subgoal):\n 1. \\<not> y !! m", "by simp"], ["proof (state)\nthis:\n  \\<not> y !! m\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; x !! m\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "have \"geom_proc (Suc (Suc n)) x = u * geom_proc (Suc n) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc (Suc n)) x = u * geom_proc (Suc n) x", "using geometric_process True\n          \\<open>m = Suc n\\<close>"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n  x !! m\n  m = Suc n\n\ngoal (1 subgoal):\n 1. geom_proc (Suc (Suc n)) x = u * geom_proc (Suc n) x", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc (Suc n)) x = u * geom_proc (Suc n) x\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; x !! m\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  geom_proc (Suc (Suc n)) x = u * geom_proc (Suc n) x\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; x !! m\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "have \"... = u * geom_proc (Suc n) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u * geom_proc (Suc n) x = u * geom_proc (Suc n) y", "using scd \\<open>m = Suc n\\<close>"], ["proof (prove)\nusing this:\n  ?m1 \\<le> Suc (Suc n) \\<Longrightarrow> geom_proc ?m1 x = geom_proc ?m1 y\n  m = Suc n\n\ngoal (1 subgoal):\n 1. u * geom_proc (Suc n) x = u * geom_proc (Suc n) y", "by simp"], ["proof (state)\nthis:\n  u * geom_proc (Suc n) x = u * geom_proc (Suc n) y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; x !! m\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  geom_proc (Suc (Suc n)) x = u * geom_proc (Suc n) y", "have \"geom_proc (Suc (Suc n)) x = u * geom_proc (Suc n) y\""], ["proof (prove)\nusing this:\n  geom_proc (Suc (Suc n)) x = u * geom_proc (Suc n) y\n\ngoal (1 subgoal):\n 1. geom_proc (Suc (Suc n)) x = u * geom_proc (Suc n) y", "."], ["proof (state)\nthis:\n  geom_proc (Suc (Suc n)) x = u * geom_proc (Suc n) y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; x !! m\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  geom_proc (Suc (Suc n)) x = u * geom_proc (Suc n) y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; x !! m\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "have \"geom_proc (Suc (Suc n)) y = d * geom_proc (Suc n) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc (Suc n)) y = d * geom_proc (Suc n) y", "using geometric_process\n          \\<open>m = Suc n\\<close> \\<open>\\<not> y !! m\\<close>"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n  m = Suc n\n  \\<not> y !! m\n\ngoal (1 subgoal):\n 1. geom_proc (Suc (Suc n)) y = d * geom_proc (Suc n) y", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc (Suc n)) y = d * geom_proc (Suc n) y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; x !! m\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  geom_proc (Suc (Suc n)) x = u * geom_proc (Suc n) y\n  geom_proc (Suc (Suc n)) y = d * geom_proc (Suc n) y", "have \"geom_proc (Suc (Suc n)) x \\<noteq> geom_proc (Suc (Suc n)) y\""], ["proof (prove)\nusing this:\n  geom_proc (Suc (Suc n)) x = u * geom_proc (Suc n) y\n  geom_proc (Suc (Suc n)) y = d * geom_proc (Suc n) y\n\ngoal (1 subgoal):\n 1. geom_proc (Suc (Suc n)) x \\<noteq> geom_proc (Suc (Suc n)) y", "by (metis S0_positive down_lt_up down_positive geom_rand_walk_strictly_positive less_irrefl mult_cancel_right)"], ["proof (state)\nthis:\n  geom_proc (Suc (Suc n)) x \\<noteq> geom_proc (Suc (Suc n)) y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; x !! m\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "thus ?thesis"], ["proof (prove)\nusing this:\n  geom_proc (Suc (Suc n)) x \\<noteq> geom_proc (Suc (Suc n)) y\n\ngoal (1 subgoal):\n 1. False", "using \\<open>geom_proc (Suc (Suc n)) x = geom_proc (Suc (Suc n)) y\\<close>"], ["proof (prove)\nusing this:\n  geom_proc (Suc (Suc n)) x \\<noteq> geom_proc (Suc (Suc n)) y\n  geom_proc (Suc (Suc n)) x = geom_proc (Suc (Suc n)) y\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> x !! m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "hence \"y !! m\""], ["proof (prove)\nusing this:\n  \\<not> x !! m\n\ngoal (1 subgoal):\n 1. y !! m", "using \\<open>x !! m \\<noteq> y !! m\\<close>"], ["proof (prove)\nusing this:\n  \\<not> x !! m\n  x !! m \\<noteq> y !! m\n\ngoal (1 subgoal):\n 1. y !! m", "by simp"], ["proof (state)\nthis:\n  y !! m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "have \"geom_proc (Suc (Suc n)) x = d * geom_proc (Suc n) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc (Suc n)) x = d * geom_proc (Suc n) x", "using geometric_process False\n          \\<open>m = Suc n\\<close>"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n  \\<not> x !! m\n  m = Suc n\n\ngoal (1 subgoal):\n 1. geom_proc (Suc (Suc n)) x = d * geom_proc (Suc n) x", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc (Suc n)) x = d * geom_proc (Suc n) x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  geom_proc (Suc (Suc n)) x = d * geom_proc (Suc n) x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "have \"... = d * geom_proc (Suc n) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d * geom_proc (Suc n) x = d * geom_proc (Suc n) y", "using scd \\<open>m = Suc n\\<close>"], ["proof (prove)\nusing this:\n  ?m1 \\<le> Suc (Suc n) \\<Longrightarrow> geom_proc ?m1 x = geom_proc ?m1 y\n  m = Suc n\n\ngoal (1 subgoal):\n 1. d * geom_proc (Suc n) x = d * geom_proc (Suc n) y", "by simp"], ["proof (state)\nthis:\n  d * geom_proc (Suc n) x = d * geom_proc (Suc n) y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  geom_proc (Suc (Suc n)) x = d * geom_proc (Suc n) y", "have \"geom_proc (Suc (Suc n)) x = d * geom_proc (Suc n) y\""], ["proof (prove)\nusing this:\n  geom_proc (Suc (Suc n)) x = d * geom_proc (Suc n) y\n\ngoal (1 subgoal):\n 1. geom_proc (Suc (Suc n)) x = d * geom_proc (Suc n) y", "."], ["proof (state)\nthis:\n  geom_proc (Suc (Suc n)) x = d * geom_proc (Suc n) y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  geom_proc (Suc (Suc n)) x = d * geom_proc (Suc n) y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "have \"geom_proc (Suc (Suc n)) y = u * geom_proc (Suc n) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc (Suc n)) y = u * geom_proc (Suc n) y", "using geometric_process\n          \\<open>m = Suc n\\<close> \\<open>y !! m\\<close>"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n  m = Suc n\n  y !! m\n\ngoal (1 subgoal):\n 1. geom_proc (Suc (Suc n)) y = u * geom_proc (Suc n) y", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc (Suc n)) y = u * geom_proc (Suc n) y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  geom_proc (Suc (Suc n)) x = d * geom_proc (Suc n) y\n  geom_proc (Suc (Suc n)) y = u * geom_proc (Suc n) y", "have \"geom_proc (Suc (Suc n)) x \\<noteq> geom_proc (Suc (Suc n)) y\""], ["proof (prove)\nusing this:\n  geom_proc (Suc (Suc n)) x = d * geom_proc (Suc n) y\n  geom_proc (Suc (Suc n)) y = u * geom_proc (Suc n) y\n\ngoal (1 subgoal):\n 1. geom_proc (Suc (Suc n)) x \\<noteq> geom_proc (Suc (Suc n)) y", "by (metis S0_positive down_lt_up down_positive geom_rand_walk_strictly_positive less_irrefl mult_cancel_right)"], ["proof (state)\nthis:\n  geom_proc (Suc (Suc n)) x \\<noteq> geom_proc (Suc (Suc n)) y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x !! m \\<noteq> y !! m; \\<not> x !! m\\<rbrakk>\n    \\<Longrightarrow> False", "thus ?thesis"], ["proof (prove)\nusing this:\n  geom_proc (Suc (Suc n)) x \\<noteq> geom_proc (Suc (Suc n)) y\n\ngoal (1 subgoal):\n 1. False", "using \\<open>geom_proc (Suc (Suc n)) x = geom_proc (Suc (Suc n)) y\\<close>"], ["proof (prove)\nusing this:\n  geom_proc (Suc (Suc n)) x \\<noteq> geom_proc (Suc (Suc n)) y\n  geom_proc (Suc (Suc n)) x = geom_proc (Suc (Suc n)) y\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x !! m = y !! m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x !! m = y !! m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market)  geom_proc_eq_pseudo_proj_True:\n  shows \"(\\<And>m. m \\<le>  n \\<Longrightarrow> geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    (pseudo_proj_True (n) x = pseudo_proj_True (n) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m \\<le> n \\<Longrightarrow>\n        geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    pseudo_proj_True n x = pseudo_proj_True n y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m \\<le> n \\<Longrightarrow>\n        geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    pseudo_proj_True n x = pseudo_proj_True n y", "assume a1: \"\\<And>m. m \\<le> n \\<Longrightarrow> geom_proc m x = geom_proc m y\""], ["proof (state)\nthis:\n  ?m1 \\<le> n \\<Longrightarrow> geom_proc ?m1 x = geom_proc ?m1 y\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m \\<le> n \\<Longrightarrow>\n        geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    pseudo_proj_True n x = pseudo_proj_True n y", "obtain nn :: \"bool stream \\<Rightarrow> bool stream \\<Rightarrow> nat \\<Rightarrow> nat\" where\n    \"\\<forall>x1 x2 x3. (\\<exists>v4<Suc (Suc x3). geom_proc v4 x2 \\<noteq> geom_proc v4 x1) = (nn x1 x2 x3 < Suc (Suc x3) \\<and> geom_proc (nn x1 x2 x3) x2 \\<noteq> geom_proc (nn x1 x2 x3) x1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>nn.\n        \\<forall>x1 x2 x3.\n           (\\<exists>v4<Suc (Suc x3).\n               geom_proc v4 x2 \\<noteq> geom_proc v4 x1) =\n           (nn x1 x2 x3 < Suc (Suc x3) \\<and>\n            geom_proc (nn x1 x2 x3) x2 \\<noteq>\n            geom_proc (nn x1 x2 x3) x1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  \\<forall>x1 x2 x3.\n     (\\<exists>v4<Suc (Suc x3). geom_proc v4 x2 \\<noteq> geom_proc v4 x1) =\n     (nn x1 x2 x3 < Suc (Suc x3) \\<and>\n      geom_proc (nn x1 x2 x3) x2 \\<noteq> geom_proc (nn x1 x2 x3) x1)\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m \\<le> n \\<Longrightarrow>\n        geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    pseudo_proj_True n x = pseudo_proj_True n y", "then"], ["proof (chain)\npicking this:\n  \\<forall>x1 x2 x3.\n     (\\<exists>v4<Suc (Suc x3). geom_proc v4 x2 \\<noteq> geom_proc v4 x1) =\n     (nn x1 x2 x3 < Suc (Suc x3) \\<and>\n      geom_proc (nn x1 x2 x3) x2 \\<noteq> geom_proc (nn x1 x2 x3) x1)", "have f2: \"\\<forall>n s sa na. (nn sa s n < Suc (Suc n) \\<and> geom_proc (nn sa s n) s \\<noteq> geom_proc (nn sa s n) sa \\<or> \\<not> na < Suc n) \\<or> s !! na = sa !! na\""], ["proof (prove)\nusing this:\n  \\<forall>x1 x2 x3.\n     (\\<exists>v4<Suc (Suc x3). geom_proc v4 x2 \\<noteq> geom_proc v4 x1) =\n     (nn x1 x2 x3 < Suc (Suc x3) \\<and>\n      geom_proc (nn x1 x2 x3) x2 \\<noteq> geom_proc (nn x1 x2 x3) x1)\n\ngoal (1 subgoal):\n 1. \\<forall>n s sa na.\n       (nn sa s n < Suc (Suc n) \\<and>\n        geom_proc (nn sa s n) s \\<noteq> geom_proc (nn sa s n) sa \\<or>\n        \\<not> na < Suc n) \\<or>\n       s !! na = sa !! na", "by (meson geom_proc_eq_snth less_Suc_eq_le)"], ["proof (state)\nthis:\n  \\<forall>n s sa na.\n     (nn sa s n < Suc (Suc n) \\<and>\n      geom_proc (nn sa s n) s \\<noteq> geom_proc (nn sa s n) sa \\<or>\n      \\<not> na < Suc n) \\<or>\n     s !! na = sa !! na\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m \\<le> n \\<Longrightarrow>\n        geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    pseudo_proj_True n x = pseudo_proj_True n y", "obtain nna :: \"bool stream \\<Rightarrow> bool stream \\<Rightarrow> nat \\<Rightarrow> nat\" where\n    f3: \"\\<forall>x0 x1 x2. (\\<exists>v3. Suc v3 < Suc x2 \\<and> x1 !! v3 \\<noteq> x0 !! v3) = (Suc (nna x0 x1 x2) < Suc x2 \\<and> x1 !! nna x0 x1 x2 \\<noteq> x0 !! nna x0 x1 x2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>nna.\n        \\<forall>x0 x1 x2.\n           (\\<exists>v3.\n               Suc v3 < Suc x2 \\<and> x1 !! v3 \\<noteq> x0 !! v3) =\n           (Suc (nna x0 x1 x2) < Suc x2 \\<and>\n            x1 !! nna x0 x1 x2 \\<noteq>\n            x0 !! nna x0 x1 x2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  \\<forall>x0 x1 x2.\n     (\\<exists>v3. Suc v3 < Suc x2 \\<and> x1 !! v3 \\<noteq> x0 !! v3) =\n     (Suc (nna x0 x1 x2) < Suc x2 \\<and>\n      x1 !! nna x0 x1 x2 \\<noteq> x0 !! nna x0 x1 x2)\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m \\<le> n \\<Longrightarrow>\n        geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    pseudo_proj_True n x = pseudo_proj_True n y", "obtain nnb :: \"nat \\<Rightarrow> nat\" where\n    f4: \"\\<forall>x0. (\\<exists>v2. x0 = Suc v2) = (x0 = Suc (nnb x0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>nnb.\n        \\<forall>x0.\n           (\\<exists>v2. x0 = Suc v2) =\n           (x0 = Suc (nnb x0)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  \\<forall>x0. (\\<exists>v2. x0 = Suc v2) = (x0 = Suc (nnb x0))\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m \\<le> n \\<Longrightarrow>\n        geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    pseudo_proj_True n x = pseudo_proj_True n y", "moreover"], ["proof (state)\nthis:\n  \\<forall>x0. (\\<exists>v2. x0 = Suc v2) = (x0 = Suc (nnb x0))\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m \\<le> n \\<Longrightarrow>\n        geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    pseudo_proj_True n x = pseudo_proj_True n y", "{"], ["proof (state)\nthis:\n  \\<forall>x0. (\\<exists>v2. x0 = Suc v2) = (x0 = Suc (nnb x0))\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m \\<le> n \\<Longrightarrow>\n        geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    pseudo_proj_True n x = pseudo_proj_True n y", "assume \"\\<not> nn y x (nnb n) < Suc (Suc (nnb n)) \\<or> geom_proc (nn y x (nnb n)) x = geom_proc (nn y x (nnb n)) y\""], ["proof (state)\nthis:\n  \\<not> nn y x (nnb n) < Suc (Suc (nnb n)) \\<or>\n  geom_proc (nn y x (nnb n)) x = geom_proc (nn y x (nnb n)) y\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m \\<le> n \\<Longrightarrow>\n        geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    pseudo_proj_True n x = pseudo_proj_True n y", "moreover"], ["proof (state)\nthis:\n  \\<not> nn y x (nnb n) < Suc (Suc (nnb n)) \\<or>\n  geom_proc (nn y x (nnb n)) x = geom_proc (nn y x (nnb n)) y\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m \\<le> n \\<Longrightarrow>\n        geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    pseudo_proj_True n x = pseudo_proj_True n y", "{"], ["proof (state)\nthis:\n  \\<not> nn y x (nnb n) < Suc (Suc (nnb n)) \\<or>\n  geom_proc (nn y x (nnb n)) x = geom_proc (nn y x (nnb n)) y\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m \\<le> n \\<Longrightarrow>\n        geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    pseudo_proj_True n x = pseudo_proj_True n y", "assume \"\\<not> nna y x n < Suc (nnb n)\""], ["proof (state)\nthis:\n  \\<not> nna y x n < Suc (nnb n)\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m \\<le> n \\<Longrightarrow>\n        geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    pseudo_proj_True n x = pseudo_proj_True n y", "then"], ["proof (chain)\npicking this:\n  \\<not> nna y x n < Suc (nnb n)", "have \"\\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n\""], ["proof (prove)\nusing this:\n  \\<not> nna y x n < Suc (nnb n)\n\ngoal (1 subgoal):\n 1. \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n", "using f4"], ["proof (prove)\nusing this:\n  \\<not> nna y x n < Suc (nnb n)\n  \\<forall>x0. (\\<exists>v2. x0 = Suc v2) = (x0 = Suc (nnb x0))\n\ngoal (1 subgoal):\n 1. \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n", "by (metis (no_types) Suc_le_D Suc_le_lessD less_Suc_eq_le)"], ["proof (state)\nthis:\n  \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m \\<le> n \\<Longrightarrow>\n        geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    pseudo_proj_True n x = pseudo_proj_True n y", "}"], ["proof (state)\nthis:\n  \\<not> nna y x n < Suc (nnb n) \\<Longrightarrow>\n  \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m \\<le> n \\<Longrightarrow>\n        geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    pseudo_proj_True n x = pseudo_proj_True n y", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> nn y x (nnb n) < Suc (Suc (nnb n)) \\<or>\n  geom_proc (nn y x (nnb n)) x = geom_proc (nn y x (nnb n)) y\n  \\<not> nna y x n < Suc (nnb n) \\<Longrightarrow>\n  \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n", "have \"pseudo_proj_True n x = pseudo_proj_True n y \\<or> \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n\""], ["proof (prove)\nusing this:\n  \\<not> nn y x (nnb n) < Suc (Suc (nnb n)) \\<or>\n  geom_proc (nn y x (nnb n)) x = geom_proc (nn y x (nnb n)) y\n  \\<not> nna y x n < Suc (nnb n) \\<Longrightarrow>\n  \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n x = pseudo_proj_True n y \\<or>\n    \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n", "using f2"], ["proof (prove)\nusing this:\n  \\<not> nn y x (nnb n) < Suc (Suc (nnb n)) \\<or>\n  geom_proc (nn y x (nnb n)) x = geom_proc (nn y x (nnb n)) y\n  \\<not> nna y x n < Suc (nnb n) \\<Longrightarrow>\n  \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n\n  \\<forall>n s sa na.\n     (nn sa s n < Suc (Suc n) \\<and>\n      geom_proc (nn sa s n) s \\<noteq> geom_proc (nn sa s n) sa \\<or>\n      \\<not> na < Suc n) \\<or>\n     s !! na = sa !! na\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n x = pseudo_proj_True n y \\<or>\n    \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n", "by meson"], ["proof (state)\nthis:\n  pseudo_proj_True n x = pseudo_proj_True n y \\<or>\n  \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m \\<le> n \\<Longrightarrow>\n        geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    pseudo_proj_True n x = pseudo_proj_True n y", "}"], ["proof (state)\nthis:\n  \\<not> nn y x (nnb n) < Suc (Suc (nnb n)) \\<or>\n  geom_proc (nn y x (nnb n)) x =\n  geom_proc (nn y x (nnb n)) y \\<Longrightarrow>\n  pseudo_proj_True n x = pseudo_proj_True n y \\<or>\n  \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m \\<le> n \\<Longrightarrow>\n        geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    pseudo_proj_True n x = pseudo_proj_True n y", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>x0. (\\<exists>v2. x0 = Suc v2) = (x0 = Suc (nnb x0))\n  \\<not> nn y x (nnb n) < Suc (Suc (nnb n)) \\<or>\n  geom_proc (nn y x (nnb n)) x =\n  geom_proc (nn y x (nnb n)) y \\<Longrightarrow>\n  pseudo_proj_True n x = pseudo_proj_True n y \\<or>\n  \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n", "have \"pseudo_proj_True n x = pseudo_proj_True n y \\<or> \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n\""], ["proof (prove)\nusing this:\n  \\<forall>x0. (\\<exists>v2. x0 = Suc v2) = (x0 = Suc (nnb x0))\n  \\<not> nn y x (nnb n) < Suc (Suc (nnb n)) \\<or>\n  geom_proc (nn y x (nnb n)) x =\n  geom_proc (nn y x (nnb n)) y \\<Longrightarrow>\n  pseudo_proj_True n x = pseudo_proj_True n y \\<or>\n  \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n x = pseudo_proj_True n y \\<or>\n    \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n", "using a1 Suc_le_D less_Suc_eq_le"], ["proof (prove)\nusing this:\n  \\<forall>x0. (\\<exists>v2. x0 = Suc v2) = (x0 = Suc (nnb x0))\n  \\<not> nn y x (nnb n) < Suc (Suc (nnb n)) \\<or>\n  geom_proc (nn y x (nnb n)) x =\n  geom_proc (nn y x (nnb n)) y \\<Longrightarrow>\n  pseudo_proj_True n x = pseudo_proj_True n y \\<or>\n  \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n\n  ?m1 \\<le> n \\<Longrightarrow> geom_proc ?m1 x = geom_proc ?m1 y\n  Suc ?n \\<le> ?m' \\<Longrightarrow> \\<exists>m. ?m' = Suc m\n  (?m < Suc ?n) = (?m \\<le> ?n)\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n x = pseudo_proj_True n y \\<or>\n    \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n", "by presburger"], ["proof (state)\nthis:\n  pseudo_proj_True n x = pseudo_proj_True n y \\<or>\n  \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m \\<le> n \\<Longrightarrow>\n        geom_proc m x = geom_proc m y) \\<Longrightarrow>\n    pseudo_proj_True n x = pseudo_proj_True n y", "then"], ["proof (chain)\npicking this:\n  pseudo_proj_True n x = pseudo_proj_True n y \\<or>\n  \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n", "show ?thesis"], ["proof (prove)\nusing this:\n  pseudo_proj_True n x = pseudo_proj_True n y \\<or>\n  \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n x = pseudo_proj_True n y", "using f3"], ["proof (prove)\nusing this:\n  pseudo_proj_True n x = pseudo_proj_True n y \\<or>\n  \\<not> Suc (nna y x n) < Suc n \\<or> x !! nna y x n = y !! nna y x n\n  \\<forall>x0 x1 x2.\n     (\\<exists>v3. Suc v3 < Suc x2 \\<and> x1 !! v3 \\<noteq> x0 !! v3) =\n     (Suc (nna x0 x1 x2) < Suc x2 \\<and>\n      x1 !! nna x0 x1 x2 \\<noteq> x0 !! nna x0 x1 x2)\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n x = pseudo_proj_True n y", "by (meson less_Suc_eq_le pseudo_proj_True_snth')"], ["proof (state)\nthis:\n  pseudo_proj_True n x = pseudo_proj_True n y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market)  proj_stoch_eq_pseudo_proj_True:\n  assumes \"proj_stoch_proc geom_proc m x = proj_stoch_proc geom_proc m y\"\n  shows \"pseudo_proj_True m x = pseudo_proj_True m y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True m x = pseudo_proj_True m y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudo_proj_True m x = pseudo_proj_True m y", "have \"\\<forall> k \\<le> m. geom_proc k x = geom_proc k y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>m. geom_proc k x = geom_proc k y", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k. k \\<le> m \\<Longrightarrow> geom_proc k x = geom_proc k y", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k. k \\<le> m \\<Longrightarrow> geom_proc k x = geom_proc k y", "assume \"k \\<le> m\""], ["proof (state)\nthis:\n  k \\<le> m\n\ngoal (1 subgoal):\n 1. \\<And>k. k \\<le> m \\<Longrightarrow> geom_proc k x = geom_proc k y", "thus \"geom_proc k x = geom_proc k y\""], ["proof (prove)\nusing this:\n  k \\<le> m\n\ngoal (1 subgoal):\n 1. geom_proc k x = geom_proc k y", "using proj_stoch_proc_eq_snth[of geom_proc m x y k] assms"], ["proof (prove)\nusing this:\n  k \\<le> m\n  \\<lbrakk>proj_stoch_proc geom_proc m x = proj_stoch_proc geom_proc m y;\n   k \\<le> m\\<rbrakk>\n  \\<Longrightarrow> geom_proc k x = geom_proc k y\n  proj_stoch_proc geom_proc m x = proj_stoch_proc geom_proc m y\n\ngoal (1 subgoal):\n 1. geom_proc k x = geom_proc k y", "by simp"], ["proof (state)\nthis:\n  geom_proc k x = geom_proc k y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>k\\<le>m. geom_proc k x = geom_proc k y\n\ngoal (1 subgoal):\n 1. pseudo_proj_True m x = pseudo_proj_True m y", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>m. geom_proc k x = geom_proc k y\n\ngoal (1 subgoal):\n 1. pseudo_proj_True m x = pseudo_proj_True m y", "using geom_proc_eq_pseudo_proj_True[of m x y]"], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>m. geom_proc k x = geom_proc k y\n  (\\<And>ma.\n      ma \\<le> m \\<Longrightarrow>\n      geom_proc ma x = geom_proc ma y) \\<Longrightarrow>\n  pseudo_proj_True m x = pseudo_proj_True m y\n\ngoal (1 subgoal):\n 1. pseudo_proj_True m x = pseudo_proj_True m y", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True m x = pseudo_proj_True m y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market_viable) rn_rev_price_cond_expect:\n  assumes \"N = bernoulli_stream q\"\nand \"0 <q\"\nand \"q < 1\"\nand \"der \\<in> borel_measurable (G matur)\"\nand \"Suc n \\<le> matur\"\nshows \"expl_cond_expect N (proj_stoch_proc geom_proc n) (rn_rev_price N der matur (matur - Suc n)) w=\n  (q * rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True n w)  +\n      (1 - q) * rn_rev_price N der matur (matur - Suc n) (pseudo_proj_False n w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n)\n     (rn_rev_price N der matur (matur - Suc n)) w =\n    q * rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True n w) +\n    (1 - q) *\n    rn_rev_price N der matur (matur - Suc n) (pseudo_proj_False n w)", "proof (rule infinite_cts_filtration.f_borel_Suc_expl_cond_expect)"], ["proof (state)\ngoal (8 subgoals):\n 1. infinite_cts_filtration q N ?F\n 2. rn_rev_price N der matur (matur - Suc n)\n    \\<in> borel_measurable (?F (Suc n))\n 3. proj_stoch_proc geom_proc n \\<in> ?F n \\<rightarrow>\\<^sub>M ?N\n 4. set_discriminating n (proj_stoch_proc geom_proc n) ?N\n 5. proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n    \\<in> sets (?F n)\n 6. \\<forall>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       rn_rev_price N der matur (matur - Suc n) y =\n       rn_rev_price N der matur (matur - Suc n) z\n 7. 0 < q\n 8. q < 1", "show \"infinite_cts_filtration q N nat_filtration\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_cts_filtration q N nat_filtration", "using  assms  pslt psgt\n    bernoulli_nat_filtration"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  der \\<in> borel_measurable (G matur)\n  Suc n \\<le> matur\n  p < 1\n  0 < p\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1; 0 < p; p < 1\\<rbrakk>\n  \\<Longrightarrow> infinite_cts_filtration ?q ?N nat_filtration\n\ngoal (1 subgoal):\n 1. infinite_cts_filtration q N nat_filtration", "by simp"], ["proof (state)\nthis:\n  infinite_cts_filtration q N nat_filtration\n\ngoal (7 subgoals):\n 1. rn_rev_price N der matur (matur - Suc n)\n    \\<in> borel_measurable (nat_filtration (Suc n))\n 2. proj_stoch_proc geom_proc n\n    \\<in> nat_filtration n \\<rightarrow>\\<^sub>M ?N\n 3. set_discriminating n (proj_stoch_proc geom_proc n) ?N\n 4. proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n    \\<in> sets (nat_filtration n)\n 5. \\<forall>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       rn_rev_price N der matur (matur - Suc n) y =\n       rn_rev_price N der matur (matur - Suc n) z\n 6. 0 < q\n 7. q < 1", "show \"rn_rev_price N der matur (matur - Suc n) \\<in> borel_measurable (nat_filtration (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rn_rev_price N der matur (matur - Suc n)\n    \\<in> borel_measurable (nat_filtration (Suc n))", "using rn_rev_price_rev_borel_adapt[of der matur N q \"Suc n\"]   assms\n      stock_filtration stoch_proc_subalg_nat_filt[of geom_proc] geom_rand_walk_borel_adapted"], ["proof (prove)\nusing this:\n  \\<lbrakk>der \\<in> borel_measurable (G matur); N = bernoulli_stream q;\n   0 < q; q < 1; Suc n \\<le> matur\\<rbrakk>\n  \\<Longrightarrow> rn_rev_price N der matur (Suc n)\n                    \\<in> borel_measurable (G (matur - Suc n))\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  der \\<in> borel_measurable (G matur)\n  Suc n \\<le> matur\n  G = stoch_proc_filt M geom_proc borel\n  borel_adapt_stoch_proc nat_filtration geom_proc \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M geom_proc borel ?n)\n  borel_adapt_stoch_proc nat_filtration geom_proc\n\ngoal (1 subgoal):\n 1. rn_rev_price N der matur (matur - Suc n)\n    \\<in> borel_measurable (nat_filtration (Suc n))", "by (metis add_diff_cancel_right' diff_le_self measurable_from_subalg\n        ordered_cancel_comm_monoid_diff_class.add_diff_inverse rn_rev_price_rev_borel_adapt)"], ["proof (state)\nthis:\n  rn_rev_price N der matur (matur - Suc n)\n  \\<in> borel_measurable (nat_filtration (Suc n))\n\ngoal (6 subgoals):\n 1. proj_stoch_proc geom_proc n\n    \\<in> nat_filtration n \\<rightarrow>\\<^sub>M ?N\n 2. set_discriminating n (proj_stoch_proc geom_proc n) ?N\n 3. proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n    \\<in> sets (nat_filtration n)\n 4. \\<forall>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       rn_rev_price N der matur (matur - Suc n) y =\n       rn_rev_price N der matur (matur - Suc n) z\n 5. 0 < q\n 6. q < 1", "show \"proj_stoch_proc geom_proc n \\<in> nat_filtration n \\<rightarrow>\\<^sub>M stream_space borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n\n    \\<in> nat_filtration n \\<rightarrow>\\<^sub>M stream_space borel", "using proj_stoch_adapted_if_adapted[of M nat_filtration geom_proc borel n]\n    pslt psgt bernoulli_nat_filtration[of M p] bernoulli geom_rand_walk_borel_adapted\n    nat_discrete_filtration"], ["proof (prove)\nusing this:\n  \\<lbrakk>Filtration.filtration M nat_filtration;\n   borel_adapt_stoch_proc nat_filtration geom_proc\\<rbrakk>\n  \\<Longrightarrow> proj_stoch_proc geom_proc n\n                    \\<in> nat_filtration n \\<rightarrow>\\<^sub>M\n                          stream_space borel\n  p < 1\n  0 < p\n  \\<lbrakk>M = bernoulli_stream p; 0 < p; p < 1; 0 < p; p < 1\\<rbrakk>\n  \\<Longrightarrow> infinite_cts_filtration p M nat_filtration\n  M = bernoulli_stream p\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  Filtration.filtration M nat_filtration\n\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n\n    \\<in> nat_filtration n \\<rightarrow>\\<^sub>M stream_space borel", "by blast"], ["proof (state)\nthis:\n  proj_stoch_proc geom_proc n\n  \\<in> nat_filtration n \\<rightarrow>\\<^sub>M stream_space borel\n\ngoal (5 subgoals):\n 1. set_discriminating n (proj_stoch_proc geom_proc n) (stream_space borel)\n 2. proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n    \\<in> sets (nat_filtration n)\n 3. \\<forall>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       rn_rev_price N der matur (matur - Suc n) y =\n       rn_rev_price N der matur (matur - Suc n) z\n 4. 0 < q\n 5. q < 1", "show \"set_discriminating n (proj_stoch_proc geom_proc n) (stream_space borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_discriminating n (proj_stoch_proc geom_proc n) (stream_space borel)", "using infinite_cts_filtration.proj_stoch_set_discriminating\n    pslt psgt bernoulli_nat_filtration[of M p] bernoulli geom_rand_walk_borel_adapted"], ["proof (prove)\nusing this:\n  \\<lbrakk>infinite_cts_filtration ?p ?M ?F;\n   borel_adapt_stoch_proc ?F ?X\\<rbrakk>\n  \\<Longrightarrow> set_discriminating ?n (proj_stoch_proc ?X ?n) ?N\n  p < 1\n  0 < p\n  \\<lbrakk>M = bernoulli_stream p; 0 < p; p < 1; 0 < p; p < 1\\<rbrakk>\n  \\<Longrightarrow> infinite_cts_filtration p M nat_filtration\n  M = bernoulli_stream p\n  borel_adapt_stoch_proc nat_filtration geom_proc\n\ngoal (1 subgoal):\n 1. set_discriminating n (proj_stoch_proc geom_proc n) (stream_space borel)", "by simp"], ["proof (state)\nthis:\n  set_discriminating n (proj_stoch_proc geom_proc n) (stream_space borel)\n\ngoal (4 subgoals):\n 1. proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n    \\<in> sets (nat_filtration n)\n 2. \\<forall>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       rn_rev_price N der matur (matur - Suc n) y =\n       rn_rev_price N der matur (matur - Suc n) z\n 3. 0 < q\n 4. q < 1", "show \"proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w} \\<in> sets (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n    \\<in> sets (nat_filtration n)", "using infinite_cts_filtration.proj_stoch_singleton_set\n    pslt psgt bernoulli_nat_filtration[of M p] bernoulli geom_rand_walk_borel_adapted"], ["proof (prove)\nusing this:\n  \\<lbrakk>infinite_cts_filtration ?p ?M ?F;\n   borel_adapt_stoch_proc ?F ?X\\<rbrakk>\n  \\<Longrightarrow> proj_stoch_proc ?X ?n -` {proj_stoch_proc ?X ?n ?w}\n                    \\<in> sets (?F ?n)\n  p < 1\n  0 < p\n  \\<lbrakk>M = bernoulli_stream p; 0 < p; p < 1; 0 < p; p < 1\\<rbrakk>\n  \\<Longrightarrow> infinite_cts_filtration p M nat_filtration\n  M = bernoulli_stream p\n  borel_adapt_stoch_proc nat_filtration geom_proc\n\ngoal (1 subgoal):\n 1. proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n    \\<in> sets (nat_filtration n)", "by simp"], ["proof (state)\nthis:\n  proj_stoch_proc geom_proc n -` {proj_stoch_proc geom_proc n w}\n  \\<in> sets (nat_filtration n)\n\ngoal (3 subgoals):\n 1. \\<forall>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       rn_rev_price N der matur (matur - Suc n) y =\n       rn_rev_price N der matur (matur - Suc n) z\n 2. 0 < q\n 3. q < 1", "show \"\\<forall>y z. proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and> y !! n = z !! n \\<longrightarrow>\n    rn_rev_price N der matur (matur - Suc n) y = rn_rev_price N der matur (matur - Suc n) z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       rn_rev_price N der matur (matur - Suc n) y =\n       rn_rev_price N der matur (matur - Suc n) z", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       rn_rev_price N der matur (matur - Suc n) y =\n       rn_rev_price N der matur (matur - Suc n) z", "fix y z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       rn_rev_price N der matur (matur - Suc n) y =\n       rn_rev_price N der matur (matur - Suc n) z", "assume as:\"proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and> y !! n = z !! n\""], ["proof (state)\nthis:\n  proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n  y !! n = z !! n\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       rn_rev_price N der matur (matur - Suc n) y =\n       rn_rev_price N der matur (matur - Suc n) z", "hence \"pseudo_proj_True n y = pseudo_proj_True n z\""], ["proof (prove)\nusing this:\n  proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n  y !! n = z !! n\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n y = pseudo_proj_True n z", "using proj_stoch_eq_pseudo_proj_True[of n y z]"], ["proof (prove)\nusing this:\n  proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n  y !! n = z !! n\n  proj_stoch_proc geom_proc n y =\n  proj_stoch_proc geom_proc n z \\<Longrightarrow>\n  pseudo_proj_True n y = pseudo_proj_True n z\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n y = pseudo_proj_True n z", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True n y = pseudo_proj_True n z\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       rn_rev_price N der matur (matur - Suc n) y =\n       rn_rev_price N der matur (matur - Suc n) z", "moreover"], ["proof (state)\nthis:\n  pseudo_proj_True n y = pseudo_proj_True n z\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       rn_rev_price N der matur (matur - Suc n) y =\n       rn_rev_price N der matur (matur - Suc n) z", "have \"snth y n = snth z n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y !! n = z !! n", "using as"], ["proof (prove)\nusing this:\n  proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n  y !! n = z !! n\n\ngoal (1 subgoal):\n 1. y !! n = z !! n", "by simp"], ["proof (state)\nthis:\n  y !! n = z !! n\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       rn_rev_price N der matur (matur - Suc n) y =\n       rn_rev_price N der matur (matur - Suc n) z", "ultimately"], ["proof (chain)\npicking this:\n  pseudo_proj_True n y = pseudo_proj_True n z\n  y !! n = z !! n", "have \"pseudo_proj_True (Suc n) y = pseudo_proj_True (Suc n) z\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n y = pseudo_proj_True n z\n  y !! n = z !! n\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) y = pseudo_proj_True (Suc n) z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>pseudo_proj_True n y = pseudo_proj_True n z;\n     y !! n = z !! n\\<rbrakk>\n    \\<Longrightarrow> pseudo_proj_True (Suc n) y =\n                      pseudo_proj_True (Suc n) z", "have f1: \"\\<forall>n s sa. (\\<exists>na. Suc na \\<le> n \\<and> s !! na \\<noteq> sa !! na) \\<or> pseudo_proj_True n s = pseudo_proj_True n sa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s sa.\n       (\\<exists>na. Suc na \\<le> n \\<and> s !! na \\<noteq> sa !! na) \\<or>\n       pseudo_proj_True n s = pseudo_proj_True n sa", "by (meson pseudo_proj_True_snth')"], ["proof (state)\nthis:\n  \\<forall>n s sa.\n     (\\<exists>na. Suc na \\<le> n \\<and> s !! na \\<noteq> sa !! na) \\<or>\n     pseudo_proj_True n s = pseudo_proj_True n sa\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pseudo_proj_True n y = pseudo_proj_True n z;\n     y !! n = z !! n\\<rbrakk>\n    \\<Longrightarrow> pseudo_proj_True (Suc n) y =\n                      pseudo_proj_True (Suc n) z", "obtain nn :: \"bool stream \\<Rightarrow> bool stream \\<Rightarrow> nat \\<Rightarrow> nat\" where\n        \"\\<forall>x0 x1 x2. (\\<exists>v3. Suc v3 \\<le> x2 \\<and> x1 !! v3 \\<noteq> x0 !! v3) = (Suc (nn x0 x1 x2) \\<le> x2 \\<and> x1 !! nn x0 x1 x2 \\<noteq> x0 !! nn x0 x1 x2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>nn.\n        \\<forall>x0 x1 x2.\n           (\\<exists>v3.\n               Suc v3 \\<le> x2 \\<and> x1 !! v3 \\<noteq> x0 !! v3) =\n           (Suc (nn x0 x1 x2) \\<le> x2 \\<and>\n            x1 !! nn x0 x1 x2 \\<noteq> x0 !! nn x0 x1 x2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  \\<forall>x0 x1 x2.\n     (\\<exists>v3. Suc v3 \\<le> x2 \\<and> x1 !! v3 \\<noteq> x0 !! v3) =\n     (Suc (nn x0 x1 x2) \\<le> x2 \\<and>\n      x1 !! nn x0 x1 x2 \\<noteq> x0 !! nn x0 x1 x2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pseudo_proj_True n y = pseudo_proj_True n z;\n     y !! n = z !! n\\<rbrakk>\n    \\<Longrightarrow> pseudo_proj_True (Suc n) y =\n                      pseudo_proj_True (Suc n) z", "then"], ["proof (chain)\npicking this:\n  \\<forall>x0 x1 x2.\n     (\\<exists>v3. Suc v3 \\<le> x2 \\<and> x1 !! v3 \\<noteq> x0 !! v3) =\n     (Suc (nn x0 x1 x2) \\<le> x2 \\<and>\n      x1 !! nn x0 x1 x2 \\<noteq> x0 !! nn x0 x1 x2)", "have f2: \"\\<forall>n s sa. Suc (nn sa s n) \\<le> n \\<and> s !! nn sa s n \\<noteq> sa !! nn sa s n \\<or> pseudo_proj_True n s = pseudo_proj_True n sa\""], ["proof (prove)\nusing this:\n  \\<forall>x0 x1 x2.\n     (\\<exists>v3. Suc v3 \\<le> x2 \\<and> x1 !! v3 \\<noteq> x0 !! v3) =\n     (Suc (nn x0 x1 x2) \\<le> x2 \\<and>\n      x1 !! nn x0 x1 x2 \\<noteq> x0 !! nn x0 x1 x2)\n\ngoal (1 subgoal):\n 1. \\<forall>n s sa.\n       Suc (nn sa s n) \\<le> n \\<and>\n       s !! nn sa s n \\<noteq> sa !! nn sa s n \\<or>\n       pseudo_proj_True n s = pseudo_proj_True n sa", "using f1"], ["proof (prove)\nusing this:\n  \\<forall>x0 x1 x2.\n     (\\<exists>v3. Suc v3 \\<le> x2 \\<and> x1 !! v3 \\<noteq> x0 !! v3) =\n     (Suc (nn x0 x1 x2) \\<le> x2 \\<and>\n      x1 !! nn x0 x1 x2 \\<noteq> x0 !! nn x0 x1 x2)\n  \\<forall>n s sa.\n     (\\<exists>na. Suc na \\<le> n \\<and> s !! na \\<noteq> sa !! na) \\<or>\n     pseudo_proj_True n s = pseudo_proj_True n sa\n\ngoal (1 subgoal):\n 1. \\<forall>n s sa.\n       Suc (nn sa s n) \\<le> n \\<and>\n       s !! nn sa s n \\<noteq> sa !! nn sa s n \\<or>\n       pseudo_proj_True n s = pseudo_proj_True n sa", "by presburger"], ["proof (state)\nthis:\n  \\<forall>n s sa.\n     Suc (nn sa s n) \\<le> n \\<and>\n     s !! nn sa s n \\<noteq> sa !! nn sa s n \\<or>\n     pseudo_proj_True n s = pseudo_proj_True n sa\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pseudo_proj_True n y = pseudo_proj_True n z;\n     y !! n = z !! n\\<rbrakk>\n    \\<Longrightarrow> pseudo_proj_True (Suc n) y =\n                      pseudo_proj_True (Suc n) z", "have f3: \"stake n y = stake n (pseudo_proj_True n z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake n y = stake n (pseudo_proj_True n z)", "by (metis \\<open>pseudo_proj_True n y = pseudo_proj_True n z\\<close> pseudo_proj_True_stake)"], ["proof (state)\nthis:\n  stake n y = stake n (pseudo_proj_True n z)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pseudo_proj_True n y = pseudo_proj_True n z;\n     y !! n = z !! n\\<rbrakk>\n    \\<Longrightarrow> pseudo_proj_True (Suc n) y =\n                      pseudo_proj_True (Suc n) z", "{"], ["proof (state)\nthis:\n  stake n y = stake n (pseudo_proj_True n z)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pseudo_proj_True n y = pseudo_proj_True n z;\n     y !! n = z !! n\\<rbrakk>\n    \\<Longrightarrow> pseudo_proj_True (Suc n) y =\n                      pseudo_proj_True (Suc n) z", "assume \"stake (Suc n) z \\<noteq> stake (Suc n) (pseudo_proj_True (Suc n) y)\""], ["proof (state)\nthis:\n  stake (Suc n) z \\<noteq> stake (Suc n) (pseudo_proj_True (Suc n) y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pseudo_proj_True n y = pseudo_proj_True n z;\n     y !! n = z !! n\\<rbrakk>\n    \\<Longrightarrow> pseudo_proj_True (Suc n) y =\n                      pseudo_proj_True (Suc n) z", "then"], ["proof (chain)\npicking this:\n  stake (Suc n) z \\<noteq> stake (Suc n) (pseudo_proj_True (Suc n) y)", "have \"stake n y @ [y !! n] \\<noteq> stake n z @ [z !! n]\""], ["proof (prove)\nusing this:\n  stake (Suc n) z \\<noteq> stake (Suc n) (pseudo_proj_True (Suc n) y)\n\ngoal (1 subgoal):\n 1. stake n y @ [y !! n] \\<noteq> stake n z @ [z !! n]", "by (metis (no_types) pseudo_proj_True_stake stake_Suc)"], ["proof (state)\nthis:\n  stake n y @ [y !! n] \\<noteq> stake n z @ [z !! n]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pseudo_proj_True n y = pseudo_proj_True n z;\n     y !! n = z !! n\\<rbrakk>\n    \\<Longrightarrow> pseudo_proj_True (Suc n) y =\n                      pseudo_proj_True (Suc n) z", "then"], ["proof (chain)\npicking this:\n  stake n y @ [y !! n] \\<noteq> stake n z @ [z !! n]", "have \"stake (Suc n) z = stake (Suc n) (pseudo_proj_True (Suc n) y)\""], ["proof (prove)\nusing this:\n  stake n y @ [y !! n] \\<noteq> stake n z @ [z !! n]\n\ngoal (1 subgoal):\n 1. stake (Suc n) z = stake (Suc n) (pseudo_proj_True (Suc n) y)", "using f3"], ["proof (prove)\nusing this:\n  stake n y @ [y !! n] \\<noteq> stake n z @ [z !! n]\n  stake n y = stake n (pseudo_proj_True n z)\n\ngoal (1 subgoal):\n 1. stake (Suc n) z = stake (Suc n) (pseudo_proj_True (Suc n) y)", "by (simp add: \\<open>y !! n = z !! n\\<close> pseudo_proj_True_stake)"], ["proof (state)\nthis:\n  stake (Suc n) z = stake (Suc n) (pseudo_proj_True (Suc n) y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pseudo_proj_True n y = pseudo_proj_True n z;\n     y !! n = z !! n\\<rbrakk>\n    \\<Longrightarrow> pseudo_proj_True (Suc n) y =\n                      pseudo_proj_True (Suc n) z", "}"], ["proof (state)\nthis:\n  stake (Suc n) z \\<noteq>\n  stake (Suc n) (pseudo_proj_True (Suc n) y) \\<Longrightarrow>\n  stake (Suc n) z = stake (Suc n) (pseudo_proj_True (Suc n) y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pseudo_proj_True n y = pseudo_proj_True n z;\n     y !! n = z !! n\\<rbrakk>\n    \\<Longrightarrow> pseudo_proj_True (Suc n) y =\n                      pseudo_proj_True (Suc n) z", "then"], ["proof (chain)\npicking this:\n  stake (Suc n) z \\<noteq>\n  stake (Suc n) (pseudo_proj_True (Suc n) y) \\<Longrightarrow>\n  stake (Suc n) z = stake (Suc n) (pseudo_proj_True (Suc n) y)", "have \"\\<not> Suc (nn z y (Suc n)) \\<le> Suc n \\<or> y !! nn z y (Suc n) = z !! nn z y (Suc n)\""], ["proof (prove)\nusing this:\n  stake (Suc n) z \\<noteq>\n  stake (Suc n) (pseudo_proj_True (Suc n) y) \\<Longrightarrow>\n  stake (Suc n) z = stake (Suc n) (pseudo_proj_True (Suc n) y)\n\ngoal (1 subgoal):\n 1. \\<not> Suc (nn z y (Suc n)) \\<le> Suc n \\<or>\n    y !! nn z y (Suc n) = z !! nn z y (Suc n)", "by (metis (no_types) pseudo_proj_True_stake stake_snth)"], ["proof (state)\nthis:\n  \\<not> Suc (nn z y (Suc n)) \\<le> Suc n \\<or>\n  y !! nn z y (Suc n) = z !! nn z y (Suc n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pseudo_proj_True n y = pseudo_proj_True n z;\n     y !! n = z !! n\\<rbrakk>\n    \\<Longrightarrow> pseudo_proj_True (Suc n) y =\n                      pseudo_proj_True (Suc n) z", "then"], ["proof (chain)\npicking this:\n  \\<not> Suc (nn z y (Suc n)) \\<le> Suc n \\<or>\n  y !! nn z y (Suc n) = z !! nn z y (Suc n)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> Suc (nn z y (Suc n)) \\<le> Suc n \\<or>\n  y !! nn z y (Suc n) = z !! nn z y (Suc n)\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) y = pseudo_proj_True (Suc n) z", "using f2"], ["proof (prove)\nusing this:\n  \\<not> Suc (nn z y (Suc n)) \\<le> Suc n \\<or>\n  y !! nn z y (Suc n) = z !! nn z y (Suc n)\n  \\<forall>n s sa.\n     Suc (nn sa s n) \\<le> n \\<and>\n     s !! nn sa s n \\<noteq> sa !! nn sa s n \\<or>\n     pseudo_proj_True n s = pseudo_proj_True n sa\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) y = pseudo_proj_True (Suc n) z", "by blast"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) y = pseudo_proj_True (Suc n) z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) y = pseudo_proj_True (Suc n) z\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       rn_rev_price N der matur (matur - Suc n) y =\n       rn_rev_price N der matur (matur - Suc n) z", "have \"rn_rev_price N der matur (matur - Suc n) y =\n      rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True (Suc n) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rn_rev_price N der matur (matur - Suc n) y =\n    rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True (Suc n) y)", "using nat_filtration_info[of \"rn_rev_price N der matur (matur - Suc n)\" \"Suc n\"]\n      rn_rev_price_rev_borel_adapt[of der matur N q]"], ["proof (prove)\nusing this:\n  rn_rev_price N der matur (matur - Suc n)\n  \\<in> borel_measurable (nat_filtration (Suc n)) \\<Longrightarrow>\n  rn_rev_price N der matur (matur - Suc n) \\<circ>\n  pseudo_proj_True (Suc n) =\n  rn_rev_price N der matur (matur - Suc n)\n  \\<lbrakk>der \\<in> borel_measurable (G matur); N = bernoulli_stream q;\n   0 < q; q < 1; ?n \\<le> matur\\<rbrakk>\n  \\<Longrightarrow> rn_rev_price N der matur ?n\n                    \\<in> borel_measurable (G (matur - ?n))\n\ngoal (1 subgoal):\n 1. rn_rev_price N der matur (matur - Suc n) y =\n    rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True (Suc n) y)", "by (metis \\<open>rn_rev_price N der matur (matur - Suc n) \\<in> borel_measurable (nat_filtration (Suc n))\\<close> o_apply)"], ["proof (state)\nthis:\n  rn_rev_price N der matur (matur - Suc n) y =\n  rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True (Suc n) y)\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       rn_rev_price N der matur (matur - Suc n) y =\n       rn_rev_price N der matur (matur - Suc n) z", "also"], ["proof (state)\nthis:\n  rn_rev_price N der matur (matur - Suc n) y =\n  rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True (Suc n) y)\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       rn_rev_price N der matur (matur - Suc n) y =\n       rn_rev_price N der matur (matur - Suc n) z", "have \"... = rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True (Suc n) z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True (Suc n) y) =\n    rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True (Suc n) z)", "using \\<open>pseudo_proj_True (Suc n) y = pseudo_proj_True (Suc n) z\\<close>"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) y = pseudo_proj_True (Suc n) z\n\ngoal (1 subgoal):\n 1. rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True (Suc n) y) =\n    rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True (Suc n) z)", "by simp"], ["proof (state)\nthis:\n  rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True (Suc n) y) =\n  rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True (Suc n) z)\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       rn_rev_price N der matur (matur - Suc n) y =\n       rn_rev_price N der matur (matur - Suc n) z", "also"], ["proof (state)\nthis:\n  rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True (Suc n) y) =\n  rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True (Suc n) z)\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       rn_rev_price N der matur (matur - Suc n) y =\n       rn_rev_price N der matur (matur - Suc n) z", "have \"... = rn_rev_price N der matur (matur - Suc n) z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True (Suc n) z) =\n    rn_rev_price N der matur (matur - Suc n) z", "using nat_filtration_info[of \"rn_rev_price N der matur (matur - Suc n)\" \"Suc n\"]\n      rn_rev_price_rev_borel_adapt[of der matur N q]"], ["proof (prove)\nusing this:\n  rn_rev_price N der matur (matur - Suc n)\n  \\<in> borel_measurable (nat_filtration (Suc n)) \\<Longrightarrow>\n  rn_rev_price N der matur (matur - Suc n) \\<circ>\n  pseudo_proj_True (Suc n) =\n  rn_rev_price N der matur (matur - Suc n)\n  \\<lbrakk>der \\<in> borel_measurable (G matur); N = bernoulli_stream q;\n   0 < q; q < 1; ?n \\<le> matur\\<rbrakk>\n  \\<Longrightarrow> rn_rev_price N der matur ?n\n                    \\<in> borel_measurable (G (matur - ?n))\n\ngoal (1 subgoal):\n 1. rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True (Suc n) z) =\n    rn_rev_price N der matur (matur - Suc n) z", "by (metis \\<open>rn_rev_price N der matur (matur - Suc n) \\<in> borel_measurable (nat_filtration (Suc n))\\<close> o_apply)"], ["proof (state)\nthis:\n  rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True (Suc n) z) =\n  rn_rev_price N der matur (matur - Suc n) z\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       rn_rev_price N der matur (matur - Suc n) y =\n       rn_rev_price N der matur (matur - Suc n) z", "finally"], ["proof (chain)\npicking this:\n  rn_rev_price N der matur (matur - Suc n) y =\n  rn_rev_price N der matur (matur - Suc n) z", "show \"rn_rev_price N der matur (matur - Suc n) y = rn_rev_price N der matur (matur - Suc n) z\""], ["proof (prove)\nusing this:\n  rn_rev_price N der matur (matur - Suc n) y =\n  rn_rev_price N der matur (matur - Suc n) z\n\ngoal (1 subgoal):\n 1. rn_rev_price N der matur (matur - Suc n) y =\n    rn_rev_price N der matur (matur - Suc n) z", "."], ["proof (state)\nthis:\n  rn_rev_price N der matur (matur - Suc n) y =\n  rn_rev_price N der matur (matur - Suc n) z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>y z.\n     proj_stoch_proc geom_proc n y = proj_stoch_proc geom_proc n z \\<and>\n     y !! n = z !! n \\<longrightarrow>\n     rn_rev_price N der matur (matur - Suc n) y =\n     rn_rev_price N der matur (matur - Suc n) z\n\ngoal (2 subgoals):\n 1. 0 < q\n 2. q < 1", "show \"0 < q\" and \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  der \\<in> borel_measurable (G matur)\n  Suc n \\<le> matur\n\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "by auto"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market_viable) rn_price_eq_ind:\n  assumes \"N = bernoulli_stream q\"\nand \"n < matur\"\nand \"0 < q\"\nand \"q < 1\"\nand \"der \\<in> borel_measurable (G matur)\"\nshows \"(1+r) * rn_price N der matur n w = q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "define V where \"V = rn_price N der matur\""], ["proof (state)\nthis:\n  V = rn_price N der matur\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "let ?m = \"matur - Suc n\""], ["proof (state)\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "have \"matur -n = Suc ?m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matur - n = Suc (matur - Suc n)", "by (simp add: assms Suc_diff_Suc Suc_le_lessD)"], ["proof (state)\nthis:\n  matur - n = Suc (matur - Suc n)\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "have \"(1+r) * V n w = (1+r) * rn_price_ind N der matur n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * V n w = (1 + r) * rn_price_ind N der matur n w", "using rn_price_eq assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1;\n   ?der \\<in> borel_measurable (G ?matur); ?n \\<le> ?matur\\<rbrakk>\n  \\<Longrightarrow> rn_price ?N ?der ?matur ?n ?w =\n                    rn_price_ind ?N ?der ?matur ?n ?w\n  N = bernoulli_stream q\n  n < matur\n  0 < q\n  q < 1\n  der \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. (1 + r) * V n w = (1 + r) * rn_price_ind N der matur n w", "unfolding V_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1;\n   ?der \\<in> borel_measurable (G ?matur); ?n \\<le> ?matur\\<rbrakk>\n  \\<Longrightarrow> rn_price ?N ?der ?matur ?n ?w =\n                    rn_price_ind ?N ?der ?matur ?n ?w\n  N = bernoulli_stream q\n  n < matur\n  0 < q\n  q < 1\n  der \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    (1 + r) * rn_price_ind N der matur n w", "by simp"], ["proof (state)\nthis:\n  (1 + r) * V n w = (1 + r) * rn_price_ind N der matur n w\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "also"], ["proof (state)\nthis:\n  (1 + r) * V n w = (1 + r) * rn_price_ind N der matur n w\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "have \"... = (1+r) * rn_rev_price N der matur (Suc ?m) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * rn_price_ind N der matur n w =\n    (1 + r) * rn_rev_price N der matur (Suc (matur - Suc n)) w", "using \\<open>matur -n = Suc ?m\\<close>"], ["proof (prove)\nusing this:\n  matur - n = Suc (matur - Suc n)\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price_ind N der matur n w =\n    (1 + r) * rn_rev_price N der matur (Suc (matur - Suc n)) w", "unfolding rn_price_ind_def"], ["proof (prove)\nusing this:\n  matur - n = Suc (matur - Suc n)\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_rev_price N der matur (matur - n) w =\n    (1 + r) * rn_rev_price N der matur (Suc (matur - Suc n)) w", "by simp"], ["proof (state)\nthis:\n  (1 + r) * rn_price_ind N der matur n w =\n  (1 + r) * rn_rev_price N der matur (Suc (matur - Suc n)) w\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "also"], ["proof (state)\nthis:\n  (1 + r) * rn_price_ind N der matur n w =\n  (1 + r) * rn_rev_price N der matur (Suc (matur - Suc n)) w\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "have \"... = (1+r) * discount_factor r (Suc 0) w *\n                    expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc ?m)) (rn_rev_price N der matur ?m) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * rn_rev_price N der matur (Suc (matur - Suc n)) w =\n    (1 + r) * discount_factor r (Suc 0) w *\n    expl_cond_expect N\n     (proj_stoch_proc geom_proc (matur - Suc (matur - Suc n)))\n     (rn_rev_price N der matur (matur - Suc n)) w", "by simp"], ["proof (state)\nthis:\n  (1 + r) * rn_rev_price N der matur (Suc (matur - Suc n)) w =\n  (1 + r) * discount_factor r (Suc 0) w *\n  expl_cond_expect N\n   (proj_stoch_proc geom_proc (matur - Suc (matur - Suc n)))\n   (rn_rev_price N der matur (matur - Suc n)) w\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "also"], ["proof (state)\nthis:\n  (1 + r) * rn_rev_price N der matur (Suc (matur - Suc n)) w =\n  (1 + r) * discount_factor r (Suc 0) w *\n  expl_cond_expect N\n   (proj_stoch_proc geom_proc (matur - Suc (matur - Suc n)))\n   (rn_rev_price N der matur (matur - Suc n)) w\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "have \"... = expl_cond_expect N (proj_stoch_proc geom_proc (matur - Suc ?m)) (rn_rev_price N der matur ?m) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * discount_factor r (Suc 0) w *\n    expl_cond_expect N\n     (proj_stoch_proc geom_proc (matur - Suc (matur - Suc n)))\n     (rn_rev_price N der matur (matur - Suc n)) w =\n    expl_cond_expect N\n     (proj_stoch_proc geom_proc (matur - Suc (matur - Suc n)))\n     (rn_rev_price N der matur (matur - Suc n)) w", "unfolding discount_factor_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * inverse (disc_rfr_proc r (Suc 0) w) *\n    expl_cond_expect N\n     (proj_stoch_proc geom_proc (matur - Suc (matur - Suc n)))\n     (rn_rev_price N der matur (matur - Suc n)) w =\n    expl_cond_expect N\n     (proj_stoch_proc geom_proc (matur - Suc (matur - Suc n)))\n     (rn_rev_price N der matur (matur - Suc n)) w", "using acceptable_rate"], ["proof (prove)\nusing this:\n  - 1 < r\n\ngoal (1 subgoal):\n 1. (1 + r) * inverse (disc_rfr_proc r (Suc 0) w) *\n    expl_cond_expect N\n     (proj_stoch_proc geom_proc (matur - Suc (matur - Suc n)))\n     (rn_rev_price N der matur (matur - Suc n)) w =\n    expl_cond_expect N\n     (proj_stoch_proc geom_proc (matur - Suc (matur - Suc n)))\n     (rn_rev_price N der matur (matur - Suc n)) w", "by auto"], ["proof (state)\nthis:\n  (1 + r) * discount_factor r (Suc 0) w *\n  expl_cond_expect N\n   (proj_stoch_proc geom_proc (matur - Suc (matur - Suc n)))\n   (rn_rev_price N der matur (matur - Suc n)) w =\n  expl_cond_expect N\n   (proj_stoch_proc geom_proc (matur - Suc (matur - Suc n)))\n   (rn_rev_price N der matur (matur - Suc n)) w\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "also"], ["proof (state)\nthis:\n  (1 + r) * discount_factor r (Suc 0) w *\n  expl_cond_expect N\n   (proj_stoch_proc geom_proc (matur - Suc (matur - Suc n)))\n   (rn_rev_price N der matur (matur - Suc n)) w =\n  expl_cond_expect N\n   (proj_stoch_proc geom_proc (matur - Suc (matur - Suc n)))\n   (rn_rev_price N der matur (matur - Suc n)) w\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "have \"... = expl_cond_expect N (proj_stoch_proc geom_proc n) (rn_rev_price N der matur ?m) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expl_cond_expect N\n     (proj_stoch_proc geom_proc (matur - Suc (matur - Suc n)))\n     (rn_rev_price N der matur (matur - Suc n)) w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n)\n     (rn_rev_price N der matur (matur - Suc n)) w", "using \\<open>matur -n = Suc ?m\\<close>"], ["proof (prove)\nusing this:\n  matur - n = Suc (matur - Suc n)\n\ngoal (1 subgoal):\n 1. expl_cond_expect N\n     (proj_stoch_proc geom_proc (matur - Suc (matur - Suc n)))\n     (rn_rev_price N der matur (matur - Suc n)) w =\n    expl_cond_expect N (proj_stoch_proc geom_proc n)\n     (rn_rev_price N der matur (matur - Suc n)) w", "by simp"], ["proof (state)\nthis:\n  expl_cond_expect N\n   (proj_stoch_proc geom_proc (matur - Suc (matur - Suc n)))\n   (rn_rev_price N der matur (matur - Suc n)) w =\n  expl_cond_expect N (proj_stoch_proc geom_proc n)\n   (rn_rev_price N der matur (matur - Suc n)) w\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "also"], ["proof (state)\nthis:\n  expl_cond_expect N\n   (proj_stoch_proc geom_proc (matur - Suc (matur - Suc n)))\n   (rn_rev_price N der matur (matur - Suc n)) w =\n  expl_cond_expect N (proj_stoch_proc geom_proc n)\n   (rn_rev_price N der matur (matur - Suc n)) w\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "have \"... = (q * rn_rev_price N der matur ?m (pseudo_proj_True n w)  +\n    (1 - q) * rn_rev_price N der matur ?m (pseudo_proj_False n w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n)\n     (rn_rev_price N der matur (matur - Suc n)) w =\n    q * rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True n w) +\n    (1 - q) *\n    rn_rev_price N der matur (matur - Suc n) (pseudo_proj_False n w)", "using rn_rev_price_cond_expect[of N q der matur n w] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>N = bernoulli_stream q; 0 < q; q < 1;\n   der \\<in> borel_measurable (G matur); Suc n \\<le> matur\\<rbrakk>\n  \\<Longrightarrow> expl_cond_expect N (proj_stoch_proc geom_proc n)\n                     (rn_rev_price N der matur (matur - Suc n)) w =\n                    q *\n                    rn_rev_price N der matur (matur - Suc n)\n                     (pseudo_proj_True n w) +\n                    (1 - q) *\n                    rn_rev_price N der matur (matur - Suc n)\n                     (pseudo_proj_False n w)\n  N = bernoulli_stream q\n  n < matur\n  0 < q\n  q < 1\n  der \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. expl_cond_expect N (proj_stoch_proc geom_proc n)\n     (rn_rev_price N der matur (matur - Suc n)) w =\n    q * rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True n w) +\n    (1 - q) *\n    rn_rev_price N der matur (matur - Suc n) (pseudo_proj_False n w)", "by simp"], ["proof (state)\nthis:\n  expl_cond_expect N (proj_stoch_proc geom_proc n)\n   (rn_rev_price N der matur (matur - Suc n)) w =\n  q * rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True n w) +\n  (1 - q) * rn_rev_price N der matur (matur - Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "also"], ["proof (state)\nthis:\n  expl_cond_expect N (proj_stoch_proc geom_proc n)\n   (rn_rev_price N der matur (matur - Suc n)) w =\n  q * rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True n w) +\n  (1 - q) * rn_rev_price N der matur (matur - Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "have \"... =  q * rn_price_ind N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price_ind N der matur (Suc n) (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q * rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True n w) +\n    (1 - q) *\n    rn_rev_price N der matur (matur - Suc n) (pseudo_proj_False n w) =\n    q * rn_price_ind N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price_ind N der matur (Suc n) (pseudo_proj_False n w)", "unfolding rn_price_ind_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. q * rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True n w) +\n    (1 - q) *\n    rn_rev_price N der matur (matur - Suc n) (pseudo_proj_False n w) =\n    q * rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True n w) +\n    (1 - q) *\n    rn_rev_price N der matur (matur - Suc n) (pseudo_proj_False n w)", "by simp"], ["proof (state)\nthis:\n  q * rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True n w) +\n  (1 - q) *\n  rn_rev_price N der matur (matur - Suc n) (pseudo_proj_False n w) =\n  q * rn_price_ind N der matur (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * rn_price_ind N der matur (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "also"], ["proof (state)\nthis:\n  q * rn_rev_price N der matur (matur - Suc n) (pseudo_proj_True n w) +\n  (1 - q) *\n  rn_rev_price N der matur (matur - Suc n) (pseudo_proj_False n w) =\n  q * rn_price_ind N der matur (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * rn_price_ind N der matur (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "have \"... = q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q * rn_price_ind N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price_ind N der matur (Suc n) (pseudo_proj_False n w) =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "using rn_price_eq assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1;\n   ?der \\<in> borel_measurable (G ?matur); ?n \\<le> ?matur\\<rbrakk>\n  \\<Longrightarrow> rn_price ?N ?der ?matur ?n ?w =\n                    rn_price_ind ?N ?der ?matur ?n ?w\n  N = bernoulli_stream q\n  n < matur\n  0 < q\n  q < 1\n  der \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. q * rn_price_ind N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price_ind N der matur (Suc n) (pseudo_proj_False n w) =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "by simp"], ["proof (state)\nthis:\n  q * rn_price_ind N der matur (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * rn_price_ind N der matur (Suc n) (pseudo_proj_False n w) =\n  q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "also"], ["proof (state)\nthis:\n  q * rn_price_ind N der matur (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * rn_price_ind N der matur (Suc n) (pseudo_proj_False n w) =\n  q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "have \"... = q * V (Suc n) (pseudo_proj_True n w) + (1 - q) *V (Suc n) (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w) =\n    q * V (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * V (Suc n) (pseudo_proj_False n w)", "unfolding V_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w) =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "by simp"], ["proof (state)\nthis:\n  q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w) =\n  q * V (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "finally"], ["proof (chain)\npicking this:\n  (1 + r) * V n w =\n  q * V (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_False n w)", "have \"(1+r) * V n w = q * V (Suc n) (pseudo_proj_True n w) + (1 - q) *V (Suc n) (pseudo_proj_False n w)\""], ["proof (prove)\nusing this:\n  (1 + r) * V n w =\n  q * V (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. (1 + r) * V n w =\n    q * V (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * V (Suc n) (pseudo_proj_False n w)", "."], ["proof (state)\nthis:\n  (1 + r) * V n w =\n  q * V (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (1 + r) * V n w =\n  q * V (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "unfolding V_def"], ["proof (prove)\nusing this:\n  (1 + r) * rn_price N der matur n w =\n  q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w =\n    q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)", "by simp"], ["proof (state)\nthis:\n  (1 + r) * rn_price N der matur n w =\n  q * rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * rn_price N der matur (Suc n) (pseudo_proj_False n w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma self_finance_updated_suc_suc:\n  assumes \"portfolio pf\"\n  and \"\\<forall>n. prices Mkt asset n w \\<noteq> 0\"\n  shows \"cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w = cls_val_process Mkt pf (Suc (Suc n)) w +\n    (prices Mkt asset (Suc (Suc n)) w / (prices Mkt asset (Suc n) w)) *\n      (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n     val_process Mkt pf (Suc n) w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n     val_process Mkt pf (Suc n) w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n     val_process Mkt pf (Suc n) w)", "have \"cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w = cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w * remaining_qty Mkt v pf asset (Suc (Suc n)) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w *\n    remaining_qty Mkt v pf asset (Suc (Suc n)) w", "using assms"], ["proof (prove)\nusing this:\n  portfolio pf\n  \\<forall>n. prices Mkt asset n w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w *\n    remaining_qty Mkt v pf asset (Suc (Suc n)) w", "by (simp add: self_finance_updated)"], ["proof (state)\nthis:\n  cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w *\n  remaining_qty Mkt v pf asset (Suc (Suc n)) w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n     val_process Mkt pf (Suc n) w)", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w *\n  remaining_qty Mkt v pf asset (Suc (Suc n)) w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n     val_process Mkt pf (Suc n) w)", "have \"... = cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w * ((remaining_qty Mkt v pf asset (Suc n) w) +\n    (cls_val_process Mkt pf (Suc n) w - val_process Mkt pf (Suc n) w)/(prices Mkt asset (Suc n) w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w *\n    remaining_qty Mkt v pf asset (Suc (Suc n)) w =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w *\n    (remaining_qty Mkt v pf asset (Suc n) w +\n     (cls_val_process Mkt pf (Suc n) w - val_process Mkt pf (Suc n) w) /\n     prices Mkt asset (Suc n) w)", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w *\n  remaining_qty Mkt v pf asset (Suc (Suc n)) w =\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w *\n  (remaining_qty Mkt v pf asset (Suc n) w +\n   (cls_val_process Mkt pf (Suc n) w - val_process Mkt pf (Suc n) w) /\n   prices Mkt asset (Suc n) w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n     val_process Mkt pf (Suc n) w)", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w *\n  remaining_qty Mkt v pf asset (Suc (Suc n)) w =\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w *\n  (remaining_qty Mkt v pf asset (Suc n) w +\n   (cls_val_process Mkt pf (Suc n) w - val_process Mkt pf (Suc n) w) /\n   prices Mkt asset (Suc n) w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n     val_process Mkt pf (Suc n) w)", "have \"... = cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w *\n      ((prices Mkt asset (Suc n) w) * (remaining_qty Mkt v pf asset (Suc n) w) / (prices Mkt asset (Suc n) w) +\n    (cls_val_process Mkt pf (Suc n) w - val_process Mkt pf (Suc n) w)/(prices Mkt asset (Suc n) w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w *\n    (remaining_qty Mkt v pf asset (Suc n) w +\n     (cls_val_process Mkt pf (Suc n) w - val_process Mkt pf (Suc n) w) /\n     prices Mkt asset (Suc n) w) =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w *\n    (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w /\n     prices Mkt asset (Suc n) w +\n     (cls_val_process Mkt pf (Suc n) w - val_process Mkt pf (Suc n) w) /\n     prices Mkt asset (Suc n) w)", "using assms"], ["proof (prove)\nusing this:\n  portfolio pf\n  \\<forall>n. prices Mkt asset n w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w *\n    (remaining_qty Mkt v pf asset (Suc n) w +\n     (cls_val_process Mkt pf (Suc n) w - val_process Mkt pf (Suc n) w) /\n     prices Mkt asset (Suc n) w) =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w *\n    (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w /\n     prices Mkt asset (Suc n) w +\n     (cls_val_process Mkt pf (Suc n) w - val_process Mkt pf (Suc n) w) /\n     prices Mkt asset (Suc n) w)", "by (metis nonzero_mult_div_cancel_left)"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w *\n  (remaining_qty Mkt v pf asset (Suc n) w +\n   (cls_val_process Mkt pf (Suc n) w - val_process Mkt pf (Suc n) w) /\n   prices Mkt asset (Suc n) w) =\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w *\n  (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w /\n   prices Mkt asset (Suc n) w +\n   (cls_val_process Mkt pf (Suc n) w - val_process Mkt pf (Suc n) w) /\n   prices Mkt asset (Suc n) w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n     val_process Mkt pf (Suc n) w)", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w *\n  (remaining_qty Mkt v pf asset (Suc n) w +\n   (cls_val_process Mkt pf (Suc n) w - val_process Mkt pf (Suc n) w) /\n   prices Mkt asset (Suc n) w) =\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w *\n  (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w /\n   prices Mkt asset (Suc n) w +\n   (cls_val_process Mkt pf (Suc n) w - val_process Mkt pf (Suc n) w) /\n   prices Mkt asset (Suc n) w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n     val_process Mkt pf (Suc n) w)", "have \"... = cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w * ((prices Mkt asset (Suc n) w) * (remaining_qty Mkt v pf asset (Suc n) w) +\n    cls_val_process Mkt pf (Suc n) w - val_process Mkt pf (Suc n) w)/(prices Mkt asset (Suc n) w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w *\n    (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w /\n     prices Mkt asset (Suc n) w +\n     (cls_val_process Mkt pf (Suc n) w - val_process Mkt pf (Suc n) w) /\n     prices Mkt asset (Suc n) w) =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w *\n    (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w +\n     cls_val_process Mkt pf (Suc n) w -\n     val_process Mkt pf (Suc n) w) /\n    prices Mkt asset (Suc n) w", "using add_divide_distrib[symmetric, of \"prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w\"\n        \"prices Mkt asset (Suc n) w\"]"], ["proof (prove)\nusing this:\n  prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w /\n  prices Mkt asset (Suc n) w +\n  ?b / prices Mkt asset (Suc n) w =\n  (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w +\n   ?b) /\n  prices Mkt asset (Suc n) w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w *\n    (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w /\n     prices Mkt asset (Suc n) w +\n     (cls_val_process Mkt pf (Suc n) w - val_process Mkt pf (Suc n) w) /\n     prices Mkt asset (Suc n) w) =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w *\n    (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w +\n     cls_val_process Mkt pf (Suc n) w -\n     val_process Mkt pf (Suc n) w) /\n    prices Mkt asset (Suc n) w", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w *\n  (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w /\n   prices Mkt asset (Suc n) w +\n   (cls_val_process Mkt pf (Suc n) w - val_process Mkt pf (Suc n) w) /\n   prices Mkt asset (Suc n) w) =\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w *\n  (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w +\n   cls_val_process Mkt pf (Suc n) w -\n   val_process Mkt pf (Suc n) w) /\n  prices Mkt asset (Suc n) w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n     val_process Mkt pf (Suc n) w)", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w *\n  (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w /\n   prices Mkt asset (Suc n) w +\n   (cls_val_process Mkt pf (Suc n) w - val_process Mkt pf (Suc n) w) /\n   prices Mkt asset (Suc n) w) =\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w *\n  (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w +\n   cls_val_process Mkt pf (Suc n) w -\n   val_process Mkt pf (Suc n) w) /\n  prices Mkt asset (Suc n) w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n     val_process Mkt pf (Suc n) w)", "have \"... = cls_val_process Mkt pf (Suc (Suc n)) w +\n    (prices Mkt asset (Suc (Suc n)) w / (prices Mkt asset (Suc n) w)) *\n    ((prices Mkt asset (Suc n) w) * (remaining_qty Mkt v pf asset (Suc n) w) +\n    cls_val_process Mkt pf (Suc n) w - val_process Mkt pf (Suc n) w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w *\n    (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w +\n     cls_val_process Mkt pf (Suc n) w -\n     val_process Mkt pf (Suc n) w) /\n    prices Mkt asset (Suc n) w =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n    (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w +\n     cls_val_process Mkt pf (Suc n) w -\n     val_process Mkt pf (Suc n) w)", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w *\n  (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w +\n   cls_val_process Mkt pf (Suc n) w -\n   val_process Mkt pf (Suc n) w) /\n  prices Mkt asset (Suc n) w =\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n  (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w +\n   cls_val_process Mkt pf (Suc n) w -\n   val_process Mkt pf (Suc n) w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n     val_process Mkt pf (Suc n) w)", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w *\n  (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w +\n   cls_val_process Mkt pf (Suc n) w -\n   val_process Mkt pf (Suc n) w) /\n  prices Mkt asset (Suc n) w =\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n  (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w +\n   cls_val_process Mkt pf (Suc n) w -\n   val_process Mkt pf (Suc n) w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n     val_process Mkt pf (Suc n) w)", "have \"... = cls_val_process Mkt pf (Suc (Suc n)) w +\n    (prices Mkt asset (Suc (Suc n)) w / (prices Mkt asset (Suc n) w)) *\n      (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n     val_process Mkt pf (Suc n) w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n    (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w +\n     cls_val_process Mkt pf (Suc n) w -\n     val_process Mkt pf (Suc n) w) =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n     val_process Mkt pf (Suc n) w)", "using self_finance_updated[of Mkt asset n w pf v] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>prices Mkt asset (Suc n) w \\<noteq> 0; portfolio pf\\<rbrakk>\n  \\<Longrightarrow> cls_val_process Mkt (self_finance Mkt v pf asset)\n                     (Suc n) w =\n                    cls_val_process Mkt pf (Suc n) w +\n                    prices Mkt asset (Suc n) w *\n                    remaining_qty Mkt v pf asset (Suc n) w\n  portfolio pf\n  \\<forall>n. prices Mkt asset n w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n    (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w +\n     cls_val_process Mkt pf (Suc n) w -\n     val_process Mkt pf (Suc n) w) =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n     val_process Mkt pf (Suc n) w)", "by auto"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n  (prices Mkt asset (Suc n) w * remaining_qty Mkt v pf asset (Suc n) w +\n   cls_val_process Mkt pf (Suc n) w -\n   val_process Mkt pf (Suc n) w) =\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n  (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n   val_process Mkt pf (Suc n) w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n     val_process Mkt pf (Suc n) w)", "finally"], ["proof (chain)\npicking this:\n  cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n  (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n   val_process Mkt pf (Suc n) w)", "show ?thesis"], ["proof (prove)\nusing this:\n  cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n  (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n   val_process Mkt pf (Suc n) w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n    cls_val_process Mkt pf (Suc (Suc n)) w +\n    prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n     val_process Mkt pf (Suc n) w)", "."], ["proof (state)\nthis:\n  cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc n)) w =\n  cls_val_process Mkt pf (Suc (Suc n)) w +\n  prices Mkt asset (Suc (Suc n)) w / prices Mkt asset (Suc n) w *\n  (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w -\n   val_process Mkt pf (Suc n) w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma self_finance_updated_suc_0:\n  assumes \"portfolio pf\"\n  and \"\\<forall>n w. prices Mkt asset n w \\<noteq> 0\"\n  shows \"cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w = cls_val_process Mkt pf (Suc 0) w +\n    (prices Mkt asset (Suc 0) w / (prices Mkt asset 0 w)) *\n      (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "have \"cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w = cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w * remaining_qty Mkt v pf asset (Suc 0) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w * remaining_qty Mkt v pf asset (Suc 0) w", "using assms"], ["proof (prove)\nusing this:\n  portfolio pf\n  \\<forall>n w. prices Mkt asset n w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w * remaining_qty Mkt v pf asset (Suc 0) w", "by (simp add: self_finance_updated)"], ["proof (state)\nthis:\n  cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w * remaining_qty Mkt v pf asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w * remaining_qty Mkt v pf asset (Suc 0) w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "have \"... = cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w * ((v - val_process Mkt pf 0 w)/(prices Mkt asset 0 w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w * remaining_qty Mkt v pf asset (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w *\n    ((v - val_process Mkt pf 0 w) / prices Mkt asset 0 w)", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w * remaining_qty Mkt v pf asset (Suc 0) w =\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w *\n  ((v - val_process Mkt pf 0 w) / prices Mkt asset 0 w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w * remaining_qty Mkt v pf asset (Suc 0) w =\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w *\n  ((v - val_process Mkt pf 0 w) / prices Mkt asset 0 w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "have \"... = cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w * ((remaining_qty Mkt v pf asset 0 w) +\n    (v - val_process Mkt pf 0 w)/(prices Mkt asset 0 w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w *\n    ((v - val_process Mkt pf 0 w) / prices Mkt asset 0 w) =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w *\n    (remaining_qty Mkt v pf asset 0 w +\n     (v - val_process Mkt pf 0 w) / prices Mkt asset 0 w)", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w *\n  ((v - val_process Mkt pf 0 w) / prices Mkt asset 0 w) =\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w *\n  (remaining_qty Mkt v pf asset 0 w +\n   (v - val_process Mkt pf 0 w) / prices Mkt asset 0 w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w *\n  ((v - val_process Mkt pf 0 w) / prices Mkt asset 0 w) =\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w *\n  (remaining_qty Mkt v pf asset 0 w +\n   (v - val_process Mkt pf 0 w) / prices Mkt asset 0 w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "have \"... = cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w *\n      ((prices Mkt asset 0 w) * (remaining_qty Mkt v pf asset 0 w) / (prices Mkt asset 0 w) +\n    (v - val_process Mkt pf 0 w)/(prices Mkt asset 0 w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w *\n    (remaining_qty Mkt v pf asset 0 w +\n     (v - val_process Mkt pf 0 w) / prices Mkt asset 0 w) =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w *\n    (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w /\n     prices Mkt asset 0 w +\n     (v - val_process Mkt pf 0 w) / prices Mkt asset 0 w)", "using assms"], ["proof (prove)\nusing this:\n  portfolio pf\n  \\<forall>n w. prices Mkt asset n w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w *\n    (remaining_qty Mkt v pf asset 0 w +\n     (v - val_process Mkt pf 0 w) / prices Mkt asset 0 w) =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w *\n    (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w /\n     prices Mkt asset 0 w +\n     (v - val_process Mkt pf 0 w) / prices Mkt asset 0 w)", "by (metis nonzero_mult_div_cancel_left)"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w *\n  (remaining_qty Mkt v pf asset 0 w +\n   (v - val_process Mkt pf 0 w) / prices Mkt asset 0 w) =\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w *\n  (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w /\n   prices Mkt asset 0 w +\n   (v - val_process Mkt pf 0 w) / prices Mkt asset 0 w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w *\n  (remaining_qty Mkt v pf asset 0 w +\n   (v - val_process Mkt pf 0 w) / prices Mkt asset 0 w) =\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w *\n  (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w /\n   prices Mkt asset 0 w +\n   (v - val_process Mkt pf 0 w) / prices Mkt asset 0 w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "have \"... = cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w * ((prices Mkt asset 0 w) * (remaining_qty Mkt v pf asset 0 w) +\n    v - val_process Mkt pf 0 w)/(prices Mkt asset 0 w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w *\n    (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w /\n     prices Mkt asset 0 w +\n     (v - val_process Mkt pf 0 w) / prices Mkt asset 0 w) =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w *\n    (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w + v -\n     val_process Mkt pf 0 w) /\n    prices Mkt asset 0 w", "using add_divide_distrib[symmetric, of \"prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w\"\n        \"prices Mkt asset 0 w\"]"], ["proof (prove)\nusing this:\n  prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w /\n  prices Mkt asset 0 w +\n  ?b / prices Mkt asset 0 w =\n  (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w + ?b) /\n  prices Mkt asset 0 w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w *\n    (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w /\n     prices Mkt asset 0 w +\n     (v - val_process Mkt pf 0 w) / prices Mkt asset 0 w) =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w *\n    (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w + v -\n     val_process Mkt pf 0 w) /\n    prices Mkt asset 0 w", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w *\n  (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w /\n   prices Mkt asset 0 w +\n   (v - val_process Mkt pf 0 w) / prices Mkt asset 0 w) =\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w *\n  (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w + v -\n   val_process Mkt pf 0 w) /\n  prices Mkt asset 0 w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w *\n  (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w /\n   prices Mkt asset 0 w +\n   (v - val_process Mkt pf 0 w) / prices Mkt asset 0 w) =\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w *\n  (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w + v -\n   val_process Mkt pf 0 w) /\n  prices Mkt asset 0 w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "have \"... = cls_val_process Mkt pf (Suc 0) w +\n    (prices Mkt asset (Suc 0) w / (prices Mkt asset 0 w)) *\n    ((prices Mkt asset 0 w) * (remaining_qty Mkt v pf asset 0 w) +\n    v - val_process Mkt pf 0 w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w *\n    (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w + v -\n     val_process Mkt pf 0 w) /\n    prices Mkt asset 0 w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w + v -\n     val_process Mkt pf 0 w)", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w *\n  (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w + v -\n   val_process Mkt pf 0 w) /\n  prices Mkt asset 0 w =\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n  (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w + v -\n   val_process Mkt pf 0 w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w *\n  (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w + v -\n   val_process Mkt pf 0 w) /\n  prices Mkt asset 0 w =\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n  (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w + v -\n   val_process Mkt pf 0 w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "have \"... = cls_val_process Mkt pf (Suc 0) w +\n    (prices Mkt asset (Suc 0) w / (prices Mkt asset 0 w)) *\n    ((prices Mkt asset 0 w) * (remaining_qty Mkt v pf asset 0 w) +\n    val_process Mkt (self_finance Mkt v pf asset) 0 w - val_process Mkt pf 0 w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w + v -\n     val_process Mkt pf 0 w) =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w +\n     val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "using self_finance_init[of Mkt asset pf v w] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>w. prices Mkt asset 0 w \\<noteq> 0;\n   portfolio pf\\<rbrakk>\n  \\<Longrightarrow> val_process Mkt (self_finance Mkt v pf asset) 0 w = v\n  portfolio pf\n  \\<forall>n w. prices Mkt asset n w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w + v -\n     val_process Mkt pf 0 w) =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w +\n     val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n  (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w + v -\n   val_process Mkt pf 0 w) =\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n  (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w +\n   val_process Mkt (self_finance Mkt v pf asset) 0 w -\n   val_process Mkt pf 0 w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n  (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w + v -\n   val_process Mkt pf 0 w) =\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n  (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w +\n   val_process Mkt (self_finance Mkt v pf asset) 0 w -\n   val_process Mkt pf 0 w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "have \"... = cls_val_process Mkt pf (Suc 0) w +\n    (prices Mkt asset (Suc 0) w / (prices Mkt asset 0 w)) *\n      (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w +\n     val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w) =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n  (prices Mkt asset 0 w * remaining_qty Mkt v pf asset 0 w +\n   val_process Mkt (self_finance Mkt v pf asset) 0 w -\n   val_process Mkt pf 0 w) =\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n  (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n   val_process Mkt pf 0 w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "finally"], ["proof (chain)\npicking this:\n  cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n  (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n   val_process Mkt pf 0 w)", "show ?thesis"], ["proof (prove)\nusing this:\n  cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n  (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n   val_process Mkt pf 0 w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n    cls_val_process Mkt pf (Suc 0) w +\n    prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n    (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n     val_process Mkt pf 0 w)", "."], ["proof (state)\nthis:\n  cls_val_process Mkt (self_finance Mkt v pf asset) (Suc 0) w =\n  cls_val_process Mkt pf (Suc 0) w +\n  prices Mkt asset (Suc 0) w / prices Mkt asset 0 w *\n  (val_process Mkt (self_finance Mkt v pf asset) 0 w -\n   val_process Mkt pf 0 w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma self_finance_updated_ind:\n  assumes \"portfolio pf\"\n  and \"\\<forall>n w. prices Mkt asset n w \\<noteq> 0\"\n  shows \"cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w = cls_val_process Mkt pf (Suc n) w +\n    (prices Mkt asset (Suc n) w / (prices Mkt asset n w)) *\n      (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)", "proof (cases \"n = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)", "thus ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)", "using assms self_finance_updated_suc_0"], ["proof (prove)\nusing this:\n  n = 0\n  portfolio pf\n  \\<forall>n w. prices Mkt asset n w \\<noteq> 0\n  \\<lbrakk>portfolio ?pf;\n   \\<forall>n w. prices ?Mkt ?asset n w \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> cls_val_process ?Mkt (self_finance ?Mkt ?v ?pf ?asset)\n                     (Suc 0) ?w =\n                    cls_val_process ?Mkt ?pf (Suc 0) ?w +\n                    prices ?Mkt ?asset (Suc 0) ?w /\n                    prices ?Mkt ?asset 0 ?w *\n                    (val_process ?Mkt (self_finance ?Mkt ?v ?pf ?asset) 0\n                      ?w -\n                     val_process ?Mkt ?pf 0 ?w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n  cls_val_process Mkt pf (Suc n) w +\n  prices Mkt asset (Suc n) w / prices Mkt asset n w *\n  (val_process Mkt (self_finance Mkt v pf asset) n w -\n   val_process Mkt pf n w)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)", "hence \"\\<exists>m. n = Suc m\""], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>m. n = Suc m", "by (simp add: not0_implies_Suc)"], ["proof (state)\nthis:\n  \\<exists>m. n = Suc m\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>m. n = Suc m", "obtain m where \"n = Suc m\""], ["proof (prove)\nusing this:\n  \\<exists>m. n = Suc m\n\ngoal (1 subgoal):\n 1. (\\<And>m. n = Suc m \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  n = Suc m\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)", "hence \"cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc m)) w\""], ["proof (prove)\nusing this:\n  n = Suc m\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc m)) w", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n  cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc m)) w\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n  cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc m)) w\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)", "have \"...  = cls_val_process Mkt pf (Suc (Suc m)) w +\n    (prices Mkt asset (Suc (Suc m)) w / (prices Mkt asset (Suc m) w)) *\n      (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc m) w -\n     val_process Mkt pf (Suc m) w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc m)) w =\n    cls_val_process Mkt pf (Suc (Suc m)) w +\n    prices Mkt asset (Suc (Suc m)) w / prices Mkt asset (Suc m) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc m) w -\n     val_process Mkt pf (Suc m) w)", "using assms self_finance_updated_suc_suc[of pf]"], ["proof (prove)\nusing this:\n  portfolio pf\n  \\<forall>n w. prices Mkt asset n w \\<noteq> 0\n  \\<lbrakk>portfolio pf;\n   \\<forall>n. prices ?Mkt ?asset n ?w \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> cls_val_process ?Mkt (self_finance ?Mkt ?v pf ?asset)\n                     (Suc (Suc ?n)) ?w =\n                    cls_val_process ?Mkt pf (Suc (Suc ?n)) ?w +\n                    prices ?Mkt ?asset (Suc (Suc ?n)) ?w /\n                    prices ?Mkt ?asset (Suc ?n) ?w *\n                    (cls_val_process ?Mkt (self_finance ?Mkt ?v pf ?asset)\n                      (Suc ?n) ?w -\n                     val_process ?Mkt pf (Suc ?n) ?w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc m)) w =\n    cls_val_process Mkt pf (Suc (Suc m)) w +\n    prices Mkt asset (Suc (Suc m)) w / prices Mkt asset (Suc m) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc m) w -\n     val_process Mkt pf (Suc m) w)", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc m)) w =\n  cls_val_process Mkt pf (Suc (Suc m)) w +\n  prices Mkt asset (Suc (Suc m)) w / prices Mkt asset (Suc m) w *\n  (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc m) w -\n   val_process Mkt pf (Suc m) w)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt (self_finance Mkt v pf asset) (Suc (Suc m)) w =\n  cls_val_process Mkt pf (Suc (Suc m)) w +\n  prices Mkt asset (Suc (Suc m)) w / prices Mkt asset (Suc m) w *\n  (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc m) w -\n   val_process Mkt pf (Suc m) w)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)", "have \"... = cls_val_process Mkt pf (Suc (Suc m)) w +\n    (prices Mkt asset (Suc (Suc m)) w / (prices Mkt asset (Suc m) w)) *\n      (val_process Mkt (self_finance Mkt v pf asset) (Suc m) w -\n     val_process Mkt pf (Suc m) w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc (Suc m)) w +\n    prices Mkt asset (Suc (Suc m)) w / prices Mkt asset (Suc m) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc m) w -\n     val_process Mkt pf (Suc m) w) =\n    cls_val_process Mkt pf (Suc (Suc m)) w +\n    prices Mkt asset (Suc (Suc m)) w / prices Mkt asset (Suc m) w *\n    (val_process Mkt (self_finance Mkt v pf asset) (Suc m) w -\n     val_process Mkt pf (Suc m) w)", "using assms self_finance_charact"], ["proof (prove)\nusing this:\n  portfolio pf\n  \\<forall>n w. prices Mkt asset n w \\<noteq> 0\n  \\<lbrakk>\\<forall>n w. prices ?Mkt ?asset (Suc n) w \\<noteq> 0;\n   portfolio ?pf\\<rbrakk>\n  \\<Longrightarrow> self_financing ?Mkt (self_finance ?Mkt ?v ?pf ?asset)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc (Suc m)) w +\n    prices Mkt asset (Suc (Suc m)) w / prices Mkt asset (Suc m) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc m) w -\n     val_process Mkt pf (Suc m) w) =\n    cls_val_process Mkt pf (Suc (Suc m)) w +\n    prices Mkt asset (Suc (Suc m)) w / prices Mkt asset (Suc m) w *\n    (val_process Mkt (self_finance Mkt v pf asset) (Suc m) w -\n     val_process Mkt pf (Suc m) w)", "unfolding self_financing_def"], ["proof (prove)\nusing this:\n  portfolio pf\n  \\<forall>n w. prices Mkt asset n w \\<noteq> 0\n  \\<lbrakk>\\<forall>n w. prices ?Mkt ?asset (Suc n) w \\<noteq> 0;\n   portfolio ?pf\\<rbrakk>\n  \\<Longrightarrow> \\<forall>n.\n                       val_process ?Mkt (self_finance ?Mkt ?v ?pf ?asset)\n                        (Suc n) =\n                       cls_val_process ?Mkt\n                        (self_finance ?Mkt ?v ?pf ?asset) (Suc n)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc (Suc m)) w +\n    prices Mkt asset (Suc (Suc m)) w / prices Mkt asset (Suc m) w *\n    (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc m) w -\n     val_process Mkt pf (Suc m) w) =\n    cls_val_process Mkt pf (Suc (Suc m)) w +\n    prices Mkt asset (Suc (Suc m)) w / prices Mkt asset (Suc m) w *\n    (val_process Mkt (self_finance Mkt v pf asset) (Suc m) w -\n     val_process Mkt pf (Suc m) w)", "by (simp add: self_finance_succ self_finance_updated)"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc (Suc m)) w +\n  prices Mkt asset (Suc (Suc m)) w / prices Mkt asset (Suc m) w *\n  (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc m) w -\n   val_process Mkt pf (Suc m) w) =\n  cls_val_process Mkt pf (Suc (Suc m)) w +\n  prices Mkt asset (Suc (Suc m)) w / prices Mkt asset (Suc m) w *\n  (val_process Mkt (self_finance Mkt v pf asset) (Suc m) w -\n   val_process Mkt pf (Suc m) w)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc (Suc m)) w +\n  prices Mkt asset (Suc (Suc m)) w / prices Mkt asset (Suc m) w *\n  (cls_val_process Mkt (self_finance Mkt v pf asset) (Suc m) w -\n   val_process Mkt pf (Suc m) w) =\n  cls_val_process Mkt pf (Suc (Suc m)) w +\n  prices Mkt asset (Suc (Suc m)) w / prices Mkt asset (Suc m) w *\n  (val_process Mkt (self_finance Mkt v pf asset) (Suc m) w -\n   val_process Mkt pf (Suc m) w)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)", "have \"... = cls_val_process Mkt pf (Suc n) w +\n    (prices Mkt asset (Suc n) w / (prices Mkt asset n w)) *\n      (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc (Suc m)) w +\n    prices Mkt asset (Suc (Suc m)) w / prices Mkt asset (Suc m) w *\n    (val_process Mkt (self_finance Mkt v pf asset) (Suc m) w -\n     val_process Mkt pf (Suc m) w) =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)", "using \\<open>n = Suc m\\<close>"], ["proof (prove)\nusing this:\n  n = Suc m\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc (Suc m)) w +\n    prices Mkt asset (Suc (Suc m)) w / prices Mkt asset (Suc m) w *\n    (val_process Mkt (self_finance Mkt v pf asset) (Suc m) w -\n     val_process Mkt pf (Suc m) w) =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc (Suc m)) w +\n  prices Mkt asset (Suc (Suc m)) w / prices Mkt asset (Suc m) w *\n  (val_process Mkt (self_finance Mkt v pf asset) (Suc m) w -\n   val_process Mkt pf (Suc m) w) =\n  cls_val_process Mkt pf (Suc n) w +\n  prices Mkt asset (Suc n) w / prices Mkt asset n w *\n  (val_process Mkt (self_finance Mkt v pf asset) n w -\n   val_process Mkt pf n w)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)", "finally"], ["proof (chain)\npicking this:\n  cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n  cls_val_process Mkt pf (Suc n) w +\n  prices Mkt asset (Suc n) w / prices Mkt asset n w *\n  (val_process Mkt (self_finance Mkt v pf asset) n w -\n   val_process Mkt pf n w)", "show ?thesis"], ["proof (prove)\nusing this:\n  cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n  cls_val_process Mkt pf (Suc n) w +\n  prices Mkt asset (Suc n) w / prices Mkt asset n w *\n  (val_process Mkt (self_finance Mkt v pf asset) n w -\n   val_process Mkt pf n w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt asset (Suc n) w / prices Mkt asset n w *\n    (val_process Mkt (self_finance Mkt v pf asset) n w -\n     val_process Mkt pf n w)", "."], ["proof (state)\nthis:\n  cls_val_process Mkt (self_finance Mkt v pf asset) (Suc n) w =\n  cls_val_process Mkt pf (Suc n) w +\n  prices Mkt asset (Suc n) w / prices Mkt asset n w *\n  (val_process Mkt (self_finance Mkt v pf asset) n w -\n   val_process Mkt pf n w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  (in rfr_disc_equity_market) self_finance_risk_free_update_ind:\n  assumes \"portfolio pf\"\n  shows \"cls_val_process Mkt (self_finance Mkt v pf risk_free_asset) (Suc n) w = cls_val_process Mkt pf (Suc n) w +\n    (1 + r) * (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w - val_process Mkt pf n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf risk_free_asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    (1 + r) *\n    (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w -\n     val_process Mkt pf n w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf risk_free_asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    (1 + r) *\n    (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w -\n     val_process Mkt pf n w)", "have \"cls_val_process Mkt (self_finance Mkt v pf risk_free_asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    (prices Mkt risk_free_asset (Suc n) w / (prices Mkt risk_free_asset n w)) *\n      (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w -\n     val_process Mkt pf n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf risk_free_asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    prices Mkt risk_free_asset (Suc n) w / prices Mkt risk_free_asset n w *\n    (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w -\n     val_process Mkt pf n w)", "proof (rule self_finance_updated_ind, (simp add: assms), intro allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n w. prices Mkt risk_free_asset n w \\<noteq> 0", "fix n w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n w. prices Mkt risk_free_asset n w \\<noteq> 0", "show \"prices Mkt risk_free_asset n w \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prices Mkt risk_free_asset n w \\<noteq> 0", "using positive"], ["proof (prove)\nusing this:\n  \\<forall>n w. 0 < prices Mkt risk_free_asset n w\n\ngoal (1 subgoal):\n 1. prices Mkt risk_free_asset n w \\<noteq> 0", "by (metis less_irrefl)"], ["proof (state)\nthis:\n  prices Mkt risk_free_asset n w \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cls_val_process Mkt (self_finance Mkt v pf risk_free_asset) (Suc n) w =\n  cls_val_process Mkt pf (Suc n) w +\n  prices Mkt risk_free_asset (Suc n) w / prices Mkt risk_free_asset n w *\n  (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w -\n   val_process Mkt pf n w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf risk_free_asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    (1 + r) *\n    (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w -\n     val_process Mkt pf n w)", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt (self_finance Mkt v pf risk_free_asset) (Suc n) w =\n  cls_val_process Mkt pf (Suc n) w +\n  prices Mkt risk_free_asset (Suc n) w / prices Mkt risk_free_asset n w *\n  (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w -\n   val_process Mkt pf n w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf risk_free_asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    (1 + r) *\n    (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w -\n     val_process Mkt pf n w)", "have \"... = cls_val_process Mkt pf (Suc n) w +\n    (1+r) * (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w -\n     val_process Mkt pf n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w +\n    prices Mkt risk_free_asset (Suc n) w / prices Mkt risk_free_asset n w *\n    (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w -\n     val_process Mkt pf n w) =\n    cls_val_process Mkt pf (Suc n) w +\n    (1 + r) *\n    (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w -\n     val_process Mkt pf n w)", "using rf_price  positive"], ["proof (prove)\nusing this:\n  prices Mkt risk_free_asset = disc_rfr_proc r\n  \\<forall>n w. 0 < prices Mkt risk_free_asset n w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt pf (Suc n) w +\n    prices Mkt risk_free_asset (Suc n) w / prices Mkt risk_free_asset n w *\n    (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w -\n     val_process Mkt pf n w) =\n    cls_val_process Mkt pf (Suc n) w +\n    (1 + r) *\n    (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w -\n     val_process Mkt pf n w)", "by (metis acceptable_rate disc_rfr_proc_Suc_div)"], ["proof (state)\nthis:\n  cls_val_process Mkt pf (Suc n) w +\n  prices Mkt risk_free_asset (Suc n) w / prices Mkt risk_free_asset n w *\n  (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w -\n   val_process Mkt pf n w) =\n  cls_val_process Mkt pf (Suc n) w +\n  (1 + r) *\n  (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w -\n   val_process Mkt pf n w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf risk_free_asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    (1 + r) *\n    (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w -\n     val_process Mkt pf n w)", "finally"], ["proof (chain)\npicking this:\n  cls_val_process Mkt (self_finance Mkt v pf risk_free_asset) (Suc n) w =\n  cls_val_process Mkt pf (Suc n) w +\n  (1 + r) *\n  (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w -\n   val_process Mkt pf n w)", "show ?thesis"], ["proof (prove)\nusing this:\n  cls_val_process Mkt (self_finance Mkt v pf risk_free_asset) (Suc n) w =\n  cls_val_process Mkt pf (Suc n) w +\n  (1 + r) *\n  (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w -\n   val_process Mkt pf n w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (self_finance Mkt v pf risk_free_asset) (Suc n) w =\n    cls_val_process Mkt pf (Suc n) w +\n    (1 + r) *\n    (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w -\n     val_process Mkt pf n w)", "."], ["proof (state)\nthis:\n  cls_val_process Mkt (self_finance Mkt v pf risk_free_asset) (Suc n) w =\n  cls_val_process Mkt pf (Suc n) w +\n  (1 + r) *\n  (val_process Mkt (self_finance Mkt v pf risk_free_asset) n w -\n   val_process Mkt pf n w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) delta_pf_portfolio:\n  shows \"portfolio (delta_pf N der matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. portfolio (delta_pf N der matur)", "unfolding delta_pf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. portfolio (qty_single stk (delta_predict N der matur))", "by (simp add: single_comp_portfolio)"], ["", "lemma (in CRR_market) delta_pf_updated:\n  shows \"cls_val_process Mkt (delta_pf N der matur) (Suc n) w =\n    geom_proc (Suc n) w * delta_price N der matur n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_pf N der matur) (Suc n) w =\n    geom_proc (Suc n) w * delta_price N der matur n w", "unfolding delta_pf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (qty_single stk (delta_predict N der matur)) (Suc n)\n     w =\n    geom_proc (Suc n) w * delta_price N der matur n w", "using stk_price qty_single_updated[of Mkt]"], ["proof (prove)\nusing this:\n  prices Mkt stk = geom_proc\n  cls_val_process Mkt (qty_single ?asset ?qty) (Suc ?n) ?w =\n  prices Mkt ?asset (Suc ?n) ?w * ?qty (Suc ?n) ?w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (qty_single stk (delta_predict N der matur)) (Suc n)\n     w =\n    geom_proc (Suc n) w * delta_price N der matur n w", "by simp"], ["", "lemma (in CRR_market) delta_pf_val_process:\n  shows \"val_process Mkt (delta_pf N der matur) n w =\n    geom_proc n w * delta_price N der matur n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt (delta_pf N der matur) n w =\n    geom_proc n w * delta_price N der matur n w", "unfolding delta_pf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt (qty_single stk (delta_predict N der matur)) n w =\n    geom_proc n w * delta_price N der matur n w", "using stk_price qty_single_val_process[of Mkt]"], ["proof (prove)\nusing this:\n  prices Mkt stk = geom_proc\n  val_process Mkt (qty_single ?asset ?qty) ?n ?w =\n  prices Mkt ?asset ?n ?w * ?qty (Suc ?n) ?w\n\ngoal (1 subgoal):\n 1. val_process Mkt (qty_single stk (delta_predict N der matur)) n w =\n    geom_proc n w * delta_price N der matur n w", "by simp"], ["", "lemma (in CRR_market) delta_hedging_cls_val_process:\n  shows \"cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n    geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) * (val_process Mkt (delta_hedging N der matur) n w - geom_proc n w * delta_price N der matur n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n    geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) *\n    (val_process Mkt (delta_hedging N der matur) n w -\n     geom_proc n w * delta_price N der matur n w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n    geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) *\n    (val_process Mkt (delta_hedging N der matur) n w -\n     geom_proc n w * delta_price N der matur n w)", "define X where \"X = delta_hedging N der matur\""], ["proof (state)\nthis:\n  X = delta_hedging N der matur\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n    geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) *\n    (val_process Mkt (delta_hedging N der matur) n w -\n     geom_proc n w * delta_price N der matur n w)", "define init where \"init = integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)\""], ["proof (state)\nthis:\n  init = integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n    geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) *\n    (val_process Mkt (delta_hedging N der matur) n w -\n     geom_proc n w * delta_price N der matur n w)", "have \"cls_val_process Mkt X (Suc n) w = cls_val_process Mkt (delta_pf N der matur) (Suc n) w +\n    (1 + r) * (val_process Mkt X n w - val_process Mkt (delta_pf N der matur) n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt X (Suc n) w =\n    cls_val_process Mkt (delta_pf N der matur) (Suc n) w +\n    (1 + r) *\n    (val_process Mkt X n w - val_process Mkt (delta_pf N der matur) n w)", "unfolding X_def delta_hedging_def self_fin_delta_pf_def init_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt\n     (self_finance Mkt\n       (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n       (delta_pf N der matur) risk_free_asset)\n     (Suc n) w =\n    cls_val_process Mkt (delta_pf N der matur) (Suc n) w +\n    (1 + r) *\n    (val_process Mkt\n      (self_finance Mkt\n        (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n        (delta_pf N der matur) risk_free_asset)\n      n w -\n     val_process Mkt (delta_pf N der matur) n w)", "proof (rule self_finance_risk_free_update_ind)"], ["proof (state)\ngoal (1 subgoal):\n 1. portfolio (delta_pf N der matur)", "show \"portfolio (delta_pf N der matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. portfolio (delta_pf N der matur)", "unfolding  portfolio_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (support_set (delta_pf N der matur))", "using delta_pf_support"], ["proof (prove)\nusing this:\n  support_set (delta_pf ?N ?der ?matur) \\<subseteq> {stk}\n\ngoal (1 subgoal):\n 1. finite (support_set (delta_pf N der matur))", "by (meson finite.simps infinite_super)"], ["proof (state)\nthis:\n  portfolio (delta_pf N der matur)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cls_val_process Mkt X (Suc n) w =\n  cls_val_process Mkt (delta_pf N der matur) (Suc n) w +\n  (1 + r) *\n  (val_process Mkt X n w - val_process Mkt (delta_pf N der matur) n w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n    geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) *\n    (val_process Mkt (delta_hedging N der matur) n w -\n     geom_proc n w * delta_price N der matur n w)", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt X (Suc n) w =\n  cls_val_process Mkt (delta_pf N der matur) (Suc n) w +\n  (1 + r) *\n  (val_process Mkt X n w - val_process Mkt (delta_pf N der matur) n w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n    geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) *\n    (val_process Mkt (delta_hedging N der matur) n w -\n     geom_proc n w * delta_price N der matur n w)", "have \"... = geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) * (val_process Mkt X n w - val_process Mkt (delta_pf N der matur) n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_pf N der matur) (Suc n) w +\n    (1 + r) *\n    (val_process Mkt X n w - val_process Mkt (delta_pf N der matur) n w) =\n    geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) *\n    (val_process Mkt X n w - val_process Mkt (delta_pf N der matur) n w)", "using delta_pf_updated"], ["proof (prove)\nusing this:\n  cls_val_process Mkt (delta_pf ?N ?der ?matur) (Suc ?n) ?w =\n  geom_proc (Suc ?n) ?w * delta_price ?N ?der ?matur ?n ?w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_pf N der matur) (Suc n) w +\n    (1 + r) *\n    (val_process Mkt X n w - val_process Mkt (delta_pf N der matur) n w) =\n    geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) *\n    (val_process Mkt X n w - val_process Mkt (delta_pf N der matur) n w)", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt (delta_pf N der matur) (Suc n) w +\n  (1 + r) *\n  (val_process Mkt X n w - val_process Mkt (delta_pf N der matur) n w) =\n  geom_proc (Suc n) w * delta_price N der matur n w +\n  (1 + r) *\n  (val_process Mkt X n w - val_process Mkt (delta_pf N der matur) n w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n    geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) *\n    (val_process Mkt (delta_hedging N der matur) n w -\n     geom_proc n w * delta_price N der matur n w)", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt (delta_pf N der matur) (Suc n) w +\n  (1 + r) *\n  (val_process Mkt X n w - val_process Mkt (delta_pf N der matur) n w) =\n  geom_proc (Suc n) w * delta_price N der matur n w +\n  (1 + r) *\n  (val_process Mkt X n w - val_process Mkt (delta_pf N der matur) n w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n    geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) *\n    (val_process Mkt (delta_hedging N der matur) n w -\n     geom_proc n w * delta_price N der matur n w)", "have \"... = geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) * (val_process Mkt X n w - geom_proc n w * delta_price N der matur n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) *\n    (val_process Mkt X n w - val_process Mkt (delta_pf N der matur) n w) =\n    geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) *\n    (val_process Mkt X n w - geom_proc n w * delta_price N der matur n w)", "using delta_pf_val_process"], ["proof (prove)\nusing this:\n  val_process Mkt (delta_pf ?N ?der ?matur) ?n ?w =\n  geom_proc ?n ?w * delta_price ?N ?der ?matur ?n ?w\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) *\n    (val_process Mkt X n w - val_process Mkt (delta_pf N der matur) n w) =\n    geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) *\n    (val_process Mkt X n w - geom_proc n w * delta_price N der matur n w)", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc n) w * delta_price N der matur n w +\n  (1 + r) *\n  (val_process Mkt X n w - val_process Mkt (delta_pf N der matur) n w) =\n  geom_proc (Suc n) w * delta_price N der matur n w +\n  (1 + r) *\n  (val_process Mkt X n w - geom_proc n w * delta_price N der matur n w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n    geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) *\n    (val_process Mkt (delta_hedging N der matur) n w -\n     geom_proc n w * delta_price N der matur n w)", "finally"], ["proof (chain)\npicking this:\n  cls_val_process Mkt X (Suc n) w =\n  geom_proc (Suc n) w * delta_price N der matur n w +\n  (1 + r) *\n  (val_process Mkt X n w - geom_proc n w * delta_price N der matur n w)", "show ?thesis"], ["proof (prove)\nusing this:\n  cls_val_process Mkt X (Suc n) w =\n  geom_proc (Suc n) w * delta_price N der matur n w +\n  (1 + r) *\n  (val_process Mkt X n w - geom_proc n w * delta_price N der matur n w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n    geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) *\n    (val_process Mkt (delta_hedging N der matur) n w -\n     geom_proc n w * delta_price N der matur n w)", "unfolding X_def"], ["proof (prove)\nusing this:\n  cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n  geom_proc (Suc n) w * delta_price N der matur n w +\n  (1 + r) *\n  (val_process Mkt (delta_hedging N der matur) n w -\n   geom_proc n w * delta_price N der matur n w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n    geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) *\n    (val_process Mkt (delta_hedging N der matur) n w -\n     geom_proc n w * delta_price N der matur n w)", "."], ["proof (state)\nthis:\n  cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n  geom_proc (Suc n) w * delta_price N der matur n w +\n  (1 + r) *\n  (val_process Mkt (delta_hedging N der matur) n w -\n   geom_proc n w * delta_price N der matur n w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market_viable) delta_hedging_eq_derivative_price:\n  fixes der::\"bool stream \\<Rightarrow> real\" and matur::nat\n  assumes \"N = bernoulli_stream ((1 + r - d) / (u - d))\"\n  and \"der\\<in> borel_measurable (G matur)\"\n  shows \"\\<And>n w. n\\<le> matur \\<Longrightarrow>\n    val_process Mkt (delta_hedging N der matur) n w =\n    (rn_price N der matur) n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n w.\n       n \\<le> matur \\<Longrightarrow>\n       val_process Mkt (delta_hedging N der matur) n w =\n       rn_price N der matur n w", "unfolding delta_hedging_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n w.\n       n \\<le> matur \\<Longrightarrow>\n       val_process Mkt\n        (self_fin_delta_pf N der matur\n          (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)))\n        n w =\n       rn_price N der matur n w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n w.\n       n \\<le> matur \\<Longrightarrow>\n       val_process Mkt\n        (self_fin_delta_pf N der matur\n          (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)))\n        n w =\n       rn_price N der matur n w", "define q where \"q = (1 + r - d) / (u - d)\""], ["proof (state)\nthis:\n  q = (1 + r - d) / (u - d)\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       n \\<le> matur \\<Longrightarrow>\n       val_process Mkt\n        (self_fin_delta_pf N der matur\n          (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)))\n        n w =\n       rn_price N der matur n w", "have \"0 < q\" and \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "unfolding q_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (1 + r - d) / (u - d) &&& (1 + r - d) / (u - d) < 1", "using assms gt_param lt_param CRR_viable"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n  \\<lbrakk>?q = (1 + r - d) / (u - d); viable_market Mkt\\<rbrakk>\n  \\<Longrightarrow> 0 < ?q\n  \\<lbrakk>?q = (1 + r - d) / (u - d); viable_market Mkt\\<rbrakk>\n  \\<Longrightarrow> ?q < 1\n  viable_market Mkt\n\ngoal (1 subgoal):\n 1. 0 < (1 + r - d) / (u - d) &&& (1 + r - d) / (u - d) < 1", "by auto"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       n \\<le> matur \\<Longrightarrow>\n       val_process Mkt\n        (self_fin_delta_pf N der matur\n          (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)))\n        n w =\n       rn_price N der matur n w", "note qprops = this"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       n \\<le> matur \\<Longrightarrow>\n       val_process Mkt\n        (self_fin_delta_pf N der matur\n          (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)))\n        n w =\n       rn_price N der matur n w", "define init where  \"init = (prob_space.expectation N (discounted_value r (\\<lambda>m. der) matur))\""], ["proof (state)\nthis:\n  init = integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       n \\<le> matur \\<Longrightarrow>\n       val_process Mkt\n        (self_fin_delta_pf N der matur\n          (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)))\n        n w =\n       rn_price N der matur n w", "define X where \"X = val_process Mkt (delta_hedging N der matur)\""], ["proof (state)\nthis:\n  X = val_process Mkt (delta_hedging N der matur)\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       n \\<le> matur \\<Longrightarrow>\n       val_process Mkt\n        (self_fin_delta_pf N der matur\n          (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)))\n        n w =\n       rn_price N der matur n w", "define V where \"V = rn_price N der matur\""], ["proof (state)\nthis:\n  V = rn_price N der matur\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       n \\<le> matur \\<Longrightarrow>\n       val_process Mkt\n        (self_fin_delta_pf N der matur\n          (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)))\n        n w =\n       rn_price N der matur n w", "define \\<Delta> where \"\\<Delta> = delta_price N der matur\""], ["proof (state)\nthis:\n  \\<Delta> = delta_price N der matur\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       n \\<le> matur \\<Longrightarrow>\n       val_process Mkt\n        (self_fin_delta_pf N der matur\n          (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)))\n        n w =\n       rn_price N der matur n w", "{"], ["proof (state)\nthis:\n  \\<Delta> = delta_price N der matur\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       n \\<le> matur \\<Longrightarrow>\n       val_process Mkt\n        (self_fin_delta_pf N der matur\n          (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)))\n        n w =\n       rn_price N der matur n w", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n w.\n       n \\<le> matur \\<Longrightarrow>\n       val_process Mkt\n        (self_fin_delta_pf N der matur\n          (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)))\n        n w =\n       rn_price N der matur n w", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n w.\n       n \\<le> matur \\<Longrightarrow>\n       val_process Mkt\n        (self_fin_delta_pf N der matur\n          (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)))\n        n w =\n       rn_price N der matur n w", "have \"n \\<le> matur \\<Longrightarrow> X n w = V n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> matur \\<Longrightarrow> X n w = V n w", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> matur \\<Longrightarrow> X 0 w = V 0 w\n 2. \\<And>n.\n       \\<lbrakk>n \\<le> matur \\<Longrightarrow> X n w = V n w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "case 0"], ["proof (state)\nthis:\n  0 \\<le> matur\n\ngoal (2 subgoals):\n 1. 0 \\<le> matur \\<Longrightarrow> X 0 w = V 0 w\n 2. \\<And>n.\n       \\<lbrakk>n \\<le> matur \\<Longrightarrow> X n w = V n w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have v0: \"V 0 \\<in> borel_measurable (G 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V 0 \\<in> borel_measurable (G 0)", "using assms rn_price_borel_adapt \"0.prems\" qprops"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n  \\<lbrakk>?cash_flow \\<in> borel_measurable (G ?matur);\n   ?N = bernoulli_stream ?q; 0 < ?q; ?q < 1; ?n \\<le> ?matur\\<rbrakk>\n  \\<Longrightarrow> rn_price ?N ?cash_flow ?matur ?n\n                    \\<in> borel_measurable (G ?n)\n  0 \\<le> matur\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. V 0 \\<in> borel_measurable (G 0)", "unfolding V_def q_def"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n  \\<lbrakk>?cash_flow \\<in> borel_measurable (G ?matur);\n   ?N = bernoulli_stream ?q; 0 < ?q; ?q < 1; ?n \\<le> ?matur\\<rbrakk>\n  \\<Longrightarrow> rn_price ?N ?cash_flow ?matur ?n\n                    \\<in> borel_measurable (G ?n)\n  0 \\<le> matur\n  0 < (1 + r - d) / (u - d)\n  (1 + r - d) / (u - d) < 1\n\ngoal (1 subgoal):\n 1. rn_price N der matur 0 \\<in> borel_measurable (G 0)", "by auto"], ["proof (state)\nthis:\n  V 0 \\<in> borel_measurable (G 0)\n\ngoal (2 subgoals):\n 1. 0 \\<le> matur \\<Longrightarrow> X 0 w = V 0 w\n 2. \\<And>n.\n       \\<lbrakk>n \\<le> matur \\<Longrightarrow> X n w = V n w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"X 0 w= init\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X 0 w = init", "using self_finance_init[of Mkt risk_free_asset \"delta_pf N der matur\" \"integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)\"]\n        delta_pf_support"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>w. prices Mkt risk_free_asset 0 w \\<noteq> 0;\n   portfolio (delta_pf N der matur)\\<rbrakk>\n  \\<Longrightarrow> val_process Mkt\n                     (self_finance Mkt\n                       (integral\\<^sup>L N\n                         (discounted_value r (\\<lambda>m. der) matur))\n                       (delta_pf N der matur) risk_free_asset)\n                     0 ?w =\n                    integral\\<^sup>L N\n                     (discounted_value r (\\<lambda>m. der) matur)\n  support_set (delta_pf ?N ?der ?matur) \\<subseteq> {stk}\n\ngoal (1 subgoal):\n 1. X 0 w = init", "unfolding  X_def init_def delta_hedging_def self_fin_delta_pf_def init_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>w. prices Mkt risk_free_asset 0 w \\<noteq> 0;\n   portfolio (delta_pf N der matur)\\<rbrakk>\n  \\<Longrightarrow> val_process Mkt\n                     (self_finance Mkt\n                       (integral\\<^sup>L N\n                         (discounted_value r (\\<lambda>m. der) matur))\n                       (delta_pf N der matur) risk_free_asset)\n                     0 ?w =\n                    integral\\<^sup>L N\n                     (discounted_value r (\\<lambda>m. der) matur)\n  support_set (delta_pf ?N ?der ?matur) \\<subseteq> {stk}\n\ngoal (1 subgoal):\n 1. val_process Mkt\n     (self_finance Mkt\n       (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n       (delta_pf N der matur) risk_free_asset)\n     0 w =\n    integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)", "by (metis finite_insert infinite_imp_nonempty infinite_super less_irrefl portfolio_def positive)"], ["proof (state)\nthis:\n  X 0 w = init\n\ngoal (2 subgoals):\n 1. 0 \\<le> matur \\<Longrightarrow> X 0 w = V 0 w\n 2. \\<And>n.\n       \\<lbrakk>n \\<le> matur \\<Longrightarrow> X n w = V n w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  X 0 w = init\n\ngoal (2 subgoals):\n 1. 0 \\<le> matur \\<Longrightarrow> X 0 w = V 0 w\n 2. \\<And>n.\n       \\<lbrakk>n \\<le> matur \\<Longrightarrow> X n w = V n w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = V 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. init = V 0 w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. init = V 0 w", "have \"\\<forall>x\\<in>space N. real_cond_exp N (G 0) (discounted_value r (\\<lambda>m. der) matur) x =\n        integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>space N.\n       real_cond_exp N (G 0) (discounted_value r (\\<lambda>m. der) matur)\n        x =\n       integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)", "proof (rule prob_space.trivial_subalg_cond_expect_eq)"], ["proof (state)\ngoal (4 subgoals):\n 1. prob_space N\n 2. subalgebra N (G 0)\n 3. sets (G 0) = {{}, space N}\n 4. integrable N (discounted_value r (\\<lambda>m. der) matur)", "show \"prob_space N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space N", "using assms qprops"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. prob_space N", "unfolding q_def"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n  0 < (1 + r - d) / (u - d)\n  (1 + r - d) / (u - d) < 1\n\ngoal (1 subgoal):\n 1. prob_space N", "by (simp add: bernoulli bernoulli_stream_def prob_space.prob_space_stream_space prob_space_measure_pmf)"], ["proof (state)\nthis:\n  prob_space N\n\ngoal (3 subgoals):\n 1. subalgebra N (G 0)\n 2. sets (G 0) = {{}, space N}\n 3. integrable N (discounted_value r (\\<lambda>m. der) matur)", "have \"init_triv_filt M (stoch_proc_filt M geom_proc borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. init_triv_filt M (stoch_proc_filt M geom_proc borel)", "proof (rule infinite_cts_filtration.stoch_proc_filt_triv_init)"], ["proof (state)\ngoal (2 subgoals):\n 1. infinite_cts_filtration ?p M ?F\n 2. borel_adapt_stoch_proc nat_filtration geom_proc", "show \"borel_adapt_stoch_proc nat_filtration geom_proc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc nat_filtration geom_proc", "using geom_rand_walk_borel_adapted"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc nat_filtration geom_proc\n\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc nat_filtration geom_proc", "by simp"], ["proof (state)\nthis:\n  borel_adapt_stoch_proc nat_filtration geom_proc\n\ngoal (1 subgoal):\n 1. infinite_cts_filtration ?p M ?F", "show \"infinite_cts_filtration p M nat_filtration\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_cts_filtration p M nat_filtration", "using bernoulli_nat_filtration[of M p] bernoulli psgt pslt"], ["proof (prove)\nusing this:\n  \\<lbrakk>M = bernoulli_stream p; 0 < p; p < 1; 0 < p; p < 1\\<rbrakk>\n  \\<Longrightarrow> infinite_cts_filtration p M nat_filtration\n  M = bernoulli_stream p\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. infinite_cts_filtration p M nat_filtration", "by simp"], ["proof (state)\nthis:\n  infinite_cts_filtration p M nat_filtration\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  init_triv_filt M (stoch_proc_filt M geom_proc borel)\n\ngoal (3 subgoals):\n 1. subalgebra N (G 0)\n 2. sets (G 0) = {{}, space N}\n 3. integrable N (discounted_value r (\\<lambda>m. der) matur)", "hence \"init_triv_filt N (stoch_proc_filt M geom_proc borel)\""], ["proof (prove)\nusing this:\n  init_triv_filt M (stoch_proc_filt M geom_proc borel)\n\ngoal (1 subgoal):\n 1. init_triv_filt N (stoch_proc_filt M geom_proc borel)", "using assms qprops\n          filt_equiv_triv_init[of nat_filtration N] stock_filtration\n          bernoulli_stream_equiv[of N] psgt pslt"], ["proof (prove)\nusing this:\n  init_triv_filt M (stoch_proc_filt M geom_proc borel)\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n  0 < q\n  q < 1\n  \\<lbrakk>filt_equiv nat_filtration M N; init_triv_filt M ?G\\<rbrakk>\n  \\<Longrightarrow> init_triv_filt N ?G\n  G = stoch_proc_filt M geom_proc borel\n  \\<lbrakk>N = bernoulli_stream ?q; 0 < p; p < 1; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> filt_equiv nat_filtration M N\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. init_triv_filt N (stoch_proc_filt M geom_proc borel)", "unfolding q_def"], ["proof (prove)\nusing this:\n  init_triv_filt M (stoch_proc_filt M geom_proc borel)\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n  0 < (1 + r - d) / (u - d)\n  (1 + r - d) / (u - d) < 1\n  \\<lbrakk>filt_equiv nat_filtration M N; init_triv_filt M ?G\\<rbrakk>\n  \\<Longrightarrow> init_triv_filt N ?G\n  G = stoch_proc_filt M geom_proc borel\n  \\<lbrakk>N = bernoulli_stream ?q; 0 < p; p < 1; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> filt_equiv nat_filtration M N\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. init_triv_filt N (stoch_proc_filt M geom_proc borel)", "by simp"], ["proof (state)\nthis:\n  init_triv_filt N (stoch_proc_filt M geom_proc borel)\n\ngoal (3 subgoals):\n 1. subalgebra N (G 0)\n 2. sets (G 0) = {{}, space N}\n 3. integrable N (discounted_value r (\\<lambda>m. der) matur)", "thus \"subalgebra N (G 0)\" and \"sets (G 0) = {{}, space N}\""], ["proof (prove)\nusing this:\n  init_triv_filt N (stoch_proc_filt M geom_proc borel)\n\ngoal (1 subgoal):\n 1. subalgebra N (G 0) &&& sets (G 0) = {{}, space N}", "using stock_filtration"], ["proof (prove)\nusing this:\n  init_triv_filt N (stoch_proc_filt M geom_proc borel)\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. subalgebra N (G 0) &&& sets (G 0) = {{}, space N}", "unfolding init_triv_filt_def\n          filtration_def bot_nat_def"], ["proof (prove)\nusing this:\n  ((\\<forall>t. subalgebra N (stoch_proc_filt M geom_proc borel t)) \\<and>\n   (\\<forall>s t.\n       s \\<le> t \\<longrightarrow>\n       subalgebra (stoch_proc_filt M geom_proc borel t)\n        (stoch_proc_filt M geom_proc borel s))) \\<and>\n  sets (stoch_proc_filt M geom_proc borel 0) = {{}, space N}\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. subalgebra N (G 0) &&& sets (G 0) = {{}, space N}", "by auto"], ["proof (state)\nthis:\n  subalgebra N (G 0)\n  sets (G 0) = {{}, space N}\n\ngoal (1 subgoal):\n 1. integrable N (discounted_value r (\\<lambda>m. der) matur)", "show \"integrable N (discounted_value r (\\<lambda>m. der) matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable N (discounted_value r (\\<lambda>m. der) matur)", "proof (rule bernoulli_discounted_integrable)"], ["proof (state)\ngoal (5 subgoals):\n 1. N = bernoulli_stream ?q\n 2. 0 < ?q\n 3. ?q < 1\n 4. der \\<in> borel_measurable (nat_filtration ?n)\n 5. - 1 < r", "show \"der \\<in> borel_measurable (nat_filtration matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (nat_filtration matur)", "using assms geom_rand_walk_borel_adapted\n              measurable_from_subalg stoch_proc_subalg_nat_filt stock_filtration"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  \\<lbrakk>subalgebra ?M ?F; ?f \\<in> ?F \\<rightarrow>\\<^sub>M ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> ?M \\<rightarrow>\\<^sub>M ?N\n  borel_adapt_stoch_proc nat_filtration ?X \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M ?X borel ?n)\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (nat_filtration matur)", "by blast"], ["proof (state)\nthis:\n  der \\<in> borel_measurable (nat_filtration matur)\n\ngoal (4 subgoals):\n 1. N = bernoulli_stream ?q\n 2. 0 < ?q\n 3. ?q < 1\n 4. - 1 < r", "show \"N = bernoulli_stream q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N = bernoulli_stream q", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. N = bernoulli_stream q", "unfolding q_def"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. N = bernoulli_stream ((1 + r - d) / (u - d))", "by simp"], ["proof (state)\nthis:\n  N = bernoulli_stream q\n\ngoal (3 subgoals):\n 1. 0 < q\n 2. q < 1\n 3. - 1 < r", "show \"0 < q\" \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "using qprops"], ["proof (prove)\nusing this:\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "by auto"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. - 1 < r", "qed (simp add: acceptable_rate)"], ["proof (state)\nthis:\n  integrable N (discounted_value r (\\<lambda>m. der) matur)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x\\<in>space N.\n     real_cond_exp N (G 0) (discounted_value r (\\<lambda>m. der) matur) x =\n     integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)\n\ngoal (1 subgoal):\n 1. init = V 0 w", "hence \"integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur) =\n        real_cond_exp N (G 0) (discounted_value r (\\<lambda>m. der) matur) w\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>space N.\n     real_cond_exp N (G 0) (discounted_value r (\\<lambda>m. der) matur) x =\n     integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur) =\n    real_cond_exp N (G 0) (discounted_value r (\\<lambda>m. der) matur) w", "using bernoulli_stream_space[of N q]"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>space N.\n     real_cond_exp N (G 0) (discounted_value r (\\<lambda>m. der) matur) x =\n     integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)\n  N = bernoulli_stream q \\<Longrightarrow> space N = streams UNIV\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur) =\n    real_cond_exp N (G 0) (discounted_value r (\\<lambda>m. der) matur) w", "by (simp add: assms(1) q_def)"], ["proof (state)\nthis:\n  integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur) =\n  real_cond_exp N (G 0) (discounted_value r (\\<lambda>m. der) matur) w\n\ngoal (1 subgoal):\n 1. init = V 0 w", "also"], ["proof (state)\nthis:\n  integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur) =\n  real_cond_exp N (G 0) (discounted_value r (\\<lambda>m. der) matur) w\n\ngoal (1 subgoal):\n 1. init = V 0 w", "have \"... = real_cond_exp N (stoch_proc_filt M geom_proc borel 0) (discounted_value r (\\<lambda>m. der) matur) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N (G 0) (discounted_value r (\\<lambda>m. der) matur) w =\n    real_cond_exp N (stoch_proc_filt M geom_proc borel 0)\n     (discounted_value r (\\<lambda>m. der) matur) w", "using stock_filtration"], ["proof (prove)\nusing this:\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. real_cond_exp N (G 0) (discounted_value r (\\<lambda>m. der) matur) w =\n    real_cond_exp N (stoch_proc_filt M geom_proc borel 0)\n     (discounted_value r (\\<lambda>m. der) matur) w", "by simp"], ["proof (state)\nthis:\n  real_cond_exp N (G 0) (discounted_value r (\\<lambda>m. der) matur) w =\n  real_cond_exp N (stoch_proc_filt M geom_proc borel 0)\n   (discounted_value r (\\<lambda>m. der) matur) w\n\ngoal (1 subgoal):\n 1. init = V 0 w", "also"], ["proof (state)\nthis:\n  real_cond_exp N (G 0) (discounted_value r (\\<lambda>m. der) matur) w =\n  real_cond_exp N (stoch_proc_filt M geom_proc borel 0)\n   (discounted_value r (\\<lambda>m. der) matur) w\n\ngoal (1 subgoal):\n 1. init = V 0 w", "have \"... = real_cond_exp N (stoch_proc_filt N geom_proc borel 0) (discounted_value r (\\<lambda>m. der) matur) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt M geom_proc borel 0)\n     (discounted_value r (\\<lambda>m. der) matur) w =\n    real_cond_exp N (stoch_proc_filt N geom_proc borel 0)\n     (discounted_value r (\\<lambda>m. der) matur) w", "using stoch_proc_filt_filt_equiv[of nat_filtration M N geom_proc]\n          bernoulli_stream_equiv[of N] q_def qprops assms pslt psgt"], ["proof (prove)\nusing this:\n  filt_equiv nat_filtration M N \\<Longrightarrow>\n  stoch_proc_filt M geom_proc ?P ?n = stoch_proc_filt N geom_proc ?P ?n\n  \\<lbrakk>N = bernoulli_stream ?q; 0 < p; p < 1; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> filt_equiv nat_filtration M N\n  q = (1 + r - d) / (u - d)\n  0 < q\n  q < 1\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n  p < 1\n  0 < p\n\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt M geom_proc borel 0)\n     (discounted_value r (\\<lambda>m. der) matur) w =\n    real_cond_exp N (stoch_proc_filt N geom_proc borel 0)\n     (discounted_value r (\\<lambda>m. der) matur) w", "by auto"], ["proof (state)\nthis:\n  real_cond_exp N (stoch_proc_filt M geom_proc borel 0)\n   (discounted_value r (\\<lambda>m. der) matur) w =\n  real_cond_exp N (stoch_proc_filt N geom_proc borel 0)\n   (discounted_value r (\\<lambda>m. der) matur) w\n\ngoal (1 subgoal):\n 1. init = V 0 w", "also"], ["proof (state)\nthis:\n  real_cond_exp N (stoch_proc_filt M geom_proc borel 0)\n   (discounted_value r (\\<lambda>m. der) matur) w =\n  real_cond_exp N (stoch_proc_filt N geom_proc borel 0)\n   (discounted_value r (\\<lambda>m. der) matur) w\n\ngoal (1 subgoal):\n 1. init = V 0 w", "have \"... = expl_cond_expect N (proj_stoch_proc geom_proc 0) (discounted_value r (\\<lambda>m. der) matur) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_cond_exp N (stoch_proc_filt N geom_proc borel 0)\n     (discounted_value r (\\<lambda>m. der) matur) w =\n    expl_cond_expect N (proj_stoch_proc geom_proc 0)\n     (discounted_value r (\\<lambda>m. der) matur) w", "proof (rule bernoulli_cond_exp)"], ["proof (state)\ngoal (4 subgoals):\n 1. N = bernoulli_stream ?q\n 2. 0 < ?q\n 3. ?q < 1\n 4. integrable N (discounted_value r (\\<lambda>m. der) matur)", "show \"N = bernoulli_stream q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N = bernoulli_stream q", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. N = bernoulli_stream q", "unfolding q_def"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. N = bernoulli_stream ((1 + r - d) / (u - d))", "by simp"], ["proof (state)\nthis:\n  N = bernoulli_stream q\n\ngoal (3 subgoals):\n 1. 0 < q\n 2. q < 1\n 3. integrable N (discounted_value r (\\<lambda>m. der) matur)", "show \"0 < q\" \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "using qprops"], ["proof (prove)\nusing this:\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "by auto"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. integrable N (discounted_value r (\\<lambda>m. der) matur)", "show \"integrable N (discounted_value r (\\<lambda>m. der) matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable N (discounted_value r (\\<lambda>m. der) matur)", "proof (rule bernoulli_discounted_integrable)"], ["proof (state)\ngoal (5 subgoals):\n 1. N = bernoulli_stream ?q\n 2. 0 < ?q\n 3. ?q < 1\n 4. der \\<in> borel_measurable (nat_filtration ?n)\n 5. - 1 < r", "show \"der \\<in> borel_measurable (nat_filtration matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (nat_filtration matur)", "using assms geom_rand_walk_borel_adapted\n              measurable_from_subalg stoch_proc_subalg_nat_filt stock_filtration"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  \\<lbrakk>subalgebra ?M ?F; ?f \\<in> ?F \\<rightarrow>\\<^sub>M ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> ?M \\<rightarrow>\\<^sub>M ?N\n  borel_adapt_stoch_proc nat_filtration ?X \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M ?X borel ?n)\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (nat_filtration matur)", "by blast"], ["proof (state)\nthis:\n  der \\<in> borel_measurable (nat_filtration matur)\n\ngoal (4 subgoals):\n 1. N = bernoulli_stream ?q\n 2. 0 < ?q\n 3. ?q < 1\n 4. - 1 < r", "show \"N = bernoulli_stream q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N = bernoulli_stream q", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. N = bernoulli_stream q", "unfolding q_def"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. N = bernoulli_stream ((1 + r - d) / (u - d))", "by simp"], ["proof (state)\nthis:\n  N = bernoulli_stream q\n\ngoal (3 subgoals):\n 1. 0 < q\n 2. q < 1\n 3. - 1 < r", "show \"0 < q\" \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "using qprops"], ["proof (prove)\nusing this:\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "by auto"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. - 1 < r", "qed (simp add: acceptable_rate)"], ["proof (state)\nthis:\n  integrable N (discounted_value r (\\<lambda>m. der) matur)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real_cond_exp N (stoch_proc_filt N geom_proc borel 0)\n   (discounted_value r (\\<lambda>m. der) matur) w =\n  expl_cond_expect N (proj_stoch_proc geom_proc 0)\n   (discounted_value r (\\<lambda>m. der) matur) w\n\ngoal (1 subgoal):\n 1. init = V 0 w", "finally"], ["proof (chain)\npicking this:\n  integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur) =\n  expl_cond_expect N (proj_stoch_proc geom_proc 0)\n   (discounted_value r (\\<lambda>m. der) matur) w", "show \"init = V 0 w\""], ["proof (prove)\nusing this:\n  integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur) =\n  expl_cond_expect N (proj_stoch_proc geom_proc 0)\n   (discounted_value r (\\<lambda>m. der) matur) w\n\ngoal (1 subgoal):\n 1. init = V 0 w", "unfolding init_def V_def rn_price_def"], ["proof (prove)\nusing this:\n  integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur) =\n  expl_cond_expect N (proj_stoch_proc geom_proc 0)\n   (discounted_value r (\\<lambda>m. der) matur) w\n\ngoal (1 subgoal):\n 1. integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur) =\n    expl_cond_expect N (proj_stoch_proc geom_proc 0)\n     (discounted_value r (\\<lambda>m. der) (matur - 0)) w", "by simp"], ["proof (state)\nthis:\n  init = V 0 w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  init = V 0 w\n\ngoal (2 subgoals):\n 1. 0 \\<le> matur \\<Longrightarrow> X 0 w = V 0 w\n 2. \\<And>n.\n       \\<lbrakk>n \\<le> matur \\<Longrightarrow> X n w = V n w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "finally"], ["proof (chain)\npicking this:\n  X 0 w = V 0 w", "show \"X 0 w = V 0 w\""], ["proof (prove)\nusing this:\n  X 0 w = V 0 w\n\ngoal (1 subgoal):\n 1. X 0 w = V 0 w", "."], ["proof (state)\nthis:\n  X 0 w = V 0 w\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n \\<le> matur \\<Longrightarrow> X n w = V n w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n \\<le> matur \\<Longrightarrow> X n w = V n w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "case (Suc n)"], ["proof (state)\nthis:\n  n \\<le> matur \\<Longrightarrow> X n w = V n w\n  Suc n \\<le> matur\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n \\<le> matur \\<Longrightarrow> X n w = V n w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "hence \"n < matur\""], ["proof (prove)\nusing this:\n  n \\<le> matur \\<Longrightarrow> X n w = V n w\n  Suc n \\<le> matur\n\ngoal (1 subgoal):\n 1. n < matur", "by simp"], ["proof (state)\nthis:\n  n < matur\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n \\<le> matur \\<Longrightarrow> X n w = V n w;\n        Suc n \\<le> matur\\<rbrakk>\n       \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. X (Suc n) w = V (Suc n) w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. X (Suc n) w = V (Suc n) w", "have \"X n w = V n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X n w = V n w", "using Suc"], ["proof (prove)\nusing this:\n  n \\<le> matur \\<Longrightarrow> X n w = V n w\n  Suc n \\<le> matur\n\ngoal (1 subgoal):\n 1. X n w = V n w", "by (simp add: Suc.hyps Suc.prems Suc_leD)"], ["proof (state)\nthis:\n  X n w = V n w\n\ngoal (1 subgoal):\n 1. X (Suc n) w = V (Suc n) w", "have \"0< 1+r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 1 + r", "using acceptable_rate"], ["proof (prove)\nusing this:\n  - 1 < r\n\ngoal (1 subgoal):\n 1. 0 < 1 + r", "by simp"], ["proof (state)\nthis:\n  0 < 1 + r\n\ngoal (1 subgoal):\n 1. X (Suc n) w = V (Suc n) w", "let ?m = \"matur - Suc n\""], ["proof (state)\ngoal (1 subgoal):\n 1. X (Suc n) w = V (Suc n) w", "have \"matur -n = Suc ?m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matur - n = Suc (matur - Suc n)", "by (simp add: Suc.prems Suc_diff_Suc Suc_le_lessD)"], ["proof (state)\nthis:\n  matur - n = Suc (matur - Suc n)\n\ngoal (1 subgoal):\n 1. X (Suc n) w = V (Suc n) w", "have \"(1+r) * V n w = q * V (Suc n) (pseudo_proj_True n w) + (1 - q) *V (Suc n) (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * V n w =\n    q * V (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * V (Suc n) (pseudo_proj_False n w)", "using rn_price_eq_ind qprops assms Suc q_def V_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?N = bernoulli_stream ?q; ?n < ?matur; 0 < ?q; ?q < 1;\n   ?der \\<in> borel_measurable (G ?matur)\\<rbrakk>\n  \\<Longrightarrow> (1 + r) * rn_price ?N ?der ?matur ?n ?w =\n                    ?q *\n                    rn_price ?N ?der ?matur (Suc ?n)\n                     (pseudo_proj_True ?n ?w) +\n                    (1 - ?q) *\n                    rn_price ?N ?der ?matur (Suc ?n)\n                     (pseudo_proj_False ?n ?w)\n  0 < q\n  q < 1\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n  n \\<le> matur \\<Longrightarrow> X n w = V n w\n  Suc n \\<le> matur\n  q = (1 + r - d) / (u - d)\n  V = rn_price N der matur\n\ngoal (1 subgoal):\n 1. (1 + r) * V n w =\n    q * V (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * V (Suc n) (pseudo_proj_False n w)", "by simp"], ["proof (state)\nthis:\n  (1 + r) * V n w =\n  q * V (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. X (Suc n) w = V (Suc n) w", "show \"X (Suc n) w = V (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X (Suc n) w = V (Suc n) w", "proof (cases \"snth w n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "case True"], ["proof (state)\nthis:\n  w !! n\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "hence pseq: \"pseudo_proj_True (Suc n) w = pseudo_proj_True (Suc n) (spick w n True)\""], ["proof (prove)\nusing this:\n  w !! n\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w = pseudo_proj_True (Suc n) (spick w n True)", "by (metis (mono_tags, lifting) pseudo_proj_True_stake_image spickI stake_Suc)"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) w = pseudo_proj_True (Suc n) (spick w n True)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"X (Suc n) w = cls_val_process Mkt (delta_hedging N der matur) (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X (Suc n) w = cls_val_process Mkt (delta_hedging N der matur) (Suc n) w", "unfolding X_def delta_hedging_def self_fin_delta_pf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt\n     (self_finance Mkt\n       (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n       (delta_pf N der matur) risk_free_asset)\n     (Suc n) w =\n    cls_val_process Mkt\n     (self_finance Mkt\n       (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n       (delta_pf N der matur) risk_free_asset)\n     (Suc n) w", "using  delta_pf_portfolio"], ["proof (prove)\nusing this:\n  portfolio (delta_pf ?N ?der ?matur)\n\ngoal (1 subgoal):\n 1. val_process Mkt\n     (self_finance Mkt\n       (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n       (delta_pf N der matur) risk_free_asset)\n     (Suc n) w =\n    cls_val_process Mkt\n     (self_finance Mkt\n       (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n       (delta_pf N der matur) risk_free_asset)\n     (Suc n) w", "unfolding self_financing_def"], ["proof (prove)\nusing this:\n  portfolio (delta_pf ?N ?der ?matur)\n\ngoal (1 subgoal):\n 1. val_process Mkt\n     (self_finance Mkt\n       (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n       (delta_pf N der matur) risk_free_asset)\n     (Suc n) w =\n    cls_val_process Mkt\n     (self_finance Mkt\n       (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n       (delta_pf N der matur) risk_free_asset)\n     (Suc n) w", "by (metis less_irrefl positive self_finance_charact self_financingE)"], ["proof (state)\nthis:\n  X (Suc n) w = cls_val_process Mkt (delta_hedging N der matur) (Suc n) w\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  X (Suc n) w = cls_val_process Mkt (delta_hedging N der matur) (Suc n) w\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = geom_proc (Suc n) w * \\<Delta> n w + (1 + r) * (X n w - geom_proc n w * \\<Delta> n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n    geom_proc (Suc n) w * \\<Delta> n w +\n    (1 + r) * (X n w - geom_proc n w * \\<Delta> n w)", "using delta_hedging_cls_val_process"], ["proof (prove)\nusing this:\n  cls_val_process Mkt (delta_hedging ?N ?der ?matur) (Suc ?n) ?w =\n  geom_proc (Suc ?n) ?w * delta_price ?N ?der ?matur ?n ?w +\n  (1 + r) *\n  (val_process Mkt (delta_hedging ?N ?der ?matur) ?n ?w -\n   geom_proc ?n ?w * delta_price ?N ?der ?matur ?n ?w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n    geom_proc (Suc n) w * \\<Delta> n w +\n    (1 + r) * (X n w - geom_proc n w * \\<Delta> n w)", "unfolding X_def \\<Delta>_def"], ["proof (prove)\nusing this:\n  cls_val_process Mkt (delta_hedging ?N ?der ?matur) (Suc ?n) ?w =\n  geom_proc (Suc ?n) ?w * delta_price ?N ?der ?matur ?n ?w +\n  (1 + r) *\n  (val_process Mkt (delta_hedging ?N ?der ?matur) ?n ?w -\n   geom_proc ?n ?w * delta_price ?N ?der ?matur ?n ?w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n    geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) *\n    (val_process Mkt (delta_hedging N der matur) n w -\n     geom_proc n w * delta_price N der matur n w)", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n  geom_proc (Suc n) w * \\<Delta> n w +\n  (1 + r) * (X n w - geom_proc n w * \\<Delta> n w)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n  geom_proc (Suc n) w * \\<Delta> n w +\n  (1 + r) * (X n w - geom_proc n w * \\<Delta> n w)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = u * geom_proc n w * \\<Delta> n w + (1 + r) * (X n w - geom_proc n w * \\<Delta> n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w * \\<Delta> n w +\n    (1 + r) * (X n w - geom_proc n w * \\<Delta> n w) =\n    u * geom_proc n w * \\<Delta> n w +\n    (1 + r) * (X n w - geom_proc n w * \\<Delta> n w)", "using True geometric_process"], ["proof (prove)\nusing this:\n  w !! n\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w * \\<Delta> n w +\n    (1 + r) * (X n w - geom_proc n w * \\<Delta> n w) =\n    u * geom_proc n w * \\<Delta> n w +\n    (1 + r) * (X n w - geom_proc n w * \\<Delta> n w)", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc n) w * \\<Delta> n w +\n  (1 + r) * (X n w - geom_proc n w * \\<Delta> n w) =\n  u * geom_proc n w * \\<Delta> n w +\n  (1 + r) * (X n w - geom_proc n w * \\<Delta> n w)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  geom_proc (Suc n) w * \\<Delta> n w +\n  (1 + r) * (X n w - geom_proc n w * \\<Delta> n w) =\n  u * geom_proc n w * \\<Delta> n w +\n  (1 + r) * (X n w - geom_proc n w * \\<Delta> n w)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = u * geom_proc n w * \\<Delta> n w + (1 + r) * X n w - (1+r) * geom_proc n w * \\<Delta> n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u * geom_proc n w * \\<Delta> n w +\n    (1 + r) * (X n w - geom_proc n w * \\<Delta> n w) =\n    u * geom_proc n w * \\<Delta> n w + (1 + r) * X n w -\n    (1 + r) * geom_proc n w * \\<Delta> n w", "by (simp add: right_diff_distrib)"], ["proof (state)\nthis:\n  u * geom_proc n w * \\<Delta> n w +\n  (1 + r) * (X n w - geom_proc n w * \\<Delta> n w) =\n  u * geom_proc n w * \\<Delta> n w + (1 + r) * X n w -\n  (1 + r) * geom_proc n w * \\<Delta> n w\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  u * geom_proc n w * \\<Delta> n w +\n  (1 + r) * (X n w - geom_proc n w * \\<Delta> n w) =\n  u * geom_proc n w * \\<Delta> n w + (1 + r) * X n w -\n  (1 + r) * geom_proc n w * \\<Delta> n w\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = (1+r) * X n w + geom_proc n w * \\<Delta> n w * u - geom_proc n w * \\<Delta> n w * (1 + r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u * geom_proc n w * \\<Delta> n w + (1 + r) * X n w -\n    (1 + r) * geom_proc n w * \\<Delta> n w =\n    (1 + r) * X n w + geom_proc n w * \\<Delta> n w * u -\n    geom_proc n w * \\<Delta> n w * (1 + r)", "by (simp add: mult.commute mult.left_commute)"], ["proof (state)\nthis:\n  u * geom_proc n w * \\<Delta> n w + (1 + r) * X n w -\n  (1 + r) * geom_proc n w * \\<Delta> n w =\n  (1 + r) * X n w + geom_proc n w * \\<Delta> n w * u -\n  geom_proc n w * \\<Delta> n w * (1 + r)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  u * geom_proc n w * \\<Delta> n w + (1 + r) * X n w -\n  (1 + r) * geom_proc n w * \\<Delta> n w =\n  (1 + r) * X n w + geom_proc n w * \\<Delta> n w * u -\n  geom_proc n w * \\<Delta> n w * (1 + r)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = (1+r)* X n w + geom_proc n w * \\<Delta> n w * (u - (1 + r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * X n w + geom_proc n w * \\<Delta> n w * u -\n    geom_proc n w * \\<Delta> n w * (1 + r) =\n    (1 + r) * X n w + geom_proc n w * \\<Delta> n w * (u - (1 + r))", "by (simp add: right_diff_distrib)"], ["proof (state)\nthis:\n  (1 + r) * X n w + geom_proc n w * \\<Delta> n w * u -\n  geom_proc n w * \\<Delta> n w * (1 + r) =\n  (1 + r) * X n w + geom_proc n w * \\<Delta> n w * (u - (1 + r))\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  (1 + r) * X n w + geom_proc n w * \\<Delta> n w * u -\n  geom_proc n w * \\<Delta> n w * (1 + r) =\n  (1 + r) * X n w + geom_proc n w * \\<Delta> n w * (u - (1 + r))\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = (1+r) * X n w + geom_proc n w * (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w))/\n            (geom_proc (Suc n) (spick w n True) - geom_proc (Suc n) (spick w n False)) * (u - (1 + r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * X n w + geom_proc n w * \\<Delta> n w * (u - (1 + r)) =\n    (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc (Suc n) (spick w n True) -\n     geom_proc (Suc n) (spick w n False)) *\n    (u - (1 + r))", "using Suc V_def"], ["proof (prove)\nusing this:\n  n \\<le> matur \\<Longrightarrow> X n w = V n w\n  Suc n \\<le> matur\n  V = rn_price N der matur\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w + geom_proc n w * \\<Delta> n w * (u - (1 + r)) =\n    (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc (Suc n) (spick w n True) -\n     geom_proc (Suc n) (spick w n False)) *\n    (u - (1 + r))", "by (simp add: \\<Delta>_def delta_price_def geom_rand_walk_diff_induct)"], ["proof (state)\nthis:\n  (1 + r) * X n w + geom_proc n w * \\<Delta> n w * (u - (1 + r)) =\n  (1 + r) * X n w +\n  geom_proc n w *\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n  (geom_proc (Suc n) (spick w n True) -\n   geom_proc (Suc n) (spick w n False)) *\n  (u - (1 + r))\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  (1 + r) * X n w + geom_proc n w * \\<Delta> n w * (u - (1 + r)) =\n  (1 + r) * X n w +\n  geom_proc n w *\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n  (geom_proc (Suc n) (spick w n True) -\n   geom_proc (Suc n) (spick w n False)) *\n  (u - (1 + r))\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = (1+r) * X n w + geom_proc n w * ((V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w))) /\n            (geom_proc n w * (u - d)) * (u - (1 + r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc (Suc n) (spick w n True) -\n     geom_proc (Suc n) (spick w n False)) *\n    (u - (1 + r)) =\n    (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc n w * (u - d)) *\n    (u - (1 + r))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc (Suc n) (spick w n True) -\n     geom_proc (Suc n) (spick w n False)) *\n    (u - (1 + r)) =\n    (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc n w * (u - d)) *\n    (u - (1 + r))", "have \"geom_proc (Suc n) (spick w n True) - geom_proc (Suc n) (spick w n False) =\n              geom_proc n w * (u - d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n True) -\n    geom_proc (Suc n) (spick w n False) =\n    geom_proc n w * (u - d)", "by (simp add: geom_rand_walk_diff_induct)"], ["proof (state)\nthis:\n  geom_proc (Suc n) (spick w n True) - geom_proc (Suc n) (spick w n False) =\n  geom_proc n w * (u - d)\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc (Suc n) (spick w n True) -\n     geom_proc (Suc n) (spick w n False)) *\n    (u - (1 + r)) =\n    (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc n w * (u - d)) *\n    (u - (1 + r))", "then"], ["proof (chain)\npicking this:\n  geom_proc (Suc n) (spick w n True) - geom_proc (Suc n) (spick w n False) =\n  geom_proc n w * (u - d)", "show ?thesis"], ["proof (prove)\nusing this:\n  geom_proc (Suc n) (spick w n True) - geom_proc (Suc n) (spick w n False) =\n  geom_proc n w * (u - d)\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc (Suc n) (spick w n True) -\n     geom_proc (Suc n) (spick w n False)) *\n    (u - (1 + r)) =\n    (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc n w * (u - d)) *\n    (u - (1 + r))", "by simp"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  geom_proc n w *\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n  (geom_proc (Suc n) (spick w n True) -\n   geom_proc (Suc n) (spick w n False)) *\n  (u - (1 + r)) =\n  (1 + r) * X n w +\n  geom_proc n w *\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n  (geom_proc n w * (u - d)) *\n  (u - (1 + r))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  geom_proc n w *\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n  (geom_proc (Suc n) (spick w n True) -\n   geom_proc (Suc n) (spick w n False)) *\n  (u - (1 + r)) =\n  (1 + r) * X n w +\n  geom_proc n w *\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n  (geom_proc n w * (u - d)) *\n  (u - (1 + r))\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  geom_proc n w *\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n  (geom_proc (Suc n) (spick w n True) -\n   geom_proc (Suc n) (spick w n False)) *\n  (u - (1 + r)) =\n  (1 + r) * X n w +\n  geom_proc n w *\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n  (geom_proc n w * (u - d)) *\n  (u - (1 + r))\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = (1+r) * X n w + ((V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)))* (u - (1 + r))/ (u-d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc n w * (u - d)) *\n    (u - (1 + r)) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (u - (1 + r)) /\n    (u - d)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc n w * (u - d)) *\n    (u - (1 + r)) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (u - (1 + r)) /\n    (u - d)", "have \"geom_proc n w \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc n w \\<noteq> 0", "by (metis S0_positive down_lt_up down_positive geom_rand_walk_strictly_positive less_irrefl)"], ["proof (state)\nthis:\n  geom_proc n w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc n w * (u - d)) *\n    (u - (1 + r)) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (u - (1 + r)) /\n    (u - d)", "then"], ["proof (chain)\npicking this:\n  geom_proc n w \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  geom_proc n w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc n w * (u - d)) *\n    (u - (1 + r)) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (u - (1 + r)) /\n    (u - d)", "by simp"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  geom_proc n w *\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n  (geom_proc n w * (u - d)) *\n  (u - (1 + r)) =\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  (u - (1 + r)) /\n  (u - d)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  geom_proc n w *\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n  (geom_proc n w * (u - d)) *\n  (u - (1 + r)) =\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  (u - (1 + r)) /\n  (u - d)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  geom_proc n w *\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n  (geom_proc n w * (u - d)) *\n  (u - (1 + r)) =\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  (u - (1 + r)) /\n  (u - d)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = (1+r) * X n w + ((V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w))* (1 - q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (u - (1 + r)) /\n    (u - d) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (1 - q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (u - (1 + r)) /\n    (u - d) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (1 - q)", "have \"1 - q = 1 - (1 + r - d)/(u -d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 - q = 1 - (1 + r - d) / (u - d)", "unfolding q_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 - (1 + r - d) / (u - d) = 1 - (1 + r - d) / (u - d)", "by simp"], ["proof (state)\nthis:\n  1 - q = 1 - (1 + r - d) / (u - d)\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (u - (1 + r)) /\n    (u - d) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (1 - q)", "also"], ["proof (state)\nthis:\n  1 - q = 1 - (1 + r - d) / (u - d)\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (u - (1 + r)) /\n    (u - d) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (1 - q)", "have \"... = (u - d)/(u - d) - (1 + r - d)/(u -d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 - (1 + r - d) / (u - d) = (u - d) / (u - d) - (1 + r - d) / (u - d)", "using down_lt_up"], ["proof (prove)\nusing this:\n  d < u\n\ngoal (1 subgoal):\n 1. 1 - (1 + r - d) / (u - d) = (u - d) / (u - d) - (1 + r - d) / (u - d)", "by simp"], ["proof (state)\nthis:\n  1 - (1 + r - d) / (u - d) = (u - d) / (u - d) - (1 + r - d) / (u - d)\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (u - (1 + r)) /\n    (u - d) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (1 - q)", "also"], ["proof (state)\nthis:\n  1 - (1 + r - d) / (u - d) = (u - d) / (u - d) - (1 + r - d) / (u - d)\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (u - (1 + r)) /\n    (u - d) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (1 - q)", "have \"... = (u - d - (1 + r - d))/(u - d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u - d) / (u - d) - (1 + r - d) / (u - d) =\n    (u - d - (1 + r - d)) / (u - d)", "using diff_divide_distrib[of \"u - d\" \"1 + r -d\"]"], ["proof (prove)\nusing this:\n  (u - d - (1 + r - d)) / ?c = (u - d) / ?c - (1 + r - d) / ?c\n\ngoal (1 subgoal):\n 1. (u - d) / (u - d) - (1 + r - d) / (u - d) =\n    (u - d - (1 + r - d)) / (u - d)", "by simp"], ["proof (state)\nthis:\n  (u - d) / (u - d) - (1 + r - d) / (u - d) =\n  (u - d - (1 + r - d)) / (u - d)\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (u - (1 + r)) /\n    (u - d) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (1 - q)", "also"], ["proof (state)\nthis:\n  (u - d) / (u - d) - (1 + r - d) / (u - d) =\n  (u - d - (1 + r - d)) / (u - d)\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (u - (1 + r)) /\n    (u - d) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (1 - q)", "have \"... = (u - (1+r))/(u-d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u - d - (1 + r - d)) / (u - d) = (u - (1 + r)) / (u - d)", "by simp"], ["proof (state)\nthis:\n  (u - d - (1 + r - d)) / (u - d) = (u - (1 + r)) / (u - d)\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (u - (1 + r)) /\n    (u - d) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (1 - q)", "finally"], ["proof (chain)\npicking this:\n  1 - q = (u - (1 + r)) / (u - d)", "have \"1 - q = (u - (1+r))/(u-d)\""], ["proof (prove)\nusing this:\n  1 - q = (u - (1 + r)) / (u - d)\n\ngoal (1 subgoal):\n 1. 1 - q = (u - (1 + r)) / (u - d)", "."], ["proof (state)\nthis:\n  1 - q = (u - (1 + r)) / (u - d)\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (u - (1 + r)) /\n    (u - d) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (1 - q)", "thus ?thesis"], ["proof (prove)\nusing this:\n  1 - q = (u - (1 + r)) / (u - d)\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (u - (1 + r)) /\n    (u - d) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (1 - q)", "by simp"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  (u - (1 + r)) /\n  (u - d) =\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  (1 - q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  (u - (1 + r)) /\n  (u - d) =\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  (1 - q)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  (u - (1 + r)) /\n  (u - d) =\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  (1 - q)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = (1+r) * X n w + (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n            (1 - q) * V (Suc n) (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (1 - q) =\n    (1 + r) * X n w + (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n    (1 - q) * V (Suc n) (pseudo_proj_False n w)", "by (simp add: mult.commute right_diff_distrib)"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  (1 - q) =\n  (1 + r) * X n w + (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n  (1 - q) * V (Suc n) (pseudo_proj_False n w)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  (1 - q) =\n  (1 + r) * X n w + (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n  (1 - q) * V (Suc n) (pseudo_proj_False n w)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = (1+r) * V n w + (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n            (1 - q) * V (Suc n) (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * X n w + (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n    (1 - q) * V (Suc n) (pseudo_proj_False n w) =\n    (1 + r) * V n w + (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n    (1 - q) * V (Suc n) (pseudo_proj_False n w)", "using \\<open>X n w = V n w\\<close>"], ["proof (prove)\nusing this:\n  X n w = V n w\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w + (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n    (1 - q) * V (Suc n) (pseudo_proj_False n w) =\n    (1 + r) * V n w + (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n    (1 - q) * V (Suc n) (pseudo_proj_False n w)", "by simp"], ["proof (state)\nthis:\n  (1 + r) * X n w + (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n  (1 - q) * V (Suc n) (pseudo_proj_False n w) =\n  (1 + r) * V n w + (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n  (1 - q) * V (Suc n) (pseudo_proj_False n w)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  (1 + r) * X n w + (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n  (1 - q) * V (Suc n) (pseudo_proj_False n w) =\n  (1 + r) * V n w + (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n  (1 - q) * V (Suc n) (pseudo_proj_False n w)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = q * V (Suc n) (pseudo_proj_True n w) + (1 - q) * V (Suc n) (pseudo_proj_False n w) +\n            (1 - q) * V (Suc n) (pseudo_proj_True n w) - (1 - q) * V (Suc n) (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * V n w + (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n    (1 - q) * V (Suc n) (pseudo_proj_False n w) =\n    q * V (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * V (Suc n) (pseudo_proj_False n w) +\n    (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n    (1 - q) * V (Suc n) (pseudo_proj_False n w)", "using assms Suc rn_price_eq_ind[of N q n matur der w] \\<open>n < matur\\<close> qprops"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n  n \\<le> matur \\<Longrightarrow> X n w = V n w\n  Suc n \\<le> matur\n  \\<lbrakk>N = bernoulli_stream q; n < matur; 0 < q; q < 1;\n   der \\<in> borel_measurable (G matur)\\<rbrakk>\n  \\<Longrightarrow> (1 + r) * rn_price N der matur n w =\n                    q *\n                    rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n                    (1 - q) *\n                    rn_price N der matur (Suc n) (pseudo_proj_False n w)\n  n < matur\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. (1 + r) * V n w + (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n    (1 - q) * V (Suc n) (pseudo_proj_False n w) =\n    q * V (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * V (Suc n) (pseudo_proj_False n w) +\n    (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n    (1 - q) * V (Suc n) (pseudo_proj_False n w)", "unfolding V_def q_def"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n  n \\<le> matur \\<Longrightarrow> X n w = rn_price N der matur n w\n  Suc n \\<le> matur\n  \\<lbrakk>N = bernoulli_stream ((1 + r - d) / (u - d)); n < matur;\n   0 < (1 + r - d) / (u - d); (1 + r - d) / (u - d) < 1;\n   der \\<in> borel_measurable (G matur)\\<rbrakk>\n  \\<Longrightarrow> (1 + r) * rn_price N der matur n w =\n                    (1 + r - d) / (u - d) *\n                    rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n                    (1 - (1 + r - d) / (u - d)) *\n                    rn_price N der matur (Suc n) (pseudo_proj_False n w)\n  n < matur\n  0 < (1 + r - d) / (u - d)\n  (1 + r - d) / (u - d) < 1\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w +\n    (1 - (1 + r - d) / (u - d)) *\n    rn_price N der matur (Suc n) (pseudo_proj_True n w) -\n    (1 - (1 + r - d) / (u - d)) *\n    rn_price N der matur (Suc n) (pseudo_proj_False n w) =\n    (1 + r - d) / (u - d) *\n    rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - (1 + r - d) / (u - d)) *\n    rn_price N der matur (Suc n) (pseudo_proj_False n w) +\n    (1 - (1 + r - d) / (u - d)) *\n    rn_price N der matur (Suc n) (pseudo_proj_True n w) -\n    (1 - (1 + r - d) / (u - d)) *\n    rn_price N der matur (Suc n) (pseudo_proj_False n w)", "by simp"], ["proof (state)\nthis:\n  (1 + r) * V n w + (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n  (1 - q) * V (Suc n) (pseudo_proj_False n w) =\n  q * V (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_False n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n  (1 - q) * V (Suc n) (pseudo_proj_False n w)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  (1 + r) * V n w + (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n  (1 - q) * V (Suc n) (pseudo_proj_False n w) =\n  q * V (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_False n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n  (1 - q) * V (Suc n) (pseudo_proj_False n w)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = q * V (Suc n) (pseudo_proj_True n w) + (1 - q) * V (Suc n) (pseudo_proj_True n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q * V (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * V (Suc n) (pseudo_proj_False n w) +\n    (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n    (1 - q) * V (Suc n) (pseudo_proj_False n w) =\n    q * V (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * V (Suc n) (pseudo_proj_True n w)", "by simp"], ["proof (state)\nthis:\n  q * V (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_False n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n  (1 - q) * V (Suc n) (pseudo_proj_False n w) =\n  q * V (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_True n w)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  q * V (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_False n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_True n w) -\n  (1 - q) * V (Suc n) (pseudo_proj_False n w) =\n  q * V (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_True n w)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = V (Suc n) (pseudo_proj_True n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q * V (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * V (Suc n) (pseudo_proj_True n w) =\n    V (Suc n) (pseudo_proj_True n w)", "using distrib_right[of q \"1 - q\"  \"V (Suc n) (pseudo_proj_True n w)\"]"], ["proof (prove)\nusing this:\n  (q + (1 - q)) * V (Suc n) (pseudo_proj_True n w) =\n  q * V (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_True n w)\n\ngoal (1 subgoal):\n 1. q * V (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * V (Suc n) (pseudo_proj_True n w) =\n    V (Suc n) (pseudo_proj_True n w)", "by simp"], ["proof (state)\nthis:\n  q * V (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_True n w) =\n  V (Suc n) (pseudo_proj_True n w)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  q * V (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_True n w) =\n  V (Suc n) (pseudo_proj_True n w)\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = V (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_True n w) = V (Suc n) w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_True n w) = V (Suc n) w", "have \"V (Suc n) \\<in> borel_measurable (G (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V (Suc n) \\<in> borel_measurable (G (Suc n))", "unfolding V_def q_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. rn_price N der matur (Suc n) \\<in> borel_measurable (G (Suc n))", "proof (rule rn_price_borel_adapt)"], ["proof (state)\ngoal (5 subgoals):\n 1. der \\<in> borel_measurable (G matur)\n 2. N = bernoulli_stream ?q\n 3. 0 < ?q\n 4. ?q < 1\n 5. Suc n \\<le> matur", "show \"der \\<in> borel_measurable (G matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (G matur)", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (G matur)", "by simp"], ["proof (state)\nthis:\n  der \\<in> borel_measurable (G matur)\n\ngoal (4 subgoals):\n 1. N = bernoulli_stream ?q\n 2. 0 < ?q\n 3. ?q < 1\n 4. Suc n \\<le> matur", "show \"N = bernoulli_stream q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N = bernoulli_stream q", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. N = bernoulli_stream q", "unfolding q_def"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. N = bernoulli_stream ((1 + r - d) / (u - d))", "by simp"], ["proof (state)\nthis:\n  N = bernoulli_stream q\n\ngoal (3 subgoals):\n 1. 0 < q\n 2. q < 1\n 3. Suc n \\<le> matur", "show \"0 < q\" and \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "using qprops"], ["proof (prove)\nusing this:\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "by auto"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. Suc n \\<le> matur", "show \"Suc n \\<le> matur\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc n \\<le> matur", "using Suc"], ["proof (prove)\nusing this:\n  n \\<le> matur \\<Longrightarrow> X n w = V n w\n  Suc n \\<le> matur\n\ngoal (1 subgoal):\n 1. Suc n \\<le> matur", "by simp"], ["proof (state)\nthis:\n  Suc n \\<le> matur\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  V (Suc n) \\<in> borel_measurable (G (Suc n))\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_True n w) = V (Suc n) w", "hence \"V (Suc n) (pseudo_proj_True n w) = V (Suc n) (pseudo_proj_True (Suc n) (pseudo_proj_True n w))\""], ["proof (prove)\nusing this:\n  V (Suc n) \\<in> borel_measurable (G (Suc n))\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_True n w) =\n    V (Suc n) (pseudo_proj_True (Suc n) (pseudo_proj_True n w))", "using  geom_proc_filt_info[of \"V (Suc n)\" \"Suc n\"]"], ["proof (prove)\nusing this:\n  V (Suc n) \\<in> borel_measurable (G (Suc n))\n  V (Suc n) \\<in> borel_measurable (G (Suc n)) \\<Longrightarrow>\n  V (Suc n) ?w = V (Suc n) (pseudo_proj_True (Suc n) ?w)\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_True n w) =\n    V (Suc n) (pseudo_proj_True (Suc n) (pseudo_proj_True n w))", "by simp"], ["proof (state)\nthis:\n  V (Suc n) (pseudo_proj_True n w) =\n  V (Suc n) (pseudo_proj_True (Suc n) (pseudo_proj_True n w))\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_True n w) = V (Suc n) w", "also"], ["proof (state)\nthis:\n  V (Suc n) (pseudo_proj_True n w) =\n  V (Suc n) (pseudo_proj_True (Suc n) (pseudo_proj_True n w))\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_True n w) = V (Suc n) w", "have \"... = V (Suc n) (pseudo_proj_True (Suc n) w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_True (Suc n) (pseudo_proj_True n w)) =\n    V (Suc n) (pseudo_proj_True (Suc n) w)", "using True"], ["proof (prove)\nusing this:\n  w !! n\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_True (Suc n) (pseudo_proj_True n w)) =\n    V (Suc n) (pseudo_proj_True (Suc n) w)", "by (simp add: pseq spick_eq_pseudo_proj_True)"], ["proof (state)\nthis:\n  V (Suc n) (pseudo_proj_True (Suc n) (pseudo_proj_True n w)) =\n  V (Suc n) (pseudo_proj_True (Suc n) w)\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_True n w) = V (Suc n) w", "also"], ["proof (state)\nthis:\n  V (Suc n) (pseudo_proj_True (Suc n) (pseudo_proj_True n w)) =\n  V (Suc n) (pseudo_proj_True (Suc n) w)\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_True n w) = V (Suc n) w", "have \"... = V (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_True (Suc n) w) = V (Suc n) w", "using \\<open>V (Suc n) \\<in> borel_measurable (G (Suc n))\\<close>\n              geom_proc_filt_info[of \"V (Suc n)\" \"Suc n\"]"], ["proof (prove)\nusing this:\n  V (Suc n) \\<in> borel_measurable (G (Suc n))\n  V (Suc n) \\<in> borel_measurable (G (Suc n)) \\<Longrightarrow>\n  V (Suc n) ?w = V (Suc n) (pseudo_proj_True (Suc n) ?w)\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_True (Suc n) w) = V (Suc n) w", "by simp"], ["proof (state)\nthis:\n  V (Suc n) (pseudo_proj_True (Suc n) w) = V (Suc n) w\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_True n w) = V (Suc n) w", "finally"], ["proof (chain)\npicking this:\n  V (Suc n) (pseudo_proj_True n w) = V (Suc n) w", "show ?thesis"], ["proof (prove)\nusing this:\n  V (Suc n) (pseudo_proj_True n w) = V (Suc n) w\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_True n w) = V (Suc n) w", "."], ["proof (state)\nthis:\n  V (Suc n) (pseudo_proj_True n w) = V (Suc n) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  V (Suc n) (pseudo_proj_True n w) = V (Suc n) w\n\ngoal (2 subgoals):\n 1. w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w\n 2. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "finally"], ["proof (chain)\npicking this:\n  X (Suc n) w = V (Suc n) w", "show \"X (Suc n) w = V (Suc n) w\""], ["proof (prove)\nusing this:\n  X (Suc n) w = V (Suc n) w\n\ngoal (1 subgoal):\n 1. X (Suc n) w = V (Suc n) w", "."], ["proof (state)\nthis:\n  X (Suc n) w = V (Suc n) w\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "case False"], ["proof (state)\nthis:\n  \\<not> w !! n\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "hence pseq: \"pseudo_proj_True (Suc n) w = pseudo_proj_True (Suc n) (spick w n False)\""], ["proof (prove)\nusing this:\n  \\<not> w !! n\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w = pseudo_proj_True (Suc n) (spick w n False)", "using filtration"], ["proof (prove)\nusing this:\n  \\<not> w !! n\n  Filtration.filtration M G\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w = pseudo_proj_True (Suc n) (spick w n False)", "by (metis (full_types) pseudo_proj_True_def spickI stake_Suc)"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) w = pseudo_proj_True (Suc n) (spick w n False)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"X (Suc n) w = cls_val_process Mkt (delta_hedging N der matur) (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X (Suc n) w = cls_val_process Mkt (delta_hedging N der matur) (Suc n) w", "unfolding X_def delta_hedging_def self_fin_delta_pf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt\n     (self_finance Mkt\n       (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n       (delta_pf N der matur) risk_free_asset)\n     (Suc n) w =\n    cls_val_process Mkt\n     (self_finance Mkt\n       (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n       (delta_pf N der matur) risk_free_asset)\n     (Suc n) w", "using  delta_pf_portfolio"], ["proof (prove)\nusing this:\n  portfolio (delta_pf ?N ?der ?matur)\n\ngoal (1 subgoal):\n 1. val_process Mkt\n     (self_finance Mkt\n       (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n       (delta_pf N der matur) risk_free_asset)\n     (Suc n) w =\n    cls_val_process Mkt\n     (self_finance Mkt\n       (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n       (delta_pf N der matur) risk_free_asset)\n     (Suc n) w", "unfolding self_financing_def"], ["proof (prove)\nusing this:\n  portfolio (delta_pf ?N ?der ?matur)\n\ngoal (1 subgoal):\n 1. val_process Mkt\n     (self_finance Mkt\n       (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n       (delta_pf N der matur) risk_free_asset)\n     (Suc n) w =\n    cls_val_process Mkt\n     (self_finance Mkt\n       (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n       (delta_pf N der matur) risk_free_asset)\n     (Suc n) w", "by (metis less_irrefl positive self_finance_charact self_financingE)"], ["proof (state)\nthis:\n  X (Suc n) w = cls_val_process Mkt (delta_hedging N der matur) (Suc n) w\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  X (Suc n) w = cls_val_process Mkt (delta_hedging N der matur) (Suc n) w\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = geom_proc (Suc n) w * \\<Delta> n w + (1 + r) * (X n w - geom_proc n w * \\<Delta> n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n    geom_proc (Suc n) w * \\<Delta> n w +\n    (1 + r) * (X n w - geom_proc n w * \\<Delta> n w)", "using delta_hedging_cls_val_process"], ["proof (prove)\nusing this:\n  cls_val_process Mkt (delta_hedging ?N ?der ?matur) (Suc ?n) ?w =\n  geom_proc (Suc ?n) ?w * delta_price ?N ?der ?matur ?n ?w +\n  (1 + r) *\n  (val_process Mkt (delta_hedging ?N ?der ?matur) ?n ?w -\n   geom_proc ?n ?w * delta_price ?N ?der ?matur ?n ?w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n    geom_proc (Suc n) w * \\<Delta> n w +\n    (1 + r) * (X n w - geom_proc n w * \\<Delta> n w)", "unfolding X_def \\<Delta>_def"], ["proof (prove)\nusing this:\n  cls_val_process Mkt (delta_hedging ?N ?der ?matur) (Suc ?n) ?w =\n  geom_proc (Suc ?n) ?w * delta_price ?N ?der ?matur ?n ?w +\n  (1 + r) *\n  (val_process Mkt (delta_hedging ?N ?der ?matur) ?n ?w -\n   geom_proc ?n ?w * delta_price ?N ?der ?matur ?n ?w)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n    geom_proc (Suc n) w * delta_price N der matur n w +\n    (1 + r) *\n    (val_process Mkt (delta_hedging N der matur) n w -\n     geom_proc n w * delta_price N der matur n w)", "by simp"], ["proof (state)\nthis:\n  cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n  geom_proc (Suc n) w * \\<Delta> n w +\n  (1 + r) * (X n w - geom_proc n w * \\<Delta> n w)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt (delta_hedging N der matur) (Suc n) w =\n  geom_proc (Suc n) w * \\<Delta> n w +\n  (1 + r) * (X n w - geom_proc n w * \\<Delta> n w)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = d * geom_proc n w * \\<Delta> n w + (1 + r) * (X n w - geom_proc n w * \\<Delta> n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w * \\<Delta> n w +\n    (1 + r) * (X n w - geom_proc n w * \\<Delta> n w) =\n    d * geom_proc n w * \\<Delta> n w +\n    (1 + r) * (X n w - geom_proc n w * \\<Delta> n w)", "using False geometric_process"], ["proof (prove)\nusing this:\n  \\<not> w !! n\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w * \\<Delta> n w +\n    (1 + r) * (X n w - geom_proc n w * \\<Delta> n w) =\n    d * geom_proc n w * \\<Delta> n w +\n    (1 + r) * (X n w - geom_proc n w * \\<Delta> n w)", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc n) w * \\<Delta> n w +\n  (1 + r) * (X n w - geom_proc n w * \\<Delta> n w) =\n  d * geom_proc n w * \\<Delta> n w +\n  (1 + r) * (X n w - geom_proc n w * \\<Delta> n w)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  geom_proc (Suc n) w * \\<Delta> n w +\n  (1 + r) * (X n w - geom_proc n w * \\<Delta> n w) =\n  d * geom_proc n w * \\<Delta> n w +\n  (1 + r) * (X n w - geom_proc n w * \\<Delta> n w)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = d * geom_proc n w * \\<Delta> n w + (1 + r) * X n w - (1+r) * geom_proc n w * \\<Delta> n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d * geom_proc n w * \\<Delta> n w +\n    (1 + r) * (X n w - geom_proc n w * \\<Delta> n w) =\n    d * geom_proc n w * \\<Delta> n w + (1 + r) * X n w -\n    (1 + r) * geom_proc n w * \\<Delta> n w", "by (simp add: right_diff_distrib)"], ["proof (state)\nthis:\n  d * geom_proc n w * \\<Delta> n w +\n  (1 + r) * (X n w - geom_proc n w * \\<Delta> n w) =\n  d * geom_proc n w * \\<Delta> n w + (1 + r) * X n w -\n  (1 + r) * geom_proc n w * \\<Delta> n w\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  d * geom_proc n w * \\<Delta> n w +\n  (1 + r) * (X n w - geom_proc n w * \\<Delta> n w) =\n  d * geom_proc n w * \\<Delta> n w + (1 + r) * X n w -\n  (1 + r) * geom_proc n w * \\<Delta> n w\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = (1+r) * X n w + geom_proc n w * \\<Delta> n w * d - geom_proc n w * \\<Delta> n w * (1 + r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d * geom_proc n w * \\<Delta> n w + (1 + r) * X n w -\n    (1 + r) * geom_proc n w * \\<Delta> n w =\n    (1 + r) * X n w + geom_proc n w * \\<Delta> n w * d -\n    geom_proc n w * \\<Delta> n w * (1 + r)", "by (simp add: mult.commute mult.left_commute)"], ["proof (state)\nthis:\n  d * geom_proc n w * \\<Delta> n w + (1 + r) * X n w -\n  (1 + r) * geom_proc n w * \\<Delta> n w =\n  (1 + r) * X n w + geom_proc n w * \\<Delta> n w * d -\n  geom_proc n w * \\<Delta> n w * (1 + r)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  d * geom_proc n w * \\<Delta> n w + (1 + r) * X n w -\n  (1 + r) * geom_proc n w * \\<Delta> n w =\n  (1 + r) * X n w + geom_proc n w * \\<Delta> n w * d -\n  geom_proc n w * \\<Delta> n w * (1 + r)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = (1+r)* X n w + geom_proc n w * \\<Delta> n w * (d - (1 + r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * X n w + geom_proc n w * \\<Delta> n w * d -\n    geom_proc n w * \\<Delta> n w * (1 + r) =\n    (1 + r) * X n w + geom_proc n w * \\<Delta> n w * (d - (1 + r))", "by (simp add: right_diff_distrib)"], ["proof (state)\nthis:\n  (1 + r) * X n w + geom_proc n w * \\<Delta> n w * d -\n  geom_proc n w * \\<Delta> n w * (1 + r) =\n  (1 + r) * X n w + geom_proc n w * \\<Delta> n w * (d - (1 + r))\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  (1 + r) * X n w + geom_proc n w * \\<Delta> n w * d -\n  geom_proc n w * \\<Delta> n w * (1 + r) =\n  (1 + r) * X n w + geom_proc n w * \\<Delta> n w * (d - (1 + r))\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = (1+r) * X n w + geom_proc n w * (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w))/\n            (geom_proc (Suc n) (spick w n True) - geom_proc (Suc n) (spick w n False)) * (d - (1 + r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * X n w + geom_proc n w * \\<Delta> n w * (d - (1 + r)) =\n    (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc (Suc n) (spick w n True) -\n     geom_proc (Suc n) (spick w n False)) *\n    (d - (1 + r))", "using Suc V_def"], ["proof (prove)\nusing this:\n  n \\<le> matur \\<Longrightarrow> X n w = V n w\n  Suc n \\<le> matur\n  V = rn_price N der matur\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w + geom_proc n w * \\<Delta> n w * (d - (1 + r)) =\n    (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc (Suc n) (spick w n True) -\n     geom_proc (Suc n) (spick w n False)) *\n    (d - (1 + r))", "by (simp add: \\<Delta>_def delta_price_def geom_rand_walk_diff_induct)"], ["proof (state)\nthis:\n  (1 + r) * X n w + geom_proc n w * \\<Delta> n w * (d - (1 + r)) =\n  (1 + r) * X n w +\n  geom_proc n w *\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n  (geom_proc (Suc n) (spick w n True) -\n   geom_proc (Suc n) (spick w n False)) *\n  (d - (1 + r))\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  (1 + r) * X n w + geom_proc n w * \\<Delta> n w * (d - (1 + r)) =\n  (1 + r) * X n w +\n  geom_proc n w *\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n  (geom_proc (Suc n) (spick w n True) -\n   geom_proc (Suc n) (spick w n False)) *\n  (d - (1 + r))\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = (1+r) * X n w + geom_proc n w * ((V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w))) /\n            (geom_proc n w * (u - d)) * (d - (1 + r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc (Suc n) (spick w n True) -\n     geom_proc (Suc n) (spick w n False)) *\n    (d - (1 + r)) =\n    (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc n w * (u - d)) *\n    (d - (1 + r))", "by (simp add: geom_rand_walk_diff_induct)"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  geom_proc n w *\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n  (geom_proc (Suc n) (spick w n True) -\n   geom_proc (Suc n) (spick w n False)) *\n  (d - (1 + r)) =\n  (1 + r) * X n w +\n  geom_proc n w *\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n  (geom_proc n w * (u - d)) *\n  (d - (1 + r))\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  geom_proc n w *\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n  (geom_proc (Suc n) (spick w n True) -\n   geom_proc (Suc n) (spick w n False)) *\n  (d - (1 + r)) =\n  (1 + r) * X n w +\n  geom_proc n w *\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n  (geom_proc n w * (u - d)) *\n  (d - (1 + r))\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = (1+r) * X n w + ((V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)))* (d - (1 + r))/ (u-d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc n w * (u - d)) *\n    (d - (1 + r)) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (d - (1 + r)) /\n    (u - d)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc n w * (u - d)) *\n    (d - (1 + r)) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (d - (1 + r)) /\n    (u - d)", "have \"geom_proc n w \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc n w \\<noteq> 0", "by (metis S0_positive down_lt_up down_positive geom_rand_walk_strictly_positive less_irrefl)"], ["proof (state)\nthis:\n  geom_proc n w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc n w * (u - d)) *\n    (d - (1 + r)) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (d - (1 + r)) /\n    (u - d)", "then"], ["proof (chain)\npicking this:\n  geom_proc n w \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  geom_proc n w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    geom_proc n w *\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n    (geom_proc n w * (u - d)) *\n    (d - (1 + r)) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (d - (1 + r)) /\n    (u - d)", "by simp"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  geom_proc n w *\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n  (geom_proc n w * (u - d)) *\n  (d - (1 + r)) =\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  (d - (1 + r)) /\n  (u - d)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  geom_proc n w *\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n  (geom_proc n w * (u - d)) *\n  (d - (1 + r)) =\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  (d - (1 + r)) /\n  (u - d)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  geom_proc n w *\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) /\n  (geom_proc n w * (u - d)) *\n  (d - (1 + r)) =\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  (d - (1 + r)) /\n  (u - d)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = (1+r) * X n w + ((V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w))* (-q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (d - (1 + r)) /\n    (u - d) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    - q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (d - (1 + r)) /\n    (u - d) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    - q", "have \"0-q = 0-(1 + r - d)/(u -d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 - q = 0 - (1 + r - d) / (u - d)", "unfolding q_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 - (1 + r - d) / (u - d) = 0 - (1 + r - d) / (u - d)", "by simp"], ["proof (state)\nthis:\n  0 - q = 0 - (1 + r - d) / (u - d)\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (d - (1 + r)) /\n    (u - d) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    - q", "also"], ["proof (state)\nthis:\n  0 - q = 0 - (1 + r - d) / (u - d)\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (d - (1 + r)) /\n    (u - d) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    - q", "have \"... = (d - (1 + r))/(u -d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 - (1 + r - d) / (u - d) = (d - (1 + r)) / (u - d)", "by (simp add: minus_divide_left)"], ["proof (state)\nthis:\n  0 - (1 + r - d) / (u - d) = (d - (1 + r)) / (u - d)\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (d - (1 + r)) /\n    (u - d) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    - q", "finally"], ["proof (chain)\npicking this:\n  0 - q = (d - (1 + r)) / (u - d)", "have \"0 - q = (d - (1+r))/(u-d)\""], ["proof (prove)\nusing this:\n  0 - q = (d - (1 + r)) / (u - d)\n\ngoal (1 subgoal):\n 1. 0 - q = (d - (1 + r)) / (u - d)", "."], ["proof (state)\nthis:\n  0 - q = (d - (1 + r)) / (u - d)\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (d - (1 + r)) /\n    (u - d) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    - q", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 - q = (d - (1 + r)) / (u - d)\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    (d - (1 + r)) /\n    (u - d) =\n    (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    - q", "by simp"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  (d - (1 + r)) /\n  (u - d) =\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  - q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  (d - (1 + r)) /\n  (u - d) =\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  - q\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  (d - (1 + r)) /\n  (u - d) =\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  - q\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = (1+r) * X n w + (- V (Suc n) (pseudo_proj_True n w) * q + V (Suc n) (pseudo_proj_False n w)* q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n    - q =\n    (1 + r) * X n w +\n    (- V (Suc n) (pseudo_proj_True n w) * q +\n     V (Suc n) (pseudo_proj_False n w) * q)", "by (metis (no_types, hide_lams) add.inverse_inverse distrib_right minus_mult_commute minus_real_def mult_minus_left)"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  - q =\n  (1 + r) * X n w +\n  (- V (Suc n) (pseudo_proj_True n w) * q +\n   V (Suc n) (pseudo_proj_False n w) * q)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  (V (Suc n) (pseudo_proj_True n w) - V (Suc n) (pseudo_proj_False n w)) *\n  - q =\n  (1 + r) * X n w +\n  (- V (Suc n) (pseudo_proj_True n w) * q +\n   V (Suc n) (pseudo_proj_False n w) * q)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = (1+r) * X n w - q * V (Suc n) (pseudo_proj_True n w) + q * V (Suc n) (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * X n w +\n    (- V (Suc n) (pseudo_proj_True n w) * q +\n     V (Suc n) (pseudo_proj_False n w) * q) =\n    (1 + r) * X n w - q * V (Suc n) (pseudo_proj_True n w) +\n    q * V (Suc n) (pseudo_proj_False n w)", "by simp"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  (- V (Suc n) (pseudo_proj_True n w) * q +\n   V (Suc n) (pseudo_proj_False n w) * q) =\n  (1 + r) * X n w - q * V (Suc n) (pseudo_proj_True n w) +\n  q * V (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  (1 + r) * X n w +\n  (- V (Suc n) (pseudo_proj_True n w) * q +\n   V (Suc n) (pseudo_proj_False n w) * q) =\n  (1 + r) * X n w - q * V (Suc n) (pseudo_proj_True n w) +\n  q * V (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = (1+r) * V n w -q * V (Suc n) (pseudo_proj_True n w) +\n            q * V (Suc n) (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * X n w - q * V (Suc n) (pseudo_proj_True n w) +\n    q * V (Suc n) (pseudo_proj_False n w) =\n    (1 + r) * V n w - q * V (Suc n) (pseudo_proj_True n w) +\n    q * V (Suc n) (pseudo_proj_False n w)", "using \\<open>X n w = V n w\\<close>"], ["proof (prove)\nusing this:\n  X n w = V n w\n\ngoal (1 subgoal):\n 1. (1 + r) * X n w - q * V (Suc n) (pseudo_proj_True n w) +\n    q * V (Suc n) (pseudo_proj_False n w) =\n    (1 + r) * V n w - q * V (Suc n) (pseudo_proj_True n w) +\n    q * V (Suc n) (pseudo_proj_False n w)", "by simp"], ["proof (state)\nthis:\n  (1 + r) * X n w - q * V (Suc n) (pseudo_proj_True n w) +\n  q * V (Suc n) (pseudo_proj_False n w) =\n  (1 + r) * V n w - q * V (Suc n) (pseudo_proj_True n w) +\n  q * V (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  (1 + r) * X n w - q * V (Suc n) (pseudo_proj_True n w) +\n  q * V (Suc n) (pseudo_proj_False n w) =\n  (1 + r) * V n w - q * V (Suc n) (pseudo_proj_True n w) +\n  q * V (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = q * V (Suc n) (pseudo_proj_True n w) + (1 - q) * V (Suc n) (pseudo_proj_False n w) -\n            q * V (Suc n) (pseudo_proj_True n w) + q * V (Suc n) (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + r) * V n w - q * V (Suc n) (pseudo_proj_True n w) +\n    q * V (Suc n) (pseudo_proj_False n w) =\n    q * V (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * V (Suc n) (pseudo_proj_False n w) -\n    q * V (Suc n) (pseudo_proj_True n w) +\n    q * V (Suc n) (pseudo_proj_False n w)", "using assms Suc rn_price_eq_ind[of N q n matur der w] \\<open>n < matur\\<close> qprops"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n  n \\<le> matur \\<Longrightarrow> X n w = V n w\n  Suc n \\<le> matur\n  \\<lbrakk>N = bernoulli_stream q; n < matur; 0 < q; q < 1;\n   der \\<in> borel_measurable (G matur)\\<rbrakk>\n  \\<Longrightarrow> (1 + r) * rn_price N der matur n w =\n                    q *\n                    rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n                    (1 - q) *\n                    rn_price N der matur (Suc n) (pseudo_proj_False n w)\n  n < matur\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. (1 + r) * V n w - q * V (Suc n) (pseudo_proj_True n w) +\n    q * V (Suc n) (pseudo_proj_False n w) =\n    q * V (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * V (Suc n) (pseudo_proj_False n w) -\n    q * V (Suc n) (pseudo_proj_True n w) +\n    q * V (Suc n) (pseudo_proj_False n w)", "unfolding V_def q_def"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n  n \\<le> matur \\<Longrightarrow> X n w = rn_price N der matur n w\n  Suc n \\<le> matur\n  \\<lbrakk>N = bernoulli_stream ((1 + r - d) / (u - d)); n < matur;\n   0 < (1 + r - d) / (u - d); (1 + r - d) / (u - d) < 1;\n   der \\<in> borel_measurable (G matur)\\<rbrakk>\n  \\<Longrightarrow> (1 + r) * rn_price N der matur n w =\n                    (1 + r - d) / (u - d) *\n                    rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n                    (1 - (1 + r - d) / (u - d)) *\n                    rn_price N der matur (Suc n) (pseudo_proj_False n w)\n  n < matur\n  0 < (1 + r - d) / (u - d)\n  (1 + r - d) / (u - d) < 1\n\ngoal (1 subgoal):\n 1. (1 + r) * rn_price N der matur n w -\n    (1 + r - d) / (u - d) *\n    rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 + r - d) / (u - d) *\n    rn_price N der matur (Suc n) (pseudo_proj_False n w) =\n    (1 + r - d) / (u - d) *\n    rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 - (1 + r - d) / (u - d)) *\n    rn_price N der matur (Suc n) (pseudo_proj_False n w) -\n    (1 + r - d) / (u - d) *\n    rn_price N der matur (Suc n) (pseudo_proj_True n w) +\n    (1 + r - d) / (u - d) *\n    rn_price N der matur (Suc n) (pseudo_proj_False n w)", "by simp"], ["proof (state)\nthis:\n  (1 + r) * V n w - q * V (Suc n) (pseudo_proj_True n w) +\n  q * V (Suc n) (pseudo_proj_False n w) =\n  q * V (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_False n w) -\n  q * V (Suc n) (pseudo_proj_True n w) +\n  q * V (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  (1 + r) * V n w - q * V (Suc n) (pseudo_proj_True n w) +\n  q * V (Suc n) (pseudo_proj_False n w) =\n  q * V (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_False n w) -\n  q * V (Suc n) (pseudo_proj_True n w) +\n  q * V (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = (1-q) * V (Suc n) (pseudo_proj_False n w) + q * V (Suc n) (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q * V (Suc n) (pseudo_proj_True n w) +\n    (1 - q) * V (Suc n) (pseudo_proj_False n w) -\n    q * V (Suc n) (pseudo_proj_True n w) +\n    q * V (Suc n) (pseudo_proj_False n w) =\n    (1 - q) * V (Suc n) (pseudo_proj_False n w) +\n    q * V (Suc n) (pseudo_proj_False n w)", "by simp"], ["proof (state)\nthis:\n  q * V (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_False n w) -\n  q * V (Suc n) (pseudo_proj_True n w) +\n  q * V (Suc n) (pseudo_proj_False n w) =\n  (1 - q) * V (Suc n) (pseudo_proj_False n w) +\n  q * V (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  q * V (Suc n) (pseudo_proj_True n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_False n w) -\n  q * V (Suc n) (pseudo_proj_True n w) +\n  q * V (Suc n) (pseudo_proj_False n w) =\n  (1 - q) * V (Suc n) (pseudo_proj_False n w) +\n  q * V (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = V (Suc n) (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - q) * V (Suc n) (pseudo_proj_False n w) +\n    q * V (Suc n) (pseudo_proj_False n w) =\n    V (Suc n) (pseudo_proj_False n w)", "using distrib_right[of q \"1 - q\"  \"V (Suc n) (pseudo_proj_False n w)\"]"], ["proof (prove)\nusing this:\n  (q + (1 - q)) * V (Suc n) (pseudo_proj_False n w) =\n  q * V (Suc n) (pseudo_proj_False n w) +\n  (1 - q) * V (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. (1 - q) * V (Suc n) (pseudo_proj_False n w) +\n    q * V (Suc n) (pseudo_proj_False n w) =\n    V (Suc n) (pseudo_proj_False n w)", "by simp"], ["proof (state)\nthis:\n  (1 - q) * V (Suc n) (pseudo_proj_False n w) +\n  q * V (Suc n) (pseudo_proj_False n w) =\n  V (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "also"], ["proof (state)\nthis:\n  (1 - q) * V (Suc n) (pseudo_proj_False n w) +\n  q * V (Suc n) (pseudo_proj_False n w) =\n  V (Suc n) (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "have \"... = V (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_False n w) = V (Suc n) w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_False n w) = V (Suc n) w", "have \"V (Suc n) \\<in> borel_measurable (G (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V (Suc n) \\<in> borel_measurable (G (Suc n))", "unfolding V_def q_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. rn_price N der matur (Suc n) \\<in> borel_measurable (G (Suc n))", "proof (rule rn_price_borel_adapt)"], ["proof (state)\ngoal (5 subgoals):\n 1. der \\<in> borel_measurable (G matur)\n 2. N = bernoulli_stream ?q\n 3. 0 < ?q\n 4. ?q < 1\n 5. Suc n \\<le> matur", "show \"der \\<in> borel_measurable (G matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (G matur)", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. der \\<in> borel_measurable (G matur)", "by simp"], ["proof (state)\nthis:\n  der \\<in> borel_measurable (G matur)\n\ngoal (4 subgoals):\n 1. N = bernoulli_stream ?q\n 2. 0 < ?q\n 3. ?q < 1\n 4. Suc n \\<le> matur", "show \"N = bernoulli_stream q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N = bernoulli_stream q", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. N = bernoulli_stream q", "unfolding q_def"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  der \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. N = bernoulli_stream ((1 + r - d) / (u - d))", "by simp"], ["proof (state)\nthis:\n  N = bernoulli_stream q\n\ngoal (3 subgoals):\n 1. 0 < q\n 2. q < 1\n 3. Suc n \\<le> matur", "show \"0 < q\" and \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "using qprops"], ["proof (prove)\nusing this:\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "by auto"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. Suc n \\<le> matur", "show \"Suc n \\<le> matur\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc n \\<le> matur", "using Suc"], ["proof (prove)\nusing this:\n  n \\<le> matur \\<Longrightarrow> X n w = V n w\n  Suc n \\<le> matur\n\ngoal (1 subgoal):\n 1. Suc n \\<le> matur", "by simp"], ["proof (state)\nthis:\n  Suc n \\<le> matur\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  V (Suc n) \\<in> borel_measurable (G (Suc n))\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_False n w) = V (Suc n) w", "hence \"V (Suc n) (pseudo_proj_False n w) = V (Suc n) (pseudo_proj_False (Suc n) (pseudo_proj_False n w))\""], ["proof (prove)\nusing this:\n  V (Suc n) \\<in> borel_measurable (G (Suc n))\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_False n w) =\n    V (Suc n) (pseudo_proj_False (Suc n) (pseudo_proj_False n w))", "using  geom_proc_filt_info'[of \"V (Suc n)\" \"Suc n\"]"], ["proof (prove)\nusing this:\n  V (Suc n) \\<in> borel_measurable (G (Suc n))\n  V (Suc n) \\<in> borel_measurable (G (Suc n)) \\<Longrightarrow>\n  V (Suc n) ?w = V (Suc n) (pseudo_proj_False (Suc n) ?w)\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_False n w) =\n    V (Suc n) (pseudo_proj_False (Suc n) (pseudo_proj_False n w))", "by simp"], ["proof (state)\nthis:\n  V (Suc n) (pseudo_proj_False n w) =\n  V (Suc n) (pseudo_proj_False (Suc n) (pseudo_proj_False n w))\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_False n w) = V (Suc n) w", "also"], ["proof (state)\nthis:\n  V (Suc n) (pseudo_proj_False n w) =\n  V (Suc n) (pseudo_proj_False (Suc n) (pseudo_proj_False n w))\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_False n w) = V (Suc n) w", "have \"... = V (Suc n) (pseudo_proj_False (Suc n) w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_False (Suc n) (pseudo_proj_False n w)) =\n    V (Suc n) (pseudo_proj_False (Suc n) w)", "using False  spick_eq_pseudo_proj_False"], ["proof (prove)\nusing this:\n  \\<not> w !! n\n  spick ?w ?n False = pseudo_proj_False ?n ?w\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_False (Suc n) (pseudo_proj_False n w)) =\n    V (Suc n) (pseudo_proj_False (Suc n) w)", "by (metis pseq pseudo_proj_True_imp_False)"], ["proof (state)\nthis:\n  V (Suc n) (pseudo_proj_False (Suc n) (pseudo_proj_False n w)) =\n  V (Suc n) (pseudo_proj_False (Suc n) w)\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_False n w) = V (Suc n) w", "also"], ["proof (state)\nthis:\n  V (Suc n) (pseudo_proj_False (Suc n) (pseudo_proj_False n w)) =\n  V (Suc n) (pseudo_proj_False (Suc n) w)\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_False n w) = V (Suc n) w", "have \"... = V (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_False (Suc n) w) = V (Suc n) w", "using \\<open>V (Suc n) \\<in> borel_measurable (G (Suc n))\\<close>\n              geom_proc_filt_info'[of \"V (Suc n)\" \"Suc n\"]"], ["proof (prove)\nusing this:\n  V (Suc n) \\<in> borel_measurable (G (Suc n))\n  V (Suc n) \\<in> borel_measurable (G (Suc n)) \\<Longrightarrow>\n  V (Suc n) ?w = V (Suc n) (pseudo_proj_False (Suc n) ?w)\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_False (Suc n) w) = V (Suc n) w", "by simp"], ["proof (state)\nthis:\n  V (Suc n) (pseudo_proj_False (Suc n) w) = V (Suc n) w\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_False n w) = V (Suc n) w", "finally"], ["proof (chain)\npicking this:\n  V (Suc n) (pseudo_proj_False n w) = V (Suc n) w", "show ?thesis"], ["proof (prove)\nusing this:\n  V (Suc n) (pseudo_proj_False n w) = V (Suc n) w\n\ngoal (1 subgoal):\n 1. V (Suc n) (pseudo_proj_False n w) = V (Suc n) w", "."], ["proof (state)\nthis:\n  V (Suc n) (pseudo_proj_False n w) = V (Suc n) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  V (Suc n) (pseudo_proj_False n w) = V (Suc n) w\n\ngoal (1 subgoal):\n 1. \\<not> w !! n \\<Longrightarrow> X (Suc n) w = V (Suc n) w", "finally"], ["proof (chain)\npicking this:\n  X (Suc n) w = V (Suc n) w", "show \"X (Suc n) w = V (Suc n) w\""], ["proof (prove)\nusing this:\n  X (Suc n) w = V (Suc n) w\n\ngoal (1 subgoal):\n 1. X (Suc n) w = V (Suc n) w", "."], ["proof (state)\nthis:\n  X (Suc n) w = V (Suc n) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  X (Suc n) w = V (Suc n) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  X (Suc n) w = V (Suc n) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  n \\<le> matur \\<Longrightarrow> X n w = V n w\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       n \\<le> matur \\<Longrightarrow>\n       val_process Mkt\n        (self_fin_delta_pf N der matur\n          (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)))\n        n w =\n       rn_price N der matur n w", "}"], ["proof (state)\nthis:\n  ?n3 \\<le> matur \\<Longrightarrow> X ?n3 ?w3 = V ?n3 ?w3\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       n \\<le> matur \\<Longrightarrow>\n       val_process Mkt\n        (self_fin_delta_pf N der matur\n          (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)))\n        n w =\n       rn_price N der matur n w", "thus \"\\<And>n w. n \\<le> matur \\<Longrightarrow>\n           val_process Mkt (self_fin_delta_pf N der matur (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))) n w =\n            rn_price N der matur n w\""], ["proof (prove)\nusing this:\n  ?n3 \\<le> matur \\<Longrightarrow> X ?n3 ?w3 = V ?n3 ?w3\n\ngoal (1 subgoal):\n 1. \\<And>n w.\n       n \\<le> matur \\<Longrightarrow>\n       val_process Mkt\n        (self_fin_delta_pf N der matur\n          (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)))\n        n w =\n       rn_price N der matur n w", "by (simp add: X_def init_def V_def delta_hedging_def)"], ["proof (state)\nthis:\n  ?n1 \\<le> matur \\<Longrightarrow>\n  val_process Mkt\n   (self_fin_delta_pf N der matur\n     (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)))\n   ?n1 ?w1 =\n  rn_price N der matur ?n1 ?w1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market_viable) delta_hedging_same_cash_flow:\n  assumes \"der \\<in> borel_measurable (G matur)\"\nand \"N = bernoulli_stream ((1 + r - d) / (u - d))\"\n  shows \"cls_val_process Mkt (delta_hedging N der matur) matur w =\n    der w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) matur w = der w", "proof  -"], ["proof (state)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) matur w = der w", "define q where \"q = (1 + r - d) / (u - d)\""], ["proof (state)\nthis:\n  q = (1 + r - d) / (u - d)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) matur w = der w", "have \"0 < q\" and \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "unfolding q_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (1 + r - d) / (u - d) &&& (1 + r - d) / (u - d) < 1", "using assms gt_param lt_param CRR_viable"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  \\<lbrakk>?q = (1 + r - d) / (u - d); viable_market Mkt\\<rbrakk>\n  \\<Longrightarrow> 0 < ?q\n  \\<lbrakk>?q = (1 + r - d) / (u - d); viable_market Mkt\\<rbrakk>\n  \\<Longrightarrow> ?q < 1\n  viable_market Mkt\n\ngoal (1 subgoal):\n 1. 0 < (1 + r - d) / (u - d) &&& (1 + r - d) / (u - d) < 1", "by auto"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) matur w = der w", "note qprops = this"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) matur w = der w", "have \"cls_val_process Mkt (delta_hedging N der matur) matur w =\n    val_process Mkt (delta_hedging N der matur) matur w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) matur w =\n    val_process Mkt (delta_hedging N der matur) matur w", "using self_financingE self_finance_charact"], ["proof (prove)\nusing this:\n  self_financing ?Mkt ?p \\<Longrightarrow>\n  \\<forall>n. val_process ?Mkt ?p n = cls_val_process ?Mkt ?p n\n  \\<lbrakk>\\<forall>n w. prices ?Mkt ?asset (Suc n) w \\<noteq> 0;\n   portfolio ?pf\\<rbrakk>\n  \\<Longrightarrow> self_financing ?Mkt (self_finance ?Mkt ?v ?pf ?asset)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) matur w =\n    val_process Mkt (delta_hedging N der matur) matur w", "unfolding delta_hedging_def self_fin_delta_pf_def"], ["proof (prove)\nusing this:\n  self_financing ?Mkt ?p \\<Longrightarrow>\n  \\<forall>n. val_process ?Mkt ?p n = cls_val_process ?Mkt ?p n\n  \\<lbrakk>\\<forall>n w. prices ?Mkt ?asset (Suc n) w \\<noteq> 0;\n   portfolio ?pf\\<rbrakk>\n  \\<Longrightarrow> self_financing ?Mkt (self_finance ?Mkt ?v ?pf ?asset)\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt\n     (self_finance Mkt\n       (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n       (delta_pf N der matur) risk_free_asset)\n     matur w =\n    val_process Mkt\n     (self_finance Mkt\n       (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n       (delta_pf N der matur) risk_free_asset)\n     matur w", "by (metis delta_pf_portfolio mult_1s(1) mult_cancel_right not_real_square_gt_zero positive)"], ["proof (state)\nthis:\n  cls_val_process Mkt (delta_hedging N der matur) matur w =\n  val_process Mkt (delta_hedging N der matur) matur w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) matur w = der w", "also"], ["proof (state)\nthis:\n  cls_val_process Mkt (delta_hedging N der matur) matur w =\n  val_process Mkt (delta_hedging N der matur) matur w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) matur w = der w", "have \"... = rn_price N der matur matur w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_process Mkt (delta_hedging N der matur) matur w =\n    rn_price N der matur matur w", "using delta_hedging_eq_derivative_price assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?N = bernoulli_stream ((1 + r - d) / (u - d));\n   ?der \\<in> borel_measurable (G ?matur); ?n \\<le> ?matur\\<rbrakk>\n  \\<Longrightarrow> val_process Mkt (delta_hedging ?N ?der ?matur) ?n ?w =\n                    rn_price ?N ?der ?matur ?n ?w\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n\ngoal (1 subgoal):\n 1. val_process Mkt (delta_hedging N der matur) matur w =\n    rn_price N der matur matur w", "by simp"], ["proof (state)\nthis:\n  val_process Mkt (delta_hedging N der matur) matur w =\n  rn_price N der matur matur w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) matur w = der w", "also"], ["proof (state)\nthis:\n  val_process Mkt (delta_hedging N der matur) matur w =\n  rn_price N der matur matur w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) matur w = der w", "have \"... = rn_rev_price N der matur 0 w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rn_price N der matur matur w = rn_rev_price N der matur 0 w", "using rn_price_eq qprops assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1;\n   ?der \\<in> borel_measurable (G ?matur); ?n \\<le> ?matur\\<rbrakk>\n  \\<Longrightarrow> rn_price ?N ?der ?matur ?n ?w =\n                    rn_price_ind ?N ?der ?matur ?n ?w\n  0 < q\n  q < 1\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n\ngoal (1 subgoal):\n 1. rn_price N der matur matur w = rn_rev_price N der matur 0 w", "unfolding rn_price_ind_def q_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1;\n   ?der \\<in> borel_measurable (G ?matur); ?n \\<le> ?matur\\<rbrakk>\n  \\<Longrightarrow> rn_price ?N ?der ?matur ?n ?w =\n                    rn_rev_price ?N ?der ?matur (?matur - ?n) ?w\n  0 < (1 + r - d) / (u - d)\n  (1 + r - d) / (u - d) < 1\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n\ngoal (1 subgoal):\n 1. rn_price N der matur matur w = rn_rev_price N der matur 0 w", "by simp"], ["proof (state)\nthis:\n  rn_price N der matur matur w = rn_rev_price N der matur 0 w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) matur w = der w", "also"], ["proof (state)\nthis:\n  rn_price N der matur matur w = rn_rev_price N der matur 0 w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) matur w = der w", "have \"... = der w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rn_rev_price N der matur 0 w = der w", "by simp"], ["proof (state)\nthis:\n  rn_rev_price N der matur 0 w = der w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) matur w = der w", "finally"], ["proof (chain)\npicking this:\n  cls_val_process Mkt (delta_hedging N der matur) matur w = der w", "show ?thesis"], ["proof (prove)\nusing this:\n  cls_val_process Mkt (delta_hedging N der matur) matur w = der w\n\ngoal (1 subgoal):\n 1. cls_val_process Mkt (delta_hedging N der matur) matur w = der w", "."], ["proof (state)\nthis:\n  cls_val_process Mkt (delta_hedging N der matur) matur w = der w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market) delta_hedging_trading_strat:\n  assumes \"N = bernoulli_stream q\"\n  and \"0 < q\"\nand \"q < 1\"\nand \"der \\<in> borel_measurable (G matur)\"\n  shows \"trading_strategy (delta_hedging N der matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trading_strategy (delta_hedging N der matur)", "unfolding delta_hedging_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. trading_strategy\n     (self_fin_delta_pf N der matur\n       (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur)))", "by (simp add: assms self_fin_delta_pf_trad_strat)"], ["", "lemma (in CRR_market) delta_hedging_self_financing:\n  shows \"self_financing Mkt (delta_hedging N der matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. self_financing Mkt (delta_hedging N der matur)", "unfolding delta_hedging_def self_fin_delta_pf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. self_financing Mkt\n     (self_finance Mkt\n       (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n       (delta_pf N der matur) risk_free_asset)", "proof (rule self_finance_charact)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>n w. prices Mkt risk_free_asset (Suc n) w \\<noteq> 0\n 2. portfolio (delta_pf N der matur)", "show \"\\<forall>n w. prices Mkt risk_free_asset (Suc n) w \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n w. prices Mkt risk_free_asset (Suc n) w \\<noteq> 0", "using positive"], ["proof (prove)\nusing this:\n  \\<forall>n w. 0 < prices Mkt risk_free_asset n w\n\ngoal (1 subgoal):\n 1. \\<forall>n w. prices Mkt risk_free_asset (Suc n) w \\<noteq> 0", "by (metis less_numeral_extra(3))"], ["proof (state)\nthis:\n  \\<forall>n w. prices Mkt risk_free_asset (Suc n) w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. portfolio (delta_pf N der matur)", "show \"portfolio (delta_pf N der matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. portfolio (delta_pf N der matur)", "using delta_pf_portfolio"], ["proof (prove)\nusing this:\n  portfolio (delta_pf ?N ?der ?matur)\n\ngoal (1 subgoal):\n 1. portfolio (delta_pf N der matur)", "."], ["proof (state)\nthis:\n  portfolio (delta_pf N der matur)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market_viable) delta_hedging_replicating:\n  assumes \"der \\<in> borel_measurable (G matur)\"\n  and \"N = bernoulli_stream ((1 + r - d) / (u - d))\"\n  shows \"replicating_portfolio (delta_hedging N der matur) der matur\""], ["proof (prove)\ngoal (1 subgoal):\n 1. replicating_portfolio (delta_hedging N der matur) der matur", "unfolding replicating_portfolio_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. stock_portfolio Mkt (delta_hedging N der matur) \\<and>\n    trading_strategy (delta_hedging N der matur) \\<and>\n    self_financing Mkt (delta_hedging N der matur) \\<and>\n    AEeq M (cls_val_process Mkt (delta_hedging N der matur) matur) der", "proof (intro conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. stock_portfolio Mkt (delta_hedging N der matur)\n 2. trading_strategy (delta_hedging N der matur)\n 3. self_financing Mkt (delta_hedging N der matur)\n 4. AEeq M (cls_val_process Mkt (delta_hedging N der matur) matur) der", "define q where \"q = (1 + r - d) / (u - d)\""], ["proof (state)\nthis:\n  q = (1 + r - d) / (u - d)\n\ngoal (4 subgoals):\n 1. stock_portfolio Mkt (delta_hedging N der matur)\n 2. trading_strategy (delta_hedging N der matur)\n 3. self_financing Mkt (delta_hedging N der matur)\n 4. AEeq M (cls_val_process Mkt (delta_hedging N der matur) matur) der", "have \"0 < q\" and \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "unfolding q_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (1 + r - d) / (u - d) &&& (1 + r - d) / (u - d) < 1", "using assms gt_param lt_param CRR_viable"], ["proof (prove)\nusing this:\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  \\<lbrakk>?q = (1 + r - d) / (u - d); viable_market Mkt\\<rbrakk>\n  \\<Longrightarrow> 0 < ?q\n  \\<lbrakk>?q = (1 + r - d) / (u - d); viable_market Mkt\\<rbrakk>\n  \\<Longrightarrow> ?q < 1\n  viable_market Mkt\n\ngoal (1 subgoal):\n 1. 0 < (1 + r - d) / (u - d) &&& (1 + r - d) / (u - d) < 1", "by auto"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal (4 subgoals):\n 1. stock_portfolio Mkt (delta_hedging N der matur)\n 2. trading_strategy (delta_hedging N der matur)\n 3. self_financing Mkt (delta_hedging N der matur)\n 4. AEeq M (cls_val_process Mkt (delta_hedging N der matur) matur) der", "note qprops = this"], ["proof (state)\nthis:\n  0 < q\n  q < 1\n\ngoal (4 subgoals):\n 1. stock_portfolio Mkt (delta_hedging N der matur)\n 2. trading_strategy (delta_hedging N der matur)\n 3. self_financing Mkt (delta_hedging N der matur)\n 4. AEeq M (cls_val_process Mkt (delta_hedging N der matur) matur) der", "let ?X = \"(delta_hedging N der matur)\""], ["proof (state)\ngoal (4 subgoals):\n 1. stock_portfolio Mkt (delta_hedging N der matur)\n 2. trading_strategy (delta_hedging N der matur)\n 3. self_financing Mkt (delta_hedging N der matur)\n 4. AEeq M (cls_val_process Mkt (delta_hedging N der matur) matur) der", "show \"trading_strategy ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trading_strategy (delta_hedging N der matur)", "using delta_hedging_trading_strat qprops assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1;\n   ?der \\<in> borel_measurable (G ?matur)\\<rbrakk>\n  \\<Longrightarrow> trading_strategy (delta_hedging ?N ?der ?matur)\n  0 < q\n  q < 1\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n\ngoal (1 subgoal):\n 1. trading_strategy (delta_hedging N der matur)", "unfolding q_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1;\n   ?der \\<in> borel_measurable (G ?matur)\\<rbrakk>\n  \\<Longrightarrow> trading_strategy (delta_hedging ?N ?der ?matur)\n  0 < (1 + r - d) / (u - d)\n  (1 + r - d) / (u - d) < 1\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n\ngoal (1 subgoal):\n 1. trading_strategy (delta_hedging N der matur)", "by simp"], ["proof (state)\nthis:\n  trading_strategy (delta_hedging N der matur)\n\ngoal (3 subgoals):\n 1. stock_portfolio Mkt (delta_hedging N der matur)\n 2. self_financing Mkt (delta_hedging N der matur)\n 3. AEeq M (cls_val_process Mkt (delta_hedging N der matur) matur) der", "show \"self_financing Mkt ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. self_financing Mkt (delta_hedging N der matur)", "using delta_hedging_self_financing"], ["proof (prove)\nusing this:\n  self_financing Mkt (delta_hedging ?N ?der ?matur)\n\ngoal (1 subgoal):\n 1. self_financing Mkt (delta_hedging N der matur)", "."], ["proof (state)\nthis:\n  self_financing Mkt (delta_hedging N der matur)\n\ngoal (2 subgoals):\n 1. stock_portfolio Mkt (delta_hedging N der matur)\n 2. AEeq M (cls_val_process Mkt (delta_hedging N der matur) matur) der", "show \"stock_portfolio Mkt (delta_hedging N der matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stock_portfolio Mkt (delta_hedging N der matur)", "unfolding delta_hedging_def self_fin_delta_pf_def\n    stock_portfolio_def portfolio_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     (support_set\n       (self_finance Mkt\n         (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n         (delta_pf N der matur) risk_free_asset)) \\<and>\n    support_set\n     (self_finance Mkt\n       (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n       (delta_pf N der matur) risk_free_asset)\n    \\<subseteq> stocks Mkt", "using stocks delta_pf_support"], ["proof (prove)\nusing this:\n  stocks Mkt = {stk, risk_free_asset}\n  support_set (delta_pf ?N ?der ?matur) \\<subseteq> {stk}\n\ngoal (1 subgoal):\n 1. finite\n     (support_set\n       (self_finance Mkt\n         (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n         (delta_pf N der matur) risk_free_asset)) \\<and>\n    support_set\n     (self_finance Mkt\n       (integral\\<^sup>L N (discounted_value r (\\<lambda>m. der) matur))\n       (delta_pf N der matur) risk_free_asset)\n    \\<subseteq> stocks Mkt", "by (smt Un_insert_right delta_pf_portfolio insert_commute portfolio_def self_finance_def\n        self_finance_portfolio single_comp_support subset_insertI2 subset_singleton_iff\n        sum_support_set sup_bot.right_neutral)"], ["proof (state)\nthis:\n  stock_portfolio Mkt (delta_hedging N der matur)\n\ngoal (1 subgoal):\n 1. AEeq M (cls_val_process Mkt (delta_hedging N der matur) matur) der", "show \"AEeq M (cls_val_process Mkt (delta_hedging N der matur) matur) der\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEeq M (cls_val_process Mkt (delta_hedging N der matur) matur) der", "using delta_hedging_same_cash_flow assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?der \\<in> borel_measurable (G ?matur);\n   ?N = bernoulli_stream ((1 + r - d) / (u - d))\\<rbrakk>\n  \\<Longrightarrow> cls_val_process Mkt (delta_hedging ?N ?der ?matur)\n                     ?matur ?w =\n                    ?der ?w\n  der \\<in> borel_measurable (G matur)\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n\ngoal (1 subgoal):\n 1. AEeq M (cls_val_process Mkt (delta_hedging N der matur) matur) der", "by simp"], ["proof (state)\nthis:\n  AEeq M (cls_val_process Mkt (delta_hedging N der matur) matur) der\n\ngoal:\nNo subgoals!", "qed"], ["", "definition (in disc_equity_market) complete_market where\n\"complete_market \\<longleftrightarrow> (\\<forall>matur. \\<forall> der\\<in> borel_measurable (F matur). (\\<exists>p. replicating_portfolio p der matur))\""], ["", "lemma (in CRR_market_viable) CRR_market_complete:\n  shows \"complete_market\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complete_market", "unfolding complete_market_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>matur.\n       \\<forall>der\\<in>borel_measurable (G matur).\n          \\<exists>p. replicating_portfolio p der matur", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>matur.\n       \\<forall>der\\<in>borel_measurable (G matur).\n          \\<exists>p. replicating_portfolio p der matur", "fix matur::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>matur.\n       \\<forall>der\\<in>borel_measurable (G matur).\n          \\<exists>p. replicating_portfolio p der matur", "show \"\\<forall> der \\<in> borel_measurable (G matur). (\\<exists>p. replicating_portfolio p der matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>der\\<in>borel_measurable (G matur).\n       \\<exists>p. replicating_portfolio p der matur", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>der.\n       der \\<in> borel_measurable (G matur) \\<Longrightarrow>\n       \\<exists>p. replicating_portfolio p der matur", "fix der::\"bool stream\\<Rightarrow>real\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>der.\n       der \\<in> borel_measurable (G matur) \\<Longrightarrow>\n       \\<exists>p. replicating_portfolio p der matur", "assume \"der \\<in> borel_measurable (G matur)\""], ["proof (state)\nthis:\n  der \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. \\<And>der.\n       der \\<in> borel_measurable (G matur) \\<Longrightarrow>\n       \\<exists>p. replicating_portfolio p der matur", "define N where \"N = bernoulli_stream ((1 + r - d) / (u - d))\""], ["proof (state)\nthis:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n\ngoal (1 subgoal):\n 1. \\<And>der.\n       der \\<in> borel_measurable (G matur) \\<Longrightarrow>\n       \\<exists>p. replicating_portfolio p der matur", "hence \"replicating_portfolio (delta_hedging N der matur) der matur\""], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n\ngoal (1 subgoal):\n 1. replicating_portfolio (delta_hedging N der matur) der matur", "using delta_hedging_replicating\n      \\<open>der \\<in> borel_measurable (G matur)\\<close>"], ["proof (prove)\nusing this:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n  \\<lbrakk>?der \\<in> borel_measurable (G ?matur);\n   ?N = bernoulli_stream ((1 + r - d) / (u - d))\\<rbrakk>\n  \\<Longrightarrow> replicating_portfolio (delta_hedging ?N ?der ?matur)\n                     ?der ?matur\n  der \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. replicating_portfolio (delta_hedging N der matur) der matur", "by simp"], ["proof (state)\nthis:\n  replicating_portfolio (delta_hedging N der matur) der matur\n\ngoal (1 subgoal):\n 1. \\<And>der.\n       der \\<in> borel_measurable (G matur) \\<Longrightarrow>\n       \\<exists>p. replicating_portfolio p der matur", "thus \"\\<exists>pf. replicating_portfolio pf der matur\""], ["proof (prove)\nusing this:\n  replicating_portfolio (delta_hedging N der matur) der matur\n\ngoal (1 subgoal):\n 1. \\<exists>pf. replicating_portfolio pf der matur", "by auto"], ["proof (state)\nthis:\n  \\<exists>pf. replicating_portfolio pf der matur\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>der\\<in>borel_measurable (G matur).\n     \\<exists>p. replicating_portfolio p der matur\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subalgebras_filtration:\n  assumes \"filtration M F\"\nand \"\\<forall>t. subalgebra (F t) (G t)\"\nand \"\\<forall> s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s)\"\nshows \"filtration M G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Filtration.filtration M G", "unfolding filtration_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>t. subalgebra M (G t)) \\<and>\n    (\\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s))", "proof (intro conjI allI impI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t. subalgebra M (G t)\n 2. \\<And>s t. s \\<le> t \\<Longrightarrow> subalgebra (G t) (G s)", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t. subalgebra M (G t)\n 2. \\<And>s t. s \\<le> t \\<Longrightarrow> subalgebra (G t) (G s)", "fix t"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t. subalgebra M (G t)\n 2. \\<And>s t. s \\<le> t \\<Longrightarrow> subalgebra (G t) (G s)", "have \"subalgebra (F t) (G t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subalgebra (F t) (G t)", "using assms"], ["proof (prove)\nusing this:\n  Filtration.filtration M F\n  \\<forall>t. subalgebra (F t) (G t)\n  \\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s)\n\ngoal (1 subgoal):\n 1. subalgebra (F t) (G t)", "by simp"], ["proof (state)\nthis:\n  subalgebra (F t) (G t)\n\ngoal (2 subgoals):\n 1. \\<And>t. subalgebra M (G t)\n 2. \\<And>s t. s \\<le> t \\<Longrightarrow> subalgebra (G t) (G s)", "moreover"], ["proof (state)\nthis:\n  subalgebra (F t) (G t)\n\ngoal (2 subgoals):\n 1. \\<And>t. subalgebra M (G t)\n 2. \\<And>s t. s \\<le> t \\<Longrightarrow> subalgebra (G t) (G s)", "have \"subalgebra M (F t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subalgebra M (F t)", "using assms"], ["proof (prove)\nusing this:\n  Filtration.filtration M F\n  \\<forall>t. subalgebra (F t) (G t)\n  \\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s)\n\ngoal (1 subgoal):\n 1. subalgebra M (F t)", "unfolding filtration_def"], ["proof (prove)\nusing this:\n  (\\<forall>t. subalgebra M (F t)) \\<and>\n  (\\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (F t) (F s))\n  \\<forall>t. subalgebra (F t) (G t)\n  \\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s)\n\ngoal (1 subgoal):\n 1. subalgebra M (F t)", "by simp"], ["proof (state)\nthis:\n  subalgebra M (F t)\n\ngoal (2 subgoals):\n 1. \\<And>t. subalgebra M (G t)\n 2. \\<And>s t. s \\<le> t \\<Longrightarrow> subalgebra (G t) (G s)", "ultimately"], ["proof (chain)\npicking this:\n  subalgebra (F t) (G t)\n  subalgebra M (F t)", "show \"subalgebra M (G t)\""], ["proof (prove)\nusing this:\n  subalgebra (F t) (G t)\n  subalgebra M (F t)\n\ngoal (1 subgoal):\n 1. subalgebra M (G t)", "by (metis subalgebra_def subsetCE subsetI)"], ["proof (state)\nthis:\n  subalgebra M (G t)\n\ngoal (1 subgoal):\n 1. \\<And>s t. s \\<le> t \\<Longrightarrow> subalgebra (G t) (G s)", "}"], ["proof (state)\nthis:\n  subalgebra M (G ?t2)\n\ngoal (1 subgoal):\n 1. \\<And>s t. s \\<le> t \\<Longrightarrow> subalgebra (G t) (G s)", "{"], ["proof (state)\nthis:\n  subalgebra M (G ?t2)\n\ngoal (1 subgoal):\n 1. \\<And>s t. s \\<le> t \\<Longrightarrow> subalgebra (G t) (G s)", "fix s t::'b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s t. s \\<le> t \\<Longrightarrow> subalgebra (G t) (G s)", "assume \"s \\<le> t\""], ["proof (state)\nthis:\n  s \\<le> t\n\ngoal (1 subgoal):\n 1. \\<And>s t. s \\<le> t \\<Longrightarrow> subalgebra (G t) (G s)", "thus \"subalgebra (G t) (G s)\""], ["proof (prove)\nusing this:\n  s \\<le> t\n\ngoal (1 subgoal):\n 1. subalgebra (G t) (G s)", "using assms"], ["proof (prove)\nusing this:\n  s \\<le> t\n  Filtration.filtration M F\n  \\<forall>t. subalgebra (F t) (G t)\n  \\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s)\n\ngoal (1 subgoal):\n 1. subalgebra (G t) (G s)", "by simp"], ["proof (state)\nthis:\n  subalgebra (G t) (G s)\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  ?s2 \\<le> ?t2 \\<Longrightarrow> subalgebra (G ?t2) (G ?s2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subfilt_filt_equiv:\n  assumes \"filt_equiv F M N\"\nand \"\\<forall> t. subalgebra (F t) (G t)\"\nand \"\\<forall> s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s)\"\nshows \"filt_equiv G M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filt_equiv G M N", "unfolding filt_equiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sets M = sets N \\<and>\n    Filtration.filtration M G \\<and>\n    (\\<forall>t A.\n        A \\<in> sets (G t) \\<longrightarrow>\n        (emeasure M A = 0) = (emeasure N A = 0))", "proof (intro conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. sets M = sets N\n 2. Filtration.filtration M G\n 3. \\<forall>t A.\n       A \\<in> sets (G t) \\<longrightarrow>\n       (emeasure M A = 0) = (emeasure N A = 0)", "show \"sets M = sets N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets M = sets N", "using assms"], ["proof (prove)\nusing this:\n  filt_equiv F M N\n  \\<forall>t. subalgebra (F t) (G t)\n  \\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s)\n\ngoal (1 subgoal):\n 1. sets M = sets N", "unfolding filt_equiv_def"], ["proof (prove)\nusing this:\n  sets M = sets N \\<and>\n  Filtration.filtration M F \\<and>\n  (\\<forall>t A.\n      A \\<in> sets (F t) \\<longrightarrow>\n      (emeasure M A = 0) = (emeasure N A = 0))\n  \\<forall>t. subalgebra (F t) (G t)\n  \\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s)\n\ngoal (1 subgoal):\n 1. sets M = sets N", "by simp"], ["proof (state)\nthis:\n  sets M = sets N\n\ngoal (2 subgoals):\n 1. Filtration.filtration M G\n 2. \\<forall>t A.\n       A \\<in> sets (G t) \\<longrightarrow>\n       (emeasure M A = 0) = (emeasure N A = 0)", "show \"filtration M G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Filtration.filtration M G", "using assms subalgebras_filtration[of M F G]"], ["proof (prove)\nusing this:\n  filt_equiv F M N\n  \\<forall>t. subalgebra (F t) (G t)\n  \\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s)\n  \\<lbrakk>Filtration.filtration M F; \\<forall>t. subalgebra (F t) (G t);\n   \\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s)\\<rbrakk>\n  \\<Longrightarrow> Filtration.filtration M G\n\ngoal (1 subgoal):\n 1. Filtration.filtration M G", "unfolding filt_equiv_def"], ["proof (prove)\nusing this:\n  sets M = sets N \\<and>\n  Filtration.filtration M F \\<and>\n  (\\<forall>t A.\n      A \\<in> sets (F t) \\<longrightarrow>\n      (emeasure M A = 0) = (emeasure N A = 0))\n  \\<forall>t. subalgebra (F t) (G t)\n  \\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s)\n  \\<lbrakk>Filtration.filtration M F; \\<forall>t. subalgebra (F t) (G t);\n   \\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s)\\<rbrakk>\n  \\<Longrightarrow> Filtration.filtration M G\n\ngoal (1 subgoal):\n 1. Filtration.filtration M G", "by simp"], ["proof (state)\nthis:\n  Filtration.filtration M G\n\ngoal (1 subgoal):\n 1. \\<forall>t A.\n       A \\<in> sets (G t) \\<longrightarrow>\n       (emeasure M A = 0) = (emeasure N A = 0)", "show \"\\<forall>t A. A \\<in> sets (G t) \\<longrightarrow> (emeasure M A = 0) = (emeasure N A = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t A.\n       A \\<in> sets (G t) \\<longrightarrow>\n       (emeasure M A = 0) = (emeasure N A = 0)", "proof (intro allI ballI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t A.\n       A \\<in> sets (G t) \\<Longrightarrow>\n       (emeasure M A = 0) = (emeasure N A = 0)", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t A.\n       A \\<in> sets (G t) \\<Longrightarrow>\n       (emeasure M A = 0) = (emeasure N A = 0)", "fix A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t A.\n       A \\<in> sets (G t) \\<Longrightarrow>\n       (emeasure M A = 0) = (emeasure N A = 0)", "assume \"A\\<in> sets (G t)\""], ["proof (state)\nthis:\n  A \\<in> sets (G t)\n\ngoal (1 subgoal):\n 1. \\<And>t A.\n       A \\<in> sets (G t) \\<Longrightarrow>\n       (emeasure M A = 0) = (emeasure N A = 0)", "hence \"A \\<in> sets (F t)\""], ["proof (prove)\nusing this:\n  A \\<in> sets (G t)\n\ngoal (1 subgoal):\n 1. A \\<in> sets (F t)", "using assms"], ["proof (prove)\nusing this:\n  A \\<in> sets (G t)\n  filt_equiv F M N\n  \\<forall>t. subalgebra (F t) (G t)\n  \\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s)\n\ngoal (1 subgoal):\n 1. A \\<in> sets (F t)", "unfolding subalgebra_def"], ["proof (prove)\nusing this:\n  A \\<in> sets (G t)\n  filt_equiv F M N\n  \\<forall>t.\n     space (G t) = space (F t) \\<and> sets (G t) \\<subseteq> sets (F t)\n  \\<forall>s t.\n     s \\<le> t \\<longrightarrow>\n     space (G s) = space (G t) \\<and> sets (G s) \\<subseteq> sets (G t)\n\ngoal (1 subgoal):\n 1. A \\<in> sets (F t)", "by auto"], ["proof (state)\nthis:\n  A \\<in> sets (F t)\n\ngoal (1 subgoal):\n 1. \\<And>t A.\n       A \\<in> sets (G t) \\<Longrightarrow>\n       (emeasure M A = 0) = (emeasure N A = 0)", "thus \"(emeasure M A = 0) = (emeasure N A = 0)\""], ["proof (prove)\nusing this:\n  A \\<in> sets (F t)\n\ngoal (1 subgoal):\n 1. (emeasure M A = 0) = (emeasure N A = 0)", "using assms"], ["proof (prove)\nusing this:\n  A \\<in> sets (F t)\n  filt_equiv F M N\n  \\<forall>t. subalgebra (F t) (G t)\n  \\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s)\n\ngoal (1 subgoal):\n 1. (emeasure M A = 0) = (emeasure N A = 0)", "unfolding filt_equiv_def"], ["proof (prove)\nusing this:\n  A \\<in> sets (F t)\n  sets M = sets N \\<and>\n  Filtration.filtration M F \\<and>\n  (\\<forall>t A.\n      A \\<in> sets (F t) \\<longrightarrow>\n      (emeasure M A = 0) = (emeasure N A = 0))\n  \\<forall>t. subalgebra (F t) (G t)\n  \\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s)\n\ngoal (1 subgoal):\n 1. (emeasure M A = 0) = (emeasure N A = 0)", "by simp"], ["proof (state)\nthis:\n  (emeasure M A = 0) = (emeasure N A = 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>t A.\n     A \\<in> sets (G t) \\<longrightarrow>\n     (emeasure M A = 0) = (emeasure N A = 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in CRR_market_viable) CRR_market_fair_price:\n  assumes \"pyf\\<in> borel_measurable (G matur)\"\n  shows \"fair_price Mkt\n    (\\<Sum> w\\<in> range (pseudo_proj_True matur). (prod (prob_component ((1 + r - d) / (u - d)) w) {0..<matur}) *\n      ((discounted_value r (\\<lambda>m. pyf) matur) w))\n    pyf matur\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fair_price Mkt\n     (\\<Sum>w\\<in>range (pseudo_proj_True matur).\n        prod (prob_component ((1 + r - d) / (u - d)) w) {0..<matur} *\n        discounted_value r (\\<lambda>m. pyf) matur w)\n     pyf matur", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fair_price Mkt\n     (\\<Sum>w\\<in>range (pseudo_proj_True matur).\n        prod (prob_component ((1 + r - d) / (u - d)) w) {0..<matur} *\n        discounted_value r (\\<lambda>m. pyf) matur w)\n     pyf matur", "define dpf where \"dpf = (discounted_value r (\\<lambda>m. pyf) matur)\""], ["proof (state)\nthis:\n  dpf = discounted_value r (\\<lambda>m. pyf) matur\n\ngoal (1 subgoal):\n 1. fair_price Mkt\n     (\\<Sum>w\\<in>range (pseudo_proj_True matur).\n        prod (prob_component ((1 + r - d) / (u - d)) w) {0..<matur} *\n        discounted_value r (\\<lambda>m. pyf) matur w)\n     pyf matur", "define q where \"q = (1 + r - d) / (u - d)\""], ["proof (state)\nthis:\n  q = (1 + r - d) / (u - d)\n\ngoal (1 subgoal):\n 1. fair_price Mkt\n     (\\<Sum>w\\<in>range (pseudo_proj_True matur).\n        prod (prob_component ((1 + r - d) / (u - d)) w) {0..<matur} *\n        discounted_value r (\\<lambda>m. pyf) matur w)\n     pyf matur", "have \"\\<exists>pf. replicating_portfolio pf pyf matur\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>pf. replicating_portfolio pf pyf matur", "using CRR_market_complete assms"], ["proof (prove)\nusing this:\n  complete_market\n  pyf \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. \\<exists>pf. replicating_portfolio pf pyf matur", "unfolding complete_market_def"], ["proof (prove)\nusing this:\n  \\<forall>matur.\n     \\<forall>der\\<in>borel_measurable (G matur).\n        \\<exists>p. replicating_portfolio p der matur\n  pyf \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. \\<exists>pf. replicating_portfolio pf pyf matur", "by simp"], ["proof (state)\nthis:\n  \\<exists>pf. replicating_portfolio pf pyf matur\n\ngoal (1 subgoal):\n 1. fair_price Mkt\n     (\\<Sum>w\\<in>range (pseudo_proj_True matur).\n        prod (prob_component ((1 + r - d) / (u - d)) w) {0..<matur} *\n        discounted_value r (\\<lambda>m. pyf) matur w)\n     pyf matur", "from this"], ["proof (chain)\npicking this:\n  \\<exists>pf. replicating_portfolio pf pyf matur", "obtain pf where \"replicating_portfolio pf pyf matur\""], ["proof (prove)\nusing this:\n  \\<exists>pf. replicating_portfolio pf pyf matur\n\ngoal (1 subgoal):\n 1. (\\<And>pf.\n        replicating_portfolio pf pyf matur \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  replicating_portfolio pf pyf matur\n\ngoal (1 subgoal):\n 1. fair_price Mkt\n     (\\<Sum>w\\<in>range (pseudo_proj_True matur).\n        prod (prob_component ((1 + r - d) / (u - d)) w) {0..<matur} *\n        discounted_value r (\\<lambda>m. pyf) matur w)\n     pyf matur", "note pfprop = this"], ["proof (state)\nthis:\n  replicating_portfolio pf pyf matur\n\ngoal (1 subgoal):\n 1. fair_price Mkt\n     (\\<Sum>w\\<in>range (pseudo_proj_True matur).\n        prod (prob_component ((1 + r - d) / (u - d)) w) {0..<matur} *\n        discounted_value r (\\<lambda>m. pyf) matur w)\n     pyf matur", "define N where \"N = bernoulli_stream ((1 + r - d) / (u - d))\""], ["proof (state)\nthis:\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n\ngoal (1 subgoal):\n 1. fair_price Mkt\n     (\\<Sum>w\\<in>range (pseudo_proj_True matur).\n        prod (prob_component ((1 + r - d) / (u - d)) w) {0..<matur} *\n        discounted_value r (\\<lambda>m. pyf) matur w)\n     pyf matur", "have \"fair_price Mkt (integral\\<^sup>L N dpf) pyf matur\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fair_price Mkt (integral\\<^sup>L N dpf) pyf matur", "unfolding dpf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fair_price Mkt\n     (integral\\<^sup>L N (discounted_value r (\\<lambda>m. pyf) matur)) pyf\n     matur", "proof (rule replicating_expectation_finite)"], ["proof (state)\ngoal (8 subgoals):\n 1. risk_neutral_prob N\n 2. filt_equiv G M N\n 3. replicating_portfolio ?pf pyf matur\n 4. \\<forall>n.\n       \\<forall>asset\\<in>support_set ?pf.\n          finite (prices Mkt asset n ` space M)\n 5. \\<forall>n.\n       \\<forall>asset\\<in>support_set ?pf. finite (?pf asset n ` space M)\n 6. viable_market Mkt\n 7. sets (G 0) = {{}, space M}\n 8. pyf \\<in> borel_measurable (G matur)", "show \"risk_neutral_prob N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. risk_neutral_prob N", "using assms risk_neutral_iff"], ["proof (prove)\nusing this:\n  pyf \\<in> borel_measurable (G matur)\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> risk_neutral_prob ?N = (?q = (1 + r - d) / (u - d))\n\ngoal (1 subgoal):\n 1. risk_neutral_prob N", "using CRR_viable gt_param lt_param N_def"], ["proof (prove)\nusing this:\n  pyf \\<in> borel_measurable (G matur)\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1\\<rbrakk>\n  \\<Longrightarrow> risk_neutral_prob ?N = (?q = (1 + r - d) / (u - d))\n  viable_market Mkt\n  \\<lbrakk>?q = (1 + r - d) / (u - d); viable_market Mkt\\<rbrakk>\n  \\<Longrightarrow> 0 < ?q\n  \\<lbrakk>?q = (1 + r - d) / (u - d); viable_market Mkt\\<rbrakk>\n  \\<Longrightarrow> ?q < 1\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n\ngoal (1 subgoal):\n 1. risk_neutral_prob N", "by blast"], ["proof (state)\nthis:\n  risk_neutral_prob N\n\ngoal (7 subgoals):\n 1. filt_equiv G M N\n 2. replicating_portfolio ?pf pyf matur\n 3. \\<forall>n.\n       \\<forall>asset\\<in>support_set ?pf.\n          finite (prices Mkt asset n ` space M)\n 4. \\<forall>n.\n       \\<forall>asset\\<in>support_set ?pf. finite (?pf asset n ` space M)\n 5. viable_market Mkt\n 6. sets (G 0) = {{}, space M}\n 7. pyf \\<in> borel_measurable (G matur)", "have \"filt_equiv nat_filtration M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filt_equiv nat_filtration M N", "using bernoulli_stream_equiv[of N \"(1+r-d)/(u-d)\"]\n        assms gt_param lt_param CRR_viable psgt pslt N_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>N = bernoulli_stream ((1 + r - d) / (u - d)); 0 < p; p < 1;\n   0 < (1 + r - d) / (u - d); (1 + r - d) / (u - d) < 1\\<rbrakk>\n  \\<Longrightarrow> filt_equiv nat_filtration M N\n  pyf \\<in> borel_measurable (G matur)\n  \\<lbrakk>?q = (1 + r - d) / (u - d); viable_market Mkt\\<rbrakk>\n  \\<Longrightarrow> 0 < ?q\n  \\<lbrakk>?q = (1 + r - d) / (u - d); viable_market Mkt\\<rbrakk>\n  \\<Longrightarrow> ?q < 1\n  viable_market Mkt\n  0 < p\n  p < 1\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n\ngoal (1 subgoal):\n 1. filt_equiv nat_filtration M N", "by simp"], ["proof (state)\nthis:\n  filt_equiv nat_filtration M N\n\ngoal (7 subgoals):\n 1. filt_equiv G M N\n 2. replicating_portfolio ?pf pyf matur\n 3. \\<forall>n.\n       \\<forall>asset\\<in>support_set ?pf.\n          finite (prices Mkt asset n ` space M)\n 4. \\<forall>n.\n       \\<forall>asset\\<in>support_set ?pf. finite (?pf asset n ` space M)\n 5. viable_market Mkt\n 6. sets (G 0) = {{}, space M}\n 7. pyf \\<in> borel_measurable (G matur)", "thus \"filt_equiv G M N\""], ["proof (prove)\nusing this:\n  filt_equiv nat_filtration M N\n\ngoal (1 subgoal):\n 1. filt_equiv G M N", "using subfilt_filt_equiv"], ["proof (prove)\nusing this:\n  filt_equiv nat_filtration M N\n  \\<lbrakk>filt_equiv ?F ?M ?N; \\<forall>t. subalgebra (?F t) (?G t);\n   \\<forall>s t.\n      s \\<le> t \\<longrightarrow> subalgebra (?G t) (?G s)\\<rbrakk>\n  \\<Longrightarrow> filt_equiv ?G ?M ?N\n\ngoal (1 subgoal):\n 1. filt_equiv G M N", "using Filtration.filtration_def filtration geom_rand_walk_borel_adapted\n        stoch_proc_subalg_nat_filt stock_filtration"], ["proof (prove)\nusing this:\n  filt_equiv nat_filtration M N\n  \\<lbrakk>filt_equiv ?F ?M ?N; \\<forall>t. subalgebra (?F t) (?G t);\n   \\<forall>s t.\n      s \\<le> t \\<longrightarrow> subalgebra (?G t) (?G s)\\<rbrakk>\n  \\<Longrightarrow> filt_equiv ?G ?M ?N\n  Filtration.filtration ?M ?F =\n  ((\\<forall>t. subalgebra ?M (?F t)) \\<and>\n   (\\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (?F t) (?F s)))\n  Filtration.filtration M G\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  borel_adapt_stoch_proc nat_filtration ?X \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M ?X borel ?n)\n  G = stoch_proc_filt M geom_proc borel\n\ngoal (1 subgoal):\n 1. filt_equiv G M N", "by blast"], ["proof (state)\nthis:\n  filt_equiv G M N\n\ngoal (6 subgoals):\n 1. replicating_portfolio ?pf pyf matur\n 2. \\<forall>n.\n       \\<forall>asset\\<in>support_set ?pf.\n          finite (prices Mkt asset n ` space M)\n 3. \\<forall>n.\n       \\<forall>asset\\<in>support_set ?pf. finite (?pf asset n ` space M)\n 4. viable_market Mkt\n 5. sets (G 0) = {{}, space M}\n 6. pyf \\<in> borel_measurable (G matur)", "show \"pyf \\<in> borel_measurable (G matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pyf \\<in> borel_measurable (G matur)", "using assms"], ["proof (prove)\nusing this:\n  pyf \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. pyf \\<in> borel_measurable (G matur)", "by simp"], ["proof (state)\nthis:\n  pyf \\<in> borel_measurable (G matur)\n\ngoal (5 subgoals):\n 1. replicating_portfolio ?pf pyf matur\n 2. \\<forall>n.\n       \\<forall>asset\\<in>support_set ?pf.\n          finite (prices Mkt asset n ` space M)\n 3. \\<forall>n.\n       \\<forall>asset\\<in>support_set ?pf. finite (?pf asset n ` space M)\n 4. viable_market Mkt\n 5. sets (G 0) = {{}, space M}", "show \"viable_market Mkt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. viable_market Mkt", "using CRR_viable"], ["proof (prove)\nusing this:\n  viable_market Mkt\n\ngoal (1 subgoal):\n 1. viable_market Mkt", "by simp"], ["proof (state)\nthis:\n  viable_market Mkt\n\ngoal (4 subgoals):\n 1. replicating_portfolio ?pf pyf matur\n 2. \\<forall>n.\n       \\<forall>asset\\<in>support_set ?pf.\n          finite (prices Mkt asset n ` space M)\n 3. \\<forall>n.\n       \\<forall>asset\\<in>support_set ?pf. finite (?pf asset n ` space M)\n 4. sets (G 0) = {{}, space M}", "have \"infinite_cts_filtration p M nat_filtration\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_cts_filtration p M nat_filtration", "using bernoulli_nat_filtration[of M p] bernoulli psgt pslt"], ["proof (prove)\nusing this:\n  \\<lbrakk>M = bernoulli_stream p; 0 < p; p < 1; 0 < p; p < 1\\<rbrakk>\n  \\<Longrightarrow> infinite_cts_filtration p M nat_filtration\n  M = bernoulli_stream p\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. infinite_cts_filtration p M nat_filtration", "by simp"], ["proof (state)\nthis:\n  infinite_cts_filtration p M nat_filtration\n\ngoal (4 subgoals):\n 1. replicating_portfolio ?pf pyf matur\n 2. \\<forall>n.\n       \\<forall>asset\\<in>support_set ?pf.\n          finite (prices Mkt asset n ` space M)\n 3. \\<forall>n.\n       \\<forall>asset\\<in>support_set ?pf. finite (?pf asset n ` space M)\n 4. sets (G 0) = {{}, space M}", "thus \"sets (G 0) = {{}, space M}\""], ["proof (prove)\nusing this:\n  infinite_cts_filtration p M nat_filtration\n\ngoal (1 subgoal):\n 1. sets (G 0) = {{}, space M}", "using stock_filtration\n      infinite_cts_filtration.stoch_proc_filt_triv_init[of p M nat_filtration geom_proc]\n      geom_rand_walk_borel_adapted bot_nat_def"], ["proof (prove)\nusing this:\n  infinite_cts_filtration p M nat_filtration\n  G = stoch_proc_filt M geom_proc borel\n  \\<lbrakk>infinite_cts_filtration p M nat_filtration;\n   borel_adapt_stoch_proc nat_filtration geom_proc\\<rbrakk>\n  \\<Longrightarrow> init_triv_filt M (stoch_proc_filt M geom_proc borel)\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  \\<bottom> = 0\n\ngoal (1 subgoal):\n 1. sets (G 0) = {{}, space M}", "unfolding init_triv_filt_def"], ["proof (prove)\nusing this:\n  infinite_cts_filtration p M nat_filtration\n  G = stoch_proc_filt M geom_proc borel\n  \\<lbrakk>infinite_cts_filtration p M nat_filtration;\n   borel_adapt_stoch_proc nat_filtration geom_proc\\<rbrakk>\n  \\<Longrightarrow> Filtration.filtration M\n                     (stoch_proc_filt M geom_proc borel) \\<and>\n                    sets (stoch_proc_filt M geom_proc borel \\<bottom>) =\n                    {{}, space M}\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  \\<bottom> = 0\n\ngoal (1 subgoal):\n 1. sets (G 0) = {{}, space M}", "by simp"], ["proof (state)\nthis:\n  sets (G 0) = {{}, space M}\n\ngoal (3 subgoals):\n 1. replicating_portfolio ?pf pyf matur\n 2. \\<forall>n.\n       \\<forall>asset\\<in>support_set ?pf.\n          finite (prices Mkt asset n ` space M)\n 3. \\<forall>n.\n       \\<forall>asset\\<in>support_set ?pf. finite (?pf asset n ` space M)", "show \"replicating_portfolio pf pyf matur\""], ["proof (prove)\ngoal (1 subgoal):\n 1. replicating_portfolio pf pyf matur", "using pfprop"], ["proof (prove)\nusing this:\n  replicating_portfolio pf pyf matur\n\ngoal (1 subgoal):\n 1. replicating_portfolio pf pyf matur", "."], ["proof (state)\nthis:\n  replicating_portfolio pf pyf matur\n\ngoal (2 subgoals):\n 1. \\<forall>n.\n       \\<forall>asset\\<in>support_set pf.\n          finite (prices Mkt asset n ` space M)\n 2. \\<forall>n.\n       \\<forall>asset\\<in>support_set pf. finite (pf asset n ` space M)", "show \"\\<forall>n. \\<forall>asset\\<in>support_set pf. finite (prices Mkt asset n ` space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       \\<forall>asset\\<in>support_set pf.\n          finite (prices Mkt asset n ` space M)", "proof (intro allI ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n asset.\n       asset \\<in> support_set pf \\<Longrightarrow>\n       finite (prices Mkt asset n ` space M)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n asset.\n       asset \\<in> support_set pf \\<Longrightarrow>\n       finite (prices Mkt asset n ` space M)", "fix asset"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n asset.\n       asset \\<in> support_set pf \\<Longrightarrow>\n       finite (prices Mkt asset n ` space M)", "assume \"asset \\<in> support_set pf\""], ["proof (state)\nthis:\n  asset \\<in> support_set pf\n\ngoal (1 subgoal):\n 1. \\<And>n asset.\n       asset \\<in> support_set pf \\<Longrightarrow>\n       finite (prices Mkt asset n ` space M)", "hence \"prices Mkt asset n \\<in> borel_measurable (G n)\""], ["proof (prove)\nusing this:\n  asset \\<in> support_set pf\n\ngoal (1 subgoal):\n 1. prices Mkt asset n \\<in> borel_measurable (G n)", "using readable pfprop"], ["proof (prove)\nusing this:\n  asset \\<in> support_set pf\n  \\<forall>asset\\<in>stocks Mkt. borel_adapt_stoch_proc G (prices Mkt asset)\n  replicating_portfolio pf pyf matur\n\ngoal (1 subgoal):\n 1. prices Mkt asset n \\<in> borel_measurable (G n)", "unfolding  replicating_portfolio_def stock_portfolio_def adapt_stoch_proc_def"], ["proof (prove)\nusing this:\n  asset \\<in> support_set pf\n  \\<forall>asset\\<in>stocks Mkt.\n     \\<forall>t. prices Mkt asset t \\<in> borel_measurable (G t)\n  (portfolio pf \\<and> support_set pf \\<subseteq> stocks Mkt) \\<and>\n  trading_strategy pf \\<and>\n  self_financing Mkt pf \\<and> AEeq M (cls_val_process Mkt pf matur) pyf\n\ngoal (1 subgoal):\n 1. prices Mkt asset n \\<in> borel_measurable (G n)", "by auto"], ["proof (state)\nthis:\n  prices Mkt asset n \\<in> borel_measurable (G n)\n\ngoal (1 subgoal):\n 1. \\<And>n asset.\n       asset \\<in> support_set pf \\<Longrightarrow>\n       finite (prices Mkt asset n ` space M)", "hence \"prices Mkt asset n \\<in> borel_measurable (nat_filtration n)\""], ["proof (prove)\nusing this:\n  prices Mkt asset n \\<in> borel_measurable (G n)\n\ngoal (1 subgoal):\n 1. prices Mkt asset n \\<in> borel_measurable (nat_filtration n)", "using stock_filtration\n        stoch_proc_subalg_nat_filt geom_rand_walk_borel_adapted\n        measurable_from_subalg[of \"nat_filtration n\" \"G n\" \"prices Mkt asset n\" borel]"], ["proof (prove)\nusing this:\n  prices Mkt asset n \\<in> borel_measurable (G n)\n  G = stoch_proc_filt M geom_proc borel\n  borel_adapt_stoch_proc nat_filtration ?X \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M ?X borel ?n)\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  \\<lbrakk>subalgebra (nat_filtration n) (G n);\n   prices Mkt asset n \\<in> borel_measurable (G n)\\<rbrakk>\n  \\<Longrightarrow> prices Mkt asset n\n                    \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. prices Mkt asset n \\<in> borel_measurable (nat_filtration n)", "unfolding adapt_stoch_proc_def"], ["proof (prove)\nusing this:\n  prices Mkt asset n \\<in> borel_measurable (G n)\n  G = stoch_proc_filt M geom_proc borel\n  \\<forall>t.\n     ?X t \\<in> borel_measurable (nat_filtration t) \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M ?X borel ?n)\n  \\<forall>t. geom_proc t \\<in> borel_measurable (nat_filtration t)\n  \\<lbrakk>subalgebra (nat_filtration n) (G n);\n   prices Mkt asset n \\<in> borel_measurable (G n)\\<rbrakk>\n  \\<Longrightarrow> prices Mkt asset n\n                    \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. prices Mkt asset n \\<in> borel_measurable (nat_filtration n)", "by auto"], ["proof (state)\nthis:\n  prices Mkt asset n \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. \\<And>n asset.\n       asset \\<in> support_set pf \\<Longrightarrow>\n       finite (prices Mkt asset n ` space M)", "thus \"finite (prices Mkt asset n ` space M)\""], ["proof (prove)\nusing this:\n  prices Mkt asset n \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. finite (prices Mkt asset n ` space M)", "using nat_filtration_vimage_finite[of \"prices Mkt asset n\"]"], ["proof (prove)\nusing this:\n  prices Mkt asset n \\<in> borel_measurable (nat_filtration n)\n  prices Mkt asset n\n  \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  finite (prices Mkt asset n ` space M)\n\ngoal (1 subgoal):\n 1. finite (prices Mkt asset n ` space M)", "by simp"], ["proof (state)\nthis:\n  finite (prices Mkt asset n ` space M)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n.\n     \\<forall>asset\\<in>support_set pf.\n        finite (prices Mkt asset n ` space M)\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       \\<forall>asset\\<in>support_set pf. finite (pf asset n ` space M)", "show \"\\<forall>n. \\<forall>asset\\<in>support_set pf. finite (pf asset n ` space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       \\<forall>asset\\<in>support_set pf. finite (pf asset n ` space M)", "proof (intro allI ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n asset.\n       asset \\<in> support_set pf \\<Longrightarrow>\n       finite (pf asset n ` space M)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n asset.\n       asset \\<in> support_set pf \\<Longrightarrow>\n       finite (pf asset n ` space M)", "fix asset"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n asset.\n       asset \\<in> support_set pf \\<Longrightarrow>\n       finite (pf asset n ` space M)", "assume \"asset \\<in> support_set pf\""], ["proof (state)\nthis:\n  asset \\<in> support_set pf\n\ngoal (1 subgoal):\n 1. \\<And>n asset.\n       asset \\<in> support_set pf \\<Longrightarrow>\n       finite (pf asset n ` space M)", "hence \"pf asset n \\<in> borel_measurable (G n)\""], ["proof (prove)\nusing this:\n  asset \\<in> support_set pf\n\ngoal (1 subgoal):\n 1. pf asset n \\<in> borel_measurable (G n)", "using pfprop predict_imp_adapt[of \"pf asset\"]"], ["proof (prove)\nusing this:\n  asset \\<in> support_set pf\n  replicating_portfolio pf pyf matur\n  predict_stoch_proc G (pf asset) ?N \\<Longrightarrow>\n  adapt_stoch_proc G (pf asset) ?N\n\ngoal (1 subgoal):\n 1. pf asset n \\<in> borel_measurable (G n)", "unfolding replicating_portfolio_def trading_strategy_def adapt_stoch_proc_def"], ["proof (prove)\nusing this:\n  asset \\<in> support_set pf\n  stock_portfolio Mkt pf \\<and>\n  (portfolio pf \\<and>\n   (\\<forall>asset\\<in>support_set pf.\n       borel_predict_stoch_proc G (pf asset))) \\<and>\n  self_financing Mkt pf \\<and> AEeq M (cls_val_process Mkt pf matur) pyf\n  predict_stoch_proc G (pf asset) ?N \\<Longrightarrow>\n  \\<forall>t. pf asset t \\<in> G t \\<rightarrow>\\<^sub>M ?N\n\ngoal (1 subgoal):\n 1. pf asset n \\<in> borel_measurable (G n)", "by auto"], ["proof (state)\nthis:\n  pf asset n \\<in> borel_measurable (G n)\n\ngoal (1 subgoal):\n 1. \\<And>n asset.\n       asset \\<in> support_set pf \\<Longrightarrow>\n       finite (pf asset n ` space M)", "hence \"pf asset n \\<in> borel_measurable (nat_filtration n)\""], ["proof (prove)\nusing this:\n  pf asset n \\<in> borel_measurable (G n)\n\ngoal (1 subgoal):\n 1. pf asset n \\<in> borel_measurable (nat_filtration n)", "using stock_filtration\n        stoch_proc_subalg_nat_filt geom_rand_walk_borel_adapted\n        measurable_from_subalg[of \"nat_filtration n\" \"G n\" \"pf asset n\" borel]"], ["proof (prove)\nusing this:\n  pf asset n \\<in> borel_measurable (G n)\n  G = stoch_proc_filt M geom_proc borel\n  borel_adapt_stoch_proc nat_filtration ?X \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M ?X borel ?n)\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  \\<lbrakk>subalgebra (nat_filtration n) (G n);\n   pf asset n \\<in> borel_measurable (G n)\\<rbrakk>\n  \\<Longrightarrow> pf asset n \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. pf asset n \\<in> borel_measurable (nat_filtration n)", "unfolding adapt_stoch_proc_def"], ["proof (prove)\nusing this:\n  pf asset n \\<in> borel_measurable (G n)\n  G = stoch_proc_filt M geom_proc borel\n  \\<forall>t.\n     ?X t \\<in> borel_measurable (nat_filtration t) \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M ?X borel ?n)\n  \\<forall>t. geom_proc t \\<in> borel_measurable (nat_filtration t)\n  \\<lbrakk>subalgebra (nat_filtration n) (G n);\n   pf asset n \\<in> borel_measurable (G n)\\<rbrakk>\n  \\<Longrightarrow> pf asset n \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. pf asset n \\<in> borel_measurable (nat_filtration n)", "by auto"], ["proof (state)\nthis:\n  pf asset n \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. \\<And>n asset.\n       asset \\<in> support_set pf \\<Longrightarrow>\n       finite (pf asset n ` space M)", "thus \"finite (pf asset n ` space M)\""], ["proof (prove)\nusing this:\n  pf asset n \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. finite (pf asset n ` space M)", "using nat_filtration_vimage_finite[of \"pf asset n\"]"], ["proof (prove)\nusing this:\n  pf asset n \\<in> borel_measurable (nat_filtration n)\n  pf asset n \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  finite (pf asset n ` space M)\n\ngoal (1 subgoal):\n 1. finite (pf asset n ` space M)", "by simp"], ["proof (state)\nthis:\n  finite (pf asset n ` space M)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n.\n     \\<forall>asset\\<in>support_set pf. finite (pf asset n ` space M)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fair_price Mkt (integral\\<^sup>L N dpf) pyf matur\n\ngoal (1 subgoal):\n 1. fair_price Mkt\n     (\\<Sum>w\\<in>range (pseudo_proj_True matur).\n        prod (prob_component ((1 + r - d) / (u - d)) w) {0..<matur} *\n        discounted_value r (\\<lambda>m. pyf) matur w)\n     pyf matur", "moreover"], ["proof (state)\nthis:\n  fair_price Mkt (integral\\<^sup>L N dpf) pyf matur\n\ngoal (1 subgoal):\n 1. fair_price Mkt\n     (\\<Sum>w\\<in>range (pseudo_proj_True matur).\n        prod (prob_component ((1 + r - d) / (u - d)) w) {0..<matur} *\n        discounted_value r (\\<lambda>m. pyf) matur w)\n     pyf matur", "have \"integral\\<^sup>L N dpf =\n    (\\<Sum> w\\<in> range (pseudo_proj_True matur). (prod (prob_component q w) {0..<matur}) * (dpf w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>L N dpf =\n    (\\<Sum>w\\<in>range (pseudo_proj_True matur).\n       prod (prob_component q w) {0..<matur} * dpf w)", "proof (rule infinite_cts_filtration.expect_prob_comp)"], ["proof (state)\ngoal (2 subgoals):\n 1. infinite_cts_filtration q N ?F\n 2. dpf \\<in> borel_measurable (?F matur)", "show \"infinite_cts_filtration q N nat_filtration\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_cts_filtration q N nat_filtration", "using  assms  pslt psgt\n        bernoulli_nat_filtration"], ["proof (prove)\nusing this:\n  pyf \\<in> borel_measurable (G matur)\n  p < 1\n  0 < p\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1; 0 < p; p < 1\\<rbrakk>\n  \\<Longrightarrow> infinite_cts_filtration ?q ?N nat_filtration\n\ngoal (1 subgoal):\n 1. infinite_cts_filtration q N nat_filtration", "unfolding q_def"], ["proof (prove)\nusing this:\n  pyf \\<in> borel_measurable (G matur)\n  p < 1\n  0 < p\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1; 0 < p; p < 1\\<rbrakk>\n  \\<Longrightarrow> infinite_cts_filtration ?q ?N nat_filtration\n\ngoal (1 subgoal):\n 1. infinite_cts_filtration ((1 + r - d) / (u - d)) N nat_filtration", "using gt_param lt_param CRR_viable N_def"], ["proof (prove)\nusing this:\n  pyf \\<in> borel_measurable (G matur)\n  p < 1\n  0 < p\n  \\<lbrakk>?N = bernoulli_stream ?q; 0 < ?q; ?q < 1; 0 < p; p < 1\\<rbrakk>\n  \\<Longrightarrow> infinite_cts_filtration ?q ?N nat_filtration\n  \\<lbrakk>?q = (1 + r - d) / (u - d); viable_market Mkt\\<rbrakk>\n  \\<Longrightarrow> 0 < ?q\n  \\<lbrakk>?q = (1 + r - d) / (u - d); viable_market Mkt\\<rbrakk>\n  \\<Longrightarrow> ?q < 1\n  viable_market Mkt\n  N = bernoulli_stream ((1 + r - d) / (u - d))\n\ngoal (1 subgoal):\n 1. infinite_cts_filtration ((1 + r - d) / (u - d)) N nat_filtration", "by auto"], ["proof (state)\nthis:\n  infinite_cts_filtration q N nat_filtration\n\ngoal (1 subgoal):\n 1. dpf \\<in> borel_measurable (nat_filtration matur)", "have \"dpf \\<in> borel_measurable (G matur)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dpf \\<in> borel_measurable (G matur)", "using assms discounted_measurable[of pyf \"G matur\"]"], ["proof (prove)\nusing this:\n  pyf \\<in> borel_measurable (G matur)\n  pyf \\<in> borel_measurable (G matur) \\<Longrightarrow>\n  discounted_value ?r (\\<lambda>m. pyf) ?m \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. dpf \\<in> borel_measurable (G matur)", "unfolding dpf_def"], ["proof (prove)\nusing this:\n  pyf \\<in> borel_measurable (G matur)\n  pyf \\<in> borel_measurable (G matur) \\<Longrightarrow>\n  discounted_value ?r (\\<lambda>m. pyf) ?m \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. discounted_value r (\\<lambda>m. pyf) matur\n    \\<in> borel_measurable (G matur)", "by simp"], ["proof (state)\nthis:\n  dpf \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. dpf \\<in> borel_measurable (nat_filtration matur)", "thus \"dpf \\<in> borel_measurable (nat_filtration matur)\""], ["proof (prove)\nusing this:\n  dpf \\<in> borel_measurable (G matur)\n\ngoal (1 subgoal):\n 1. dpf \\<in> borel_measurable (nat_filtration matur)", "using stock_filtration\n        stoch_proc_subalg_nat_filt geom_rand_walk_borel_adapted\n        measurable_from_subalg[of \"nat_filtration matur\" \"G matur\" dpf]"], ["proof (prove)\nusing this:\n  dpf \\<in> borel_measurable (G matur)\n  G = stoch_proc_filt M geom_proc borel\n  borel_adapt_stoch_proc nat_filtration ?X \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M ?X borel ?n)\n  borel_adapt_stoch_proc nat_filtration geom_proc\n  \\<lbrakk>subalgebra (nat_filtration matur) (G matur);\n   dpf \\<in> G matur \\<rightarrow>\\<^sub>M ?N\\<rbrakk>\n  \\<Longrightarrow> dpf \\<in> nat_filtration matur \\<rightarrow>\\<^sub>M ?N\n\ngoal (1 subgoal):\n 1. dpf \\<in> borel_measurable (nat_filtration matur)", "unfolding adapt_stoch_proc_def"], ["proof (prove)\nusing this:\n  dpf \\<in> borel_measurable (G matur)\n  G = stoch_proc_filt M geom_proc borel\n  \\<forall>t.\n     ?X t \\<in> borel_measurable (nat_filtration t) \\<Longrightarrow>\n  subalgebra (nat_filtration ?n) (stoch_proc_filt M ?X borel ?n)\n  \\<forall>t. geom_proc t \\<in> borel_measurable (nat_filtration t)\n  \\<lbrakk>subalgebra (nat_filtration matur) (G matur);\n   dpf \\<in> G matur \\<rightarrow>\\<^sub>M ?N\\<rbrakk>\n  \\<Longrightarrow> dpf \\<in> nat_filtration matur \\<rightarrow>\\<^sub>M ?N\n\ngoal (1 subgoal):\n 1. dpf \\<in> borel_measurable (nat_filtration matur)", "by auto"], ["proof (state)\nthis:\n  dpf \\<in> borel_measurable (nat_filtration matur)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  integral\\<^sup>L N dpf =\n  (\\<Sum>w\\<in>range (pseudo_proj_True matur).\n     prod (prob_component q w) {0..<matur} * dpf w)\n\ngoal (1 subgoal):\n 1. fair_price Mkt\n     (\\<Sum>w\\<in>range (pseudo_proj_True matur).\n        prod (prob_component ((1 + r - d) / (u - d)) w) {0..<matur} *\n        discounted_value r (\\<lambda>m. pyf) matur w)\n     pyf matur", "ultimately"], ["proof (chain)\npicking this:\n  fair_price Mkt (integral\\<^sup>L N dpf) pyf matur\n  integral\\<^sup>L N dpf =\n  (\\<Sum>w\\<in>range (pseudo_proj_True matur).\n     prod (prob_component q w) {0..<matur} * dpf w)", "show ?thesis"], ["proof (prove)\nusing this:\n  fair_price Mkt (integral\\<^sup>L N dpf) pyf matur\n  integral\\<^sup>L N dpf =\n  (\\<Sum>w\\<in>range (pseudo_proj_True matur).\n     prod (prob_component q w) {0..<matur} * dpf w)\n\ngoal (1 subgoal):\n 1. fair_price Mkt\n     (\\<Sum>w\\<in>range (pseudo_proj_True matur).\n        prod (prob_component ((1 + r - d) / (u - d)) w) {0..<matur} *\n        discounted_value r (\\<lambda>m. pyf) matur w)\n     pyf matur", "unfolding dpf_def q_def"], ["proof (prove)\nusing this:\n  fair_price Mkt\n   (integral\\<^sup>L N (discounted_value r (\\<lambda>m. pyf) matur)) pyf\n   matur\n  integral\\<^sup>L N (discounted_value r (\\<lambda>m. pyf) matur) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True matur).\n     prod (prob_component ((1 + r - d) / (u - d)) w) {0..<matur} *\n     discounted_value r (\\<lambda>m. pyf) matur w)\n\ngoal (1 subgoal):\n 1. fair_price Mkt\n     (\\<Sum>w\\<in>range (pseudo_proj_True matur).\n        prod (prob_component ((1 + r - d) / (u - d)) w) {0..<matur} *\n        discounted_value r (\\<lambda>m. pyf) matur w)\n     pyf matur", "by simp"], ["proof (state)\nthis:\n  fair_price Mkt\n   (\\<Sum>w\\<in>range (pseudo_proj_True matur).\n      prod (prob_component ((1 + r - d) / (u - d)) w) {0..<matur} *\n      discounted_value r (\\<lambda>m. pyf) matur w)\n   pyf matur\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}