{"file_name": "/home/qj213/afp-2021-10-22/thys/DiscretePricing/Geometric_Random_Walk.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/DiscretePricing", "problem_names": ["lemma (in prob_grw) geom_rand_walk_borel_measurable:\nshows \"(geom_proc n) \\<in> borel_measurable M\"", "lemma (in prob_grw) geom_rand_walk_pseudo_proj_True:\nshows \"geom_proc n = geom_proc n \\<circ> pseudo_proj_True n\"", "lemma (in prob_grw) geom_rand_walk_pseudo_proj_False:\nshows \"geom_proc n = geom_proc n \\<circ> pseudo_proj_False n\"", "lemma (in prob_grw) geom_rand_walk_borel_adapted:\n  shows \"borel_adapt_stoch_proc nat_filtration geom_proc\"", "lemma (in prob_grw) grw_succ_img:\n  assumes \"(geom_proc n) -` {x} \\<noteq> {}\"\n  shows \"(geom_proc (Suc n)) ` ((geom_proc n) -` {x}) = {u*x, d*x}\"", "lemma (in prob_grw) geom_rand_walk_strictly_positive:\n  assumes \"0 < init\"\n  and \"0 < d\"\n  and \"d < u\"\n  shows \"\\<forall> n w. 0 < geom_proc n w\"", "lemma (in prob_grw) geom_rand_walk_diff_induct:\n  shows \"\\<And>w. (geom_proc (Suc n) (spick w n True) - geom_proc (Suc n) (spick w n False)) = (geom_proc n w * (u - d))\""], "translations": [["", "lemma (in prob_grw) geom_rand_walk_borel_measurable:\nshows \"(geom_proc n) \\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable borel (geom_proc n)", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. random_variable borel (geom_proc 0)\n 2. \\<And>n.\n       random_variable borel (geom_proc n) \\<Longrightarrow>\n       random_variable borel (geom_proc (Suc n))", "case (Suc n)"], ["proof (state)\nthis:\n  random_variable borel (geom_proc n)\n\ngoal (2 subgoals):\n 1. random_variable borel (geom_proc 0)\n 2. \\<And>n.\n       random_variable borel (geom_proc n) \\<Longrightarrow>\n       random_variable borel (geom_proc (Suc n))", "thus \"geom_proc (Suc n) \\<in> borel_measurable M\""], ["proof (prove)\nusing this:\n  random_variable borel (geom_proc n)\n\ngoal (1 subgoal):\n 1. random_variable borel (geom_proc (Suc n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. random_variable borel (geom_proc n) \\<Longrightarrow>\n    random_variable borel (geom_proc (Suc n))", "have \"geom_rand_walk u d init n \\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable borel (geom_rand_walk u d init n)", "using Suc geometric_process"], ["proof (prove)\nusing this:\n  random_variable borel (geom_proc n)\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. random_variable borel (geom_rand_walk u d init n)", "by simp"], ["proof (state)\nthis:\n  random_variable borel (geom_rand_walk u d init n)\n\ngoal (1 subgoal):\n 1. random_variable borel (geom_proc n) \\<Longrightarrow>\n    random_variable borel (geom_proc (Suc n))", "moreover"], ["proof (state)\nthis:\n  random_variable borel (geom_rand_walk u d init n)\n\ngoal (1 subgoal):\n 1. random_variable borel (geom_proc n) \\<Longrightarrow>\n    random_variable borel (geom_proc (Suc n))", "have \"(\\<lambda>w. ((\\<lambda>True \\<Rightarrow> u | False \\<Rightarrow> d) (snth w n))) \\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable borel\n     (\\<lambda>w.\n         case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. random_variable borel\n     (\\<lambda>w.\n         case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d)", "have \"(\\<lambda>w. snth w n) \\<in> measurable M (measure_pmf (bernoulli_pmf p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable (measure_pmf (bernoulli_pmf p)) (\\<lambda>w. w !! n)", "by (simp add: bernoulli measurable_snth_count_space)"], ["proof (state)\nthis:\n  random_variable (measure_pmf (bernoulli_pmf p)) (\\<lambda>w. w !! n)\n\ngoal (1 subgoal):\n 1. random_variable borel\n     (\\<lambda>w.\n         case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d)", "moreover"], ["proof (state)\nthis:\n  random_variable (measure_pmf (bernoulli_pmf p)) (\\<lambda>w. w !! n)\n\ngoal (1 subgoal):\n 1. random_variable borel\n     (\\<lambda>w.\n         case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d)", "have \"(\\<lambda>True \\<Rightarrow> u | False \\<Rightarrow> d) \\<in> borel_measurable (measure_pmf (bernoulli_pmf p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. measure_pmf.random_variable (bernoulli_pmf p) borel\n     (\\<lambda>x. case x of True \\<Rightarrow> u | False \\<Rightarrow> d)", "by simp"], ["proof (state)\nthis:\n  measure_pmf.random_variable (bernoulli_pmf p) borel\n   (\\<lambda>x. case x of True \\<Rightarrow> u | False \\<Rightarrow> d)\n\ngoal (1 subgoal):\n 1. random_variable borel\n     (\\<lambda>w.\n         case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d)", "ultimately"], ["proof (chain)\npicking this:\n  random_variable (measure_pmf (bernoulli_pmf p)) (\\<lambda>w. w !! n)\n  measure_pmf.random_variable (bernoulli_pmf p) borel\n   (\\<lambda>x. case x of True \\<Rightarrow> u | False \\<Rightarrow> d)", "show ?thesis"], ["proof (prove)\nusing this:\n  random_variable (measure_pmf (bernoulli_pmf p)) (\\<lambda>w. w !! n)\n  measure_pmf.random_variable (bernoulli_pmf p) borel\n   (\\<lambda>x. case x of True \\<Rightarrow> u | False \\<Rightarrow> d)\n\ngoal (1 subgoal):\n 1. random_variable borel\n     (\\<lambda>w.\n         case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d)", "by (simp add: measurable_comp)"], ["proof (state)\nthis:\n  random_variable borel\n   (\\<lambda>w. case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  random_variable borel\n   (\\<lambda>w. case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d)\n\ngoal (1 subgoal):\n 1. random_variable borel (geom_proc n) \\<Longrightarrow>\n    random_variable borel (geom_proc (Suc n))", "ultimately"], ["proof (chain)\npicking this:\n  random_variable borel (geom_rand_walk u d init n)\n  random_variable borel\n   (\\<lambda>w. case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d)", "show ?thesis"], ["proof (prove)\nusing this:\n  random_variable borel (geom_rand_walk u d init n)\n  random_variable borel\n   (\\<lambda>w. case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d)\n\ngoal (1 subgoal):\n 1. random_variable borel (geom_proc (Suc n))", "by (simp add:borel_measurable_times geometric_process)"], ["proof (state)\nthis:\n  random_variable borel (geom_proc (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  random_variable borel (geom_proc (Suc n))\n\ngoal (1 subgoal):\n 1. random_variable borel (geom_proc 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. random_variable borel (geom_proc 0)", "show \"random_variable borel (geom_proc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable borel (geom_proc 0)", "using geometric_process"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. random_variable borel (geom_proc 0)", "by simp"], ["proof (state)\nthis:\n  random_variable borel (geom_proc 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in prob_grw) geom_rand_walk_pseudo_proj_True:\nshows \"geom_proc n = geom_proc n \\<circ> pseudo_proj_True n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc n = geom_proc n \\<circ> pseudo_proj_True n", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_True n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_True (Suc n)", "case (Suc n)"], ["proof (state)\nthis:\n  geom_proc n = geom_proc n \\<circ> pseudo_proj_True n\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_True n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_True (Suc n)", "let ?tf = \"(\\<lambda>True \\<Rightarrow> u | False \\<Rightarrow> d)\""], ["proof (state)\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_True n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_True (Suc n)", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_True n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_True (Suc n)", "fix w"], ["proof (state)\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_True n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_True (Suc n)", "have \"geom_proc (Suc n) w  =  ?tf  (snth w n) * geom_proc n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w =\n    (case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n    geom_proc n w", "using geom_rand_walk.simps(2) geometric_process"], ["proof (prove)\nusing this:\n  geom_rand_walk ?u ?d ?v (Suc ?n) =\n  (\\<lambda>w.\n      (case w !! ?n of True \\<Rightarrow> ?u | False \\<Rightarrow> ?d) *\n      geom_rand_walk ?u ?d ?v ?n w)\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w =\n    (case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n    geom_proc n w", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc n) w =\n  (case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n  geom_proc n w\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_True n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_True (Suc n)", "also"], ["proof (state)\nthis:\n  geom_proc (Suc n) w =\n  (case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n  geom_proc n w\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_True n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_True (Suc n)", "have \"... = ?tf (snth (pseudo_proj_True (Suc n) w) n) * geom_proc n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n    geom_proc n w =\n    (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n w", "by (metis  lessI pseudo_proj_True_stake stake_nth)"], ["proof (state)\nthis:\n  (case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n  geom_proc n w =\n  (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n w\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_True n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_True (Suc n)", "also"], ["proof (state)\nthis:\n  (case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n  geom_proc n w =\n  (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n w\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_True n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_True (Suc n)", "have \"... = ?tf (snth (pseudo_proj_True (Suc n) w) n) * geom_proc n (pseudo_proj_True n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n w =\n    (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_True n w)", "using Suc geometric_process"], ["proof (prove)\nusing this:\n  geom_proc n = geom_proc n \\<circ> pseudo_proj_True n\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n w =\n    (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_True n w)", "by (metis comp_apply)"], ["proof (state)\nthis:\n  (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n w =\n  (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_True n w)\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_True n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_True (Suc n)", "also"], ["proof (state)\nthis:\n  (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n w =\n  (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_True n w)\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_True n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_True (Suc n)", "have \"... = ?tf (snth (pseudo_proj_True (Suc n) w) n) * geom_proc n (pseudo_proj_True (Suc n) w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_True n w) =\n    (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_True (Suc n) w)", "using geometric_process"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_True n w) =\n    (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_True (Suc n) w)", "by (metis Suc.hyps comp_apply pseudo_proj_True_proj_Suc)"], ["proof (state)\nthis:\n  (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_True n w) =\n  (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_True (Suc n) w)\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_True n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_True (Suc n)", "also"], ["proof (state)\nthis:\n  (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_True n w) =\n  (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_True (Suc n) w)\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_True n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_True (Suc n)", "have \"... = geom_proc (Suc n) (pseudo_proj_True (Suc n) w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_True (Suc n) w) =\n    geom_proc (Suc n) (pseudo_proj_True (Suc n) w)", "using geometric_process"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_True (Suc n) w) =\n    geom_proc (Suc n) (pseudo_proj_True (Suc n) w)", "by simp"], ["proof (state)\nthis:\n  (case pseudo_proj_True (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_True (Suc n) w) =\n  geom_proc (Suc n) (pseudo_proj_True (Suc n) w)\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_True n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_True (Suc n)", "finally"], ["proof (chain)\npicking this:\n  geom_proc (Suc n) w = geom_proc (Suc n) (pseudo_proj_True (Suc n) w)", "have \"geom_proc (Suc n) w  = geom_proc (Suc n) (pseudo_proj_True (Suc n) w)\""], ["proof (prove)\nusing this:\n  geom_proc (Suc n) w = geom_proc (Suc n) (pseudo_proj_True (Suc n) w)\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w = geom_proc (Suc n) (pseudo_proj_True (Suc n) w)", "."], ["proof (state)\nthis:\n  geom_proc (Suc n) w = geom_proc (Suc n) (pseudo_proj_True (Suc n) w)\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_True n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_True (Suc n)", "}"], ["proof (state)\nthis:\n  geom_proc (Suc n) ?w3 = geom_proc (Suc n) (pseudo_proj_True (Suc n) ?w3)\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_True n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_True (Suc n)", "thus \"geom_proc (Suc n) = geom_proc (Suc n) \\<circ> (pseudo_proj_True  (Suc n))\""], ["proof (prove)\nusing this:\n  geom_proc (Suc n) ?w3 = geom_proc (Suc n) (pseudo_proj_True (Suc n) ?w3)\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) = geom_proc (Suc n) \\<circ> pseudo_proj_True (Suc n)", "using geometric_process"], ["proof (prove)\nusing this:\n  geom_proc (Suc n) ?w3 = geom_proc (Suc n) (pseudo_proj_True (Suc n) ?w3)\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) = geom_proc (Suc n) \\<circ> pseudo_proj_True (Suc n)", "by auto"], ["proof (state)\nthis:\n  geom_proc (Suc n) = geom_proc (Suc n) \\<circ> pseudo_proj_True (Suc n)\n\ngoal (1 subgoal):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0", "show \"geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0", "using geometric_process"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0", "by auto"], ["proof (state)\nthis:\n  geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_True 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in prob_grw) geom_rand_walk_pseudo_proj_False:\nshows \"geom_proc n = geom_proc n \\<circ> pseudo_proj_False n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc n = geom_proc n \\<circ> pseudo_proj_False n", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_False n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "case (Suc n)"], ["proof (state)\nthis:\n  geom_proc n = geom_proc n \\<circ> pseudo_proj_False n\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_False n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "let ?tf = \"(\\<lambda>True \\<Rightarrow> u | False \\<Rightarrow> d)\""], ["proof (state)\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_False n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_False n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "fix w"], ["proof (state)\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_False n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "have \"geom_proc (Suc n) w  =  ?tf  (snth w n) * geom_proc n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w =\n    (case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n    geom_proc n w", "using geom_rand_walk.simps(2) geometric_process"], ["proof (prove)\nusing this:\n  geom_rand_walk ?u ?d ?v (Suc ?n) =\n  (\\<lambda>w.\n      (case w !! ?n of True \\<Rightarrow> ?u | False \\<Rightarrow> ?d) *\n      geom_rand_walk ?u ?d ?v ?n w)\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w =\n    (case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n    geom_proc n w", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc n) w =\n  (case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n  geom_proc n w\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_False n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "also"], ["proof (state)\nthis:\n  geom_proc (Suc n) w =\n  (case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n  geom_proc n w\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_False n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "have \"... = ?tf (snth (pseudo_proj_False (Suc n) w) n) * geom_proc n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n    geom_proc n w =\n    (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n w", "by (metis  lessI pseudo_proj_False_stake stake_nth)"], ["proof (state)\nthis:\n  (case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n  geom_proc n w =\n  (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n w\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_False n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "also"], ["proof (state)\nthis:\n  (case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n  geom_proc n w =\n  (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n w\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_False n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "have \"... = ?tf (snth (pseudo_proj_False (Suc n) w) n) * geom_proc n (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n w =\n    (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_False n w)", "using Suc geometric_process"], ["proof (prove)\nusing this:\n  geom_proc n = geom_proc n \\<circ> pseudo_proj_False n\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n w =\n    (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_False n w)", "by (metis comp_apply)"], ["proof (state)\nthis:\n  (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n w =\n  (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_False n w)\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_False n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "also"], ["proof (state)\nthis:\n  (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n w =\n  (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_False n w)\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_False n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "have \"... = ?tf (snth (pseudo_proj_False (Suc n) w) n) * geom_proc n (pseudo_proj_True n (pseudo_proj_False n w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_False n w) =\n    (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_True n (pseudo_proj_False n w))", "using  geometric_process"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_False n w) =\n    (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_True n (pseudo_proj_False n w))", "by (metis geom_rand_walk_pseudo_proj_True o_apply)"], ["proof (state)\nthis:\n  (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_False n w) =\n  (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_True n (pseudo_proj_False n w))\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_False n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "also"], ["proof (state)\nthis:\n  (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_False n w) =\n  (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_True n (pseudo_proj_False n w))\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_False n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "have \"... = ?tf (snth (pseudo_proj_False (Suc n) w) n) * geom_proc n (pseudo_proj_True n (pseudo_proj_False (Suc n) w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_True n (pseudo_proj_False n w)) =\n    (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_True n (pseudo_proj_False (Suc n) w))", "unfolding pseudo_proj_True_def pseudo_proj_False_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case ((stake (Suc n) w @ [False]) @- sconst True) !! n of\n     True \\<Rightarrow> u | False \\<Rightarrow> d) *\n    geom_proc n\n     (stake n ((stake n w @ [False]) @- sconst True) @- sconst True) =\n    (case ((stake (Suc n) w @ [False]) @- sconst True) !! n of\n     True \\<Rightarrow> u | False \\<Rightarrow> d) *\n    geom_proc n\n     (stake n ((stake (Suc n) w @ [False]) @- sconst True) @- sconst True)", "by (metis pseudo_proj_False_def pseudo_proj_False_stake pseudo_proj_True_def pseudo_proj_True_proj_Suc)"], ["proof (state)\nthis:\n  (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_True n (pseudo_proj_False n w)) =\n  (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_True n (pseudo_proj_False (Suc n) w))\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_False n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "also"], ["proof (state)\nthis:\n  (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_True n (pseudo_proj_False n w)) =\n  (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_True n (pseudo_proj_False (Suc n) w))\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_False n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "have \"... = ?tf (snth (pseudo_proj_False (Suc n) w) n) * geom_proc n (pseudo_proj_False (Suc n) w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_True n (pseudo_proj_False (Suc n) w)) =\n    (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_False (Suc n) w)", "using geometric_process"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_True n (pseudo_proj_False (Suc n) w)) =\n    (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_False (Suc n) w)", "by (metis geom_rand_walk_pseudo_proj_True o_apply)"], ["proof (state)\nthis:\n  (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_True n (pseudo_proj_False (Suc n) w)) =\n  (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_False (Suc n) w)\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_False n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "also"], ["proof (state)\nthis:\n  (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_True n (pseudo_proj_False (Suc n) w)) =\n  (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_False (Suc n) w)\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_False n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "have \"... = geom_proc (Suc n) (pseudo_proj_False (Suc n) w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_False (Suc n) w) =\n    geom_proc (Suc n) (pseudo_proj_False (Suc n) w)", "using geometric_process"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) *\n    geom_proc n (pseudo_proj_False (Suc n) w) =\n    geom_proc (Suc n) (pseudo_proj_False (Suc n) w)", "by simp"], ["proof (state)\nthis:\n  (case pseudo_proj_False (Suc n) w !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) *\n  geom_proc n (pseudo_proj_False (Suc n) w) =\n  geom_proc (Suc n) (pseudo_proj_False (Suc n) w)\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_False n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "finally"], ["proof (chain)\npicking this:\n  geom_proc (Suc n) w = geom_proc (Suc n) (pseudo_proj_False (Suc n) w)", "have \"geom_proc (Suc n) w  = geom_proc (Suc n) (pseudo_proj_False (Suc n) w)\""], ["proof (prove)\nusing this:\n  geom_proc (Suc n) w = geom_proc (Suc n) (pseudo_proj_False (Suc n) w)\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w = geom_proc (Suc n) (pseudo_proj_False (Suc n) w)", "."], ["proof (state)\nthis:\n  geom_proc (Suc n) w = geom_proc (Suc n) (pseudo_proj_False (Suc n) w)\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_False n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "}"], ["proof (state)\nthis:\n  geom_proc (Suc n) ?w3 = geom_proc (Suc n) (pseudo_proj_False (Suc n) ?w3)\n\ngoal (2 subgoals):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n 2. \\<And>n.\n       geom_proc n =\n       geom_proc n \\<circ> pseudo_proj_False n \\<Longrightarrow>\n       geom_proc (Suc n) =\n       geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "thus \"geom_proc (Suc n) = geom_proc (Suc n) \\<circ> (pseudo_proj_False  (Suc n))\""], ["proof (prove)\nusing this:\n  geom_proc (Suc n) ?w3 = geom_proc (Suc n) (pseudo_proj_False (Suc n) ?w3)\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) = geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "using geometric_process"], ["proof (prove)\nusing this:\n  geom_proc (Suc n) ?w3 = geom_proc (Suc n) (pseudo_proj_False (Suc n) ?w3)\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) = geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)", "by auto"], ["proof (state)\nthis:\n  geom_proc (Suc n) = geom_proc (Suc n) \\<circ> pseudo_proj_False (Suc n)\n\ngoal (1 subgoal):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0", "show \"geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0", "using geometric_process"], ["proof (prove)\nusing this:\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0", "by auto"], ["proof (state)\nthis:\n  geom_proc 0 = geom_proc 0 \\<circ> pseudo_proj_False 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in prob_grw) geom_rand_walk_borel_adapted:\n  shows \"borel_adapt_stoch_proc nat_filtration geom_proc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. borel_adapt_stoch_proc nat_filtration geom_proc", "unfolding adapt_stoch_proc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t. geom_proc t \\<in> borel_measurable (nat_filtration t)", "proof (auto simp add:nat_discrete_filtration)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t. geom_proc t \\<in> borel_measurable (nat_filtration t)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t. geom_proc t \\<in> borel_measurable (nat_filtration t)", "show \"geom_proc n \\<in> borel_measurable (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc n \\<in> borel_measurable (nat_filtration n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. geom_proc n \\<in> borel_measurable (nat_filtration n)", "have \"geom_proc n \\<in> borel_measurable (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc n \\<in> borel_measurable (nat_filtration n)", "proof (rule nat_filtration_comp_measurable)"], ["proof (state)\ngoal (2 subgoals):\n 1. random_variable borel (geom_proc n)\n 2. geom_proc n \\<circ> pseudo_proj_True n = geom_proc n", "show \"geom_proc n \\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable borel (geom_proc n)", "by (simp add: geom_rand_walk_borel_measurable)"], ["proof (state)\nthis:\n  random_variable borel (geom_proc n)\n\ngoal (1 subgoal):\n 1. geom_proc n \\<circ> pseudo_proj_True n = geom_proc n", "show \"geom_proc n \\<circ> pseudo_proj_True n = geom_proc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc n \\<circ> pseudo_proj_True n = geom_proc n", "using geom_rand_walk_pseudo_proj_True"], ["proof (prove)\nusing this:\n  geom_proc ?n = geom_proc ?n \\<circ> pseudo_proj_True ?n\n\ngoal (1 subgoal):\n 1. geom_proc n \\<circ> pseudo_proj_True n = geom_proc n", "by simp"], ["proof (state)\nthis:\n  geom_proc n \\<circ> pseudo_proj_True n = geom_proc n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  geom_proc n \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. geom_proc n \\<in> borel_measurable (nat_filtration n)", "then"], ["proof (chain)\npicking this:\n  geom_proc n \\<in> borel_measurable (nat_filtration n)", "show ?thesis"], ["proof (prove)\nusing this:\n  geom_proc n \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. geom_proc n \\<in> borel_measurable (nat_filtration n)", "by simp"], ["proof (state)\nthis:\n  geom_proc n \\<in> borel_measurable (nat_filtration n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  geom_proc n \\<in> borel_measurable (nat_filtration n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in prob_grw) grw_succ_img:\n  assumes \"(geom_proc n) -` {x} \\<noteq> {}\"\n  shows \"(geom_proc (Suc n)) ` ((geom_proc n) -` {x}) = {u*x, d*x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) ` geom_proc n -` {x} = {u * x, d * x}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. geom_proc (Suc n) ` geom_proc n -` {x} \\<subseteq> {u * x, d * x}\n 2. {u * x, d * x} \\<subseteq> geom_proc (Suc n) ` geom_proc n -` {x}", "have \"\\<exists> w. geom_proc n w = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>w. geom_proc n w = x", "using assms"], ["proof (prove)\nusing this:\n  geom_proc n -` {x} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>w. geom_proc n w = x", "by auto"], ["proof (state)\nthis:\n  \\<exists>w. geom_proc n w = x\n\ngoal (2 subgoals):\n 1. geom_proc (Suc n) ` geom_proc n -` {x} \\<subseteq> {u * x, d * x}\n 2. {u * x, d * x} \\<subseteq> geom_proc (Suc n) ` geom_proc n -` {x}", "from this"], ["proof (chain)\npicking this:\n  \\<exists>w. geom_proc n w = x", "obtain w where \"geom_proc n w = x\""], ["proof (prove)\nusing this:\n  \\<exists>w. geom_proc n w = x\n\ngoal (1 subgoal):\n 1. (\\<And>w. geom_proc n w = x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  geom_proc n w = x\n\ngoal (2 subgoals):\n 1. geom_proc (Suc n) ` geom_proc n -` {x} \\<subseteq> {u * x, d * x}\n 2. {u * x, d * x} \\<subseteq> geom_proc (Suc n) ` geom_proc n -` {x}", "let ?wT = \"spick w n True\""], ["proof (state)\ngoal (2 subgoals):\n 1. geom_proc (Suc n) ` geom_proc n -` {x} \\<subseteq> {u * x, d * x}\n 2. {u * x, d * x} \\<subseteq> geom_proc (Suc n) ` geom_proc n -` {x}", "let ?wF = \"spick w n False\""], ["proof (state)\ngoal (2 subgoals):\n 1. geom_proc (Suc n) ` geom_proc n -` {x} \\<subseteq> {u * x, d * x}\n 2. {u * x, d * x} \\<subseteq> geom_proc (Suc n) ` geom_proc n -` {x}", "have bel: \"(?wT \\<in> (geom_proc n) -` {x}) \\<and> (?wF \\<in> (geom_proc n) -` {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spick w n True \\<in> geom_proc n -` {x} \\<and>\n    spick w n False \\<in> geom_proc n -` {x}", "by (metis \\<open>geom_proc n w = x\\<close> geom_rand_walk_pseudo_proj_True o_def\n        pseudo_proj_True_stake_image spickI vimage_singleton_eq)"], ["proof (state)\nthis:\n  spick w n True \\<in> geom_proc n -` {x} \\<and>\n  spick w n False \\<in> geom_proc n -` {x}\n\ngoal (2 subgoals):\n 1. geom_proc (Suc n) ` geom_proc n -` {x} \\<subseteq> {u * x, d * x}\n 2. {u * x, d * x} \\<subseteq> geom_proc (Suc n) ` geom_proc n -` {x}", "have \"geom_proc (Suc n) ?wT = u*x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n True) = u * x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n True) = u * x", "have \"x = geom_rand_walk u d init n (spick w n True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = geom_rand_walk u d init n (spick w n True)", "by (metis \\<open>geom_proc n w = x\\<close> comp_apply geom_rand_walk_pseudo_proj_True geometric_process pseudo_proj_True_stake_image spickI)"], ["proof (state)\nthis:\n  x = geom_rand_walk u d init n (spick w n True)\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n True) = u * x", "then"], ["proof (chain)\npicking this:\n  x = geom_rand_walk u d init n (spick w n True)", "show ?thesis"], ["proof (prove)\nusing this:\n  x = geom_rand_walk u d init n (spick w n True)\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n True) = u * x", "by (simp add: geometric_process spickI)"], ["proof (state)\nthis:\n  geom_proc (Suc n) (spick w n True) = u * x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  geom_proc (Suc n) (spick w n True) = u * x\n\ngoal (2 subgoals):\n 1. geom_proc (Suc n) ` geom_proc n -` {x} \\<subseteq> {u * x, d * x}\n 2. {u * x, d * x} \\<subseteq> geom_proc (Suc n) ` geom_proc n -` {x}", "moreover"], ["proof (state)\nthis:\n  geom_proc (Suc n) (spick w n True) = u * x\n\ngoal (2 subgoals):\n 1. geom_proc (Suc n) ` geom_proc n -` {x} \\<subseteq> {u * x, d * x}\n 2. {u * x, d * x} \\<subseteq> geom_proc (Suc n) ` geom_proc n -` {x}", "have \"geom_proc (Suc n) ?wF = d*x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n False) = d * x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n False) = d * x", "have \"x = geom_rand_walk u d init n (spick w n False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = geom_rand_walk u d init n (spick w n False)", "by (metis \\<open>geom_proc n w = x\\<close> comp_apply geom_rand_walk_pseudo_proj_True geometric_process pseudo_proj_True_stake_image spickI)"], ["proof (state)\nthis:\n  x = geom_rand_walk u d init n (spick w n False)\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n False) = d * x", "then"], ["proof (chain)\npicking this:\n  x = geom_rand_walk u d init n (spick w n False)", "show ?thesis"], ["proof (prove)\nusing this:\n  x = geom_rand_walk u d init n (spick w n False)\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n False) = d * x", "by (simp add: geometric_process spickI)"], ["proof (state)\nthis:\n  geom_proc (Suc n) (spick w n False) = d * x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  geom_proc (Suc n) (spick w n False) = d * x\n\ngoal (2 subgoals):\n 1. geom_proc (Suc n) ` geom_proc n -` {x} \\<subseteq> {u * x, d * x}\n 2. {u * x, d * x} \\<subseteq> geom_proc (Suc n) ` geom_proc n -` {x}", "ultimately"], ["proof (chain)\npicking this:\n  geom_proc (Suc n) (spick w n True) = u * x\n  geom_proc (Suc n) (spick w n False) = d * x", "show \"{u*x, d*x} \\<subseteq> (geom_proc (Suc n)) ` ((geom_proc n) -` {x})\""], ["proof (prove)\nusing this:\n  geom_proc (Suc n) (spick w n True) = u * x\n  geom_proc (Suc n) (spick w n False) = d * x\n\ngoal (1 subgoal):\n 1. {u * x, d * x} \\<subseteq> geom_proc (Suc n) ` geom_proc n -` {x}", "using bel"], ["proof (prove)\nusing this:\n  geom_proc (Suc n) (spick w n True) = u * x\n  geom_proc (Suc n) (spick w n False) = d * x\n  spick w n True \\<in> geom_proc n -` {x} \\<and>\n  spick w n False \\<in> geom_proc n -` {x}\n\ngoal (1 subgoal):\n 1. {u * x, d * x} \\<subseteq> geom_proc (Suc n) ` geom_proc n -` {x}", "by (metis empty_subsetI insert_subset rev_image_eqI)"], ["proof (state)\nthis:\n  {u * x, d * x} \\<subseteq> geom_proc (Suc n) ` geom_proc n -` {x}\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) ` geom_proc n -` {x} \\<subseteq> {u * x, d * x}", "have \"\\<forall>w \\<in> (geom_proc n) -` {x}. geom_proc (Suc n) w \\<in> {u*x, d*x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>geom_proc n -` {x}.\n       geom_proc (Suc n) w \\<in> {u * x, d * x}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> geom_proc n -` {x} \\<Longrightarrow>\n       geom_proc (Suc n) w \\<in> {u * x, d * x}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> geom_proc n -` {x} \\<Longrightarrow>\n       geom_proc (Suc n) w \\<in> {u * x, d * x}", "assume \"w \\<in> (geom_proc n) -` {x}\""], ["proof (state)\nthis:\n  w \\<in> geom_proc n -` {x}\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> geom_proc n -` {x} \\<Longrightarrow>\n       geom_proc (Suc n) w \\<in> {u * x, d * x}", "have dis: \"((snth w (Suc n)) = True) \\<or> (snth w (Suc n) = False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w !! Suc n = True \\<or> w !! Suc n = False", "by simp"], ["proof (state)\nthis:\n  w !! Suc n = True \\<or> w !! Suc n = False\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> geom_proc n -` {x} \\<Longrightarrow>\n       geom_proc (Suc n) w \\<in> {u * x, d * x}", "show \"geom_proc (Suc n) w \\<in> {u*x, d*x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w \\<in> {u * x, d * x}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w \\<in> {u * x, d * x}", "have \"geom_proc n w = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc n w = x", "by (metis \\<open>w \\<in> geom_proc n -` {x}\\<close> vimage_singleton_eq)"], ["proof (state)\nthis:\n  geom_proc n w = x\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w \\<in> {u * x, d * x}", "then"], ["proof (chain)\npicking this:\n  geom_proc n w = x", "have \"geom_rand_walk u d init n w = x\""], ["proof (prove)\nusing this:\n  geom_proc n w = x\n\ngoal (1 subgoal):\n 1. geom_rand_walk u d init n w = x", "using geometric_process"], ["proof (prove)\nusing this:\n  geom_proc n w = x\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. geom_rand_walk u d init n w = x", "by blast"], ["proof (state)\nthis:\n  geom_rand_walk u d init n w = x\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w \\<in> {u * x, d * x}", "then"], ["proof (chain)\npicking this:\n  geom_rand_walk u d init n w = x", "show ?thesis"], ["proof (prove)\nusing this:\n  geom_rand_walk u d init n w = x\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w \\<in> {u * x, d * x}", "by (simp add: case_bool_if geometric_process)"], ["proof (state)\nthis:\n  geom_proc (Suc n) w \\<in> {u * x, d * x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  geom_proc (Suc n) w \\<in> {u * x, d * x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w\\<in>geom_proc n -` {x}.\n     geom_proc (Suc n) w \\<in> {u * x, d * x}\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) ` geom_proc n -` {x} \\<subseteq> {u * x, d * x}", "thus \"(geom_proc (Suc n)) ` ((geom_proc n) -` {x}) \\<subseteq> {u*x, d*x}\""], ["proof (prove)\nusing this:\n  \\<forall>w\\<in>geom_proc n -` {x}.\n     geom_proc (Suc n) w \\<in> {u * x, d * x}\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) ` geom_proc n -` {x} \\<subseteq> {u * x, d * x}", "by auto"], ["proof (state)\nthis:\n  geom_proc (Suc n) ` geom_proc n -` {x} \\<subseteq> {u * x, d * x}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in prob_grw) geom_rand_walk_strictly_positive:\n  assumes \"0 < init\"\n  and \"0 < d\"\n  and \"d < u\"\n  shows \"\\<forall> n w. 0 < geom_proc n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n w. 0 < geom_proc n w", "proof (intro allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n w. 0 < geom_proc n w", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n w. 0 < geom_proc n w", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n w. 0 < geom_proc n w", "show \"0 < geom_proc n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < geom_proc n w", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < geom_proc 0 w\n 2. \\<And>n. 0 < geom_proc n w \\<Longrightarrow> 0 < geom_proc (Suc n) w", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. 0 < geom_proc 0 w\n 2. \\<And>n. 0 < geom_proc n w \\<Longrightarrow> 0 < geom_proc (Suc n) w", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < geom_proc 0 w", "using assms geometric_process"], ["proof (prove)\nusing this:\n  0 < init\n  0 < d\n  d < u\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. 0 < geom_proc 0 w", "by simp"], ["proof (state)\nthis:\n  0 < geom_proc 0 w\n\ngoal (1 subgoal):\n 1. \\<And>n. 0 < geom_proc n w \\<Longrightarrow> 0 < geom_proc (Suc n) w", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. 0 < geom_proc n w \\<Longrightarrow> 0 < geom_proc (Suc n) w", "case (Suc n)"], ["proof (state)\nthis:\n  0 < geom_proc n w\n\ngoal (1 subgoal):\n 1. \\<And>n. 0 < geom_proc n w \\<Longrightarrow> 0 < geom_proc (Suc n) w", "thus ?case"], ["proof (prove)\nusing this:\n  0 < geom_proc n w\n\ngoal (1 subgoal):\n 1. 0 < geom_proc (Suc n) w", "proof (cases \"snth w n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < geom_proc n w; w !! n\\<rbrakk>\n    \\<Longrightarrow> 0 < geom_proc (Suc n) w\n 2. \\<lbrakk>0 < geom_proc n w; \\<not> w !! n\\<rbrakk>\n    \\<Longrightarrow> 0 < geom_proc (Suc n) w", "case True"], ["proof (state)\nthis:\n  w !! n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < geom_proc n w; w !! n\\<rbrakk>\n    \\<Longrightarrow> 0 < geom_proc (Suc n) w\n 2. \\<lbrakk>0 < geom_proc n w; \\<not> w !! n\\<rbrakk>\n    \\<Longrightarrow> 0 < geom_proc (Suc n) w", "hence \"geom_proc (Suc n) w = u * geom_proc n w\""], ["proof (prove)\nusing this:\n  w !! n\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w = u * geom_proc n w", "using geom_rand_walk.simps geometric_process"], ["proof (prove)\nusing this:\n  w !! n\n  geom_rand_walk ?u ?d ?v 0 = (\\<lambda>w. ?v)\n  geom_rand_walk ?u ?d ?v (Suc ?n) =\n  (\\<lambda>w.\n      (case w !! ?n of True \\<Rightarrow> ?u | False \\<Rightarrow> ?d) *\n      geom_rand_walk ?u ?d ?v ?n w)\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w = u * geom_proc n w", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc n) w = u * geom_proc n w\n\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < geom_proc n w; w !! n\\<rbrakk>\n    \\<Longrightarrow> 0 < geom_proc (Suc n) w\n 2. \\<lbrakk>0 < geom_proc n w; \\<not> w !! n\\<rbrakk>\n    \\<Longrightarrow> 0 < geom_proc (Suc n) w", "also"], ["proof (state)\nthis:\n  geom_proc (Suc n) w = u * geom_proc n w\n\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < geom_proc n w; w !! n\\<rbrakk>\n    \\<Longrightarrow> 0 < geom_proc (Suc n) w\n 2. \\<lbrakk>0 < geom_proc n w; \\<not> w !! n\\<rbrakk>\n    \\<Longrightarrow> 0 < geom_proc (Suc n) w", "have \"... > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < u * geom_proc n w", "using Suc assms"], ["proof (prove)\nusing this:\n  0 < geom_proc n w\n  0 < init\n  0 < d\n  d < u\n\ngoal (1 subgoal):\n 1. 0 < u * geom_proc n w", "by simp"], ["proof (state)\nthis:\n  0 < u * geom_proc n w\n\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < geom_proc n w; w !! n\\<rbrakk>\n    \\<Longrightarrow> 0 < geom_proc (Suc n) w\n 2. \\<lbrakk>0 < geom_proc n w; \\<not> w !! n\\<rbrakk>\n    \\<Longrightarrow> 0 < geom_proc (Suc n) w", "finally"], ["proof (chain)\npicking this:\n  0 < geom_proc (Suc n) w", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < geom_proc (Suc n) w\n\ngoal (1 subgoal):\n 1. 0 < geom_proc (Suc n) w", "."], ["proof (state)\nthis:\n  0 < geom_proc (Suc n) w\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < geom_proc n w; \\<not> w !! n\\<rbrakk>\n    \\<Longrightarrow> 0 < geom_proc (Suc n) w", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < geom_proc n w; \\<not> w !! n\\<rbrakk>\n    \\<Longrightarrow> 0 < geom_proc (Suc n) w", "case False"], ["proof (state)\nthis:\n  \\<not> w !! n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < geom_proc n w; \\<not> w !! n\\<rbrakk>\n    \\<Longrightarrow> 0 < geom_proc (Suc n) w", "hence \"geom_proc (Suc n) w = d * geom_proc n w\""], ["proof (prove)\nusing this:\n  \\<not> w !! n\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w = d * geom_proc n w", "using geom_rand_walk.simps geometric_process"], ["proof (prove)\nusing this:\n  \\<not> w !! n\n  geom_rand_walk ?u ?d ?v 0 = (\\<lambda>w. ?v)\n  geom_rand_walk ?u ?d ?v (Suc ?n) =\n  (\\<lambda>w.\n      (case w !! ?n of True \\<Rightarrow> ?u | False \\<Rightarrow> ?d) *\n      geom_rand_walk ?u ?d ?v ?n w)\n  geom_proc = geom_rand_walk u d init\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) w = d * geom_proc n w", "by simp"], ["proof (state)\nthis:\n  geom_proc (Suc n) w = d * geom_proc n w\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < geom_proc n w; \\<not> w !! n\\<rbrakk>\n    \\<Longrightarrow> 0 < geom_proc (Suc n) w", "also"], ["proof (state)\nthis:\n  geom_proc (Suc n) w = d * geom_proc n w\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < geom_proc n w; \\<not> w !! n\\<rbrakk>\n    \\<Longrightarrow> 0 < geom_proc (Suc n) w", "have \"... > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < d * geom_proc n w", "using Suc assms"], ["proof (prove)\nusing this:\n  0 < geom_proc n w\n  0 < init\n  0 < d\n  d < u\n\ngoal (1 subgoal):\n 1. 0 < d * geom_proc n w", "by simp"], ["proof (state)\nthis:\n  0 < d * geom_proc n w\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < geom_proc n w; \\<not> w !! n\\<rbrakk>\n    \\<Longrightarrow> 0 < geom_proc (Suc n) w", "finally"], ["proof (chain)\npicking this:\n  0 < geom_proc (Suc n) w", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < geom_proc (Suc n) w\n\ngoal (1 subgoal):\n 1. 0 < geom_proc (Suc n) w", "."], ["proof (state)\nthis:\n  0 < geom_proc (Suc n) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < geom_proc (Suc n) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < geom_proc n w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in prob_grw) geom_rand_walk_diff_induct:\n  shows \"\\<And>w. (geom_proc (Suc n) (spick w n True) - geom_proc (Suc n) (spick w n False)) = (geom_proc n w * (u - d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w.\n       geom_proc (Suc n) (spick w n True) -\n       geom_proc (Suc n) (spick w n False) =\n       geom_proc n w * (u - d)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       geom_proc (Suc n) (spick w n True) -\n       geom_proc (Suc n) (spick w n False) =\n       geom_proc n w * (u - d)", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       geom_proc (Suc n) (spick w n True) -\n       geom_proc (Suc n) (spick w n False) =\n       geom_proc n w * (u - d)", "have \"geom_proc (Suc n) (spick w n True) = u * geom_proc n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n True) = u * geom_proc n w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n True) = u * geom_proc n w", "have \"snth (spick w n True) n = True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spick w n True !! n = True", "by (simp add: spickI)"], ["proof (state)\nthis:\n  spick w n True !! n = True\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n True) = u * geom_proc n w", "hence \"(\\<lambda>w. (case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d)) (spick w n True) = u\""], ["proof (prove)\nusing this:\n  spick w n True !! n = True\n\ngoal (1 subgoal):\n 1. (case spick w n True !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) =\n    u", "by simp"], ["proof (state)\nthis:\n  (case spick w n True !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) =\n  u\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n True) = u * geom_proc n w", "thus ?thesis"], ["proof (prove)\nusing this:\n  (case spick w n True !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) =\n  u\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n True) = u * geom_proc n w", "using geometric_process geom_rand_walk.simps(2)[of u d init n]"], ["proof (prove)\nusing this:\n  (case spick w n True !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) =\n  u\n  geom_proc = geom_rand_walk u d init\n  geom_rand_walk u d init (Suc n) =\n  (\\<lambda>w.\n      (case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n      geom_rand_walk u d init n w)\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n True) = u * geom_proc n w", "by (metis comp_apply geom_rand_walk_pseudo_proj_True pseudo_proj_True_def spickI)"], ["proof (state)\nthis:\n  geom_proc (Suc n) (spick w n True) = u * geom_proc n w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  geom_proc (Suc n) (spick w n True) = u * geom_proc n w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       geom_proc (Suc n) (spick w n True) -\n       geom_proc (Suc n) (spick w n False) =\n       geom_proc n w * (u - d)", "moreover"], ["proof (state)\nthis:\n  geom_proc (Suc n) (spick w n True) = u * geom_proc n w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       geom_proc (Suc n) (spick w n True) -\n       geom_proc (Suc n) (spick w n False) =\n       geom_proc n w * (u - d)", "have \"geom_proc (Suc n) (spick w n False) = d * geom_proc n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n False) = d * geom_proc n w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n False) = d * geom_proc n w", "have \"snth (spick w n False) n = False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spick w n False !! n = False", "by (simp add: spickI)"], ["proof (state)\nthis:\n  spick w n False !! n = False\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n False) = d * geom_proc n w", "hence \"(\\<lambda>w. (case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d)) (spick w n False) = d\""], ["proof (prove)\nusing this:\n  spick w n False !! n = False\n\ngoal (1 subgoal):\n 1. (case spick w n False !! n of True \\<Rightarrow> u\n     | False \\<Rightarrow> d) =\n    d", "by simp"], ["proof (state)\nthis:\n  (case spick w n False !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) =\n  d\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n False) = d * geom_proc n w", "thus ?thesis"], ["proof (prove)\nusing this:\n  (case spick w n False !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) =\n  d\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n False) = d * geom_proc n w", "using geometric_process geom_rand_walk.simps(2)[of u d init n]"], ["proof (prove)\nusing this:\n  (case spick w n False !! n of True \\<Rightarrow> u\n   | False \\<Rightarrow> d) =\n  d\n  geom_proc = geom_rand_walk u d init\n  geom_rand_walk u d init (Suc n) =\n  (\\<lambda>w.\n      (case w !! n of True \\<Rightarrow> u | False \\<Rightarrow> d) *\n      geom_rand_walk u d init n w)\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n False) = d * geom_proc n w", "by (metis comp_apply geom_rand_walk_pseudo_proj_True pseudo_proj_True_def spickI)"], ["proof (state)\nthis:\n  geom_proc (Suc n) (spick w n False) = d * geom_proc n w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  geom_proc (Suc n) (spick w n False) = d * geom_proc n w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       geom_proc (Suc n) (spick w n True) -\n       geom_proc (Suc n) (spick w n False) =\n       geom_proc n w * (u - d)", "ultimately"], ["proof (chain)\npicking this:\n  geom_proc (Suc n) (spick w n True) = u * geom_proc n w\n  geom_proc (Suc n) (spick w n False) = d * geom_proc n w", "show \"(geom_proc (Suc n) (spick w n True) - geom_proc (Suc n) (spick w n False)) = (geom_proc n w * (u - d))\""], ["proof (prove)\nusing this:\n  geom_proc (Suc n) (spick w n True) = u * geom_proc n w\n  geom_proc (Suc n) (spick w n False) = d * geom_proc n w\n\ngoal (1 subgoal):\n 1. geom_proc (Suc n) (spick w n True) -\n    geom_proc (Suc n) (spick w n False) =\n    geom_proc n w * (u - d)", "by (simp add:field_simps)"], ["proof (state)\nthis:\n  geom_proc (Suc n) (spick w n True) - geom_proc (Suc n) (spick w n False) =\n  geom_proc n w * (u - d)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}