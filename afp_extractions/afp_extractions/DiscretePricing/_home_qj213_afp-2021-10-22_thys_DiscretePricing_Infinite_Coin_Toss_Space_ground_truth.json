{"file_name": "/home/qj213/afp-2021-10-22/thys/DiscretePricing/Infinite_Coin_Toss_Space.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/DiscretePricing", "problem_names": ["lemma decompose_init_prod:\n  fixes n::nat\n  shows \"(\\<Prod> i\\<in> {0..n}. f i) = f 0 * (\\<Prod> i\\<in> {1..n}. f i)\"", "lemma Inter_nonempty_distrib:\n  assumes \"A \\<noteq> {}\"\n  shows \"\\<Inter>A \\<inter> B = (\\<Inter> C\\<in> A. (C\\<inter> B))\"", "lemma enn2real_sum: shows \"finite A \\<Longrightarrow> (\\<And>a. a\\<in> A\\<Longrightarrow> f a < top) \\<Longrightarrow>enn2real (sum f A) = (\\<Sum> a\\<in> A. enn2real (f a))\"", "lemma ennreal_sum: shows \"finite A \\<Longrightarrow> (\\<And>a. 0 \\<le> f a) \\<Longrightarrow> (\\<Sum>a\\<in> A. ennreal (f a)) = ennreal (\\<Sum>a\\<in> A. f a)\"", "lemma stake_snth:\n  assumes \"stake n w = stake n x\"\n  shows \"Suc i \\<le> n \\<Longrightarrow> snth w i = snth x i\"", "lemma stake_snth_charact:\n  assumes \"stake n w = stake n x\"\n  shows \"\\<forall>i < n. snth w i = snth x i\"", "lemma stake_snth':\n  shows \"(\\<And>i. Suc i \\<le> n \\<Longrightarrow> snth w i = snth x i) \\<Longrightarrow>stake n w = stake n x\"", "lemma  stake_inter_snth:\n  fixes x\n  assumes \"Suc 0 \\<le> n\"\n  shows \"{w\\<in> space M. (stake n w = stake n x)} = (\\<Inter> i \\<in> {0.. n-1}. {w\\<in> space M. (snth w i = snth x i)})\"", "lemma streams_stake_set:\n  shows \"pw \\<in> streams A \\<Longrightarrow> set (stake n pw) \\<subseteq> A\"", "lemma stake_finite_universe_induct:\n  assumes \"finite A\"\n  and \"A \\<noteq> {}\"\n  shows \"(stake (Suc n) `(streams A)) = {s#w| s w. s\\<in> A \\<and> w\\<in> (stake n `(streams A))}\" (is \"?L = ?R\")", "lemma stake_finite_universe_finite:\n  assumes \"finite A\"\n  and \"A \\<noteq> {}\"\n  shows \"finite (stake n `(streams A))\"", "lemma  diff_streams_only_if:\n  assumes \"w \\<noteq> x\"\n  shows \"\\<exists>n. snth w n \\<noteq> snth x n\"", "lemma diff_streams_if:\n  assumes \"\\<exists>n. snth w n \\<noteq> snth x n\"\n  shows \"w\\<noteq> x\"", "lemma sigma_set_union_count:\n  assumes \"\\<forall> y\\<in> A. B y \\<in> sigma_sets X Y\"\nand \"countable A\"\n  shows \"(\\<Union> y\\<in> A. B y) \\<in> sigma_sets X Y\"", "lemma sigma_set_inter_init:\n  assumes \"\\<And>i. i\\<le>(n::nat) \\<Longrightarrow> A i \\<in> sigma_sets sp B\"\nand \"B \\<subseteq> Pow sp\"\nshows \"(\\<Inter> i\\<in> {m. m\\<le> n}. A i) \\<in> sigma_sets sp B\"", "lemma  adapt_sigma_sets:\nassumes \"\\<And>i. i \\<le> n\\<Longrightarrow> (X i) \\<in> measurable M N\"\nshows \"sigma_algebra (space M) (sigma_sets (space M) (\\<Union>i\\<in>{m. m \\<le> n}. {X i -` A \\<inter> space M |A. A \\<in> sets N}))\"", "lemma bernoulli_stream_space:\n  assumes \"N = bernoulli_stream p\"\n  shows \"space N = streams UNIV::bool\"", "lemma bernoulli_stream_preimage:\n  assumes \"N = bernoulli_stream p\"\n  shows \"f -` A \\<inter> (space N) = f-`A\"", "lemma  bernoulli_stream_component_probability:\n  assumes \"N = bernoulli_stream p\" and \"0 \\<le> p\" and \"p \\<le> 1\"\n  shows \"\\<forall> n. emeasure N {w\\<in> space N. (snth w n)} = p\"", "lemma  bernoulli_stream_component_probability_compl:\n  assumes \"N = bernoulli_stream p\" and \"0 \\<le> p\" and \"p \\<le> 1\"\n  shows \"\\<forall> n. emeasure N {w\\<in> space N. \\<not>(snth w n)} = 1- p\"", "lemma bernoulli_stream_sets:\n  assumes \"0 < q\"\n  and \"q < 1\"\n  and \"0 < p\"\n  and \"p < 1\"\nshows \"sets (bernoulli_stream p) = sets (bernoulli_stream q)\"", "lemma (in infinite_coin_toss_space) pseudo_proj_False_neq_True:\n  shows \"pseudo_proj_False n w \\<noteq> pseudo_proj_True n w\"", "lemma (in infinite_coin_toss_space) pseudo_proj_False_measurable:\n  shows \"pseudo_proj_False n \\<in> measurable (bernoulli_stream p) (bernoulli_stream p)\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_stake:\n  shows \"stake n (pseudo_proj_True n w) = stake n w\"", "lemma (in infinite_coin_toss_space) pseudo_proj_False_stake:\n  shows \"stake n (pseudo_proj_False n w) = stake n w\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_stake_image:\n  assumes \"(stake n w) = stake n x\"\n  shows \"pseudo_proj_True n w = pseudo_proj_True n x\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_prefix:\n  assumes \"n \\<le> m\"\n  and \"pseudo_proj_True m x = pseudo_proj_True m y\"\n  shows \"pseudo_proj_True n x = pseudo_proj_True n y\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_measurable:\n  shows \"pseudo_proj_True n \\<in> measurable (bernoulli_stream p) (bernoulli_stream p)\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_finite_image:\n  shows \"finite (range (pseudo_proj_True n))\"", "lemma (in infinite_coin_toss_space) pseudo_proj_False_finite_image:\n  shows \"finite (range (pseudo_proj_False n))\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_proj:\n  shows \"pseudo_proj_True n (pseudo_proj_True n w) = pseudo_proj_True n w\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_Suc_False_proj:\n  shows \"pseudo_proj_True (Suc n) (pseudo_proj_False n w) = pseudo_proj_False n w\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_Suc_proj:\n  shows \"pseudo_proj_True (Suc n) (pseudo_proj_True n w) = pseudo_proj_True n w\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_proj_Suc:\n  shows \"pseudo_proj_True n (pseudo_proj_True (Suc n) w) = pseudo_proj_True n w\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_shift:\n  shows \"length l = n \\<Longrightarrow> pseudo_proj_True n (shift l (sconst True)) = shift l (sconst True)\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_suc_img:\n  shows \"pseudo_proj_True (Suc n) w \\<in> {pseudo_proj_True n w, pseudo_proj_False n w}\"", "lemma (in infinite_coin_toss_space) measurable_snth_count_space:\n  shows \"(\\<lambda>w. snth w n) \\<in> measurable (bernoulli_stream p) (count_space (UNIV::bool set))\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_same_img:\n  assumes \"pseudo_proj_True n w = pseudo_proj_True n x\"\n  shows \"stake n w = stake n x\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_snth:\n  assumes \"pseudo_proj_True n x  = pseudo_proj_True n w\"\n  shows \"\\<And>i. Suc i \\<le> n \\<Longrightarrow>  snth x i = snth w i\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_snth':\n  assumes \"(\\<And>i. Suc i \\<le> n \\<Longrightarrow>  snth w i = snth x i)\"\n  shows \"pseudo_proj_True n w  = pseudo_proj_True n x\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_preimage:\n  assumes \"w = pseudo_proj_True n w\"\n  shows \"(pseudo_proj_True n) -` {w} = (\\<Inter>i\\<in> {m. Suc m \\<le> n}. (\\<lambda>w. snth w i) -` {snth w i})\"", "lemma (in infinite_coin_toss_space) pseudo_proj_False_preimage:\n  assumes \"w = pseudo_proj_False n w\"\n  shows \"(pseudo_proj_False n) -` {w} = (\\<Inter>i\\<in> {m. Suc m \\<le> n}. (\\<lambda>w. snth w i) -` {snth w i})\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_preimage_stake:\n  assumes \"w = pseudo_proj_True n w\"\n  shows \"(pseudo_proj_True n) -` {w} = {x. stake n x = stake n w}\"", "lemma (in infinite_coin_toss_space) pseudo_proj_False_preimage_stake:\n  assumes \"w = pseudo_proj_False n w\"\n  shows \"(pseudo_proj_False n) -` {w} = {x. stake n x = stake n w}\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_preimage_stake_space:\n  assumes \"w = pseudo_proj_True n w\"\n  shows \"(pseudo_proj_True n) -` {w} \\<inter> space M = {x\\<in> space M. stake n x = stake n w}\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_singleton:\n  assumes \"w = pseudo_proj_True n w\"\n  shows \"(pseudo_proj_True n) -`{w} \\<inter> (space (bernoulli_stream p)) \\<in> sets (bernoulli_stream p)\"", "lemma (in infinite_coin_toss_space) pseudo_proj_False_singleton:\n  assumes \"w = pseudo_proj_False n w\"\n  shows \"(pseudo_proj_False n) -`{w} \\<inter> (space (bernoulli_stream p)) \\<in> sets (bernoulli_stream p)\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_inverse_induct:\n  assumes \"w \\<in> range (pseudo_proj_True n)\"\n  shows \"(pseudo_proj_True n) -` {w} =\n    (pseudo_proj_True (Suc n)) -` {w} \\<union> (pseudo_proj_True (Suc n)) -`{pseudo_proj_False n w}\"", "lemma (in infinite_coin_toss_space) nat_filtration_space:\n  shows \"space (nat_filtration n) = UNIV\"", "lemma (in infinite_coin_toss_space) nat_filtration_sets:\n  shows \"sets (nat_filtration n) =\n    sigma_sets (space (bernoulli_stream p))\n            {pseudo_proj_True n -` B \\<inter> space M |B. B \\<in> sets (bernoulli_stream p)}\"", "lemma (in infinite_coin_toss_space) nat_filtration_singleton:\n  assumes \"pseudo_proj_True n w = w\"\n  shows \"pseudo_proj_True n -`{w} \\<in> sets (nat_filtration n)\"", "lemma (in infinite_coin_toss_space) nat_filtration_pseudo_proj_True_measurable:\n  shows \"pseudo_proj_True n \\<in> measurable (nat_filtration n) M\"", "lemma (in infinite_coin_toss_space) nat_filtration_comp_measurable:\n  assumes \"f \\<in> measurable M N\"\n  and \"f \\<circ> pseudo_proj_True n = f\"\n  shows \"f \\<in> measurable (nat_filtration n) N\"", "lemma (in infinite_coin_toss_space) set_discriminating_if:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"f\\<in> borel_measurable (nat_filtration n)\"\n  shows \"set_discriminating n f borel\"", "lemma (in infinite_coin_toss_space) nat_filtration_not_borel_info:\n  assumes \"f\\<in> measurable (nat_filtration n) N\"\n  and \"set_discriminating n f N\"\n  shows \"f\\<circ> pseudo_proj_True n = f\"", "lemma (in infinite_coin_toss_space) nat_filtration_info:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"f\\<in> borel_measurable (nat_filtration n)\"\n  shows \"f\\<circ> pseudo_proj_True n = f\"", "lemma (in infinite_coin_toss_space) nat_filtration_not_borel_info':\n  assumes \"f\\<in> measurable (nat_filtration n) N\"\n  and \"set_discriminating n f N\"\n  shows \"f\\<circ> pseudo_proj_False n = f\"", "lemma (in infinite_coin_toss_space) nat_filtration_info':\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"f\\<in> borel_measurable (nat_filtration n)\"\n  shows \"f\\<circ> pseudo_proj_False n = f\"", "lemma (in infinite_coin_toss_space) nat_filtration_borel_measurable_characterization:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"f\\<in> borel_measurable M\"\n  shows \"f\\<in> borel_measurable (nat_filtration n) \\<longleftrightarrow> f\\<circ> pseudo_proj_True n = f\"", "lemma (in infinite_coin_toss_space) nat_filtration_borel_measurable_init:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"f\\<in> borel_measurable (nat_filtration 0)\"\n  shows \"f = (\\<lambda>w. f (sconst True))\"", "lemma (in infinite_coin_toss_space) nat_filtration_Suc_sets:\n  shows \"sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))\"", "lemma (in infinite_coin_toss_space) nat_filtration_subalgebra:\n  shows \"subalgebra M (nat_filtration n)\"", "lemma (in infinite_coin_toss_space) nat_discrete_filtration:\n  shows \"filtration M nat_filtration\"", "lemma (in infinite_coin_toss_space) nat_info_filtration:\n  shows \"init_triv_filt M nat_filtration\"", "lemma (in infinite_coin_toss_space) nat_filtration_vimage_finite:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t2_space}\"\n  assumes \"f\\<in> borel_measurable (nat_filtration n)\"\n  shows \"finite (f`(space M))\"", "lemma (in infinite_coin_toss_space) nat_filtration_borel_measurable_simple:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t2_space}\"\n  assumes \"f\\<in> borel_measurable (nat_filtration n)\"\n  shows \"simple_function M f\"", "lemma (in infinite_coin_toss_space) nat_filtration_singleton_range_set:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t2_space}\"\n  assumes \"f\\<in> borel_measurable (nat_filtration n)\"\n  shows \"\\<exists> A\\<in> sets borel. range f \\<inter> A = {f x}\"", "lemma (in infinite_coin_toss_space) nat_filtration_borel_measurable_singleton:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t2_space}\"\n  assumes \"f\\<in> borel_measurable (nat_filtration n)\"\n  shows \"f -`{f x} \\<in> sets (nat_filtration n)\"", "lemma (in infinite_cts_filtration) borel_adapt_nat_filtration_info:\n  fixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  and \"m \\<le> n\"\nshows \"X m (pseudo_proj_True n w) = X m w\"", "lemma (in infinite_coin_toss_space) nat_filtration_borel_measurable_integrable:\n  assumes \"f\\<in> borel_measurable (nat_filtration n)\"\n  shows \"integrable M f\"", "lemma (in infinite_coin_toss_space) spickI:\n  shows \"stake n (spick w n v) = stake n w \\<and> snth (spick w n v) n = v\"", "lemma (in infinite_coin_toss_space) spick_eq_pseudo_proj_True:\n  shows \"spick w n True = pseudo_proj_True n w\"", "lemma (in infinite_coin_toss_space) spick_eq_pseudo_proj_False:\n  shows \"spick w n False = pseudo_proj_False n w\"", "lemma (in infinite_coin_toss_space) spick_pseudo_proj:\n  shows \"spick (pseudo_proj_True (Suc n) w) n v = spick w n v\"", "lemma (in infinite_coin_toss_space) spick_pseudo_proj_gen:\n  shows \"m < n \\<Longrightarrow> spick (pseudo_proj_True n w) m v = spick w m v\"", "lemma (in infinite_coin_toss_space) spick_nat_filtration_measurable:\n  shows \"(\\<lambda>w. spick w n v) \\<in> measurable (nat_filtration n) M\"", "lemma (in infinite_coin_toss_space) proj_rep_set_finite:\n  shows \"finite (proj_rep_set n)\"", "lemma (in infinite_coin_toss_space) set_filt_contain:\n  assumes \"A\\<in> sets (nat_filtration n)\"\nand \"w\\<in> A\"\nshows \"pseudo_proj_True n -` {pseudo_proj_True n w} \\<subseteq> A\"", "lemma (in infinite_cts_filtration) measurable_range_rep:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"f \\<in> borel_measurable (nat_filtration n)\"\n  shows \"range f = (\\<Union> r\\<in>(proj_rep_set n). {f(r)})\"", "lemma (in infinite_coin_toss_space) borel_measurable_stake:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"f\\<in> borel_measurable (nat_filtration n)\"\n  and \"stake n w = stake n y\"\nshows \"f w = f y\"", "lemma  prob_component_neq_zero:\n  assumes \"0 < p\"\nand \"p < 1\"\n  shows \"prob_component p w n \\<noteq> 0\"", "lemma  prob_component_measure:\n  fixes x::\"bool stream\"\nassumes \"0 \\<le> p\"\nand \"p \\<le> 1\"\n  shows \"emeasure (measure_pmf (bernoulli_pmf p)) {snth x i} = prob_component p x i\"", "lemma  stake_preimage_measurable:\n  fixes x::\"bool stream\"\n  assumes \"Suc 0 \\<le> n\" and \"M = bernoulli_stream p\"\n  shows \"{w\\<in> space M. (stake n w = stake n x)} \\<in> sets M\"", "lemma snth_as_fct:\n  fixes b\n  assumes \"M = bernoulli_stream p\"\n  shows \"to_stream -` {w\\<in> space M. snth w i = b} = {X::nat\\<Rightarrow>bool. X i = b}\"", "lemma  stake_as_fct:\n  assumes \"Suc 0 \\<le> n\" and \"M= bernoulli_stream p\"\n  shows \"to_stream -`{w\\<in> space M. (stake n w = stake n x)} = {X::nat\\<Rightarrow>bool. \\<forall>i. 0 \\<le> i \\<and> i \\<le> n-1 \\<longrightarrow> X i = snth x i}\"", "lemma  bernoulli_stream_npref_prob:\n  fixes x\n  assumes \"M = bernoulli_stream p\"\n  shows \"emeasure M {w\\<in> space M. (stake 0 w = stake 0 x)} = 1\"", "lemma bernoulli_stream_pref_prob:\n  fixes x\n  assumes \"M =bernoulli_stream p\"\nand \"0 \\<le> p\" and \"p \\<le> 1\"\n  shows \"n\\<ge> Suc 0\\<Longrightarrow> emeasure M {w\\<in> space M. (stake n w = stake n x)} = (\\<Prod>i\\<in>{0..n-1}. prob_component p x i)\"", "lemma  bernoulli_stream_pref_prob':\n  fixes x\n  assumes \"M = bernoulli_stream p\"\nand \"p \\<le> 1\" and \"0 \\<le> p\"\n  shows \"emeasure M {w\\<in> space M. (stake n w = stake n x)} = (\\<Prod>i\\<in>{0..<n}. prob_component p x i)\"", "lemma  bernoulli_stream_stake_prob:\n  fixes x\n  assumes \"M = bernoulli_stream p\"\nand \"p \\<le> 1\" and \"0 \\<le> p\"\nshows \"measure M {w\\<in> space M. (stake n w = stake n x)} = (\\<Prod>i\\<in>{0..<n}. prob_component p x i)\"", "lemma (in infinite_coin_toss_space) bernoulli_stream_pseudo_prob:\n  fixes x\n  assumes \"M = bernoulli_stream p\"\nand \"p \\<le> 1\" and \"0 \\<le> p\"\nand \"w\\<in> range (pseudo_proj_True n)\"\nshows \"measure M (pseudo_proj_True n -`{w} \\<inter> space M) = (\\<Prod>i\\<in>{0..<n}. prob_component p w i)\"", "lemma bernoulli_stream_element_prob_rec:\n  fixes x\n  assumes \"M = bernoulli_stream p\"\nand \"0 \\<le> p\" and \"p \\<le> 1\"\n  shows \"\\<And> n. emeasure M {w\\<in> space M. (stake (Suc n) w = stake (Suc n) x)} =\n    (emeasure M {w\\<in> space M. (stake n w = stake n x)} * prob_component p x n)\"", "lemma  bernoulli_stream_element_prob_rec':\n  fixes x\n  assumes \"M = bernoulli_stream p\"\nand \"0 \\<le> p\" and \"p \\<le> 1\"\n  shows \"\\<And> n. measure M {w\\<in> space M. (stake (Suc n) w = stake (Suc n) x)} =\n    (measure M {w\\<in> space M. (stake n w = stake n x)} * prob_component p x n)\"", "lemma (in infinite_coin_toss_space) bernoulli_stream_pseudo_prob_rec':\n  fixes x\n  assumes \"pseudo_proj_True n x = x\"\n  shows \"measure M (pseudo_proj_True (Suc n) -`{x}) =\n    (measure M (pseudo_proj_True n-`{x}) * prob_component p x n)\"", "lemma (in infinite_coin_toss_space) bernoulli_stream_pref_prob_pos:\n  fixes x\n  assumes \"0 < p\"\nand \"p < 1\"\n  shows \"emeasure M {w\\<in> space M. (stake n w = stake n x)} > 0\"", "lemma (in infinite_coin_toss_space) bernoulli_stream_pref_prob_neq_zero:\n  fixes x\nassumes \"0 < p\"\nand \"p < 1\"\n  shows \"emeasure M {w\\<in> space M. (stake n w = stake n x)} \\<noteq> 0\"", "lemma (in infinite_coin_toss_space) pseudo_proj_element_prob_pref:\n  assumes \"w\\<in> range (pseudo_proj_True n)\"\n  shows \"emeasure M {y\\<in> space M. \\<exists>x \\<in> (pseudo_proj_True n -`{w}). y = c ## x} =\n    prob_component p (c##w) 0 * emeasure M ((pseudo_proj_True n) -`{w} \\<inter> space M)\"", "lemma (in infinite_coin_toss_space) nat_filtration_null_set:\n  assumes \"A\\<in> sets (nat_filtration n)\"\nand \"0 < p\"\nand \"p  < 1\"\nand \"emeasure M A = 0\"\nshows \"A = {}\"", "lemma (in infinite_coin_toss_space) nat_filtration_AE_zero:\n  fixes f::\"bool stream \\<Rightarrow> real\"\n  assumes \"AE w in M. f w = 0\"\nand \"f\\<in> borel_measurable (nat_filtration n)\"\nand \"0 < p\"\nand \"p < 1\"\n  shows \"\\<forall>w. f w = 0\"", "lemma (in infinite_coin_toss_space) nat_filtration_AE_eq:\n  fixes f::\"bool stream \\<Rightarrow> real\"\n  assumes \"AE w in M. f w = g w\"\nand \"0 < p\"\nand \"p < 1\"\nand \"f\\<in> borel_measurable (nat_filtration n)\"\nand \"g\\<in> borel_measurable (nat_filtration n)\"\n  shows \"f w = g w\"", "lemma (in infinite_coin_toss_space) bernoulli_stream_equiv:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < p\"\nand \"p < 1\"\nand \"0 < q\"\nand \"q < 1\"\nshows \"filt_equiv nat_filtration M N\"", "lemma (in infinite_coin_toss_space) bernoulli_nat_filtration:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nand \"0 < p\"\nand \"p < 1\"\nshows \"infinite_cts_filtration q N nat_filtration\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_Suc_prefix:\n  shows \"pseudo_proj_True (Suc n) w = (w!!0)## pseudo_proj_True n (stl w)\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_img:\n  assumes \"pseudo_proj_True n w = w\"\n  shows \"w\\<in> range (pseudo_proj_True n)\"", "lemma (in infinite_coin_toss_space) sconst_if:\n  assumes \"\\<And>n. snth w n = True\"\n  shows \"w = sconst True\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_suc_img_pref:\n  shows \"range (pseudo_proj_True (Suc n)) = {y. \\<exists>w \\<in> range (pseudo_proj_True n). y = True ## w} \\<union>\n    {y. \\<exists>w \\<in> range (pseudo_proj_True n). y = False ## w}\"", "lemma (in infinite_coin_toss_space) reindex_pseudo_proj:\n  shows \"(\\<Sum>w\\<in>range (pseudo_proj_True n). f (c ## w)) =\n      (\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = c ## w}.f y)\"", "lemma (in infinite_coin_toss_space) pseudo_proj_True_imp_False:\n  assumes \"pseudo_proj_True n w = pseudo_proj_True n x\"\n  shows \"pseudo_proj_False n w = pseudo_proj_False n x\"", "lemma (in infinite_coin_toss_space) pseudo_proj_Suc_prefix:\n  assumes \"pseudo_proj_True n w = pseudo_proj_True n x\"\n  shows \"pseudo_proj_True (Suc n) w \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}\"", "lemma (in infinite_coin_toss_space) pseudo_proj_Suc_preimage:\n  shows \"range (pseudo_proj_True (Suc n)) \\<inter> (pseudo_proj_True n) -` {pseudo_proj_True n x} =\n    {pseudo_proj_True n x, pseudo_proj_False n x}\"", "lemma (in infinite_cts_filtration) f_borel_Suc_preimage:\n  assumes \"f\\<in> measurable (F n) N\"\n  and \"set_discriminating n f N\"\n  shows \"range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x} =\n  (pseudo_proj_True n) ` (f -` {f x}) \\<union> (pseudo_proj_False n) ` (f -` {f x})\"", "lemma (in infinite_cts_filtration) pseudo_proj_preimage:\n  assumes \"g\\<in> measurable (F n) N\"\n  and \"set_discriminating n g N\"\n  shows \"pseudo_proj_True n -` (g -` {g z}) = pseudo_proj_True n -` (pseudo_proj_True n `(g -` {g z}))\"", "lemma (in infinite_cts_filtration) borel_pseudo_proj_preimage:\n  fixes g::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"g\\<in> borel_measurable (F n)\"\n  shows \"pseudo_proj_True n -` (g -` {g z}) = pseudo_proj_True n -` (pseudo_proj_True n `(g -` {g z}))\"", "lemma (in infinite_cts_filtration) pseudo_proj_False_preimage:\n  assumes \"g\\<in> measurable (F n) N\"\n  and \"set_discriminating n g N\"\n  shows \"pseudo_proj_False n -` (g -` {g z}) = pseudo_proj_False n -` (pseudo_proj_False n `(g -` {g z}))\"", "lemma (in infinite_cts_filtration) borel_pseudo_proj_False_preimage:\n  fixes g::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"g\\<in> borel_measurable (F n)\"\n  shows \"pseudo_proj_False n -` (g -` {g z}) = pseudo_proj_False n -` (pseudo_proj_False n `(g -` {g z}))\"", "lemma (in infinite_cts_filtration) pseudo_proj_preimage':\n  assumes \"g\\<in> measurable (F n) N\"\n  and \"set_discriminating n g N\"\n  shows \"pseudo_proj_True n -` (g -` {g z}) = g -` {g z}\"", "lemma (in infinite_cts_filtration) borel_pseudo_proj_preimage':\n  fixes g::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"g\\<in> borel_measurable (F n)\"\n  shows \"pseudo_proj_True n -` (g -` {g z}) = g -` {g z}\"", "lemma (in infinite_cts_filtration) pseudo_proj_False_preimage':\n  assumes \"g\\<in> measurable (F n) N\"\n  and \"set_discriminating n g N\"\n  shows \"pseudo_proj_False n -` (g -` {g z}) = g -` {g z}\"", "lemma (in infinite_cts_filtration) borel_pseudo_proj_False_preimage':\n  fixes g::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"g\\<in> borel_measurable (F n)\"\n  shows \"pseudo_proj_False n -` (g -` {g z}) = g -` {g z}\"", "lemma (in infinite_cts_filtration) cst_integral:\n  fixes f::\"bool stream\\<Rightarrow>real\"\n  assumes \"f \\<in> borel_measurable (F 0)\"\n  and \"f (sconst True) = c\"\nshows \"has_bochner_integral M f c\"", "lemma (in infinite_cts_filtration) cst_nn_integral:\n  fixes f::\"bool stream\\<Rightarrow>real\"\n  assumes \"f \\<in> borel_measurable (F 0)\"\n  and \"\\<And>w. 0 \\<le> f w\"\n  and \"f (sconst True) = c\"\nshows \"integral\\<^sup>N M f = ennreal c\"", "lemma (in infinite_cts_filtration) suc_measurable:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"f\\<in> borel_measurable (F (Suc n))\"\n  shows \"(\\<lambda>w. f (c ## w)) \\<in> borel_measurable (F n)\"", "lemma (in infinite_cts_filtration) F_n_nn_integral_pos:\n  fixes f::\"bool stream\\<Rightarrow>real\"\n  shows \"\\<And>f. (\\<forall>x. 0 \\<le> f x) \\<Longrightarrow> f \\<in> borel_measurable (F n) \\<Longrightarrow> integral\\<^sup>N M f =\n    (\\<Sum> w\\<in> range (pseudo_proj_True n). (emeasure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) *  ennreal (f w))\"", "lemma (in infinite_cts_filtration) F_n_integral_pos:\n  fixes f::\"bool stream\\<Rightarrow>real\"\n  assumes \"f\\<in> borel_measurable (F n)\"\n  and \"\\<forall>w. 0 \\<le> f w\"\n  shows \"has_bochner_integral M f\n    (\\<Sum> w\\<in> range (pseudo_proj_True n). (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) *   (f w))\"", "lemma (in infinite_cts_filtration) F_n_integral:\n  fixes f::\"bool stream\\<Rightarrow>real\"\n  assumes \"f\\<in> borel_measurable (F n)\"\n  shows \"has_bochner_integral M f\n    (\\<Sum> w\\<in> range (pseudo_proj_True n). (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) * (f w))\"", "lemma (in infinite_cts_filtration) F_n_integral_prob_comp:\nfixes f::\"bool stream\\<Rightarrow>real\"\n  assumes \"f\\<in> borel_measurable (F n)\"\n  shows \"has_bochner_integral M f\n    (\\<Sum> w\\<in> range (pseudo_proj_True n). (prod (prob_component p w) {0..<n}) * (f w))\"", "lemma (in infinite_cts_filtration) expect_prob_comp:\nfixes f::\"bool stream\\<Rightarrow>real\"\n  assumes \"f\\<in> borel_measurable (F n)\"\n  shows \"expectation f =\n    (\\<Sum> w\\<in> range (pseudo_proj_True n). (prod (prob_component p w) {0..<n}) * (f w))\"", "lemma sum_union_disjoint':\n  assumes \"finite A\"\n    and \"finite B\"\n    and \"A \\<inter> B = {}\"\n    and \"A \\<union> B = C\"\n  shows \"sum g C = sum g A + sum g B\"", "lemma (in infinite_cts_filtration) borel_Suc_expectation:\n  fixes f::\"bool stream\\<Rightarrow> real\"\n  assumes \"f\\<in> borel_measurable (F (Suc n))\"\n  and \"g\\<in> measurable (F n) N\"\n  and \"set_discriminating n g N\"\n  and \"g -` {g z} \\<in> sets (F n)\"\n  and \"\\<forall>y z. (g y = g z \\<and> snth y n = snth z n) \\<longrightarrow> f y = f z\"\n  shows \"expectation (\\<lambda>x. f x * indicator (g -` {g z}) x) =\n    prob (g -` {g z}) * (p * f (pseudo_proj_True n z) +\n     (1 -p) * f (pseudo_proj_False n z))\"", "lemma (in infinite_cts_filtration) borel_Suc_expectation_pseudo_proj:\n  fixes f::\"bool stream\\<Rightarrow> real\"\n  assumes \"f\\<in> borel_measurable (F (Suc n))\"\n  shows \"expectation (\\<lambda>x. f x * indicator (pseudo_proj_True n -` {pseudo_proj_True n z}) x) =\n    prob (pseudo_proj_True n -` {pseudo_proj_True n z}) *\n    (p * (f (pseudo_proj_True n z)) + (1-p) * (f (pseudo_proj_False n z)))\"", "lemma (in infinite_cts_filtration) f_borel_Suc_expl_cond_expect:\n  assumes \"f\\<in> borel_measurable (F (Suc n))\"\n  and \"g\\<in> measurable (F n) N\"\n  and \"set_discriminating n g N\"\n  and \"g -` {g w} \\<in> sets (F n)\"\n  and \"\\<forall>y z. (g y = g z \\<and> snth y n = snth z n) \\<longrightarrow> f y = f z\"\nand \"0 < p\"\nand \"p < 1\"\n  shows \"expl_cond_expect M g f w = p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)\"", "lemma (in infinite_cts_filtration) f_borel_Suc_real_cond_exp:\n  assumes \"f\\<in> borel_measurable (F (Suc n))\"\n  and \"g\\<in> measurable (F n) N\"\n  and \"set_discriminating n g N\"\n  and \"\\<forall>w. g -` {g w} \\<in> sets (F n)\"\n  and \"\\<forall>r\\<in>range g \\<inter> space N. \\<exists>A\\<in>sets N. range g \\<inter> A = {r}\"\n  and \"\\<forall>y z. (g y = g z \\<and> snth y n = snth z n) \\<longrightarrow> f y = f z\"\n  and \"0 < p\"\nand \"p < 1\"\n  shows \"AE w in M. real_cond_exp M (fct_gen_subalgebra M N g) f w = p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)\"", "lemma (in infinite_cts_filtration) f_borel_Suc_real_cond_exp_proj:\n  assumes \"f\\<in> borel_measurable (F (Suc n))\"\nand \"0 < p\"\nand \"p < 1\"\nshows \"AE w in M. real_cond_exp M (fct_gen_subalgebra M M (pseudo_proj_True n)) f w =\n  p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)\"", "lemma smap_stoch_proc_length:\n  shows \"length (smap_stoch_proc n f k w) = n\"", "lemma smap_stoch_proc_nth:\n  shows \"Suc p \\<le> Suc n \\<Longrightarrow> nth (smap_stoch_proc (Suc n) f k w) p = f (k+p) w\"", "lemma proj_stoch_proc_component:\n  shows \"k < n \\<Longrightarrow> (snth (proj_stoch_proc f n w) k) = f k w\"\n    and \"n \\<le> k \\<Longrightarrow> (snth (proj_stoch_proc f n w) k) = f n w\"", "lemma proj_stoch_proc_component':\n  assumes \"k \\<le> n\"\n  shows \"f k x = snth (proj_stoch_proc f n x) k\"", "lemma proj_stoch_proc_eq_snth:\n  assumes \"proj_stoch_proc f n x = proj_stoch_proc f n y\"\nand \"k \\<le> n\"\nshows \"f k x = f k y\"", "lemma proj_stoch_measurable_if_adapted:\n  assumes \"filtration M F\"\n  and \"adapt_stoch_proc F f N\"\n  shows \"proj_stoch_proc f n \\<in> measurable M (stream_space N)\"", "lemma proj_stoch_adapted_if_adapted:\n  assumes \"filtration M F\"\n  and \"adapt_stoch_proc F f N\"\n  shows \"proj_stoch_proc f n \\<in> measurable (F n) (stream_space N)\"", "lemma proj_stoch_adapted_if_adapted':\n  assumes \"filtration M F\"\n  and \"adapt_stoch_proc F f N\"\nshows \"adapt_stoch_proc F (proj_stoch_proc f) (stream_space N)\"", "lemma (in infinite_cts_filtration) proj_stoch_proj_invariant:\nfixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"borel_adapt_stoch_proc F X\"\nshows \"proj_stoch_proc X n w = proj_stoch_proc X n (pseudo_proj_True n w)\"", "lemma (in infinite_cts_filtration) proj_stoch_set_finite_range:\n  fixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  shows \"finite (range (proj_stoch_proc X n))\"", "lemma (in infinite_cts_filtration) proj_stoch_set_discriminating:\n  fixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  shows \"set_discriminating n (proj_stoch_proc X n) N\"", "lemma (in infinite_cts_filtration) proj_stoch_preimage:\n  assumes \"borel_adapt_stoch_proc F X\"\n  shows \"(proj_stoch_proc X n) -` {proj_stoch_proc X n w} = (\\<Inter>i\\<in> {m. m \\<le> n}. (X i) -` {X i w})\"", "lemma (in infinite_cts_filtration) proj_stoch_singleton_set:\n  fixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> ('b::t2_space)\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  shows \"(proj_stoch_proc X n) -` {proj_stoch_proc X n w} \\<in> sets (F n)\"", "lemma (in infinite_cts_filtration) finite_range_stream_space:\n  fixes f::\"'a \\<Rightarrow> 'b::t1_space\"\n  assumes \"finite (range f)\"\n  shows \"(\\<lambda>w. snth w i) -` (open_exclude_set (f x) (range f)) \\<in> sets (stream_space borel)\"", "lemma (in infinite_cts_filtration) proj_stoch_range_singleton:\n  fixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> ('b::t2_space)\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  and \"r\\<in> range (proj_stoch_proc X n)\"\nshows \"\\<exists>A\\<in>sets (stream_space borel). range (proj_stoch_proc X n) \\<inter> A = {r}\"", "lemma (in infinite_cts_filtration) stream_space_singleI:\n  assumes \"\\<exists>U. U\\<in> sets (stream_space borel) \\<and> U\\<inter> (range X) = {r}\"\n  shows \"stream_space_single X r \\<in> sets (stream_space borel) \\<and> stream_space_single X r \\<inter> (range X) = {r}\"", "lemma (in infinite_cts_filtration)\nfixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> ('b::t2_space)\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  and \"r\\<in> range (proj_stoch_proc X n)\"\nshows stream_space_single_set: \"stream_space_single (proj_stoch_proc X n) r \\<in> sets (stream_space borel)\"\nand stream_space_single_preimage: \"stream_space_single (proj_stoch_proc X n) r \\<inter> range (proj_stoch_proc X n) = {r}\"", "lemma (in infinite_cts_filtration) comp_proj_i_finite:\n  fixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  shows \"finite (comp_proj_i X n i y)\"", "lemma stoch_proc_comp_proj_i_preimage:\n  assumes \"i \\<le> n\"\n  shows \"(X i) -` {X i x} = (\\<Union>z\\<in> comp_proj_i X n i (X i x). (proj_stoch_proc X n) -` {z})\"", "lemma (in infinite_cts_filtration) comp_proj_finite:\n  fixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  shows \"finite (comp_proj X n y)\"", "lemma stoch_proc_comp_proj_preimage:\n  shows \"(X n) -` {X n x} = (\\<Union>z\\<in> comp_proj X n (X n x). (proj_stoch_proc X n) -` {z})\"", "lemma comp_proj_stoch_proc_preimage:\n  shows \"(proj_stoch_proc X n) -` {proj_stoch_proc X n x} = (\\<Inter> i\\<in> {m. m\\<le>n}. (X i) -`{X i x})\"", "lemma  stoch_proc_filt_space:\n  shows \"space (stoch_proc_filt M X N n) = space M\"", "lemma  stoch_proc_filt_sets:\nassumes \"\\<And>i. i \\<le> n\\<Longrightarrow> (X i) \\<in> measurable M N\"\n  shows \"sets (stoch_proc_filt M X N n) = (sigma_sets (space M) (\\<Union> i\\<in> {m. m\\<le> n}. {(X i -`A) \\<inter> (space M) | A. A\\<in> sets N }))\"", "lemma stoch_proc_filt_adapt:\n  assumes \"\\<And>n. X n \\<in> measurable M N\"\n  shows \"adapt_stoch_proc (stoch_proc_filt M X N) X N\"", "lemma  stoch_proc_filt_disc_filtr:\n  assumes \"\\<And>i. (X i) \\<in> measurable M N\"\n  shows \"disc_filtr M (stoch_proc_filt M X N)\"", "lemma gen_subalgebra_eq_space_sets:\n  assumes \"space M = space N\"\n  and \"P = Q\"\n  and \"P\\<subseteq> Pow (space M)\"\n  shows \"sets (gen_subalgebra M P) = sets (gen_subalgebra N Q)\"", "lemma stoch_proc_filt_eq_sets:\n  assumes \"space M = space N\"\n  shows \"sets (stoch_proc_filt M X P n) = sets (stoch_proc_filt N X P n)\"", "lemma (in infinite_cts_filtration) stoch_proc_filt_triv_init:\n  fixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> real\"\n  assumes \"borel_adapt_stoch_proc nat_filtration X\"\n  shows \"init_triv_filt M (stoch_proc_filt M X borel)\"", "lemma (in infinite_cts_filtration) stream_space_borel_union:\nfixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> ('b::t2_space)\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  and \"i\\<le> n\"\n  and \"A\\<in> sets borel\"\nshows \"\\<forall>y\\<in> A\\<inter> range (X i). X i -`{y} = (proj_stoch_proc X n) -` (\\<Union>z\\<in> comp_proj_i X n i y.\n    (stream_space_single (proj_stoch_proc X n) z))\"", "lemma (in infinite_cts_filtration) proj_stoch_pre_borel:\n  fixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> ('b::t2_space)\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  shows \"proj_stoch_proc X n -` {proj_stoch_proc X n x} \\<in> sets (stoch_proc_filt M X borel n)\"", "lemma (in infinite_cts_filtration) stoch_proc_filt_gen:\nfixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> ('b::t2_space)\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  shows \"stoch_proc_filt M X borel n = fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc X n)\"", "lemma (in infinite_coin_toss_space) stoch_proc_subalg_nat_filt:\n  assumes \"borel_adapt_stoch_proc nat_filtration X\"\n  shows \"subalgebra (nat_filtration n) (stoch_proc_filt M X borel n)\"", "lemma (in infinite_coin_toss_space)\n  assumes \"N = bernoulli_stream q\"\n  and \"0 \\<le> q\"\n  and \"q \\<le> 1\"\n  and \"0 < p\"\n  and \"p < 1\"\n  and \"filt_equiv nat_filtration M N\"\n  shows filt_equiv_sgt: \"0 < q\" and filt_equiv_slt: \"q < 1\"", "lemma stoch_proc_filt_filt_equiv:\n  assumes \"filt_equiv F M N\"\n  shows \"stoch_proc_filt M f P n = stoch_proc_filt N f P n\"", "lemma  filt_equiv_filt:\n  assumes \"filt_equiv F M N\"\nand \"filtration M G\"\nshows \"filtration N G\"", "lemma  filt_equiv_borel_AE_eq_iff:\n  fixes f::\"'a\\<Rightarrow> real\"\n  assumes \"filt_equiv F M N\"\nand \"f\\<in> borel_measurable (F t)\"\nand \"g\\<in> borel_measurable (F t)\"\nand \"prob_space N\"\nand \"prob_space M\"\nshows \"(AE w in M. f w = g w) \\<longleftrightarrow> (AE w in N. f w = g w)\"", "lemma (in infinite_coin_toss_space) filt_equiv_triv_init:\n  assumes \"filt_equiv F M N\"\nand \"init_triv_filt M G\"\nshows \"init_triv_filt N G\"", "lemma (in infinite_coin_toss_space) fct_gen_subalgebra_meas_info:\n  assumes \"\\<forall>w. f (g w) = f w\"\n  and \"f \\<in> space M \\<rightarrow> space N\"\nand \"g \\<in> space M \\<rightarrow> space M\"\n  shows \"g \\<in> measurable (fct_gen_subalgebra M N f) (fct_gen_subalgebra M N f)\""], "translations": [["", "lemma decompose_init_prod:\n  fixes n::nat\n  shows \"(\\<Prod> i\\<in> {0..n}. f i) = f 0 * (\\<Prod> i\\<in> {1..n}. f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod f {0..n} = f 0 * prod f {1..n}", "proof (cases \"Suc 0 \\<le> n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Suc 0 \\<le> n \\<Longrightarrow> prod f {0..n} = f 0 * prod f {1..n}\n 2. \\<not> Suc 0 \\<le> n \\<Longrightarrow>\n    prod f {0..n} = f 0 * prod f {1..n}", "case True"], ["proof (state)\nthis:\n  Suc 0 \\<le> n\n\ngoal (2 subgoals):\n 1. Suc 0 \\<le> n \\<Longrightarrow> prod f {0..n} = f 0 * prod f {1..n}\n 2. \\<not> Suc 0 \\<le> n \\<Longrightarrow>\n    prod f {0..n} = f 0 * prod f {1..n}", "thus ?thesis"], ["proof (prove)\nusing this:\n  Suc 0 \\<le> n\n\ngoal (1 subgoal):\n 1. prod f {0..n} = f 0 * prod f {1..n}", "by (metis One_nat_def Suc_le_D True prod.atLeast0_atMost_Suc_shift prod.atLeast_Suc_atMost_Suc_shift)"], ["proof (state)\nthis:\n  prod f {0..n} = f 0 * prod f {1..n}\n\ngoal (1 subgoal):\n 1. \\<not> Suc 0 \\<le> n \\<Longrightarrow>\n    prod f {0..n} = f 0 * prod f {1..n}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Suc 0 \\<le> n \\<Longrightarrow>\n    prod f {0..n} = f 0 * prod f {1..n}", "case False"], ["proof (state)\nthis:\n  \\<not> Suc 0 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> Suc 0 \\<le> n \\<Longrightarrow>\n    prod f {0..n} = f 0 * prod f {1..n}", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> Suc 0 \\<le> n\n\ngoal (1 subgoal):\n 1. prod f {0..n} = f 0 * prod f {1..n}", "by (metis One_nat_def atLeastLessThanSuc_atLeastAtMost prod.atLeast0_lessThan_Suc_shift\n        prod.atLeast_Suc_lessThan_Suc_shift)"], ["proof (state)\nthis:\n  prod f {0..n} = f 0 * prod f {1..n}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Inter_nonempty_distrib:\n  assumes \"A \\<noteq> {}\"\n  shows \"\\<Inter>A \\<inter> B = (\\<Inter> C\\<in> A. (C\\<inter> B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Inter> A \\<inter> B = (\\<Inter>C\\<in>A. C \\<inter> B)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Inter> A \\<inter> B \\<subseteq> (\\<Inter>C\\<in>A. C \\<inter> B)\n 2. (\\<Inter>C\\<in>A. C \\<inter> B) \\<subseteq> \\<Inter> A \\<inter> B", "show \"(\\<Inter>C\\<in>A. C \\<inter> B) \\<subseteq> \\<Inter>A \\<inter> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Inter>C\\<in>A. C \\<inter> B) \\<subseteq> \\<Inter> A \\<inter> B", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>C\\<in>A. C \\<inter> B) \\<Longrightarrow>\n       x \\<in> \\<Inter> A \\<inter> B", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>C\\<in>A. C \\<inter> B) \\<Longrightarrow>\n       x \\<in> \\<Inter> A \\<inter> B", "assume mem: \"x \\<in> (\\<Inter>C\\<in>A. C \\<inter> B)\""], ["proof (state)\nthis:\n  x \\<in> (\\<Inter>C\\<in>A. C \\<inter> B)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>C\\<in>A. C \\<inter> B) \\<Longrightarrow>\n       x \\<in> \\<Inter> A \\<inter> B", "from \\<open>A \\<noteq> {}\\<close>"], ["proof (chain)\npicking this:\n  A \\<noteq> {}", "obtain C where \"C\\<in> A\""], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>C. C \\<in> A \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  C \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>C\\<in>A. C \\<inter> B) \\<Longrightarrow>\n       x \\<in> \\<Inter> A \\<inter> B", "hence \"x\\<in> C\\<inter> B\""], ["proof (prove)\nusing this:\n  C \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> C \\<inter> B", "using mem"], ["proof (prove)\nusing this:\n  C \\<in> A\n  x \\<in> (\\<Inter>C\\<in>A. C \\<inter> B)\n\ngoal (1 subgoal):\n 1. x \\<in> C \\<inter> B", "by blast"], ["proof (state)\nthis:\n  x \\<in> C \\<inter> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>C\\<in>A. C \\<inter> B) \\<Longrightarrow>\n       x \\<in> \\<Inter> A \\<inter> B", "hence in1: \"x\\<in> B\""], ["proof (prove)\nusing this:\n  x \\<in> C \\<inter> B\n\ngoal (1 subgoal):\n 1. x \\<in> B", "by auto"], ["proof (state)\nthis:\n  x \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>C\\<in>A. C \\<inter> B) \\<Longrightarrow>\n       x \\<in> \\<Inter> A \\<inter> B", "have \"\\<And>C. C\\<in> A \\<Longrightarrow> x \\<in> C\\<inter>B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>C. C \\<in> A \\<Longrightarrow> x \\<in> C \\<inter> B", "using mem"], ["proof (prove)\nusing this:\n  x \\<in> (\\<Inter>C\\<in>A. C \\<inter> B)\n\ngoal (1 subgoal):\n 1. \\<And>C. C \\<in> A \\<Longrightarrow> x \\<in> C \\<inter> B", "by blast"], ["proof (state)\nthis:\n  ?C \\<in> A \\<Longrightarrow> x \\<in> ?C \\<inter> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>C\\<in>A. C \\<inter> B) \\<Longrightarrow>\n       x \\<in> \\<Inter> A \\<inter> B", "hence \"\\<And>C. C\\<in> A \\<Longrightarrow> x\\<in> C\""], ["proof (prove)\nusing this:\n  ?C \\<in> A \\<Longrightarrow> x \\<in> ?C \\<inter> B\n\ngoal (1 subgoal):\n 1. \\<And>C. C \\<in> A \\<Longrightarrow> x \\<in> C", "by auto"], ["proof (state)\nthis:\n  ?C \\<in> A \\<Longrightarrow> x \\<in> ?C\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>C\\<in>A. C \\<inter> B) \\<Longrightarrow>\n       x \\<in> \\<Inter> A \\<inter> B", "hence in2: \"x\\<in> \\<Inter>A\""], ["proof (prove)\nusing this:\n  ?C \\<in> A \\<Longrightarrow> x \\<in> ?C\n\ngoal (1 subgoal):\n 1. x \\<in> \\<Inter> A", "by auto"], ["proof (state)\nthis:\n  x \\<in> \\<Inter> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>C\\<in>A. C \\<inter> B) \\<Longrightarrow>\n       x \\<in> \\<Inter> A \\<inter> B", "thus \"x\\<in> \\<Inter>A \\<inter> B\""], ["proof (prove)\nusing this:\n  x \\<in> \\<Inter> A\n\ngoal (1 subgoal):\n 1. x \\<in> \\<Inter> A \\<inter> B", "using in1 in2"], ["proof (prove)\nusing this:\n  x \\<in> \\<Inter> A\n  x \\<in> B\n  x \\<in> \\<Inter> A\n\ngoal (1 subgoal):\n 1. x \\<in> \\<Inter> A \\<inter> B", "by simp"], ["proof (state)\nthis:\n  x \\<in> \\<Inter> A \\<inter> B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Inter>C\\<in>A. C \\<inter> B) \\<subseteq> \\<Inter> A \\<inter> B\n\ngoal (1 subgoal):\n 1. \\<Inter> A \\<inter> B \\<subseteq> (\\<Inter>C\\<in>A. C \\<inter> B)", "qed auto"], ["", "lemma enn2real_sum: shows \"finite A \\<Longrightarrow> (\\<And>a. a\\<in> A\\<Longrightarrow> f a < top) \\<Longrightarrow>enn2real (sum f A) = (\\<Sum> a\\<in> A. enn2real (f a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A;\n     \\<And>a. a \\<in> A \\<Longrightarrow> f a < \\<top>\\<rbrakk>\n    \\<Longrightarrow> enn2real (sum f A) = (\\<Sum>a\\<in>A. enn2real (f a))", "proof (induct rule:finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>a. a \\<in> {} \\<Longrightarrow> f a < \\<top>) \\<Longrightarrow>\n    enn2real (sum f {}) = (\\<Sum>a\\<in>{}. enn2real (f a))\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a.\n            a \\<in> F \\<Longrightarrow> f a < \\<top>) \\<Longrightarrow>\n        enn2real (sum f F) = (\\<Sum>a\\<in>F. enn2real (f a));\n        \\<And>a. a \\<in> insert x F \\<Longrightarrow> f a < \\<top>\\<rbrakk>\n       \\<Longrightarrow> enn2real (sum f (insert x F)) =\n                         (\\<Sum>a\\<in>insert x F. enn2real (f a))", "case empty"], ["proof (state)\nthis:\n  ?a \\<in> {} \\<Longrightarrow> f ?a < \\<top>\n\ngoal (2 subgoals):\n 1. (\\<And>a. a \\<in> {} \\<Longrightarrow> f a < \\<top>) \\<Longrightarrow>\n    enn2real (sum f {}) = (\\<Sum>a\\<in>{}. enn2real (f a))\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a.\n            a \\<in> F \\<Longrightarrow> f a < \\<top>) \\<Longrightarrow>\n        enn2real (sum f F) = (\\<Sum>a\\<in>F. enn2real (f a));\n        \\<And>a. a \\<in> insert x F \\<Longrightarrow> f a < \\<top>\\<rbrakk>\n       \\<Longrightarrow> enn2real (sum f (insert x F)) =\n                         (\\<Sum>a\\<in>insert x F. enn2real (f a))", "thus ?case"], ["proof (prove)\nusing this:\n  ?a \\<in> {} \\<Longrightarrow> f ?a < \\<top>\n\ngoal (1 subgoal):\n 1. enn2real (sum f {}) = (\\<Sum>a\\<in>{}. enn2real (f a))", "by simp"], ["proof (state)\nthis:\n  enn2real (sum f {}) = (\\<Sum>a\\<in>{}. enn2real (f a))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a.\n            a \\<in> F \\<Longrightarrow> f a < \\<top>) \\<Longrightarrow>\n        enn2real (sum f F) = (\\<Sum>a\\<in>F. enn2real (f a));\n        \\<And>a. a \\<in> insert x F \\<Longrightarrow> f a < \\<top>\\<rbrakk>\n       \\<Longrightarrow> enn2real (sum f (insert x F)) =\n                         (\\<Sum>a\\<in>insert x F. enn2real (f a))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a.\n            a \\<in> F \\<Longrightarrow> f a < \\<top>) \\<Longrightarrow>\n        enn2real (sum f F) = (\\<Sum>a\\<in>F. enn2real (f a));\n        \\<And>a. a \\<in> insert x F \\<Longrightarrow> f a < \\<top>\\<rbrakk>\n       \\<Longrightarrow> enn2real (sum f (insert x F)) =\n                         (\\<Sum>a\\<in>insert x F. enn2real (f a))", "case (insert a A)"], ["proof (state)\nthis:\n  finite A\n  a \\<notin> A\n  (\\<And>a. a \\<in> A \\<Longrightarrow> f a < \\<top>) \\<Longrightarrow>\n  enn2real (sum f A) = (\\<Sum>a\\<in>A. enn2real (f a))\n  ?a \\<in> insert a A \\<Longrightarrow> f ?a < \\<top>\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a.\n            a \\<in> F \\<Longrightarrow> f a < \\<top>) \\<Longrightarrow>\n        enn2real (sum f F) = (\\<Sum>a\\<in>F. enn2real (f a));\n        \\<And>a. a \\<in> insert x F \\<Longrightarrow> f a < \\<top>\\<rbrakk>\n       \\<Longrightarrow> enn2real (sum f (insert x F)) =\n                         (\\<Sum>a\\<in>insert x F. enn2real (f a))", "have \"enn2real (sum f (insert a A)) = enn2real (f a + (sum f A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enn2real (sum f (insert a A)) = enn2real (f a + sum f A)", "by (simp add: insert.hyps(1) insert.hyps(2))"], ["proof (state)\nthis:\n  enn2real (sum f (insert a A)) = enn2real (f a + sum f A)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a.\n            a \\<in> F \\<Longrightarrow> f a < \\<top>) \\<Longrightarrow>\n        enn2real (sum f F) = (\\<Sum>a\\<in>F. enn2real (f a));\n        \\<And>a. a \\<in> insert x F \\<Longrightarrow> f a < \\<top>\\<rbrakk>\n       \\<Longrightarrow> enn2real (sum f (insert x F)) =\n                         (\\<Sum>a\\<in>insert x F. enn2real (f a))", "also"], ["proof (state)\nthis:\n  enn2real (sum f (insert a A)) = enn2real (f a + sum f A)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a.\n            a \\<in> F \\<Longrightarrow> f a < \\<top>) \\<Longrightarrow>\n        enn2real (sum f F) = (\\<Sum>a\\<in>F. enn2real (f a));\n        \\<And>a. a \\<in> insert x F \\<Longrightarrow> f a < \\<top>\\<rbrakk>\n       \\<Longrightarrow> enn2real (sum f (insert x F)) =\n                         (\\<Sum>a\\<in>insert x F. enn2real (f a))", "have \"... = enn2real (f a) + enn2real (sum f A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enn2real (f a + sum f A) = enn2real (f a) + enn2real (sum f A)", "by (simp add: enn2real_plus insert.hyps(1) insert.prems)"], ["proof (state)\nthis:\n  enn2real (f a + sum f A) = enn2real (f a) + enn2real (sum f A)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a.\n            a \\<in> F \\<Longrightarrow> f a < \\<top>) \\<Longrightarrow>\n        enn2real (sum f F) = (\\<Sum>a\\<in>F. enn2real (f a));\n        \\<And>a. a \\<in> insert x F \\<Longrightarrow> f a < \\<top>\\<rbrakk>\n       \\<Longrightarrow> enn2real (sum f (insert x F)) =\n                         (\\<Sum>a\\<in>insert x F. enn2real (f a))", "also"], ["proof (state)\nthis:\n  enn2real (f a + sum f A) = enn2real (f a) + enn2real (sum f A)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a.\n            a \\<in> F \\<Longrightarrow> f a < \\<top>) \\<Longrightarrow>\n        enn2real (sum f F) = (\\<Sum>a\\<in>F. enn2real (f a));\n        \\<And>a. a \\<in> insert x F \\<Longrightarrow> f a < \\<top>\\<rbrakk>\n       \\<Longrightarrow> enn2real (sum f (insert x F)) =\n                         (\\<Sum>a\\<in>insert x F. enn2real (f a))", "have \"... = enn2real (f a) + (\\<Sum> a\\<in> A. enn2real (f a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enn2real (f a) + enn2real (sum f A) =\n    enn2real (f a) + (\\<Sum>a\\<in>A. enn2real (f a))", "by (simp add: insert.hyps(3) insert.prems)"], ["proof (state)\nthis:\n  enn2real (f a) + enn2real (sum f A) =\n  enn2real (f a) + (\\<Sum>a\\<in>A. enn2real (f a))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a.\n            a \\<in> F \\<Longrightarrow> f a < \\<top>) \\<Longrightarrow>\n        enn2real (sum f F) = (\\<Sum>a\\<in>F. enn2real (f a));\n        \\<And>a. a \\<in> insert x F \\<Longrightarrow> f a < \\<top>\\<rbrakk>\n       \\<Longrightarrow> enn2real (sum f (insert x F)) =\n                         (\\<Sum>a\\<in>insert x F. enn2real (f a))", "also"], ["proof (state)\nthis:\n  enn2real (f a) + enn2real (sum f A) =\n  enn2real (f a) + (\\<Sum>a\\<in>A. enn2real (f a))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a.\n            a \\<in> F \\<Longrightarrow> f a < \\<top>) \\<Longrightarrow>\n        enn2real (sum f F) = (\\<Sum>a\\<in>F. enn2real (f a));\n        \\<And>a. a \\<in> insert x F \\<Longrightarrow> f a < \\<top>\\<rbrakk>\n       \\<Longrightarrow> enn2real (sum f (insert x F)) =\n                         (\\<Sum>a\\<in>insert x F. enn2real (f a))", "have \"... = (\\<Sum> a\\<in> (insert a A). enn2real (f a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enn2real (f a) + (\\<Sum>a\\<in>A. enn2real (f a)) =\n    (\\<Sum>a\\<in>insert a A. enn2real (f a))", "by (metis calculation insert.hyps(1) insert.hyps(2) sum.insert)"], ["proof (state)\nthis:\n  enn2real (f a) + (\\<Sum>a\\<in>A. enn2real (f a)) =\n  (\\<Sum>a\\<in>insert a A. enn2real (f a))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a.\n            a \\<in> F \\<Longrightarrow> f a < \\<top>) \\<Longrightarrow>\n        enn2real (sum f F) = (\\<Sum>a\\<in>F. enn2real (f a));\n        \\<And>a. a \\<in> insert x F \\<Longrightarrow> f a < \\<top>\\<rbrakk>\n       \\<Longrightarrow> enn2real (sum f (insert x F)) =\n                         (\\<Sum>a\\<in>insert x F. enn2real (f a))", "finally"], ["proof (chain)\npicking this:\n  enn2real (sum f (insert a A)) = (\\<Sum>a\\<in>insert a A. enn2real (f a))", "show ?case"], ["proof (prove)\nusing this:\n  enn2real (sum f (insert a A)) = (\\<Sum>a\\<in>insert a A. enn2real (f a))\n\ngoal (1 subgoal):\n 1. enn2real (sum f (insert a A)) = (\\<Sum>a\\<in>insert a A. enn2real (f a))", "."], ["proof (state)\nthis:\n  enn2real (sum f (insert a A)) = (\\<Sum>a\\<in>insert a A. enn2real (f a))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ennreal_sum: shows \"finite A \\<Longrightarrow> (\\<And>a. 0 \\<le> f a) \\<Longrightarrow> (\\<Sum>a\\<in> A. ennreal (f a)) = ennreal (\\<Sum>a\\<in> A. f a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; \\<And>a. 0 \\<le> f a\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>a\\<in>A. ennreal (f a)) = ennreal (sum f A)", "proof (induct rule:finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>a. 0 \\<le> f a) \\<Longrightarrow>\n    (\\<Sum>a\\<in>{}. ennreal (f a)) = ennreal (sum f {})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a. 0 \\<le> f a) \\<Longrightarrow>\n        (\\<Sum>a\\<in>F. ennreal (f a)) = ennreal (sum f F);\n        \\<And>a. 0 \\<le> f a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. ennreal (f a)) =\n                         ennreal (sum f (insert x F))", "case empty"], ["proof (state)\nthis:\n  0 \\<le> f ?a\n\ngoal (2 subgoals):\n 1. (\\<And>a. 0 \\<le> f a) \\<Longrightarrow>\n    (\\<Sum>a\\<in>{}. ennreal (f a)) = ennreal (sum f {})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a. 0 \\<le> f a) \\<Longrightarrow>\n        (\\<Sum>a\\<in>F. ennreal (f a)) = ennreal (sum f F);\n        \\<And>a. 0 \\<le> f a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. ennreal (f a)) =\n                         ennreal (sum f (insert x F))", "thus ?case"], ["proof (prove)\nusing this:\n  0 \\<le> f ?a\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>{}. ennreal (f a)) = ennreal (sum f {})", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>{}. ennreal (f a)) = ennreal (sum f {})\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a. 0 \\<le> f a) \\<Longrightarrow>\n        (\\<Sum>a\\<in>F. ennreal (f a)) = ennreal (sum f F);\n        \\<And>a. 0 \\<le> f a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. ennreal (f a)) =\n                         ennreal (sum f (insert x F))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a. 0 \\<le> f a) \\<Longrightarrow>\n        (\\<Sum>a\\<in>F. ennreal (f a)) = ennreal (sum f F);\n        \\<And>a. 0 \\<le> f a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. ennreal (f a)) =\n                         ennreal (sum f (insert x F))", "case (insert a A)"], ["proof (state)\nthis:\n  finite A\n  a \\<notin> A\n  (\\<And>a. 0 \\<le> f a) \\<Longrightarrow>\n  (\\<Sum>a\\<in>A. ennreal (f a)) = ennreal (sum f A)\n  0 \\<le> f ?a\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a. 0 \\<le> f a) \\<Longrightarrow>\n        (\\<Sum>a\\<in>F. ennreal (f a)) = ennreal (sum f F);\n        \\<And>a. 0 \\<le> f a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. ennreal (f a)) =\n                         ennreal (sum f (insert x F))", "have \"(\\<Sum>a\\<in> (insert a A). ennreal (f a)) = ennreal (f a) + (\\<Sum>a\\<in> A. ennreal (f a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>insert a A. ennreal (f a)) =\n    ennreal (f a) + (\\<Sum>a\\<in>A. ennreal (f a))", "by (simp add: insert.hyps(1) insert.hyps(2))"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>insert a A. ennreal (f a)) =\n  ennreal (f a) + (\\<Sum>a\\<in>A. ennreal (f a))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a. 0 \\<le> f a) \\<Longrightarrow>\n        (\\<Sum>a\\<in>F. ennreal (f a)) = ennreal (sum f F);\n        \\<And>a. 0 \\<le> f a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. ennreal (f a)) =\n                         ennreal (sum f (insert x F))", "also"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>insert a A. ennreal (f a)) =\n  ennreal (f a) + (\\<Sum>a\\<in>A. ennreal (f a))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a. 0 \\<le> f a) \\<Longrightarrow>\n        (\\<Sum>a\\<in>F. ennreal (f a)) = ennreal (sum f F);\n        \\<And>a. 0 \\<le> f a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. ennreal (f a)) =\n                         ennreal (sum f (insert x F))", "have \"... = ennreal (f a) + ennreal (\\<Sum>a\\<in> A. f a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (f a) + (\\<Sum>a\\<in>A. ennreal (f a)) =\n    ennreal (f a) + ennreal (sum f A)", "by (simp add: insert.prems)"], ["proof (state)\nthis:\n  ennreal (f a) + (\\<Sum>a\\<in>A. ennreal (f a)) =\n  ennreal (f a) + ennreal (sum f A)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a. 0 \\<le> f a) \\<Longrightarrow>\n        (\\<Sum>a\\<in>F. ennreal (f a)) = ennreal (sum f F);\n        \\<And>a. 0 \\<le> f a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. ennreal (f a)) =\n                         ennreal (sum f (insert x F))", "also"], ["proof (state)\nthis:\n  ennreal (f a) + (\\<Sum>a\\<in>A. ennreal (f a)) =\n  ennreal (f a) + ennreal (sum f A)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a. 0 \\<le> f a) \\<Longrightarrow>\n        (\\<Sum>a\\<in>F. ennreal (f a)) = ennreal (sum f F);\n        \\<And>a. 0 \\<le> f a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. ennreal (f a)) =\n                         ennreal (sum f (insert x F))", "have \"... = ennreal (f a + (\\<Sum>a\\<in> A. f a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (f a) + ennreal (sum f A) = ennreal (f a + sum f A)", "by (simp add: insert.prems sum_nonneg)"], ["proof (state)\nthis:\n  ennreal (f a) + ennreal (sum f A) = ennreal (f a + sum f A)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a. 0 \\<le> f a) \\<Longrightarrow>\n        (\\<Sum>a\\<in>F. ennreal (f a)) = ennreal (sum f F);\n        \\<And>a. 0 \\<le> f a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. ennreal (f a)) =\n                         ennreal (sum f (insert x F))", "also"], ["proof (state)\nthis:\n  ennreal (f a) + ennreal (sum f A) = ennreal (f a + sum f A)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a. 0 \\<le> f a) \\<Longrightarrow>\n        (\\<Sum>a\\<in>F. ennreal (f a)) = ennreal (sum f F);\n        \\<And>a. 0 \\<le> f a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. ennreal (f a)) =\n                         ennreal (sum f (insert x F))", "have \"... = ennreal (\\<Sum>a\\<in> (insert a A). (f a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (f a + sum f A) = ennreal (sum f (insert a A))", "using insert.hyps(1) insert.hyps(2)"], ["proof (prove)\nusing this:\n  finite A\n  a \\<notin> A\n\ngoal (1 subgoal):\n 1. ennreal (f a + sum f A) = ennreal (sum f (insert a A))", "by auto"], ["proof (state)\nthis:\n  ennreal (f a + sum f A) = ennreal (sum f (insert a A))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a. 0 \\<le> f a) \\<Longrightarrow>\n        (\\<Sum>a\\<in>F. ennreal (f a)) = ennreal (sum f F);\n        \\<And>a. 0 \\<le> f a\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. ennreal (f a)) =\n                         ennreal (sum f (insert x F))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>a\\<in>insert a A. ennreal (f a)) = ennreal (sum f (insert a A))", "show ?case"], ["proof (prove)\nusing this:\n  (\\<Sum>a\\<in>insert a A. ennreal (f a)) = ennreal (sum f (insert a A))\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>insert a A. ennreal (f a)) = ennreal (sum f (insert a A))", "."], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>insert a A. ennreal (f a)) = ennreal (sum f (insert a A))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stake_snth:\n  assumes \"stake n w = stake n x\"\n  shows \"Suc i \\<le> n \\<Longrightarrow> snth w i = snth x i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc i \\<le> n \\<Longrightarrow> w !! i = x !! i", "by (metis Suc_le_eq assms stake_nth)"], ["", "lemma stake_snth_charact:\n  assumes \"stake n w = stake n x\"\n  shows \"\\<forall>i < n. snth w i = snth x i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<n. w !! i = x !! i", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i < n \\<Longrightarrow> w !! i = x !! i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i < n \\<Longrightarrow> w !! i = x !! i", "assume \"i < n\""], ["proof (state)\nthis:\n  i < n\n\ngoal (1 subgoal):\n 1. \\<And>i. i < n \\<Longrightarrow> w !! i = x !! i", "thus \"snth w i = snth x i\""], ["proof (prove)\nusing this:\n  i < n\n\ngoal (1 subgoal):\n 1. w !! i = x !! i", "using Suc_leI assms stake_snth"], ["proof (prove)\nusing this:\n  i < n\n  ?m < ?n \\<Longrightarrow> Suc ?m \\<le> ?n\n  stake n w = stake n x\n  \\<lbrakk>stake ?n ?w = stake ?n ?x; Suc ?i \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> ?w !! ?i = ?x !! ?i\n\ngoal (1 subgoal):\n 1. w !! i = x !! i", "by blast"], ["proof (state)\nthis:\n  w !! i = x !! i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stake_snth':\n  shows \"(\\<And>i. Suc i \\<le> n \\<Longrightarrow> snth w i = snth x i) \\<Longrightarrow>stake n w = stake n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        Suc i \\<le> n \\<Longrightarrow> w !! i = x !! i) \\<Longrightarrow>\n    stake n w = stake n x", "proof (induct n arbitrary:w x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>w x.\n       (\\<And>i.\n           Suc i \\<le> 0 \\<Longrightarrow>\n           w !! i = x !! i) \\<Longrightarrow>\n       stake 0 w = stake 0 x\n 2. \\<And>n w x.\n       \\<lbrakk>\\<And>w x.\n                   (\\<And>i.\n                       Suc i \\<le> n \\<Longrightarrow>\n                       w !! i = x !! i) \\<Longrightarrow>\n                   stake n w = stake n x;\n        \\<And>i.\n           Suc i \\<le> Suc n \\<Longrightarrow> w !! i = x !! i\\<rbrakk>\n       \\<Longrightarrow> stake (Suc n) w = stake (Suc n) x", "case 0"], ["proof (state)\nthis:\n  Suc ?i \\<le> 0 \\<Longrightarrow> w !! ?i = x !! ?i\n\ngoal (2 subgoals):\n 1. \\<And>w x.\n       (\\<And>i.\n           Suc i \\<le> 0 \\<Longrightarrow>\n           w !! i = x !! i) \\<Longrightarrow>\n       stake 0 w = stake 0 x\n 2. \\<And>n w x.\n       \\<lbrakk>\\<And>w x.\n                   (\\<And>i.\n                       Suc i \\<le> n \\<Longrightarrow>\n                       w !! i = x !! i) \\<Longrightarrow>\n                   stake n w = stake n x;\n        \\<And>i.\n           Suc i \\<le> Suc n \\<Longrightarrow> w !! i = x !! i\\<rbrakk>\n       \\<Longrightarrow> stake (Suc n) w = stake (Suc n) x", "then"], ["proof (chain)\npicking this:\n  Suc ?i \\<le> 0 \\<Longrightarrow> w !! ?i = x !! ?i", "show ?case"], ["proof (prove)\nusing this:\n  Suc ?i \\<le> 0 \\<Longrightarrow> w !! ?i = x !! ?i\n\ngoal (1 subgoal):\n 1. stake 0 w = stake 0 x", "by auto"], ["proof (state)\nthis:\n  stake 0 w = stake 0 x\n\ngoal (1 subgoal):\n 1. \\<And>n w x.\n       \\<lbrakk>\\<And>w x.\n                   (\\<And>i.\n                       Suc i \\<le> n \\<Longrightarrow>\n                       w !! i = x !! i) \\<Longrightarrow>\n                   stake n w = stake n x;\n        \\<And>i.\n           Suc i \\<le> Suc n \\<Longrightarrow> w !! i = x !! i\\<rbrakk>\n       \\<Longrightarrow> stake (Suc n) w = stake (Suc n) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n w x.\n       \\<lbrakk>\\<And>w x.\n                   (\\<And>i.\n                       Suc i \\<le> n \\<Longrightarrow>\n                       w !! i = x !! i) \\<Longrightarrow>\n                   stake n w = stake n x;\n        \\<And>i.\n           Suc i \\<le> Suc n \\<Longrightarrow> w !! i = x !! i\\<rbrakk>\n       \\<Longrightarrow> stake (Suc n) w = stake (Suc n) x", "case (Suc n)"], ["proof (state)\nthis:\n  (\\<And>i.\n      Suc i \\<le> n \\<Longrightarrow> ?w !! i = ?x !! i) \\<Longrightarrow>\n  stake n ?w = stake n ?x\n  Suc ?i \\<le> Suc n \\<Longrightarrow> w !! ?i = x !! ?i\n\ngoal (1 subgoal):\n 1. \\<And>n w x.\n       \\<lbrakk>\\<And>w x.\n                   (\\<And>i.\n                       Suc i \\<le> n \\<Longrightarrow>\n                       w !! i = x !! i) \\<Longrightarrow>\n                   stake n w = stake n x;\n        \\<And>i.\n           Suc i \\<le> Suc n \\<Longrightarrow> w !! i = x !! i\\<rbrakk>\n       \\<Longrightarrow> stake (Suc n) w = stake (Suc n) x", "hence mh: \"\\<And>i. Suc i \\<le> Suc n \\<Longrightarrow> w !! i = x !! i\""], ["proof (prove)\nusing this:\n  (\\<And>i.\n      Suc i \\<le> n \\<Longrightarrow> ?w !! i = ?x !! i) \\<Longrightarrow>\n  stake n ?w = stake n ?x\n  Suc ?i \\<le> Suc n \\<Longrightarrow> w !! ?i = x !! ?i\n\ngoal (1 subgoal):\n 1. \\<And>i. Suc i \\<le> Suc n \\<Longrightarrow> w !! i = x !! i", "by auto"], ["proof (state)\nthis:\n  Suc ?i \\<le> Suc n \\<Longrightarrow> w !! ?i = x !! ?i\n\ngoal (1 subgoal):\n 1. \\<And>n w x.\n       \\<lbrakk>\\<And>w x.\n                   (\\<And>i.\n                       Suc i \\<le> n \\<Longrightarrow>\n                       w !! i = x !! i) \\<Longrightarrow>\n                   stake n w = stake n x;\n        \\<And>i.\n           Suc i \\<le> Suc n \\<Longrightarrow> w !! i = x !! i\\<rbrakk>\n       \\<Longrightarrow> stake (Suc n) w = stake (Suc n) x", "hence seq:\"snth w n = snth x n\""], ["proof (prove)\nusing this:\n  Suc ?i \\<le> Suc n \\<Longrightarrow> w !! ?i = x !! ?i\n\ngoal (1 subgoal):\n 1. w !! n = x !! n", "by auto"], ["proof (state)\nthis:\n  w !! n = x !! n\n\ngoal (1 subgoal):\n 1. \\<And>n w x.\n       \\<lbrakk>\\<And>w x.\n                   (\\<And>i.\n                       Suc i \\<le> n \\<Longrightarrow>\n                       w !! i = x !! i) \\<Longrightarrow>\n                   stake n w = stake n x;\n        \\<And>i.\n           Suc i \\<le> Suc n \\<Longrightarrow> w !! i = x !! i\\<rbrakk>\n       \\<Longrightarrow> stake (Suc n) w = stake (Suc n) x", "have \"stake n w = stake n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake n w = stake n x", "using mh Suc"], ["proof (prove)\nusing this:\n  Suc ?i \\<le> Suc n \\<Longrightarrow> w !! ?i = x !! ?i\n  (\\<And>i.\n      Suc i \\<le> n \\<Longrightarrow> ?w !! i = ?x !! i) \\<Longrightarrow>\n  stake n ?w = stake n ?x\n  Suc ?i \\<le> Suc n \\<Longrightarrow> w !! ?i = x !! ?i\n\ngoal (1 subgoal):\n 1. stake n w = stake n x", "by (meson Suc_leD Suc_le_mono)"], ["proof (state)\nthis:\n  stake n w = stake n x\n\ngoal (1 subgoal):\n 1. \\<And>n w x.\n       \\<lbrakk>\\<And>w x.\n                   (\\<And>i.\n                       Suc i \\<le> n \\<Longrightarrow>\n                       w !! i = x !! i) \\<Longrightarrow>\n                   stake n w = stake n x;\n        \\<And>i.\n           Suc i \\<le> Suc n \\<Longrightarrow> w !! i = x !! i\\<rbrakk>\n       \\<Longrightarrow> stake (Suc n) w = stake (Suc n) x", "thus \"stake (Suc n) w = stake (Suc n) x\""], ["proof (prove)\nusing this:\n  stake n w = stake n x\n\ngoal (1 subgoal):\n 1. stake (Suc n) w = stake (Suc n) x", "by (metis seq stake_Suc)"], ["proof (state)\nthis:\n  stake (Suc n) w = stake (Suc n) x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  stake_inter_snth:\n  fixes x\n  assumes \"Suc 0 \\<le> n\"\n  shows \"{w\\<in> space M. (stake n w = stake n x)} = (\\<Inter> i \\<in> {0.. n-1}. {w\\<in> space M. (snth w i = snth x i)})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. stake n w = stake n x} =\n    (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {w \\<in> space M. stake n w = stake n x}\n    \\<subseteq> (\\<Inter>i\\<in>{0..n - 1}.\n                    {w \\<in> space M. w !! i = x !! i})\n 2. (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n    \\<subseteq> {w \\<in> space M. stake n w = stake n x}", "let ?S =  \"{w\\<in> space M. (stake n w = stake n x)}\""], ["proof (state)\ngoal (2 subgoals):\n 1. {w \\<in> space M. stake n w = stake n x}\n    \\<subseteq> (\\<Inter>i\\<in>{0..n - 1}.\n                    {w \\<in> space M. w !! i = x !! i})\n 2. (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n    \\<subseteq> {w \\<in> space M. stake n w = stake n x}", "show \"?S \\<subseteq> (\\<Inter>i\\<in>{0..n-1}. {w \\<in> space M. w !! i = x !! i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. stake n w = stake n x}\n    \\<subseteq> (\\<Inter>i\\<in>{0..n - 1}.\n                    {w \\<in> space M. w !! i = x !! i})", "using stake_snth assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>stake ?n ?w = stake ?n ?x; Suc ?i \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> ?w !! ?i = ?x !! ?i\n  Suc 0 \\<le> n\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. stake n w = stake n x}\n    \\<subseteq> (\\<Inter>i\\<in>{0..n - 1}.\n                    {w \\<in> space M. w !! i = x !! i})", "by fastforce"], ["proof (state)\nthis:\n  {w \\<in> space M. stake n w = stake n x}\n  \\<subseteq> (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n    \\<subseteq> {w \\<in> space M. stake n w = stake n x}", "show \"(\\<Inter>i\\<in>{0..n-1}. {w \\<in> space M. w !! i = x !! i}) \\<subseteq> ?S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n    \\<subseteq> {w \\<in> space M. stake n w = stake n x}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (\\<Inter>i\\<in>{0..n - 1}.\n                    {w \\<in> space M. w !! i = x !! i}) \\<Longrightarrow>\n       xa \\<in> {w \\<in> space M. stake n w = stake n x}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (\\<Inter>i\\<in>{0..n - 1}.\n                    {w \\<in> space M. w !! i = x !! i}) \\<Longrightarrow>\n       xa \\<in> {w \\<in> space M. stake n w = stake n x}", "assume inter: \"w \\<in> (\\<Inter>i\\<in>{0..n-1}. {w \\<in> space M. w !! i = x !! i})\""], ["proof (state)\nthis:\n  w \\<in> (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (\\<Inter>i\\<in>{0..n - 1}.\n                    {w \\<in> space M. w !! i = x !! i}) \\<Longrightarrow>\n       xa \\<in> {w \\<in> space M. stake n w = stake n x}", "have \"\\<forall> i. 0 \\<le> i \\<and> i \\<le> n-1 \\<longrightarrow> snth w i = snth x i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> w !! i = x !! i", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       0 \\<le> i \\<and> i \\<le> n - 1 \\<Longrightarrow> w !! i = x !! i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       0 \\<le> i \\<and> i \\<le> n - 1 \\<Longrightarrow> w !! i = x !! i", "assume \"0 \\<le> i \\<and> i \\<le> n-1\""], ["proof (state)\nthis:\n  0 \\<le> i \\<and> i \\<le> n - 1\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       0 \\<le> i \\<and> i \\<le> n - 1 \\<Longrightarrow> w !! i = x !! i", "thus \"snth w i = snth x i\""], ["proof (prove)\nusing this:\n  0 \\<le> i \\<and> i \\<le> n - 1\n\ngoal (1 subgoal):\n 1. w !! i = x !! i", "using inter"], ["proof (prove)\nusing this:\n  0 \\<le> i \\<and> i \\<le> n - 1\n  w \\<in> (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n\ngoal (1 subgoal):\n 1. w !! i = x !! i", "by auto"], ["proof (state)\nthis:\n  w !! i = x !! i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i.\n     0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> w !! i = x !! i\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (\\<Inter>i\\<in>{0..n - 1}.\n                    {w \\<in> space M. w !! i = x !! i}) \\<Longrightarrow>\n       xa \\<in> {w \\<in> space M. stake n w = stake n x}", "hence \"stake n w = stake n x\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> w !! i = x !! i\n\ngoal (1 subgoal):\n 1. stake n w = stake n x", "by (metis One_nat_def Suc_le_D diff_Suc_Suc diff_is_0_eq diff_zero le0 stake_snth')"], ["proof (state)\nthis:\n  stake n w = stake n x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (\\<Inter>i\\<in>{0..n - 1}.\n                    {w \\<in> space M. w !! i = x !! i}) \\<Longrightarrow>\n       xa \\<in> {w \\<in> space M. stake n w = stake n x}", "thus \"w\\<in> ?S\""], ["proof (prove)\nusing this:\n  stake n w = stake n x\n\ngoal (1 subgoal):\n 1. w \\<in> {w \\<in> space M. stake n w = stake n x}", "using inter"], ["proof (prove)\nusing this:\n  stake n w = stake n x\n  w \\<in> (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n\ngoal (1 subgoal):\n 1. w \\<in> {w \\<in> space M. stake n w = stake n x}", "by auto"], ["proof (state)\nthis:\n  w \\<in> {w \\<in> space M. stake n w = stake n x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n  \\<subseteq> {w \\<in> space M. stake n w = stake n x}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma streams_stake_set:\n  shows \"pw \\<in> streams A \\<Longrightarrow> set (stake n pw) \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pw \\<in> streams A \\<Longrightarrow> set (stake n pw) \\<subseteq> A", "proof (induct n arbitrary: pw)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>pw.\n       pw \\<in> streams A \\<Longrightarrow> set (stake 0 pw) \\<subseteq> A\n 2. \\<And>n pw.\n       \\<lbrakk>\\<And>pw.\n                   pw \\<in> streams A \\<Longrightarrow>\n                   set (stake n pw) \\<subseteq> A;\n        pw \\<in> streams A\\<rbrakk>\n       \\<Longrightarrow> set (stake (Suc n) pw) \\<subseteq> A", "case (Suc n)"], ["proof (state)\nthis:\n  ?pw \\<in> streams A \\<Longrightarrow> set (stake n ?pw) \\<subseteq> A\n  pw \\<in> streams A\n\ngoal (2 subgoals):\n 1. \\<And>pw.\n       pw \\<in> streams A \\<Longrightarrow> set (stake 0 pw) \\<subseteq> A\n 2. \\<And>n pw.\n       \\<lbrakk>\\<And>pw.\n                   pw \\<in> streams A \\<Longrightarrow>\n                   set (stake n pw) \\<subseteq> A;\n        pw \\<in> streams A\\<rbrakk>\n       \\<Longrightarrow> set (stake (Suc n) pw) \\<subseteq> A", "note hyp = this"], ["proof (state)\nthis:\n  ?pw \\<in> streams A \\<Longrightarrow> set (stake n ?pw) \\<subseteq> A\n  pw \\<in> streams A\n\ngoal (2 subgoals):\n 1. \\<And>pw.\n       pw \\<in> streams A \\<Longrightarrow> set (stake 0 pw) \\<subseteq> A\n 2. \\<And>n pw.\n       \\<lbrakk>\\<And>pw.\n                   pw \\<in> streams A \\<Longrightarrow>\n                   set (stake n pw) \\<subseteq> A;\n        pw \\<in> streams A\\<rbrakk>\n       \\<Longrightarrow> set (stake (Suc n) pw) \\<subseteq> A", "have \"set (stake (Suc 0) pw) \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (stake (Suc 0) pw) \\<subseteq> A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. set (stake (Suc 0) pw) \\<subseteq> A", "have \"shd pw \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. shd pw \\<in> A", "using hyp  streams_shd[of pw A]"], ["proof (prove)\nusing this:\n  ?pw \\<in> streams A \\<Longrightarrow> set (stake n ?pw) \\<subseteq> A\n  pw \\<in> streams A\n  pw \\<in> streams A \\<Longrightarrow> shd pw \\<in> A\n\ngoal (1 subgoal):\n 1. shd pw \\<in> A", "by simp"], ["proof (state)\nthis:\n  shd pw \\<in> A\n\ngoal (1 subgoal):\n 1. set (stake (Suc 0) pw) \\<subseteq> A", "have \"stake (Suc 0) pw = [shd pw]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (Suc 0) pw = [shd pw]", "by auto"], ["proof (state)\nthis:\n  stake (Suc 0) pw = [shd pw]\n\ngoal (1 subgoal):\n 1. set (stake (Suc 0) pw) \\<subseteq> A", "hence \"set (stake (Suc 0) pw) = {shd pw}\""], ["proof (prove)\nusing this:\n  stake (Suc 0) pw = [shd pw]\n\ngoal (1 subgoal):\n 1. set (stake (Suc 0) pw) = {shd pw}", "by auto"], ["proof (state)\nthis:\n  set (stake (Suc 0) pw) = {shd pw}\n\ngoal (1 subgoal):\n 1. set (stake (Suc 0) pw) \\<subseteq> A", "thus ?thesis"], ["proof (prove)\nusing this:\n  set (stake (Suc 0) pw) = {shd pw}\n\ngoal (1 subgoal):\n 1. set (stake (Suc 0) pw) \\<subseteq> A", "using \\<open>shd pw \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  set (stake (Suc 0) pw) = {shd pw}\n  shd pw \\<in> A\n\ngoal (1 subgoal):\n 1. set (stake (Suc 0) pw) \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  set (stake (Suc 0) pw) \\<subseteq> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set (stake (Suc 0) pw) \\<subseteq> A\n\ngoal (2 subgoals):\n 1. \\<And>pw.\n       pw \\<in> streams A \\<Longrightarrow> set (stake 0 pw) \\<subseteq> A\n 2. \\<And>n pw.\n       \\<lbrakk>\\<And>pw.\n                   pw \\<in> streams A \\<Longrightarrow>\n                   set (stake n pw) \\<subseteq> A;\n        pw \\<in> streams A\\<rbrakk>\n       \\<Longrightarrow> set (stake (Suc n) pw) \\<subseteq> A", "thus ?case"], ["proof (prove)\nusing this:\n  set (stake (Suc 0) pw) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. set (stake (Suc n) pw) \\<subseteq> A", "by (simp add: Suc.hyps Suc.prems streams_stl)"], ["proof (state)\nthis:\n  set (stake (Suc n) pw) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>pw.\n       pw \\<in> streams A \\<Longrightarrow> set (stake 0 pw) \\<subseteq> A", "qed simp"], ["", "lemma stake_finite_universe_induct:\n  assumes \"finite A\"\n  and \"A \\<noteq> {}\"\n  shows \"(stake (Suc n) `(streams A)) = {s#w| s w. s\\<in> A \\<and> w\\<in> (stake n `(streams A))}\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (Suc n) ` streams A =\n    {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. stake (Suc n) ` streams A\n    \\<subseteq> {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}\n 2. {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}\n    \\<subseteq> stake (Suc n) ` streams A", "show \"?L \\<subseteq> ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (Suc n) ` streams A\n    \\<subseteq> {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> stake (Suc n) ` streams A \\<Longrightarrow>\n       x \\<in> {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}", "fix l::\"'a list\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> stake (Suc n) ` streams A \\<Longrightarrow>\n       x \\<in> {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}", "assume \"l\\<in> ?L\""], ["proof (state)\nthis:\n  l \\<in> stake (Suc n) ` streams A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> stake (Suc n) ` streams A \\<Longrightarrow>\n       x \\<in> {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}", "hence \"\\<exists>pw. pw \\<in> streams A \\<and> l = stake (Suc n) pw\""], ["proof (prove)\nusing this:\n  l \\<in> stake (Suc n) ` streams A\n\ngoal (1 subgoal):\n 1. \\<exists>pw. pw \\<in> streams A \\<and> l = stake (Suc n) pw", "by auto"], ["proof (state)\nthis:\n  \\<exists>pw. pw \\<in> streams A \\<and> l = stake (Suc n) pw\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> stake (Suc n) ` streams A \\<Longrightarrow>\n       x \\<in> {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}", "from this"], ["proof (chain)\npicking this:\n  \\<exists>pw. pw \\<in> streams A \\<and> l = stake (Suc n) pw", "obtain pw where \"pw \\<in> streams A\" and  \"l = stake (Suc n) pw\""], ["proof (prove)\nusing this:\n  \\<exists>pw. pw \\<in> streams A \\<and> l = stake (Suc n) pw\n\ngoal (1 subgoal):\n 1. (\\<And>pw.\n        \\<lbrakk>pw \\<in> streams A; l = stake (Suc n) pw\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pw \\<in> streams A\n  l = stake (Suc n) pw\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> stake (Suc n) ` streams A \\<Longrightarrow>\n       x \\<in> {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}", "hence \"l = shd pw # stake n (stl pw)\""], ["proof (prove)\nusing this:\n  pw \\<in> streams A\n  l = stake (Suc n) pw\n\ngoal (1 subgoal):\n 1. l = shd pw # stake n (stl pw)", "unfolding stake_def"], ["proof (prove)\nusing this:\n  pw \\<in> streams A\n  l =\n  rec_nat (\\<lambda>s. []) (\\<lambda>n na s. shd s # na (stl s)) (Suc n) pw\n\ngoal (1 subgoal):\n 1. l =\n    shd pw #\n    rec_nat (\\<lambda>s. []) (\\<lambda>n na s. shd s # na (stl s)) n\n     (stl pw)", "by auto"], ["proof (state)\nthis:\n  l = shd pw # stake n (stl pw)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> stake (Suc n) ` streams A \\<Longrightarrow>\n       x \\<in> {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}", "thus \"l\\<in> ?R\""], ["proof (prove)\nusing this:\n  l = shd pw # stake n (stl pw)\n\ngoal (1 subgoal):\n 1. l \\<in> {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}", "by (simp add: \\<open>pw \\<in> streams A\\<close> streams_shd streams_stl)"], ["proof (state)\nthis:\n  l \\<in> {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  stake (Suc n) ` streams A\n  \\<subseteq> {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}\n\ngoal (1 subgoal):\n 1. {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}\n    \\<subseteq> stake (Suc n) ` streams A", "show \"?R \\<subseteq> ?L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}\n    \\<subseteq> stake (Suc n) ` streams A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s # w |s w.\n                s \\<in> A \\<and>\n                w \\<in> stake n ` streams A} \\<Longrightarrow>\n       x \\<in> stake (Suc n) ` streams A", "fix l::\"'a list\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s # w |s w.\n                s \\<in> A \\<and>\n                w \\<in> stake n ` streams A} \\<Longrightarrow>\n       x \\<in> stake (Suc n) ` streams A", "assume \"l\\<in> ?R\""], ["proof (state)\nthis:\n  l \\<in> {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s # w |s w.\n                s \\<in> A \\<and>\n                w \\<in> stake n ` streams A} \\<Longrightarrow>\n       x \\<in> stake (Suc n) ` streams A", "hence \"\\<exists> s w. s\\<in> A \\<and> w\\<in> (stake n `(streams A)) \\<and> l = s# w\""], ["proof (prove)\nusing this:\n  l \\<in> {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}\n\ngoal (1 subgoal):\n 1. \\<exists>s w.\n       s \\<in> A \\<and> w \\<in> stake n ` streams A \\<and> l = s # w", "by auto"], ["proof (state)\nthis:\n  \\<exists>s w.\n     s \\<in> A \\<and> w \\<in> stake n ` streams A \\<and> l = s # w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s # w |s w.\n                s \\<in> A \\<and>\n                w \\<in> stake n ` streams A} \\<Longrightarrow>\n       x \\<in> stake (Suc n) ` streams A", "from this"], ["proof (chain)\npicking this:\n  \\<exists>s w.\n     s \\<in> A \\<and> w \\<in> stake n ` streams A \\<and> l = s # w", "obtain s and w where \"s\\<in> A\" and \"w\\<in> (stake n `(streams A))\" and \"l = s# w\""], ["proof (prove)\nusing this:\n  \\<exists>s w.\n     s \\<in> A \\<and> w \\<in> stake n ` streams A \\<and> l = s # w\n\ngoal (1 subgoal):\n 1. (\\<And>s w.\n        \\<lbrakk>s \\<in> A; w \\<in> stake n ` streams A; l = s # w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  s \\<in> A\n  w \\<in> stake n ` streams A\n  l = s # w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s # w |s w.\n                s \\<in> A \\<and>\n                w \\<in> stake n ` streams A} \\<Longrightarrow>\n       x \\<in> stake (Suc n) ` streams A", "note swprop = this"], ["proof (state)\nthis:\n  s \\<in> A\n  w \\<in> stake n ` streams A\n  l = s # w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s # w |s w.\n                s \\<in> A \\<and>\n                w \\<in> stake n ` streams A} \\<Longrightarrow>\n       x \\<in> stake (Suc n) ` streams A", "have \"\\<exists>pw. pw \\<in> streams A \\<and> w = stake n pw\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>pw. pw \\<in> streams A \\<and> w = stake n pw", "using swprop"], ["proof (prove)\nusing this:\n  s \\<in> A\n  w \\<in> stake n ` streams A\n  l = s # w\n\ngoal (1 subgoal):\n 1. \\<exists>pw. pw \\<in> streams A \\<and> w = stake n pw", "by auto"], ["proof (state)\nthis:\n  \\<exists>pw. pw \\<in> streams A \\<and> w = stake n pw\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s # w |s w.\n                s \\<in> A \\<and>\n                w \\<in> stake n ` streams A} \\<Longrightarrow>\n       x \\<in> stake (Suc n) ` streams A", "from this"], ["proof (chain)\npicking this:\n  \\<exists>pw. pw \\<in> streams A \\<and> w = stake n pw", "obtain pw where \"pw\\<in> streams A\" and \"w = stake n pw\""], ["proof (prove)\nusing this:\n  \\<exists>pw. pw \\<in> streams A \\<and> w = stake n pw\n\ngoal (1 subgoal):\n 1. (\\<And>pw.\n        \\<lbrakk>pw \\<in> streams A; w = stake n pw\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pw \\<in> streams A\n  w = stake n pw\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s # w |s w.\n                s \\<in> A \\<and>\n                w \\<in> stake n ` streams A} \\<Longrightarrow>\n       x \\<in> stake (Suc n) ` streams A", "note pwprop = this"], ["proof (state)\nthis:\n  pw \\<in> streams A\n  w = stake n pw\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s # w |s w.\n                s \\<in> A \\<and>\n                w \\<in> stake n ` streams A} \\<Longrightarrow>\n       x \\<in> stake (Suc n) ` streams A", "have \"l \\<in> lists A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l \\<in> lists A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. l \\<in> lists A", "have \"s\\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> A", "using swprop"], ["proof (prove)\nusing this:\n  s \\<in> A\n  w \\<in> stake n ` streams A\n  l = s # w\n\ngoal (1 subgoal):\n 1. s \\<in> A", "by simp"], ["proof (state)\nthis:\n  s \\<in> A\n\ngoal (1 subgoal):\n 1. l \\<in> lists A", "have \"set w \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set w \\<subseteq> A", "using pwprop streams_stake_set"], ["proof (prove)\nusing this:\n  pw \\<in> streams A\n  w = stake n pw\n  ?pw \\<in> streams ?A \\<Longrightarrow> set (stake ?n ?pw) \\<subseteq> ?A\n\ngoal (1 subgoal):\n 1. set w \\<subseteq> A", "by simp"], ["proof (state)\nthis:\n  set w \\<subseteq> A\n\ngoal (1 subgoal):\n 1. l \\<in> lists A", "have \"set l = set w \\<union> {s}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set l = set w \\<union> {s}", "using swprop"], ["proof (prove)\nusing this:\n  s \\<in> A\n  w \\<in> stake n ` streams A\n  l = s # w\n\ngoal (1 subgoal):\n 1. set l = set w \\<union> {s}", "by auto"], ["proof (state)\nthis:\n  set l = set w \\<union> {s}\n\ngoal (1 subgoal):\n 1. l \\<in> lists A", "thus ?thesis"], ["proof (prove)\nusing this:\n  set l = set w \\<union> {s}\n\ngoal (1 subgoal):\n 1. l \\<in> lists A", "using \\<open>s\\<in> A\\<close> \\<open>set w \\<subseteq> A\\<close>"], ["proof (prove)\nusing this:\n  set l = set w \\<union> {s}\n  s \\<in> A\n  set w \\<subseteq> A\n\ngoal (1 subgoal):\n 1. l \\<in> lists A", "by auto"], ["proof (state)\nthis:\n  l \\<in> lists A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  l \\<in> lists A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s # w |s w.\n                s \\<in> A \\<and>\n                w \\<in> stake n ` streams A} \\<Longrightarrow>\n       x \\<in> stake (Suc n) ` streams A", "have \"\\<exists>x. x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> A", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> A", "by auto"], ["proof (state)\nthis:\n  \\<exists>x. x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s # w |s w.\n                s \\<in> A \\<and>\n                w \\<in> stake n ` streams A} \\<Longrightarrow>\n       x \\<in> stake (Suc n) ` streams A", "from this"], ["proof (chain)\npicking this:\n  \\<exists>x. x \\<in> A", "obtain x where \"x\\<in> A\""], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> A \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s # w |s w.\n                s \\<in> A \\<and>\n                w \\<in> stake n ` streams A} \\<Longrightarrow>\n       x \\<in> stake (Suc n) ` streams A", "let ?sx = \"sconst x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s # w |s w.\n                s \\<in> A \\<and>\n                w \\<in> stake n ` streams A} \\<Longrightarrow>\n       x \\<in> stake (Suc n) ` streams A", "let ?st = \"shift l ?sx\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s # w |s w.\n                s \\<in> A \\<and>\n                w \\<in> stake n ` streams A} \\<Longrightarrow>\n       x \\<in> stake (Suc n) ` streams A", "have \"l = stake (Suc n) ?st\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l = stake (Suc n) (l @- sconst x)", "by (simp add: pwprop(2) stake_shift swprop(3))"], ["proof (state)\nthis:\n  l = stake (Suc n) (l @- sconst x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s # w |s w.\n                s \\<in> A \\<and>\n                w \\<in> stake n ` streams A} \\<Longrightarrow>\n       x \\<in> stake (Suc n) ` streams A", "have \"sset ?sx = {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sset (sconst x) = {x}", "by simp"], ["proof (state)\nthis:\n  sset (sconst x) = {x}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s # w |s w.\n                s \\<in> A \\<and>\n                w \\<in> stake n ` streams A} \\<Longrightarrow>\n       x \\<in> stake (Suc n) ` streams A", "hence \"sset ?sx \\<subseteq> A\""], ["proof (prove)\nusing this:\n  sset (sconst x) = {x}\n\ngoal (1 subgoal):\n 1. sset (sconst x) \\<subseteq> A", "using \\<open>x\\<in> A\\<close>"], ["proof (prove)\nusing this:\n  sset (sconst x) = {x}\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. sset (sconst x) \\<subseteq> A", "by simp"], ["proof (state)\nthis:\n  sset (sconst x) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s # w |s w.\n                s \\<in> A \\<and>\n                w \\<in> stake n ` streams A} \\<Longrightarrow>\n       x \\<in> stake (Suc n) ` streams A", "hence \"?sx \\<in> streams A\""], ["proof (prove)\nusing this:\n  sset (sconst x) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. sconst x \\<in> streams A", "using sset_streams[of \"sconst x\"]"], ["proof (prove)\nusing this:\n  sset (sconst x) \\<subseteq> A\n  sset (sconst x) \\<subseteq> ?A \\<Longrightarrow> sconst x \\<in> streams ?A\n\ngoal (1 subgoal):\n 1. sconst x \\<in> streams A", "by simp"], ["proof (state)\nthis:\n  sconst x \\<in> streams A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s # w |s w.\n                s \\<in> A \\<and>\n                w \\<in> stake n ` streams A} \\<Longrightarrow>\n       x \\<in> stake (Suc n) ` streams A", "hence \"?st \\<in> streams A\""], ["proof (prove)\nusing this:\n  sconst x \\<in> streams A\n\ngoal (1 subgoal):\n 1. l @- sconst x \\<in> streams A", "using \\<open>l \\<in> lists A\\<close> shift_streams[of l A \"sconst x\"]"], ["proof (prove)\nusing this:\n  sconst x \\<in> streams A\n  l \\<in> lists A\n  \\<lbrakk>l \\<in> lists A; sconst x \\<in> streams A\\<rbrakk>\n  \\<Longrightarrow> l @- sconst x \\<in> streams A\n\ngoal (1 subgoal):\n 1. l @- sconst x \\<in> streams A", "by simp"], ["proof (state)\nthis:\n  l @- sconst x \\<in> streams A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {s # w |s w.\n                s \\<in> A \\<and>\n                w \\<in> stake n ` streams A} \\<Longrightarrow>\n       x \\<in> stake (Suc n) ` streams A", "thus \"l\\<in> ?L\""], ["proof (prove)\nusing this:\n  l @- sconst x \\<in> streams A\n\ngoal (1 subgoal):\n 1. l \\<in> stake (Suc n) ` streams A", "using \\<open>l = stake (Suc n) ?st\\<close>"], ["proof (prove)\nusing this:\n  l @- sconst x \\<in> streams A\n  l = stake (Suc n) (l @- sconst x)\n\ngoal (1 subgoal):\n 1. l \\<in> stake (Suc n) ` streams A", "by blast"], ["proof (state)\nthis:\n  l \\<in> stake (Suc n) ` streams A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}\n  \\<subseteq> stake (Suc n) ` streams A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stake_finite_universe_finite:\n  assumes \"finite A\"\n  and \"A \\<noteq> {}\"\n  shows \"finite (stake n `(streams A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (stake n ` streams A)", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (stake 0 ` streams A)\n 2. \\<And>n.\n       finite (stake n ` streams A) \\<Longrightarrow>\n       finite (stake (Suc n) ` streams A)", "let ?L = \"(stake 0 `(streams A))\""], ["proof (state)\ngoal (2 subgoals):\n 1. finite (stake 0 ` streams A)\n 2. \\<And>n.\n       finite (stake n ` streams A) \\<Longrightarrow>\n       finite (stake (Suc n) ` streams A)", "have \"streams A \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. streams A \\<noteq> {}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. streams A = {} \\<Longrightarrow> False", "assume \"streams A = {}\""], ["proof (state)\nthis:\n  streams A = {}\n\ngoal (1 subgoal):\n 1. streams A = {} \\<Longrightarrow> False", "have \"\\<exists>x. x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> A", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> A", "by auto"], ["proof (state)\nthis:\n  \\<exists>x. x \\<in> A\n\ngoal (1 subgoal):\n 1. streams A = {} \\<Longrightarrow> False", "from this"], ["proof (chain)\npicking this:\n  \\<exists>x. x \\<in> A", "obtain x where \"x\\<in> A\""], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> A \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. streams A = {} \\<Longrightarrow> False", "let ?sx = \"sconst x\""], ["proof (state)\ngoal (1 subgoal):\n 1. streams A = {} \\<Longrightarrow> False", "have \"sset ?sx = {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sset (sconst x) = {x}", "by simp"], ["proof (state)\nthis:\n  sset (sconst x) = {x}\n\ngoal (1 subgoal):\n 1. streams A = {} \\<Longrightarrow> False", "hence \"sset ?sx \\<subseteq> A\""], ["proof (prove)\nusing this:\n  sset (sconst x) = {x}\n\ngoal (1 subgoal):\n 1. sset (sconst x) \\<subseteq> A", "using \\<open>x\\<in> A\\<close>"], ["proof (prove)\nusing this:\n  sset (sconst x) = {x}\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. sset (sconst x) \\<subseteq> A", "by simp"], ["proof (state)\nthis:\n  sset (sconst x) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. streams A = {} \\<Longrightarrow> False", "hence \"?sx \\<in> streams A\""], ["proof (prove)\nusing this:\n  sset (sconst x) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. sconst x \\<in> streams A", "using sset_streams[of \"sconst x\"]"], ["proof (prove)\nusing this:\n  sset (sconst x) \\<subseteq> A\n  sset (sconst x) \\<subseteq> ?A \\<Longrightarrow> sconst x \\<in> streams ?A\n\ngoal (1 subgoal):\n 1. sconst x \\<in> streams A", "by simp"], ["proof (state)\nthis:\n  sconst x \\<in> streams A\n\ngoal (1 subgoal):\n 1. streams A = {} \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  sconst x \\<in> streams A\n\ngoal (1 subgoal):\n 1. False", "using \\<open>streams A = {}\\<close>"], ["proof (prove)\nusing this:\n  sconst x \\<in> streams A\n  streams A = {}\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  streams A \\<noteq> {}\n\ngoal (2 subgoals):\n 1. finite (stake 0 ` streams A)\n 2. \\<And>n.\n       finite (stake n ` streams A) \\<Longrightarrow>\n       finite (stake (Suc n) ` streams A)", "have \"stake 0 = (\\<lambda>s. [])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake 0 = (\\<lambda>s. [])", "unfolding stake_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. rec_nat (\\<lambda>s. []) (\\<lambda>n na s. shd s # na (stl s)) 0 =\n    (\\<lambda>s. [])", "by simp"], ["proof (state)\nthis:\n  stake 0 = (\\<lambda>s. [])\n\ngoal (2 subgoals):\n 1. finite (stake 0 ` streams A)\n 2. \\<And>n.\n       finite (stake n ` streams A) \\<Longrightarrow>\n       finite (stake (Suc n) ` streams A)", "hence \"?L = {[]}\""], ["proof (prove)\nusing this:\n  stake 0 = (\\<lambda>s. [])\n\ngoal (1 subgoal):\n 1. stake 0 ` streams A = {[]}", "using \\<open>streams A \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  stake 0 = (\\<lambda>s. [])\n  streams A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. stake 0 ` streams A = {[]}", "by auto"], ["proof (state)\nthis:\n  stake 0 ` streams A = {[]}\n\ngoal (2 subgoals):\n 1. finite (stake 0 ` streams A)\n 2. \\<And>n.\n       finite (stake n ` streams A) \\<Longrightarrow>\n       finite (stake (Suc n) ` streams A)", "show \"finite (stake 0 `(streams A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (stake 0 ` streams A)", "by (simp add: \\<open>?L = {[]}\\<close> image_constant_conv)"], ["proof (state)\nthis:\n  finite (stake 0 ` streams A)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       finite (stake n ` streams A) \\<Longrightarrow>\n       finite (stake (Suc n) ` streams A)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       finite (stake n ` streams A) \\<Longrightarrow>\n       finite (stake (Suc n) ` streams A)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       finite (stake n ` streams A) \\<Longrightarrow>\n       finite (stake (Suc n) ` streams A)", "assume \"finite (stake n `(streams A))\""], ["proof (state)\nthis:\n  finite (stake n ` streams A)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       finite (stake n ` streams A) \\<Longrightarrow>\n       finite (stake (Suc n) ` streams A)", "note hyp = this"], ["proof (state)\nthis:\n  finite (stake n ` streams A)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       finite (stake n ` streams A) \\<Longrightarrow>\n       finite (stake (Suc n) ` streams A)", "have \"(stake (Suc n) `(streams A)) = {s#w| s w. s\\<in> A \\<and> w\\<in> (stake n `(streams A))}\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (Suc n) ` streams A =\n    {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}", "using assms stake_finite_universe_induct[of A n]"], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n  \\<lbrakk>finite A; A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> stake (Suc n) ` streams A =\n                    {s # w |s w.\n                     s \\<in> A \\<and> w \\<in> stake n ` streams A}\n\ngoal (1 subgoal):\n 1. stake (Suc n) ` streams A =\n    {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}", "by simp"], ["proof (state)\nthis:\n  stake (Suc n) ` streams A =\n  {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       finite (stake n ` streams A) \\<Longrightarrow>\n       finite (stake (Suc n) ` streams A)", "have \"finite ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}", "by (simp add: assms(1) finite_image_set2 hyp)"], ["proof (state)\nthis:\n  finite {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       finite (stake n ` streams A) \\<Longrightarrow>\n       finite (stake (Suc n) ` streams A)", "thus \"finite ?L\""], ["proof (prove)\nusing this:\n  finite {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}\n\ngoal (1 subgoal):\n 1. finite (stake (Suc n) ` streams A)", "using \\<open>?L = ?R\\<close>"], ["proof (prove)\nusing this:\n  finite {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}\n  stake (Suc n) ` streams A =\n  {s # w |s w. s \\<in> A \\<and> w \\<in> stake n ` streams A}\n\ngoal (1 subgoal):\n 1. finite (stake (Suc n) ` streams A)", "by simp"], ["proof (state)\nthis:\n  finite (stake (Suc n) ` streams A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  diff_streams_only_if:\n  assumes \"w \\<noteq> x\"\n  shows \"\\<exists>n. snth w n \\<noteq> snth x n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. w !! n \\<noteq> x !! n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n. w !! n \\<noteq> x !! n", "have f1: \"smap (\\<lambda>n. x !! (n - Suc 0)) (fromN (Suc 0)) \\<noteq> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smap (\\<lambda>n. x !! (n - Suc 0)) (fromN (Suc 0)) \\<noteq> w", "by (metis assms stream_smap_fromN)"], ["proof (state)\nthis:\n  smap (\\<lambda>n. x !! (n - Suc 0)) (fromN (Suc 0)) \\<noteq> w\n\ngoal (1 subgoal):\n 1. \\<exists>n. w !! n \\<noteq> x !! n", "obtain nn :: \"'a stream \\<Rightarrow> nat stream \\<Rightarrow> (nat \\<Rightarrow> 'a) \\<Rightarrow> nat\" where\n    \"\\<forall>x0 x1 x2. (\\<exists>v3. x2 (x1 !! v3) \\<noteq> x0 !! v3) = (x2 (x1 !! nn x0 x1 x2) \\<noteq> x0 !! nn x0 x1 x2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>nn.\n        \\<forall>x0 x1 x2.\n           (\\<exists>v3. x2 (x1 !! v3) \\<noteq> x0 !! v3) =\n           (x2 (x1 !! nn x0 x1 x2) \\<noteq>\n            x0 !! nn x0 x1 x2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  \\<forall>x0 x1 x2.\n     (\\<exists>v3. x2 (x1 !! v3) \\<noteq> x0 !! v3) =\n     (x2 (x1 !! nn x0 x1 x2) \\<noteq> x0 !! nn x0 x1 x2)\n\ngoal (1 subgoal):\n 1. \\<exists>n. w !! n \\<noteq> x !! n", "then"], ["proof (chain)\npicking this:\n  \\<forall>x0 x1 x2.\n     (\\<exists>v3. x2 (x1 !! v3) \\<noteq> x0 !! v3) =\n     (x2 (x1 !! nn x0 x1 x2) \\<noteq> x0 !! nn x0 x1 x2)", "have \"x !! (fromN (Suc 0) !! nn w (fromN (Suc 0)) (\\<lambda>n. x !! (n - Suc 0)) - Suc 0) \\<noteq> w !! nn w (fromN (Suc 0)) (\\<lambda>n. x !! (n - Suc 0))\""], ["proof (prove)\nusing this:\n  \\<forall>x0 x1 x2.\n     (\\<exists>v3. x2 (x1 !! v3) \\<noteq> x0 !! v3) =\n     (x2 (x1 !! nn x0 x1 x2) \\<noteq> x0 !! nn x0 x1 x2)\n\ngoal (1 subgoal):\n 1. x !!\n    (fromN (Suc 0) !! nn w (fromN (Suc 0)) (\\<lambda>n. x !! (n - Suc 0)) -\n     Suc 0) \\<noteq>\n    w !! nn w (fromN (Suc 0)) (\\<lambda>n. x !! (n - Suc 0))", "using f1"], ["proof (prove)\nusing this:\n  \\<forall>x0 x1 x2.\n     (\\<exists>v3. x2 (x1 !! v3) \\<noteq> x0 !! v3) =\n     (x2 (x1 !! nn x0 x1 x2) \\<noteq> x0 !! nn x0 x1 x2)\n  smap (\\<lambda>n. x !! (n - Suc 0)) (fromN (Suc 0)) \\<noteq> w\n\ngoal (1 subgoal):\n 1. x !!\n    (fromN (Suc 0) !! nn w (fromN (Suc 0)) (\\<lambda>n. x !! (n - Suc 0)) -\n     Suc 0) \\<noteq>\n    w !! nn w (fromN (Suc 0)) (\\<lambda>n. x !! (n - Suc 0))", "by (meson smap_alt)"], ["proof (state)\nthis:\n  x !!\n  (fromN (Suc 0) !! nn w (fromN (Suc 0)) (\\<lambda>n. x !! (n - Suc 0)) -\n   Suc 0) \\<noteq>\n  w !! nn w (fromN (Suc 0)) (\\<lambda>n. x !! (n - Suc 0))\n\ngoal (1 subgoal):\n 1. \\<exists>n. w !! n \\<noteq> x !! n", "then"], ["proof (chain)\npicking this:\n  x !!\n  (fromN (Suc 0) !! nn w (fromN (Suc 0)) (\\<lambda>n. x !! (n - Suc 0)) -\n   Suc 0) \\<noteq>\n  w !! nn w (fromN (Suc 0)) (\\<lambda>n. x !! (n - Suc 0))", "show ?thesis"], ["proof (prove)\nusing this:\n  x !!\n  (fromN (Suc 0) !! nn w (fromN (Suc 0)) (\\<lambda>n. x !! (n - Suc 0)) -\n   Suc 0) \\<noteq>\n  w !! nn w (fromN (Suc 0)) (\\<lambda>n. x !! (n - Suc 0))\n\ngoal (1 subgoal):\n 1. \\<exists>n. w !! n \\<noteq> x !! n", "by (metis (no_types) snth_smap stream_smap_fromN)"], ["proof (state)\nthis:\n  \\<exists>n. w !! n \\<noteq> x !! n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diff_streams_if:\n  assumes \"\\<exists>n. snth w n \\<noteq> snth x n\"\n  shows \"w\\<noteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<noteq> x", "using assms"], ["proof (prove)\nusing this:\n  \\<exists>n. w !! n \\<noteq> x !! n\n\ngoal (1 subgoal):\n 1. w \\<noteq> x", "by auto"], ["", "lemma sigma_set_union_count:\n  assumes \"\\<forall> y\\<in> A. B y \\<in> sigma_sets X Y\"\nand \"countable A\"\n  shows \"(\\<Union> y\\<in> A. B y) \\<in> sigma_sets X Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (B ` A) \\<in> sigma_sets X Y", "by (metis (mono_tags, lifting) assms countable_image imageE sigma_sets_UNION)"], ["", "lemma sigma_set_inter_init:\n  assumes \"\\<And>i. i\\<le>(n::nat) \\<Longrightarrow> A i \\<in> sigma_sets sp B\"\nand \"B \\<subseteq> Pow sp\"\nshows \"(\\<Inter> i\\<in> {m. m\\<le> n}. A i) \\<in> sigma_sets sp B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Inter> (A ` {m. m \\<le> n}) \\<in> sigma_sets sp B", "by (metis (full_types) assms(1) assms(2) bot.extremum empty_iff mem_Collect_eq sigma_sets_INTER)"], ["", "lemma  adapt_sigma_sets:\nassumes \"\\<And>i. i \\<le> n\\<Longrightarrow> (X i) \\<in> measurable M N\"\nshows \"sigma_algebra (space M) (sigma_sets (space M) (\\<Union>i\\<in>{m. m \\<le> n}. {X i -` A \\<inter> space M |A. A \\<in> sets N}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_algebra (space M)\n     (sigma_sets (space M)\n       (\\<Union>i\\<in>{m. m \\<le> n}.\n           {X i -` A \\<inter> space M |A. A \\<in> sets N}))", "proof (rule sigma_algebra_sigma_sets)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union>i\\<in>{m. m \\<le> n}.\n        {X i -` A \\<inter> space M |A. A \\<in> sets N})\n    \\<subseteq> Pow (space M)", "show \"(\\<Union>i\\<in>{m. m \\<le> n}. {X i -` A \\<inter> space M |A. A \\<in> sets N}) \\<subseteq> Pow (space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>i\\<in>{m. m \\<le> n}.\n        {X i -` A \\<inter> space M |A. A \\<in> sets N})\n    \\<subseteq> Pow (space M)", "proof (rule UN_subset_iff[THEN iffD2], intro ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       {X i -` A \\<inter> space M |A. A \\<in> sets N}\n       \\<subseteq> Pow (space M)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       {X i -` A \\<inter> space M |A. A \\<in> sets N}\n       \\<subseteq> Pow (space M)", "assume \"i \\<in> {m. m\\<le> n}\""], ["proof (state)\nthis:\n  i \\<in> {m. m \\<le> n}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       {X i -` A \\<inter> space M |A. A \\<in> sets N}\n       \\<subseteq> Pow (space M)", "show \"{X i -` A \\<inter> space M |A. A \\<in> sets N} \\<subseteq> Pow (space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {X i -` A \\<inter> space M |A. A \\<in> sets N} \\<subseteq> Pow (space M)", "by auto"], ["proof (state)\nthis:\n  {X i -` A \\<inter> space M |A. A \\<in> sets N} \\<subseteq> Pow (space M)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Union>i\\<in>{m. m \\<le> n}.\n      {X i -` A \\<inter> space M |A. A \\<in> sets N})\n  \\<subseteq> Pow (space M)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Bernoulli streams\\<close>"], ["", "text \\<open>Bernoulli streams represent the formal definition of the infinite coin toss space. The parameter\n\\<open>p\\<close> represents the probability of obtaining a head after a coin toss.\\<close>"], ["", "definition bernoulli_stream::\"real \\<Rightarrow> (bool stream) measure\" where\n  \"bernoulli_stream p = stream_space (measure_pmf (bernoulli_pmf p))\""], ["", "lemma bernoulli_stream_space:\n  assumes \"N = bernoulli_stream p\"\n  shows \"space N = streams UNIV::bool\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space N = streams UNIV", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream p\n\ngoal (1 subgoal):\n 1. space N = streams UNIV", "unfolding bernoulli_stream_def stream_space_def"], ["proof (prove)\nusing this:\n  N =\n  distr (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n   (vimage_algebra (streams (space (measure_pmf (bernoulli_pmf p)))) (!!)\n     (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))))\n   to_stream\n\ngoal (1 subgoal):\n 1. space N = streams UNIV", "by (simp add: assms bernoulli_stream_def space_stream_space)"], ["", "lemma bernoulli_stream_preimage:\n  assumes \"N = bernoulli_stream p\"\n  shows \"f -` A \\<inter> (space N) = f-`A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` A \\<inter> space N = f -` A", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream p\n\ngoal (1 subgoal):\n 1. f -` A \\<inter> space N = f -` A", "by (simp add: bernoulli_stream_space)"], ["", "lemma  bernoulli_stream_component_probability:\n  assumes \"N = bernoulli_stream p\" and \"0 \\<le> p\" and \"p \\<le> 1\"\n  shows \"\\<forall> n. emeasure N {w\\<in> space N. (snth w n)} = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "have \"prob_space N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space N", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. prob_space N", "by (simp add: bernoulli_stream_def prob_space.prob_space_stream_space prob_space_measure_pmf)"], ["proof (state)\nthis:\n  prob_space N\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "fix n::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "let ?S = \"{w\\<in> space N. (snth w n)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "have s: \"?S \\<in> sets N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space N. w !! n} \\<in> sets N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {w \\<in> space N. w !! n} \\<in> sets N", "have \"(\\<lambda>w. snth w n) \\<in> measurable N (measure_pmf (bernoulli_pmf p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! n)\n    \\<in> N \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! n)\n    \\<in> N \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)", "by (simp add: bernoulli_stream_def)"], ["proof (state)\nthis:\n  (\\<lambda>w. w !! n)\n  \\<in> N \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)\n\ngoal (1 subgoal):\n 1. {w \\<in> space N. w !! n} \\<in> sets N", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>w. w !! n)\n  \\<in> N \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)\n\ngoal (1 subgoal):\n 1. {w \\<in> space N. w !! n} \\<in> sets N", "have \"{True} \\<in> sets (measure_pmf (bernoulli_pmf p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {True} \\<in> measure_pmf.events (bernoulli_pmf p)", "by simp"], ["proof (state)\nthis:\n  {True} \\<in> measure_pmf.events (bernoulli_pmf p)\n\ngoal (1 subgoal):\n 1. {w \\<in> space N. w !! n} \\<in> sets N", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>w. w !! n)\n  \\<in> N \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)\n  {True} \\<in> measure_pmf.events (bernoulli_pmf p)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>w. w !! n)\n  \\<in> N \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)\n  {True} \\<in> measure_pmf.events (bernoulli_pmf p)\n\ngoal (1 subgoal):\n 1. {w \\<in> space N. w !! n} \\<in> sets N", "by simp"], ["proof (state)\nthis:\n  {w \\<in> space N. w !! n} \\<in> sets N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w \\<in> space N. w !! n} \\<in> sets N\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "let ?PM = \"(\\<lambda>i::nat. (measure_pmf (bernoulli_pmf p)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "have isps: \"product_prob_space ?PM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. product_prob_space (\\<lambda>i. measure_pmf (bernoulli_pmf p))", "by unfold_locales"], ["proof (state)\nthis:\n  product_prob_space (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "let ?Z = \"{X::nat\\<Rightarrow>bool. X n = True}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "let ?wPM = \"Pi\\<^sub>M UNIV ?PM\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "have \"space ?wPM = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))) =\n    UNIV", "using space_PiM"], ["proof (prove)\nusing this:\n  space (Pi\\<^sub>M ?I ?M) = (\\<Pi>\\<^sub>E i\\<in>?I. space (?M i))\n\ngoal (1 subgoal):\n 1. space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))) =\n    UNIV", "by fastforce"], ["proof (state)\nthis:\n  space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))) = UNIV\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "hence \"(to_stream -` ?S \\<inter> (space ?wPM)) = to_stream -` ?S\""], ["proof (prove)\nusing this:\n  space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))) = UNIV\n\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space N. w !! n} \\<inter>\n    space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))) =\n    to_stream -` {w \\<in> space N. w !! n}", "by simp"], ["proof (state)\nthis:\n  to_stream -` {w \\<in> space N. w !! n} \\<inter>\n  space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))) =\n  to_stream -` {w \\<in> space N. w !! n}\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "also"], ["proof (state)\nthis:\n  to_stream -` {w \\<in> space N. w !! n} \\<inter>\n  space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))) =\n  to_stream -` {w \\<in> space N. w !! n}\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "have \"... = ?Z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space N. w !! n} = {X. X n = True}", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space N. w !! n} = {X. X n = True}", "by (simp add:bernoulli_stream_space to_stream_def)"], ["proof (state)\nthis:\n  to_stream -` {w \\<in> space N. w !! n} = {X. X n = True}\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "also"], ["proof (state)\nthis:\n  to_stream -` {w \\<in> space N. w !! n} = {X. X n = True}\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "have \"... = prod_emb UNIV ?PM {n} (Pi\\<^sub>E {n} (\\<lambda>x::nat. {True}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {X. X n = True} =\n    prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n     ({n} \\<rightarrow>\\<^sub>E {True})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})\n 2. prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n     ({n} \\<rightarrow>\\<^sub>E {True})\n    \\<subseteq> {X. X n = True}", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})\n 2. prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n     ({n} \\<rightarrow>\\<^sub>E {True})\n    \\<subseteq> {X. X n = True}", "fix X"], ["proof (state)\ngoal (2 subgoals):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})\n 2. prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n     ({n} \\<rightarrow>\\<^sub>E {True})\n    \\<subseteq> {X. X n = True}", "assume \"X \\<in> prod_emb UNIV ?PM {n} (Pi\\<^sub>E {n} (\\<lambda>x::nat. {True}))\""], ["proof (state)\nthis:\n  X \\<in> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n           ({n} \\<rightarrow>\\<^sub>E {True})\n\ngoal (2 subgoals):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})\n 2. prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n     ({n} \\<rightarrow>\\<^sub>E {True})\n    \\<subseteq> {X. X n = True}", "hence \"restrict X {n} \\<in> (Pi\\<^sub>E {n} (\\<lambda>x::nat. {True}))\""], ["proof (prove)\nusing this:\n  X \\<in> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n           ({n} \\<rightarrow>\\<^sub>E {True})\n\ngoal (1 subgoal):\n 1. restrict X {n} \\<in> {n} \\<rightarrow>\\<^sub>E {True}", "using prod_emb_iff[of X]"], ["proof (prove)\nusing this:\n  X \\<in> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n           ({n} \\<rightarrow>\\<^sub>E {True})\n  (X \\<in> prod_emb ?I ?M ?K ?X) =\n  (X \\<in> extensional ?I \\<and>\n   restrict X ?K \\<in> ?X \\<and>\n   (\\<forall>i\\<in>?I. X i \\<in> space (?M i)))\n\ngoal (1 subgoal):\n 1. restrict X {n} \\<in> {n} \\<rightarrow>\\<^sub>E {True}", "by simp"], ["proof (state)\nthis:\n  restrict X {n} \\<in> {n} \\<rightarrow>\\<^sub>E {True}\n\ngoal (2 subgoals):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})\n 2. prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n     ({n} \\<rightarrow>\\<^sub>E {True})\n    \\<subseteq> {X. X n = True}", "hence \"X n = True\""], ["proof (prove)\nusing this:\n  restrict X {n} \\<in> {n} \\<rightarrow>\\<^sub>E {True}\n\ngoal (1 subgoal):\n 1. X n = True", "unfolding PiE_iff"], ["proof (prove)\nusing this:\n  (\\<forall>i\\<in>{n}. restrict X {n} i \\<in> {True}) \\<and>\n  restrict X {n} \\<in> extensional {n}\n\ngoal (1 subgoal):\n 1. X n = True", "by auto"], ["proof (state)\nthis:\n  X n = True\n\ngoal (2 subgoals):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})\n 2. prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n     ({n} \\<rightarrow>\\<^sub>E {True})\n    \\<subseteq> {X. X n = True}", "hence \"X \\<in> ?Z\""], ["proof (prove)\nusing this:\n  X n = True\n\ngoal (1 subgoal):\n 1. X \\<in> {X. X n = True}", "by simp"], ["proof (state)\nthis:\n  X \\<in> {X. X n = True}\n\ngoal (2 subgoals):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})\n 2. prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n     ({n} \\<rightarrow>\\<^sub>E {True})\n    \\<subseteq> {X. X n = True}", "}"], ["proof (state)\nthis:\n  ?X2\n  \\<in> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n         ({n} \\<rightarrow>\\<^sub>E {True}) \\<Longrightarrow>\n  ?X2 \\<in> {X. X n = True}\n\ngoal (2 subgoals):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})\n 2. prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n     ({n} \\<rightarrow>\\<^sub>E {True})\n    \\<subseteq> {X. X n = True}", "thus \"prod_emb UNIV ?PM {n} (Pi\\<^sub>E {n} (\\<lambda>x::nat. {True})) \\<subseteq> ?Z\""], ["proof (prove)\nusing this:\n  ?X2\n  \\<in> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n         ({n} \\<rightarrow>\\<^sub>E {True}) \\<Longrightarrow>\n  ?X2 \\<in> {X. X n = True}\n\ngoal (1 subgoal):\n 1. prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n     ({n} \\<rightarrow>\\<^sub>E {True})\n    \\<subseteq> {X. X n = True}", "by auto"], ["proof (state)\nthis:\n  prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n   ({n} \\<rightarrow>\\<^sub>E {True})\n  \\<subseteq> {X. X n = True}\n\ngoal (1 subgoal):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})", "{"], ["proof (state)\nthis:\n  prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n   ({n} \\<rightarrow>\\<^sub>E {True})\n  \\<subseteq> {X. X n = True}\n\ngoal (1 subgoal):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})", "assume \"X \\<in> ?Z\""], ["proof (state)\nthis:\n  X \\<in> {X. X n = True}\n\ngoal (1 subgoal):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})", "hence \"X n = True\""], ["proof (prove)\nusing this:\n  X \\<in> {X. X n = True}\n\ngoal (1 subgoal):\n 1. X n = True", "by simp"], ["proof (state)\nthis:\n  X n = True\n\ngoal (1 subgoal):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})", "hence \"restrict X {n} \\<in> (Pi\\<^sub>E {n} (\\<lambda>x::nat. {True}))\""], ["proof (prove)\nusing this:\n  X n = True\n\ngoal (1 subgoal):\n 1. restrict X {n} \\<in> {n} \\<rightarrow>\\<^sub>E {True}", "unfolding PiE_iff"], ["proof (prove)\nusing this:\n  X n = True\n\ngoal (1 subgoal):\n 1. (\\<forall>i\\<in>{n}. restrict X {n} i \\<in> {True}) \\<and>\n    restrict X {n} \\<in> extensional {n}", "by auto"], ["proof (state)\nthis:\n  restrict X {n} \\<in> {n} \\<rightarrow>\\<^sub>E {True}\n\ngoal (1 subgoal):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})", "moreover"], ["proof (state)\nthis:\n  restrict X {n} \\<in> {n} \\<rightarrow>\\<^sub>E {True}\n\ngoal (1 subgoal):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})", "have \"X \\<in> extensional UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> extensional UNIV", "by simp"], ["proof (state)\nthis:\n  X \\<in> extensional UNIV\n\ngoal (1 subgoal):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})", "moreover"], ["proof (state)\nthis:\n  X \\<in> extensional UNIV\n\ngoal (1 subgoal):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})", "have \"\\<forall>i \\<in> UNIV. X i \\<in> space (?PM i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>UNIV. X i \\<in> space (measure_pmf (bernoulli_pmf p))", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<in>UNIV. X i \\<in> space (measure_pmf (bernoulli_pmf p))\n\ngoal (1 subgoal):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})", "ultimately"], ["proof (chain)\npicking this:\n  restrict X {n} \\<in> {n} \\<rightarrow>\\<^sub>E {True}\n  X \\<in> extensional UNIV\n  \\<forall>i\\<in>UNIV. X i \\<in> space (measure_pmf (bernoulli_pmf p))", "have \"X \\<in> prod_emb UNIV ?PM {n} (Pi\\<^sub>E {n} (\\<lambda>x::nat. {True}))\""], ["proof (prove)\nusing this:\n  restrict X {n} \\<in> {n} \\<rightarrow>\\<^sub>E {True}\n  X \\<in> extensional UNIV\n  \\<forall>i\\<in>UNIV. X i \\<in> space (measure_pmf (bernoulli_pmf p))\n\ngoal (1 subgoal):\n 1. X \\<in> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n             ({n} \\<rightarrow>\\<^sub>E {True})", "using prod_emb_iff[of X]"], ["proof (prove)\nusing this:\n  restrict X {n} \\<in> {n} \\<rightarrow>\\<^sub>E {True}\n  X \\<in> extensional UNIV\n  \\<forall>i\\<in>UNIV. X i \\<in> space (measure_pmf (bernoulli_pmf p))\n  (X \\<in> prod_emb ?I ?M ?K ?X) =\n  (X \\<in> extensional ?I \\<and>\n   restrict X ?K \\<in> ?X \\<and>\n   (\\<forall>i\\<in>?I. X i \\<in> space (?M i)))\n\ngoal (1 subgoal):\n 1. X \\<in> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n             ({n} \\<rightarrow>\\<^sub>E {True})", "by simp"], ["proof (state)\nthis:\n  X \\<in> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n           ({n} \\<rightarrow>\\<^sub>E {True})\n\ngoal (1 subgoal):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})", "}"], ["proof (state)\nthis:\n  ?X2 \\<in> {X. X n = True} \\<Longrightarrow>\n  ?X2\n  \\<in> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n         ({n} \\<rightarrow>\\<^sub>E {True})\n\ngoal (1 subgoal):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})", "thus \"?Z \\<subseteq> prod_emb UNIV ?PM {n} (Pi\\<^sub>E {n} (\\<lambda>x::nat. {True}))\""], ["proof (prove)\nusing this:\n  ?X2 \\<in> {X. X n = True} \\<Longrightarrow>\n  ?X2\n  \\<in> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n         ({n} \\<rightarrow>\\<^sub>E {True})\n\ngoal (1 subgoal):\n 1. {X. X n = True}\n    \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n                 {n} ({n} \\<rightarrow>\\<^sub>E {True})", "by auto"], ["proof (state)\nthis:\n  {X. X n = True}\n  \\<subseteq> prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n               ({n} \\<rightarrow>\\<^sub>E {True})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {X. X n = True} =\n  prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n   ({n} \\<rightarrow>\\<^sub>E {True})\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "finally"], ["proof (chain)\npicking this:\n  to_stream -` {w \\<in> space N. w !! n} \\<inter>\n  space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))) =\n  prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n   ({n} \\<rightarrow>\\<^sub>E {True})", "have inteq: \"(to_stream -` ?S \\<inter> (space ?wPM)) = prod_emb UNIV ?PM {n} (Pi\\<^sub>E {n} (\\<lambda>x::nat. {True}))\""], ["proof (prove)\nusing this:\n  to_stream -` {w \\<in> space N. w !! n} \\<inter>\n  space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))) =\n  prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n   ({n} \\<rightarrow>\\<^sub>E {True})\n\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space N. w !! n} \\<inter>\n    space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))) =\n    prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n     ({n} \\<rightarrow>\\<^sub>E {True})", "."], ["proof (state)\nthis:\n  to_stream -` {w \\<in> space N. w !! n} \\<inter>\n  space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))) =\n  prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n   ({n} \\<rightarrow>\\<^sub>E {True})\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "have \"emeasure N ?S = emeasure ?wPM (to_stream -` ?S \\<inter> (space ?wPM))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure N {w \\<in> space N. w !! n} =\n    emeasure (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n     (to_stream -` {w \\<in> space N. w !! n} \\<inter>\n      space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))))", "using assms emeasure_distr[of \"to_stream\" ?wPM \"(vimage_algebra (streams (space (measure_pmf (bernoulli_pmf p)))) (!!)\n           (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))))\" ?S] measurable_to_stream[of \"(measure_pmf (bernoulli_pmf p))\"] s"], ["proof (prove)\nusing this:\n  N = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n  \\<lbrakk>to_stream\n           \\<in> Pi\\<^sub>M UNIV\n                  (\\<lambda>i.\n                      measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n                 vimage_algebra\n                  (streams (space (measure_pmf (bernoulli_pmf p)))) (!!)\n                  (Pi\\<^sub>M UNIV\n                    (\\<lambda>i. measure_pmf (bernoulli_pmf p)));\n   {w \\<in> space N. w !! n}\n   \\<in> sets\n          (vimage_algebra (streams (space (measure_pmf (bernoulli_pmf p))))\n            (!!)\n            (Pi\\<^sub>M UNIV\n              (\\<lambda>i. measure_pmf (bernoulli_pmf p))))\\<rbrakk>\n  \\<Longrightarrow> emeasure\n                     (distr\n                       (Pi\\<^sub>M UNIV\n                         (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n                       (vimage_algebra\n                         (streams (space (measure_pmf (bernoulli_pmf p))))\n                         (!!)\n                         (Pi\\<^sub>M UNIV\n                           (\\<lambda>i. measure_pmf (bernoulli_pmf p))))\n                       to_stream)\n                     {w \\<in> space N. w !! n} =\n                    emeasure\n                     (Pi\\<^sub>M UNIV\n                       (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n                     (to_stream -` {w \\<in> space N. w !! n} \\<inter>\n                      space\n                       (Pi\\<^sub>M UNIV\n                         (\\<lambda>i. measure_pmf (bernoulli_pmf p))))\n  to_stream\n  \\<in> Pi\\<^sub>M UNIV\n         (\\<lambda>i. measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n        stream_space (measure_pmf (bernoulli_pmf p))\n  {w \\<in> space N. w !! n} \\<in> sets N\n\ngoal (1 subgoal):\n 1. emeasure N {w \\<in> space N. w !! n} =\n    emeasure (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n     (to_stream -` {w \\<in> space N. w !! n} \\<inter>\n      space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))))", "unfolding bernoulli_stream_def stream_space_def"], ["proof (prove)\nusing this:\n  N =\n  distr (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n   (vimage_algebra (streams (space (measure_pmf (bernoulli_pmf p)))) (!!)\n     (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))))\n   to_stream\n  0 \\<le> p\n  p \\<le> 1\n  \\<lbrakk>to_stream\n           \\<in> Pi\\<^sub>M UNIV\n                  (\\<lambda>i.\n                      measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n                 vimage_algebra\n                  (streams (space (measure_pmf (bernoulli_pmf p)))) (!!)\n                  (Pi\\<^sub>M UNIV\n                    (\\<lambda>i. measure_pmf (bernoulli_pmf p)));\n   {w \\<in> space N. w !! n}\n   \\<in> sets\n          (vimage_algebra (streams (space (measure_pmf (bernoulli_pmf p))))\n            (!!)\n            (Pi\\<^sub>M UNIV\n              (\\<lambda>i. measure_pmf (bernoulli_pmf p))))\\<rbrakk>\n  \\<Longrightarrow> emeasure\n                     (distr\n                       (Pi\\<^sub>M UNIV\n                         (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n                       (vimage_algebra\n                         (streams (space (measure_pmf (bernoulli_pmf p))))\n                         (!!)\n                         (Pi\\<^sub>M UNIV\n                           (\\<lambda>i. measure_pmf (bernoulli_pmf p))))\n                       to_stream)\n                     {w \\<in> space N. w !! n} =\n                    emeasure\n                     (Pi\\<^sub>M UNIV\n                       (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n                     (to_stream -` {w \\<in> space N. w !! n} \\<inter>\n                      space\n                       (Pi\\<^sub>M UNIV\n                         (\\<lambda>i. measure_pmf (bernoulli_pmf p))))\n  to_stream\n  \\<in> Pi\\<^sub>M UNIV\n         (\\<lambda>i. measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n        distr (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n         (vimage_algebra (streams (space (measure_pmf (bernoulli_pmf p))))\n           (!!)\n           (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))))\n         to_stream\n  {w \\<in> space N. w !! n} \\<in> sets N\n\ngoal (1 subgoal):\n 1. emeasure N {w \\<in> space N. w !! n} =\n    emeasure (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n     (to_stream -` {w \\<in> space N. w !! n} \\<inter>\n      space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))))", "by auto"], ["proof (state)\nthis:\n  emeasure N {w \\<in> space N. w !! n} =\n  emeasure (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n   (to_stream -` {w \\<in> space N. w !! n} \\<inter>\n    space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))))\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "also"], ["proof (state)\nthis:\n  emeasure N {w \\<in> space N. w !! n} =\n  emeasure (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n   (to_stream -` {w \\<in> space N. w !! n} \\<inter>\n    space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))))\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "have \"... = emeasure ?wPM (prod_emb UNIV ?PM {n} (Pi\\<^sub>E {n} (\\<lambda>x::nat. {True})))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n     (to_stream -` {w \\<in> space N. w !! n} \\<inter>\n      space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))) =\n    emeasure (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n     (prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n       ({n} \\<rightarrow>\\<^sub>E {True}))", "using inteq"], ["proof (prove)\nusing this:\n  to_stream -` {w \\<in> space N. w !! n} \\<inter>\n  space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))) =\n  prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n   ({n} \\<rightarrow>\\<^sub>E {True})\n\ngoal (1 subgoal):\n 1. emeasure (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n     (to_stream -` {w \\<in> space N. w !! n} \\<inter>\n      space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))) =\n    emeasure (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n     (prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n       ({n} \\<rightarrow>\\<^sub>E {True}))", "by simp"], ["proof (state)\nthis:\n  emeasure (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n   (to_stream -` {w \\<in> space N. w !! n} \\<inter>\n    space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))) =\n  emeasure (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n   (prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n     ({n} \\<rightarrow>\\<^sub>E {True}))\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "also"], ["proof (state)\nthis:\n  emeasure (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n   (to_stream -` {w \\<in> space N. w !! n} \\<inter>\n    space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))) =\n  emeasure (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n   (prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n     ({n} \\<rightarrow>\\<^sub>E {True}))\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "have \"... =\n    (\\<Prod>i\\<in>{n}. emeasure (?PM i) ((\\<lambda>x::nat. {True}) i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n     (prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n       ({n} \\<rightarrow>\\<^sub>E {True})) =\n    (\\<Prod>i\\<in>{n}. emeasure (measure_pmf (bernoulli_pmf p)) {True})", "using isps"], ["proof (prove)\nusing this:\n  product_prob_space (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n\ngoal (1 subgoal):\n 1. emeasure (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n     (prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n       ({n} \\<rightarrow>\\<^sub>E {True})) =\n    (\\<Prod>i\\<in>{n}. emeasure (measure_pmf (bernoulli_pmf p)) {True})", "by (auto simp add: product_prob_space.emeasure_PiM_emb simp del: ext_funcset_to_sing_iff)"], ["proof (state)\nthis:\n  emeasure (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n   (prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n     ({n} \\<rightarrow>\\<^sub>E {True})) =\n  (\\<Prod>i\\<in>{n}. emeasure (measure_pmf (bernoulli_pmf p)) {True})\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "also"], ["proof (state)\nthis:\n  emeasure (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n   (prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {n}\n     ({n} \\<rightarrow>\\<^sub>E {True})) =\n  (\\<Prod>i\\<in>{n}. emeasure (measure_pmf (bernoulli_pmf p)) {True})\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "have \"... = emeasure (?PM n) {True}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i\\<in>{n}. emeasure (measure_pmf (bernoulli_pmf p)) {True}) =\n    emeasure (measure_pmf (bernoulli_pmf p)) {True}", "by simp"], ["proof (state)\nthis:\n  (\\<Prod>i\\<in>{n}. emeasure (measure_pmf (bernoulli_pmf p)) {True}) =\n  emeasure (measure_pmf (bernoulli_pmf p)) {True}\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "also"], ["proof (state)\nthis:\n  (\\<Prod>i\\<in>{n}. emeasure (measure_pmf (bernoulli_pmf p)) {True}) =\n  emeasure (measure_pmf (bernoulli_pmf p)) {True}\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "have \"... = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (measure_pmf (bernoulli_pmf p)) {True} = ennreal p", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. emeasure (measure_pmf (bernoulli_pmf p)) {True} = ennreal p", "by (simp add: emeasure_pmf_single)"], ["proof (state)\nthis:\n  emeasure (measure_pmf (bernoulli_pmf p)) {True} = ennreal p\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. w !! n} = ennreal p", "finally"], ["proof (chain)\npicking this:\n  emeasure N {w \\<in> space N. w !! n} = ennreal p", "show \"emeasure N ?S = p\""], ["proof (prove)\nusing this:\n  emeasure N {w \\<in> space N. w !! n} = ennreal p\n\ngoal (1 subgoal):\n 1. emeasure N {w \\<in> space N. w !! n} = ennreal p", "."], ["proof (state)\nthis:\n  emeasure N {w \\<in> space N. w !! n} = ennreal p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  bernoulli_stream_component_probability_compl:\n  assumes \"N = bernoulli_stream p\" and \"0 \\<le> p\" and \"p \\<le> 1\"\n  shows \"\\<forall> n. emeasure N {w\\<in> space N. \\<not>(snth w n)} = 1- p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)", "let ?A = \"{w \\<in> space N. \\<not> w !! n}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)", "let ?B = \"{w \\<in> space N. w !! n}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)", "have \"?A \\<union> ?B = space N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n} =\n    space N", "by auto"], ["proof (state)\nthis:\n  {w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n} =\n  space N\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)", "have \"?A\\<inter>?B = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space N. \\<not> w !! n} \\<inter> {w \\<in> space N. w !! n} = {}", "by auto"], ["proof (state)\nthis:\n  {w \\<in> space N. \\<not> w !! n} \\<inter> {w \\<in> space N. w !! n} = {}\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)", "hence eqA: \"?A = (?A\\<union> ?B) - ?B\""], ["proof (prove)\nusing this:\n  {w \\<in> space N. \\<not> w !! n} \\<inter> {w \\<in> space N. w !! n} = {}\n\ngoal (1 subgoal):\n 1. {w \\<in> space N. \\<not> w !! n} =\n    {w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n} -\n    {w \\<in> space N. w !! n}", "using Diff_cancel"], ["proof (prove)\nusing this:\n  {w \\<in> space N. \\<not> w !! n} \\<inter> {w \\<in> space N. w !! n} = {}\n  ?A - ?A = {}\n\ngoal (1 subgoal):\n 1. {w \\<in> space N. \\<not> w !! n} =\n    {w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n} -\n    {w \\<in> space N. w !! n}", "by blast"], ["proof (state)\nthis:\n  {w \\<in> space N. \\<not> w !! n} =\n  {w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n} -\n  {w \\<in> space N. w !! n}\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)", "moreover"], ["proof (state)\nthis:\n  {w \\<in> space N. \\<not> w !! n} =\n  {w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n} -\n  {w \\<in> space N. w !! n}\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)", "have \"?A \\<in> sets N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space N. \\<not> w !! n} \\<in> sets N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {w \\<in> space N. \\<not> w !! n} \\<in> sets N", "have \"(\\<lambda>w. snth w n) \\<in> measurable N (measure_pmf (bernoulli_pmf p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! n)\n    \\<in> N \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! n)\n    \\<in> N \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)", "by (simp add: bernoulli_stream_def)"], ["proof (state)\nthis:\n  (\\<lambda>w. w !! n)\n  \\<in> N \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)\n\ngoal (1 subgoal):\n 1. {w \\<in> space N. \\<not> w !! n} \\<in> sets N", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>w. w !! n)\n  \\<in> N \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)\n\ngoal (1 subgoal):\n 1. {w \\<in> space N. \\<not> w !! n} \\<in> sets N", "have \"{True} \\<in> sets (measure_pmf (bernoulli_pmf p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {True} \\<in> measure_pmf.events (bernoulli_pmf p)", "by simp"], ["proof (state)\nthis:\n  {True} \\<in> measure_pmf.events (bernoulli_pmf p)\n\ngoal (1 subgoal):\n 1. {w \\<in> space N. \\<not> w !! n} \\<in> sets N", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>w. w !! n)\n  \\<in> N \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)\n  {True} \\<in> measure_pmf.events (bernoulli_pmf p)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>w. w !! n)\n  \\<in> N \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)\n  {True} \\<in> measure_pmf.events (bernoulli_pmf p)\n\ngoal (1 subgoal):\n 1. {w \\<in> space N. \\<not> w !! n} \\<in> sets N", "by simp"], ["proof (state)\nthis:\n  {w \\<in> space N. \\<not> w !! n} \\<in> sets N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w \\<in> space N. \\<not> w !! n} \\<in> sets N\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)", "moreover"], ["proof (state)\nthis:\n  {w \\<in> space N. \\<not> w !! n} \\<in> sets N\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)", "have \"?B \\<in> sets N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space N. w !! n} \\<in> sets N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {w \\<in> space N. w !! n} \\<in> sets N", "have \"(\\<lambda>w. snth w n) \\<in> measurable N (measure_pmf (bernoulli_pmf p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! n)\n    \\<in> N \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! n)\n    \\<in> N \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)", "by (simp add: bernoulli_stream_def)"], ["proof (state)\nthis:\n  (\\<lambda>w. w !! n)\n  \\<in> N \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)\n\ngoal (1 subgoal):\n 1. {w \\<in> space N. w !! n} \\<in> sets N", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>w. w !! n)\n  \\<in> N \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)\n\ngoal (1 subgoal):\n 1. {w \\<in> space N. w !! n} \\<in> sets N", "have \"{True} \\<in> sets (measure_pmf (bernoulli_pmf p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {True} \\<in> measure_pmf.events (bernoulli_pmf p)", "by simp"], ["proof (state)\nthis:\n  {True} \\<in> measure_pmf.events (bernoulli_pmf p)\n\ngoal (1 subgoal):\n 1. {w \\<in> space N. w !! n} \\<in> sets N", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>w. w !! n)\n  \\<in> N \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)\n  {True} \\<in> measure_pmf.events (bernoulli_pmf p)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>w. w !! n)\n  \\<in> N \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)\n  {True} \\<in> measure_pmf.events (bernoulli_pmf p)\n\ngoal (1 subgoal):\n 1. {w \\<in> space N. w !! n} \\<in> sets N", "by simp"], ["proof (state)\nthis:\n  {w \\<in> space N. w !! n} \\<in> sets N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w \\<in> space N. w !! n} \\<in> sets N\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)", "ultimately"], ["proof (chain)\npicking this:\n  {w \\<in> space N. \\<not> w !! n} =\n  {w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n} -\n  {w \\<in> space N. w !! n}\n  {w \\<in> space N. \\<not> w !! n} \\<in> sets N\n  {w \\<in> space N. w !! n} \\<in> sets N", "have \"emeasure N ((?A\\<union> ?B) - ?B) = emeasure N (?A\\<union> ?B) - emeasure N ?B\""], ["proof (prove)\nusing this:\n  {w \\<in> space N. \\<not> w !! n} =\n  {w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n} -\n  {w \\<in> space N. w !! n}\n  {w \\<in> space N. \\<not> w !! n} \\<in> sets N\n  {w \\<in> space N. w !! n} \\<in> sets N\n\ngoal (1 subgoal):\n 1. emeasure N\n     ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n} -\n      {w \\<in> space N. w !! n}) =\n    emeasure N\n     ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n}) -\n    emeasure N {w \\<in> space N. w !! n}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>{w \\<in> space N. \\<not> w !! n} =\n             {w \\<in> space N. \\<not> w !! n} \\<union>\n             {w \\<in> space N. w !! n} -\n             {w \\<in> space N. w !! n};\n     {w \\<in> space N. \\<not> w !! n} \\<in> sets N;\n     {w \\<in> space N. w !! n} \\<in> sets N\\<rbrakk>\n    \\<Longrightarrow> emeasure N\n                       ({w \\<in> space N. \\<not> w !! n} \\<union>\n                        {w \\<in> space N. w !! n} -\n                        {w \\<in> space N. w !! n}) =\n                      emeasure N\n                       ({w \\<in> space N. \\<not> w !! n} \\<union>\n                        {w \\<in> space N. w !! n}) -\n                      emeasure N {w \\<in> space N. w !! n}", "have f1: \"\\<And>S m. (S::bool stream set) \\<notin> sets m \\<or> emeasure m S = \\<top> \\<or> emeasure m (space m) - emeasure m S = emeasure m (space m - S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>S m.\n       S \\<notin> sets m \\<or>\n       emeasure m S = \\<top> \\<or>\n       emeasure m (space m) - emeasure m S = emeasure m (space m - S)", "by (metis emeasure_compl infinity_ennreal_def)"], ["proof (state)\nthis:\n  ?S \\<notin> sets ?m \\<or>\n  emeasure ?m ?S = \\<top> \\<or>\n  emeasure ?m (space ?m) - emeasure ?m ?S = emeasure ?m (space ?m - ?S)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>{w \\<in> space N. \\<not> w !! n} =\n             {w \\<in> space N. \\<not> w !! n} \\<union>\n             {w \\<in> space N. w !! n} -\n             {w \\<in> space N. w !! n};\n     {w \\<in> space N. \\<not> w !! n} \\<in> sets N;\n     {w \\<in> space N. w !! n} \\<in> sets N\\<rbrakk>\n    \\<Longrightarrow> emeasure N\n                       ({w \\<in> space N. \\<not> w !! n} \\<union>\n                        {w \\<in> space N. w !! n} -\n                        {w \\<in> space N. w !! n}) =\n                      emeasure N\n                       ({w \\<in> space N. \\<not> w !! n} \\<union>\n                        {w \\<in> space N. w !! n}) -\n                      emeasure N {w \\<in> space N. w !! n}", "have \"emeasure N {s \\<in> space N. s !! n} \\<noteq> \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure N {s \\<in> space N. s !! n} \\<noteq> \\<top>", "using assms(1) assms(2) assms(3) ennreal_neq_top bernoulli_stream_component_probability"], ["proof (prove)\nusing this:\n  N = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n  ennreal ?r \\<noteq> \\<top>\n  \\<lbrakk>?N = bernoulli_stream ?p; 0 \\<le> ?p; ?p \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>n.\n                       emeasure ?N {w \\<in> space ?N. w !! n} = ennreal ?p\n\ngoal (1 subgoal):\n 1. emeasure N {s \\<in> space N. s !! n} \\<noteq> \\<top>", "by presburger"], ["proof (state)\nthis:\n  emeasure N {s \\<in> space N. s !! n} \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>{w \\<in> space N. \\<not> w !! n} =\n             {w \\<in> space N. \\<not> w !! n} \\<union>\n             {w \\<in> space N. w !! n} -\n             {w \\<in> space N. w !! n};\n     {w \\<in> space N. \\<not> w !! n} \\<in> sets N;\n     {w \\<in> space N. w !! n} \\<in> sets N\\<rbrakk>\n    \\<Longrightarrow> emeasure N\n                       ({w \\<in> space N. \\<not> w !! n} \\<union>\n                        {w \\<in> space N. w !! n} -\n                        {w \\<in> space N. w !! n}) =\n                      emeasure N\n                       ({w \\<in> space N. \\<not> w !! n} \\<union>\n                        {w \\<in> space N. w !! n}) -\n                      emeasure N {w \\<in> space N. w !! n}", "then"], ["proof (chain)\npicking this:\n  emeasure N {s \\<in> space N. s !! n} \\<noteq> \\<top>", "have \"emeasure N (space N) - emeasure N {s \\<in> space N. s !! n} = emeasure N (space N - {s \\<in> space N. s !! n})\""], ["proof (prove)\nusing this:\n  emeasure N {s \\<in> space N. s !! n} \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. emeasure N (space N) - emeasure N {s \\<in> space N. s !! n} =\n    emeasure N (space N - {s \\<in> space N. s !! n})", "using f1 \\<open>{w \\<in> space N. w !! n} \\<in> sets N\\<close>"], ["proof (prove)\nusing this:\n  emeasure N {s \\<in> space N. s !! n} \\<noteq> \\<top>\n  ?S \\<notin> sets ?m \\<or>\n  emeasure ?m ?S = \\<top> \\<or>\n  emeasure ?m (space ?m) - emeasure ?m ?S = emeasure ?m (space ?m - ?S)\n  {w \\<in> space N. w !! n} \\<in> sets N\n\ngoal (1 subgoal):\n 1. emeasure N (space N) - emeasure N {s \\<in> space N. s !! n} =\n    emeasure N (space N - {s \\<in> space N. s !! n})", "by blast"], ["proof (state)\nthis:\n  emeasure N (space N) - emeasure N {s \\<in> space N. s !! n} =\n  emeasure N (space N - {s \\<in> space N. s !! n})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>{w \\<in> space N. \\<not> w !! n} =\n             {w \\<in> space N. \\<not> w !! n} \\<union>\n             {w \\<in> space N. w !! n} -\n             {w \\<in> space N. w !! n};\n     {w \\<in> space N. \\<not> w !! n} \\<in> sets N;\n     {w \\<in> space N. w !! n} \\<in> sets N\\<rbrakk>\n    \\<Longrightarrow> emeasure N\n                       ({w \\<in> space N. \\<not> w !! n} \\<union>\n                        {w \\<in> space N. w !! n} -\n                        {w \\<in> space N. w !! n}) =\n                      emeasure N\n                       ({w \\<in> space N. \\<not> w !! n} \\<union>\n                        {w \\<in> space N. w !! n}) -\n                      emeasure N {w \\<in> space N. w !! n}", "then"], ["proof (chain)\npicking this:\n  emeasure N (space N) - emeasure N {s \\<in> space N. s !! n} =\n  emeasure N (space N - {s \\<in> space N. s !! n})", "show ?thesis"], ["proof (prove)\nusing this:\n  emeasure N (space N) - emeasure N {s \\<in> space N. s !! n} =\n  emeasure N (space N - {s \\<in> space N. s !! n})\n\ngoal (1 subgoal):\n 1. emeasure N\n     ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n} -\n      {w \\<in> space N. w !! n}) =\n    emeasure N\n     ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n}) -\n    emeasure N {w \\<in> space N. w !! n}", "using \\<open>{w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n} = space N\\<close>"], ["proof (prove)\nusing this:\n  emeasure N (space N) - emeasure N {s \\<in> space N. s !! n} =\n  emeasure N (space N - {s \\<in> space N. s !! n})\n  {w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n} =\n  space N\n\ngoal (1 subgoal):\n 1. emeasure N\n     ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n} -\n      {w \\<in> space N. w !! n}) =\n    emeasure N\n     ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n}) -\n    emeasure N {w \\<in> space N. w !! n}", "by presburger"], ["proof (state)\nthis:\n  emeasure N\n   ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n} -\n    {w \\<in> space N. w !! n}) =\n  emeasure N\n   ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n}) -\n  emeasure N {w \\<in> space N. w !! n}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  emeasure N\n   ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n} -\n    {w \\<in> space N. w !! n}) =\n  emeasure N\n   ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n}) -\n  emeasure N {w \\<in> space N. w !! n}\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)", "hence \"emeasure N ?A = emeasure N (?A\\<union> ?B) - emeasure N ?B\""], ["proof (prove)\nusing this:\n  emeasure N\n   ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n} -\n    {w \\<in> space N. w !! n}) =\n  emeasure N\n   ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n}) -\n  emeasure N {w \\<in> space N. w !! n}\n\ngoal (1 subgoal):\n 1. emeasure N {w \\<in> space N. \\<not> w !! n} =\n    emeasure N\n     ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n}) -\n    emeasure N {w \\<in> space N. w !! n}", "using eqA"], ["proof (prove)\nusing this:\n  emeasure N\n   ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n} -\n    {w \\<in> space N. w !! n}) =\n  emeasure N\n   ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n}) -\n  emeasure N {w \\<in> space N. w !! n}\n  {w \\<in> space N. \\<not> w !! n} =\n  {w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n} -\n  {w \\<in> space N. w !! n}\n\ngoal (1 subgoal):\n 1. emeasure N {w \\<in> space N. \\<not> w !! n} =\n    emeasure N\n     ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n}) -\n    emeasure N {w \\<in> space N. w !! n}", "by simp"], ["proof (state)\nthis:\n  emeasure N {w \\<in> space N. \\<not> w !! n} =\n  emeasure N\n   ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n}) -\n  emeasure N {w \\<in> space N. w !! n}\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)", "also"], ["proof (state)\nthis:\n  emeasure N {w \\<in> space N. \\<not> w !! n} =\n  emeasure N\n   ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n}) -\n  emeasure N {w \\<in> space N. w !! n}\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)", "have \"... = 1 - emeasure N ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure N\n     ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n}) -\n    emeasure N {w \\<in> space N. w !! n} =\n    1 - emeasure N {w \\<in> space N. w !! n}", "by (metis (no_types, lifting) \\<open>?A \\<union> ?B = space N\\<close> assms(1) bernoulli_stream_def\n      prob_space.emeasure_space_1 prob_space.prob_space_stream_space prob_space_measure_pmf)"], ["proof (state)\nthis:\n  emeasure N\n   ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n}) -\n  emeasure N {w \\<in> space N. w !! n} =\n  1 - emeasure N {w \\<in> space N. w !! n}\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)", "also"], ["proof (state)\nthis:\n  emeasure N\n   ({w \\<in> space N. \\<not> w !! n} \\<union> {w \\<in> space N. w !! n}) -\n  emeasure N {w \\<in> space N. w !! n} =\n  1 - emeasure N {w \\<in> space N. w !! n}\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)", "have \"... = 1 - p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 - emeasure N {w \\<in> space N. w !! n} = ennreal (1 - p)", "using bernoulli_stream_component_probability[of N p] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>N = bernoulli_stream p; 0 \\<le> p; p \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>n.\n                       emeasure N {w \\<in> space N. w !! n} = ennreal p\n  N = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. 1 - emeasure N {w \\<in> space N. w !! n} = ennreal (1 - p)", "by (metis (mono_tags) ennreal_1 ennreal_minus_if)"], ["proof (state)\nthis:\n  1 - emeasure N {w \\<in> space N. w !! n} = ennreal (1 - p)\n\ngoal (1 subgoal):\n 1. \\<And>n. emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)", "finally"], ["proof (chain)\npicking this:\n  emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)", "show \"emeasure N ?A = 1 - p\""], ["proof (prove)\nusing this:\n  emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)\n\ngoal (1 subgoal):\n 1. emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)", "."], ["proof (state)\nthis:\n  emeasure N {w \\<in> space N. \\<not> w !! n} = ennreal (1 - p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bernoulli_stream_sets:\n  assumes \"0 < q\"\n  and \"q < 1\"\n  and \"0 < p\"\n  and \"p < 1\"\nshows \"sets (bernoulli_stream p) = sets (bernoulli_stream q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (bernoulli_stream p) = sets (bernoulli_stream q)", "unfolding bernoulli_stream_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (stream_space (measure_pmf (bernoulli_pmf p))) =\n    sets (stream_space (measure_pmf (bernoulli_pmf q)))", "by (rule sets_stream_space_cong, simp)"], ["", "locale infinite_coin_toss_space =\n  fixes p::real and M::\"bool stream measure\"\n  assumes p_gt_0: \"0 \\<le> p\"\n  and p_lt_1: \"p \\<le> 1\"\n  and bernoulli: \"M = bernoulli_stream p\""], ["", "sublocale infinite_coin_toss_space \\<subseteq> prob_space"], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space M", "by (simp add: bernoulli bernoulli_stream_def prob_space.prob_space_stream_space prob_space_measure_pmf)"], ["", "subsection \\<open>Natural filtration on the infinite coin toss space\\<close>"], ["", "text \\<open>The natural filtration on the infinite coin toss space is the discrete filtration @{term F}\nsuch that @{term \"F n\"} represents the restricted measure space in which the outcome of the first\n@{term n} coin tosses is known.\\<close>"], ["", "subsubsection \\<open>The projection function\\<close>"], ["", "text \\<open>Intuitively, the restricted measure space in which the outcome of the first @{term n} coin tosses is known\ncan be defined by any measurable function that maps all infinite sequences that agree on the first\n@{term n} coin tosses to the same element.\\<close>"], ["", "definition (in infinite_coin_toss_space) pseudo_proj_True:: \"nat \\<Rightarrow> bool stream \\<Rightarrow> bool stream\" where\n  \"pseudo_proj_True n  = (\\<lambda>w. shift (stake n w) (sconst True))\""], ["", "definition (in infinite_coin_toss_space) pseudo_proj_False:: \"nat \\<Rightarrow> bool stream \\<Rightarrow> bool stream\" where\n  \"pseudo_proj_False n  = (\\<lambda>w. shift (append (stake n w) [False]) (sconst True))\""], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_False_neq_True:\n  shows \"pseudo_proj_False n w \\<noteq> pseudo_proj_True n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n w \\<noteq> pseudo_proj_True n w", "proof (rule diff_streams_if, intro exI)"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudo_proj_False n w !! ?n2 \\<noteq> pseudo_proj_True n w !! ?n2", "have \"snth (pseudo_proj_False n w) n = False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n w !! n = False", "unfolding pseudo_proj_False_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((stake n w @ [False]) @- sconst True) !! n = False", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_False n w !! n = False\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n w !! ?n2 \\<noteq> pseudo_proj_True n w !! ?n2", "moreover"], ["proof (state)\nthis:\n  pseudo_proj_False n w !! n = False\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n w !! ?n2 \\<noteq> pseudo_proj_True n w !! ?n2", "have \"snth (pseudo_proj_True n w) n = True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n w !! n = True", "unfolding pseudo_proj_True_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (stake n w @- sconst True) !! n = True", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True n w !! n = True\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n w !! ?n2 \\<noteq> pseudo_proj_True n w !! ?n2", "ultimately"], ["proof (chain)\npicking this:\n  pseudo_proj_False n w !! n = False\n  pseudo_proj_True n w !! n = True", "show \"snth (pseudo_proj_False n w) n \\<noteq> snth (pseudo_proj_True n w) n\""], ["proof (prove)\nusing this:\n  pseudo_proj_False n w !! n = False\n  pseudo_proj_True n w !! n = True\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n w !! n \\<noteq> pseudo_proj_True n w !! n", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_False n w !! n \\<noteq> pseudo_proj_True n w !! n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_False_measurable:\n  shows \"pseudo_proj_False n \\<in> measurable (bernoulli_stream p) (bernoulli_stream p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudo_proj_False n\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "let ?N = \"bernoulli_stream p\""], ["proof (state)\ngoal (1 subgoal):\n 1. pseudo_proj_False n\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "have \"id \\<in> measurable ?N ?N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. id \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "by simp"], ["proof (state)\nthis:\n  id \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "moreover"], ["proof (state)\nthis:\n  id \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "have \"(\\<lambda>w. (sconst True)) \\<in> measurable ?N ?N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. sconst True)\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "using bernoulli_stream_space"], ["proof (prove)\nusing this:\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. sconst True)\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. sconst True)\n  \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "ultimately"], ["proof (chain)\npicking this:\n  id \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n  (\\<lambda>w. sconst True)\n  \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "show ?thesis"], ["proof (prove)\nusing this:\n  id \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n  (\\<lambda>w. sconst True)\n  \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "using measurable_shift  p_gt_0 p_lt_1"], ["proof (prove)\nusing this:\n  id \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n  (\\<lambda>w. sconst True)\n  \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n  \\<lbrakk>?f \\<in> ?N \\<rightarrow>\\<^sub>M stream_space ?M;\n   ?g \\<in> ?N \\<rightarrow>\\<^sub>M stream_space ?M\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x. stake ?n (?f x) @- ?g x)\n                    \\<in> ?N \\<rightarrow>\\<^sub>M stream_space ?M\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "unfolding bernoulli_stream_def pseudo_proj_False_def"], ["proof (prove)\nusing this:\n  id \\<in> stream_space\n            (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n           stream_space (measure_pmf (bernoulli_pmf p))\n  (\\<lambda>w. sconst True)\n  \\<in> stream_space (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n        stream_space (measure_pmf (bernoulli_pmf p))\n  \\<lbrakk>?f \\<in> ?N \\<rightarrow>\\<^sub>M stream_space ?M;\n   ?g \\<in> ?N \\<rightarrow>\\<^sub>M stream_space ?M\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x. stake ?n (?f x) @- ?g x)\n                    \\<in> ?N \\<rightarrow>\\<^sub>M stream_space ?M\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (stake n w @ [False]) @- sconst True)\n    \\<in> stream_space (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n          stream_space (measure_pmf (bernoulli_pmf p))", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_False n\n  \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_stake:\n  shows \"stake n (pseudo_proj_True n w) = stake n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake n (pseudo_proj_True n w) = stake n w", "by (simp add: pseudo_proj_True_def stake_shift)"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_False_stake:\n  shows \"stake n (pseudo_proj_False n w) = stake n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake n (pseudo_proj_False n w) = stake n w", "by (simp add: pseudo_proj_False_def stake_shift)"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_stake_image:\n  assumes \"(stake n w) = stake n x\"\n  shows \"pseudo_proj_True n w = pseudo_proj_True n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = pseudo_proj_True n x", "by (simp add: assms pseudo_proj_True_def)"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_prefix:\n  assumes \"n \\<le> m\"\n  and \"pseudo_proj_True m x = pseudo_proj_True m y\"\n  shows \"pseudo_proj_True n x = pseudo_proj_True n y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n x = pseudo_proj_True n y", "by (metis assms diff_is_0_eq id_stake_snth_sdrop length_stake pseudo_proj_True_def stake.simps(1) stake_shift)"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_measurable:\n  shows \"pseudo_proj_True n \\<in> measurable (bernoulli_stream p) (bernoulli_stream p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudo_proj_True n\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "let ?N = \"bernoulli_stream p\""], ["proof (state)\ngoal (1 subgoal):\n 1. pseudo_proj_True n\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "have \"id \\<in> measurable ?N ?N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. id \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "by simp"], ["proof (state)\nthis:\n  id \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "moreover"], ["proof (state)\nthis:\n  id \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "have \"(\\<lambda>w. (sconst True)) \\<in> measurable ?N ?N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. sconst True)\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "using bernoulli_stream_space"], ["proof (prove)\nusing this:\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. sconst True)\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. sconst True)\n  \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "ultimately"], ["proof (chain)\npicking this:\n  id \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n  (\\<lambda>w. sconst True)\n  \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "show ?thesis"], ["proof (prove)\nusing this:\n  id \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n  (\\<lambda>w. sconst True)\n  \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "using measurable_shift p_gt_0 p_lt_1"], ["proof (prove)\nusing this:\n  id \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n  (\\<lambda>w. sconst True)\n  \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n  \\<lbrakk>?f \\<in> ?N \\<rightarrow>\\<^sub>M stream_space ?M;\n   ?g \\<in> ?N \\<rightarrow>\\<^sub>M stream_space ?M\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x. stake ?n (?f x) @- ?g x)\n                    \\<in> ?N \\<rightarrow>\\<^sub>M stream_space ?M\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "unfolding bernoulli_stream_def pseudo_proj_True_def"], ["proof (prove)\nusing this:\n  id \\<in> stream_space\n            (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n           stream_space (measure_pmf (bernoulli_pmf p))\n  (\\<lambda>w. sconst True)\n  \\<in> stream_space (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n        stream_space (measure_pmf (bernoulli_pmf p))\n  \\<lbrakk>?f \\<in> ?N \\<rightarrow>\\<^sub>M stream_space ?M;\n   ?g \\<in> ?N \\<rightarrow>\\<^sub>M stream_space ?M\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x. stake ?n (?f x) @- ?g x)\n                    \\<in> ?N \\<rightarrow>\\<^sub>M stream_space ?M\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. stake n w @- sconst True)\n    \\<in> stream_space (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n          stream_space (measure_pmf (bernoulli_pmf p))", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True n\n  \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_finite_image:\n  shows \"finite (range (pseudo_proj_True n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_True n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_True n))", "let ?U = \"UNIV::bool set\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_True n))", "have \"?U = {True, False}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = {True, False}", "by auto"], ["proof (state)\nthis:\n  UNIV = {True, False}\n\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_True n))", "hence \"finite ?U\""], ["proof (prove)\nusing this:\n  UNIV = {True, False}\n\ngoal (1 subgoal):\n 1. finite UNIV", "by simp"], ["proof (state)\nthis:\n  finite UNIV\n\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_True n))", "moreover"], ["proof (state)\nthis:\n  finite UNIV\n\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_True n))", "have \"?U \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  UNIV \\<noteq> {}\n\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_True n))", "ultimately"], ["proof (chain)\npicking this:\n  finite UNIV\n  UNIV \\<noteq> {}", "have fi: \"finite (stake n `streams ?U)\""], ["proof (prove)\nusing this:\n  finite UNIV\n  UNIV \\<noteq> {}\n\ngoal (1 subgoal):\n 1. finite (stake n ` streams UNIV)", "using stake_finite_universe_finite[of ?U]"], ["proof (prove)\nusing this:\n  finite UNIV\n  UNIV \\<noteq> {}\n  \\<lbrakk>finite UNIV; UNIV \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> finite (stake ?n ` streams UNIV)\n\ngoal (1 subgoal):\n 1. finite (stake n ` streams UNIV)", "by simp"], ["proof (state)\nthis:\n  finite (stake n ` streams UNIV)\n\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_True n))", "let ?sh= \"(\\<lambda>l. shift l (sconst True))\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_True n))", "have \"finite {?sh l|l. l\\<in>(stake n `streams ?U)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {l @- sconst True |l. l \\<in> stake n ` streams UNIV}", "using fi"], ["proof (prove)\nusing this:\n  finite (stake n ` streams UNIV)\n\ngoal (1 subgoal):\n 1. finite {l @- sconst True |l. l \\<in> stake n ` streams UNIV}", "by simp"], ["proof (state)\nthis:\n  finite {l @- sconst True |l. l \\<in> stake n ` streams UNIV}\n\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_True n))", "moreover"], ["proof (state)\nthis:\n  finite {l @- sconst True |l. l \\<in> stake n ` streams UNIV}\n\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_True n))", "have \"{?sh l|l. l\\<in>(stake n `streams ?U)} = range (pseudo_proj_True n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {l @- sconst True |l. l \\<in> stake n ` streams UNIV} =\n    range (pseudo_proj_True n)", "unfolding pseudo_proj_True_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {l @- sconst True |l. l \\<in> stake n ` streams UNIV} =\n    range (\\<lambda>w. stake n w @- sconst True)", "by auto"], ["proof (state)\nthis:\n  {l @- sconst True |l. l \\<in> stake n ` streams UNIV} =\n  range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_True n))", "ultimately"], ["proof (chain)\npicking this:\n  finite {l @- sconst True |l. l \\<in> stake n ` streams UNIV}\n  {l @- sconst True |l. l \\<in> stake n ` streams UNIV} =\n  range (pseudo_proj_True n)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite {l @- sconst True |l. l \\<in> stake n ` streams UNIV}\n  {l @- sconst True |l. l \\<in> stake n ` streams UNIV} =\n  range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_True n))", "by simp"], ["proof (state)\nthis:\n  finite (range (pseudo_proj_True n))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_False_finite_image:\n  shows \"finite (range (pseudo_proj_False n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_False n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_False n))", "let ?U = \"UNIV::bool set\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_False n))", "have \"?U = {True, False}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = {True, False}", "by auto"], ["proof (state)\nthis:\n  UNIV = {True, False}\n\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_False n))", "hence \"finite ?U\""], ["proof (prove)\nusing this:\n  UNIV = {True, False}\n\ngoal (1 subgoal):\n 1. finite UNIV", "by simp"], ["proof (state)\nthis:\n  finite UNIV\n\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_False n))", "moreover"], ["proof (state)\nthis:\n  finite UNIV\n\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_False n))", "have \"?U \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  UNIV \\<noteq> {}\n\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_False n))", "ultimately"], ["proof (chain)\npicking this:\n  finite UNIV\n  UNIV \\<noteq> {}", "have fi: \"finite (stake n `streams ?U)\""], ["proof (prove)\nusing this:\n  finite UNIV\n  UNIV \\<noteq> {}\n\ngoal (1 subgoal):\n 1. finite (stake n ` streams UNIV)", "using stake_finite_universe_finite[of ?U]"], ["proof (prove)\nusing this:\n  finite UNIV\n  UNIV \\<noteq> {}\n  \\<lbrakk>finite UNIV; UNIV \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> finite (stake ?n ` streams UNIV)\n\ngoal (1 subgoal):\n 1. finite (stake n ` streams UNIV)", "by simp"], ["proof (state)\nthis:\n  finite (stake n ` streams UNIV)\n\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_False n))", "let ?sh= \"(\\<lambda>l. shift (l @ [False]) (sconst True))\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_False n))", "have \"finite {?sh l|l. l\\<in>(stake n `streams ?U)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {(l @ [False]) @- sconst True |l. l \\<in> stake n ` streams UNIV}", "using fi"], ["proof (prove)\nusing this:\n  finite (stake n ` streams UNIV)\n\ngoal (1 subgoal):\n 1. finite {(l @ [False]) @- sconst True |l. l \\<in> stake n ` streams UNIV}", "by simp"], ["proof (state)\nthis:\n  finite {(l @ [False]) @- sconst True |l. l \\<in> stake n ` streams UNIV}\n\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_False n))", "moreover"], ["proof (state)\nthis:\n  finite {(l @ [False]) @- sconst True |l. l \\<in> stake n ` streams UNIV}\n\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_False n))", "have \"{?sh l|l. l\\<in>(stake n `streams ?U)} = range (pseudo_proj_False n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(l @ [False]) @- sconst True |l. l \\<in> stake n ` streams UNIV} =\n    range (pseudo_proj_False n)", "unfolding pseudo_proj_False_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(l @ [False]) @- sconst True |l. l \\<in> stake n ` streams UNIV} =\n    range (\\<lambda>w. (stake n w @ [False]) @- sconst True)", "by auto"], ["proof (state)\nthis:\n  {(l @ [False]) @- sconst True |l. l \\<in> stake n ` streams UNIV} =\n  range (pseudo_proj_False n)\n\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_False n))", "ultimately"], ["proof (chain)\npicking this:\n  finite {(l @ [False]) @- sconst True |l. l \\<in> stake n ` streams UNIV}\n  {(l @ [False]) @- sconst True |l. l \\<in> stake n ` streams UNIV} =\n  range (pseudo_proj_False n)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite {(l @ [False]) @- sconst True |l. l \\<in> stake n ` streams UNIV}\n  {(l @ [False]) @- sconst True |l. l \\<in> stake n ` streams UNIV} =\n  range (pseudo_proj_False n)\n\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_False n))", "by simp"], ["proof (state)\nthis:\n  finite (range (pseudo_proj_False n))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_proj:\n  shows \"pseudo_proj_True n (pseudo_proj_True n w) = pseudo_proj_True n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n (pseudo_proj_True n w) = pseudo_proj_True n w", "by (metis pseudo_proj_True_def pseudo_proj_True_stake)"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_Suc_False_proj:\n  shows \"pseudo_proj_True (Suc n) (pseudo_proj_False n w) = pseudo_proj_False n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) (pseudo_proj_False n w) = pseudo_proj_False n w", "by (metis append_Nil2 cancel_comm_monoid_add_class.diff_cancel length_append_singleton length_stake order_refl pseudo_proj_False_def pseudo_proj_True_def stake.simps(1) stake_shift take_all)"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_Suc_proj:\n  shows \"pseudo_proj_True (Suc n) (pseudo_proj_True n w) = pseudo_proj_True n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) (pseudo_proj_True n w) = pseudo_proj_True n w", "by (metis id_apply id_stake_snth_sdrop pseudo_proj_True_def pseudo_proj_True_stake shift_left_inj siterate.code stake_sdrop stream.sel(2))"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_proj_Suc:\n  shows \"pseudo_proj_True n (pseudo_proj_True (Suc n) w) = pseudo_proj_True n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n (pseudo_proj_True (Suc n) w) = pseudo_proj_True n w", "by (meson Suc_n_not_le_n nat_le_linear pseudo_proj_True_prefix pseudo_proj_True_stake pseudo_proj_True_stake_image)"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_shift:\n  shows \"length l = n \\<Longrightarrow> pseudo_proj_True n (shift l (sconst True)) = shift l (sconst True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length l = n \\<Longrightarrow>\n    pseudo_proj_True n (l @- sconst True) = l @- sconst True", "by (simp add: pseudo_proj_True_def stake_shift)"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_suc_img:\n  shows \"pseudo_proj_True (Suc n) w \\<in> {pseudo_proj_True n w, pseudo_proj_False n w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w\n    \\<in> {pseudo_proj_True n w, pseudo_proj_False n w}", "by (metis (full_types) cycle_decomp insertCI list.distinct(1) pseudo_proj_True_def pseudo_proj_False_def sconst_cycle shift_append stake_Suc)"], ["", "lemma (in infinite_coin_toss_space) measurable_snth_count_space:\n  shows \"(\\<lambda>w. snth w n) \\<in> measurable (bernoulli_stream p) (count_space (UNIV::bool set))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Measurable.pred (bernoulli_stream p) (\\<lambda>w. w !! n)", "by (simp add: bernoulli_stream_def)"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_same_img:\n  assumes \"pseudo_proj_True n w = pseudo_proj_True n x\"\n  shows \"stake n w = stake n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake n w = stake n x", "by (metis assms pseudo_proj_True_stake)"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_snth:\n  assumes \"pseudo_proj_True n x  = pseudo_proj_True n w\"\n  shows \"\\<And>i. Suc i \\<le> n \\<Longrightarrow>  snth x i = snth w i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. Suc i \\<le> n \\<Longrightarrow> x !! i = w !! i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. Suc i \\<le> n \\<Longrightarrow> x !! i = w !! i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. Suc i \\<le> n \\<Longrightarrow> x !! i = w !! i", "have \"stake n w= stake n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake n w = stake n x", "using assms"], ["proof (prove)\nusing this:\n  pseudo_proj_True n x = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. stake n w = stake n x", "by (metis pseudo_proj_True_stake)"], ["proof (state)\nthis:\n  stake n w = stake n x\n\ngoal (1 subgoal):\n 1. \\<And>i. Suc i \\<le> n \\<Longrightarrow> x !! i = w !! i", "assume \"Suc i \\<le> n\""], ["proof (state)\nthis:\n  Suc i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i. Suc i \\<le> n \\<Longrightarrow> x !! i = w !! i", "thus \"snth x i = snth w i\""], ["proof (prove)\nusing this:\n  Suc i \\<le> n\n\ngoal (1 subgoal):\n 1. x !! i = w !! i", "using \\<open>stake n w = stake n x\\<close> stake_snth"], ["proof (prove)\nusing this:\n  Suc i \\<le> n\n  stake n w = stake n x\n  \\<lbrakk>stake ?n ?w = stake ?n ?x; Suc ?i \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> ?w !! ?i = ?x !! ?i\n\ngoal (1 subgoal):\n 1. x !! i = w !! i", "by auto"], ["proof (state)\nthis:\n  x !! i = w !! i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_snth':\n  assumes \"(\\<And>i. Suc i \\<le> n \\<Longrightarrow>  snth w i = snth x i)\"\n  shows \"pseudo_proj_True n w  = pseudo_proj_True n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = pseudo_proj_True n x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = pseudo_proj_True n x", "have \"stake n w = stake n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake n w = stake n x", "using stake_snth'[of n w x]"], ["proof (prove)\nusing this:\n  (\\<And>i.\n      Suc i \\<le> n \\<Longrightarrow> w !! i = x !! i) \\<Longrightarrow>\n  stake n w = stake n x\n\ngoal (1 subgoal):\n 1. stake n w = stake n x", "using assms"], ["proof (prove)\nusing this:\n  (\\<And>i.\n      Suc i \\<le> n \\<Longrightarrow> w !! i = x !! i) \\<Longrightarrow>\n  stake n w = stake n x\n  Suc ?i1 \\<le> n \\<Longrightarrow> w !! ?i1 = x !! ?i1\n\ngoal (1 subgoal):\n 1. stake n w = stake n x", "by simp"], ["proof (state)\nthis:\n  stake n w = stake n x\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = pseudo_proj_True n x", "moreover"], ["proof (state)\nthis:\n  stake n w = stake n x\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = pseudo_proj_True n x", "have \"stake n w = stake n x \\<Longrightarrow> pseudo_proj_True n w = pseudo_proj_True n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake n w = stake n x \\<Longrightarrow>\n    pseudo_proj_True n w = pseudo_proj_True n x", "using pseudo_proj_True_stake_image[of n w x]"], ["proof (prove)\nusing this:\n  stake n w = stake n x \\<Longrightarrow>\n  pseudo_proj_True n w = pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. stake n w = stake n x \\<Longrightarrow>\n    pseudo_proj_True n w = pseudo_proj_True n x", "by simp"], ["proof (state)\nthis:\n  stake n w = stake n x \\<Longrightarrow>\n  pseudo_proj_True n w = pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = pseudo_proj_True n x", "ultimately"], ["proof (chain)\npicking this:\n  stake n w = stake n x\n  stake n w = stake n x \\<Longrightarrow>\n  pseudo_proj_True n w = pseudo_proj_True n x", "show ?thesis"], ["proof (prove)\nusing this:\n  stake n w = stake n x\n  stake n w = stake n x \\<Longrightarrow>\n  pseudo_proj_True n w = pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = pseudo_proj_True n x", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True n w = pseudo_proj_True n x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_preimage:\n  assumes \"w = pseudo_proj_True n w\"\n  shows \"(pseudo_proj_True n) -` {w} = (\\<Inter>i\\<in> {m. Suc m \\<le> n}. (\\<lambda>w. snth w i) -` {snth w i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} =\n    (\\<Inter>i\\<in>{m. Suc m \\<le> n}. (\\<lambda>w. w !! i) -` {w !! i})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. pseudo_proj_True n -` {w}\n    \\<subseteq> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                    (\\<lambda>w. w !! i) -` {w !! i})\n 2. (\\<Inter>i\\<in>{m. Suc m \\<le> n}. (\\<lambda>w. w !! i) -` {w !! i})\n    \\<subseteq> pseudo_proj_True n -` {w}", "show \"(pseudo_proj_True n) -` {w} \\<subseteq> (\\<Inter>i\\<in>{m. Suc m \\<le> n}. (\\<lambda>w. snth w i) -` {snth w i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w}\n    \\<subseteq> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                    (\\<lambda>w. w !! i) -` {w !! i})", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` {w} \\<Longrightarrow>\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i})", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` {w} \\<Longrightarrow>\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i})", "assume \"x \\<in> (pseudo_proj_True n) -`{w}\""], ["proof (state)\nthis:\n  x \\<in> pseudo_proj_True n -` {w}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` {w} \\<Longrightarrow>\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i})", "hence \"pseudo_proj_True n x = pseudo_proj_True n w\""], ["proof (prove)\nusing this:\n  x \\<in> pseudo_proj_True n -` {w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n x = pseudo_proj_True n w", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> pseudo_proj_True n -` {w}\n  w = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n x = pseudo_proj_True n w", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True n x = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` {w} \\<Longrightarrow>\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i})", "hence \"\\<And>i. i \\<in>{m. Suc m \\<le> n} \\<Longrightarrow> x  \\<in> (\\<lambda>x. snth x i) -`{snth w i}\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n x = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. Suc m \\<le> n} \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. x !! i) -` {w !! i}", "by (metis (mono_tags) Suc_le_eq mem_Collect_eq\n      pseudo_proj_True_stake stake_nth vimage_singleton_eq)"], ["proof (state)\nthis:\n  ?i1 \\<in> {m. Suc m \\<le> n} \\<Longrightarrow>\n  x \\<in> (\\<lambda>x. x !! ?i1) -` {w !! ?i1}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` {w} \\<Longrightarrow>\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i})", "thus \"x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}. (\\<lambda>w. snth w i) -` {snth w i})\""], ["proof (prove)\nusing this:\n  ?i1 \\<in> {m. Suc m \\<le> n} \\<Longrightarrow>\n  x \\<in> (\\<lambda>x. x !! ?i1) -` {w !! ?i1}\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                (\\<lambda>w. w !! i) -` {w !! i})", "by auto"], ["proof (state)\nthis:\n  x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n              (\\<lambda>w. w !! i) -` {w !! i})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {w}\n  \\<subseteq> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                  (\\<lambda>w. w !! i) -` {w !! i})\n\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{m. Suc m \\<le> n}. (\\<lambda>w. w !! i) -` {w !! i})\n    \\<subseteq> pseudo_proj_True n -` {w}", "show \"(\\<Inter>i\\<in>{m. Suc m \\<le> n}. (\\<lambda>w. snth w i) -` {snth w i}) \\<subseteq> (pseudo_proj_True n) -` {w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{m. Suc m \\<le> n}. (\\<lambda>w. w !! i) -` {w !! i})\n    \\<subseteq> pseudo_proj_True n -` {w}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i}) \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` {w}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i}) \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` {w}", "assume \"x\\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}. (\\<lambda>w. snth w i) -` {snth w i})\""], ["proof (state)\nthis:\n  x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n              (\\<lambda>w. w !! i) -` {w !! i})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i}) \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` {w}", "hence \"\\<And>i. i \\<in>{m. Suc m \\<le> n} \\<Longrightarrow> x  \\<in> (\\<lambda>x. snth x i) -`{snth w i}\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n              (\\<lambda>w. w !! i) -` {w !! i})\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. Suc m \\<le> n} \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. x !! i) -` {w !! i}", "by simp"], ["proof (state)\nthis:\n  ?i1 \\<in> {m. Suc m \\<le> n} \\<Longrightarrow>\n  x \\<in> (\\<lambda>x. x !! ?i1) -` {w !! ?i1}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i}) \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` {w}", "hence \"\\<And>i. i \\<in>{m. Suc m \\<le> n} \\<Longrightarrow> snth x i = snth w i\""], ["proof (prove)\nusing this:\n  ?i1 \\<in> {m. Suc m \\<le> n} \\<Longrightarrow>\n  x \\<in> (\\<lambda>x. x !! ?i1) -` {w !! ?i1}\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {m. Suc m \\<le> n} \\<Longrightarrow> x !! i = w !! i", "by simp"], ["proof (state)\nthis:\n  ?i1 \\<in> {m. Suc m \\<le> n} \\<Longrightarrow> x !! ?i1 = w !! ?i1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i}) \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` {w}", "hence \"\\<And>i. Suc i \\<le> n \\<Longrightarrow> snth x i = snth w i\""], ["proof (prove)\nusing this:\n  ?i1 \\<in> {m. Suc m \\<le> n} \\<Longrightarrow> x !! ?i1 = w !! ?i1\n\ngoal (1 subgoal):\n 1. \\<And>i. Suc i \\<le> n \\<Longrightarrow> x !! i = w !! i", "by auto"], ["proof (state)\nthis:\n  Suc ?i1 \\<le> n \\<Longrightarrow> x !! ?i1 = w !! ?i1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i}) \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` {w}", "hence \"pseudo_proj_True n x = pseudo_proj_True n w\""], ["proof (prove)\nusing this:\n  Suc ?i1 \\<le> n \\<Longrightarrow> x !! ?i1 = w !! ?i1\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n x = pseudo_proj_True n w", "using pseudo_proj_True_snth'[of n x w]"], ["proof (prove)\nusing this:\n  Suc ?i1 \\<le> n \\<Longrightarrow> x !! ?i1 = w !! ?i1\n  (\\<And>i.\n      Suc i \\<le> n \\<Longrightarrow> x !! i = w !! i) \\<Longrightarrow>\n  pseudo_proj_True n x = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n x = pseudo_proj_True n w", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True n x = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i}) \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` {w}", "also"], ["proof (state)\nthis:\n  pseudo_proj_True n x = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i}) \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` {w}", "have \"... = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = w", "using assms"], ["proof (prove)\nusing this:\n  w = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = w", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True n w = w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i}) \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` {w}", "finally"], ["proof (chain)\npicking this:\n  pseudo_proj_True n x = w", "have \"pseudo_proj_True n x = w\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n x = w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n x = w", "."], ["proof (state)\nthis:\n  pseudo_proj_True n x = w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i}) \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` {w}", "thus \"x \\<in> (pseudo_proj_True n) -`{w}\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n x = w\n\ngoal (1 subgoal):\n 1. x \\<in> pseudo_proj_True n -` {w}", "by auto"], ["proof (state)\nthis:\n  x \\<in> pseudo_proj_True n -` {w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}. (\\<lambda>w. w !! i) -` {w !! i})\n  \\<subseteq> pseudo_proj_True n -` {w}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_False_preimage:\n  assumes \"w = pseudo_proj_False n w\"\n  shows \"(pseudo_proj_False n) -` {w} = (\\<Inter>i\\<in> {m. Suc m \\<le> n}. (\\<lambda>w. snth w i) -` {snth w i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` {w} =\n    (\\<Inter>i\\<in>{m. Suc m \\<le> n}. (\\<lambda>w. w !! i) -` {w !! i})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. pseudo_proj_False n -` {w}\n    \\<subseteq> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                    (\\<lambda>w. w !! i) -` {w !! i})\n 2. (\\<Inter>i\\<in>{m. Suc m \\<le> n}. (\\<lambda>w. w !! i) -` {w !! i})\n    \\<subseteq> pseudo_proj_False n -` {w}", "show \"(pseudo_proj_False n) -` {w} \\<subseteq> (\\<Inter>i\\<in>{m. Suc m \\<le> n}. (\\<lambda>w. snth w i) -` {snth w i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` {w}\n    \\<subseteq> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                    (\\<lambda>w. w !! i) -` {w !! i})", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` {w} \\<Longrightarrow>\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i})", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` {w} \\<Longrightarrow>\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i})", "assume \"x \\<in> (pseudo_proj_False n) -`{w}\""], ["proof (state)\nthis:\n  x \\<in> pseudo_proj_False n -` {w}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` {w} \\<Longrightarrow>\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i})", "hence \"pseudo_proj_False n x = pseudo_proj_False n w\""], ["proof (prove)\nusing this:\n  x \\<in> pseudo_proj_False n -` {w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n x = pseudo_proj_False n w", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> pseudo_proj_False n -` {w}\n  w = pseudo_proj_False n w\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n x = pseudo_proj_False n w", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_False n x = pseudo_proj_False n w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` {w} \\<Longrightarrow>\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i})", "hence \"\\<And>i. i \\<in>{m. Suc m \\<le> n} \\<Longrightarrow> x  \\<in> (\\<lambda>x. snth x i) -`{snth w i}\""], ["proof (prove)\nusing this:\n  pseudo_proj_False n x = pseudo_proj_False n w\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. Suc m \\<le> n} \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. x !! i) -` {w !! i}", "by (metis (mono_tags) Suc_le_eq mem_Collect_eq\n      pseudo_proj_False_stake stake_nth vimage_singleton_eq)"], ["proof (state)\nthis:\n  ?i1 \\<in> {m. Suc m \\<le> n} \\<Longrightarrow>\n  x \\<in> (\\<lambda>x. x !! ?i1) -` {w !! ?i1}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` {w} \\<Longrightarrow>\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i})", "thus \"x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}. (\\<lambda>w. snth w i) -` {snth w i})\""], ["proof (prove)\nusing this:\n  ?i1 \\<in> {m. Suc m \\<le> n} \\<Longrightarrow>\n  x \\<in> (\\<lambda>x. x !! ?i1) -` {w !! ?i1}\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                (\\<lambda>w. w !! i) -` {w !! i})", "by auto"], ["proof (state)\nthis:\n  x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n              (\\<lambda>w. w !! i) -` {w !! i})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_False n -` {w}\n  \\<subseteq> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                  (\\<lambda>w. w !! i) -` {w !! i})\n\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{m. Suc m \\<le> n}. (\\<lambda>w. w !! i) -` {w !! i})\n    \\<subseteq> pseudo_proj_False n -` {w}", "show \"(\\<Inter>i\\<in>{m. Suc m \\<le> n}. (\\<lambda>w. snth w i) -` {snth w i}) \\<subseteq> (pseudo_proj_False n) -` {w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{m. Suc m \\<le> n}. (\\<lambda>w. w !! i) -` {w !! i})\n    \\<subseteq> pseudo_proj_False n -` {w}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i}) \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` {w}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i}) \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` {w}", "assume \"x\\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}. (\\<lambda>w. snth w i) -` {snth w i})\""], ["proof (state)\nthis:\n  x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n              (\\<lambda>w. w !! i) -` {w !! i})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i}) \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` {w}", "hence \"\\<And>i. i \\<in>{m. Suc m \\<le> n} \\<Longrightarrow> x  \\<in> (\\<lambda>x. snth x i) -`{snth w i}\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n              (\\<lambda>w. w !! i) -` {w !! i})\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. Suc m \\<le> n} \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. x !! i) -` {w !! i}", "by simp"], ["proof (state)\nthis:\n  ?i1 \\<in> {m. Suc m \\<le> n} \\<Longrightarrow>\n  x \\<in> (\\<lambda>x. x !! ?i1) -` {w !! ?i1}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i}) \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` {w}", "hence \"\\<And>i. i \\<in>{m. Suc m \\<le> n} \\<Longrightarrow> snth x i = snth w i\""], ["proof (prove)\nusing this:\n  ?i1 \\<in> {m. Suc m \\<le> n} \\<Longrightarrow>\n  x \\<in> (\\<lambda>x. x !! ?i1) -` {w !! ?i1}\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {m. Suc m \\<le> n} \\<Longrightarrow> x !! i = w !! i", "by simp"], ["proof (state)\nthis:\n  ?i1 \\<in> {m. Suc m \\<le> n} \\<Longrightarrow> x !! ?i1 = w !! ?i1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i}) \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` {w}", "hence \"\\<And>i. Suc i \\<le> n \\<Longrightarrow> snth x i = snth w i\""], ["proof (prove)\nusing this:\n  ?i1 \\<in> {m. Suc m \\<le> n} \\<Longrightarrow> x !! ?i1 = w !! ?i1\n\ngoal (1 subgoal):\n 1. \\<And>i. Suc i \\<le> n \\<Longrightarrow> x !! i = w !! i", "by auto"], ["proof (state)\nthis:\n  Suc ?i1 \\<le> n \\<Longrightarrow> x !! ?i1 = w !! ?i1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i}) \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` {w}", "hence \"pseudo_proj_False n x = pseudo_proj_False n w\""], ["proof (prove)\nusing this:\n  Suc ?i1 \\<le> n \\<Longrightarrow> x !! ?i1 = w !! ?i1\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n x = pseudo_proj_False n w", "by (metis (full_types) pseudo_proj_False_def stake_snth')"], ["proof (state)\nthis:\n  pseudo_proj_False n x = pseudo_proj_False n w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i}) \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` {w}", "also"], ["proof (state)\nthis:\n  pseudo_proj_False n x = pseudo_proj_False n w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i}) \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` {w}", "have \"... = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n w = w", "using assms"], ["proof (prove)\nusing this:\n  w = pseudo_proj_False n w\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n w = w", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_False n w = w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i}) \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` {w}", "finally"], ["proof (chain)\npicking this:\n  pseudo_proj_False n x = w", "have \"pseudo_proj_False n x = w\""], ["proof (prove)\nusing this:\n  pseudo_proj_False n x = w\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n x = w", "."], ["proof (state)\nthis:\n  pseudo_proj_False n x = w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n                   (\\<lambda>w. w !! i) -` {w !! i}) \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` {w}", "thus \"x \\<in> (pseudo_proj_False n) -`{w}\""], ["proof (prove)\nusing this:\n  pseudo_proj_False n x = w\n\ngoal (1 subgoal):\n 1. x \\<in> pseudo_proj_False n -` {w}", "by auto"], ["proof (state)\nthis:\n  x \\<in> pseudo_proj_False n -` {w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}. (\\<lambda>w. w !! i) -` {w !! i})\n  \\<subseteq> pseudo_proj_False n -` {w}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_preimage_stake:\n  assumes \"w = pseudo_proj_True n w\"\n  shows \"(pseudo_proj_True n) -` {w} = {x. stake n x = stake n w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} = {x. stake n x = stake n w}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. pseudo_proj_True n -` {w} \\<subseteq> {x. stake n x = stake n w}\n 2. {x. stake n x = stake n w} \\<subseteq> pseudo_proj_True n -` {w}", "show \"{x. stake n x = stake n w} \\<subseteq> (pseudo_proj_True n) -` {w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. stake n x = stake n w} \\<subseteq> pseudo_proj_True n -` {w}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x. stake n x = stake n w} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` {w}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x. stake n x = stake n w} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` {w}", "assume \"x \\<in> {x. stake n x = stake n w}\""], ["proof (state)\nthis:\n  x \\<in> {x. stake n x = stake n w}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x. stake n x = stake n w} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` {w}", "hence \"stake n x = stake n w\""], ["proof (prove)\nusing this:\n  x \\<in> {x. stake n x = stake n w}\n\ngoal (1 subgoal):\n 1. stake n x = stake n w", "by auto"], ["proof (state)\nthis:\n  stake n x = stake n w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x. stake n x = stake n w} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` {w}", "hence \"pseudo_proj_True n x = w\""], ["proof (prove)\nusing this:\n  stake n x = stake n w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n x = w", "using assms pseudo_proj_True_def"], ["proof (prove)\nusing this:\n  stake n x = stake n w\n  w = pseudo_proj_True n w\n  pseudo_proj_True ?n = (\\<lambda>w. stake ?n w @- sconst True)\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n x = w", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True n x = w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x. stake n x = stake n w} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` {w}", "thus \"x \\<in> (pseudo_proj_True n) -` {w}\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n x = w\n\ngoal (1 subgoal):\n 1. x \\<in> pseudo_proj_True n -` {w}", "by auto"], ["proof (state)\nthis:\n  x \\<in> pseudo_proj_True n -` {w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {x. stake n x = stake n w} \\<subseteq> pseudo_proj_True n -` {w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<subseteq> {x. stake n x = stake n w}", "show \"(pseudo_proj_True n) -` {w} \\<subseteq> {x. stake n x = stake n w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<subseteq> {x. stake n x = stake n w}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` {w} \\<Longrightarrow>\n       x \\<in> {x. stake n x = stake n w}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` {w} \\<Longrightarrow>\n       x \\<in> {x. stake n x = stake n w}", "assume \"x\\<in> pseudo_proj_True n -`{w}\""], ["proof (state)\nthis:\n  x \\<in> pseudo_proj_True n -` {w}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` {w} \\<Longrightarrow>\n       x \\<in> {x. stake n x = stake n w}", "hence \"pseudo_proj_True n x = pseudo_proj_True n w\""], ["proof (prove)\nusing this:\n  x \\<in> pseudo_proj_True n -` {w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n x = pseudo_proj_True n w", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> pseudo_proj_True n -` {w}\n  w = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n x = pseudo_proj_True n w", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True n x = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` {w} \\<Longrightarrow>\n       x \\<in> {x. stake n x = stake n w}", "hence \"stake n x = stake n w\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n x = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. stake n x = stake n w", "by (metis pseudo_proj_True_stake)"], ["proof (state)\nthis:\n  stake n x = stake n w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` {w} \\<Longrightarrow>\n       x \\<in> {x. stake n x = stake n w}", "thus \"x\\<in> {x. stake n x = stake n w}\""], ["proof (prove)\nusing this:\n  stake n x = stake n w\n\ngoal (1 subgoal):\n 1. x \\<in> {x. stake n x = stake n w}", "by simp"], ["proof (state)\nthis:\n  x \\<in> {x. stake n x = stake n w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {w} \\<subseteq> {x. stake n x = stake n w}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_False_preimage_stake:\n  assumes \"w = pseudo_proj_False n w\"\n  shows \"(pseudo_proj_False n) -` {w} = {x. stake n x = stake n w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` {w} = {x. stake n x = stake n w}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. pseudo_proj_False n -` {w} \\<subseteq> {x. stake n x = stake n w}\n 2. {x. stake n x = stake n w} \\<subseteq> pseudo_proj_False n -` {w}", "show \"{x. stake n x = stake n w} \\<subseteq> (pseudo_proj_False n) -` {w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. stake n x = stake n w} \\<subseteq> pseudo_proj_False n -` {w}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x. stake n x = stake n w} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` {w}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x. stake n x = stake n w} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` {w}", "assume \"x \\<in> {x. stake n x = stake n w}\""], ["proof (state)\nthis:\n  x \\<in> {x. stake n x = stake n w}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x. stake n x = stake n w} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` {w}", "hence \"stake n x = stake n w\""], ["proof (prove)\nusing this:\n  x \\<in> {x. stake n x = stake n w}\n\ngoal (1 subgoal):\n 1. stake n x = stake n w", "by auto"], ["proof (state)\nthis:\n  stake n x = stake n w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x. stake n x = stake n w} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` {w}", "hence \"pseudo_proj_False n x = w\""], ["proof (prove)\nusing this:\n  stake n x = stake n w\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n x = w", "using assms pseudo_proj_False_def"], ["proof (prove)\nusing this:\n  stake n x = stake n w\n  w = pseudo_proj_False n w\n  pseudo_proj_False ?n = (\\<lambda>w. (stake ?n w @ [False]) @- sconst True)\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n x = w", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_False n x = w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x. stake n x = stake n w} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` {w}", "thus \"x \\<in> (pseudo_proj_False n) -` {w}\""], ["proof (prove)\nusing this:\n  pseudo_proj_False n x = w\n\ngoal (1 subgoal):\n 1. x \\<in> pseudo_proj_False n -` {w}", "by auto"], ["proof (state)\nthis:\n  x \\<in> pseudo_proj_False n -` {w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {x. stake n x = stake n w} \\<subseteq> pseudo_proj_False n -` {w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` {w} \\<subseteq> {x. stake n x = stake n w}", "show \"(pseudo_proj_False n) -` {w} \\<subseteq> {x. stake n x = stake n w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` {w} \\<subseteq> {x. stake n x = stake n w}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` {w} \\<Longrightarrow>\n       x \\<in> {x. stake n x = stake n w}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` {w} \\<Longrightarrow>\n       x \\<in> {x. stake n x = stake n w}", "assume \"x\\<in> pseudo_proj_False n -`{w}\""], ["proof (state)\nthis:\n  x \\<in> pseudo_proj_False n -` {w}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` {w} \\<Longrightarrow>\n       x \\<in> {x. stake n x = stake n w}", "hence \"pseudo_proj_False n x = pseudo_proj_False n w\""], ["proof (prove)\nusing this:\n  x \\<in> pseudo_proj_False n -` {w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n x = pseudo_proj_False n w", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> pseudo_proj_False n -` {w}\n  w = pseudo_proj_False n w\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n x = pseudo_proj_False n w", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_False n x = pseudo_proj_False n w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` {w} \\<Longrightarrow>\n       x \\<in> {x. stake n x = stake n w}", "hence \"stake n x = stake n w\""], ["proof (prove)\nusing this:\n  pseudo_proj_False n x = pseudo_proj_False n w\n\ngoal (1 subgoal):\n 1. stake n x = stake n w", "by (metis pseudo_proj_False_stake)"], ["proof (state)\nthis:\n  stake n x = stake n w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` {w} \\<Longrightarrow>\n       x \\<in> {x. stake n x = stake n w}", "thus \"x\\<in> {x. stake n x = stake n w}\""], ["proof (prove)\nusing this:\n  stake n x = stake n w\n\ngoal (1 subgoal):\n 1. x \\<in> {x. stake n x = stake n w}", "by simp"], ["proof (state)\nthis:\n  x \\<in> {x. stake n x = stake n w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_False n -` {w} \\<subseteq> {x. stake n x = stake n w}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_preimage_stake_space:\n  assumes \"w = pseudo_proj_True n w\"\n  shows \"(pseudo_proj_True n) -` {w} \\<inter> space M = {x\\<in> space M. stake n x = stake n w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<inter> space M =\n    {x \\<in> space M. stake n x = stake n w}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<inter> space M =\n    {x \\<in> space M. stake n x = stake n w}", "have \"(pseudo_proj_True n) -` {w} = {x. stake n x = stake n w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} = {x. stake n x = stake n w}", "using assms"], ["proof (prove)\nusing this:\n  w = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} = {x. stake n x = stake n w}", "by (simp add:pseudo_proj_True_preimage_stake)"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {w} = {x. stake n x = stake n w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<inter> space M =\n    {x \\<in> space M. stake n x = stake n w}", "hence \"(pseudo_proj_True n) -` {w}\\<inter> space M = {x. stake n x = stake n w}\\<inter> space M\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n -` {w} = {x. stake n x = stake n w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<inter> space M =\n    {x. stake n x = stake n w} \\<inter> space M", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {w} \\<inter> space M =\n  {x. stake n x = stake n w} \\<inter> space M\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<inter> space M =\n    {x \\<in> space M. stake n x = stake n w}", "also"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {w} \\<inter> space M =\n  {x. stake n x = stake n w} \\<inter> space M\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<inter> space M =\n    {x \\<in> space M. stake n x = stake n w}", "have \"... = {x\\<in> space M. stake n x = stake n w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. stake n x = stake n w} \\<inter> space M =\n    {x \\<in> space M. stake n x = stake n w}", "by auto"], ["proof (state)\nthis:\n  {x. stake n x = stake n w} \\<inter> space M =\n  {x \\<in> space M. stake n x = stake n w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<inter> space M =\n    {x \\<in> space M. stake n x = stake n w}", "finally"], ["proof (chain)\npicking this:\n  pseudo_proj_True n -` {w} \\<inter> space M =\n  {x \\<in> space M. stake n x = stake n w}", "show ?thesis"], ["proof (prove)\nusing this:\n  pseudo_proj_True n -` {w} \\<inter> space M =\n  {x \\<in> space M. stake n x = stake n w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<inter> space M =\n    {x \\<in> space M. stake n x = stake n w}", "."], ["proof (state)\nthis:\n  pseudo_proj_True n -` {w} \\<inter> space M =\n  {x \\<in> space M. stake n x = stake n w}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_singleton:\n  assumes \"w = pseudo_proj_True n w\"\n  shows \"(pseudo_proj_True n) -`{w} \\<inter> (space (bernoulli_stream p)) \\<in> sets (bernoulli_stream p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "proof (cases \"{m. (Suc m) \\<le> n} = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)\n 2. {m. Suc m \\<le> n} \\<noteq> {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "case False"], ["proof (state)\nthis:\n  {m. Suc m \\<le> n} \\<noteq> {}\n\ngoal (2 subgoals):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)\n 2. {m. Suc m \\<le> n} \\<noteq> {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "have \"\\<And>i. (\\<lambda>x. snth x i) \\<in> measurable (bernoulli_stream p) (count_space UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. Measurable.pred (bernoulli_stream p) (\\<lambda>x. x !! i)", "by (simp add: measurable_snth_count_space)"], ["proof (state)\nthis:\n  Measurable.pred (bernoulli_stream p) (\\<lambda>x. x !! ?i1)\n\ngoal (2 subgoals):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)\n 2. {m. Suc m \\<le> n} \\<noteq> {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "have fi: \"\\<And>i. Suc i \\<le> n \\<Longrightarrow> (\\<lambda>w. snth w i) -` {snth w i} \\<inter> (space (bernoulli_stream p)) \\<in> sets (bernoulli_stream p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "assume \"Suc i \\<le> n\""], ["proof (state)\nthis:\n  Suc i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "have \"(\\<lambda>x. snth x i) \\<in> measurable (bernoulli_stream p) (count_space UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Measurable.pred (bernoulli_stream p) (\\<lambda>x. x !! i)", "by (simp add: measurable_snth_count_space)"], ["proof (state)\nthis:\n  Measurable.pred (bernoulli_stream p) (\\<lambda>x. x !! i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "moreover"], ["proof (state)\nthis:\n  Measurable.pred (bernoulli_stream p) (\\<lambda>x. x !! i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "have \"{snth w i} \\<in> sets (count_space UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w !! i} \\<in> sets (count_space UNIV)", "by auto"], ["proof (state)\nthis:\n  {w !! i} \\<in> sets (count_space UNIV)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "ultimately"], ["proof (chain)\npicking this:\n  Measurable.pred (bernoulli_stream p) (\\<lambda>x. x !! i)\n  {w !! i} \\<in> sets (count_space UNIV)", "show \"(\\<lambda>x. snth x i) -` {snth w i}\\<inter> (space (bernoulli_stream p)) \\<in> sets (bernoulli_stream p)\""], ["proof (prove)\nusing this:\n  Measurable.pred (bernoulli_stream p) (\\<lambda>x. x !! i)\n  {w !! i} \\<in> sets (count_space UNIV)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "unfolding measurable_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. x !! i)\n  \\<in> {f \\<in> space (bernoulli_stream p) \\<rightarrow>\n                 space (count_space UNIV).\n         \\<forall>y\\<in>sets (count_space UNIV).\n            f -` y \\<inter> space (bernoulli_stream p)\n            \\<in> sets (bernoulli_stream p)}\n  {w !! i} \\<in> sets (count_space UNIV)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "by (simp add: measurable_snth_count_space)"], ["proof (state)\nthis:\n  (\\<lambda>x. x !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n  \\<in> sets (bernoulli_stream p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Suc ?i1 \\<le> n \\<Longrightarrow>\n  (\\<lambda>w. w !! ?i1) -` {w !! ?i1} \\<inter> space (bernoulli_stream p)\n  \\<in> sets (bernoulli_stream p)\n\ngoal (2 subgoals):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)\n 2. {m. Suc m \\<le> n} \\<noteq> {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "have \"(\\<Inter>i\\<in> {m. (Suc m) \\<le> n}. (\\<lambda>w. snth w i) -` {snth w i}\\<inter> (space (bernoulli_stream p))) \\<in> sets (bernoulli_stream p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n        (\\<lambda>w. w !! i) -` {w !! i} \\<inter>\n        space (bernoulli_stream p))\n    \\<in> sets (bernoulli_stream p)", "proof ((rule sigma_algebra.countable_INT''), auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. sigma_algebra ?\\<Omega> (sets (bernoulli_stream p))\n 2. UNIV \\<in> sets (bernoulli_stream p)\n 3. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "show \"sigma_algebra (space (bernoulli_stream p)) (sets (bernoulli_stream p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_algebra (space (bernoulli_stream p)) (sets (bernoulli_stream p))", "using measure_space measure_space_def"], ["proof (prove)\nusing this:\n  measure_space (space ?M) (sets ?M) (emeasure ?M)\n  measure_space ?\\<Omega> ?A ?\\<mu> =\n  (sigma_algebra ?\\<Omega> ?A \\<and>\n   positive ?A ?\\<mu> \\<and> countably_additive ?A ?\\<mu>)\n\ngoal (1 subgoal):\n 1. sigma_algebra (space (bernoulli_stream p)) (sets (bernoulli_stream p))", "by auto"], ["proof (state)\nthis:\n  sigma_algebra (space (bernoulli_stream p)) (sets (bernoulli_stream p))\n\ngoal (2 subgoals):\n 1. UNIV \\<in> sets (bernoulli_stream p)\n 2. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "show \"UNIV \\<in> sets (bernoulli_stream p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV \\<in> sets (bernoulli_stream p)", "by (metis bernoulli_stream_space sets.top streams_UNIV)"], ["proof (state)\nthis:\n  UNIV \\<in> sets (bernoulli_stream p)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "show \"\\<And>i. Suc i \\<le> n \\<Longrightarrow> (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p) \\<in> sets (bernoulli_stream p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "using fi"], ["proof (prove)\nusing this:\n  Suc ?i1 \\<le> n \\<Longrightarrow>\n  (\\<lambda>w. w !! ?i1) -` {w !! ?i1} \\<inter> space (bernoulli_stream p)\n  \\<in> sets (bernoulli_stream p)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "by simp"], ["proof (state)\nthis:\n  Suc ?i1 \\<le> n \\<Longrightarrow>\n  (\\<lambda>w. w !! ?i1) -` {w !! ?i1} \\<inter> space (bernoulli_stream p)\n  \\<in> sets (bernoulli_stream p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p))\n  \\<in> sets (bernoulli_stream p)\n\ngoal (2 subgoals):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)\n 2. {m. Suc m \\<le> n} \\<noteq> {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "moreover"], ["proof (state)\nthis:\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p))\n  \\<in> sets (bernoulli_stream p)\n\ngoal (2 subgoals):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)\n 2. {m. Suc m \\<le> n} \\<noteq> {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "have \"(\\<Inter>i\\<in> {m. (Suc m) \\<le> n}. (\\<lambda>w. snth w i) -` {snth w i}\\<inter> (space (bernoulli_stream p))) =\n    (\\<Inter>i\\<in> {m. (Suc m) \\<le> n}. (\\<lambda>w. snth w i) -` {snth w i})\\<inter> (space (bernoulli_stream p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n        (\\<lambda>w. w !! i) -` {w !! i} \\<inter>\n        space (bernoulli_stream p)) =\n    (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n        (\\<lambda>w. w !! i) -` {w !! i}) \\<inter>\n    space (bernoulli_stream p)", "using False Inter_nonempty_distrib"], ["proof (prove)\nusing this:\n  {m. Suc m \\<le> n} \\<noteq> {}\n  ?A \\<noteq> {} \\<Longrightarrow>\n  \\<Inter> ?A \\<inter> ?B = (\\<Inter>C\\<in>?A. C \\<inter> ?B)\n\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n        (\\<lambda>w. w !! i) -` {w !! i} \\<inter>\n        space (bernoulli_stream p)) =\n    (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n        (\\<lambda>w. w !! i) -` {w !! i}) \\<inter>\n    space (bernoulli_stream p)", "by auto"], ["proof (state)\nthis:\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i} \\<inter>\n      space (bernoulli_stream p)) =\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i}) \\<inter>\n  space (bernoulli_stream p)\n\ngoal (2 subgoals):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)\n 2. {m. Suc m \\<le> n} \\<noteq> {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p))\n  \\<in> sets (bernoulli_stream p)\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i} \\<inter>\n      space (bernoulli_stream p)) =\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i}) \\<inter>\n  space (bernoulli_stream p)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p))\n  \\<in> sets (bernoulli_stream p)\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i} \\<inter>\n      space (bernoulli_stream p)) =\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i}) \\<inter>\n  space (bernoulli_stream p)\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "using assms pseudo_proj_True_preimage[of w n]"], ["proof (prove)\nusing this:\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p))\n  \\<in> sets (bernoulli_stream p)\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i} \\<inter>\n      space (bernoulli_stream p)) =\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i}) \\<inter>\n  space (bernoulli_stream p)\n  w = pseudo_proj_True n w\n  w = pseudo_proj_True n w \\<Longrightarrow>\n  pseudo_proj_True n -` {w} =\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}. (\\<lambda>w. w !! i) -` {w !! i})\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n  \\<in> sets (bernoulli_stream p)\n\ngoal (1 subgoal):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "case True"], ["proof (state)\nthis:\n  {m. Suc m \\<le> n} = {}\n\ngoal (1 subgoal):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "hence \"n = 0\""], ["proof (prove)\nusing this:\n  {m. Suc m \\<le> n} = {}\n\ngoal (1 subgoal):\n 1. n = 0", "using less_eq_Suc_le"], ["proof (prove)\nusing this:\n  {m. Suc m \\<le> n} = {}\n  (?n < ?m) = (Suc ?n \\<le> ?m)\n\ngoal (1 subgoal):\n 1. n = 0", "by auto"], ["proof (state)\nthis:\n  n = 0\n\ngoal (1 subgoal):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "hence \"pseudo_proj_True n = (\\<lambda>w. sconst True)\""], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n = (\\<lambda>w. sconst True)", "by (simp add: pseudo_proj_True_def)"], ["proof (state)\nthis:\n  pseudo_proj_True n = (\\<lambda>w. sconst True)\n\ngoal (1 subgoal):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "hence \"w = sconst True\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n = (\\<lambda>w. sconst True)\n\ngoal (1 subgoal):\n 1. w = sconst True", "using assms"], ["proof (prove)\nusing this:\n  pseudo_proj_True n = (\\<lambda>w. sconst True)\n  w = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. w = sconst True", "by simp"], ["proof (state)\nthis:\n  w = sconst True\n\ngoal (1 subgoal):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "hence \"(pseudo_proj_True n) -`{w} \\<inter> (space (bernoulli_stream p)) = (space (bernoulli_stream p))\""], ["proof (prove)\nusing this:\n  w = sconst True\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p) =\n    space (bernoulli_stream p)", "by (simp add: \\<open>pseudo_proj_True n = (\\<lambda>w. sconst True)\\<close>)"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p) =\n  space (bernoulli_stream p)\n\ngoal (1 subgoal):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "thus \"(pseudo_proj_True n) -`{w} \\<inter> (space (bernoulli_stream p))\\<in> sets (bernoulli_stream p)\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p) =\n  space (bernoulli_stream p)\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n  \\<in> sets (bernoulli_stream p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_False_singleton:\n  assumes \"w = pseudo_proj_False n w\"\n  shows \"(pseudo_proj_False n) -`{w} \\<inter> (space (bernoulli_stream p)) \\<in> sets (bernoulli_stream p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "proof (cases \"{m. (Suc m) \\<le> n} = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)\n 2. {m. Suc m \\<le> n} \\<noteq> {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "case False"], ["proof (state)\nthis:\n  {m. Suc m \\<le> n} \\<noteq> {}\n\ngoal (2 subgoals):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)\n 2. {m. Suc m \\<le> n} \\<noteq> {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "have \"\\<And>i. (\\<lambda>x. snth x i) \\<in> measurable (bernoulli_stream p) (count_space UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. Measurable.pred (bernoulli_stream p) (\\<lambda>x. x !! i)", "by (simp add: measurable_snth_count_space)"], ["proof (state)\nthis:\n  Measurable.pred (bernoulli_stream p) (\\<lambda>x. x !! ?i1)\n\ngoal (2 subgoals):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)\n 2. {m. Suc m \\<le> n} \\<noteq> {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "have fi: \"\\<And>i. Suc i \\<le> n \\<Longrightarrow> (\\<lambda>w. snth w i) -` {snth w i} \\<inter> (space (bernoulli_stream p)) \\<in> sets (bernoulli_stream p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "assume \"Suc i \\<le> n\""], ["proof (state)\nthis:\n  Suc i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "have \"(\\<lambda>x. snth x i) \\<in> measurable (bernoulli_stream p) (count_space UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Measurable.pred (bernoulli_stream p) (\\<lambda>x. x !! i)", "by (simp add: measurable_snth_count_space)"], ["proof (state)\nthis:\n  Measurable.pred (bernoulli_stream p) (\\<lambda>x. x !! i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "moreover"], ["proof (state)\nthis:\n  Measurable.pred (bernoulli_stream p) (\\<lambda>x. x !! i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "have \"{snth w i} \\<in> sets (count_space UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w !! i} \\<in> sets (count_space UNIV)", "by auto"], ["proof (state)\nthis:\n  {w !! i} \\<in> sets (count_space UNIV)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "ultimately"], ["proof (chain)\npicking this:\n  Measurable.pred (bernoulli_stream p) (\\<lambda>x. x !! i)\n  {w !! i} \\<in> sets (count_space UNIV)", "show \"(\\<lambda>x. snth x i) -` {snth w i}\\<inter> (space (bernoulli_stream p)) \\<in> sets (bernoulli_stream p)\""], ["proof (prove)\nusing this:\n  Measurable.pred (bernoulli_stream p) (\\<lambda>x. x !! i)\n  {w !! i} \\<in> sets (count_space UNIV)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "unfolding measurable_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. x !! i)\n  \\<in> {f \\<in> space (bernoulli_stream p) \\<rightarrow>\n                 space (count_space UNIV).\n         \\<forall>y\\<in>sets (count_space UNIV).\n            f -` y \\<inter> space (bernoulli_stream p)\n            \\<in> sets (bernoulli_stream p)}\n  {w !! i} \\<in> sets (count_space UNIV)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "by (simp add: measurable_snth_count_space)"], ["proof (state)\nthis:\n  (\\<lambda>x. x !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n  \\<in> sets (bernoulli_stream p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Suc ?i1 \\<le> n \\<Longrightarrow>\n  (\\<lambda>w. w !! ?i1) -` {w !! ?i1} \\<inter> space (bernoulli_stream p)\n  \\<in> sets (bernoulli_stream p)\n\ngoal (2 subgoals):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)\n 2. {m. Suc m \\<le> n} \\<noteq> {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "have \"(\\<Inter>i\\<in> {m. (Suc m) \\<le> n}. (\\<lambda>w. snth w i) -` {snth w i}\\<inter> (space (bernoulli_stream p))) \\<in> sets (bernoulli_stream p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n        (\\<lambda>w. w !! i) -` {w !! i} \\<inter>\n        space (bernoulli_stream p))\n    \\<in> sets (bernoulli_stream p)", "proof ((rule sigma_algebra.countable_INT''), auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. sigma_algebra ?\\<Omega> (sets (bernoulli_stream p))\n 2. UNIV \\<in> sets (bernoulli_stream p)\n 3. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "show \"sigma_algebra (space (bernoulli_stream p)) (sets (bernoulli_stream p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_algebra (space (bernoulli_stream p)) (sets (bernoulli_stream p))", "using measure_space measure_space_def"], ["proof (prove)\nusing this:\n  measure_space (space ?M) (sets ?M) (emeasure ?M)\n  measure_space ?\\<Omega> ?A ?\\<mu> =\n  (sigma_algebra ?\\<Omega> ?A \\<and>\n   positive ?A ?\\<mu> \\<and> countably_additive ?A ?\\<mu>)\n\ngoal (1 subgoal):\n 1. sigma_algebra (space (bernoulli_stream p)) (sets (bernoulli_stream p))", "by auto"], ["proof (state)\nthis:\n  sigma_algebra (space (bernoulli_stream p)) (sets (bernoulli_stream p))\n\ngoal (2 subgoals):\n 1. UNIV \\<in> sets (bernoulli_stream p)\n 2. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "show \"UNIV \\<in> sets (bernoulli_stream p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV \\<in> sets (bernoulli_stream p)", "by (metis bernoulli_stream_space sets.top streams_UNIV)"], ["proof (state)\nthis:\n  UNIV \\<in> sets (bernoulli_stream p)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "show \"\\<And>i. Suc i \\<le> n \\<Longrightarrow> (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p) \\<in> sets (bernoulli_stream p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "using fi"], ["proof (prove)\nusing this:\n  Suc ?i1 \\<le> n \\<Longrightarrow>\n  (\\<lambda>w. w !! ?i1) -` {w !! ?i1} \\<inter> space (bernoulli_stream p)\n  \\<in> sets (bernoulli_stream p)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p)\n       \\<in> sets (bernoulli_stream p)", "by simp"], ["proof (state)\nthis:\n  Suc ?i1 \\<le> n \\<Longrightarrow>\n  (\\<lambda>w. w !! ?i1) -` {w !! ?i1} \\<inter> space (bernoulli_stream p)\n  \\<in> sets (bernoulli_stream p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p))\n  \\<in> sets (bernoulli_stream p)\n\ngoal (2 subgoals):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)\n 2. {m. Suc m \\<le> n} \\<noteq> {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "moreover"], ["proof (state)\nthis:\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p))\n  \\<in> sets (bernoulli_stream p)\n\ngoal (2 subgoals):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)\n 2. {m. Suc m \\<le> n} \\<noteq> {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "have \"(\\<Inter>i\\<in> {m. (Suc m) \\<le> n}. (\\<lambda>w. snth w i) -` {snth w i}\\<inter> (space (bernoulli_stream p))) =\n    (\\<Inter>i\\<in> {m. (Suc m) \\<le> n}. (\\<lambda>w. snth w i) -` {snth w i})\\<inter> (space (bernoulli_stream p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n        (\\<lambda>w. w !! i) -` {w !! i} \\<inter>\n        space (bernoulli_stream p)) =\n    (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n        (\\<lambda>w. w !! i) -` {w !! i}) \\<inter>\n    space (bernoulli_stream p)", "using False Inter_nonempty_distrib"], ["proof (prove)\nusing this:\n  {m. Suc m \\<le> n} \\<noteq> {}\n  ?A \\<noteq> {} \\<Longrightarrow>\n  \\<Inter> ?A \\<inter> ?B = (\\<Inter>C\\<in>?A. C \\<inter> ?B)\n\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n        (\\<lambda>w. w !! i) -` {w !! i} \\<inter>\n        space (bernoulli_stream p)) =\n    (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n        (\\<lambda>w. w !! i) -` {w !! i}) \\<inter>\n    space (bernoulli_stream p)", "by auto"], ["proof (state)\nthis:\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i} \\<inter>\n      space (bernoulli_stream p)) =\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i}) \\<inter>\n  space (bernoulli_stream p)\n\ngoal (2 subgoals):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)\n 2. {m. Suc m \\<le> n} \\<noteq> {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p))\n  \\<in> sets (bernoulli_stream p)\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i} \\<inter>\n      space (bernoulli_stream p)) =\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i}) \\<inter>\n  space (bernoulli_stream p)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p))\n  \\<in> sets (bernoulli_stream p)\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i} \\<inter>\n      space (bernoulli_stream p)) =\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i}) \\<inter>\n  space (bernoulli_stream p)\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "using assms pseudo_proj_False_preimage[of w n]"], ["proof (prove)\nusing this:\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i} \\<inter> space (bernoulli_stream p))\n  \\<in> sets (bernoulli_stream p)\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i} \\<inter>\n      space (bernoulli_stream p)) =\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}.\n      (\\<lambda>w. w !! i) -` {w !! i}) \\<inter>\n  space (bernoulli_stream p)\n  w = pseudo_proj_False n w\n  w = pseudo_proj_False n w \\<Longrightarrow>\n  pseudo_proj_False n -` {w} =\n  (\\<Inter>i\\<in>{m. Suc m \\<le> n}. (\\<lambda>w. w !! i) -` {w !! i})\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n  \\<in> sets (bernoulli_stream p)\n\ngoal (1 subgoal):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "case True"], ["proof (state)\nthis:\n  {m. Suc m \\<le> n} = {}\n\ngoal (1 subgoal):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "hence \"n = 0\""], ["proof (prove)\nusing this:\n  {m. Suc m \\<le> n} = {}\n\ngoal (1 subgoal):\n 1. n = 0", "using less_eq_Suc_le"], ["proof (prove)\nusing this:\n  {m. Suc m \\<le> n} = {}\n  (?n < ?m) = (Suc ?n \\<le> ?m)\n\ngoal (1 subgoal):\n 1. n = 0", "by auto"], ["proof (state)\nthis:\n  n = 0\n\ngoal (1 subgoal):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "hence \"pseudo_proj_False n = (\\<lambda>w. False ## sconst True)\""], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n = (\\<lambda>w. False ## sconst True)", "by (simp add: pseudo_proj_False_def)"], ["proof (state)\nthis:\n  pseudo_proj_False n = (\\<lambda>w. False ## sconst True)\n\ngoal (1 subgoal):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "hence \"w = False ## sconst True\""], ["proof (prove)\nusing this:\n  pseudo_proj_False n = (\\<lambda>w. False ## sconst True)\n\ngoal (1 subgoal):\n 1. w = False ## sconst True", "using assms"], ["proof (prove)\nusing this:\n  pseudo_proj_False n = (\\<lambda>w. False ## sconst True)\n  w = pseudo_proj_False n w\n\ngoal (1 subgoal):\n 1. w = False ## sconst True", "by simp"], ["proof (state)\nthis:\n  w = False ## sconst True\n\ngoal (1 subgoal):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "hence \"(pseudo_proj_False n) -`{w} \\<inter> (space (bernoulli_stream p)) = (space (bernoulli_stream p))\""], ["proof (prove)\nusing this:\n  w = False ## sconst True\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p) =\n    space (bernoulli_stream p)", "by (simp add: \\<open>pseudo_proj_False n = (\\<lambda>w. False##sconst True)\\<close>)"], ["proof (state)\nthis:\n  pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p) =\n  space (bernoulli_stream p)\n\ngoal (1 subgoal):\n 1. {m. Suc m \\<le> n} = {} \\<Longrightarrow>\n    pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "thus \"(pseudo_proj_False n) -`{w} \\<inter> (space (bernoulli_stream p))\\<in> sets (bernoulli_stream p)\""], ["proof (prove)\nusing this:\n  pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p) =\n  space (bernoulli_stream p)\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n    \\<in> sets (bernoulli_stream p)", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_False n -` {w} \\<inter> space (bernoulli_stream p)\n  \\<in> sets (bernoulli_stream p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_inverse_induct:\n  assumes \"w \\<in> range (pseudo_proj_True n)\"\n  shows \"(pseudo_proj_True n) -` {w} =\n    (pseudo_proj_True (Suc n)) -` {w} \\<union> (pseudo_proj_True (Suc n)) -`{pseudo_proj_False n w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} =\n    pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. pseudo_proj_True n -` {w}\n    \\<subseteq> pseudo_proj_True (Suc n) -` {w} \\<union>\n                pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n 2. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "let ?y = \"pseudo_proj_False n w\""], ["proof (state)\ngoal (2 subgoals):\n 1. pseudo_proj_True n -` {w}\n    \\<subseteq> pseudo_proj_True (Suc n) -` {w} \\<union>\n                pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n 2. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "show \"(pseudo_proj_True n) -` {w} \\<subseteq> (pseudo_proj_True (Suc n)) -` {w} \\<union> (pseudo_proj_True (Suc n)) -`{?y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w}\n    \\<subseteq> pseudo_proj_True (Suc n) -` {w} \\<union>\n                pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` {w} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<union>\n               pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` {w} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<union>\n               pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}", "assume \"z\\<in> pseudo_proj_True n -`{w}\""], ["proof (state)\nthis:\n  z \\<in> pseudo_proj_True n -` {w}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` {w} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<union>\n               pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}", "thus \"z\\<in> pseudo_proj_True (Suc n) -`{w} \\<union> pseudo_proj_True (Suc n) -`{?y}\""], ["proof (prove)\nusing this:\n  z \\<in> pseudo_proj_True n -` {w}\n\ngoal (1 subgoal):\n 1. z \\<in> pseudo_proj_True (Suc n) -` {w} \\<union>\n            pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}", "using pseudo_proj_False_def pseudo_proj_True_def pseudo_proj_True_stake\n      pseudo_proj_True_suc_img"], ["proof (prove)\nusing this:\n  z \\<in> pseudo_proj_True n -` {w}\n  pseudo_proj_False ?n = (\\<lambda>w. (stake ?n w @ [False]) @- sconst True)\n  pseudo_proj_True ?n = (\\<lambda>w. stake ?n w @- sconst True)\n  stake ?n (pseudo_proj_True ?n ?w) = stake ?n ?w\n  pseudo_proj_True (Suc ?n) ?w\n  \\<in> {pseudo_proj_True ?n ?w, pseudo_proj_False ?n ?w}\n\ngoal (1 subgoal):\n 1. z \\<in> pseudo_proj_True (Suc n) -` {w} \\<union>\n            pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}", "by fastforce"], ["proof (state)\nthis:\n  z \\<in> pseudo_proj_True (Suc n) -` {w} \\<union>\n          pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {w}\n  \\<subseteq> pseudo_proj_True (Suc n) -` {w} \\<union>\n              pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "{"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {w}\n  \\<subseteq> pseudo_proj_True (Suc n) -` {w} \\<union>\n              pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "assume \"z \\<in> pseudo_proj_True (Suc n) -` {w}\""], ["proof (state)\nthis:\n  z \\<in> pseudo_proj_True (Suc n) -` {w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "hence \"pseudo_proj_True (Suc n) z = w\""], ["proof (prove)\nusing this:\n  z \\<in> pseudo_proj_True (Suc n) -` {w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) z = w", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) z = w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "hence \"pseudo_proj_True n z = pseudo_proj_True n w\""], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) z = w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n z = pseudo_proj_True n w", "by (metis  pseudo_proj_True_proj_Suc)"], ["proof (state)\nthis:\n  pseudo_proj_True n z = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "also"], ["proof (state)\nthis:\n  pseudo_proj_True n z = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "have \"... = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = w", "using assms pseudo_proj_True_def pseudo_proj_True_stake"], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True n)\n  pseudo_proj_True ?n = (\\<lambda>w. stake ?n w @- sconst True)\n  stake ?n (pseudo_proj_True ?n ?w) = stake ?n ?w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = w", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True n w = w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "finally"], ["proof (chain)\npicking this:\n  pseudo_proj_True n z = w", "have \"pseudo_proj_True n z = w\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n z = w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n z = w", "."], ["proof (state)\nthis:\n  pseudo_proj_True n z = w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "}"], ["proof (state)\nthis:\n  ?z3 \\<in> pseudo_proj_True (Suc n) -` {w} \\<Longrightarrow>\n  pseudo_proj_True n ?z3 = w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "hence fst: \"pseudo_proj_True (Suc n) -` {w} \\<subseteq> (pseudo_proj_True n) -` {w}\""], ["proof (prove)\nusing this:\n  ?z3 \\<in> pseudo_proj_True (Suc n) -` {w} \\<Longrightarrow>\n  pseudo_proj_True n ?z3 = w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<subseteq> pseudo_proj_True n -` {w}", "by blast"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) -` {w} \\<subseteq> pseudo_proj_True n -` {w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "{"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) -` {w} \\<subseteq> pseudo_proj_True n -` {w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "assume \"z \\<in> pseudo_proj_True (Suc n) -` {?y}\""], ["proof (state)\nthis:\n  z \\<in> pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "hence \"pseudo_proj_True n z = pseudo_proj_True n w\""], ["proof (prove)\nusing this:\n  z \\<in> pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n z = pseudo_proj_True n w", "by (metis append1_eq_conv append_Nil2 cancel_comm_monoid_add_class.diff_cancel\n        length_append_singleton length_stake order_refl pseudo_proj_False_def\n        pseudo_proj_True_stake pseudo_proj_True_stake_image stake_Suc stake_invert_Nil stake_shift\n        take_all vimage_singleton_eq)"], ["proof (state)\nthis:\n  pseudo_proj_True n z = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "also"], ["proof (state)\nthis:\n  pseudo_proj_True n z = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "have \"... = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = w", "using assms pseudo_proj_True_def pseudo_proj_True_stake"], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True n)\n  pseudo_proj_True ?n = (\\<lambda>w. stake ?n w @- sconst True)\n  stake ?n (pseudo_proj_True ?n ?w) = stake ?n ?w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = w", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True n w = w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "finally"], ["proof (chain)\npicking this:\n  pseudo_proj_True n z = w", "have \"pseudo_proj_True n z = w\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n z = w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n z = w", "."], ["proof (state)\nthis:\n  pseudo_proj_True n z = w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "}"], ["proof (state)\nthis:\n  ?z3\n  \\<in> pseudo_proj_True (Suc n) -`\n        {pseudo_proj_False n w} \\<Longrightarrow>\n  pseudo_proj_True n ?z3 = w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "hence scd: \"pseudo_proj_True (Suc n) -` {?y} \\<subseteq> (pseudo_proj_True n) -` {w}\""], ["proof (prove)\nusing this:\n  ?z3\n  \\<in> pseudo_proj_True (Suc n) -`\n        {pseudo_proj_False n w} \\<Longrightarrow>\n  pseudo_proj_True n ?z3 = w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "by blast"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n  \\<subseteq> pseudo_proj_True n -` {w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "show \"(pseudo_proj_True (Suc n)) -` {w} \\<union> (pseudo_proj_True (Suc n)) -`{?y} \\<subseteq> (pseudo_proj_True n) -` {w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "using fst scd"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) -` {w} \\<subseteq> pseudo_proj_True n -` {w}\n  pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n  \\<subseteq> pseudo_proj_True n -` {w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<union>\n    pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n    \\<subseteq> pseudo_proj_True n -` {w}", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) -` {w} \\<union>\n  pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}\n  \\<subseteq> pseudo_proj_True n -` {w}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Natural filtration locale\\<close>"], ["", "text \\<open>This part is mainly devoted to the proof that the projection function defined above indeed\npermits to obtain a filtration on the infinite coin toss space, and that this filtration is initially trivial.\\<close>"], ["", "definition (in infinite_coin_toss_space) nat_filtration::\"nat \\<Rightarrow> bool stream measure\" where\n  \"nat_filtration n = fct_gen_subalgebra M M (pseudo_proj_True n)\""], ["", "locale infinite_cts_filtration = infinite_coin_toss_space +\n  fixes F\n  assumes natural_filtration: \"F = nat_filtration\""], ["", "lemma (in infinite_coin_toss_space) nat_filtration_space:\n  shows \"space (nat_filtration n) = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space (nat_filtration n) = UNIV", "by (metis bernoulli bernoulli_stream_space fct_gen_subalgebra_space nat_filtration_def streams_UNIV)"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_sets:\n  shows \"sets (nat_filtration n) =\n    sigma_sets (space (bernoulli_stream p))\n            {pseudo_proj_True n -` B \\<inter> space M |B. B \\<in> sets (bernoulli_stream p)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (nat_filtration n) =\n    sigma_sets (space (bernoulli_stream p))\n     {pseudo_proj_True n -` B \\<inter> space M |B.\n      B \\<in> sets (bernoulli_stream p)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sets (nat_filtration n) =\n    sigma_sets (space (bernoulli_stream p))\n     {pseudo_proj_True n -` B \\<inter> space M |B.\n      B \\<in> sets (bernoulli_stream p)}", "have \"sigma_sets (space M) {pseudo_proj_True n -` S \\<inter> space M |S. S \\<in> sets (bernoulli_stream p)} =\n    sets (fct_gen_subalgebra M M (pseudo_proj_True n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_sets (space M)\n     {pseudo_proj_True n -` S \\<inter> space M |S.\n      S \\<in> sets (bernoulli_stream p)} =\n    sets (fct_gen_subalgebra M M (pseudo_proj_True n))", "using bernoulli fct_gen_subalgebra_sets pseudo_proj_True_measurable"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  sets (fct_gen_subalgebra ?M ?N ?X) =\n  sigma_sets (space ?M) {?X -` B \\<inter> space ?M |B. B \\<in> sets ?N}\n  pseudo_proj_True ?n\n  \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n\ngoal (1 subgoal):\n 1. sigma_sets (space M)\n     {pseudo_proj_True n -` S \\<inter> space M |S.\n      S \\<in> sets (bernoulli_stream p)} =\n    sets (fct_gen_subalgebra M M (pseudo_proj_True n))", "by blast"], ["proof (state)\nthis:\n  sigma_sets (space M)\n   {pseudo_proj_True n -` S \\<inter> space M |S.\n    S \\<in> sets (bernoulli_stream p)} =\n  sets (fct_gen_subalgebra M M (pseudo_proj_True n))\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) =\n    sigma_sets (space (bernoulli_stream p))\n     {pseudo_proj_True n -` B \\<inter> space M |B.\n      B \\<in> sets (bernoulli_stream p)}", "then"], ["proof (chain)\npicking this:\n  sigma_sets (space M)\n   {pseudo_proj_True n -` S \\<inter> space M |S.\n    S \\<in> sets (bernoulli_stream p)} =\n  sets (fct_gen_subalgebra M M (pseudo_proj_True n))", "show ?thesis"], ["proof (prove)\nusing this:\n  sigma_sets (space M)\n   {pseudo_proj_True n -` S \\<inter> space M |S.\n    S \\<in> sets (bernoulli_stream p)} =\n  sets (fct_gen_subalgebra M M (pseudo_proj_True n))\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) =\n    sigma_sets (space (bernoulli_stream p))\n     {pseudo_proj_True n -` B \\<inter> space M |B.\n      B \\<in> sets (bernoulli_stream p)}", "using bernoulli nat_filtration_def"], ["proof (prove)\nusing this:\n  sigma_sets (space M)\n   {pseudo_proj_True n -` S \\<inter> space M |S.\n    S \\<in> sets (bernoulli_stream p)} =\n  sets (fct_gen_subalgebra M M (pseudo_proj_True n))\n  M = bernoulli_stream p\n  nat_filtration ?n = fct_gen_subalgebra M M (pseudo_proj_True ?n)\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) =\n    sigma_sets (space (bernoulli_stream p))\n     {pseudo_proj_True n -` B \\<inter> space M |B.\n      B \\<in> sets (bernoulli_stream p)}", "by force"], ["proof (state)\nthis:\n  sets (nat_filtration n) =\n  sigma_sets (space (bernoulli_stream p))\n   {pseudo_proj_True n -` B \\<inter> space M |B.\n    B \\<in> sets (bernoulli_stream p)}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_singleton:\n  assumes \"pseudo_proj_True n w = w\"\n  shows \"pseudo_proj_True n -`{w} \\<in> sets (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<in> sets (nat_filtration n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<in> sets (nat_filtration n)", "let ?pw = \"pseudo_proj_True n -`{w}\""], ["proof (state)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<in> sets (nat_filtration n)", "have memset:\"?pw \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<in> events", "using bernoulli assms bernoulli_stream_preimage[of _ _ \"pseudo_proj_True n\"]\n      pseudo_proj_True_singleton[of w n]"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  pseudo_proj_True n w = w\n  ?N = bernoulli_stream ?p \\<Longrightarrow>\n  pseudo_proj_True n -` ?A \\<inter> space ?N = pseudo_proj_True n -` ?A\n  w = pseudo_proj_True n w \\<Longrightarrow>\n  pseudo_proj_True n -` {w} \\<inter> space (bernoulli_stream p)\n  \\<in> sets (bernoulli_stream p)\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<in> events", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {w} \\<in> events\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<in> sets (nat_filtration n)", "have \"pseudo_proj_True n -`?pw \\<in> sets (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` pseudo_proj_True n -` {w}\n    \\<in> sets (nat_filtration n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` pseudo_proj_True n -` {w}\n    \\<in> sets (nat_filtration n)", "have \"pseudo_proj_True n -`?pw \\<inter> (space M) \\<in> sets (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` pseudo_proj_True n -` {w} \\<inter> space M\n    \\<in> sets (nat_filtration n)", "using memset"], ["proof (prove)\nusing this:\n  pseudo_proj_True n -` {w} \\<in> events\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` pseudo_proj_True n -` {w} \\<inter> space M\n    \\<in> sets (nat_filtration n)", "by (metis fct_gen_subalgebra_sets_mem nat_filtration_def)"], ["proof (state)\nthis:\n  pseudo_proj_True n -` pseudo_proj_True n -` {w} \\<inter> space M\n  \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` pseudo_proj_True n -` {w}\n    \\<in> sets (nat_filtration n)", "moreover"], ["proof (state)\nthis:\n  pseudo_proj_True n -` pseudo_proj_True n -` {w} \\<inter> space M\n  \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` pseudo_proj_True n -` {w}\n    \\<in> sets (nat_filtration n)", "have \"pseudo_proj_True n -`?pw \\<inter> (space M) = pseudo_proj_True n -`?pw\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` pseudo_proj_True n -` {w} \\<inter> space M =\n    pseudo_proj_True n -` pseudo_proj_True n -` {w}", "using\n      bernoulli_stream_preimage[of _ _ \"pseudo_proj_True n\"] bernoulli"], ["proof (prove)\nusing this:\n  ?N = bernoulli_stream ?p \\<Longrightarrow>\n  pseudo_proj_True n -` ?A \\<inter> space ?N = pseudo_proj_True n -` ?A\n  M = bernoulli_stream p\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` pseudo_proj_True n -` {w} \\<inter> space M =\n    pseudo_proj_True n -` pseudo_proj_True n -` {w}", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True n -` pseudo_proj_True n -` {w} \\<inter> space M =\n  pseudo_proj_True n -` pseudo_proj_True n -` {w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` pseudo_proj_True n -` {w}\n    \\<in> sets (nat_filtration n)", "ultimately"], ["proof (chain)\npicking this:\n  pseudo_proj_True n -` pseudo_proj_True n -` {w} \\<inter> space M\n  \\<in> sets (nat_filtration n)\n  pseudo_proj_True n -` pseudo_proj_True n -` {w} \\<inter> space M =\n  pseudo_proj_True n -` pseudo_proj_True n -` {w}", "show \"pseudo_proj_True n -`?pw \\<in> sets (nat_filtration n)\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n -` pseudo_proj_True n -` {w} \\<inter> space M\n  \\<in> sets (nat_filtration n)\n  pseudo_proj_True n -` pseudo_proj_True n -` {w} \\<inter> space M =\n  pseudo_proj_True n -` pseudo_proj_True n -` {w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` pseudo_proj_True n -` {w}\n    \\<in> sets (nat_filtration n)", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True n -` pseudo_proj_True n -` {w}\n  \\<in> sets (nat_filtration n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_True n -` pseudo_proj_True n -` {w}\n  \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<in> sets (nat_filtration n)", "moreover"], ["proof (state)\nthis:\n  pseudo_proj_True n -` pseudo_proj_True n -` {w}\n  \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<in> sets (nat_filtration n)", "have \"pseudo_proj_True n -`?pw = ?pw\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` pseudo_proj_True n -` {w} =\n    pseudo_proj_True n -` {w}", "using pseudo_proj_True_proj"], ["proof (prove)\nusing this:\n  pseudo_proj_True ?n (pseudo_proj_True ?n ?w) = pseudo_proj_True ?n ?w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` pseudo_proj_True n -` {w} =\n    pseudo_proj_True n -` {w}", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True n -` pseudo_proj_True n -` {w} =\n  pseudo_proj_True n -` {w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<in> sets (nat_filtration n)", "ultimately"], ["proof (chain)\npicking this:\n  pseudo_proj_True n -` pseudo_proj_True n -` {w}\n  \\<in> sets (nat_filtration n)\n  pseudo_proj_True n -` pseudo_proj_True n -` {w} =\n  pseudo_proj_True n -` {w}", "show ?thesis"], ["proof (prove)\nusing this:\n  pseudo_proj_True n -` pseudo_proj_True n -` {w}\n  \\<in> sets (nat_filtration n)\n  pseudo_proj_True n -` pseudo_proj_True n -` {w} =\n  pseudo_proj_True n -` {w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<in> sets (nat_filtration n)", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {w} \\<in> sets (nat_filtration n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_pseudo_proj_True_measurable:\n  shows \"pseudo_proj_True n \\<in> measurable (nat_filtration n) M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n \\<in> nat_filtration n \\<rightarrow>\\<^sub>M M", "unfolding nat_filtration_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n\n    \\<in> fct_gen_subalgebra M M (pseudo_proj_True n) \\<rightarrow>\\<^sub>M\n          M", "using bernoulli fct_gen_subalgebra_fct_measurable[of \"pseudo_proj_True n\" M M]  pseudo_proj_True_measurable[of n]\n  bernoulli_stream_space"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  pseudo_proj_True n \\<in> space M \\<rightarrow> space M \\<Longrightarrow>\n  pseudo_proj_True n\n  \\<in> fct_gen_subalgebra M M (pseudo_proj_True n) \\<rightarrow>\\<^sub>M M\n  pseudo_proj_True n\n  \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n\n    \\<in> fct_gen_subalgebra M M (pseudo_proj_True n) \\<rightarrow>\\<^sub>M\n          M", "by auto"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_comp_measurable:\n  assumes \"f \\<in> measurable M N\"\n  and \"f \\<circ> pseudo_proj_True n = f\"\n  shows \"f \\<in> measurable (nat_filtration n) N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> nat_filtration n \\<rightarrow>\\<^sub>M N", "by (metis assms measurable_comp nat_filtration_pseudo_proj_True_measurable)"], ["", "definition (in infinite_coin_toss_space) set_discriminating where\n\"set_discriminating n f N \\<equiv> (\\<forall>w. f w \\<noteq> f (pseudo_proj_True n w) \\<longrightarrow>\n  (\\<exists>A\\<in>sets N. (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)))\""], ["", "lemma (in infinite_coin_toss_space) set_discriminating_if:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"f\\<in> borel_measurable (nat_filtration n)\"\n  shows \"set_discriminating n f borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_discriminating n f borel", "unfolding set_discriminating_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w.\n       f w \\<noteq> f (pseudo_proj_True n w) \\<longrightarrow>\n       (\\<exists>A\\<in>sets borel.\n           (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A))", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       f w \\<noteq> f (pseudo_proj_True n w) \\<Longrightarrow>\n       \\<exists>A\\<in>sets borel.\n          (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       f w \\<noteq> f (pseudo_proj_True n w) \\<Longrightarrow>\n       \\<exists>A\\<in>sets borel.\n          (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       f w \\<noteq> f (pseudo_proj_True n w) \\<Longrightarrow>\n       \\<exists>A\\<in>sets borel.\n          (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)", "assume \"f w \\<noteq> (f \\<circ> (pseudo_proj_True n)) w\""], ["proof (state)\nthis:\n  f w \\<noteq> (f \\<circ> pseudo_proj_True n) w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       f w \\<noteq> f (pseudo_proj_True n w) \\<Longrightarrow>\n       \\<exists>A\\<in>sets borel.\n          (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)", "hence \"\\<exists>U. open U \\<and> ( f w \\<in> U = ((f \\<circ> (pseudo_proj_True n)) w \\<notin> U))\""], ["proof (prove)\nusing this:\n  f w \\<noteq> (f \\<circ> pseudo_proj_True n) w\n\ngoal (1 subgoal):\n 1. \\<exists>U.\n       open U \\<and>\n       (f w \\<in> U) = ((f \\<circ> pseudo_proj_True n) w \\<notin> U)", "using separation_t0"], ["proof (prove)\nusing this:\n  f w \\<noteq> (f \\<circ> pseudo_proj_True n) w\n  (?x \\<noteq> ?y) =\n  (\\<exists>U. open U \\<and> (?x \\<in> U) \\<noteq> (?y \\<in> U))\n\ngoal (1 subgoal):\n 1. \\<exists>U.\n       open U \\<and>\n       (f w \\<in> U) = ((f \\<circ> pseudo_proj_True n) w \\<notin> U)", "by auto"], ["proof (state)\nthis:\n  \\<exists>U.\n     open U \\<and>\n     (f w \\<in> U) = ((f \\<circ> pseudo_proj_True n) w \\<notin> U)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       f w \\<noteq> f (pseudo_proj_True n w) \\<Longrightarrow>\n       \\<exists>A\\<in>sets borel.\n          (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>U.\n     open U \\<and>\n     (f w \\<in> U) = ((f \\<circ> pseudo_proj_True n) w \\<notin> U)", "obtain A where \"open A\" and \"f w\\<in> A = ((f \\<circ> (pseudo_proj_True n)) w \\<notin> A)\""], ["proof (prove)\nusing this:\n  \\<exists>U.\n     open U \\<and>\n     (f w \\<in> U) = ((f \\<circ> pseudo_proj_True n) w \\<notin> U)\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>open A;\n         (f w \\<in> A) =\n         ((f \\<circ> pseudo_proj_True n) w \\<notin> A)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  open A\n  (f w \\<in> A) = ((f \\<circ> pseudo_proj_True n) w \\<notin> A)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       f w \\<noteq> f (pseudo_proj_True n w) \\<Longrightarrow>\n       \\<exists>A\\<in>sets borel.\n          (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)", "note Ah = this"], ["proof (state)\nthis:\n  open A\n  (f w \\<in> A) = ((f \\<circ> pseudo_proj_True n) w \\<notin> A)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       f w \\<noteq> f (pseudo_proj_True n w) \\<Longrightarrow>\n       \\<exists>A\\<in>sets borel.\n          (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)", "have \"A\\<in> sets borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> sets borel", "using Ah"], ["proof (prove)\nusing this:\n  open A\n  (f w \\<in> A) = ((f \\<circ> pseudo_proj_True n) w \\<notin> A)\n\ngoal (1 subgoal):\n 1. A \\<in> sets borel", "by simp"], ["proof (state)\nthis:\n  A \\<in> sets borel\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       f w \\<noteq> f (pseudo_proj_True n w) \\<Longrightarrow>\n       \\<exists>A\\<in>sets borel.\n          (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)", "hence \"\\<exists>A\\<in>sets borel. (f w \\<in> A) = ((f \\<circ> (pseudo_proj_True n)) w \\<notin> A)\""], ["proof (prove)\nusing this:\n  A \\<in> sets borel\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets borel.\n       (f w \\<in> A) = ((f \\<circ> pseudo_proj_True n) w \\<notin> A)", "using Ah"], ["proof (prove)\nusing this:\n  A \\<in> sets borel\n  open A\n  (f w \\<in> A) = ((f \\<circ> pseudo_proj_True n) w \\<notin> A)\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets borel.\n       (f w \\<in> A) = ((f \\<circ> pseudo_proj_True n) w \\<notin> A)", "by blast"], ["proof (state)\nthis:\n  \\<exists>A\\<in>sets borel.\n     (f w \\<in> A) = ((f \\<circ> pseudo_proj_True n) w \\<notin> A)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       f w \\<noteq> f (pseudo_proj_True n w) \\<Longrightarrow>\n       \\<exists>A\\<in>sets borel.\n          (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)", "}"], ["proof (state)\nthis:\n  f ?w3 \\<noteq> (f \\<circ> pseudo_proj_True n) ?w3 \\<Longrightarrow>\n  \\<exists>A\\<in>sets borel.\n     (f ?w3 \\<in> A) = ((f \\<circ> pseudo_proj_True n) ?w3 \\<notin> A)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       f w \\<noteq> f (pseudo_proj_True n w) \\<Longrightarrow>\n       \\<exists>A\\<in>sets borel.\n          (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)", "thus \"\\<And>w. f w \\<noteq> f (pseudo_proj_True n w) \\<Longrightarrow> \\<exists>A\\<in>sets borel. (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)\""], ["proof (prove)\nusing this:\n  f ?w3 \\<noteq> (f \\<circ> pseudo_proj_True n) ?w3 \\<Longrightarrow>\n  \\<exists>A\\<in>sets borel.\n     (f ?w3 \\<in> A) = ((f \\<circ> pseudo_proj_True n) ?w3 \\<notin> A)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       f w \\<noteq> f (pseudo_proj_True n w) \\<Longrightarrow>\n       \\<exists>A\\<in>sets borel.\n          (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)", "by simp"], ["proof (state)\nthis:\n  f ?w1 \\<noteq> f (pseudo_proj_True n ?w1) \\<Longrightarrow>\n  \\<exists>A\\<in>sets borel.\n     (f ?w1 \\<in> A) = (f (pseudo_proj_True n ?w1) \\<notin> A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_not_borel_info:\n  assumes \"f\\<in> measurable (nat_filtration n) N\"\n  and \"set_discriminating n f N\"\n  shows \"f\\<circ> pseudo_proj_True n = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n = f", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "assume \"f\\<circ> pseudo_proj_True n \\<noteq> f\""], ["proof (state)\nthis:\n  f \\<circ> pseudo_proj_True n \\<noteq> f\n\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "hence \"\\<exists> w. (f\\<circ> (pseudo_proj_True n)) w \\<noteq> f w\""], ["proof (prove)\nusing this:\n  f \\<circ> pseudo_proj_True n \\<noteq> f\n\ngoal (1 subgoal):\n 1. \\<exists>w. (f \\<circ> pseudo_proj_True n) w \\<noteq> f w", "by auto"], ["proof (state)\nthis:\n  \\<exists>w. (f \\<circ> pseudo_proj_True n) w \\<noteq> f w\n\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "from this"], ["proof (chain)\npicking this:\n  \\<exists>w. (f \\<circ> pseudo_proj_True n) w \\<noteq> f w", "obtain w where \"(f\\<circ> (pseudo_proj_True n)) w \\<noteq> f w\""], ["proof (prove)\nusing this:\n  \\<exists>w. (f \\<circ> pseudo_proj_True n) w \\<noteq> f w\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        (f \\<circ> pseudo_proj_True n) w \\<noteq> f w \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (f \\<circ> pseudo_proj_True n) w \\<noteq> f w\n\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "note wh = this"], ["proof (state)\nthis:\n  (f \\<circ> pseudo_proj_True n) w \\<noteq> f w\n\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "let ?x = \"pseudo_proj_True n w\""], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "have \"pseudo_proj_True n ?x = pseudo_proj_True n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n (pseudo_proj_True n w) = pseudo_proj_True n w", "by (simp add: pseudo_proj_True_proj)"], ["proof (state)\nthis:\n  pseudo_proj_True n (pseudo_proj_True n w) = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "have \"f w \\<noteq> f (pseudo_proj_True n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f w \\<noteq> f (pseudo_proj_True n w)", "using wh"], ["proof (prove)\nusing this:\n  (f \\<circ> pseudo_proj_True n) w \\<noteq> f w\n\ngoal (1 subgoal):\n 1. f w \\<noteq> f (pseudo_proj_True n w)", "by simp"], ["proof (state)\nthis:\n  f w \\<noteq> f (pseudo_proj_True n w)\n\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "hence \"\\<exists>A \\<in> sets N. ( f w \\<in> A = (f ?x \\<notin> A))\""], ["proof (prove)\nusing this:\n  f w \\<noteq> f (pseudo_proj_True n w)\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets N.\n       (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)", "using assms"], ["proof (prove)\nusing this:\n  f w \\<noteq> f (pseudo_proj_True n w)\n  f \\<in> nat_filtration n \\<rightarrow>\\<^sub>M N\n  set_discriminating n f N\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets N.\n       (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)", "unfolding set_discriminating_def"], ["proof (prove)\nusing this:\n  f w \\<noteq> f (pseudo_proj_True n w)\n  f \\<in> nat_filtration n \\<rightarrow>\\<^sub>M N\n  \\<forall>w.\n     f w \\<noteq> f (pseudo_proj_True n w) \\<longrightarrow>\n     (\\<exists>A\\<in>sets N.\n         (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A))\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets N.\n       (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)", "by simp"], ["proof (state)\nthis:\n  \\<exists>A\\<in>sets N.\n     (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)\n\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A\\<in>sets N.\n     (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)", "obtain A where \"A \\<in> sets N\" and \"f w\\<in> A = (f ?x \\<notin> A)\""], ["proof (prove)\nusing this:\n  \\<exists>A\\<in>sets N.\n     (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>A \\<in> sets N;\n         (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  A \\<in> sets N\n  (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)\n\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "note Ah = this"], ["proof (state)\nthis:\n  A \\<in> sets N\n  (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)\n\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "have \"f-` A\\<inter> (space (nat_filtration n)) \\<in> sets (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` A \\<inter> space (nat_filtration n) \\<in> sets (nat_filtration n)", "using Ah assms borel_open measurable_sets"], ["proof (prove)\nusing this:\n  A \\<in> sets N\n  (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)\n  f \\<in> nat_filtration n \\<rightarrow>\\<^sub>M N\n  set_discriminating n f N\n  open ?A \\<Longrightarrow> ?A \\<in> sets borel\n  \\<lbrakk>?f \\<in> ?M \\<rightarrow>\\<^sub>M ?A; ?S \\<in> sets ?A\\<rbrakk>\n  \\<Longrightarrow> ?f -` ?S \\<inter> space ?M \\<in> sets ?M\n\ngoal (1 subgoal):\n 1. f -` A \\<inter> space (nat_filtration n) \\<in> sets (nat_filtration n)", "by blast"], ["proof (state)\nthis:\n  f -` A \\<inter> space (nat_filtration n) \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "hence fn:\"f-` A \\<in> sets (nat_filtration n)\""], ["proof (prove)\nusing this:\n  f -` A \\<inter> space (nat_filtration n) \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. f -` A \\<in> sets (nat_filtration n)", "using nat_filtration_space"], ["proof (prove)\nusing this:\n  f -` A \\<inter> space (nat_filtration n) \\<in> sets (nat_filtration n)\n  space (nat_filtration ?n) = UNIV\n\ngoal (1 subgoal):\n 1. f -` A \\<in> sets (nat_filtration n)", "by simp"], ["proof (state)\nthis:\n  f -` A \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "have \"?x\\<in> f-`A = (w \\<in> f -`A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (pseudo_proj_True n w \\<in> f -` A) = (w \\<in> f -` A)", "using \\<open>pseudo_proj_True n ?x = pseudo_proj_True n w\\<close> assms\n    fct_gen_subalgebra_info[of \"pseudo_proj_True n\" M] bernoulli_stream_space"], ["proof (prove)\nusing this:\n  pseudo_proj_True n (pseudo_proj_True n w) = pseudo_proj_True n w\n  f \\<in> nat_filtration n \\<rightarrow>\\<^sub>M N\n  set_discriminating n f N\n  \\<lbrakk>pseudo_proj_True n \\<in> space M \\<rightarrow> space ?N;\n   ?x \\<in> space M; ?w \\<in> space M;\n   pseudo_proj_True n ?x = pseudo_proj_True n ?w;\n   ?A \\<in> sets (fct_gen_subalgebra M ?N (pseudo_proj_True n))\\<rbrakk>\n  \\<Longrightarrow> (?x \\<in> ?A) = (?w \\<in> ?A)\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. (pseudo_proj_True n w \\<in> f -` A) = (w \\<in> f -` A)", "by (metis Pi_I UNIV_I bernoulli fn nat_filtration_def streams_UNIV)"], ["proof (state)\nthis:\n  (pseudo_proj_True n w \\<in> f -` A) = (w \\<in> f -` A)\n\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (pseudo_proj_True n w \\<in> f -` A) = (w \\<in> f -` A)\n\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "have \"... = (f w \\<in> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<in> f -` A) = (f w \\<in> A)", "by simp"], ["proof (state)\nthis:\n  (w \\<in> f -` A) = (f w \\<in> A)\n\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (w \\<in> f -` A) = (f w \\<in> A)\n\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "have \"... = (f ?x \\<notin> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)", "using Ah"], ["proof (prove)\nusing this:\n  A \\<in> sets N\n  (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)\n\ngoal (1 subgoal):\n 1. (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)", "by simp"], ["proof (state)\nthis:\n  (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)\n\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (f w \\<in> A) = (f (pseudo_proj_True n w) \\<notin> A)\n\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "have \"... = (?x \\<notin> f -`A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f (pseudo_proj_True n w) \\<notin> A) =\n    (pseudo_proj_True n w \\<notin> f -` A)", "by simp"], ["proof (state)\nthis:\n  (f (pseudo_proj_True n w) \\<notin> A) =\n  (pseudo_proj_True n w \\<notin> f -` A)\n\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  (pseudo_proj_True n w \\<in> f -` A) =\n  (pseudo_proj_True n w \\<notin> f -` A)", "have \"?x\\<in> f-`A = (?x \\<notin> f -`A)\""], ["proof (prove)\nusing this:\n  (pseudo_proj_True n w \\<in> f -` A) =\n  (pseudo_proj_True n w \\<notin> f -` A)\n\ngoal (1 subgoal):\n 1. (pseudo_proj_True n w \\<in> f -` A) =\n    (pseudo_proj_True n w \\<notin> f -` A)", "."], ["proof (state)\nthis:\n  (pseudo_proj_True n w \\<in> f -` A) =\n  (pseudo_proj_True n w \\<notin> f -` A)\n\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n \\<noteq> f \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  (pseudo_proj_True n w \\<in> f -` A) =\n  (pseudo_proj_True n w \\<notin> f -` A)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_info:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"f\\<in> borel_measurable (nat_filtration n)\"\n  shows \"f\\<circ> pseudo_proj_True n = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_True n = f", "proof (rule nat_filtration_not_borel_info)"], ["proof (state)\ngoal (2 subgoals):\n 1. f \\<in> nat_filtration n \\<rightarrow>\\<^sub>M ?N\n 2. set_discriminating n f ?N", "show \"f\\<in> borel_measurable (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (nat_filtration n)", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (nat_filtration n)", "by simp"], ["proof (state)\nthis:\n  f \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. set_discriminating n f borel", "show \"set_discriminating n f borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_discriminating n f borel", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. set_discriminating n f borel", "by (simp add: set_discriminating_if)"], ["proof (state)\nthis:\n  set_discriminating n f borel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_not_borel_info':\n  assumes \"f\\<in> measurable (nat_filtration n) N\"\n  and \"set_discriminating n f N\"\n  shows \"f\\<circ> pseudo_proj_False n = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_False n = f", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<circ> pseudo_proj_False n) x = f x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<circ> pseudo_proj_False n) x = f x", "have \"(f \\<circ> pseudo_proj_False n) x = f (pseudo_proj_False n x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<circ> pseudo_proj_False n) x = f (pseudo_proj_False n x)", "by simp"], ["proof (state)\nthis:\n  (f \\<circ> pseudo_proj_False n) x = f (pseudo_proj_False n x)\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<circ> pseudo_proj_False n) x = f x", "also"], ["proof (state)\nthis:\n  (f \\<circ> pseudo_proj_False n) x = f (pseudo_proj_False n x)\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<circ> pseudo_proj_False n) x = f x", "have \"... = f (pseudo_proj_True n (pseudo_proj_False n x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (pseudo_proj_False n x) =\n    f (pseudo_proj_True n (pseudo_proj_False n x))", "using assms nat_filtration_not_borel_info"], ["proof (prove)\nusing this:\n  f \\<in> nat_filtration n \\<rightarrow>\\<^sub>M N\n  set_discriminating n f N\n  \\<lbrakk>?f \\<in> nat_filtration ?n \\<rightarrow>\\<^sub>M ?N;\n   set_discriminating ?n ?f ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<circ> pseudo_proj_True ?n = ?f\n\ngoal (1 subgoal):\n 1. f (pseudo_proj_False n x) =\n    f (pseudo_proj_True n (pseudo_proj_False n x))", "by (metis comp_apply)"], ["proof (state)\nthis:\n  f (pseudo_proj_False n x) = f (pseudo_proj_True n (pseudo_proj_False n x))\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<circ> pseudo_proj_False n) x = f x", "also"], ["proof (state)\nthis:\n  f (pseudo_proj_False n x) = f (pseudo_proj_True n (pseudo_proj_False n x))\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<circ> pseudo_proj_False n) x = f x", "have \"... = f (pseudo_proj_True n x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (pseudo_proj_True n (pseudo_proj_False n x)) =\n    f (pseudo_proj_True n x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f (pseudo_proj_True n (pseudo_proj_False n x)) =\n    f (pseudo_proj_True n x)", "have \"pseudo_proj_True n (pseudo_proj_False n x) = pseudo_proj_True n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n (pseudo_proj_False n x) = pseudo_proj_True n x", "by (simp add: pseudo_proj_False_stake pseudo_proj_True_def)"], ["proof (state)\nthis:\n  pseudo_proj_True n (pseudo_proj_False n x) = pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. f (pseudo_proj_True n (pseudo_proj_False n x)) =\n    f (pseudo_proj_True n x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  pseudo_proj_True n (pseudo_proj_False n x) = pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. f (pseudo_proj_True n (pseudo_proj_False n x)) =\n    f (pseudo_proj_True n x)", "by simp"], ["proof (state)\nthis:\n  f (pseudo_proj_True n (pseudo_proj_False n x)) = f (pseudo_proj_True n x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (pseudo_proj_True n (pseudo_proj_False n x)) = f (pseudo_proj_True n x)\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<circ> pseudo_proj_False n) x = f x", "also"], ["proof (state)\nthis:\n  f (pseudo_proj_True n (pseudo_proj_False n x)) = f (pseudo_proj_True n x)\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<circ> pseudo_proj_False n) x = f x", "have \"... = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (pseudo_proj_True n x) = f x", "using assms nat_filtration_not_borel_info"], ["proof (prove)\nusing this:\n  f \\<in> nat_filtration n \\<rightarrow>\\<^sub>M N\n  set_discriminating n f N\n  \\<lbrakk>?f \\<in> nat_filtration ?n \\<rightarrow>\\<^sub>M ?N;\n   set_discriminating ?n ?f ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<circ> pseudo_proj_True ?n = ?f\n\ngoal (1 subgoal):\n 1. f (pseudo_proj_True n x) = f x", "by (metis comp_apply)"], ["proof (state)\nthis:\n  f (pseudo_proj_True n x) = f x\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<circ> pseudo_proj_False n) x = f x", "finally"], ["proof (chain)\npicking this:\n  (f \\<circ> pseudo_proj_False n) x = f x", "show \"(f \\<circ> pseudo_proj_False n) x = f x\""], ["proof (prove)\nusing this:\n  (f \\<circ> pseudo_proj_False n) x = f x\n\ngoal (1 subgoal):\n 1. (f \\<circ> pseudo_proj_False n) x = f x", "."], ["proof (state)\nthis:\n  (f \\<circ> pseudo_proj_False n) x = f x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_info':\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"f\\<in> borel_measurable (nat_filtration n)\"\n  shows \"f\\<circ> pseudo_proj_False n = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<circ> pseudo_proj_False n = f", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<circ> pseudo_proj_False n) x = f x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<circ> pseudo_proj_False n) x = f x", "have \"(f \\<circ> pseudo_proj_False n) x = f (pseudo_proj_False n x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<circ> pseudo_proj_False n) x = f (pseudo_proj_False n x)", "by simp"], ["proof (state)\nthis:\n  (f \\<circ> pseudo_proj_False n) x = f (pseudo_proj_False n x)\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<circ> pseudo_proj_False n) x = f x", "also"], ["proof (state)\nthis:\n  (f \\<circ> pseudo_proj_False n) x = f (pseudo_proj_False n x)\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<circ> pseudo_proj_False n) x = f x", "have \"... = f (pseudo_proj_True n (pseudo_proj_False n x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (pseudo_proj_False n x) =\n    f (pseudo_proj_True n (pseudo_proj_False n x))", "using assms nat_filtration_info"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (nat_filtration n)\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  ?f \\<circ> pseudo_proj_True ?n = ?f\n\ngoal (1 subgoal):\n 1. f (pseudo_proj_False n x) =\n    f (pseudo_proj_True n (pseudo_proj_False n x))", "by (metis comp_apply)"], ["proof (state)\nthis:\n  f (pseudo_proj_False n x) = f (pseudo_proj_True n (pseudo_proj_False n x))\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<circ> pseudo_proj_False n) x = f x", "also"], ["proof (state)\nthis:\n  f (pseudo_proj_False n x) = f (pseudo_proj_True n (pseudo_proj_False n x))\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<circ> pseudo_proj_False n) x = f x", "have \"... = f (pseudo_proj_True n x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (pseudo_proj_True n (pseudo_proj_False n x)) =\n    f (pseudo_proj_True n x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f (pseudo_proj_True n (pseudo_proj_False n x)) =\n    f (pseudo_proj_True n x)", "have \"pseudo_proj_True n (pseudo_proj_False n x) = pseudo_proj_True n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n (pseudo_proj_False n x) = pseudo_proj_True n x", "by (simp add: pseudo_proj_False_stake pseudo_proj_True_def)"], ["proof (state)\nthis:\n  pseudo_proj_True n (pseudo_proj_False n x) = pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. f (pseudo_proj_True n (pseudo_proj_False n x)) =\n    f (pseudo_proj_True n x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  pseudo_proj_True n (pseudo_proj_False n x) = pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. f (pseudo_proj_True n (pseudo_proj_False n x)) =\n    f (pseudo_proj_True n x)", "by simp"], ["proof (state)\nthis:\n  f (pseudo_proj_True n (pseudo_proj_False n x)) = f (pseudo_proj_True n x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (pseudo_proj_True n (pseudo_proj_False n x)) = f (pseudo_proj_True n x)\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<circ> pseudo_proj_False n) x = f x", "also"], ["proof (state)\nthis:\n  f (pseudo_proj_True n (pseudo_proj_False n x)) = f (pseudo_proj_True n x)\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<circ> pseudo_proj_False n) x = f x", "have \"... = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (pseudo_proj_True n x) = f x", "using assms nat_filtration_info"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (nat_filtration n)\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  ?f \\<circ> pseudo_proj_True ?n = ?f\n\ngoal (1 subgoal):\n 1. f (pseudo_proj_True n x) = f x", "by (metis comp_apply)"], ["proof (state)\nthis:\n  f (pseudo_proj_True n x) = f x\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<circ> pseudo_proj_False n) x = f x", "finally"], ["proof (chain)\npicking this:\n  (f \\<circ> pseudo_proj_False n) x = f x", "show \"(f \\<circ> pseudo_proj_False n) x = f x\""], ["proof (prove)\nusing this:\n  (f \\<circ> pseudo_proj_False n) x = f x\n\ngoal (1 subgoal):\n 1. (f \\<circ> pseudo_proj_False n) x = f x", "."], ["proof (state)\nthis:\n  (f \\<circ> pseudo_proj_False n) x = f x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_borel_measurable_characterization:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"f\\<in> borel_measurable M\"\n  shows \"f\\<in> borel_measurable (nat_filtration n) \\<longleftrightarrow> f\\<circ> pseudo_proj_True n = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<in> borel_measurable (nat_filtration n)) =\n    (f \\<circ> pseudo_proj_True n = f)", "using assms nat_filtration_comp_measurable nat_filtration_info"], ["proof (prove)\nusing this:\n  random_variable borel f\n  \\<lbrakk>random_variable ?N ?f;\n   ?f \\<circ> pseudo_proj_True ?n = ?f\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> nat_filtration ?n \\<rightarrow>\\<^sub>M ?N\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  ?f \\<circ> pseudo_proj_True ?n = ?f\n\ngoal (1 subgoal):\n 1. (f \\<in> borel_measurable (nat_filtration n)) =\n    (f \\<circ> pseudo_proj_True n = f)", "by blast"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_borel_measurable_init:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"f\\<in> borel_measurable (nat_filtration 0)\"\n  shows \"f = (\\<lambda>w. f (sconst True))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = (\\<lambda>w. f (sconst True))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w. f w = f (sconst True)", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w. f w = f (sconst True)", "have \"f w = f ((pseudo_proj_True 0) w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f w = f (pseudo_proj_True 0 w)", "using assms nat_filtration_info[of f 0]"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (nat_filtration 0)\n  f \\<in> borel_measurable (nat_filtration 0) \\<Longrightarrow>\n  f \\<circ> pseudo_proj_True 0 = f\n\ngoal (1 subgoal):\n 1. f w = f (pseudo_proj_True 0 w)", "by (metis comp_apply)"], ["proof (state)\nthis:\n  f w = f (pseudo_proj_True 0 w)\n\ngoal (1 subgoal):\n 1. \\<And>w. f w = f (sconst True)", "also"], ["proof (state)\nthis:\n  f w = f (pseudo_proj_True 0 w)\n\ngoal (1 subgoal):\n 1. \\<And>w. f w = f (sconst True)", "have \"... = f (sconst True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (pseudo_proj_True 0 w) = f (sconst True)", "by (simp add: pseudo_proj_True_def)"], ["proof (state)\nthis:\n  f (pseudo_proj_True 0 w) = f (sconst True)\n\ngoal (1 subgoal):\n 1. \\<And>w. f w = f (sconst True)", "finally"], ["proof (chain)\npicking this:\n  f w = f (sconst True)", "show \"f w = f (sconst True)\""], ["proof (prove)\nusing this:\n  f w = f (sconst True)\n\ngoal (1 subgoal):\n 1. f w = f (sconst True)", "."], ["proof (state)\nthis:\n  f w = f (sconst True)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_Suc_sets:\n  shows \"sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "assume \"x\\<in> {pseudo_proj_True n -` B \\<inter> space M |B. B \\<in> sets M}\""], ["proof (state)\nthis:\n  x \\<in> {pseudo_proj_True n -` B \\<inter> space M |B. B \\<in> events}\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "hence \"\\<exists>B. B \\<in> sets M \\<and> x = pseudo_proj_True n -` B \\<inter> space M\""], ["proof (prove)\nusing this:\n  x \\<in> {pseudo_proj_True n -` B \\<inter> space M |B. B \\<in> events}\n\ngoal (1 subgoal):\n 1. \\<exists>B.\n       B \\<in> events \\<and> x = pseudo_proj_True n -` B \\<inter> space M", "by auto"], ["proof (state)\nthis:\n  \\<exists>B.\n     B \\<in> events \\<and> x = pseudo_proj_True n -` B \\<inter> space M\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "from this"], ["proof (chain)\npicking this:\n  \\<exists>B.\n     B \\<in> events \\<and> x = pseudo_proj_True n -` B \\<inter> space M", "obtain B where \"B \\<in> sets M\" and \"x = pseudo_proj_True n -` B \\<inter> space M\""], ["proof (prove)\nusing this:\n  \\<exists>B.\n     B \\<in> events \\<and> x = pseudo_proj_True n -` B \\<inter> space M\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>B \\<in> events;\n         x = pseudo_proj_True n -` B \\<inter> space M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  B \\<in> events\n  x = pseudo_proj_True n -` B \\<inter> space M\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "note xhyps = this"], ["proof (state)\nthis:\n  B \\<in> events\n  x = pseudo_proj_True n -` B \\<inter> space M\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "let ?Bim = \"B\\<inter> (range (pseudo_proj_True n))\""], ["proof (state)\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "let ?preT = \"(\\<lambda>n w. (pseudo_proj_True n) -` {w})\""], ["proof (state)\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "have \"finite ?Bim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (B \\<inter> range (pseudo_proj_True n))", "using pseudo_proj_True_finite_image"], ["proof (prove)\nusing this:\n  finite (range (pseudo_proj_True ?n))\n\ngoal (1 subgoal):\n 1. finite (B \\<inter> range (pseudo_proj_True n))", "by simp"], ["proof (state)\nthis:\n  finite (B \\<inter> range (pseudo_proj_True n))\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "have \"pseudo_proj_True n -`B \\<inter> (space M) = pseudo_proj_True n -`B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` B \\<inter> space M = pseudo_proj_True n -` B", "using bernoulli bernoulli_stream_preimage[of _ _ \"pseudo_proj_True n\"]"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow>\n  pseudo_proj_True n -` ?A \\<inter> space ?N = pseudo_proj_True n -` ?A\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` B \\<inter> space M = pseudo_proj_True n -` B", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True n -` B \\<inter> space M = pseudo_proj_True n -` B\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "also"], ["proof (state)\nthis:\n  pseudo_proj_True n -` B \\<inter> space M = pseudo_proj_True n -` B\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "have \"... = pseudo_proj_True n -`?Bim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` B =\n    pseudo_proj_True n -` (B \\<inter> range (pseudo_proj_True n))", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True n -` B =\n  pseudo_proj_True n -` (B \\<inter> range (pseudo_proj_True n))\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "also"], ["proof (state)\nthis:\n  pseudo_proj_True n -` B =\n  pseudo_proj_True n -` (B \\<inter> range (pseudo_proj_True n))\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "have \"... = (\\<Union> w \\<in> ?Bim.?preT n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` (B \\<inter> range (pseudo_proj_True n)) =\n    (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n        pseudo_proj_True n -` {w})", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True n -` (B \\<inter> range (pseudo_proj_True n)) =\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True n -` {w})\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "also"], ["proof (state)\nthis:\n  pseudo_proj_True n -` (B \\<inter> range (pseudo_proj_True n)) =\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True n -` {w})\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "have \"... = (\\<Union> w \\<in> ?Bim. (?preT (Suc n) w \\<union> ?preT (Suc n) (pseudo_proj_False n w)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n        pseudo_proj_True n -` {w}) =\n    (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n        pseudo_proj_True (Suc n) -` {w} \\<union>\n        pseudo_proj_True (Suc n) -` {pseudo_proj_False n w})", "by (simp add:pseudo_proj_True_inverse_induct)"], ["proof (state)\nthis:\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True n -` {w}) =\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {w} \\<union>\n      pseudo_proj_True (Suc n) -` {pseudo_proj_False n w})\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "also"], ["proof (state)\nthis:\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True n -` {w}) =\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {w} \\<union>\n      pseudo_proj_True (Suc n) -` {pseudo_proj_False n w})\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "have \"... = (\\<Union> w \\<in> ?Bim. ?preT (Suc n) w) \\<union> (\\<Union> w \\<in> ?Bim. ?preT (Suc n) (pseudo_proj_False n w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n        pseudo_proj_True (Suc n) -` {w} \\<union>\n        pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}) =\n    (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n        pseudo_proj_True (Suc n) -` {w}) \\<union>\n    (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n        pseudo_proj_True (Suc n) -` {pseudo_proj_False n w})", "by auto"], ["proof (state)\nthis:\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {w} \\<union>\n      pseudo_proj_True (Suc n) -` {pseudo_proj_False n w}) =\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {w}) \\<union>\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {pseudo_proj_False n w})\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "finally"], ["proof (chain)\npicking this:\n  pseudo_proj_True n -` B \\<inter> space M =\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {w}) \\<union>\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {pseudo_proj_False n w})", "have tmpeq: \"pseudo_proj_True n -`B \\<inter> (space M) =\n        (\\<Union> w \\<in> ?Bim. ?preT (Suc n) w) \\<union> (\\<Union> w \\<in> ?Bim. ?preT (Suc n) (pseudo_proj_False n w))\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n -` B \\<inter> space M =\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {w}) \\<union>\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {pseudo_proj_False n w})\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` B \\<inter> space M =\n    (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n        pseudo_proj_True (Suc n) -` {w}) \\<union>\n    (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n        pseudo_proj_True (Suc n) -` {pseudo_proj_False n w})", "."], ["proof (state)\nthis:\n  pseudo_proj_True n -` B \\<inter> space M =\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {w}) \\<union>\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {pseudo_proj_False n w})\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "have \"(\\<Union> w \\<in> ?Bim. ?preT (Suc n) w) \\<in> sets (nat_filtration (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n        pseudo_proj_True (Suc n) -` {w})\n    \\<in> sets (nat_filtration (Suc n))", "using \\<open>finite ?Bim\\<close> nat_filtration_singleton pseudo_proj_True_Suc_proj"], ["proof (prove)\nusing this:\n  finite (B \\<inter> range (pseudo_proj_True n))\n  pseudo_proj_True ?n ?w = ?w \\<Longrightarrow>\n  pseudo_proj_True ?n -` {?w} \\<in> sets (nat_filtration ?n)\n  pseudo_proj_True (Suc ?n) (pseudo_proj_True ?n ?w) =\n  pseudo_proj_True ?n ?w\n\ngoal (1 subgoal):\n 1. (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n        pseudo_proj_True (Suc n) -` {w})\n    \\<in> sets (nat_filtration (Suc n))", "by auto"], ["proof (state)\nthis:\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {w})\n  \\<in> sets (nat_filtration (Suc n))\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "moreover"], ["proof (state)\nthis:\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {w})\n  \\<in> sets (nat_filtration (Suc n))\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "have \"(\\<Union> w \\<in> ?Bim. ?preT (Suc n) (pseudo_proj_False n w)) \\<in> sets (nat_filtration (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n        pseudo_proj_True (Suc n) -` {pseudo_proj_False n w})\n    \\<in> sets (nat_filtration (Suc n))", "using \\<open>finite ?Bim\\<close>"], ["proof (prove)\nusing this:\n  finite (B \\<inter> range (pseudo_proj_True n))\n\ngoal (1 subgoal):\n 1. (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n        pseudo_proj_True (Suc n) -` {pseudo_proj_False n w})\n    \\<in> sets (nat_filtration (Suc n))", "by (simp add: nat_filtration_singleton pseudo_proj_True_Suc_False_proj sets.finite_UN)"], ["proof (state)\nthis:\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {pseudo_proj_False n w})\n  \\<in> sets (nat_filtration (Suc n))\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {w})\n  \\<in> sets (nat_filtration (Suc n))\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {pseudo_proj_False n w})\n  \\<in> sets (nat_filtration (Suc n))", "have \"x \\<in> sets (nat_filtration (Suc n))\""], ["proof (prove)\nusing this:\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {w})\n  \\<in> sets (nat_filtration (Suc n))\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {pseudo_proj_False n w})\n  \\<in> sets (nat_filtration (Suc n))\n\ngoal (1 subgoal):\n 1. x \\<in> sets (nat_filtration (Suc n))", "using tmpeq xhyps"], ["proof (prove)\nusing this:\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {w})\n  \\<in> sets (nat_filtration (Suc n))\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {pseudo_proj_False n w})\n  \\<in> sets (nat_filtration (Suc n))\n  pseudo_proj_True n -` B \\<inter> space M =\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {w}) \\<union>\n  (\\<Union>w\\<in>B \\<inter> range (pseudo_proj_True n).\n      pseudo_proj_True (Suc n) -` {pseudo_proj_False n w})\n  B \\<in> events\n  x = pseudo_proj_True n -` B \\<inter> space M\n\ngoal (1 subgoal):\n 1. x \\<in> sets (nat_filtration (Suc n))", "by simp"], ["proof (state)\nthis:\n  x \\<in> sets (nat_filtration (Suc n))\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "}"], ["proof (state)\nthis:\n  ?x3\n  \\<in> {pseudo_proj_True n -` B \\<inter> space M |B.\n         B \\<in> events} \\<Longrightarrow>\n  ?x3 \\<in> sets (nat_filtration (Suc n))\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "note xmem = this"], ["proof (state)\nthis:\n  ?x3\n  \\<in> {pseudo_proj_True n -` B \\<inter> space M |B.\n         B \\<in> events} \\<Longrightarrow>\n  ?x3 \\<in> sets (nat_filtration (Suc n))\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "have \"sets (nat_filtration n) = sigma_sets (space M) {pseudo_proj_True n -` B \\<inter> space M |B. B \\<in> sets M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (nat_filtration n) =\n    sigma_sets (space M)\n     {pseudo_proj_True n -` B \\<inter> space M |B. B \\<in> events}", "using bernoulli nat_filtration_sets"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  sets (nat_filtration ?n) =\n  sigma_sets (space (bernoulli_stream p))\n   {pseudo_proj_True ?n -` B \\<inter> space M |B.\n    B \\<in> sets (bernoulli_stream p)}\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) =\n    sigma_sets (space M)\n     {pseudo_proj_True n -` B \\<inter> space M |B. B \\<in> events}", "by blast"], ["proof (state)\nthis:\n  sets (nat_filtration n) =\n  sigma_sets (space M)\n   {pseudo_proj_True n -` B \\<inter> space M |B. B \\<in> events}\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "also"], ["proof (state)\nthis:\n  sets (nat_filtration n) =\n  sigma_sets (space M)\n   {pseudo_proj_True n -` B \\<inter> space M |B. B \\<in> events}\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "have \"... \\<subseteq> (nat_filtration (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_sets (space M)\n     {pseudo_proj_True n -` B \\<inter> space M |B. B \\<in> events}\n    \\<subseteq> sets (nat_filtration (Suc n))", "proof (rule sigma_algebra.sigma_sets_subset)"], ["proof (state)\ngoal (2 subgoals):\n 1. sigma_algebra (space M) (sets (nat_filtration (Suc n)))\n 2. {pseudo_proj_True n -` B \\<inter> space M |B. B \\<in> events}\n    \\<subseteq> sets (nat_filtration (Suc n))", "show \"{pseudo_proj_True n -` B \\<inter> space M |B. B \\<in> sets M}\n      \\<subseteq> sets (nat_filtration (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {pseudo_proj_True n -` B \\<inter> space M |B. B \\<in> events}\n    \\<subseteq> sets (nat_filtration (Suc n))", "using xmem"], ["proof (prove)\nusing this:\n  ?x3\n  \\<in> {pseudo_proj_True n -` B \\<inter> space M |B.\n         B \\<in> events} \\<Longrightarrow>\n  ?x3 \\<in> sets (nat_filtration (Suc n))\n\ngoal (1 subgoal):\n 1. {pseudo_proj_True n -` B \\<inter> space M |B. B \\<in> events}\n    \\<subseteq> sets (nat_filtration (Suc n))", "by auto"], ["proof (state)\nthis:\n  {pseudo_proj_True n -` B \\<inter> space M |B. B \\<in> events}\n  \\<subseteq> sets (nat_filtration (Suc n))\n\ngoal (1 subgoal):\n 1. sigma_algebra (space M) (sets (nat_filtration (Suc n)))", "show \"sigma_algebra (space M) (sets (nat_filtration (Suc n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_algebra (space M) (sets (nat_filtration (Suc n)))", "by (metis bernoulli bernoulli_stream_space nat_filtration_space sets.sigma_algebra_axioms streams_UNIV)"], ["proof (state)\nthis:\n  sigma_algebra (space M) (sets (nat_filtration (Suc n)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sigma_sets (space M)\n   {pseudo_proj_True n -` B \\<inter> space M |B. B \\<in> events}\n  \\<subseteq> sets (nat_filtration (Suc n))\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "finally"], ["proof (chain)\npicking this:\n  sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))\n\ngoal (1 subgoal):\n 1. sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))", "."], ["proof (state)\nthis:\n  sets (nat_filtration n) \\<subseteq> sets (nat_filtration (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_subalgebra:\n  shows \"subalgebra M (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subalgebra M (nat_filtration n)", "using bernoulli fct_gen_subalgebra_is_subalgebra nat_filtration_def\n      pseudo_proj_True_measurable"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  ?X \\<in> ?M \\<rightarrow>\\<^sub>M ?N \\<Longrightarrow>\n  subalgebra ?M (fct_gen_subalgebra ?M ?N ?X)\n  nat_filtration ?n = fct_gen_subalgebra M M (pseudo_proj_True ?n)\n  pseudo_proj_True ?n\n  \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n\ngoal (1 subgoal):\n 1. subalgebra M (nat_filtration n)", "by metis"], ["", "lemma (in infinite_coin_toss_space) nat_discrete_filtration:\n  shows \"filtration M nat_filtration\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Filtration.filtration M nat_filtration", "unfolding filtration_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>t. subalgebra M (nat_filtration t)) \\<and>\n    (\\<forall>s t.\n        s \\<le> t \\<longrightarrow>\n        subalgebra (nat_filtration t) (nat_filtration s))", "proof((intro conjI), (intro allI)+)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t. subalgebra M (nat_filtration t)\n 2. \\<forall>s t.\n       s \\<le> t \\<longrightarrow>\n       subalgebra (nat_filtration t) (nat_filtration s)", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t. subalgebra M (nat_filtration t)\n 2. \\<forall>s t.\n       s \\<le> t \\<longrightarrow>\n       subalgebra (nat_filtration t) (nat_filtration s)", "fix n"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t. subalgebra M (nat_filtration t)\n 2. \\<forall>s t.\n       s \\<le> t \\<longrightarrow>\n       subalgebra (nat_filtration t) (nat_filtration s)", "let ?F = \"nat_filtration n\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t. subalgebra M (nat_filtration t)\n 2. \\<forall>s t.\n       s \\<le> t \\<longrightarrow>\n       subalgebra (nat_filtration t) (nat_filtration s)", "show \"subalgebra M ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subalgebra M (nat_filtration n)", "using bernoulli fct_gen_subalgebra_is_subalgebra nat_filtration_def\n      pseudo_proj_True_measurable"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  ?X \\<in> ?M \\<rightarrow>\\<^sub>M ?N \\<Longrightarrow>\n  subalgebra ?M (fct_gen_subalgebra ?M ?N ?X)\n  nat_filtration ?n = fct_gen_subalgebra M M (pseudo_proj_True ?n)\n  pseudo_proj_True ?n\n  \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n\ngoal (1 subgoal):\n 1. subalgebra M (nat_filtration n)", "by metis"], ["proof (state)\nthis:\n  subalgebra M (nat_filtration n)\n\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       s \\<le> t \\<longrightarrow>\n       subalgebra (nat_filtration t) (nat_filtration s)", "}"], ["proof (state)\nthis:\n  subalgebra M (nat_filtration ?n3)\n\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       s \\<le> t \\<longrightarrow>\n       subalgebra (nat_filtration t) (nat_filtration s)", "note allrm = this"], ["proof (state)\nthis:\n  subalgebra M (nat_filtration ?n3)\n\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       s \\<le> t \\<longrightarrow>\n       subalgebra (nat_filtration t) (nat_filtration s)", "show \"\\<forall>n m. n \\<le> m \\<longrightarrow> subalgebra (nat_filtration m) (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n m.\n       n \\<le> m \\<longrightarrow>\n       subalgebra (nat_filtration m) (nat_filtration n)", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<le> m \\<Longrightarrow>\n       subalgebra (nat_filtration m) (nat_filtration n)", "let ?F = nat_filtration"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<le> m \\<Longrightarrow>\n       subalgebra (nat_filtration m) (nat_filtration n)", "fix n::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<le> m \\<Longrightarrow>\n       subalgebra (nat_filtration m) (nat_filtration n)", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<le> m \\<Longrightarrow>\n       subalgebra (nat_filtration m) (nat_filtration n)", "show \"n \\<le> m \\<Longrightarrow> subalgebra (nat_filtration m) (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> m \\<Longrightarrow>\n    subalgebra (nat_filtration m) (nat_filtration n)", "proof (induct m)"], ["proof (state)\ngoal (2 subgoals):\n 1. n \\<le> 0 \\<Longrightarrow>\n    subalgebra (nat_filtration 0) (nat_filtration n)\n 2. \\<And>m.\n       \\<lbrakk>n \\<le> m \\<Longrightarrow>\n                subalgebra (nat_filtration m) (nat_filtration n);\n        n \\<le> Suc m\\<rbrakk>\n       \\<Longrightarrow> subalgebra (nat_filtration (Suc m))\n                          (nat_filtration n)", "case (Suc m)"], ["proof (state)\nthis:\n  n \\<le> m \\<Longrightarrow>\n  subalgebra (nat_filtration m) (nat_filtration n)\n  n \\<le> Suc m\n\ngoal (2 subgoals):\n 1. n \\<le> 0 \\<Longrightarrow>\n    subalgebra (nat_filtration 0) (nat_filtration n)\n 2. \\<And>m.\n       \\<lbrakk>n \\<le> m \\<Longrightarrow>\n                subalgebra (nat_filtration m) (nat_filtration n);\n        n \\<le> Suc m\\<rbrakk>\n       \\<Longrightarrow> subalgebra (nat_filtration (Suc m))\n                          (nat_filtration n)", "have \"subalgebra (?F (Suc m)) (?F m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subalgebra (nat_filtration (Suc m)) (nat_filtration m)", "unfolding subalgebra_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. space (nat_filtration m) = space (nat_filtration (Suc m)) \\<and>\n    sets (nat_filtration m) \\<subseteq> sets (nat_filtration (Suc m))", "proof (intro conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. space (nat_filtration m) = space (nat_filtration (Suc m))\n 2. sets (nat_filtration m) \\<subseteq> sets (nat_filtration (Suc m))", "show speq: \"space (?F m) = space (?F (Suc m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space (nat_filtration m) = space (nat_filtration (Suc m))", "by (simp add: nat_filtration_space)"], ["proof (state)\nthis:\n  space (nat_filtration m) = space (nat_filtration (Suc m))\n\ngoal (1 subgoal):\n 1. sets (nat_filtration m) \\<subseteq> sets (nat_filtration (Suc m))", "show \"sets (?F m) \\<subseteq> sets (?F (Suc m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (nat_filtration m) \\<subseteq> sets (nat_filtration (Suc m))", "using nat_filtration_Suc_sets"], ["proof (prove)\nusing this:\n  sets (nat_filtration ?n) \\<subseteq> sets (nat_filtration (Suc ?n))\n\ngoal (1 subgoal):\n 1. sets (nat_filtration m) \\<subseteq> sets (nat_filtration (Suc m))", "by simp"], ["proof (state)\nthis:\n  sets (nat_filtration m) \\<subseteq> sets (nat_filtration (Suc m))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subalgebra (nat_filtration (Suc m)) (nat_filtration m)\n\ngoal (2 subgoals):\n 1. n \\<le> 0 \\<Longrightarrow>\n    subalgebra (nat_filtration 0) (nat_filtration n)\n 2. \\<And>m.\n       \\<lbrakk>n \\<le> m \\<Longrightarrow>\n                subalgebra (nat_filtration m) (nat_filtration n);\n        n \\<le> Suc m\\<rbrakk>\n       \\<Longrightarrow> subalgebra (nat_filtration (Suc m))\n                          (nat_filtration n)", "thus \"n \\<le> Suc m \\<Longrightarrow> subalgebra (?F (Suc m)) (?F n)\""], ["proof (prove)\nusing this:\n  subalgebra (nat_filtration (Suc m)) (nat_filtration m)\n\ngoal (1 subgoal):\n 1. n \\<le> Suc m \\<Longrightarrow>\n    subalgebra (nat_filtration (Suc m)) (nat_filtration n)", "using Suc"], ["proof (prove)\nusing this:\n  subalgebra (nat_filtration (Suc m)) (nat_filtration m)\n  n \\<le> m \\<Longrightarrow>\n  subalgebra (nat_filtration m) (nat_filtration n)\n  n \\<le> Suc m\n\ngoal (1 subgoal):\n 1. n \\<le> Suc m \\<Longrightarrow>\n    subalgebra (nat_filtration (Suc m)) (nat_filtration n)", "using Suc.hyps le_Suc_eq subalgebra_def"], ["proof (prove)\nusing this:\n  subalgebra (nat_filtration (Suc m)) (nat_filtration m)\n  n \\<le> m \\<Longrightarrow>\n  subalgebra (nat_filtration m) (nat_filtration n)\n  n \\<le> Suc m\n  n \\<le> m \\<Longrightarrow>\n  subalgebra (nat_filtration m) (nat_filtration n)\n  (?m \\<le> Suc ?n) = (?m \\<le> ?n \\<or> ?m = Suc ?n)\n  subalgebra ?M ?F =\n  (space ?F = space ?M \\<and> sets ?F \\<subseteq> sets ?M)\n\ngoal (1 subgoal):\n 1. n \\<le> Suc m \\<Longrightarrow>\n    subalgebra (nat_filtration (Suc m)) (nat_filtration n)", "by fastforce"], ["proof (state)\nthis:\n  n \\<le> Suc m \\<Longrightarrow>\n  subalgebra (nat_filtration (Suc m)) (nat_filtration n)\n\ngoal (1 subgoal):\n 1. n \\<le> 0 \\<Longrightarrow>\n    subalgebra (nat_filtration 0) (nat_filtration n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<le> 0 \\<Longrightarrow>\n    subalgebra (nat_filtration 0) (nat_filtration n)", "case 0"], ["proof (state)\nthis:\n  n \\<le> 0\n\ngoal (1 subgoal):\n 1. n \\<le> 0 \\<Longrightarrow>\n    subalgebra (nat_filtration 0) (nat_filtration n)", "thus ?case"], ["proof (prove)\nusing this:\n  n \\<le> 0\n\ngoal (1 subgoal):\n 1. subalgebra (nat_filtration 0) (nat_filtration n)", "by (simp add: subalgebra_def)"], ["proof (state)\nthis:\n  subalgebra (nat_filtration 0) (nat_filtration n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  n \\<le> m \\<Longrightarrow>\n  subalgebra (nat_filtration m) (nat_filtration n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n m.\n     n \\<le> m \\<longrightarrow>\n     subalgebra (nat_filtration m) (nat_filtration n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) nat_info_filtration:\n  shows \"init_triv_filt M nat_filtration\""], ["proof (prove)\ngoal (1 subgoal):\n 1. init_triv_filt M nat_filtration", "unfolding init_triv_filt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Filtration.filtration M nat_filtration \\<and>\n    sets (nat_filtration \\<bottom>) = {{}, space M}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. Filtration.filtration M nat_filtration\n 2. sets (nat_filtration \\<bottom>) = {{}, space M}", "show \"filtration M nat_filtration\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Filtration.filtration M nat_filtration", "by (simp add:nat_discrete_filtration)"], ["proof (state)\nthis:\n  Filtration.filtration M nat_filtration\n\ngoal (1 subgoal):\n 1. sets (nat_filtration \\<bottom>) = {{}, space M}", "have img: \"\\<forall> w\\<in> space M. pseudo_proj_True 0 w = sconst True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>space M. pseudo_proj_True 0 w = sconst True", "unfolding pseudo_proj_True_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>space M. stake 0 w @- sconst True = sconst True", "by simp"], ["proof (state)\nthis:\n  \\<forall>w\\<in>space M. pseudo_proj_True 0 w = sconst True\n\ngoal (1 subgoal):\n 1. sets (nat_filtration \\<bottom>) = {{}, space M}", "show \"sets (nat_filtration bot) = {{}, space M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (nat_filtration \\<bottom>) = {{}, space M}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. sets (nat_filtration \\<bottom>) \\<subseteq> {{}, space M}\n 2. {{}, space M} \\<subseteq> sets (nat_filtration \\<bottom>)", "show \"{{}, space M} \\<subseteq> sets (nat_filtration bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {{}, space M} \\<subseteq> sets (nat_filtration \\<bottom>)", "by (metis empty_subsetI insert_subset nat_filtration_subalgebra sets.empty_sets sets.top subalgebra_def)"], ["proof (state)\nthis:\n  {{}, space M} \\<subseteq> sets (nat_filtration \\<bottom>)\n\ngoal (1 subgoal):\n 1. sets (nat_filtration \\<bottom>) \\<subseteq> {{}, space M}", "show \"sets (nat_filtration bot) \\<subseteq> {{}, space M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (nat_filtration \\<bottom>) \\<subseteq> {{}, space M}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sets (nat_filtration \\<bottom>) \\<subseteq> {{}, space M}", "have \"\\<forall>B \\<in> sets (bernoulli_stream p). pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>B\\<in>sets (bernoulli_stream p).\n       pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (bernoulli_stream p) \\<Longrightarrow>\n       pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}", "fix B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (bernoulli_stream p) \\<Longrightarrow>\n       pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}", "assume \"B \\<in> sets (bernoulli_stream p)\""], ["proof (state)\nthis:\n  B \\<in> sets (bernoulli_stream p)\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (bernoulli_stream p) \\<Longrightarrow>\n       pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}", "show \"pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}", "proof (cases \"sconst True \\<in> B\")"], ["proof (state)\ngoal (2 subgoals):\n 1. sconst True \\<in> B \\<Longrightarrow>\n    pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}\n 2. sconst True \\<notin> B \\<Longrightarrow>\n    pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}", "case True"], ["proof (state)\nthis:\n  sconst True \\<in> B\n\ngoal (2 subgoals):\n 1. sconst True \\<in> B \\<Longrightarrow>\n    pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}\n 2. sconst True \\<notin> B \\<Longrightarrow>\n    pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}", "hence \"pseudo_proj_True 0 -` B \\<inter> space M = space M\""], ["proof (prove)\nusing this:\n  sconst True \\<in> B\n\ngoal (1 subgoal):\n 1. pseudo_proj_True 0 -` B \\<inter> space M = space M", "using img"], ["proof (prove)\nusing this:\n  sconst True \\<in> B\n  \\<forall>w\\<in>space M. pseudo_proj_True 0 w = sconst True\n\ngoal (1 subgoal):\n 1. pseudo_proj_True 0 -` B \\<inter> space M = space M", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True 0 -` B \\<inter> space M = space M\n\ngoal (2 subgoals):\n 1. sconst True \\<in> B \\<Longrightarrow>\n    pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}\n 2. sconst True \\<notin> B \\<Longrightarrow>\n    pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}", "thus ?thesis"], ["proof (prove)\nusing this:\n  pseudo_proj_True 0 -` B \\<inter> space M = space M\n\ngoal (1 subgoal):\n 1. pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}\n\ngoal (1 subgoal):\n 1. sconst True \\<notin> B \\<Longrightarrow>\n    pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. sconst True \\<notin> B \\<Longrightarrow>\n    pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}", "case False"], ["proof (state)\nthis:\n  sconst True \\<notin> B\n\ngoal (1 subgoal):\n 1. sconst True \\<notin> B \\<Longrightarrow>\n    pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}", "hence \"pseudo_proj_True 0 -` B \\<inter> space M = {}\""], ["proof (prove)\nusing this:\n  sconst True \\<notin> B\n\ngoal (1 subgoal):\n 1. pseudo_proj_True 0 -` B \\<inter> space M = {}", "using img"], ["proof (prove)\nusing this:\n  sconst True \\<notin> B\n  \\<forall>w\\<in>space M. pseudo_proj_True 0 w = sconst True\n\ngoal (1 subgoal):\n 1. pseudo_proj_True 0 -` B \\<inter> space M = {}", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True 0 -` B \\<inter> space M = {}\n\ngoal (1 subgoal):\n 1. sconst True \\<notin> B \\<Longrightarrow>\n    pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}", "thus ?thesis"], ["proof (prove)\nusing this:\n  pseudo_proj_True 0 -` B \\<inter> space M = {}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>B\\<in>sets (bernoulli_stream p).\n     pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}\n\ngoal (1 subgoal):\n 1. sets (nat_filtration \\<bottom>) \\<subseteq> {{}, space M}", "hence \"{pseudo_proj_True 0 -` B \\<inter> space M |B. B \\<in> sets (bernoulli_stream p)} \\<subseteq> {{}, space M}\""], ["proof (prove)\nusing this:\n  \\<forall>B\\<in>sets (bernoulli_stream p).\n     pseudo_proj_True 0 -` B \\<inter> space M \\<in> {{}, space M}\n\ngoal (1 subgoal):\n 1. {pseudo_proj_True 0 -` B \\<inter> space M |B.\n     B \\<in> sets (bernoulli_stream p)}\n    \\<subseteq> {{}, space M}", "by auto"], ["proof (state)\nthis:\n  {pseudo_proj_True 0 -` B \\<inter> space M |B.\n   B \\<in> sets (bernoulli_stream p)}\n  \\<subseteq> {{}, space M}\n\ngoal (1 subgoal):\n 1. sets (nat_filtration \\<bottom>) \\<subseteq> {{}, space M}", "hence \"sigma_sets (space (bernoulli_stream p))\n            {pseudo_proj_True 0 -` B \\<inter> space M |B. B \\<in> sets (bernoulli_stream p)} \\<subseteq> {{}, space M}\""], ["proof (prove)\nusing this:\n  {pseudo_proj_True 0 -` B \\<inter> space M |B.\n   B \\<in> sets (bernoulli_stream p)}\n  \\<subseteq> {{}, space M}\n\ngoal (1 subgoal):\n 1. sigma_sets (space (bernoulli_stream p))\n     {pseudo_proj_True 0 -` B \\<inter> space M |B.\n      B \\<in> sets (bernoulli_stream p)}\n    \\<subseteq> {{}, space M}", "using sigma_algebra.sigma_sets_subset[of \"space (bernoulli_stream p)\" \"{{}, space M}\"]"], ["proof (prove)\nusing this:\n  {pseudo_proj_True 0 -` B \\<inter> space M |B.\n   B \\<in> sets (bernoulli_stream p)}\n  \\<subseteq> {{}, space M}\n  \\<lbrakk>sigma_algebra (space (bernoulli_stream p)) {{}, space M};\n   ?a \\<subseteq> {{}, space M}\\<rbrakk>\n  \\<Longrightarrow> sigma_sets (space (bernoulli_stream p)) ?a\n                    \\<subseteq> {{}, space M}\n\ngoal (1 subgoal):\n 1. sigma_sets (space (bernoulli_stream p))\n     {pseudo_proj_True 0 -` B \\<inter> space M |B.\n      B \\<in> sets (bernoulli_stream p)}\n    \\<subseteq> {{}, space M}", "by (simp add: bernoulli sigma_algebra_trivial)"], ["proof (state)\nthis:\n  sigma_sets (space (bernoulli_stream p))\n   {pseudo_proj_True 0 -` B \\<inter> space M |B.\n    B \\<in> sets (bernoulli_stream p)}\n  \\<subseteq> {{}, space M}\n\ngoal (1 subgoal):\n 1. sets (nat_filtration \\<bottom>) \\<subseteq> {{}, space M}", "thus ?thesis"], ["proof (prove)\nusing this:\n  sigma_sets (space (bernoulli_stream p))\n   {pseudo_proj_True 0 -` B \\<inter> space M |B.\n    B \\<in> sets (bernoulli_stream p)}\n  \\<subseteq> {{}, space M}\n\ngoal (1 subgoal):\n 1. sets (nat_filtration \\<bottom>) \\<subseteq> {{}, space M}", "by (simp add:nat_filtration_sets bot_nat_def)"], ["proof (state)\nthis:\n  sets (nat_filtration \\<bottom>) \\<subseteq> {{}, space M}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sets (nat_filtration \\<bottom>) \\<subseteq> {{}, space M}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sets (nat_filtration \\<bottom>) = {{}, space M}\n\ngoal:\nNo subgoals!", "qed"], ["", "sublocale infinite_cts_filtration \\<subseteq> triv_init_disc_filtr_prob_space"], ["proof (prove)\ngoal (1 subgoal):\n 1. triv_init_disc_filtr_prob_space M F", "proof (unfold_locales, intro conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. disc_filtr M F\n 2. sets (F \\<bottom>) = {{}, space M}", "show \"disc_filtr M F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc_filtr M F", "unfolding disc_filtr_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>n. subalgebra M (F n)) \\<and>\n    (\\<forall>n m. n \\<le> m \\<longrightarrow> subalgebra (F m) (F n))", "using filtrationE2 nat_discrete_filtration nat_filtration_subalgebra natural_filtration"], ["proof (prove)\nusing this:\n  \\<lbrakk>Filtration.filtration ?M ?F; ?s \\<le> ?t\\<rbrakk>\n  \\<Longrightarrow> subalgebra (?F ?t) (?F ?s)\n  Filtration.filtration M nat_filtration\n  subalgebra M (nat_filtration ?n)\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. (\\<forall>n. subalgebra M (F n)) \\<and>\n    (\\<forall>n m. n \\<le> m \\<longrightarrow> subalgebra (F m) (F n))", "by auto"], ["proof (state)\nthis:\n  disc_filtr M F\n\ngoal (1 subgoal):\n 1. sets (F \\<bottom>) = {{}, space M}", "show \"sets (F bot) = {{}, space M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (F \\<bottom>) = {{}, space M}", "using nat_info_filtration natural_filtration"], ["proof (prove)\nusing this:\n  init_triv_filt M nat_filtration\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. sets (F \\<bottom>) = {{}, space M}", "unfolding init_triv_filt_def"], ["proof (prove)\nusing this:\n  Filtration.filtration M nat_filtration \\<and>\n  sets (nat_filtration \\<bottom>) = {{}, space M}\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. sets (F \\<bottom>) = {{}, space M}", "by simp"], ["proof (state)\nthis:\n  sets (F \\<bottom>) = {{}, space M}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_vimage_finite:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t2_space}\"\n  assumes \"f\\<in> borel_measurable (nat_filtration n)\"\n  shows \"finite (f`(space M))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (f ` space M)", "using pseudo_proj_True_finite_image nat_filtration_info[of f n]"], ["proof (prove)\nusing this:\n  finite (range (pseudo_proj_True ?n))\n  f \\<in> borel_measurable (nat_filtration n) \\<Longrightarrow>\n  f \\<circ> pseudo_proj_True n = f\n\ngoal (1 subgoal):\n 1. finite (f ` space M)", "by (metis assms bernoulli bernoulli_stream_space finite_imageI fun.set_map streams_UNIV)"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_borel_measurable_simple:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t2_space}\"\n  assumes \"f\\<in> borel_measurable (nat_filtration n)\"\n  shows \"simple_function M f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. simple_function M f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. simple_function M f", "have f1: \"\\<forall>m ma. (m::bool stream measure) \\<rightarrow>\\<^sub>M (ma::'b measure) = {f \\<in> space m \\<rightarrow> space ma. \\<forall>B. B \\<in> sets ma \\<longrightarrow> f -` B \\<inter> space m \\<in> sets m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m ma.\n       m \\<rightarrow>\\<^sub>M ma =\n       {f \\<in> space m \\<rightarrow> space ma.\n        \\<forall>B.\n           B \\<in> sets ma \\<longrightarrow>\n           f -` B \\<inter> space m \\<in> sets m}", "by (metis measurable_def)"], ["proof (state)\nthis:\n  \\<forall>m ma.\n     m \\<rightarrow>\\<^sub>M ma =\n     {f \\<in> space m \\<rightarrow> space ma.\n      \\<forall>B.\n         B \\<in> sets ma \\<longrightarrow>\n         f -` B \\<inter> space m \\<in> sets m}\n\ngoal (1 subgoal):\n 1. simple_function M f", "then"], ["proof (chain)\npicking this:\n  \\<forall>m ma.\n     m \\<rightarrow>\\<^sub>M ma =\n     {f \\<in> space m \\<rightarrow> space ma.\n      \\<forall>B.\n         B \\<in> sets ma \\<longrightarrow>\n         f -` B \\<inter> space m \\<in> sets m}", "have \"f \\<in> space (nat_filtration n) \\<rightarrow> space borel \\<and> (\\<forall>B. B \\<in> sets borel \\<longrightarrow> f -` B \\<inter> space (nat_filtration n) \\<in> sets (nat_filtration n))\""], ["proof (prove)\nusing this:\n  \\<forall>m ma.\n     m \\<rightarrow>\\<^sub>M ma =\n     {f \\<in> space m \\<rightarrow> space ma.\n      \\<forall>B.\n         B \\<in> sets ma \\<longrightarrow>\n         f -` B \\<inter> space m \\<in> sets m}\n\ngoal (1 subgoal):\n 1. f \\<in> space (nat_filtration n) \\<rightarrow> space borel \\<and>\n    (\\<forall>B.\n        B \\<in> sets borel \\<longrightarrow>\n        f -` B \\<inter> space (nat_filtration n)\n        \\<in> sets (nat_filtration n))", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>m ma.\n     m \\<rightarrow>\\<^sub>M ma =\n     {f \\<in> space m \\<rightarrow> space ma.\n      \\<forall>B.\n         B \\<in> sets ma \\<longrightarrow>\n         f -` B \\<inter> space m \\<in> sets m}\n  f \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. f \\<in> space (nat_filtration n) \\<rightarrow> space borel \\<and>\n    (\\<forall>B.\n        B \\<in> sets borel \\<longrightarrow>\n        f -` B \\<inter> space (nat_filtration n)\n        \\<in> sets (nat_filtration n))", "by blast"], ["proof (state)\nthis:\n  f \\<in> space (nat_filtration n) \\<rightarrow> space borel \\<and>\n  (\\<forall>B.\n      B \\<in> sets borel \\<longrightarrow>\n      f -` B \\<inter> space (nat_filtration n)\n      \\<in> sets (nat_filtration n))\n\ngoal (1 subgoal):\n 1. simple_function M f", "then"], ["proof (chain)\npicking this:\n  f \\<in> space (nat_filtration n) \\<rightarrow> space borel \\<and>\n  (\\<forall>B.\n      B \\<in> sets borel \\<longrightarrow>\n      f -` B \\<inter> space (nat_filtration n)\n      \\<in> sets (nat_filtration n))", "have \"f \\<in> space M \\<rightarrow> space borel \\<and> (\\<forall>B. B \\<in> sets borel \\<longrightarrow> f -` B \\<inter> space M \\<in> events)\""], ["proof (prove)\nusing this:\n  f \\<in> space (nat_filtration n) \\<rightarrow> space borel \\<and>\n  (\\<forall>B.\n      B \\<in> sets borel \\<longrightarrow>\n      f -` B \\<inter> space (nat_filtration n)\n      \\<in> sets (nat_filtration n))\n\ngoal (1 subgoal):\n 1. f \\<in> space M \\<rightarrow> space borel \\<and>\n    (\\<forall>B.\n        B \\<in> sets borel \\<longrightarrow>\n        f -` B \\<inter> space M \\<in> events)", "by (metis (no_types) contra_subsetD nat_filtration_subalgebra subalgebra_def)"], ["proof (state)\nthis:\n  f \\<in> space M \\<rightarrow> space borel \\<and>\n  (\\<forall>B.\n      B \\<in> sets borel \\<longrightarrow>\n      f -` B \\<inter> space M \\<in> events)\n\ngoal (1 subgoal):\n 1. simple_function M f", "then"], ["proof (chain)\npicking this:\n  f \\<in> space M \\<rightarrow> space borel \\<and>\n  (\\<forall>B.\n      B \\<in> sets borel \\<longrightarrow>\n      f -` B \\<inter> space M \\<in> events)", "have \"random_variable borel f\""], ["proof (prove)\nusing this:\n  f \\<in> space M \\<rightarrow> space borel \\<and>\n  (\\<forall>B.\n      B \\<in> sets borel \\<longrightarrow>\n      f -` B \\<inter> space M \\<in> events)\n\ngoal (1 subgoal):\n 1. random_variable borel f", "using f1"], ["proof (prove)\nusing this:\n  f \\<in> space M \\<rightarrow> space borel \\<and>\n  (\\<forall>B.\n      B \\<in> sets borel \\<longrightarrow>\n      f -` B \\<inter> space M \\<in> events)\n  \\<forall>m ma.\n     m \\<rightarrow>\\<^sub>M ma =\n     {f \\<in> space m \\<rightarrow> space ma.\n      \\<forall>B.\n         B \\<in> sets ma \\<longrightarrow>\n         f -` B \\<inter> space m \\<in> sets m}\n\ngoal (1 subgoal):\n 1. random_variable borel f", "by blast"], ["proof (state)\nthis:\n  random_variable borel f\n\ngoal (1 subgoal):\n 1. simple_function M f", "then"], ["proof (chain)\npicking this:\n  random_variable borel f", "show ?thesis"], ["proof (prove)\nusing this:\n  random_variable borel f\n\ngoal (1 subgoal):\n 1. simple_function M f", "using assms nat_filtration_vimage_finite simple_function_borel_measurable"], ["proof (prove)\nusing this:\n  random_variable borel f\n  f \\<in> borel_measurable (nat_filtration n)\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  finite (?f ` space M)\n  \\<lbrakk>?f \\<in> borel_measurable ?M; finite (?f ` space ?M)\\<rbrakk>\n  \\<Longrightarrow> simple_function ?M ?f\n\ngoal (1 subgoal):\n 1. simple_function M f", "by blast"], ["proof (state)\nthis:\n  simple_function M f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_singleton_range_set:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t2_space}\"\n  assumes \"f\\<in> borel_measurable (nat_filtration n)\"\n  shows \"\\<exists> A\\<in> sets borel. range f \\<inter> A = {f x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets borel. range f \\<inter> A = {f x}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets borel. range f \\<inter> A = {f x}", "let ?Ax = \"range f - {f x}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets borel. range f \\<inter> A = {f x}", "have \"range f = f`space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range f = f ` space M", "using bernoulli bernoulli_stream_space"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. range f = f ` space M", "by simp"], ["proof (state)\nthis:\n  range f = f ` space M\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets borel. range f \\<inter> A = {f x}", "hence \"finite ?Ax\""], ["proof (prove)\nusing this:\n  range f = f ` space M\n\ngoal (1 subgoal):\n 1. finite (range f - {f x})", "using assms nat_filtration_vimage_finite"], ["proof (prove)\nusing this:\n  range f = f ` space M\n  f \\<in> borel_measurable (nat_filtration n)\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  finite (?f ` space M)\n\ngoal (1 subgoal):\n 1. finite (range f - {f x})", "by auto"], ["proof (state)\nthis:\n  finite (range f - {f x})\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets borel. range f \\<inter> A = {f x}", "hence \"\\<exists>U. open U \\<and> f x\\<in> U \\<and> U\\<inter> ?Ax = {}\""], ["proof (prove)\nusing this:\n  finite (range f - {f x})\n\ngoal (1 subgoal):\n 1. \\<exists>U.\n       open U \\<and> f x \\<in> U \\<and> U \\<inter> (range f - {f x}) = {}", "by (simp add:open_except_set)"], ["proof (state)\nthis:\n  \\<exists>U.\n     open U \\<and> f x \\<in> U \\<and> U \\<inter> (range f - {f x}) = {}\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets borel. range f \\<inter> A = {f x}", "then"], ["proof (chain)\npicking this:\n  \\<exists>U.\n     open U \\<and> f x \\<in> U \\<and> U \\<inter> (range f - {f x}) = {}", "obtain U where \"open U\" and \"f x\\<in> U\" and \"U\\<inter> ?Ax = {}\""], ["proof (prove)\nusing this:\n  \\<exists>U.\n     open U \\<and> f x \\<in> U \\<and> U \\<inter> (range f - {f x}) = {}\n\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>open U; f x \\<in> U;\n         U \\<inter> (range f - {f x}) = {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  open U\n  f x \\<in> U\n  U \\<inter> (range f - {f x}) = {}\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets borel. range f \\<inter> A = {f x}", "have \"U \\<in> sets borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U \\<in> sets borel", "using \\<open>open U\\<close>"], ["proof (prove)\nusing this:\n  open U\n\ngoal (1 subgoal):\n 1. U \\<in> sets borel", "by simp"], ["proof (state)\nthis:\n  U \\<in> sets borel\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets borel. range f \\<inter> A = {f x}", "have \"range f \\<inter> U = {f x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range f \\<inter> U = {f x}", "using \\<open>f x \\<in> U\\<close> \\<open>U\\<inter> ?Ax = {}\\<close>"], ["proof (prove)\nusing this:\n  f x \\<in> U\n  U \\<inter> (range f - {f x}) = {}\n\ngoal (1 subgoal):\n 1. range f \\<inter> U = {f x}", "by blast"], ["proof (state)\nthis:\n  range f \\<inter> U = {f x}\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets borel. range f \\<inter> A = {f x}", "thus \"\\<exists>A\\<in> sets borel. range f \\<inter> A = {f x}\""], ["proof (prove)\nusing this:\n  range f \\<inter> U = {f x}\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets borel. range f \\<inter> A = {f x}", "using \\<open>U\\<in> sets borel\\<close>"], ["proof (prove)\nusing this:\n  range f \\<inter> U = {f x}\n  U \\<in> sets borel\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets borel. range f \\<inter> A = {f x}", "by auto"], ["proof (state)\nthis:\n  \\<exists>A\\<in>sets borel. range f \\<inter> A = {f x}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_borel_measurable_singleton:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t2_space}\"\n  assumes \"f\\<in> borel_measurable (nat_filtration n)\"\n  shows \"f -`{f x} \\<in> sets (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` {f x} \\<in> sets (nat_filtration n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f -` {f x} \\<in> sets (nat_filtration n)", "let ?Ax = \"f`space M - {f x}\""], ["proof (state)\ngoal (1 subgoal):\n 1. f -` {f x} \\<in> sets (nat_filtration n)", "have \"finite ?Ax\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (f ` space M - {f x})", "using assms nat_filtration_vimage_finite"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (nat_filtration n)\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  finite (?f ` space M)\n\ngoal (1 subgoal):\n 1. finite (f ` space M - {f x})", "by blast"], ["proof (state)\nthis:\n  finite (f ` space M - {f x})\n\ngoal (1 subgoal):\n 1. f -` {f x} \\<in> sets (nat_filtration n)", "hence \"\\<exists>U. open U \\<and> f x\\<in> U \\<and> U\\<inter> ?Ax = {}\""], ["proof (prove)\nusing this:\n  finite (f ` space M - {f x})\n\ngoal (1 subgoal):\n 1. \\<exists>U.\n       open U \\<and>\n       f x \\<in> U \\<and> U \\<inter> (f ` space M - {f x}) = {}", "by (simp add:open_except_set)"], ["proof (state)\nthis:\n  \\<exists>U.\n     open U \\<and> f x \\<in> U \\<and> U \\<inter> (f ` space M - {f x}) = {}\n\ngoal (1 subgoal):\n 1. f -` {f x} \\<in> sets (nat_filtration n)", "then"], ["proof (chain)\npicking this:\n  \\<exists>U.\n     open U \\<and> f x \\<in> U \\<and> U \\<inter> (f ` space M - {f x}) = {}", "obtain U where \"open U\" and \"f x\\<in> U\" and \"U\\<inter> ?Ax = {}\""], ["proof (prove)\nusing this:\n  \\<exists>U.\n     open U \\<and> f x \\<in> U \\<and> U \\<inter> (f ` space M - {f x}) = {}\n\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>open U; f x \\<in> U;\n         U \\<inter> (f ` space M - {f x}) = {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  open U\n  f x \\<in> U\n  U \\<inter> (f ` space M - {f x}) = {}\n\ngoal (1 subgoal):\n 1. f -` {f x} \\<in> sets (nat_filtration n)", "have \"f x \\<in> f ` space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<in> f ` space M", "using bernoulli_stream_space bernoulli"], ["proof (prove)\nusing this:\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n  M = bernoulli_stream p\n\ngoal (1 subgoal):\n 1. f x \\<in> f ` space M", "by simp"], ["proof (state)\nthis:\n  f x \\<in> f ` space M\n\ngoal (1 subgoal):\n 1. f -` {f x} \\<in> sets (nat_filtration n)", "hence \"f`space M \\<inter> U = {f x}\""], ["proof (prove)\nusing this:\n  f x \\<in> f ` space M\n\ngoal (1 subgoal):\n 1. f ` space M \\<inter> U = {f x}", "using \\<open>f x\\<in> U\\<close> \\<open>U\\<inter> ?Ax = {}\\<close>"], ["proof (prove)\nusing this:\n  f x \\<in> f ` space M\n  f x \\<in> U\n  U \\<inter> (f ` space M - {f x}) = {}\n\ngoal (1 subgoal):\n 1. f ` space M \\<inter> U = {f x}", "by blast"], ["proof (state)\nthis:\n  f ` space M \\<inter> U = {f x}\n\ngoal (1 subgoal):\n 1. f -` {f x} \\<in> sets (nat_filtration n)", "hence \"\\<exists>A. open A\\<and> f`space M \\<inter> A = {f x}\""], ["proof (prove)\nusing this:\n  f ` space M \\<inter> U = {f x}\n\ngoal (1 subgoal):\n 1. \\<exists>A. open A \\<and> f ` space M \\<inter> A = {f x}", "using \\<open>open U\\<close>"], ["proof (prove)\nusing this:\n  f ` space M \\<inter> U = {f x}\n  open U\n\ngoal (1 subgoal):\n 1. \\<exists>A. open A \\<and> f ` space M \\<inter> A = {f x}", "by auto"], ["proof (state)\nthis:\n  \\<exists>A. open A \\<and> f ` space M \\<inter> A = {f x}\n\ngoal (1 subgoal):\n 1. f -` {f x} \\<in> sets (nat_filtration n)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A. open A \\<and> f ` space M \\<inter> A = {f x}", "obtain A where \"open A\" and inter: \"f`space M \\<inter> A = {f x}\""], ["proof (prove)\nusing this:\n  \\<exists>A. open A \\<and> f ` space M \\<inter> A = {f x}\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>open A; f ` space M \\<inter> A = {f x}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  open A\n  f ` space M \\<inter> A = {f x}\n\ngoal (1 subgoal):\n 1. f -` {f x} \\<in> sets (nat_filtration n)", "have \"A \\<in> sets borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> sets borel", "using \\<open>open A\\<close>"], ["proof (prove)\nusing this:\n  open A\n\ngoal (1 subgoal):\n 1. A \\<in> sets borel", "by simp"], ["proof (state)\nthis:\n  A \\<in> sets borel\n\ngoal (1 subgoal):\n 1. f -` {f x} \\<in> sets (nat_filtration n)", "hence \"f -`A \\<inter> space M \\<in> sets (nat_filtration n)\""], ["proof (prove)\nusing this:\n  A \\<in> sets borel\n\ngoal (1 subgoal):\n 1. f -` A \\<inter> space M \\<in> sets (nat_filtration n)", "using assms nat_filtration_space"], ["proof (prove)\nusing this:\n  A \\<in> sets borel\n  f \\<in> borel_measurable (nat_filtration n)\n  space (nat_filtration ?n) = UNIV\n\ngoal (1 subgoal):\n 1. f -` A \\<inter> space M \\<in> sets (nat_filtration n)", "by (simp add: bernoulli bernoulli_stream_space in_borel_measurable_borel)"], ["proof (state)\nthis:\n  f -` A \\<inter> space M \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. f -` {f x} \\<in> sets (nat_filtration n)", "hence \"f -`A \\<inter> space M \\<in> events\""], ["proof (prove)\nusing this:\n  f -` A \\<inter> space M \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. f -` A \\<inter> space M \\<in> events", "using nat_filtration_subalgebra"], ["proof (prove)\nusing this:\n  f -` A \\<inter> space M \\<in> sets (nat_filtration n)\n  subalgebra M (nat_filtration ?n)\n\ngoal (1 subgoal):\n 1. f -` A \\<inter> space M \\<in> events", "by (meson subalgebra_def subset_eq)"], ["proof (state)\nthis:\n  f -` A \\<inter> space M \\<in> events\n\ngoal (1 subgoal):\n 1. f -` {f x} \\<in> sets (nat_filtration n)", "have \"f -`{f x}\\<inter> space M  = f -`A\\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` {f x} \\<inter> space M = f -` A \\<inter> space M", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. f -` {f x} \\<inter> space M \\<subseteq> f -` A \\<inter> space M\n 2. f -` A \\<inter> space M \\<subseteq> f -` {f x} \\<inter> space M", "have \"f x\\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<in> A", "using inter"], ["proof (prove)\nusing this:\n  f ` space M \\<inter> A = {f x}\n\ngoal (1 subgoal):\n 1. f x \\<in> A", "by auto"], ["proof (state)\nthis:\n  f x \\<in> A\n\ngoal (2 subgoals):\n 1. f -` {f x} \\<inter> space M \\<subseteq> f -` A \\<inter> space M\n 2. f -` A \\<inter> space M \\<subseteq> f -` {f x} \\<inter> space M", "thus \"f -` {f x}\\<inter> space M \\<subseteq> f -` A\\<inter> space M\""], ["proof (prove)\nusing this:\n  f x \\<in> A\n\ngoal (1 subgoal):\n 1. f -` {f x} \\<inter> space M \\<subseteq> f -` A \\<inter> space M", "by auto"], ["proof (state)\nthis:\n  f -` {f x} \\<inter> space M \\<subseteq> f -` A \\<inter> space M\n\ngoal (1 subgoal):\n 1. f -` A \\<inter> space M \\<subseteq> f -` {f x} \\<inter> space M", "show \"f -` A\\<inter> space M \\<subseteq> f -` {f x}\\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` A \\<inter> space M \\<subseteq> f -` {f x} \\<inter> space M", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> f -` A \\<inter> space M \\<Longrightarrow>\n       xa \\<in> f -` {f x} \\<inter> space M", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> f -` A \\<inter> space M \\<Longrightarrow>\n       xa \\<in> f -` {f x} \\<inter> space M", "assume \"y\\<in> f-` A\\<inter> space M\""], ["proof (state)\nthis:\n  y \\<in> f -` A \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> f -` A \\<inter> space M \\<Longrightarrow>\n       xa \\<in> f -` {f x} \\<inter> space M", "hence  \"f y \\<in> A\\<inter> f`space M\""], ["proof (prove)\nusing this:\n  y \\<in> f -` A \\<inter> space M\n\ngoal (1 subgoal):\n 1. f y \\<in> A \\<inter> f ` space M", "by simp"], ["proof (state)\nthis:\n  f y \\<in> A \\<inter> f ` space M\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> f -` A \\<inter> space M \\<Longrightarrow>\n       xa \\<in> f -` {f x} \\<inter> space M", "hence \"f y = f x\""], ["proof (prove)\nusing this:\n  f y \\<in> A \\<inter> f ` space M\n\ngoal (1 subgoal):\n 1. f y = f x", "using inter"], ["proof (prove)\nusing this:\n  f y \\<in> A \\<inter> f ` space M\n  f ` space M \\<inter> A = {f x}\n\ngoal (1 subgoal):\n 1. f y = f x", "by auto"], ["proof (state)\nthis:\n  f y = f x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> f -` A \\<inter> space M \\<Longrightarrow>\n       xa \\<in> f -` {f x} \\<inter> space M", "thus \"y\\<in> f -` {f x}\\<inter> space M\""], ["proof (prove)\nusing this:\n  f y = f x\n\ngoal (1 subgoal):\n 1. y \\<in> f -` {f x} \\<inter> space M", "using \\<open>y\\<in> f-` A\\<inter> space M\\<close>"], ["proof (prove)\nusing this:\n  f y = f x\n  y \\<in> f -` A \\<inter> space M\n\ngoal (1 subgoal):\n 1. y \\<in> f -` {f x} \\<inter> space M", "by auto"], ["proof (state)\nthis:\n  y \\<in> f -` {f x} \\<inter> space M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f -` A \\<inter> space M \\<subseteq> f -` {f x} \\<inter> space M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f -` {f x} \\<inter> space M = f -` A \\<inter> space M\n\ngoal (1 subgoal):\n 1. f -` {f x} \\<in> sets (nat_filtration n)", "moreover"], ["proof (state)\nthis:\n  f -` {f x} \\<inter> space M = f -` A \\<inter> space M\n\ngoal (1 subgoal):\n 1. f -` {f x} \\<in> sets (nat_filtration n)", "have \"f -`A \\<inter> space M \\<in> (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` A \\<inter> space M \\<in> sets (nat_filtration n)", "using assms \\<open>A\\<in> sets borel\\<close>"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (nat_filtration n)\n  A \\<in> sets borel\n\ngoal (1 subgoal):\n 1. f -` A \\<inter> space M \\<in> sets (nat_filtration n)", "using \\<open>f -` A \\<inter> space M \\<in> sets (nat_filtration n)\\<close>"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (nat_filtration n)\n  A \\<in> sets borel\n  f -` A \\<inter> space M \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. f -` A \\<inter> space M \\<in> sets (nat_filtration n)", "by blast"], ["proof (state)\nthis:\n  f -` A \\<inter> space M \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. f -` {f x} \\<in> sets (nat_filtration n)", "ultimately"], ["proof (chain)\npicking this:\n  f -` {f x} \\<inter> space M = f -` A \\<inter> space M\n  f -` A \\<inter> space M \\<in> sets (nat_filtration n)", "show ?thesis"], ["proof (prove)\nusing this:\n  f -` {f x} \\<inter> space M = f -` A \\<inter> space M\n  f -` A \\<inter> space M \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. f -` {f x} \\<in> sets (nat_filtration n)", "using bernoulli_stream_space bernoulli"], ["proof (prove)\nusing this:\n  f -` {f x} \\<inter> space M = f -` A \\<inter> space M\n  f -` A \\<inter> space M \\<in> sets (nat_filtration n)\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n  M = bernoulli_stream p\n\ngoal (1 subgoal):\n 1. f -` {f x} \\<in> sets (nat_filtration n)", "by simp"], ["proof (state)\nthis:\n  f -` {f x} \\<in> sets (nat_filtration n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) borel_adapt_nat_filtration_info:\n  fixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  and \"m \\<le> n\"\nshows \"X m (pseudo_proj_True n w) = X m w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X m (pseudo_proj_True n w) = X m w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. X m (pseudo_proj_True n w) = X m w", "have \"X m \\<in> borel_measurable (F n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X m \\<in> borel_measurable (F n)", "using assms natural_filtration"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc F X\n  m \\<le> n\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. X m \\<in> borel_measurable (F n)", "using  increasing_measurable_info"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc F X\n  m \\<le> n\n  F = nat_filtration\n  \\<lbrakk>?f \\<in> F ?s \\<rightarrow>\\<^sub>M ?N; ?s \\<le> ?t\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> F ?t \\<rightarrow>\\<^sub>M ?N\n\ngoal (1 subgoal):\n 1. X m \\<in> borel_measurable (F n)", "by (metis adapt_stoch_proc_def)"], ["proof (state)\nthis:\n  X m \\<in> borel_measurable (F n)\n\ngoal (1 subgoal):\n 1. X m (pseudo_proj_True n w) = X m w", "thus ?thesis"], ["proof (prove)\nusing this:\n  X m \\<in> borel_measurable (F n)\n\ngoal (1 subgoal):\n 1. X m (pseudo_proj_True n w) = X m w", "using nat_filtration_info natural_filtration"], ["proof (prove)\nusing this:\n  X m \\<in> borel_measurable (F n)\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  ?f \\<circ> pseudo_proj_True ?n = ?f\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. X m (pseudo_proj_True n w) = X m w", "by (metis comp_apply)"], ["proof (state)\nthis:\n  X m (pseudo_proj_True n w) = X m w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_borel_measurable_integrable:\n  assumes \"f\\<in> borel_measurable (nat_filtration n)\"\n  shows \"integrable M f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. integrable M f", "have \"simple_function M f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. simple_function M f", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. simple_function M f", "by (simp add: nat_filtration_borel_measurable_simple)"], ["proof (state)\nthis:\n  simple_function M f\n\ngoal (1 subgoal):\n 1. integrable M f", "moreover"], ["proof (state)\nthis:\n  simple_function M f\n\ngoal (1 subgoal):\n 1. integrable M f", "have \"emeasure M {y \\<in> space M. f y \\<noteq> 0} \\<noteq> \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M {y \\<in> space M. f y \\<noteq> (0::'a)} \\<noteq> \\<infinity>", "by simp"], ["proof (state)\nthis:\n  emeasure M {y \\<in> space M. f y \\<noteq> (0::'a)} \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. integrable M f", "ultimately"], ["proof (chain)\npicking this:\n  simple_function M f\n  emeasure M {y \\<in> space M. f y \\<noteq> (0::'a)} \\<noteq> \\<infinity>", "have \"Bochner_Integration.simple_bochner_integrable M f\""], ["proof (prove)\nusing this:\n  simple_function M f\n  emeasure M {y \\<in> space M. f y \\<noteq> (0::'a)} \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. Bochner_Integration.simple_bochner_integrable M f", "using Bochner_Integration.simple_bochner_integrable.simps"], ["proof (prove)\nusing this:\n  simple_function M f\n  emeasure M {y \\<in> space M. f y \\<noteq> (0::'a)} \\<noteq> \\<infinity>\n  Bochner_Integration.simple_bochner_integrable ?M ?f =\n  (simple_function ?M ?f \\<and>\n   emeasure ?M {y \\<in> space ?M. ?f y \\<noteq> (0::?'b)} \\<noteq>\n   \\<infinity>)\n\ngoal (1 subgoal):\n 1. Bochner_Integration.simple_bochner_integrable M f", "by blast"], ["proof (state)\nthis:\n  Bochner_Integration.simple_bochner_integrable M f\n\ngoal (1 subgoal):\n 1. integrable M f", "hence \"has_bochner_integral M f (Bochner_Integration.simple_bochner_integral M f)\""], ["proof (prove)\nusing this:\n  Bochner_Integration.simple_bochner_integrable M f\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (Bochner_Integration.simple_bochner_integral M f)", "using has_bochner_integral_simple_bochner_integrable"], ["proof (prove)\nusing this:\n  Bochner_Integration.simple_bochner_integrable M f\n  Bochner_Integration.simple_bochner_integrable ?M ?f \\<Longrightarrow>\n  has_bochner_integral ?M ?f\n   (Bochner_Integration.simple_bochner_integral ?M ?f)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (Bochner_Integration.simple_bochner_integral M f)", "by auto"], ["proof (state)\nthis:\n  has_bochner_integral M f (Bochner_Integration.simple_bochner_integral M f)\n\ngoal (1 subgoal):\n 1. integrable M f", "thus ?thesis"], ["proof (prove)\nusing this:\n  has_bochner_integral M f (Bochner_Integration.simple_bochner_integral M f)\n\ngoal (1 subgoal):\n 1. integrable M f", "using integrable.simps"], ["proof (prove)\nusing this:\n  has_bochner_integral M f (Bochner_Integration.simple_bochner_integral M f)\n  integrable ?M ?f = (\\<exists>x. has_bochner_integral ?M ?f x)\n\ngoal (1 subgoal):\n 1. integrable M f", "by auto"], ["proof (state)\nthis:\n  integrable M f\n\ngoal:\nNo subgoals!", "qed"], ["", "definition (in infinite_coin_toss_space) spick:: \"bool stream \\<Rightarrow> nat \\<Rightarrow> bool \\<Rightarrow> bool stream\" where\n  \"spick w n v = shift (stake n w) (v## sconst True)\""], ["", "lemma (in infinite_coin_toss_space) spickI:\n  shows \"stake n (spick w n v) = stake n w \\<and> snth (spick w n v) n = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake n (spick w n v) = stake n w \\<and> spick w n v !! n = v", "by (simp add: spick_def stake_shift)"], ["", "lemma (in infinite_coin_toss_space) spick_eq_pseudo_proj_True:\n  shows \"spick w n True = pseudo_proj_True n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spick w n True = pseudo_proj_True n w", "unfolding spick_def pseudo_proj_True_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. stake n w @- True ## sconst True = stake n w @- sconst True", "by (metis (full_types) id_apply siterate.code)"], ["", "lemma (in infinite_coin_toss_space) spick_eq_pseudo_proj_False:\n  shows \"spick w n False = pseudo_proj_False n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spick w n False = pseudo_proj_False n w", "unfolding spick_def pseudo_proj_False_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. stake n w @- False ## sconst True = (stake n w @ [False]) @- sconst True", "by simp"], ["", "lemma (in infinite_coin_toss_space) spick_pseudo_proj:\n  shows \"spick (pseudo_proj_True (Suc n) w) n v = spick w n v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spick (pseudo_proj_True (Suc n) w) n v = spick w n v", "by (metis pseudo_proj_True_proj_Suc pseudo_proj_True_stake spick_def)"], ["", "lemma (in infinite_coin_toss_space) spick_pseudo_proj_gen:\n  shows \"m < n \\<Longrightarrow> spick (pseudo_proj_True n w) m v = spick w m v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m < n \\<Longrightarrow> spick (pseudo_proj_True n w) m v = spick w m v", "by (metis Suc_leI pseudo_proj_True_proj pseudo_proj_True_prefix spick_pseudo_proj)"], ["", "lemma (in infinite_coin_toss_space) spick_nat_filtration_measurable:\n  shows \"(\\<lambda>w. spick w n v) \\<in> measurable (nat_filtration n) M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n v) \\<in> nat_filtration n \\<rightarrow>\\<^sub>M M", "proof (rule nat_filtration_comp_measurable)"], ["proof (state)\ngoal (2 subgoals):\n 1. random_variable M (\\<lambda>w. spick w n v)\n 2. (\\<lambda>w. spick w n v) \\<circ> pseudo_proj_True n =\n    (\\<lambda>w. spick w n v)", "show \"(\\<lambda>w. spick w n v) \\<in> measurable M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable M (\\<lambda>w. spick w n v)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. random_variable M (\\<lambda>w. spick w n v)", "let ?N = \"bernoulli_stream p\""], ["proof (state)\ngoal (1 subgoal):\n 1. random_variable M (\\<lambda>w. spick w n v)", "have \"id \\<in> measurable ?N ?N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. id \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "by simp"], ["proof (state)\nthis:\n  id \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n\ngoal (1 subgoal):\n 1. random_variable M (\\<lambda>w. spick w n v)", "moreover"], ["proof (state)\nthis:\n  id \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n\ngoal (1 subgoal):\n 1. random_variable M (\\<lambda>w. spick w n v)", "have \"(\\<lambda>w. v## (sconst True)) \\<in> measurable ?N ?N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. v ## sconst True)\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "using bernoulli_stream_space"], ["proof (prove)\nusing this:\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. v ## sconst True)\n    \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. v ## sconst True)\n  \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n\ngoal (1 subgoal):\n 1. random_variable M (\\<lambda>w. spick w n v)", "ultimately"], ["proof (chain)\npicking this:\n  id \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n  (\\<lambda>w. v ## sconst True)\n  \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p", "show ?thesis"], ["proof (prove)\nusing this:\n  id \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n  (\\<lambda>w. v ## sconst True)\n  \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n\ngoal (1 subgoal):\n 1. random_variable M (\\<lambda>w. spick w n v)", "using measurable_shift bernoulli p_gt_0 p_lt_1"], ["proof (prove)\nusing this:\n  id \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n  (\\<lambda>w. v ## sconst True)\n  \\<in> bernoulli_stream p \\<rightarrow>\\<^sub>M bernoulli_stream p\n  \\<lbrakk>?f \\<in> ?N \\<rightarrow>\\<^sub>M stream_space ?M;\n   ?g \\<in> ?N \\<rightarrow>\\<^sub>M stream_space ?M\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x. stake ?n (?f x) @- ?g x)\n                    \\<in> ?N \\<rightarrow>\\<^sub>M stream_space ?M\n  M = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. random_variable M (\\<lambda>w. spick w n v)", "unfolding bernoulli_stream_def spick_def"], ["proof (prove)\nusing this:\n  id \\<in> stream_space\n            (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n           stream_space (measure_pmf (bernoulli_pmf p))\n  (\\<lambda>w. v ## sconst True)\n  \\<in> stream_space (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n        stream_space (measure_pmf (bernoulli_pmf p))\n  \\<lbrakk>?f \\<in> ?N \\<rightarrow>\\<^sub>M stream_space ?M;\n   ?g \\<in> ?N \\<rightarrow>\\<^sub>M stream_space ?M\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x. stake ?n (?f x) @- ?g x)\n                    \\<in> ?N \\<rightarrow>\\<^sub>M stream_space ?M\n  M = stream_space (measure_pmf (bernoulli_pmf p))\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. random_variable M (\\<lambda>w. stake n w @- v ## sconst True)", "by simp"], ["proof (state)\nthis:\n  random_variable M (\\<lambda>w. spick w n v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  random_variable M (\\<lambda>w. spick w n v)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n v) \\<circ> pseudo_proj_True n =\n    (\\<lambda>w. spick w n v)", "{"], ["proof (state)\nthis:\n  random_variable M (\\<lambda>w. spick w n v)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n v) \\<circ> pseudo_proj_True n =\n    (\\<lambda>w. spick w n v)", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n v) \\<circ> pseudo_proj_True n =\n    (\\<lambda>w. spick w n v)", "have \"spick (pseudo_proj_True n w) n v = spick w n v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spick (pseudo_proj_True n w) n v = spick w n v", "by (simp add: pseudo_proj_True_stake spick_def)"], ["proof (state)\nthis:\n  spick (pseudo_proj_True n w) n v = spick w n v\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n v) \\<circ> pseudo_proj_True n =\n    (\\<lambda>w. spick w n v)", "}"], ["proof (state)\nthis:\n  spick (pseudo_proj_True n ?w3) n v = spick ?w3 n v\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n v) \\<circ> pseudo_proj_True n =\n    (\\<lambda>w. spick w n v)", "thus \"(\\<lambda>w. spick w n v) \\<circ> pseudo_proj_True n = (\\<lambda>w. spick w n v)\""], ["proof (prove)\nusing this:\n  spick (pseudo_proj_True n ?w3) n v = spick ?w3 n v\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. spick w n v) \\<circ> pseudo_proj_True n =\n    (\\<lambda>w. spick w n v)", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>w. spick w n v) \\<circ> pseudo_proj_True n =\n  (\\<lambda>w. spick w n v)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition (in infinite_coin_toss_space) proj_rep_set:\n  \"proj_rep_set n = range (pseudo_proj_True n)\""], ["", "lemma (in infinite_coin_toss_space) proj_rep_set_finite:\n  shows \"finite (proj_rep_set n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (proj_rep_set n)", "using pseudo_proj_True_finite_image"], ["proof (prove)\nusing this:\n  finite (range (pseudo_proj_True ?n))\n\ngoal (1 subgoal):\n 1. finite (proj_rep_set n)", "by (simp add: proj_rep_set)"], ["", "lemma (in infinite_coin_toss_space) set_filt_contain:\n  assumes \"A\\<in> sets (nat_filtration n)\"\nand \"w\\<in> A\"\nshows \"pseudo_proj_True n -` {pseudo_proj_True n w} \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {pseudo_proj_True n w} \\<subseteq> A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               {pseudo_proj_True n w} \\<Longrightarrow>\n       x \\<in> A", "define indA where \"indA = ((indicator A)::bool stream\\<Rightarrow>real)\""], ["proof (state)\nthis:\n  indA = indicat_real A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               {pseudo_proj_True n w} \\<Longrightarrow>\n       x \\<in> A", "have \"indA \\<in> borel_measurable (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indA \\<in> borel_measurable (nat_filtration n)", "unfolding indA_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. indicat_real A \\<in> borel_measurable (nat_filtration n)", "by (simp add: assms(1) borel_measurable_indicator)"], ["proof (state)\nthis:\n  indA \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               {pseudo_proj_True n w} \\<Longrightarrow>\n       x \\<in> A", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               {pseudo_proj_True n w} \\<Longrightarrow>\n       x \\<in> A", "assume \"x \\<in> pseudo_proj_True n -` {pseudo_proj_True n w}\""], ["proof (state)\nthis:\n  x \\<in> pseudo_proj_True n -` {pseudo_proj_True n w}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               {pseudo_proj_True n w} \\<Longrightarrow>\n       x \\<in> A", "have \"indA x = indA (pseudo_proj_True n x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indA x = indA (pseudo_proj_True n x)", "using nat_filtration_info[symmetric, of \"indicator A\" n] \\<open>indA \\<in> borel_measurable (nat_filtration n)\\<close>"], ["proof (prove)\nusing this:\n  indicator A \\<in> borel_measurable (nat_filtration n) \\<Longrightarrow>\n  indicator A = indicator A \\<circ> pseudo_proj_True n\n  indA \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. indA x = indA (pseudo_proj_True n x)", "unfolding indA_def"], ["proof (prove)\nusing this:\n  indicator A \\<in> borel_measurable (nat_filtration n) \\<Longrightarrow>\n  indicator A = indicator A \\<circ> pseudo_proj_True n\n  indicat_real A \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. indicat_real A x = indicat_real A (pseudo_proj_True n x)", "by (metis comp_apply)"], ["proof (state)\nthis:\n  indA x = indA (pseudo_proj_True n x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               {pseudo_proj_True n w} \\<Longrightarrow>\n       x \\<in> A", "also"], ["proof (state)\nthis:\n  indA x = indA (pseudo_proj_True n x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               {pseudo_proj_True n w} \\<Longrightarrow>\n       x \\<in> A", "have \"... = indA (pseudo_proj_True n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indA (pseudo_proj_True n x) = indA (pseudo_proj_True n w)", "using \\<open>x \\<in> pseudo_proj_True n -` {pseudo_proj_True n w}\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> pseudo_proj_True n -` {pseudo_proj_True n w}\n\ngoal (1 subgoal):\n 1. indA (pseudo_proj_True n x) = indA (pseudo_proj_True n w)", "by simp"], ["proof (state)\nthis:\n  indA (pseudo_proj_True n x) = indA (pseudo_proj_True n w)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               {pseudo_proj_True n w} \\<Longrightarrow>\n       x \\<in> A", "also"], ["proof (state)\nthis:\n  indA (pseudo_proj_True n x) = indA (pseudo_proj_True n w)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               {pseudo_proj_True n w} \\<Longrightarrow>\n       x \\<in> A", "have \"... = indA w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indA (pseudo_proj_True n w) = indA w", "using nat_filtration_info[of \"indicator A\" n]\n    \\<open>indA \\<in> borel_measurable (nat_filtration n)\\<close>"], ["proof (prove)\nusing this:\n  indicator A \\<in> borel_measurable (nat_filtration n) \\<Longrightarrow>\n  indicator A \\<circ> pseudo_proj_True n = indicator A\n  indA \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. indA (pseudo_proj_True n w) = indA w", "unfolding indA_def"], ["proof (prove)\nusing this:\n  indicator A \\<in> borel_measurable (nat_filtration n) \\<Longrightarrow>\n  indicator A \\<circ> pseudo_proj_True n = indicator A\n  indicat_real A \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. indicat_real A (pseudo_proj_True n w) = indicat_real A w", "by (metis comp_apply)"], ["proof (state)\nthis:\n  indA (pseudo_proj_True n w) = indA w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               {pseudo_proj_True n w} \\<Longrightarrow>\n       x \\<in> A", "also"], ["proof (state)\nthis:\n  indA (pseudo_proj_True n w) = indA w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               {pseudo_proj_True n w} \\<Longrightarrow>\n       x \\<in> A", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indA w = 1", "using assms"], ["proof (prove)\nusing this:\n  A \\<in> sets (nat_filtration n)\n  w \\<in> A\n\ngoal (1 subgoal):\n 1. indA w = 1", "unfolding indA_def"], ["proof (prove)\nusing this:\n  A \\<in> sets (nat_filtration n)\n  w \\<in> A\n\ngoal (1 subgoal):\n 1. indicat_real A w = 1", "by simp"], ["proof (state)\nthis:\n  indA w = 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               {pseudo_proj_True n w} \\<Longrightarrow>\n       x \\<in> A", "finally"], ["proof (chain)\npicking this:\n  indA x = 1", "have \"indA x = 1\""], ["proof (prove)\nusing this:\n  indA x = 1\n\ngoal (1 subgoal):\n 1. indA x = 1", "."], ["proof (state)\nthis:\n  indA x = 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               {pseudo_proj_True n w} \\<Longrightarrow>\n       x \\<in> A", "thus \"x\\<in> A\""], ["proof (prove)\nusing this:\n  indA x = 1\n\ngoal (1 subgoal):\n 1. x \\<in> A", "unfolding indA_def"], ["proof (prove)\nusing this:\n  indicat_real A x = 1\n\ngoal (1 subgoal):\n 1. x \\<in> A", "by (simp add: indicator_eq_1_iff)"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) measurable_range_rep:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"f \\<in> borel_measurable (nat_filtration n)\"\n  shows \"range f = (\\<Union> r\\<in>(proj_rep_set n). {f(r)})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range f = (\\<Union>r\\<in>proj_rep_set n. {f r})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. range f = (\\<Union>r\\<in>proj_rep_set n. {f r})", "have \"f = f \\<circ> (pseudo_proj_True n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = f \\<circ> pseudo_proj_True n", "using assms nat_filtration_info[of f n]"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (nat_filtration n)\n  f \\<in> borel_measurable (nat_filtration n) \\<Longrightarrow>\n  f \\<circ> pseudo_proj_True n = f\n\ngoal (1 subgoal):\n 1. f = f \\<circ> pseudo_proj_True n", "by simp"], ["proof (state)\nthis:\n  f = f \\<circ> pseudo_proj_True n\n\ngoal (1 subgoal):\n 1. range f = (\\<Union>r\\<in>proj_rep_set n. {f r})", "hence \"range f = f `(proj_rep_set n)\""], ["proof (prove)\nusing this:\n  f = f \\<circ> pseudo_proj_True n\n\ngoal (1 subgoal):\n 1. range f = f ` proj_rep_set n", "by (metis fun.set_map proj_rep_set)"], ["proof (state)\nthis:\n  range f = f ` proj_rep_set n\n\ngoal (1 subgoal):\n 1. range f = (\\<Union>r\\<in>proj_rep_set n. {f r})", "also"], ["proof (state)\nthis:\n  range f = f ` proj_rep_set n\n\ngoal (1 subgoal):\n 1. range f = (\\<Union>r\\<in>proj_rep_set n. {f r})", "have \"... = (\\<Union>r\\<in>proj_rep_set n. {f r})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` proj_rep_set n = (\\<Union>r\\<in>proj_rep_set n. {f r})", "by blast"], ["proof (state)\nthis:\n  f ` proj_rep_set n = (\\<Union>r\\<in>proj_rep_set n. {f r})\n\ngoal (1 subgoal):\n 1. range f = (\\<Union>r\\<in>proj_rep_set n. {f r})", "finally"], ["proof (chain)\npicking this:\n  range f = (\\<Union>r\\<in>proj_rep_set n. {f r})", "show \"range f = (\\<Union>r\\<in>proj_rep_set n. {f r})\""], ["proof (prove)\nusing this:\n  range f = (\\<Union>r\\<in>proj_rep_set n. {f r})\n\ngoal (1 subgoal):\n 1. range f = (\\<Union>r\\<in>proj_rep_set n. {f r})", "."], ["proof (state)\nthis:\n  range f = (\\<Union>r\\<in>proj_rep_set n. {f r})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) borel_measurable_stake:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"f\\<in> borel_measurable (nat_filtration n)\"\n  and \"stake n w = stake n y\"\nshows \"f w = f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f w = f y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f w = f y", "have \"pseudo_proj_True n w = pseudo_proj_True n y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = pseudo_proj_True n y", "unfolding pseudo_proj_True_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. stake n w @- sconst True = stake n y @- sconst True", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (nat_filtration n)\n  stake n w = stake n y\n\ngoal (1 subgoal):\n 1. stake n w @- sconst True = stake n y @- sconst True", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True n w = pseudo_proj_True n y\n\ngoal (1 subgoal):\n 1. f w = f y", "thus ?thesis"], ["proof (prove)\nusing this:\n  pseudo_proj_True n w = pseudo_proj_True n y\n\ngoal (1 subgoal):\n 1. f w = f y", "using assms nat_filtration_info"], ["proof (prove)\nusing this:\n  pseudo_proj_True n w = pseudo_proj_True n y\n  f \\<in> borel_measurable (nat_filtration n)\n  stake n w = stake n y\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  ?f \\<circ> pseudo_proj_True ?n = ?f\n\ngoal (1 subgoal):\n 1. f w = f y", "by (metis comp_apply)"], ["proof (state)\nthis:\n  f w = f y\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Probability component\\<close>"], ["", "text \\<open>The probability component permits to compute measures of subspaces in a straightforward way.\\<close>"], ["", "definition  prob_component where\n  \"prob_component (p::real) w n = (if (snth w n) then p else 1-p)\""], ["", "lemma  prob_component_neq_zero:\n  assumes \"0 < p\"\nand \"p < 1\"\n  shows \"prob_component p w n \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_component p w n \\<noteq> 0", "using assms prob_component_def"], ["proof (prove)\nusing this:\n  0 < p\n  p < 1\n  prob_component ?p ?w ?n = (if ?w !! ?n then ?p else 1 - ?p)\n\ngoal (1 subgoal):\n 1. prob_component p w n \\<noteq> 0", "by auto"], ["", "lemma  prob_component_measure:\n  fixes x::\"bool stream\"\nassumes \"0 \\<le> p\"\nand \"p \\<le> 1\"\n  shows \"emeasure (measure_pmf (bernoulli_pmf p)) {snth x i} = prob_component p x i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (measure_pmf (bernoulli_pmf p)) {x !! i} =\n    ennreal (prob_component p x i)", "unfolding prob_component_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (measure_pmf (bernoulli_pmf p)) {x !! i} =\n    ennreal (if x !! i then p else 1 - p)", "using emeasure_pmf_single\n    pmf_bernoulli_False pmf_bernoulli_True"], ["proof (prove)\nusing this:\n  emeasure (measure_pmf ?M) {?x} = ennreal (pmf ?M ?x)\n  \\<lbrakk>0 \\<le> ?p; ?p \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> pmf (bernoulli_pmf ?p) False = 1 - ?p\n  \\<lbrakk>0 \\<le> ?p; ?p \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> pmf (bernoulli_pmf ?p) True = ?p\n\ngoal (1 subgoal):\n 1. emeasure (measure_pmf (bernoulli_pmf p)) {x !! i} =\n    ennreal (if x !! i then p else 1 - p)", "by (simp add: emeasure_pmf_single assms)"], ["", "lemma  stake_preimage_measurable:\n  fixes x::\"bool stream\"\n  assumes \"Suc 0 \\<le> n\" and \"M = bernoulli_stream p\"\n  shows \"{w\\<in> space M. (stake n w = stake n x)} \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. stake n w = stake n x} \\<in> sets M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {w \\<in> space M. stake n w = stake n x} \\<in> sets M", "let ?S =  \"{w\\<in> space M. (stake n w = stake n x)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. {w \\<in> space M. stake n w = stake n x} \\<in> sets M", "have \"?S = (\\<Inter> i \\<in> {0.. n-1}. {w\\<in> space M. (snth w i = snth x i)})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. stake n w = stake n x} =\n    (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})", "using stake_inter_snth assms"], ["proof (prove)\nusing this:\n  Suc 0 \\<le> ?n \\<Longrightarrow>\n  {w \\<in> space ?M. stake ?n w = stake ?n ?x} =\n  (\\<Inter>i\\<in>{0..?n - 1}. {w \\<in> space ?M. w !! i = ?x !! i})\n  Suc 0 \\<le> n\n  M = bernoulli_stream p\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. stake n w = stake n x} =\n    (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})", "by simp"], ["proof (state)\nthis:\n  {w \\<in> space M. stake n w = stake n x} =\n  (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. stake n w = stake n x} \\<in> sets M", "moreover"], ["proof (state)\nthis:\n  {w \\<in> space M. stake n w = stake n x} =\n  (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. stake n w = stake n x} \\<in> sets M", "have \"(\\<Inter> i \\<in> {0.. n-1}. {w\\<in> space M. (snth w i = snth x i)}) \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n    \\<in> sets M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n    \\<in> sets M", "have \"\\<forall> i \\<le> n-1. {w\\<in> space M. (snth w i = snth x i)} \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n - 1. {w \\<in> space M. w !! i = x !! i} \\<in> sets M", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n - 1 \\<Longrightarrow>\n       {w \\<in> space M. w !! i = x !! i} \\<in> sets M", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n - 1 \\<Longrightarrow>\n       {w \\<in> space M. w !! i = x !! i} \\<in> sets M", "assume \"i \\<le> n-1\""], ["proof (state)\nthis:\n  i \\<le> n - 1\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n - 1 \\<Longrightarrow>\n       {w \\<in> space M. w !! i = x !! i} \\<in> sets M", "thus \"{w \\<in> space M. w !! i = x !! i} \\<in> sets M\""], ["proof (prove)\nusing this:\n  i \\<le> n - 1\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. w !! i = x !! i} \\<in> sets M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<le> n - 1 \\<Longrightarrow>\n    {w \\<in> space M. w !! i = x !! i} \\<in> sets M", "have \"(\\<lambda>w. snth w i) \\<in> measurable M (measure_pmf (bernoulli_pmf p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! i)\n    \\<in> M \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)", "using assms"], ["proof (prove)\nusing this:\n  Suc 0 \\<le> n\n  M = bernoulli_stream p\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! i)\n    \\<in> M \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)", "by (simp add: assms bernoulli_stream_def)"], ["proof (state)\nthis:\n  (\\<lambda>w. w !! i)\n  \\<in> M \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)\n\ngoal (1 subgoal):\n 1. i \\<le> n - 1 \\<Longrightarrow>\n    {w \\<in> space M. w !! i = x !! i} \\<in> sets M", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>w. w !! i)\n  \\<in> M \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. w !! i = x !! i} \\<in> sets M", "by simp"], ["proof (state)\nthis:\n  {w \\<in> space M. w !! i = x !! i} \\<in> sets M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w \\<in> space M. w !! i = x !! i} \\<in> sets M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i\\<le>n - 1. {w \\<in> space M. w !! i = x !! i} \\<in> sets M\n\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n    \\<in> sets M", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n - 1. {w \\<in> space M. w !! i = x !! i} \\<in> sets M\n\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n    \\<in> sets M", "by auto"], ["proof (state)\nthis:\n  (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n  \\<in> sets M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n  \\<in> sets M\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. stake n w = stake n x} \\<in> sets M", "ultimately"], ["proof (chain)\npicking this:\n  {w \\<in> space M. stake n w = stake n x} =\n  (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n  (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n  \\<in> sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  {w \\<in> space M. stake n w = stake n x} =\n  (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n  (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n  \\<in> sets M\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. stake n w = stake n x} \\<in> sets M", "by simp"], ["proof (state)\nthis:\n  {w \\<in> space M. stake n w = stake n x} \\<in> sets M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma snth_as_fct:\n  fixes b\n  assumes \"M = bernoulli_stream p\"\n  shows \"to_stream -` {w\\<in> space M. snth w i = b} = {X::nat\\<Rightarrow>bool. X i = b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. w !! i = b} = {X. X i = b}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. w !! i = b} = {X. X i = b}", "let ?S = \"{w\\<in> space M. snth w i = b}\""], ["proof (state)\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. w !! i = b} = {X. X i = b}", "let ?PM = \"(\\<lambda>i::nat. (measure_pmf (bernoulli_pmf p)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. w !! i = b} = {X. X i = b}", "have isps: \"product_prob_space ?PM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. product_prob_space (\\<lambda>i. measure_pmf (bernoulli_pmf p))", "by unfold_locales"], ["proof (state)\nthis:\n  product_prob_space (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. w !! i = b} = {X. X i = b}", "let ?Z = \"{X::nat\\<Rightarrow>bool. X i = b}\""], ["proof (state)\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. w !! i = b} = {X. X i = b}", "show \"to_stream -`?S = ?Z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. w !! i = b} = {X. X i = b}", "by (simp add: assms bernoulli_stream_space to_stream_def)"], ["proof (state)\nthis:\n  to_stream -` {w \\<in> space M. w !! i = b} = {X. X i = b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  stake_as_fct:\n  assumes \"Suc 0 \\<le> n\" and \"M= bernoulli_stream p\"\n  shows \"to_stream -`{w\\<in> space M. (stake n w = stake n x)} = {X::nat\\<Rightarrow>bool. \\<forall>i. 0 \\<le> i \\<and> i \\<le> n-1 \\<longrightarrow> X i = snth x i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. stake n w = stake n x} =\n    {X. \\<forall>i.\n           0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. stake n w = stake n x} =\n    {X. \\<forall>i.\n           0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i}", "let ?S = \"{w\\<in> space M. (stake n w = stake n x)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. stake n w = stake n x} =\n    {X. \\<forall>i.\n           0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i}", "let ?Z = \"{X::nat\\<Rightarrow>bool. \\<forall>i. 0 \\<le> i \\<and> i \\<le> n-1 \\<longrightarrow> X i = snth x i}\""], ["proof (state)\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. stake n w = stake n x} =\n    {X. \\<forall>i.\n           0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i}", "have \"to_stream -` ?S = to_stream -` (\\<Inter> i \\<in> {0.. n-1}. {w\\<in> space M. (snth w i = snth x i)})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. stake n w = stake n x} =\n    to_stream -`\n    (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})", "using \\<open>Suc 0 \\<le> n\\<close> stake_inter_snth"], ["proof (prove)\nusing this:\n  Suc 0 \\<le> n\n  Suc 0 \\<le> ?n \\<Longrightarrow>\n  {w \\<in> space ?M. stake ?n w = stake ?n ?x} =\n  (\\<Inter>i\\<in>{0..?n - 1}. {w \\<in> space ?M. w !! i = ?x !! i})\n\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. stake n w = stake n x} =\n    to_stream -`\n    (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})", "by blast"], ["proof (state)\nthis:\n  to_stream -` {w \\<in> space M. stake n w = stake n x} =\n  to_stream -`\n  (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. stake n w = stake n x} =\n    {X. \\<forall>i.\n           0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i}", "also"], ["proof (state)\nthis:\n  to_stream -` {w \\<in> space M. stake n w = stake n x} =\n  to_stream -`\n  (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i})\n\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. stake n w = stake n x} =\n    {X. \\<forall>i.\n           0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i}", "have \"... = (\\<Inter> i \\<in> {0.. n-1}. to_stream -`{w\\<in> space M. (snth w i = snth x i)})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_stream -`\n    (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i}) =\n    (\\<Inter>i\\<in>{0..n - 1}.\n        to_stream -` {w \\<in> space M. w !! i = x !! i})", "by auto"], ["proof (state)\nthis:\n  to_stream -`\n  (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i}) =\n  (\\<Inter>i\\<in>{0..n - 1}.\n      to_stream -` {w \\<in> space M. w !! i = x !! i})\n\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. stake n w = stake n x} =\n    {X. \\<forall>i.\n           0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i}", "also"], ["proof (state)\nthis:\n  to_stream -`\n  (\\<Inter>i\\<in>{0..n - 1}. {w \\<in> space M. w !! i = x !! i}) =\n  (\\<Inter>i\\<in>{0..n - 1}.\n      to_stream -` {w \\<in> space M. w !! i = x !! i})\n\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. stake n w = stake n x} =\n    {X. \\<forall>i.\n           0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i}", "have \"... = (\\<Inter> i \\<in> {0.. n-1}. {X::nat\\<Rightarrow>bool. X i = snth x i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{0..n - 1}.\n        to_stream -` {w \\<in> space M. w !! i = x !! i}) =\n    (\\<Inter>i\\<in>{0..n - 1}. {X. X i = x !! i})", "using snth_as_fct assms"], ["proof (prove)\nusing this:\n  ?M = bernoulli_stream ?p \\<Longrightarrow>\n  to_stream -` {w \\<in> space ?M. w !! ?i = ?b} = {X. X ?i = ?b}\n  Suc 0 \\<le> n\n  M = bernoulli_stream p\n\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{0..n - 1}.\n        to_stream -` {w \\<in> space M. w !! i = x !! i}) =\n    (\\<Inter>i\\<in>{0..n - 1}. {X. X i = x !! i})", "by simp"], ["proof (state)\nthis:\n  (\\<Inter>i\\<in>{0..n - 1}.\n      to_stream -` {w \\<in> space M. w !! i = x !! i}) =\n  (\\<Inter>i\\<in>{0..n - 1}. {X. X i = x !! i})\n\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. stake n w = stake n x} =\n    {X. \\<forall>i.\n           0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i}", "also"], ["proof (state)\nthis:\n  (\\<Inter>i\\<in>{0..n - 1}.\n      to_stream -` {w \\<in> space M. w !! i = x !! i}) =\n  (\\<Inter>i\\<in>{0..n - 1}. {X. X i = x !! i})\n\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. stake n w = stake n x} =\n    {X. \\<forall>i.\n           0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i}", "have \"... = ?Z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{0..n - 1}. {X. X i = x !! i}) =\n    {X. \\<forall>i.\n           0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i}", "by auto"], ["proof (state)\nthis:\n  (\\<Inter>i\\<in>{0..n - 1}. {X. X i = x !! i}) =\n  {X. \\<forall>i.\n         0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i}\n\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. stake n w = stake n x} =\n    {X. \\<forall>i.\n           0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i}", "finally"], ["proof (chain)\npicking this:\n  to_stream -` {w \\<in> space M. stake n w = stake n x} =\n  {X. \\<forall>i.\n         0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i}", "show ?thesis"], ["proof (prove)\nusing this:\n  to_stream -` {w \\<in> space M. stake n w = stake n x} =\n  {X. \\<forall>i.\n         0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i}\n\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. stake n w = stake n x} =\n    {X. \\<forall>i.\n           0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i}", "."], ["proof (state)\nthis:\n  to_stream -` {w \\<in> space M. stake n w = stake n x} =\n  {X. \\<forall>i.\n         0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  bernoulli_stream_npref_prob:\n  fixes x\n  assumes \"M = bernoulli_stream p\"\n  shows \"emeasure M {w\\<in> space M. (stake 0 w = stake 0 x)} = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake 0 w = stake 0 x} = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake 0 w = stake 0 x} = 1", "define S where \"S = {w\\<in> space M. (stake 0 w = stake 0 x)}\""], ["proof (state)\nthis:\n  S = {w \\<in> space M. stake 0 w = stake 0 x}\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake 0 w = stake 0 x} = 1", "have \"S = space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S = space M", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. stake 0 w = stake 0 x} = space M", "by simp"], ["proof (state)\nthis:\n  S = space M\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake 0 w = stake 0 x} = 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  S = space M\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake 0 w = stake 0 x} = 1", "by (simp add: assms bernoulli_stream_def prob_space.emeasure_space_1\n        prob_space.prob_space_stream_space prob_space_measure_pmf)"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. stake 0 w = stake 0 x} = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bernoulli_stream_pref_prob:\n  fixes x\n  assumes \"M =bernoulli_stream p\"\nand \"0 \\<le> p\" and \"p \\<le> 1\"\n  shows \"n\\<ge> Suc 0\\<Longrightarrow> emeasure M {w\\<in> space M. (stake n w = stake n x)} = (\\<Prod>i\\<in>{0..n-1}. prob_component p x i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "have \"prob_space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space M", "by (simp add: assms bernoulli_stream_def prob_space.prob_space_stream_space prob_space_measure_pmf)"], ["proof (state)\nthis:\n  prob_space M\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "fix n::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "assume \"n\\<ge> Suc 0\""], ["proof (state)\nthis:\n  Suc 0 \\<le> n\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "define S where \"S = {w\\<in> space M. (stake n w = stake n x)}\""], ["proof (state)\nthis:\n  S = {w \\<in> space M. stake n w = stake n x}\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "have s: \"S \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> sets M", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. stake n w = stake n x} \\<in> sets M", "by (simp add: assms stake_preimage_measurable \\<open>Suc 0 \\<le> n\\<close>)"], ["proof (state)\nthis:\n  S \\<in> sets M\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "define PM where  \"PM = (\\<lambda>i::nat. (measure_pmf (bernoulli_pmf p)))\""], ["proof (state)\nthis:\n  PM = (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "have isps: \"product_prob_space PM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. product_prob_space PM", "unfolding PM_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. product_prob_space (\\<lambda>i. measure_pmf (bernoulli_pmf p))", "by unfold_locales"], ["proof (state)\nthis:\n  product_prob_space PM\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "define Z where \"Z = {X::nat\\<Rightarrow>bool. \\<forall>i. 0 \\<le> i \\<and> i \\<le> n-1 \\<longrightarrow> X i = snth x i}\""], ["proof (state)\nthis:\n  Z =\n  {X. \\<forall>i.\n         0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i}\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "let ?wPM = \"Pi\\<^sub>M UNIV PM\""], ["proof (state)\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "define imgSbs where \"imgSbs = prod_emb UNIV PM {0..n-1} (Pi\\<^sub>E {0..n-1} (\\<lambda>i::nat. {snth x i}))\""], ["proof (state)\nthis:\n  imgSbs =\n  prod_emb UNIV PM {0..n - 1} (\\<Pi>\\<^sub>E i\\<in>{0..n - 1}. {x !! i})\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "have \"space ?wPM = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space (Pi\\<^sub>M UNIV PM) = UNIV", "using space_PiM"], ["proof (prove)\nusing this:\n  space (Pi\\<^sub>M ?I ?M) = (\\<Pi>\\<^sub>E i\\<in>?I. space (?M i))\n\ngoal (1 subgoal):\n 1. space (Pi\\<^sub>M UNIV PM) = UNIV", "unfolding PM_def"], ["proof (prove)\nusing this:\n  space (Pi\\<^sub>M ?I ?M) = (\\<Pi>\\<^sub>E i\\<in>?I. space (?M i))\n\ngoal (1 subgoal):\n 1. space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))) =\n    UNIV", "by fastforce"], ["proof (state)\nthis:\n  space (Pi\\<^sub>M UNIV PM) = UNIV\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "hence \"(to_stream -` S \\<inter> (space ?wPM)) = to_stream -` S\""], ["proof (prove)\nusing this:\n  space (Pi\\<^sub>M UNIV PM) = UNIV\n\ngoal (1 subgoal):\n 1. to_stream -` S \\<inter> space (Pi\\<^sub>M UNIV PM) = to_stream -` S", "by simp"], ["proof (state)\nthis:\n  to_stream -` S \\<inter> space (Pi\\<^sub>M UNIV PM) = to_stream -` S\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "also"], ["proof (state)\nthis:\n  to_stream -` S \\<inter> space (Pi\\<^sub>M UNIV PM) = to_stream -` S\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "have \"... =  Z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_stream -` S = Z", "using stake_as_fct \\<open>Suc 0 \\<le> n\\<close> assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>Suc 0 \\<le> ?n; ?M = bernoulli_stream ?p\\<rbrakk>\n  \\<Longrightarrow> to_stream -`\n                    {w \\<in> space ?M. stake ?n w = stake ?n ?x} =\n                    {X. \\<forall>i.\n                           0 \\<le> i \\<and> i \\<le> ?n - 1 \\<longrightarrow>\n                           X i = ?x !! i}\n  Suc 0 \\<le> n\n  M = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. to_stream -` S = Z", "unfolding Z_def S_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>Suc 0 \\<le> ?n; ?M = bernoulli_stream ?p\\<rbrakk>\n  \\<Longrightarrow> to_stream -`\n                    {w \\<in> space ?M. stake ?n w = stake ?n ?x} =\n                    {X. \\<forall>i.\n                           0 \\<le> i \\<and> i \\<le> ?n - 1 \\<longrightarrow>\n                           X i = ?x !! i}\n  Suc 0 \\<le> n\n  M = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. to_stream -` {w \\<in> space M. stake n w = stake n x} =\n    {X. \\<forall>i.\n           0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i}", "by simp"], ["proof (state)\nthis:\n  to_stream -` S = Z\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "also"], ["proof (state)\nthis:\n  to_stream -` S = Z\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "have \"... = imgSbs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Z = imgSbs", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. Z \\<subseteq> imgSbs\n 2. imgSbs \\<subseteq> Z", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. Z \\<subseteq> imgSbs\n 2. imgSbs \\<subseteq> Z", "fix X"], ["proof (state)\ngoal (2 subgoals):\n 1. Z \\<subseteq> imgSbs\n 2. imgSbs \\<subseteq> Z", "assume \"X \\<in> imgSbs\""], ["proof (state)\nthis:\n  X \\<in> imgSbs\n\ngoal (2 subgoals):\n 1. Z \\<subseteq> imgSbs\n 2. imgSbs \\<subseteq> Z", "hence \"restrict X {0..n-1} \\<in> (Pi\\<^sub>E {0..n-1} (\\<lambda>i::nat. {snth x i}))\""], ["proof (prove)\nusing this:\n  X \\<in> imgSbs\n\ngoal (1 subgoal):\n 1. restrict X {0..n - 1} \\<in> (\\<Pi>\\<^sub>E i\\<in>{0..n - 1}. {x !! i})", "using prod_emb_iff[of X]"], ["proof (prove)\nusing this:\n  X \\<in> imgSbs\n  (X \\<in> prod_emb ?I ?M ?K ?X) =\n  (X \\<in> extensional ?I \\<and>\n   restrict X ?K \\<in> ?X \\<and>\n   (\\<forall>i\\<in>?I. X i \\<in> space (?M i)))\n\ngoal (1 subgoal):\n 1. restrict X {0..n - 1} \\<in> (\\<Pi>\\<^sub>E i\\<in>{0..n - 1}. {x !! i})", "unfolding imgSbs_def"], ["proof (prove)\nusing this:\n  X \\<in> prod_emb UNIV PM {0..n - 1}\n           (\\<Pi>\\<^sub>E i\\<in>{0..n - 1}. {x !! i})\n  (X \\<in> prod_emb ?I ?M ?K ?X) =\n  (X \\<in> extensional ?I \\<and>\n   restrict X ?K \\<in> ?X \\<and>\n   (\\<forall>i\\<in>?I. X i \\<in> space (?M i)))\n\ngoal (1 subgoal):\n 1. restrict X {0..n - 1} \\<in> (\\<Pi>\\<^sub>E i\\<in>{0..n - 1}. {x !! i})", "by simp"], ["proof (state)\nthis:\n  restrict X {0..n - 1} \\<in> (\\<Pi>\\<^sub>E i\\<in>{0..n - 1}. {x !! i})\n\ngoal (2 subgoals):\n 1. Z \\<subseteq> imgSbs\n 2. imgSbs \\<subseteq> Z", "hence \"\\<forall>i. 0 \\<le> i \\<and> i \\<le> n-1 \\<longrightarrow> X i = snth x i\""], ["proof (prove)\nusing this:\n  restrict X {0..n - 1} \\<in> (\\<Pi>\\<^sub>E i\\<in>{0..n - 1}. {x !! i})\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i", "by auto"], ["proof (state)\nthis:\n  \\<forall>i. 0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i\n\ngoal (2 subgoals):\n 1. Z \\<subseteq> imgSbs\n 2. imgSbs \\<subseteq> Z", "hence \"X \\<in> Z\""], ["proof (prove)\nusing this:\n  \\<forall>i. 0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i\n\ngoal (1 subgoal):\n 1. X \\<in> Z", "unfolding Z_def"], ["proof (prove)\nusing this:\n  \\<forall>i. 0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i\n\ngoal (1 subgoal):\n 1. X \\<in> {X. \\<forall>i.\n                   0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow>\n                   X i = x !! i}", "by simp"], ["proof (state)\nthis:\n  X \\<in> Z\n\ngoal (2 subgoals):\n 1. Z \\<subseteq> imgSbs\n 2. imgSbs \\<subseteq> Z", "}"], ["proof (state)\nthis:\n  ?X2 \\<in> imgSbs \\<Longrightarrow> ?X2 \\<in> Z\n\ngoal (2 subgoals):\n 1. Z \\<subseteq> imgSbs\n 2. imgSbs \\<subseteq> Z", "thus \"imgSbs \\<subseteq> Z\""], ["proof (prove)\nusing this:\n  ?X2 \\<in> imgSbs \\<Longrightarrow> ?X2 \\<in> Z\n\ngoal (1 subgoal):\n 1. imgSbs \\<subseteq> Z", "by blast"], ["proof (state)\nthis:\n  imgSbs \\<subseteq> Z\n\ngoal (1 subgoal):\n 1. Z \\<subseteq> imgSbs", "{"], ["proof (state)\nthis:\n  imgSbs \\<subseteq> Z\n\ngoal (1 subgoal):\n 1. Z \\<subseteq> imgSbs", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. Z \\<subseteq> imgSbs", "assume \"X \\<in> Z\""], ["proof (state)\nthis:\n  X \\<in> Z\n\ngoal (1 subgoal):\n 1. Z \\<subseteq> imgSbs", "hence \"\\<forall>i. 0 \\<le> i \\<and> i \\<le> n-1 \\<longrightarrow> X i = snth x i\""], ["proof (prove)\nusing this:\n  X \\<in> Z\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i", "unfolding Z_def"], ["proof (prove)\nusing this:\n  X \\<in> {X. \\<forall>i.\n                 0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow>\n                 X i = x !! i}\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i", "by simp"], ["proof (state)\nthis:\n  \\<forall>i. 0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i\n\ngoal (1 subgoal):\n 1. Z \\<subseteq> imgSbs", "hence \"restrict X {0..n-1} \\<in> (Pi\\<^sub>E {0..n-1} (\\<lambda>i::nat. {snth x i}))\""], ["proof (prove)\nusing this:\n  \\<forall>i. 0 \\<le> i \\<and> i \\<le> n - 1 \\<longrightarrow> X i = x !! i\n\ngoal (1 subgoal):\n 1. restrict X {0..n - 1} \\<in> (\\<Pi>\\<^sub>E i\\<in>{0..n - 1}. {x !! i})", "by simp"], ["proof (state)\nthis:\n  restrict X {0..n - 1} \\<in> (\\<Pi>\\<^sub>E i\\<in>{0..n - 1}. {x !! i})\n\ngoal (1 subgoal):\n 1. Z \\<subseteq> imgSbs", "moreover"], ["proof (state)\nthis:\n  restrict X {0..n - 1} \\<in> (\\<Pi>\\<^sub>E i\\<in>{0..n - 1}. {x !! i})\n\ngoal (1 subgoal):\n 1. Z \\<subseteq> imgSbs", "have \"X \\<in> extensional UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> extensional UNIV", "by simp"], ["proof (state)\nthis:\n  X \\<in> extensional UNIV\n\ngoal (1 subgoal):\n 1. Z \\<subseteq> imgSbs", "moreover"], ["proof (state)\nthis:\n  X \\<in> extensional UNIV\n\ngoal (1 subgoal):\n 1. Z \\<subseteq> imgSbs", "have \"\\<forall>i \\<in> UNIV. X i \\<in> space (PM i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>UNIV. X i \\<in> space (PM i)", "unfolding PM_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>UNIV. X i \\<in> space (measure_pmf (bernoulli_pmf p))", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<in>UNIV. X i \\<in> space (PM i)\n\ngoal (1 subgoal):\n 1. Z \\<subseteq> imgSbs", "ultimately"], ["proof (chain)\npicking this:\n  restrict X {0..n - 1} \\<in> (\\<Pi>\\<^sub>E i\\<in>{0..n - 1}. {x !! i})\n  X \\<in> extensional UNIV\n  \\<forall>i\\<in>UNIV. X i \\<in> space (PM i)", "have \"X \\<in> imgSbs\""], ["proof (prove)\nusing this:\n  restrict X {0..n - 1} \\<in> (\\<Pi>\\<^sub>E i\\<in>{0..n - 1}. {x !! i})\n  X \\<in> extensional UNIV\n  \\<forall>i\\<in>UNIV. X i \\<in> space (PM i)\n\ngoal (1 subgoal):\n 1. X \\<in> imgSbs", "using prod_emb_iff[of X]"], ["proof (prove)\nusing this:\n  restrict X {0..n - 1} \\<in> (\\<Pi>\\<^sub>E i\\<in>{0..n - 1}. {x !! i})\n  X \\<in> extensional UNIV\n  \\<forall>i\\<in>UNIV. X i \\<in> space (PM i)\n  (X \\<in> prod_emb ?I ?M ?K ?X) =\n  (X \\<in> extensional ?I \\<and>\n   restrict X ?K \\<in> ?X \\<and>\n   (\\<forall>i\\<in>?I. X i \\<in> space (?M i)))\n\ngoal (1 subgoal):\n 1. X \\<in> imgSbs", "unfolding imgSbs_def"], ["proof (prove)\nusing this:\n  restrict X {0..n - 1} \\<in> (\\<Pi>\\<^sub>E i\\<in>{0..n - 1}. {x !! i})\n  X \\<in> extensional UNIV\n  \\<forall>i\\<in>UNIV. X i \\<in> space (PM i)\n  (X \\<in> prod_emb ?I ?M ?K ?X) =\n  (X \\<in> extensional ?I \\<and>\n   restrict X ?K \\<in> ?X \\<and>\n   (\\<forall>i\\<in>?I. X i \\<in> space (?M i)))\n\ngoal (1 subgoal):\n 1. X \\<in> prod_emb UNIV PM {0..n - 1}\n             (\\<Pi>\\<^sub>E i\\<in>{0..n - 1}. {x !! i})", "by simp"], ["proof (state)\nthis:\n  X \\<in> imgSbs\n\ngoal (1 subgoal):\n 1. Z \\<subseteq> imgSbs", "}"], ["proof (state)\nthis:\n  ?X2 \\<in> Z \\<Longrightarrow> ?X2 \\<in> imgSbs\n\ngoal (1 subgoal):\n 1. Z \\<subseteq> imgSbs", "thus \"Z \\<subseteq> imgSbs\""], ["proof (prove)\nusing this:\n  ?X2 \\<in> Z \\<Longrightarrow> ?X2 \\<in> imgSbs\n\ngoal (1 subgoal):\n 1. Z \\<subseteq> imgSbs", "by auto"], ["proof (state)\nthis:\n  Z \\<subseteq> imgSbs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Z = imgSbs\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "finally"], ["proof (chain)\npicking this:\n  to_stream -` S \\<inter> space (Pi\\<^sub>M UNIV PM) = imgSbs", "have inteq: \"(to_stream -` S \\<inter> (space ?wPM)) = imgSbs\""], ["proof (prove)\nusing this:\n  to_stream -` S \\<inter> space (Pi\\<^sub>M UNIV PM) = imgSbs\n\ngoal (1 subgoal):\n 1. to_stream -` S \\<inter> space (Pi\\<^sub>M UNIV PM) = imgSbs", "."], ["proof (state)\nthis:\n  to_stream -` S \\<inter> space (Pi\\<^sub>M UNIV PM) = imgSbs\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "have \"emeasure M S = emeasure ?wPM (to_stream -` S \\<inter> (space ?wPM))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M S =\n    emeasure (Pi\\<^sub>M UNIV PM)\n     (to_stream -` S \\<inter> space (Pi\\<^sub>M UNIV PM))", "using  emeasure_distr[of \"to_stream\" ?wPM \"M\" S] measurable_to_stream[of \"(measure_pmf (bernoulli_pmf p))\"] s assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>to_stream \\<in> Pi\\<^sub>M UNIV PM \\<rightarrow>\\<^sub>M M;\n   S \\<in> sets M\\<rbrakk>\n  \\<Longrightarrow> emeasure (distr (Pi\\<^sub>M UNIV PM) M to_stream) S =\n                    emeasure (Pi\\<^sub>M UNIV PM)\n                     (to_stream -` S \\<inter> space (Pi\\<^sub>M UNIV PM))\n  to_stream\n  \\<in> Pi\\<^sub>M UNIV\n         (\\<lambda>i. measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n        stream_space (measure_pmf (bernoulli_pmf p))\n  S \\<in> sets M\n  M = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. emeasure M S =\n    emeasure (Pi\\<^sub>M UNIV PM)\n     (to_stream -` S \\<inter> space (Pi\\<^sub>M UNIV PM))", "unfolding bernoulli_stream_def stream_space_def PM_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>to_stream\n           \\<in> Pi\\<^sub>M UNIV\n                  (\\<lambda>i.\n                      measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n                 M;\n   S \\<in> sets M\\<rbrakk>\n  \\<Longrightarrow> emeasure\n                     (distr\n                       (Pi\\<^sub>M UNIV\n                         (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n                       M to_stream)\n                     S =\n                    emeasure\n                     (Pi\\<^sub>M UNIV\n                       (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n                     (to_stream -` S \\<inter>\n                      space\n                       (Pi\\<^sub>M UNIV\n                         (\\<lambda>i. measure_pmf (bernoulli_pmf p))))\n  to_stream\n  \\<in> Pi\\<^sub>M UNIV\n         (\\<lambda>i. measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n        distr (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n         (vimage_algebra (streams (space (measure_pmf (bernoulli_pmf p))))\n           (!!)\n           (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))))\n         to_stream\n  S \\<in> sets M\n  M =\n  distr (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n   (vimage_algebra (streams (space (measure_pmf (bernoulli_pmf p)))) (!!)\n     (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))))\n   to_stream\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. emeasure M S =\n    emeasure (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n     (to_stream -` S \\<inter>\n      space (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p))))", "by (simp add: emeasure_distr)"], ["proof (state)\nthis:\n  emeasure M S =\n  emeasure (Pi\\<^sub>M UNIV PM)\n   (to_stream -` S \\<inter> space (Pi\\<^sub>M UNIV PM))\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "also"], ["proof (state)\nthis:\n  emeasure M S =\n  emeasure (Pi\\<^sub>M UNIV PM)\n   (to_stream -` S \\<inter> space (Pi\\<^sub>M UNIV PM))\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "have \"... = emeasure ?wPM imgSbs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (Pi\\<^sub>M UNIV PM)\n     (to_stream -` S \\<inter> space (Pi\\<^sub>M UNIV PM)) =\n    emeasure (Pi\\<^sub>M UNIV PM) imgSbs", "using inteq"], ["proof (prove)\nusing this:\n  to_stream -` S \\<inter> space (Pi\\<^sub>M UNIV PM) = imgSbs\n\ngoal (1 subgoal):\n 1. emeasure (Pi\\<^sub>M UNIV PM)\n     (to_stream -` S \\<inter> space (Pi\\<^sub>M UNIV PM)) =\n    emeasure (Pi\\<^sub>M UNIV PM) imgSbs", "by simp"], ["proof (state)\nthis:\n  emeasure (Pi\\<^sub>M UNIV PM)\n   (to_stream -` S \\<inter> space (Pi\\<^sub>M UNIV PM)) =\n  emeasure (Pi\\<^sub>M UNIV PM) imgSbs\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "also"], ["proof (state)\nthis:\n  emeasure (Pi\\<^sub>M UNIV PM)\n   (to_stream -` S \\<inter> space (Pi\\<^sub>M UNIV PM)) =\n  emeasure (Pi\\<^sub>M UNIV PM) imgSbs\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "have \"... = (\\<Prod>i\\<in>{0..n-1}. emeasure (PM i) ((\\<lambda>m::nat. {snth x m}) i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (Pi\\<^sub>M UNIV PM) imgSbs =\n    (\\<Prod>i = 0..n - 1. emeasure (PM i) {x !! i})", "using isps"], ["proof (prove)\nusing this:\n  product_prob_space PM\n\ngoal (1 subgoal):\n 1. emeasure (Pi\\<^sub>M UNIV PM) imgSbs =\n    (\\<Prod>i = 0..n - 1. emeasure (PM i) {x !! i})", "unfolding imgSbs_def PM_def"], ["proof (prove)\nusing this:\n  product_prob_space (\\<lambda>i. measure_pmf (bernoulli_pmf p))\n\ngoal (1 subgoal):\n 1. emeasure (Pi\\<^sub>M UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)))\n     (prod_emb UNIV (\\<lambda>i. measure_pmf (bernoulli_pmf p)) {0..n - 1}\n       (\\<Pi>\\<^sub>E i\\<in>{0..n - 1}. {x !! i})) =\n    (\\<Prod>i = 0..n - 1. emeasure (measure_pmf (bernoulli_pmf p)) {x !! i})", "by (auto simp add:product_prob_space.emeasure_PiM_emb)"], ["proof (state)\nthis:\n  emeasure (Pi\\<^sub>M UNIV PM) imgSbs =\n  (\\<Prod>i = 0..n - 1. emeasure (PM i) {x !! i})\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "also"], ["proof (state)\nthis:\n  emeasure (Pi\\<^sub>M UNIV PM) imgSbs =\n  (\\<Prod>i = 0..n - 1. emeasure (PM i) {x !! i})\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "have \"... = (\\<Prod>i\\<in>{0..n-1}. prob_component p x i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..n - 1. emeasure (PM i) {x !! i}) =\n    ennreal (prod (prob_component p x) {0..n - 1})", "using prob_component_measure"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> ?p; ?p \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> emeasure (measure_pmf (bernoulli_pmf ?p)) {?x !! ?i} =\n                    ennreal (prob_component ?p ?x ?i)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..n - 1. emeasure (PM i) {x !! i}) =\n    ennreal (prod (prob_component p x) {0..n - 1})", "unfolding PM_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> ?p; ?p \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> emeasure (measure_pmf (bernoulli_pmf ?p)) {?x !! ?i} =\n                    ennreal (prob_component ?p ?x ?i)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..n - 1.\n        emeasure (measure_pmf (bernoulli_pmf p)) {x !! i}) =\n    ennreal (prod (prob_component p x) {0..n - 1})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>p x i.\n        \\<lbrakk>0 \\<le> p; p \\<le> 1\\<rbrakk>\n        \\<Longrightarrow> emeasure (measure_pmf (bernoulli_pmf p))\n                           {x !! i} =\n                          ennreal (prob_component p x i)) \\<Longrightarrow>\n    (\\<Prod>i = 0..n - 1.\n        emeasure (measure_pmf (bernoulli_pmf p)) {x !! i}) =\n    ennreal (prod (prob_component p x) {0..n - 1})", "have f1: \"\\<forall>N f. (\\<exists>n. (n::nat) \\<in> N \\<and> \\<not> 0 \\<le> f n) \\<or> (\\<Prod>n\\<in>N. ennreal (f n)) = ennreal (prod f N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>N f.\n       (\\<exists>n. n \\<in> N \\<and> \\<not> 0 \\<le> f n) \\<or>\n       (\\<Prod>n\\<in>N. ennreal (f n)) = ennreal (prod f N)", "by (metis (no_types) prod_ennreal)"], ["proof (state)\nthis:\n  \\<forall>N f.\n     (\\<exists>n. n \\<in> N \\<and> \\<not> 0 \\<le> f n) \\<or>\n     (\\<Prod>n\\<in>N. ennreal (f n)) = ennreal (prod f N)\n\ngoal (1 subgoal):\n 1. (\\<And>p x i.\n        \\<lbrakk>0 \\<le> p; p \\<le> 1\\<rbrakk>\n        \\<Longrightarrow> emeasure (measure_pmf (bernoulli_pmf p))\n                           {x !! i} =\n                          ennreal (prob_component p x i)) \\<Longrightarrow>\n    (\\<Prod>i = 0..n - 1.\n        emeasure (measure_pmf (bernoulli_pmf p)) {x !! i}) =\n    ennreal (prod (prob_component p x) {0..n - 1})", "obtain nn :: \"(nat \\<Rightarrow> real) \\<Rightarrow> nat set \\<Rightarrow> nat\" where\n          f2: \"\\<forall>x0 x1. (\\<exists>v2. v2 \\<in> x1 \\<and> \\<not> 0 \\<le> x0 v2) = (nn x0 x1 \\<in> x1 \\<and> \\<not> 0 \\<le> x0 (nn x0 x1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>nn.\n        \\<forall>x0 x1.\n           (\\<exists>v2. v2 \\<in> x1 \\<and> \\<not> 0 \\<le> x0 v2) =\n           (nn x0 x1 \\<in> x1 \\<and>\n            \\<not> 0 \\<le> x0 (nn x0 x1)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  \\<forall>x0 x1.\n     (\\<exists>v2. v2 \\<in> x1 \\<and> \\<not> 0 \\<le> x0 v2) =\n     (nn x0 x1 \\<in> x1 \\<and> \\<not> 0 \\<le> x0 (nn x0 x1))\n\ngoal (1 subgoal):\n 1. (\\<And>p x i.\n        \\<lbrakk>0 \\<le> p; p \\<le> 1\\<rbrakk>\n        \\<Longrightarrow> emeasure (measure_pmf (bernoulli_pmf p))\n                           {x !! i} =\n                          ennreal (prob_component p x i)) \\<Longrightarrow>\n    (\\<Prod>i = 0..n - 1.\n        emeasure (measure_pmf (bernoulli_pmf p)) {x !! i}) =\n    ennreal (prod (prob_component p x) {0..n - 1})", "have f3: \"\\<forall>s n. if s !! n then prob_component p s n = p else p + prob_component p s n = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s n.\n       if s !! n then prob_component p s n = p\n       else p + prob_component p s n = 1", "by (simp add: prob_component_def)"], ["proof (state)\nthis:\n  \\<forall>s n.\n     if s !! n then prob_component p s n = p\n     else p + prob_component p s n = 1\n\ngoal (1 subgoal):\n 1. (\\<And>p x i.\n        \\<lbrakk>0 \\<le> p; p \\<le> 1\\<rbrakk>\n        \\<Longrightarrow> emeasure (measure_pmf (bernoulli_pmf p))\n                           {x !! i} =\n                          ennreal (prob_component p x i)) \\<Longrightarrow>\n    (\\<Prod>i = 0..n - 1.\n        emeasure (measure_pmf (bernoulli_pmf p)) {x !! i}) =\n    ennreal (prod (prob_component p x) {0..n - 1})", "{"], ["proof (state)\nthis:\n  \\<forall>s n.\n     if s !! n then prob_component p s n = p\n     else p + prob_component p s n = 1\n\ngoal (1 subgoal):\n 1. (\\<And>p x i.\n        \\<lbrakk>0 \\<le> p; p \\<le> 1\\<rbrakk>\n        \\<Longrightarrow> emeasure (measure_pmf (bernoulli_pmf p))\n                           {x !! i} =\n                          ennreal (prob_component p x i)) \\<Longrightarrow>\n    (\\<Prod>i = 0..n - 1.\n        emeasure (measure_pmf (bernoulli_pmf p)) {x !! i}) =\n    ennreal (prod (prob_component p x) {0..n - 1})", "assume \"prob_component p x (nn (prob_component p x) {0..n - 1}) \\<noteq> p\""], ["proof (state)\nthis:\n  prob_component p x (nn (prob_component p x) {0..n - 1}) \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<And>p x i.\n        \\<lbrakk>0 \\<le> p; p \\<le> 1\\<rbrakk>\n        \\<Longrightarrow> emeasure (measure_pmf (bernoulli_pmf p))\n                           {x !! i} =\n                          ennreal (prob_component p x i)) \\<Longrightarrow>\n    (\\<Prod>i = 0..n - 1.\n        emeasure (measure_pmf (bernoulli_pmf p)) {x !! i}) =\n    ennreal (prod (prob_component p x) {0..n - 1})", "then"], ["proof (chain)\npicking this:\n  prob_component p x (nn (prob_component p x) {0..n - 1}) \\<noteq> p", "have \"p + prob_component p x (nn (prob_component p x) {0..n - 1}) = 1\""], ["proof (prove)\nusing this:\n  prob_component p x (nn (prob_component p x) {0..n - 1}) \\<noteq> p\n\ngoal (1 subgoal):\n 1. p + prob_component p x (nn (prob_component p x) {0..n - 1}) = 1", "using f3"], ["proof (prove)\nusing this:\n  prob_component p x (nn (prob_component p x) {0..n - 1}) \\<noteq> p\n  \\<forall>s n.\n     if s !! n then prob_component p s n = p\n     else p + prob_component p s n = 1\n\ngoal (1 subgoal):\n 1. p + prob_component p x (nn (prob_component p x) {0..n - 1}) = 1", "by metis"], ["proof (state)\nthis:\n  p + prob_component p x (nn (prob_component p x) {0..n - 1}) = 1\n\ngoal (1 subgoal):\n 1. (\\<And>p x i.\n        \\<lbrakk>0 \\<le> p; p \\<le> 1\\<rbrakk>\n        \\<Longrightarrow> emeasure (measure_pmf (bernoulli_pmf p))\n                           {x !! i} =\n                          ennreal (prob_component p x i)) \\<Longrightarrow>\n    (\\<Prod>i = 0..n - 1.\n        emeasure (measure_pmf (bernoulli_pmf p)) {x !! i}) =\n    ennreal (prod (prob_component p x) {0..n - 1})", "then"], ["proof (chain)\npicking this:\n  p + prob_component p x (nn (prob_component p x) {0..n - 1}) = 1", "have \"nn (prob_component p x) {0..n - 1} \\<notin> {0..n - 1} \\<or> 0 \\<le> prob_component p x (nn (prob_component p x) {0..n - 1})\""], ["proof (prove)\nusing this:\n  p + prob_component p x (nn (prob_component p x) {0..n - 1}) = 1\n\ngoal (1 subgoal):\n 1. nn (prob_component p x) {0..n - 1} \\<notin> {0..n - 1} \\<or>\n    0 \\<le> prob_component p x (nn (prob_component p x) {0..n - 1})", "using assms"], ["proof (prove)\nusing this:\n  p + prob_component p x (nn (prob_component p x) {0..n - 1}) = 1\n  M = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. nn (prob_component p x) {0..n - 1} \\<notin> {0..n - 1} \\<or>\n    0 \\<le> prob_component p x (nn (prob_component p x) {0..n - 1})", "by linarith"], ["proof (state)\nthis:\n  nn (prob_component p x) {0..n - 1} \\<notin> {0..n - 1} \\<or>\n  0 \\<le> prob_component p x (nn (prob_component p x) {0..n - 1})\n\ngoal (1 subgoal):\n 1. (\\<And>p x i.\n        \\<lbrakk>0 \\<le> p; p \\<le> 1\\<rbrakk>\n        \\<Longrightarrow> emeasure (measure_pmf (bernoulli_pmf p))\n                           {x !! i} =\n                          ennreal (prob_component p x i)) \\<Longrightarrow>\n    (\\<Prod>i = 0..n - 1.\n        emeasure (measure_pmf (bernoulli_pmf p)) {x !! i}) =\n    ennreal (prod (prob_component p x) {0..n - 1})", "}"], ["proof (state)\nthis:\n  prob_component p x (nn (prob_component p x) {0..n - 1}) \\<noteq>\n  p \\<Longrightarrow>\n  nn (prob_component p x) {0..n - 1} \\<notin> {0..n - 1} \\<or>\n  0 \\<le> prob_component p x (nn (prob_component p x) {0..n - 1})\n\ngoal (1 subgoal):\n 1. (\\<And>p x i.\n        \\<lbrakk>0 \\<le> p; p \\<le> 1\\<rbrakk>\n        \\<Longrightarrow> emeasure (measure_pmf (bernoulli_pmf p))\n                           {x !! i} =\n                          ennreal (prob_component p x i)) \\<Longrightarrow>\n    (\\<Prod>i = 0..n - 1.\n        emeasure (measure_pmf (bernoulli_pmf p)) {x !! i}) =\n    ennreal (prod (prob_component p x) {0..n - 1})", "then"], ["proof (chain)\npicking this:\n  prob_component p x (nn (prob_component p x) {0..n - 1}) \\<noteq>\n  p \\<Longrightarrow>\n  nn (prob_component p x) {0..n - 1} \\<notin> {0..n - 1} \\<or>\n  0 \\<le> prob_component p x (nn (prob_component p x) {0..n - 1})", "have \"nn (prob_component p x) {0..n - 1} \\<notin> {0..n - 1} \\<or> 0 \\<le> prob_component p x (nn (prob_component  p x) {0..n - 1})\""], ["proof (prove)\nusing this:\n  prob_component p x (nn (prob_component p x) {0..n - 1}) \\<noteq>\n  p \\<Longrightarrow>\n  nn (prob_component p x) {0..n - 1} \\<notin> {0..n - 1} \\<or>\n  0 \\<le> prob_component p x (nn (prob_component p x) {0..n - 1})\n\ngoal (1 subgoal):\n 1. nn (prob_component p x) {0..n - 1} \\<notin> {0..n - 1} \\<or>\n    0 \\<le> prob_component p x (nn (prob_component p x) {0..n - 1})", "using assms"], ["proof (prove)\nusing this:\n  prob_component p x (nn (prob_component p x) {0..n - 1}) \\<noteq>\n  p \\<Longrightarrow>\n  nn (prob_component p x) {0..n - 1} \\<notin> {0..n - 1} \\<or>\n  0 \\<le> prob_component p x (nn (prob_component p x) {0..n - 1})\n  M = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. nn (prob_component p x) {0..n - 1} \\<notin> {0..n - 1} \\<or>\n    0 \\<le> prob_component p x (nn (prob_component p x) {0..n - 1})", "by linarith"], ["proof (state)\nthis:\n  nn (prob_component p x) {0..n - 1} \\<notin> {0..n - 1} \\<or>\n  0 \\<le> prob_component p x (nn (prob_component p x) {0..n - 1})\n\ngoal (1 subgoal):\n 1. (\\<And>p x i.\n        \\<lbrakk>0 \\<le> p; p \\<le> 1\\<rbrakk>\n        \\<Longrightarrow> emeasure (measure_pmf (bernoulli_pmf p))\n                           {x !! i} =\n                          ennreal (prob_component p x i)) \\<Longrightarrow>\n    (\\<Prod>i = 0..n - 1.\n        emeasure (measure_pmf (bernoulli_pmf p)) {x !! i}) =\n    ennreal (prod (prob_component p x) {0..n - 1})", "then"], ["proof (chain)\npicking this:\n  nn (prob_component p x) {0..n - 1} \\<notin> {0..n - 1} \\<or>\n  0 \\<le> prob_component p x (nn (prob_component p x) {0..n - 1})", "have \"(\\<Prod>n = 0..n - 1. ennreal (prob_component p x n)) = ennreal (prod (prob_component p x) {0..n - 1})\""], ["proof (prove)\nusing this:\n  nn (prob_component p x) {0..n - 1} \\<notin> {0..n - 1} \\<or>\n  0 \\<le> prob_component p x (nn (prob_component p x) {0..n - 1})\n\ngoal (1 subgoal):\n 1. (\\<Prod>n = 0..n - 1. ennreal (prob_component p x n)) =\n    ennreal (prod (prob_component p x) {0..n - 1})", "using f2 f1"], ["proof (prove)\nusing this:\n  nn (prob_component p x) {0..n - 1} \\<notin> {0..n - 1} \\<or>\n  0 \\<le> prob_component p x (nn (prob_component p x) {0..n - 1})\n  \\<forall>x0 x1.\n     (\\<exists>v2. v2 \\<in> x1 \\<and> \\<not> 0 \\<le> x0 v2) =\n     (nn x0 x1 \\<in> x1 \\<and> \\<not> 0 \\<le> x0 (nn x0 x1))\n  \\<forall>N f.\n     (\\<exists>n. n \\<in> N \\<and> \\<not> 0 \\<le> f n) \\<or>\n     (\\<Prod>n\\<in>N. ennreal (f n)) = ennreal (prod f N)\n\ngoal (1 subgoal):\n 1. (\\<Prod>n = 0..n - 1. ennreal (prob_component p x n)) =\n    ennreal (prod (prob_component p x) {0..n - 1})", "by meson"], ["proof (state)\nthis:\n  (\\<Prod>n = 0..n - 1. ennreal (prob_component p x n)) =\n  ennreal (prod (prob_component p x) {0..n - 1})\n\ngoal (1 subgoal):\n 1. (\\<And>p x i.\n        \\<lbrakk>0 \\<le> p; p \\<le> 1\\<rbrakk>\n        \\<Longrightarrow> emeasure (measure_pmf (bernoulli_pmf p))\n                           {x !! i} =\n                          ennreal (prob_component p x i)) \\<Longrightarrow>\n    (\\<Prod>i = 0..n - 1.\n        emeasure (measure_pmf (bernoulli_pmf p)) {x !! i}) =\n    ennreal (prod (prob_component p x) {0..n - 1})", "moreover"], ["proof (state)\nthis:\n  (\\<Prod>n = 0..n - 1. ennreal (prob_component p x n)) =\n  ennreal (prod (prob_component p x) {0..n - 1})\n\ngoal (1 subgoal):\n 1. (\\<And>p x i.\n        \\<lbrakk>0 \\<le> p; p \\<le> 1\\<rbrakk>\n        \\<Longrightarrow> emeasure (measure_pmf (bernoulli_pmf p))\n                           {x !! i} =\n                          ennreal (prob_component p x i)) \\<Longrightarrow>\n    (\\<Prod>i = 0..n - 1.\n        emeasure (measure_pmf (bernoulli_pmf p)) {x !! i}) =\n    ennreal (prod (prob_component p x) {0..n - 1})", "have \"(\\<Prod>n = 0..n - 1. ennreal (prob_component p x n)) =\n      (\\<Prod>n = 0..n - 1. emeasure (measure_pmf (bernoulli_pmf p)) {x !! n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>n = 0..n - 1. ennreal (prob_component p x n)) =\n    (\\<Prod>n = 0..n - 1. emeasure (measure_pmf (bernoulli_pmf p)) {x !! n})", "using prob_component_measure[of p x]\n       assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> p; p \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> emeasure (measure_pmf (bernoulli_pmf p)) {x !! ?i} =\n                    ennreal (prob_component p x ?i)\n  M = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. (\\<Prod>n = 0..n - 1. ennreal (prob_component p x n)) =\n    (\\<Prod>n = 0..n - 1. emeasure (measure_pmf (bernoulli_pmf p)) {x !! n})", "by simp"], ["proof (state)\nthis:\n  (\\<Prod>n = 0..n - 1. ennreal (prob_component p x n)) =\n  (\\<Prod>n = 0..n - 1. emeasure (measure_pmf (bernoulli_pmf p)) {x !! n})\n\ngoal (1 subgoal):\n 1. (\\<And>p x i.\n        \\<lbrakk>0 \\<le> p; p \\<le> 1\\<rbrakk>\n        \\<Longrightarrow> emeasure (measure_pmf (bernoulli_pmf p))\n                           {x !! i} =\n                          ennreal (prob_component p x i)) \\<Longrightarrow>\n    (\\<Prod>i = 0..n - 1.\n        emeasure (measure_pmf (bernoulli_pmf p)) {x !! i}) =\n    ennreal (prod (prob_component p x) {0..n - 1})", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Prod>n = 0..n - 1. ennreal (prob_component p x n)) =\n  ennreal (prod (prob_component p x) {0..n - 1})\n  (\\<Prod>n = 0..n - 1. ennreal (prob_component p x n)) =\n  (\\<Prod>n = 0..n - 1. emeasure (measure_pmf (bernoulli_pmf p)) {x !! n})", "show \"(\\<Prod>n = 0..n - 1. emeasure (measure_pmf (bernoulli_pmf p)) {x !! n}) = ennreal (prod (prob_component p x) {0..n - 1})\""], ["proof (prove)\nusing this:\n  (\\<Prod>n = 0..n - 1. ennreal (prob_component p x n)) =\n  ennreal (prod (prob_component p x) {0..n - 1})\n  (\\<Prod>n = 0..n - 1. ennreal (prob_component p x n)) =\n  (\\<Prod>n = 0..n - 1. emeasure (measure_pmf (bernoulli_pmf p)) {x !! n})\n\ngoal (1 subgoal):\n 1. (\\<Prod>n = 0..n - 1.\n        emeasure (measure_pmf (bernoulli_pmf p)) {x !! n}) =\n    ennreal (prod (prob_component p x) {0..n - 1})", "using prob_component_measure[of p x]"], ["proof (prove)\nusing this:\n  (\\<Prod>n = 0..n - 1. ennreal (prob_component p x n)) =\n  ennreal (prod (prob_component p x) {0..n - 1})\n  (\\<Prod>n = 0..n - 1. ennreal (prob_component p x n)) =\n  (\\<Prod>n = 0..n - 1. emeasure (measure_pmf (bernoulli_pmf p)) {x !! n})\n  \\<lbrakk>0 \\<le> p; p \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> emeasure (measure_pmf (bernoulli_pmf p)) {x !! ?i} =\n                    ennreal (prob_component p x ?i)\n\ngoal (1 subgoal):\n 1. (\\<Prod>n = 0..n - 1.\n        emeasure (measure_pmf (bernoulli_pmf p)) {x !! n}) =\n    ennreal (prod (prob_component p x) {0..n - 1})", "by simp"], ["proof (state)\nthis:\n  (\\<Prod>n = 0..n - 1. emeasure (measure_pmf (bernoulli_pmf p)) {x !! n}) =\n  ennreal (prod (prob_component p x) {0..n - 1})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..n - 1. emeasure (PM i) {x !! i}) =\n  ennreal (prod (prob_component p x) {0..n - 1})\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "finally"], ["proof (chain)\npicking this:\n  emeasure M S = ennreal (prod (prob_component p x) {0..n - 1})", "show \"emeasure M S = (\\<Prod>i\\<in>{0..n-1}. prob_component p x i)\""], ["proof (prove)\nusing this:\n  emeasure M S = ennreal (prod (prob_component p x) {0..n - 1})\n\ngoal (1 subgoal):\n 1. emeasure M S = ennreal (prod (prob_component p x) {0..n - 1})", "."], ["proof (state)\nthis:\n  emeasure M S = ennreal (prod (prob_component p x) {0..n - 1})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  bernoulli_stream_pref_prob':\n  fixes x\n  assumes \"M = bernoulli_stream p\"\nand \"p \\<le> 1\" and \"0 \\<le> p\"\n  shows \"emeasure M {w\\<in> space M. (stake n w = stake n x)} = (\\<Prod>i\\<in>{0..<n}. prob_component p x i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})", "proof (cases \"Suc 0 \\<le> n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})\n 2. \\<not> Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})", "case True"], ["proof (state)\nthis:\n  Suc 0 \\<le> n\n\ngoal (2 subgoals):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})\n 2. \\<not> Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})", "hence \"emeasure M {w\\<in> space M. (stake n w = stake n x)} = (\\<Prod>i\\<in>{0..n -1}. prob_component p x i)\""], ["proof (prove)\nusing this:\n  Suc 0 \\<le> n\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "using assms"], ["proof (prove)\nusing this:\n  Suc 0 \\<le> n\n  M = bernoulli_stream p\n  p \\<le> 1\n  0 \\<le> p\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..n - 1})", "by (simp add: bernoulli_stream_pref_prob)"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. stake n w = stake n x} =\n  ennreal (prod (prob_component p x) {0..n - 1})\n\ngoal (2 subgoals):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})\n 2. \\<not> Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})", "moreover"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. stake n w = stake n x} =\n  ennreal (prod (prob_component p x) {0..n - 1})\n\ngoal (2 subgoals):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})\n 2. \\<not> Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})", "have \"(\\<Prod>i\\<in>{0..n -1}. prob_component p x i) = (\\<Prod>i\\<in>{0..<n}. prob_component p x i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod (prob_component p x) {0..n - 1} = prod (prob_component p x) {0..<n}", "proof (rule prod.cong)"], ["proof (state)\ngoal (2 subgoals):\n 1. {0..n - 1} = {0..<n}\n 2. \\<And>xa.\n       xa \\<in> {0..<n} \\<Longrightarrow>\n       prob_component p x xa = prob_component p x xa", "show \"{0..n - 1} = {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..n - 1} = {0..<n}", "using True"], ["proof (prove)\nusing this:\n  Suc 0 \\<le> n\n\ngoal (1 subgoal):\n 1. {0..n - 1} = {0..<n}", "by auto"], ["proof (state)\nthis:\n  {0..n - 1} = {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {0..<n} \\<Longrightarrow>\n       prob_component p x xa = prob_component p x xa", "show \"\\<And>xa. xa \\<in> {0..<n} \\<Longrightarrow> prob_component p x xa = prob_component p x xa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {0..<n} \\<Longrightarrow>\n       prob_component p x xa = prob_component p x xa", "by simp"], ["proof (state)\nthis:\n  ?xa \\<in> {0..<n} \\<Longrightarrow>\n  prob_component p x ?xa = prob_component p x ?xa\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prod (prob_component p x) {0..n - 1} = prod (prob_component p x) {0..<n}\n\ngoal (2 subgoals):\n 1. Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})\n 2. \\<not> Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})", "ultimately"], ["proof (chain)\npicking this:\n  emeasure M {w \\<in> space M. stake n w = stake n x} =\n  ennreal (prod (prob_component p x) {0..n - 1})\n  prod (prob_component p x) {0..n - 1} = prod (prob_component p x) {0..<n}", "show ?thesis"], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. stake n w = stake n x} =\n  ennreal (prod (prob_component p x) {0..n - 1})\n  prod (prob_component p x) {0..n - 1} = prod (prob_component p x) {0..<n}\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})", "by simp"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. stake n w = stake n x} =\n  ennreal (prod (prob_component p x) {0..<n})\n\ngoal (1 subgoal):\n 1. \\<not> Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})", "case False"], ["proof (state)\nthis:\n  \\<not> Suc 0 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})", "hence \"n = 0\""], ["proof (prove)\nusing this:\n  \\<not> Suc 0 \\<le> n\n\ngoal (1 subgoal):\n 1. n = 0", "using False"], ["proof (prove)\nusing this:\n  \\<not> Suc 0 \\<le> n\n  \\<not> Suc 0 \\<le> n\n\ngoal (1 subgoal):\n 1. n = 0", "by simp"], ["proof (state)\nthis:\n  n = 0\n\ngoal (1 subgoal):\n 1. \\<not> Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})", "have \"{w\\<in> space M. (stake n w = stake n x)} = space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. stake n w = stake n x} = space M", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {w \\<in> space M. stake n w = stake n x} \\<subseteq> space M\n 2. space M \\<subseteq> {w \\<in> space M. stake n w = stake n x}", "show \"{w \\<in> space M. stake n w = stake n x} \\<subseteq> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. stake n w = stake n x} \\<subseteq> space M", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {w \\<in> space M. stake n w = stake n x} \\<Longrightarrow>\n       xa \\<in> space M", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {w \\<in> space M. stake n w = stake n x} \\<Longrightarrow>\n       xa \\<in> space M", "assume \"w\\<in> {w \\<in> space M. stake n w = stake n x}\""], ["proof (state)\nthis:\n  w \\<in> {w \\<in> space M. stake n w = stake n x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {w \\<in> space M. stake n w = stake n x} \\<Longrightarrow>\n       xa \\<in> space M", "thus \"w \\<in> space M\""], ["proof (prove)\nusing this:\n  w \\<in> {w \\<in> space M. stake n w = stake n x}\n\ngoal (1 subgoal):\n 1. w \\<in> space M", "by auto"], ["proof (state)\nthis:\n  w \\<in> space M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w \\<in> space M. stake n w = stake n x} \\<subseteq> space M\n\ngoal (1 subgoal):\n 1. space M \\<subseteq> {w \\<in> space M. stake n w = stake n x}", "show \"space M \\<subseteq> {w \\<in> space M. stake n w = stake n x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space M \\<subseteq> {w \\<in> space M. stake n w = stake n x}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> space M \\<Longrightarrow>\n       xa \\<in> {w \\<in> space M. stake n w = stake n x}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> space M \\<Longrightarrow>\n       xa \\<in> {w \\<in> space M. stake n w = stake n x}", "assume \"w\\<in> space M\""], ["proof (state)\nthis:\n  w \\<in> space M\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> space M \\<Longrightarrow>\n       xa \\<in> {w \\<in> space M. stake n w = stake n x}", "have \"stake 0 w = stake 0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake 0 w = stake 0 x", "by simp"], ["proof (state)\nthis:\n  stake 0 w = stake 0 x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> space M \\<Longrightarrow>\n       xa \\<in> {w \\<in> space M. stake n w = stake n x}", "hence \"stake n w = stake n x\""], ["proof (prove)\nusing this:\n  stake 0 w = stake 0 x\n\ngoal (1 subgoal):\n 1. stake n w = stake n x", "using \\<open>n = 0\\<close>"], ["proof (prove)\nusing this:\n  stake 0 w = stake 0 x\n  n = 0\n\ngoal (1 subgoal):\n 1. stake n w = stake n x", "by simp"], ["proof (state)\nthis:\n  stake n w = stake n x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> space M \\<Longrightarrow>\n       xa \\<in> {w \\<in> space M. stake n w = stake n x}", "thus \"w\\<in> {w \\<in> space M. stake n w = stake n x}\""], ["proof (prove)\nusing this:\n  stake n w = stake n x\n\ngoal (1 subgoal):\n 1. w \\<in> {w \\<in> space M. stake n w = stake n x}", "using \\<open>w\\<in> space M\\<close>"], ["proof (prove)\nusing this:\n  stake n w = stake n x\n  w \\<in> space M\n\ngoal (1 subgoal):\n 1. w \\<in> {w \\<in> space M. stake n w = stake n x}", "by auto"], ["proof (state)\nthis:\n  w \\<in> {w \\<in> space M. stake n w = stake n x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  space M \\<subseteq> {w \\<in> space M. stake n w = stake n x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w \\<in> space M. stake n w = stake n x} = space M\n\ngoal (1 subgoal):\n 1. \\<not> Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})", "hence \"emeasure M {w \\<in> space M. stake n w = stake n x} = emeasure M (space M)\""], ["proof (prove)\nusing this:\n  {w \\<in> space M. stake n w = stake n x} = space M\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake n w = stake n x} =\n    emeasure M (space M)", "by simp"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. stake n w = stake n x} = emeasure M (space M)\n\ngoal (1 subgoal):\n 1. \\<not> Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})", "also"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. stake n w = stake n x} = emeasure M (space M)\n\ngoal (1 subgoal):\n 1. \\<not> Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (space M) = 1", "using assms"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  p \\<le> 1\n  0 \\<le> p\n\ngoal (1 subgoal):\n 1. emeasure M (space M) = 1", "by (simp add: bernoulli_stream_def prob_space.emeasure_space_1\n        prob_space.prob_space_stream_space prob_space_measure_pmf)"], ["proof (state)\nthis:\n  emeasure M (space M) = 1\n\ngoal (1 subgoal):\n 1. \\<not> Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})", "also"], ["proof (state)\nthis:\n  emeasure M (space M) = 1\n\ngoal (1 subgoal):\n 1. \\<not> Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})", "have \"... = (\\<Prod>i\\<in>{0..<n}. prob_component p x i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 = ennreal (prod (prob_component p x) {0..<n})", "using \\<open>n = 0\\<close>"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. 1 = ennreal (prod (prob_component p x) {0..<n})", "by simp"], ["proof (state)\nthis:\n  1 = ennreal (prod (prob_component p x) {0..<n})\n\ngoal (1 subgoal):\n 1. \\<not> Suc 0 \\<le> n \\<Longrightarrow>\n    emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})", "finally"], ["proof (chain)\npicking this:\n  emeasure M {w \\<in> space M. stake n w = stake n x} =\n  ennreal (prod (prob_component p x) {0..<n})", "show ?thesis"], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. stake n w = stake n x} =\n  ennreal (prod (prob_component p x) {0..<n})\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})", "."], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. stake n w = stake n x} =\n  ennreal (prod (prob_component p x) {0..<n})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  bernoulli_stream_stake_prob:\n  fixes x\n  assumes \"M = bernoulli_stream p\"\nand \"p \\<le> 1\" and \"0 \\<le> p\"\nshows \"measure M {w\\<in> space M. (stake n w = stake n x)} = (\\<Prod>i\\<in>{0..<n}. prob_component p x i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<P>(w in M. stake n w = stake n x) = prod (prob_component p x) {0..<n}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<P>(w in M. stake n w = stake n x) = prod (prob_component p x) {0..<n}", "have \"measure M {w\\<in> space M. (stake n w = stake n x)} = emeasure M {w\\<in> space M. (stake n w = stake n x)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal \\<P>(w in M. stake n w = stake n x) =\n    emeasure M {w \\<in> space M. stake n w = stake n x}", "by (metis (no_types, lifting) assms(1) bernoulli_stream_def emeasure_eq_ennreal_measure emeasure_space\n        ennreal_one_neq_top neq_top_trans prob_space.emeasure_space_1 prob_space.prob_space_stream_space\n        prob_space_measure_pmf)"], ["proof (state)\nthis:\n  ennreal \\<P>(w in M. stake n w = stake n x) =\n  emeasure M {w \\<in> space M. stake n w = stake n x}\n\ngoal (1 subgoal):\n 1. \\<P>(w in M. stake n w = stake n x) = prod (prob_component p x) {0..<n}", "also"], ["proof (state)\nthis:\n  ennreal \\<P>(w in M. stake n w = stake n x) =\n  emeasure M {w \\<in> space M. stake n w = stake n x}\n\ngoal (1 subgoal):\n 1. \\<P>(w in M. stake n w = stake n x) = prod (prob_component p x) {0..<n}", "have \"... = (\\<Prod>i\\<in>{0..<n}. prob_component p x i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})", "using bernoulli_stream_pref_prob' assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?M = bernoulli_stream ?p; ?p \\<le> 1; 0 \\<le> ?p\\<rbrakk>\n  \\<Longrightarrow> emeasure ?M\n                     {w \\<in> space ?M. stake ?n w = stake ?n ?x} =\n                    ennreal (prod (prob_component ?p ?x) {0..<?n})\n  M = bernoulli_stream p\n  p \\<le> 1\n  0 \\<le> p\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake n w = stake n x} =\n    ennreal (prod (prob_component p x) {0..<n})", "by simp"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. stake n w = stake n x} =\n  ennreal (prod (prob_component p x) {0..<n})\n\ngoal (1 subgoal):\n 1. \\<P>(w in M. stake n w = stake n x) = prod (prob_component p x) {0..<n}", "finally"], ["proof (chain)\npicking this:\n  ennreal \\<P>(w in M. stake n w = stake n x) =\n  ennreal (prod (prob_component p x) {0..<n})", "show ?thesis"], ["proof (prove)\nusing this:\n  ennreal \\<P>(w in M. stake n w = stake n x) =\n  ennreal (prod (prob_component p x) {0..<n})\n\ngoal (1 subgoal):\n 1. \\<P>(w in M. stake n w = stake n x) = prod (prob_component p x) {0..<n}", "by (simp add: assms(2) assms(3) prob_component_def prod_nonneg)"], ["proof (state)\nthis:\n  \\<P>(w in M. stake n w = stake n x) = prod (prob_component p x) {0..<n}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) bernoulli_stream_pseudo_prob:\n  fixes x\n  assumes \"M = bernoulli_stream p\"\nand \"p \\<le> 1\" and \"0 \\<le> p\"\nand \"w\\<in> range (pseudo_proj_True n)\"\nshows \"measure M (pseudo_proj_True n -`{w} \\<inter> space M) = (\\<Prod>i\\<in>{0..<n}. prob_component p w i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True n -` {w} \\<inter> space M) =\n    prod (prob_component p w) {0..<n}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True n -` {w} \\<inter> space M) =\n    prod (prob_component p w) {0..<n}", "have \"(pseudo_proj_True n -`{w}) \\<inter> space M = {x\\<in> space M. (stake n w = stake n x)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<inter> space M =\n    {x \\<in> space M. stake n w = stake n x}", "using assms(4) infinite_coin_toss_space.pseudo_proj_True_def infinite_coin_toss_space_axioms\n      pseudo_proj_True_preimage_stake pseudo_proj_True_stake"], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True n)\n  infinite_coin_toss_space ?p ?M \\<Longrightarrow>\n  pseudo_proj_True ?n = (\\<lambda>w. stake ?n w @- sconst True)\n  infinite_coin_toss_space p M\n  ?w = pseudo_proj_True ?n ?w \\<Longrightarrow>\n  pseudo_proj_True ?n -` {?w} = {x. stake ?n x = stake ?n ?w}\n  stake ?n (pseudo_proj_True ?n ?w) = stake ?n ?w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<inter> space M =\n    {x \\<in> space M. stake n w = stake n x}", "by force"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {w} \\<inter> space M =\n  {x \\<in> space M. stake n w = stake n x}\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True n -` {w} \\<inter> space M) =\n    prod (prob_component p w) {0..<n}", "thus ?thesis"], ["proof (prove)\nusing this:\n  pseudo_proj_True n -` {w} \\<inter> space M =\n  {x \\<in> space M. stake n w = stake n x}\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True n -` {w} \\<inter> space M) =\n    prod (prob_component p w) {0..<n}", "using bernoulli_stream_stake_prob assms"], ["proof (prove)\nusing this:\n  pseudo_proj_True n -` {w} \\<inter> space M =\n  {x \\<in> space M. stake n w = stake n x}\n  \\<lbrakk>?M = bernoulli_stream ?p; ?p \\<le> 1; 0 \\<le> ?p\\<rbrakk>\n  \\<Longrightarrow> \\<P>(w in ?M. stake ?n w = stake ?n ?x) =\n                    prod (prob_component ?p ?x) {0..<?n}\n  M = bernoulli_stream p\n  p \\<le> 1\n  0 \\<le> p\n  w \\<in> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True n -` {w} \\<inter> space M) =\n    prod (prob_component p w) {0..<n}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>pseudo_proj_True n -` {w} \\<inter> space M =\n             {x \\<in> space M. stake n w = stake n x};\n     \\<And>M p n x.\n        \\<lbrakk>M = bernoulli_stream p; p \\<le> 1; 0 \\<le> p\\<rbrakk>\n        \\<Longrightarrow> \\<P>(w in M. stake n w = stake n x) =\n                          prod (prob_component p x) {0..<n};\n     M = bernoulli_stream p; p \\<le> 1; 0 \\<le> p;\n     w \\<in> range (pseudo_proj_True n)\\<rbrakk>\n    \\<Longrightarrow> prob (pseudo_proj_True n -` {w} \\<inter> space M) =\n                      prod (prob_component p w) {0..<n}", "have \"pseudo_proj_True n w = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = w", "using \\<open>w \\<in> range (pseudo_proj_True n)\\<close> pseudo_proj_True_proj"], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True n)\n  pseudo_proj_True ?n (pseudo_proj_True ?n ?w) = pseudo_proj_True ?n ?w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = w", "by blast"], ["proof (state)\nthis:\n  pseudo_proj_True n w = w\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pseudo_proj_True n -` {w} \\<inter> space M =\n             {x \\<in> space M. stake n w = stake n x};\n     \\<And>M p n x.\n        \\<lbrakk>M = bernoulli_stream p; p \\<le> 1; 0 \\<le> p\\<rbrakk>\n        \\<Longrightarrow> \\<P>(w in M. stake n w = stake n x) =\n                          prod (prob_component p x) {0..<n};\n     M = bernoulli_stream p; p \\<le> 1; 0 \\<le> p;\n     w \\<in> range (pseudo_proj_True n)\\<rbrakk>\n    \\<Longrightarrow> prob (pseudo_proj_True n -` {w} \\<inter> space M) =\n                      prod (prob_component p w) {0..<n}", "then"], ["proof (chain)\npicking this:\n  pseudo_proj_True n w = w", "show ?thesis"], ["proof (prove)\nusing this:\n  pseudo_proj_True n w = w\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True n -` {w} \\<inter> space M) =\n    prod (prob_component p w) {0..<n}", "using bernoulli bernoulli_stream_stake_prob p_gt_0 p_lt_1 pseudo_proj_True_preimage_stake_space"], ["proof (prove)\nusing this:\n  pseudo_proj_True n w = w\n  M = bernoulli_stream p\n  \\<lbrakk>?M = bernoulli_stream ?p; ?p \\<le> 1; 0 \\<le> ?p\\<rbrakk>\n  \\<Longrightarrow> \\<P>(w in ?M. stake ?n w = stake ?n ?x) =\n                    prod (prob_component ?p ?x) {0..<?n}\n  0 \\<le> p\n  p \\<le> 1\n  ?w = pseudo_proj_True ?n ?w \\<Longrightarrow>\n  pseudo_proj_True ?n -` {?w} \\<inter> space M =\n  {x \\<in> space M. stake ?n x = stake ?n ?w}\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True n -` {w} \\<inter> space M) =\n    prod (prob_component p w) {0..<n}", "by presburger"], ["proof (state)\nthis:\n  prob (pseudo_proj_True n -` {w} \\<inter> space M) =\n  prod (prob_component p w) {0..<n}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prob (pseudo_proj_True n -` {w} \\<inter> space M) =\n  prod (prob_component p w) {0..<n}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bernoulli_stream_element_prob_rec:\n  fixes x\n  assumes \"M = bernoulli_stream p\"\nand \"0 \\<le> p\" and \"p \\<le> 1\"\n  shows \"\\<And> n. emeasure M {w\\<in> space M. (stake (Suc n) w = stake (Suc n) x)} =\n    (emeasure M {w\\<in> space M. (stake n w = stake n x)} * prob_component p x n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n       emeasure M {w \\<in> space M. stake n w = stake n x} *\n       ennreal (prob_component p x n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n       emeasure M {w \\<in> space M. stake n w = stake n x} *\n       ennreal (prob_component p x n)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n       emeasure M {w \\<in> space M. stake n w = stake n x} *\n       ennreal (prob_component p x n)", "define S where \"S = {w\\<in> space M. (stake (Suc n) w = stake (Suc n) x)}\""], ["proof (state)\nthis:\n  S = {w \\<in> space M. stake (Suc n) w = stake (Suc n) x}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n       emeasure M {w \\<in> space M. stake n w = stake n x} *\n       ennreal (prob_component p x n)", "define precS where \"precS = {w\\<in> space M. (stake n w = stake n x)}\""], ["proof (state)\nthis:\n  precS = {w \\<in> space M. stake n w = stake n x}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n       emeasure M {w \\<in> space M. stake n w = stake n x} *\n       ennreal (prob_component p x n)", "show \"emeasure M S = emeasure M precS * prob_component p x n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "proof (cases \" n\\<le> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)\n 2. \\<not> n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "case True"], ["proof (state)\nthis:\n  n \\<le> 0\n\ngoal (2 subgoals):\n 1. n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)\n 2. \\<not> n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "hence \"n=0\""], ["proof (prove)\nusing this:\n  n \\<le> 0\n\ngoal (1 subgoal):\n 1. n = 0", "by simp"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)\n 2. \\<not> n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "hence \"emeasure M S = (\\<Prod>i\\<in>{0..n}. prob_component p x i)\""], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. emeasure M S = ennreal (prod (prob_component p x) {0..n})", "unfolding S_def"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n    ennreal (prod (prob_component p x) {0..n})", "using bernoulli_stream_pref_prob assms diff_Suc_1 le_refl"], ["proof (prove)\nusing this:\n  n = 0\n  \\<lbrakk>?M = bernoulli_stream ?p; 0 \\<le> ?p; ?p \\<le> 1;\n   Suc 0 \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> emeasure ?M\n                     {w \\<in> space ?M. stake ?n w = stake ?n ?x} =\n                    ennreal (prod (prob_component ?p ?x) {0..?n - 1})\n  M = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n  Suc ?n - 1 = ?n\n  ?n \\<le> ?n\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n    ennreal (prod (prob_component p x) {0..n})", "by presburger"], ["proof (state)\nthis:\n  emeasure M S = ennreal (prod (prob_component p x) {0..n})\n\ngoal (2 subgoals):\n 1. n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)\n 2. \\<not> n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "also"], ["proof (state)\nthis:\n  emeasure M S = ennreal (prod (prob_component p x) {0..n})\n\ngoal (2 subgoals):\n 1. n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)\n 2. \\<not> n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "have \"... = prob_component p x 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (prod (prob_component p x) {0..n}) =\n    ennreal (prob_component p x 0)", "using True"], ["proof (prove)\nusing this:\n  n \\<le> 0\n\ngoal (1 subgoal):\n 1. ennreal (prod (prob_component p x) {0..n}) =\n    ennreal (prob_component p x 0)", "by simp"], ["proof (state)\nthis:\n  ennreal (prod (prob_component p x) {0..n}) =\n  ennreal (prob_component p x 0)\n\ngoal (2 subgoals):\n 1. n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)\n 2. \\<not> n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "also"], ["proof (state)\nthis:\n  ennreal (prod (prob_component p x) {0..n}) =\n  ennreal (prob_component p x 0)\n\ngoal (2 subgoals):\n 1. n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)\n 2. \\<not> n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "have \"... = emeasure M precS * prob_component p x n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (prob_component p x 0) =\n    emeasure M precS * ennreal (prob_component p x n)", "using bernoulli_stream_npref_prob assms"], ["proof (prove)\nusing this:\n  ?M = bernoulli_stream ?p \\<Longrightarrow>\n  emeasure ?M {w \\<in> space ?M. stake 0 w = stake 0 ?x} = 1\n  M = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. ennreal (prob_component p x 0) =\n    emeasure M precS * ennreal (prob_component p x n)", "by (simp add: \\<open>n=0\\<close> precS_def)"], ["proof (state)\nthis:\n  ennreal (prob_component p x 0) =\n  emeasure M precS * ennreal (prob_component p x n)\n\ngoal (2 subgoals):\n 1. n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)\n 2. \\<not> n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "finally"], ["proof (chain)\npicking this:\n  emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "show \"emeasure M S = emeasure M precS * prob_component p x n\""], ["proof (prove)\nusing this:\n  emeasure M S = emeasure M precS * ennreal (prob_component p x n)\n\ngoal (1 subgoal):\n 1. emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "."], ["proof (state)\nthis:\n  emeasure M S = emeasure M precS * ennreal (prob_component p x n)\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "case False"], ["proof (state)\nthis:\n  \\<not> n \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "hence \"n \\<ge> Suc 0\""], ["proof (prove)\nusing this:\n  \\<not> n \\<le> 0\n\ngoal (1 subgoal):\n 1. Suc 0 \\<le> n", "by simp"], ["proof (state)\nthis:\n  Suc 0 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "hence \"emeasure M S = (\\<Prod>i\\<in>{0..n}. prob_component p x i)\""], ["proof (prove)\nusing this:\n  Suc 0 \\<le> n\n\ngoal (1 subgoal):\n 1. emeasure M S = ennreal (prod (prob_component p x) {0..n})", "unfolding S_def"], ["proof (prove)\nusing this:\n  Suc 0 \\<le> n\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n    ennreal (prod (prob_component p x) {0..n})", "using bernoulli_stream_pref_prob diff_Suc_1 le_refl assms"], ["proof (prove)\nusing this:\n  Suc 0 \\<le> n\n  \\<lbrakk>?M = bernoulli_stream ?p; 0 \\<le> ?p; ?p \\<le> 1;\n   Suc 0 \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> emeasure ?M\n                     {w \\<in> space ?M. stake ?n w = stake ?n ?x} =\n                    ennreal (prod (prob_component ?p ?x) {0..?n - 1})\n  Suc ?n - 1 = ?n\n  ?n \\<le> ?n\n  M = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n    ennreal (prod (prob_component p x) {0..n})", "by fastforce"], ["proof (state)\nthis:\n  emeasure M S = ennreal (prod (prob_component p x) {0..n})\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "also"], ["proof (state)\nthis:\n  emeasure M S = ennreal (prod (prob_component p x) {0..n})\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "have \"... = (\\<Prod>i\\<in>{0..n-1}. prob_component p x i) * prob_component p x n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (prod (prob_component p x) {0..n}) =\n    ennreal (prod (prob_component p x) {0..n - 1} * prob_component p x n)", "using \\<open>n \\<ge> Suc 0\\<close>"], ["proof (prove)\nusing this:\n  Suc 0 \\<le> n\n\ngoal (1 subgoal):\n 1. ennreal (prod (prob_component p x) {0..n}) =\n    ennreal (prod (prob_component p x) {0..n - 1} * prob_component p x n)", "by (metis One_nat_def Suc_le_lessD Suc_pred prod.atLeast0_atMost_Suc)"], ["proof (state)\nthis:\n  ennreal (prod (prob_component p x) {0..n}) =\n  ennreal (prod (prob_component p x) {0..n - 1} * prob_component p x n)\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "also"], ["proof (state)\nthis:\n  ennreal (prod (prob_component p x) {0..n}) =\n  ennreal (prod (prob_component p x) {0..n - 1} * prob_component p x n)\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "have \"... = emeasure M precS * prob_component p x n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (prod (prob_component p x) {0..n - 1} * prob_component p x n) =\n    emeasure M precS * ennreal (prob_component p x n)", "using bernoulli_stream_pref_prob"], ["proof (prove)\nusing this:\n  \\<lbrakk>?M = bernoulli_stream ?p; 0 \\<le> ?p; ?p \\<le> 1;\n   Suc 0 \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> emeasure ?M\n                     {w \\<in> space ?M. stake ?n w = stake ?n ?x} =\n                    ennreal (prod (prob_component ?p ?x) {0..?n - 1})\n\ngoal (1 subgoal):\n 1. ennreal (prod (prob_component p x) {0..n - 1} * prob_component p x n) =\n    emeasure M precS * ennreal (prob_component p x n)", "unfolding precS_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?M = bernoulli_stream ?p; 0 \\<le> ?p; ?p \\<le> 1;\n   Suc 0 \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> emeasure ?M\n                     {w \\<in> space ?M. stake ?n w = stake ?n ?x} =\n                    ennreal (prod (prob_component ?p ?x) {0..?n - 1})\n\ngoal (1 subgoal):\n 1. ennreal (prod (prob_component p x) {0..n - 1} * prob_component p x n) =\n    emeasure M {w \\<in> space M. stake n w = stake n x} *\n    ennreal (prob_component p x n)", "using \\<open>Suc 0 \\<le> n\\<close> ennreal_mult'' assms prob_component_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?M = bernoulli_stream ?p; 0 \\<le> ?p; ?p \\<le> 1;\n   Suc 0 \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> emeasure ?M\n                     {w \\<in> space ?M. stake ?n w = stake ?n ?x} =\n                    ennreal (prod (prob_component ?p ?x) {0..?n - 1})\n  Suc 0 \\<le> n\n  0 \\<le> ?b \\<Longrightarrow> ennreal (?a * ?b) = ennreal ?a * ennreal ?b\n  M = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n  prob_component ?p ?w ?n = (if ?w !! ?n then ?p else 1 - ?p)\n\ngoal (1 subgoal):\n 1. ennreal (prod (prob_component p x) {0..n - 1} * prob_component p x n) =\n    emeasure M {w \\<in> space M. stake n w = stake n x} *\n    ennreal (prob_component p x n)", "by auto"], ["proof (state)\nthis:\n  ennreal (prod (prob_component p x) {0..n - 1} * prob_component p x n) =\n  emeasure M precS * ennreal (prob_component p x n)\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> 0 \\<Longrightarrow>\n    emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "finally"], ["proof (chain)\npicking this:\n  emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "show \"emeasure M S = emeasure M precS * prob_component p x n\""], ["proof (prove)\nusing this:\n  emeasure M S = emeasure M precS * ennreal (prob_component p x n)\n\ngoal (1 subgoal):\n 1. emeasure M S = emeasure M precS * ennreal (prob_component p x n)", "."], ["proof (state)\nthis:\n  emeasure M S = emeasure M precS * ennreal (prob_component p x n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  emeasure M S = emeasure M precS * ennreal (prob_component p x n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  bernoulli_stream_element_prob_rec':\n  fixes x\n  assumes \"M = bernoulli_stream p\"\nand \"0 \\<le> p\" and \"p \\<le> 1\"\n  shows \"\\<And> n. measure M {w\\<in> space M. (stake (Suc n) w = stake (Suc n) x)} =\n    (measure M {w\\<in> space M. (stake n w = stake n x)} * prob_component p x n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n       \\<P>(w in M. stake n w = stake n x) * prob_component p x n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n       \\<P>(w in M. stake n w = stake n x) * prob_component p x n", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n       \\<P>(w in M. stake n w = stake n x) * prob_component p x n", "have \"ennreal (measure M {w\\<in> space M. (stake (Suc n) w = stake (Suc n) x)}) =\n    emeasure M {w\\<in> space M. (stake (Suc n) w = stake (Suc n) x)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n    emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x}", "by (metis (no_types, lifting) assms(1) bernoulli_stream_def emeasure_eq_ennreal_measure\n        emeasure_space ennreal_top_neq_one neq_top_trans prob_space.emeasure_space_1\n        prob_space.prob_space_stream_space prob_space_measure_pmf)"], ["proof (state)\nthis:\n  ennreal \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n  emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n       \\<P>(w in M. stake n w = stake n x) * prob_component p x n", "also"], ["proof (state)\nthis:\n  ennreal \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n  emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n       \\<P>(w in M. stake n w = stake n x) * prob_component p x n", "have \"... = (emeasure M {w\\<in> space M. (stake n w = stake n x)} * prob_component p x n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n    emeasure M {w \\<in> space M. stake n w = stake n x} *\n    ennreal (prob_component p x n)", "using bernoulli_stream_element_prob_rec assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?M = bernoulli_stream ?p; 0 \\<le> ?p; ?p \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> emeasure ?M\n                     {w \\<in> space ?M.\n                      stake (Suc ?n) w = stake (Suc ?n) ?x} =\n                    emeasure ?M\n                     {w \\<in> space ?M. stake ?n w = stake ?n ?x} *\n                    ennreal (prob_component ?p ?x ?n)\n  M = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n    emeasure M {w \\<in> space M. stake n w = stake n x} *\n    ennreal (prob_component p x n)", "by simp"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n  emeasure M {w \\<in> space M. stake n w = stake n x} *\n  ennreal (prob_component p x n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n       \\<P>(w in M. stake n w = stake n x) * prob_component p x n", "also"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n  emeasure M {w \\<in> space M. stake n w = stake n x} *\n  ennreal (prob_component p x n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n       \\<P>(w in M. stake n w = stake n x) * prob_component p x n", "have \"... = (measure M {w\\<in> space M. (stake n w = stake n x)} * prob_component p x n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake n w = stake n x} *\n    ennreal (prob_component p x n) =\n    ennreal (\\<P>(w in M. stake n w = stake n x) * prob_component p x n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake n w = stake n x} *\n    ennreal (prob_component p x n) =\n    ennreal (\\<P>(w in M. stake n w = stake n x) * prob_component p x n)", "have \"prob_space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space M", "using assms(1) bernoulli_stream_def prob_space.prob_space_stream_space prob_space_measure_pmf"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  bernoulli_stream ?p = stream_space (measure_pmf (bernoulli_pmf ?p))\n  prob_space ?M \\<Longrightarrow> prob_space (stream_space ?M)\n  prob_space (measure_pmf ?p)\n\ngoal (1 subgoal):\n 1. prob_space M", "by auto"], ["proof (state)\nthis:\n  prob_space M\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake n w = stake n x} *\n    ennreal (prob_component p x n) =\n    ennreal (\\<P>(w in M. stake n w = stake n x) * prob_component p x n)", "then"], ["proof (chain)\npicking this:\n  prob_space M", "show ?thesis"], ["proof (prove)\nusing this:\n  prob_space M\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake n w = stake n x} *\n    ennreal (prob_component p x n) =\n    ennreal (\\<P>(w in M. stake n w = stake n x) * prob_component p x n)", "by (simp add: ennreal_mult'' finite_measure.emeasure_eq_measure mult.commute prob_space_def)"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. stake n w = stake n x} *\n  ennreal (prob_component p x n) =\n  ennreal (\\<P>(w in M. stake n w = stake n x) * prob_component p x n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. stake n w = stake n x} *\n  ennreal (prob_component p x n) =\n  ennreal (\\<P>(w in M. stake n w = stake n x) * prob_component p x n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n       \\<P>(w in M. stake n w = stake n x) * prob_component p x n", "finally"], ["proof (chain)\npicking this:\n  ennreal \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n  ennreal (\\<P>(w in M. stake n w = stake n x) * prob_component p x n)", "have \"ennreal (measure M {w\\<in> space M. (stake (Suc n) w = stake (Suc n) x)}) =\n    (measure M {w\\<in> space M. (stake n w = stake n x)} * prob_component p x n)\""], ["proof (prove)\nusing this:\n  ennreal \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n  ennreal (\\<P>(w in M. stake n w = stake n x) * prob_component p x n)\n\ngoal (1 subgoal):\n 1. ennreal \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n    ennreal (\\<P>(w in M. stake n w = stake n x) * prob_component p x n)", "."], ["proof (state)\nthis:\n  ennreal \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n  ennreal (\\<P>(w in M. stake n w = stake n x) * prob_component p x n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n       \\<P>(w in M. stake n w = stake n x) * prob_component p x n", "thus \"measure M {w\\<in> space M. (stake (Suc n) w = stake (Suc n) x)} =\n    (measure M {w\\<in> space M. (stake n w = stake n x)} * prob_component p x n)\""], ["proof (prove)\nusing this:\n  ennreal \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n  ennreal (\\<P>(w in M. stake n w = stake n x) * prob_component p x n)\n\ngoal (1 subgoal):\n 1. \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n    \\<P>(w in M. stake n w = stake n x) * prob_component p x n", "using assms prob_component_def"], ["proof (prove)\nusing this:\n  ennreal \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n  ennreal (\\<P>(w in M. stake n w = stake n x) * prob_component p x n)\n  M = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n  prob_component ?p ?w ?n = (if ?w !! ?n then ?p else 1 - ?p)\n\ngoal (1 subgoal):\n 1. \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n    \\<P>(w in M. stake n w = stake n x) * prob_component p x n", "by auto"], ["proof (state)\nthis:\n  \\<P>(w in M. stake (Suc n) w = stake (Suc n) x) =\n  \\<P>(w in M. stake n w = stake n x) * prob_component p x n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) bernoulli_stream_pseudo_prob_rec':\n  fixes x\n  assumes \"pseudo_proj_True n x = x\"\n  shows \"measure M (pseudo_proj_True (Suc n) -`{x}) =\n    (measure M (pseudo_proj_True n-`{x}) * prob_component p x n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True (Suc n) -` {x}) =\n    prob (pseudo_proj_True n -` {x}) * prob_component p x n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True (Suc n) -` {x}) =\n    prob (pseudo_proj_True n -` {x}) * prob_component p x n", "have \"pseudo_proj_True (Suc n) -`{x} = {w. (stake (Suc n) w = stake (Suc n) x)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {x} = {w. stake (Suc n) w = stake (Suc n) x}", "using pseudo_proj_True_preimage_stake\n    assms"], ["proof (prove)\nusing this:\n  ?w = pseudo_proj_True ?n ?w \\<Longrightarrow>\n  pseudo_proj_True ?n -` {?w} = {x. stake ?n x = stake ?n ?w}\n  pseudo_proj_True n x = x\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {x} = {w. stake (Suc n) w = stake (Suc n) x}", "by (metis pseudo_proj_True_Suc_proj)"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) -` {x} = {w. stake (Suc n) w = stake (Suc n) x}\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True (Suc n) -` {x}) =\n    prob (pseudo_proj_True n -` {x}) * prob_component p x n", "moreover"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) -` {x} = {w. stake (Suc n) w = stake (Suc n) x}\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True (Suc n) -` {x}) =\n    prob (pseudo_proj_True n -` {x}) * prob_component p x n", "have \"pseudo_proj_True n -`{x} = {w. (stake n w = stake n x)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {x} = {w. stake n w = stake n x}", "using pseudo_proj_True_preimage_stake\n    assms"], ["proof (prove)\nusing this:\n  ?w = pseudo_proj_True ?n ?w \\<Longrightarrow>\n  pseudo_proj_True ?n -` {?w} = {x. stake ?n x = stake ?n ?w}\n  pseudo_proj_True n x = x\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {x} = {w. stake n w = stake n x}", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {x} = {w. stake n w = stake n x}\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True (Suc n) -` {x}) =\n    prob (pseudo_proj_True n -` {x}) * prob_component p x n", "ultimately"], ["proof (chain)\npicking this:\n  pseudo_proj_True (Suc n) -` {x} = {w. stake (Suc n) w = stake (Suc n) x}\n  pseudo_proj_True n -` {x} = {w. stake n w = stake n x}", "show ?thesis"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) -` {x} = {w. stake (Suc n) w = stake (Suc n) x}\n  pseudo_proj_True n -` {x} = {w. stake n w = stake n x}\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True (Suc n) -` {x}) =\n    prob (pseudo_proj_True n -` {x}) * prob_component p x n", "using assms bernoulli_stream_element_prob_rec'"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) -` {x} = {w. stake (Suc n) w = stake (Suc n) x}\n  pseudo_proj_True n -` {x} = {w. stake n w = stake n x}\n  pseudo_proj_True n x = x\n  \\<lbrakk>?M = bernoulli_stream ?p; 0 \\<le> ?p; ?p \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> \\<P>(w in ?M. stake (Suc ?n) w = stake (Suc ?n) ?x) =\n                    \\<P>(w in ?M. stake ?n w = stake ?n ?x) *\n                    prob_component ?p ?x ?n\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True (Suc n) -` {x}) =\n    prob (pseudo_proj_True n -` {x}) * prob_component p x n", "by (simp add: bernoulli bernoulli_stream_space p_gt_0 p_lt_1)"], ["proof (state)\nthis:\n  prob (pseudo_proj_True (Suc n) -` {x}) =\n  prob (pseudo_proj_True n -` {x}) * prob_component p x n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) bernoulli_stream_pref_prob_pos:\n  fixes x\n  assumes \"0 < p\"\nand \"p < 1\"\n  shows \"emeasure M {w\\<in> space M. (stake n w = stake n x)} > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < emeasure M {w \\<in> space M. stake n w = stake n x}", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < emeasure M {w \\<in> space M. stake 0 w = stake 0 x}\n 2. \\<And>n.\n       0 < emeasure M\n            {w \\<in> space M. stake n w = stake n x} \\<Longrightarrow>\n       0 < emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x}", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. 0 < emeasure M {w \\<in> space M. stake 0 w = stake 0 x}\n 2. \\<And>n.\n       0 < emeasure M\n            {w \\<in> space M. stake n w = stake n x} \\<Longrightarrow>\n       0 < emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x}", "hence \"emeasure M {w\\<in> space M. (stake 0 w = stake 0 x)} = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake 0 w = stake 0 x} = 1", "using bernoulli_stream_npref_prob[of M p x]\n    bernoulli"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p \\<Longrightarrow>\n  emeasure M {w \\<in> space M. stake 0 w = stake 0 x} = 1\n  M = bernoulli_stream p\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake 0 w = stake 0 x} = 1", "by simp"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. stake 0 w = stake 0 x} = 1\n\ngoal (2 subgoals):\n 1. 0 < emeasure M {w \\<in> space M. stake 0 w = stake 0 x}\n 2. \\<And>n.\n       0 < emeasure M\n            {w \\<in> space M. stake n w = stake n x} \\<Longrightarrow>\n       0 < emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x}", "thus ?case"], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. stake 0 w = stake 0 x} = 1\n\ngoal (1 subgoal):\n 1. 0 < emeasure M {w \\<in> space M. stake 0 w = stake 0 x}", "by simp"], ["proof (state)\nthis:\n  0 < emeasure M {w \\<in> space M. stake 0 w = stake 0 x}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < emeasure M\n            {w \\<in> space M. stake n w = stake n x} \\<Longrightarrow>\n       0 < emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < emeasure M\n            {w \\<in> space M. stake n w = stake n x} \\<Longrightarrow>\n       0 < emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x}", "case (Suc n)"], ["proof (state)\nthis:\n  0 < emeasure M {w \\<in> space M. stake n w = stake n x}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < emeasure M\n            {w \\<in> space M. stake n w = stake n x} \\<Longrightarrow>\n       0 < emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x}", "have \"emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n    (emeasure M {w\\<in> space M. (stake n w = stake n x)} * prob_component p x n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n    emeasure M {w \\<in> space M. stake n w = stake n x} *\n    ennreal (prob_component p x n)", "using bernoulli_stream_element_prob_rec\n    bernoulli p_gt_0 p_lt_1"], ["proof (prove)\nusing this:\n  \\<lbrakk>?M = bernoulli_stream ?p; 0 \\<le> ?p; ?p \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> emeasure ?M\n                     {w \\<in> space ?M.\n                      stake (Suc ?n) w = stake (Suc ?n) ?x} =\n                    emeasure ?M\n                     {w \\<in> space ?M. stake ?n w = stake ?n ?x} *\n                    ennreal (prob_component ?p ?x ?n)\n  M = bernoulli_stream p\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n    emeasure M {w \\<in> space M. stake n w = stake n x} *\n    ennreal (prob_component p x n)", "by simp"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n  emeasure M {w \\<in> space M. stake n w = stake n x} *\n  ennreal (prob_component p x n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < emeasure M\n            {w \\<in> space M. stake n w = stake n x} \\<Longrightarrow>\n       0 < emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x}", "thus ?case"], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n  emeasure M {w \\<in> space M. stake n w = stake n x} *\n  ennreal (prob_component p x n)\n\ngoal (1 subgoal):\n 1. 0 < emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x}", "using Suc"], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n  emeasure M {w \\<in> space M. stake n w = stake n x} *\n  ennreal (prob_component p x n)\n  0 < emeasure M {w \\<in> space M. stake n w = stake n x}\n\ngoal (1 subgoal):\n 1. 0 < emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x}", "using assms p_gt_0 p_lt_1 prob_component_def"], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n  emeasure M {w \\<in> space M. stake n w = stake n x} *\n  ennreal (prob_component p x n)\n  0 < emeasure M {w \\<in> space M. stake n w = stake n x}\n  0 < p\n  p < 1\n  0 \\<le> p\n  p \\<le> 1\n  prob_component ?p ?w ?n = (if ?w !! ?n then ?p else 1 - ?p)\n\ngoal (1 subgoal):\n 1. 0 < emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x}", "by (simp add: ennreal_zero_less_mult_iff)"], ["proof (state)\nthis:\n  0 < emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) bernoulli_stream_pref_prob_neq_zero:\n  fixes x\nassumes \"0 < p\"\nand \"p < 1\"\n  shows \"emeasure M {w\\<in> space M. (stake n w = stake n x)} \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake n w = stake n x} \\<noteq> 0", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. emeasure M {w \\<in> space M. stake 0 w = stake 0 x} \\<noteq> 0\n 2. \\<And>n.\n       emeasure M {w \\<in> space M. stake n w = stake n x} \\<noteq>\n       0 \\<Longrightarrow>\n       emeasure M\n        {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} \\<noteq>\n       0", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. emeasure M {w \\<in> space M. stake 0 w = stake 0 x} \\<noteq> 0\n 2. \\<And>n.\n       emeasure M {w \\<in> space M. stake n w = stake n x} \\<noteq>\n       0 \\<Longrightarrow>\n       emeasure M\n        {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} \\<noteq>\n       0", "hence \"emeasure M {w\\<in> space M. (stake 0 w = stake 0 x)} = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake 0 w = stake 0 x} = 1", "using bernoulli_stream_npref_prob[of M p x]\n    bernoulli"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p \\<Longrightarrow>\n  emeasure M {w \\<in> space M. stake 0 w = stake 0 x} = 1\n  M = bernoulli_stream p\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake 0 w = stake 0 x} = 1", "by simp"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. stake 0 w = stake 0 x} = 1\n\ngoal (2 subgoals):\n 1. emeasure M {w \\<in> space M. stake 0 w = stake 0 x} \\<noteq> 0\n 2. \\<And>n.\n       emeasure M {w \\<in> space M. stake n w = stake n x} \\<noteq>\n       0 \\<Longrightarrow>\n       emeasure M\n        {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} \\<noteq>\n       0", "thus ?case"], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. stake 0 w = stake 0 x} = 1\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake 0 w = stake 0 x} \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. stake 0 w = stake 0 x} \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       emeasure M {w \\<in> space M. stake n w = stake n x} \\<noteq>\n       0 \\<Longrightarrow>\n       emeasure M\n        {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} \\<noteq>\n       0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       emeasure M {w \\<in> space M. stake n w = stake n x} \\<noteq>\n       0 \\<Longrightarrow>\n       emeasure M\n        {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} \\<noteq>\n       0", "case (Suc n)"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. stake n w = stake n x} \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       emeasure M {w \\<in> space M. stake n w = stake n x} \\<noteq>\n       0 \\<Longrightarrow>\n       emeasure M\n        {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} \\<noteq>\n       0", "have \"emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n    (emeasure M {w\\<in> space M. (stake n w = stake n x)} * prob_component p x n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n    emeasure M {w \\<in> space M. stake n w = stake n x} *\n    ennreal (prob_component p x n)", "using bernoulli_stream_element_prob_rec\n    bernoulli assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?M = bernoulli_stream ?p; 0 \\<le> ?p; ?p \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> emeasure ?M\n                     {w \\<in> space ?M.\n                      stake (Suc ?n) w = stake (Suc ?n) ?x} =\n                    emeasure ?M\n                     {w \\<in> space ?M. stake ?n w = stake ?n ?x} *\n                    ennreal (prob_component ?p ?x ?n)\n  M = bernoulli_stream p\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n    emeasure M {w \\<in> space M. stake n w = stake n x} *\n    ennreal (prob_component p x n)", "by simp"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n  emeasure M {w \\<in> space M. stake n w = stake n x} *\n  ennreal (prob_component p x n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       emeasure M {w \\<in> space M. stake n w = stake n x} \\<noteq>\n       0 \\<Longrightarrow>\n       emeasure M\n        {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} \\<noteq>\n       0", "thus ?case"], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n  emeasure M {w \\<in> space M. stake n w = stake n x} *\n  ennreal (prob_component p x n)\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} \\<noteq>\n    0", "using Suc"], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n  emeasure M {w \\<in> space M. stake n w = stake n x} *\n  ennreal (prob_component p x n)\n  emeasure M {w \\<in> space M. stake n w = stake n x} \\<noteq> 0\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} \\<noteq>\n    0", "using assms p_gt_0 p_lt_1 prob_component_def"], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} =\n  emeasure M {w \\<in> space M. stake n w = stake n x} *\n  ennreal (prob_component p x n)\n  emeasure M {w \\<in> space M. stake n w = stake n x} \\<noteq> 0\n  0 < p\n  p < 1\n  0 \\<le> p\n  p \\<le> 1\n  prob_component ?p ?w ?n = (if ?w !! ?n then ?p else 1 - ?p)\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} \\<noteq>\n    0", "by auto"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. stake (Suc n) w = stake (Suc n) x} \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_element_prob_pref:\n  assumes \"w\\<in> range (pseudo_proj_True n)\"\n  shows \"emeasure M {y\\<in> space M. \\<exists>x \\<in> (pseudo_proj_True n -`{w}). y = c ## x} =\n    prob_component p (c##w) 0 * emeasure M ((pseudo_proj_True n) -`{w} \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "have \"pseudo_proj_True n w = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = w", "using assms pseudo_proj_True_def pseudo_proj_True_stake"], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True n)\n  pseudo_proj_True ?n = (\\<lambda>w. stake ?n w @- sconst True)\n  stake ?n (pseudo_proj_True ?n ?w) = stake ?n ?w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = w", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True n w = w\n\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "have \"pseudo_proj_True (Suc n) (c##w) = c##w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) (c ## w) = c ## w", "using assms\n          pseudo_proj_True_def pseudo_proj_True_stake"], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True n)\n  pseudo_proj_True ?n = (\\<lambda>w. stake ?n w @- sconst True)\n  stake ?n (pseudo_proj_True ?n ?w) = stake ?n ?w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) (c ## w) = c ## w", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) (c ## w) = c ## w\n\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "have \"{y\\<in> space M. \\<exists>x \\<in> (pseudo_proj_True n -`{w}). y = c ## x} = pseudo_proj_True (Suc n) -`{c##w} \\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {y \\<in> space M.\n     \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {y \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}\n    \\<subseteq> pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M\n 2. pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M\n    \\<subseteq> {y \\<in> space M.\n                 \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}", "show \"{y\\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} \\<subseteq> pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {y \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}\n    \\<subseteq> pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {w}.\n                   y = c ## x} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {w}.\n                   y = c ## x} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M", "assume \"y\\<in> {y\\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}\""], ["proof (state)\nthis:\n  y \\<in> {y \\<in> space M.\n           \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {w}.\n                   y = c ## x} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M", "hence \"y\\<in> space M\" and \"\\<exists>x \\<in> pseudo_proj_True n -` {w}. y = c ## x\""], ["proof (prove)\nusing this:\n  y \\<in> {y \\<in> space M.\n           \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}\n\ngoal (1 subgoal):\n 1. y \\<in> space M &&& \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x", "by auto"], ["proof (state)\nthis:\n  y \\<in> space M\n  \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {w}.\n                   y = c ## x} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M", "from this"], ["proof (chain)\npicking this:\n  y \\<in> space M\n  \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x", "obtain x where \"x\\<in> pseudo_proj_True n -` {w}\" and \"y = c## x\""], ["proof (prove)\nusing this:\n  y \\<in> space M\n  \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> pseudo_proj_True n -` {w}; y = c ## x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> pseudo_proj_True n -` {w}\n  y = c ## x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {w}.\n                   y = c ## x} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M", "have \"pseudo_proj_True (Suc n) y = c##w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) y = c ## w", "using \\<open>x\\<in> pseudo_proj_True n -` {w}\\<close> \\<open>y = c## x\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> pseudo_proj_True n -` {w}\n  y = c ## x\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) y = c ## w", "unfolding pseudo_proj_True_def"], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>w. stake n w @- sconst True) -` {w}\n  y = c ## x\n\ngoal (1 subgoal):\n 1. stake (Suc n) y @- sconst True = c ## w", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) y = c ## w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {w}.\n                   y = c ## x} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M", "thus \"y \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M\""], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) y = c ## w\n\ngoal (1 subgoal):\n 1. y \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M", "using \\<open>y\\<in> space M\\<close>"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) y = c ## w\n  y \\<in> space M\n\ngoal (1 subgoal):\n 1. y \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M", "by auto"], ["proof (state)\nthis:\n  y \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {y \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}\n  \\<subseteq> pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M\n    \\<subseteq> {y \\<in> space M.\n                 \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}", "show \"pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M \\<subseteq> {y\\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M\n    \\<subseteq> {y \\<in> space M.\n                 \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {y \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {y \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}", "assume \"y \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M\""], ["proof (state)\nthis:\n  y \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {y \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}", "hence \"pseudo_proj_True (Suc n) y = c##w\" and \"y\\<in> space M\""], ["proof (prove)\nusing this:\n  y \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) y = c ## w &&& y \\<in> space M", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) y = c ## w\n  y \\<in> space M\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {y \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}", "have \"pseudo_proj_True n (stl y) = pseudo_proj_True n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n (stl y) = pseudo_proj_True n w", "proof (rule pseudo_proj_True_snth')"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. Suc i \\<le> n \\<Longrightarrow> stl y !! i = w !! i", "have \"pseudo_proj_True (Suc n) (c##w) = c##w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) (c ## w) = c ## w", "using \\<open>pseudo_proj_True (Suc n) (c##w) = c##w\\<close>"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) (c ## w) = c ## w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) (c ## w) = c ## w", "."], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) (c ## w) = c ## w\n\ngoal (1 subgoal):\n 1. \\<And>i. Suc i \\<le> n \\<Longrightarrow> stl y !! i = w !! i", "also"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) (c ## w) = c ## w\n\ngoal (1 subgoal):\n 1. \\<And>i. Suc i \\<le> n \\<Longrightarrow> stl y !! i = w !! i", "have \"... = pseudo_proj_True (Suc n) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c ## w = pseudo_proj_True (Suc n) y", "using \\<open>pseudo_proj_True (Suc n) y = c##w\\<close>"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) y = c ## w\n\ngoal (1 subgoal):\n 1. c ## w = pseudo_proj_True (Suc n) y", "by simp"], ["proof (state)\nthis:\n  c ## w = pseudo_proj_True (Suc n) y\n\ngoal (1 subgoal):\n 1. \\<And>i. Suc i \\<le> n \\<Longrightarrow> stl y !! i = w !! i", "finally"], ["proof (chain)\npicking this:\n  pseudo_proj_True (Suc n) (c ## w) = pseudo_proj_True (Suc n) y", "have \"pseudo_proj_True (Suc n) (c##w) = pseudo_proj_True (Suc n) y\""], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) (c ## w) = pseudo_proj_True (Suc n) y\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) (c ## w) = pseudo_proj_True (Suc n) y", "."], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) (c ## w) = pseudo_proj_True (Suc n) y\n\ngoal (1 subgoal):\n 1. \\<And>i. Suc i \\<le> n \\<Longrightarrow> stl y !! i = w !! i", "hence \"\\<And>i. Suc i \\<le> Suc n \\<Longrightarrow> (c##w)!! i = y!! i\""], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) (c ## w) = pseudo_proj_True (Suc n) y\n\ngoal (1 subgoal):\n 1. \\<And>i. Suc i \\<le> Suc n \\<Longrightarrow> (c ## w) !! i = y !! i", "by (simp add: pseudo_proj_True_snth)"], ["proof (state)\nthis:\n  Suc ?i1 \\<le> Suc n \\<Longrightarrow> (c ## w) !! ?i1 = y !! ?i1\n\ngoal (1 subgoal):\n 1. \\<And>i. Suc i \\<le> n \\<Longrightarrow> stl y !! i = w !! i", "thus \"\\<And>i. Suc i \\<le> n \\<Longrightarrow> stl y !! i = w !! i\""], ["proof (prove)\nusing this:\n  Suc ?i1 \\<le> Suc n \\<Longrightarrow> (c ## w) !! ?i1 = y !! ?i1\n\ngoal (1 subgoal):\n 1. \\<And>i. Suc i \\<le> n \\<Longrightarrow> stl y !! i = w !! i", "by fastforce"], ["proof (state)\nthis:\n  Suc ?i1 \\<le> n \\<Longrightarrow> stl y !! ?i1 = w !! ?i1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_True n (stl y) = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {y \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}", "also"], ["proof (state)\nthis:\n  pseudo_proj_True n (stl y) = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {y \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}", "have \"... = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = w", "using assms pseudo_proj_True_def pseudo_proj_True_stake"], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True n)\n  pseudo_proj_True ?n = (\\<lambda>w. stake ?n w @- sconst True)\n  stake ?n (pseudo_proj_True ?n ?w) = stake ?n ?w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = w", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True n w = w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {y \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}", "finally"], ["proof (chain)\npicking this:\n  pseudo_proj_True n (stl y) = w", "have \"pseudo_proj_True n (stl y) = w\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n (stl y) = w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n (stl y) = w", "."], ["proof (state)\nthis:\n  pseudo_proj_True n (stl y) = w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {y \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}", "hence \"stl y \\<in> (pseudo_proj_True n) -` {w}\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n (stl y) = w\n\ngoal (1 subgoal):\n 1. stl y \\<in> pseudo_proj_True n -` {w}", "by simp"], ["proof (state)\nthis:\n  stl y \\<in> pseudo_proj_True n -` {w}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {y \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}", "moreover"], ["proof (state)\nthis:\n  stl y \\<in> pseudo_proj_True n -` {w}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {y \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}", "have \"y = c##(stl y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y = c ## stl y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y = c ## stl y", "have \"stake (Suc n) y = stake (Suc n) (pseudo_proj_True (Suc n) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (Suc n) y = stake (Suc n) (pseudo_proj_True (Suc n) y)", "unfolding pseudo_proj_True_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (Suc n) y = stake (Suc n) (stake (Suc n) y @- sconst True)", "using pseudo_proj_True_def pseudo_proj_True_stake"], ["proof (prove)\nusing this:\n  pseudo_proj_True ?n = (\\<lambda>w. stake ?n w @- sconst True)\n  stake ?n (pseudo_proj_True ?n ?w) = stake ?n ?w\n\ngoal (1 subgoal):\n 1. stake (Suc n) y = stake (Suc n) (stake (Suc n) y @- sconst True)", "by auto"], ["proof (state)\nthis:\n  stake (Suc n) y = stake (Suc n) (pseudo_proj_True (Suc n) y)\n\ngoal (1 subgoal):\n 1. y = c ## stl y", "hence \"shd y = shd (pseudo_proj_True (Suc n) y)\""], ["proof (prove)\nusing this:\n  stake (Suc n) y = stake (Suc n) (pseudo_proj_True (Suc n) y)\n\ngoal (1 subgoal):\n 1. shd y = shd (pseudo_proj_True (Suc n) y)", "by simp"], ["proof (state)\nthis:\n  shd y = shd (pseudo_proj_True (Suc n) y)\n\ngoal (1 subgoal):\n 1. y = c ## stl y", "also"], ["proof (state)\nthis:\n  shd y = shd (pseudo_proj_True (Suc n) y)\n\ngoal (1 subgoal):\n 1. y = c ## stl y", "have \"... = shd (c##w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. shd (pseudo_proj_True (Suc n) y) = shd (c ## w)", "using \\<open>pseudo_proj_True (Suc n) y = c##w\\<close>"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) y = c ## w\n\ngoal (1 subgoal):\n 1. shd (pseudo_proj_True (Suc n) y) = shd (c ## w)", "by simp"], ["proof (state)\nthis:\n  shd (pseudo_proj_True (Suc n) y) = shd (c ## w)\n\ngoal (1 subgoal):\n 1. y = c ## stl y", "also"], ["proof (state)\nthis:\n  shd (pseudo_proj_True (Suc n) y) = shd (c ## w)\n\ngoal (1 subgoal):\n 1. y = c ## stl y", "have \"... = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. shd (c ## w) = c", "by simp"], ["proof (state)\nthis:\n  shd (c ## w) = c\n\ngoal (1 subgoal):\n 1. y = c ## stl y", "finally"], ["proof (chain)\npicking this:\n  shd y = c", "have \"shd y = c\""], ["proof (prove)\nusing this:\n  shd y = c\n\ngoal (1 subgoal):\n 1. shd y = c", "."], ["proof (state)\nthis:\n  shd y = c\n\ngoal (1 subgoal):\n 1. y = c ## stl y", "thus ?thesis"], ["proof (prove)\nusing this:\n  shd y = c\n\ngoal (1 subgoal):\n 1. y = c ## stl y", "by (simp add: stream_eq_Stream_iff)"], ["proof (state)\nthis:\n  y = c ## stl y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y = c ## stl y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {c ## w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {y \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}", "ultimately"], ["proof (chain)\npicking this:\n  stl y \\<in> pseudo_proj_True n -` {w}\n  y = c ## stl y", "show \"y\\<in> {y\\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}\""], ["proof (prove)\nusing this:\n  stl y \\<in> pseudo_proj_True n -` {w}\n  y = c ## stl y\n\ngoal (1 subgoal):\n 1. y \\<in> {y \\<in> space M.\n             \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}", "using \\<open>y\\<in> space M\\<close>"], ["proof (prove)\nusing this:\n  stl y \\<in> pseudo_proj_True n -` {w}\n  y = c ## stl y\n  y \\<in> space M\n\ngoal (1 subgoal):\n 1. y \\<in> {y \\<in> space M.\n             \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}", "by auto"], ["proof (state)\nthis:\n  y \\<in> {y \\<in> space M.\n           \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M\n  \\<subseteq> {y \\<in> space M.\n               \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {y \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n  pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M\n\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "hence \"emeasure M {y\\<in> space M. \\<exists>x \\<in> (pseudo_proj_True n -`{w}). y = c ## x} =\n    emeasure M (pseudo_proj_True (Suc n) -`{c##w}\\<inter> space M)\""], ["proof (prove)\nusing this:\n  {y \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n  pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M\n\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    emeasure M (pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M)", "by simp"], ["proof (state)\nthis:\n  emeasure M\n   {y \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n  emeasure M (pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "also"], ["proof (state)\nthis:\n  emeasure M\n   {y \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n  emeasure M (pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "have \"... = emeasure M {y\\<in> space M. stake (Suc n) y = stake (Suc n) (c##w)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M) =\n    emeasure M {y \\<in> space M. stake (Suc n) y = stake (Suc n) (c ## w)}", "using \\<open>pseudo_proj_True (Suc n) (c##w) = c##w\\<close>"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) (c ## w) = c ## w\n\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M) =\n    emeasure M {y \\<in> space M. stake (Suc n) y = stake (Suc n) (c ## w)}", "by (simp add:pseudo_proj_True_preimage_stake_space)"], ["proof (state)\nthis:\n  emeasure M (pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M) =\n  emeasure M {y \\<in> space M. stake (Suc n) y = stake (Suc n) (c ## w)}\n\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "also"], ["proof (state)\nthis:\n  emeasure M (pseudo_proj_True (Suc n) -` {c ## w} \\<inter> space M) =\n  emeasure M {y \\<in> space M. stake (Suc n) y = stake (Suc n) (c ## w)}\n\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "have \"... = (\\<Prod>i\\<in>{0..n}. prob_component p (c##w) i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M {y \\<in> space M. stake (Suc n) y = stake (Suc n) (c ## w)} =\n    ennreal (prod (prob_component p (c ## w)) {0..n})", "using bernoulli_stream_pref_prob[of M p \"Suc n\" \"c##w\"] bernoulli p_lt_1 p_gt_0 diff_Suc_1 le_refl"], ["proof (prove)\nusing this:\n  \\<lbrakk>M = bernoulli_stream p; 0 \\<le> p; p \\<le> 1;\n   Suc 0 \\<le> Suc n\\<rbrakk>\n  \\<Longrightarrow> emeasure M\n                     {wa \\<in> space M.\n                      stake (Suc n) wa = stake (Suc n) (c ## w)} =\n                    ennreal\n                     (prod (prob_component p (c ## w)) {0..Suc n - 1})\n  M = bernoulli_stream p\n  p \\<le> 1\n  0 \\<le> p\n  Suc ?n - 1 = ?n\n  ?n \\<le> ?n\n\ngoal (1 subgoal):\n 1. emeasure M {y \\<in> space M. stake (Suc n) y = stake (Suc n) (c ## w)} =\n    ennreal (prod (prob_component p (c ## w)) {0..n})", "by simp"], ["proof (state)\nthis:\n  emeasure M {y \\<in> space M. stake (Suc n) y = stake (Suc n) (c ## w)} =\n  ennreal (prod (prob_component p (c ## w)) {0..n})\n\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "also"], ["proof (state)\nthis:\n  emeasure M {y \\<in> space M. stake (Suc n) y = stake (Suc n) (c ## w)} =\n  ennreal (prod (prob_component p (c ## w)) {0..n})\n\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "have \"... = prob_component p (c##w) 0 * (\\<Prod>i\\<in>{1..n}. prob_component p (c##w) i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (prod (prob_component p (c ## w)) {0..n}) =\n    ennreal\n     (prob_component p (c ## w) 0 * prod (prob_component p (c ## w)) {1..n})", "by (simp add: decompose_init_prod)"], ["proof (state)\nthis:\n  ennreal (prod (prob_component p (c ## w)) {0..n}) =\n  ennreal\n   (prob_component p (c ## w) 0 * prod (prob_component p (c ## w)) {1..n})\n\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "also"], ["proof (state)\nthis:\n  ennreal (prod (prob_component p (c ## w)) {0..n}) =\n  ennreal\n   (prob_component p (c ## w) 0 * prod (prob_component p (c ## w)) {1..n})\n\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "have \"... = prob_component p (c##w) 0 * (\\<Prod>i\\<in>{1..< Suc n}. prob_component p (c##w) i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal\n     (prob_component p (c ## w) 0 *\n      prod (prob_component p (c ## w)) {1..n}) =\n    ennreal\n     (prob_component p (c ## w) 0 *\n      prod (prob_component p (c ## w)) {1..<Suc n})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ennreal\n     (prob_component p (c ## w) 0 *\n      prod (prob_component p (c ## w)) {1..n}) =\n    ennreal\n     (prob_component p (c ## w) 0 *\n      prod (prob_component p (c ## w)) {1..<Suc n})", "have \"(\\<Prod>i\\<in>{1..n}. prob_component p (c##w) i) = (\\<Prod>i\\<in>{1..< Suc n}. prob_component p (c##w) i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod (prob_component p (c ## w)) {1..n} =\n    prod (prob_component p (c ## w)) {1..<Suc n}", "proof (rule prod.cong)"], ["proof (state)\ngoal (2 subgoals):\n 1. {1..n} = {1..<Suc n}\n 2. \\<And>x.\n       x \\<in> {1..<Suc n} \\<Longrightarrow>\n       prob_component p (c ## w) x = prob_component p (c ## w) x", "show \"{1..n} = {1..<Suc n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {1..n} = {1..<Suc n}", "by auto"], ["proof (state)\nthis:\n  {1..n} = {1..<Suc n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {1..<Suc n} \\<Longrightarrow>\n       prob_component p (c ## w) x = prob_component p (c ## w) x", "show \"\\<And>x. x \\<in> {1..<Suc n} \\<Longrightarrow> prob_component p (c ## w) x = prob_component p (c ## w) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {1..<Suc n} \\<Longrightarrow>\n       prob_component p (c ## w) x = prob_component p (c ## w) x", "by simp"], ["proof (state)\nthis:\n  ?x1 \\<in> {1..<Suc n} \\<Longrightarrow>\n  prob_component p (c ## w) ?x1 = prob_component p (c ## w) ?x1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prod (prob_component p (c ## w)) {1..n} =\n  prod (prob_component p (c ## w)) {1..<Suc n}\n\ngoal (1 subgoal):\n 1. ennreal\n     (prob_component p (c ## w) 0 *\n      prod (prob_component p (c ## w)) {1..n}) =\n    ennreal\n     (prob_component p (c ## w) 0 *\n      prod (prob_component p (c ## w)) {1..<Suc n})", "thus ?thesis"], ["proof (prove)\nusing this:\n  prod (prob_component p (c ## w)) {1..n} =\n  prod (prob_component p (c ## w)) {1..<Suc n}\n\ngoal (1 subgoal):\n 1. ennreal\n     (prob_component p (c ## w) 0 *\n      prod (prob_component p (c ## w)) {1..n}) =\n    ennreal\n     (prob_component p (c ## w) 0 *\n      prod (prob_component p (c ## w)) {1..<Suc n})", "by simp"], ["proof (state)\nthis:\n  ennreal\n   (prob_component p (c ## w) 0 * prod (prob_component p (c ## w)) {1..n}) =\n  ennreal\n   (prob_component p (c ## w) 0 *\n    prod (prob_component p (c ## w)) {1..<Suc n})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ennreal\n   (prob_component p (c ## w) 0 * prod (prob_component p (c ## w)) {1..n}) =\n  ennreal\n   (prob_component p (c ## w) 0 *\n    prod (prob_component p (c ## w)) {1..<Suc n})\n\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "also"], ["proof (state)\nthis:\n  ennreal\n   (prob_component p (c ## w) 0 * prod (prob_component p (c ## w)) {1..n}) =\n  ennreal\n   (prob_component p (c ## w) 0 *\n    prod (prob_component p (c ## w)) {1..<Suc n})\n\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "have \"... = prob_component p (c##w) 0 * (\\<Prod>i\\<in>{0..< n}. prob_component p w i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal\n     (prob_component p (c ## w) 0 *\n      prod (prob_component p (c ## w)) {1..<Suc n}) =\n    ennreal\n     (prob_component p (c ## w) 0 * prod (prob_component p w) {0..<n})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ennreal\n     (prob_component p (c ## w) 0 *\n      prod (prob_component p (c ## w)) {1..<Suc n}) =\n    ennreal\n     (prob_component p (c ## w) 0 * prod (prob_component p w) {0..<n})", "have \"(\\<Prod>i\\<in>{1..< Suc n}. prob_component p (c##w) i) = (\\<Prod>i\\<in>{0..< n}. prob_component p w i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod (prob_component p (c ## w)) {1..<Suc n} =\n    prod (prob_component p w) {0..<n}", "proof (rule prod.reindex_cong)"], ["proof (state)\ngoal (3 subgoals):\n 1. inj_on ?l {0..<n}\n 2. {1..<Suc n} = ?l ` {0..<n}\n 3. \\<And>x.\n       x \\<in> {0..<n} \\<Longrightarrow>\n       prob_component p (c ## w) (?l x) = prob_component p w x", "show \"inj_on (\\<lambda>n. Suc n) {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on Suc {0..<n}", "by simp"], ["proof (state)\nthis:\n  inj_on Suc {0..<n}\n\ngoal (2 subgoals):\n 1. {1..<Suc n} = Suc ` {0..<n}\n 2. \\<And>x.\n       x \\<in> {0..<n} \\<Longrightarrow>\n       prob_component p (c ## w) (Suc x) = prob_component p w x", "show \"{1..< Suc n} = Suc ` {0..< n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {1..<Suc n} = Suc ` {0..<n}", "by auto"], ["proof (state)\nthis:\n  {1..<Suc n} = Suc ` {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..<n} \\<Longrightarrow>\n       prob_component p (c ## w) (Suc x) = prob_component p w x", "show \"\\<And>x. x \\<in> {0..< n} \\<Longrightarrow> prob_component p (c ## w) (Suc x) = prob_component p w x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..<n} \\<Longrightarrow>\n       prob_component p (c ## w) (Suc x) = prob_component p w x", "by (simp add: prob_component_def)"], ["proof (state)\nthis:\n  ?x1 \\<in> {0..<n} \\<Longrightarrow>\n  prob_component p (c ## w) (Suc ?x1) = prob_component p w ?x1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prod (prob_component p (c ## w)) {1..<Suc n} =\n  prod (prob_component p w) {0..<n}\n\ngoal (1 subgoal):\n 1. ennreal\n     (prob_component p (c ## w) 0 *\n      prod (prob_component p (c ## w)) {1..<Suc n}) =\n    ennreal\n     (prob_component p (c ## w) 0 * prod (prob_component p w) {0..<n})", "thus ?thesis"], ["proof (prove)\nusing this:\n  prod (prob_component p (c ## w)) {1..<Suc n} =\n  prod (prob_component p w) {0..<n}\n\ngoal (1 subgoal):\n 1. ennreal\n     (prob_component p (c ## w) 0 *\n      prod (prob_component p (c ## w)) {1..<Suc n}) =\n    ennreal\n     (prob_component p (c ## w) 0 * prod (prob_component p w) {0..<n})", "by simp"], ["proof (state)\nthis:\n  ennreal\n   (prob_component p (c ## w) 0 *\n    prod (prob_component p (c ## w)) {1..<Suc n}) =\n  ennreal (prob_component p (c ## w) 0 * prod (prob_component p w) {0..<n})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ennreal\n   (prob_component p (c ## w) 0 *\n    prod (prob_component p (c ## w)) {1..<Suc n}) =\n  ennreal (prob_component p (c ## w) 0 * prod (prob_component p w) {0..<n})\n\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "also"], ["proof (state)\nthis:\n  ennreal\n   (prob_component p (c ## w) 0 *\n    prod (prob_component p (c ## w)) {1..<Suc n}) =\n  ennreal (prob_component p (c ## w) 0 * prod (prob_component p w) {0..<n})\n\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "have \"... = prob_component p (c##w) 0 * emeasure M {y \\<in> space M. stake n y = stake n w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal\n     (prob_component p (c ## w) 0 * prod (prob_component p w) {0..<n}) =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M {y \\<in> space M. stake n y = stake n w}", "using bernoulli_stream_pref_prob'[symmetric, of M p w n] ennreal_mult' p_gt_0 p_lt_1 bernoulli\n    prob_component_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>M = bernoulli_stream p; p \\<le> 1; 0 \\<le> p\\<rbrakk>\n  \\<Longrightarrow> ennreal (prod (prob_component p w) {0..<n}) =\n                    emeasure M {wa \\<in> space M. stake n wa = stake n w}\n  0 \\<le> ?a \\<Longrightarrow> ennreal (?a * ?b) = ennreal ?a * ennreal ?b\n  0 \\<le> p\n  p \\<le> 1\n  M = bernoulli_stream p\n  prob_component ?p ?w ?n = (if ?w !! ?n then ?p else 1 - ?p)\n\ngoal (1 subgoal):\n 1. ennreal\n     (prob_component p (c ## w) 0 * prod (prob_component p w) {0..<n}) =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M {y \\<in> space M. stake n y = stake n w}", "by auto"], ["proof (state)\nthis:\n  ennreal\n   (prob_component p (c ## w) 0 * prod (prob_component p w) {0..<n}) =\n  ennreal (prob_component p (c ## w) 0) *\n  emeasure M {y \\<in> space M. stake n y = stake n w}\n\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "also"], ["proof (state)\nthis:\n  ennreal\n   (prob_component p (c ## w) 0 * prod (prob_component p w) {0..<n}) =\n  ennreal (prob_component p (c ## w) 0) *\n  emeasure M {y \\<in> space M. stake n y = stake n w}\n\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "have \"... = prob_component p (c##w) 0 * emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (prob_component p (c ## w) 0) *\n    emeasure M {y \\<in> space M. stake n y = stake n w} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "using pseudo_proj_True_preimage_stake_space \\<open>pseudo_proj_True n w = w\\<close>"], ["proof (prove)\nusing this:\n  ?w = pseudo_proj_True ?n ?w \\<Longrightarrow>\n  pseudo_proj_True ?n -` {?w} \\<inter> space M =\n  {x \\<in> space M. stake ?n x = stake ?n ?w}\n  pseudo_proj_True n w = w\n\ngoal (1 subgoal):\n 1. ennreal (prob_component p (c ## w) 0) *\n    emeasure M {y \\<in> space M. stake n y = stake n w} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "by (simp add: pseudo_proj_True_preimage_stake_space)"], ["proof (state)\nthis:\n  ennreal (prob_component p (c ## w) 0) *\n  emeasure M {y \\<in> space M. stake n y = stake n w} =\n  ennreal (prob_component p (c ## w) 0) *\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "finally"], ["proof (chain)\npicking this:\n  emeasure M\n   {y \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n  ennreal (prob_component p (c ## w) 0) *\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "show ?thesis"], ["proof (prove)\nusing this:\n  emeasure M\n   {y \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n  ennreal (prob_component p (c ## w) 0) *\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. emeasure M\n     {y \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n    ennreal (prob_component p (c ## w) 0) *\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)", "."], ["proof (state)\nthis:\n  emeasure M\n   {y \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. y = c ## x} =\n  ennreal (prob_component p (c ## w) 0) *\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Filtration equivalence for the natural filtration\\<close>"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_null_set:\n  assumes \"A\\<in> sets (nat_filtration n)\"\nand \"0 < p\"\nand \"p  < 1\"\nand \"emeasure M A = 0\"\nshows \"A = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = {}", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow> False", "assume \"A\\<noteq> {}\""], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow> False", "hence \"\\<exists>w. w\\<in> A\""], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>w. w \\<in> A", "by auto"], ["proof (state)\nthis:\n  \\<exists>w. w \\<in> A\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow> False", "from this"], ["proof (chain)\npicking this:\n  \\<exists>w. w \\<in> A", "obtain w where \"w \\<in> A\""], ["proof (prove)\nusing this:\n  \\<exists>w. w \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>w. w \\<in> A \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  w \\<in> A\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow> False", "hence inc: \"pseudo_proj_True n -` {pseudo_proj_True n w} \\<subseteq> A\""], ["proof (prove)\nusing this:\n  w \\<in> A\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {pseudo_proj_True n w} \\<subseteq> A", "using assms"], ["proof (prove)\nusing this:\n  w \\<in> A\n  A \\<in> sets (nat_filtration n)\n  0 < p\n  p < 1\n  emeasure M A = 0\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {pseudo_proj_True n w} \\<subseteq> A", "by (simp add: set_filt_contain)"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {pseudo_proj_True n w} \\<subseteq> A\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow> False", "have \"0 < emeasure M {x\\<in> space M. (stake n x = stake n (pseudo_proj_True n w))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < emeasure M\n         {x \\<in> space M. stake n x = stake n (pseudo_proj_True n w)}", "using assms"], ["proof (prove)\nusing this:\n  A \\<in> sets (nat_filtration n)\n  0 < p\n  p < 1\n  emeasure M A = 0\n\ngoal (1 subgoal):\n 1. 0 < emeasure M\n         {x \\<in> space M. stake n x = stake n (pseudo_proj_True n w)}", "by (simp add: bernoulli_stream_pref_prob_pos)"], ["proof (state)\nthis:\n  0 < emeasure M\n       {x \\<in> space M. stake n x = stake n (pseudo_proj_True n w)}\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  0 < emeasure M\n       {x \\<in> space M. stake n x = stake n (pseudo_proj_True n w)}\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow> False", "have \"... = emeasure M (pseudo_proj_True n -` {pseudo_proj_True n w})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M\n     {x \\<in> space M. stake n x = stake n (pseudo_proj_True n w)} =\n    emeasure M (pseudo_proj_True n -` {pseudo_proj_True n w})", "using pseudo_proj_True_preimage_stake\n    pseudo_proj_True_proj bernoulli bernoulli_stream_space"], ["proof (prove)\nusing this:\n  ?w = pseudo_proj_True ?n ?w \\<Longrightarrow>\n  pseudo_proj_True ?n -` {?w} = {x. stake ?n x = stake ?n ?w}\n  pseudo_proj_True ?n (pseudo_proj_True ?n ?w) = pseudo_proj_True ?n ?w\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. emeasure M\n     {x \\<in> space M. stake n x = stake n (pseudo_proj_True n w)} =\n    emeasure M (pseudo_proj_True n -` {pseudo_proj_True n w})", "by simp"], ["proof (state)\nthis:\n  emeasure M {x \\<in> space M. stake n x = stake n (pseudo_proj_True n w)} =\n  emeasure M (pseudo_proj_True n -` {pseudo_proj_True n w})\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  emeasure M {x \\<in> space M. stake n x = stake n (pseudo_proj_True n w)} =\n  emeasure M (pseudo_proj_True n -` {pseudo_proj_True n w})\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow> False", "have \"... \\<le> emeasure M A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True n -` {pseudo_proj_True n w})\n    \\<le> emeasure M A", "proof (rule emeasure_mono, (simp add: inc))"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<in> events", "show \"A \\<in> events\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> events", "using assms nat_discrete_filtration"], ["proof (prove)\nusing this:\n  A \\<in> sets (nat_filtration n)\n  0 < p\n  p < 1\n  emeasure M A = 0\n  Filtration.filtration M nat_filtration\n\ngoal (1 subgoal):\n 1. A \\<in> events", "unfolding filtration_def subalgebra_def"], ["proof (prove)\nusing this:\n  A \\<in> sets (nat_filtration n)\n  0 < p\n  p < 1\n  emeasure M A = 0\n  (\\<forall>t.\n      space (nat_filtration t) = space M \\<and>\n      sets (nat_filtration t) \\<subseteq> events) \\<and>\n  (\\<forall>s t.\n      s \\<le> t \\<longrightarrow>\n      space (nat_filtration s) = space (nat_filtration t) \\<and>\n      sets (nat_filtration s) \\<subseteq> sets (nat_filtration t))\n\ngoal (1 subgoal):\n 1. A \\<in> events", "by auto"], ["proof (state)\nthis:\n  A \\<in> events\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  emeasure M (pseudo_proj_True n -` {pseudo_proj_True n w})\n  \\<le> emeasure M A\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  0 < emeasure M A", "have \"0 < emeasure M A\""], ["proof (prove)\nusing this:\n  0 < emeasure M A\n\ngoal (1 subgoal):\n 1. 0 < emeasure M A", "."], ["proof (state)\nthis:\n  0 < emeasure M A\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  0 < emeasure M A\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  0 < emeasure M A\n  A \\<in> sets (nat_filtration n)\n  0 < p\n  p < 1\n  emeasure M A = 0\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_AE_zero:\n  fixes f::\"bool stream \\<Rightarrow> real\"\n  assumes \"AE w in M. f w = 0\"\nand \"f\\<in> borel_measurable (nat_filtration n)\"\nand \"0 < p\"\nand \"p < 1\"\n  shows \"\\<forall>w. f w = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w. f w = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>w. f w = 0", "from \\<open>AE w in M. f w = 0\\<close>"], ["proof (chain)\npicking this:\n  AE w in M. f w = 0", "obtain N' where Nprops: \"{w\\<in> space M. \\<not>f w = 0} \\<subseteq> N'\" \"N'\\<in> sets M\" \"emeasure M N' = 0\""], ["proof (prove)\nusing this:\n  AE w in M. f w = 0\n\ngoal (1 subgoal):\n 1. (\\<And>N'.\n        \\<lbrakk>{w \\<in> space M. f w \\<noteq> 0} \\<subseteq> N';\n         N' \\<in> events; emeasure M N' = 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (force elim:AE_E)"], ["proof (state)\nthis:\n  {w \\<in> space M. f w \\<noteq> 0} \\<subseteq> N'\n  N' \\<in> events\n  emeasure M N' = 0\n\ngoal (1 subgoal):\n 1. \\<forall>w. f w = 0", "have \"{w\\<in> space M. f w < 0} \\<in> sets (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. f w < 0} \\<in> sets (nat_filtration n)", "by (metis (no_types) assms(2) bernoulli bernoulli_stream_space borel_measurable_iff_less nat_filtration_space streams_UNIV)"], ["proof (state)\nthis:\n  {w \\<in> space M. f w < 0} \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. \\<forall>w. f w = 0", "moreover"], ["proof (state)\nthis:\n  {w \\<in> space M. f w < 0} \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. \\<forall>w. f w = 0", "have \"{w\\<in> space M. f w > 0} \\<in> sets (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. 0 < f w} \\<in> sets (nat_filtration n)", "by (metis (no_types) assms(2) bernoulli bernoulli_stream_space borel_measurable_iff_greater nat_filtration_space streams_UNIV)"], ["proof (state)\nthis:\n  {w \\<in> space M. 0 < f w} \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. \\<forall>w. f w = 0", "moreover"], ["proof (state)\nthis:\n  {w \\<in> space M. 0 < f w} \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. \\<forall>w. f w = 0", "have \"{w\\<in> space M. \\<not>f w = 0} = {w\\<in> space M. f w < 0} \\<union> {w\\<in> space M. f w > 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. f w \\<noteq> 0} =\n    {w \\<in> space M. f w < 0} \\<union> {w \\<in> space M. 0 < f w}", "by auto"], ["proof (state)\nthis:\n  {w \\<in> space M. f w \\<noteq> 0} =\n  {w \\<in> space M. f w < 0} \\<union> {w \\<in> space M. 0 < f w}\n\ngoal (1 subgoal):\n 1. \\<forall>w. f w = 0", "ultimately"], ["proof (chain)\npicking this:\n  {w \\<in> space M. f w < 0} \\<in> sets (nat_filtration n)\n  {w \\<in> space M. 0 < f w} \\<in> sets (nat_filtration n)\n  {w \\<in> space M. f w \\<noteq> 0} =\n  {w \\<in> space M. f w < 0} \\<union> {w \\<in> space M. 0 < f w}", "have \"{w\\<in> space M. \\<not>f w = 0} \\<in> sets (nat_filtration n)\""], ["proof (prove)\nusing this:\n  {w \\<in> space M. f w < 0} \\<in> sets (nat_filtration n)\n  {w \\<in> space M. 0 < f w} \\<in> sets (nat_filtration n)\n  {w \\<in> space M. f w \\<noteq> 0} =\n  {w \\<in> space M. f w < 0} \\<union> {w \\<in> space M. 0 < f w}\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. f w \\<noteq> 0} \\<in> sets (nat_filtration n)", "by auto"], ["proof (state)\nthis:\n  {w \\<in> space M. f w \\<noteq> 0} \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. \\<forall>w. f w = 0", "hence \"emeasure M {w\\<in> space M. \\<not>f w = 0} = 0\""], ["proof (prove)\nusing this:\n  {w \\<in> space M. f w \\<noteq> 0} \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. f w \\<noteq> 0} = 0", "using Nprops"], ["proof (prove)\nusing this:\n  {w \\<in> space M. f w \\<noteq> 0} \\<in> sets (nat_filtration n)\n  {w \\<in> space M. f w \\<noteq> 0} \\<subseteq> N'\n  N' \\<in> events\n  emeasure M N' = 0\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. f w \\<noteq> 0} = 0", "by (metis (no_types, lifting) emeasure_eq_0)"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. f w \\<noteq> 0} = 0\n\ngoal (1 subgoal):\n 1. \\<forall>w. f w = 0", "hence \"{w\\<in> space M. \\<not>f w = 0} = {}\""], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. f w \\<noteq> 0} = 0\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. f w \\<noteq> 0} = {}", "using \\<open>{w\\<in> space M. \\<not>f w = 0} \\<in> sets (nat_filtration n)\\<close>\n      nat_filtration_null_set[of \"{w \\<in> space M. f w \\<noteq> 0}\" n] assms"], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. f w \\<noteq> 0} = 0\n  {w \\<in> space M. f w \\<noteq> 0} \\<in> sets (nat_filtration n)\n  \\<lbrakk>{w \\<in> space M. f w \\<noteq> 0} \\<in> sets (nat_filtration n);\n   0 < p; p < 1; emeasure M {w \\<in> space M. f w \\<noteq> 0} = 0\\<rbrakk>\n  \\<Longrightarrow> {w \\<in> space M. f w \\<noteq> 0} = {}\n  AE w in M. f w = 0\n  f \\<in> borel_measurable (nat_filtration n)\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. f w \\<noteq> 0} = {}", "by simp"], ["proof (state)\nthis:\n  {w \\<in> space M. f w \\<noteq> 0} = {}\n\ngoal (1 subgoal):\n 1. \\<forall>w. f w = 0", "hence \"{w. f w\\<noteq> 0} = {}\""], ["proof (prove)\nusing this:\n  {w \\<in> space M. f w \\<noteq> 0} = {}\n\ngoal (1 subgoal):\n 1. {w. f w \\<noteq> 0} = {}", "by (simp add:bernoulli_stream_space bernoulli)"], ["proof (state)\nthis:\n  {w. f w \\<noteq> 0} = {}\n\ngoal (1 subgoal):\n 1. \\<forall>w. f w = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  {w. f w \\<noteq> 0} = {}\n\ngoal (1 subgoal):\n 1. \\<forall>w. f w = 0", "by auto"], ["proof (state)\nthis:\n  \\<forall>w. f w = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) nat_filtration_AE_eq:\n  fixes f::\"bool stream \\<Rightarrow> real\"\n  assumes \"AE w in M. f w = g w\"\nand \"0 < p\"\nand \"p < 1\"\nand \"f\\<in> borel_measurable (nat_filtration n)\"\nand \"g\\<in> borel_measurable (nat_filtration n)\"\n  shows \"f w = g w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f w = g w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f w = g w", "define diff where \"diff = (\\<lambda>w. f w - g w)\""], ["proof (state)\nthis:\n  diff = (\\<lambda>w. f w - g w)\n\ngoal (1 subgoal):\n 1. f w = g w", "have \"AE w in M. diff w = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE w in M. diff w = 0", "proof (rule AE_mp)"], ["proof (state)\ngoal (2 subgoals):\n 1. almost_everywhere M ?P\n 2. AE w in M. ?P w \\<longrightarrow> diff w = 0", "show \"AE w in M. f w = g w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE w in M. f w = g w", "using assms"], ["proof (prove)\nusing this:\n  AE w in M. f w = g w\n  0 < p\n  p < 1\n  f \\<in> borel_measurable (nat_filtration n)\n  g \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. AE w in M. f w = g w", "by simp"], ["proof (state)\nthis:\n  AE w in M. f w = g w\n\ngoal (1 subgoal):\n 1. AE w in M. f w = g w \\<longrightarrow> diff w = 0", "show \"AE w in M. f w = g w \\<longrightarrow> diff w = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE w in M. f w = g w \\<longrightarrow> diff w = 0", "by (rule AE_I2, intro impI, (simp add: diff_def))"], ["proof (state)\nthis:\n  AE w in M. f w = g w \\<longrightarrow> diff w = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AE w in M. diff w = 0\n\ngoal (1 subgoal):\n 1. f w = g w", "have \"\\<forall>w. diff w = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w. diff w = 0", "proof (rule nat_filtration_AE_zero)"], ["proof (state)\ngoal (4 subgoals):\n 1. AE w in M. diff w = 0\n 2. diff \\<in> borel_measurable (nat_filtration ?n)\n 3. 0 < p\n 4. p < 1", "show \"AE w in M. diff w = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE w in M. diff w = 0", "using \\<open>AE w in M. diff w = 0\\<close>"], ["proof (prove)\nusing this:\n  AE w in M. diff w = 0\n\ngoal (1 subgoal):\n 1. AE w in M. diff w = 0", "."], ["proof (state)\nthis:\n  AE w in M. diff w = 0\n\ngoal (3 subgoals):\n 1. diff \\<in> borel_measurable (nat_filtration ?n)\n 2. 0 < p\n 3. p < 1", "show \"diff \\<in> borel_measurable (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff \\<in> borel_measurable (nat_filtration n)", "using assms"], ["proof (prove)\nusing this:\n  AE w in M. f w = g w\n  0 < p\n  p < 1\n  f \\<in> borel_measurable (nat_filtration n)\n  g \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. diff \\<in> borel_measurable (nat_filtration n)", "unfolding diff_def"], ["proof (prove)\nusing this:\n  AE w in M. f w = g w\n  0 < p\n  p < 1\n  f \\<in> borel_measurable (nat_filtration n)\n  g \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w - g w) \\<in> borel_measurable (nat_filtration n)", "by simp"], ["proof (state)\nthis:\n  diff \\<in> borel_measurable (nat_filtration n)\n\ngoal (2 subgoals):\n 1. 0 < p\n 2. p < 1", "show \"0 < p\" and \"p < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < p &&& p < 1", "using assms"], ["proof (prove)\nusing this:\n  AE w in M. f w = g w\n  0 < p\n  p < 1\n  f \\<in> borel_measurable (nat_filtration n)\n  g \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. 0 < p &&& p < 1", "by auto"], ["proof (state)\nthis:\n  0 < p\n  p < 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w. diff w = 0\n\ngoal (1 subgoal):\n 1. f w = g w", "thus \"f w = g w\""], ["proof (prove)\nusing this:\n  \\<forall>w. diff w = 0\n\ngoal (1 subgoal):\n 1. f w = g w", "unfolding diff_def"], ["proof (prove)\nusing this:\n  \\<forall>w. f w - g w = 0\n\ngoal (1 subgoal):\n 1. f w = g w", "by auto"], ["proof (state)\nthis:\n  f w = g w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) bernoulli_stream_equiv:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < p\"\nand \"p < 1\"\nand \"0 < q\"\nand \"q < 1\"\nshows \"filt_equiv nat_filtration M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filt_equiv nat_filtration M N", "unfolding filt_equiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. events = sets N \\<and>\n    Filtration.filtration M nat_filtration \\<and>\n    (\\<forall>t A.\n        A \\<in> sets (nat_filtration t) \\<longrightarrow>\n        (emeasure M A = 0) = (emeasure N A = 0))", "proof (intro conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. events = sets N\n 2. Filtration.filtration M nat_filtration\n 3. \\<forall>t A.\n       A \\<in> sets (nat_filtration t) \\<longrightarrow>\n       (emeasure M A = 0) = (emeasure N A = 0)", "have \"sets (stream_space (measure_pmf (bernoulli_pmf p))) = sets (stream_space (measure_pmf (bernoulli_pmf q)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (stream_space (measure_pmf (bernoulli_pmf p))) =\n    sets (stream_space (measure_pmf (bernoulli_pmf q)))", "by (rule sets_stream_space_cong, simp)"], ["proof (state)\nthis:\n  sets (stream_space (measure_pmf (bernoulli_pmf p))) =\n  sets (stream_space (measure_pmf (bernoulli_pmf q)))\n\ngoal (3 subgoals):\n 1. events = sets N\n 2. Filtration.filtration M nat_filtration\n 3. \\<forall>t A.\n       A \\<in> sets (nat_filtration t) \\<longrightarrow>\n       (emeasure M A = 0) = (emeasure N A = 0)", "thus \"events = sets N\""], ["proof (prove)\nusing this:\n  sets (stream_space (measure_pmf (bernoulli_pmf p))) =\n  sets (stream_space (measure_pmf (bernoulli_pmf q)))\n\ngoal (1 subgoal):\n 1. events = sets N", "using assms bernoulli"], ["proof (prove)\nusing this:\n  sets (stream_space (measure_pmf (bernoulli_pmf p))) =\n  sets (stream_space (measure_pmf (bernoulli_pmf q)))\n  N = bernoulli_stream q\n  0 < p\n  p < 1\n  0 < q\n  q < 1\n  M = bernoulli_stream p\n\ngoal (1 subgoal):\n 1. events = sets N", "unfolding bernoulli_stream_def"], ["proof (prove)\nusing this:\n  sets (stream_space (measure_pmf (bernoulli_pmf p))) =\n  sets (stream_space (measure_pmf (bernoulli_pmf q)))\n  N = stream_space (measure_pmf (bernoulli_pmf q))\n  0 < p\n  p < 1\n  0 < q\n  q < 1\n  M = stream_space (measure_pmf (bernoulli_pmf p))\n\ngoal (1 subgoal):\n 1. events = sets N", "by simp"], ["proof (state)\nthis:\n  events = sets N\n\ngoal (2 subgoals):\n 1. Filtration.filtration M nat_filtration\n 2. \\<forall>t A.\n       A \\<in> sets (nat_filtration t) \\<longrightarrow>\n       (emeasure M A = 0) = (emeasure N A = 0)", "show \"filtration M nat_filtration\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Filtration.filtration M nat_filtration", "by (simp add:nat_discrete_filtration)"], ["proof (state)\nthis:\n  Filtration.filtration M nat_filtration\n\ngoal (1 subgoal):\n 1. \\<forall>t A.\n       A \\<in> sets (nat_filtration t) \\<longrightarrow>\n       (emeasure M A = 0) = (emeasure N A = 0)", "show \"\\<forall>t A. A \\<in> sets (nat_filtration t) \\<longrightarrow> (emeasure M A = 0) = (emeasure N A = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t A.\n       A \\<in> sets (nat_filtration t) \\<longrightarrow>\n       (emeasure M A = 0) = (emeasure N A = 0)", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t A.\n       A \\<in> sets (nat_filtration t) \\<Longrightarrow>\n       (emeasure M A = 0) = (emeasure N A = 0)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t A.\n       A \\<in> sets (nat_filtration t) \\<Longrightarrow>\n       (emeasure M A = 0) = (emeasure N A = 0)", "fix A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t A.\n       A \\<in> sets (nat_filtration t) \\<Longrightarrow>\n       (emeasure M A = 0) = (emeasure N A = 0)", "assume \"A\\<in> sets (nat_filtration n)\""], ["proof (state)\nthis:\n  A \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. \\<And>t A.\n       A \\<in> sets (nat_filtration t) \\<Longrightarrow>\n       (emeasure M A = 0) = (emeasure N A = 0)", "show \"(emeasure M A = 0) = (emeasure N A = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (emeasure M A = 0) = (emeasure N A = 0)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. emeasure M A = 0 \\<Longrightarrow> emeasure N A = 0\n 2. emeasure N A = 0 \\<Longrightarrow> emeasure M A = 0", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. emeasure M A = 0 \\<Longrightarrow> emeasure N A = 0\n 2. emeasure N A = 0 \\<Longrightarrow> emeasure M A = 0", "assume \"emeasure M A = 0\""], ["proof (state)\nthis:\n  emeasure M A = 0\n\ngoal (2 subgoals):\n 1. emeasure M A = 0 \\<Longrightarrow> emeasure N A = 0\n 2. emeasure N A = 0 \\<Longrightarrow> emeasure M A = 0", "hence \"A = {}\""], ["proof (prove)\nusing this:\n  emeasure M A = 0\n\ngoal (1 subgoal):\n 1. A = {}", "using \\<open>A\\<in> sets (nat_filtration n)\\<close>"], ["proof (prove)\nusing this:\n  emeasure M A = 0\n  A \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. A = {}", "using assms"], ["proof (prove)\nusing this:\n  emeasure M A = 0\n  A \\<in> sets (nat_filtration n)\n  N = bernoulli_stream q\n  0 < p\n  p < 1\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. A = {}", "by (simp add:nat_filtration_null_set)"], ["proof (state)\nthis:\n  A = {}\n\ngoal (2 subgoals):\n 1. emeasure M A = 0 \\<Longrightarrow> emeasure N A = 0\n 2. emeasure N A = 0 \\<Longrightarrow> emeasure M A = 0", "thus \"emeasure N A = 0\""], ["proof (prove)\nusing this:\n  A = {}\n\ngoal (1 subgoal):\n 1. emeasure N A = 0", "by simp"], ["proof (state)\nthis:\n  emeasure N A = 0\n\ngoal (1 subgoal):\n 1. emeasure N A = 0 \\<Longrightarrow> emeasure M A = 0", "}"], ["proof (state)\nthis:\n  emeasure M A = 0 \\<Longrightarrow> emeasure N A = 0\n\ngoal (1 subgoal):\n 1. emeasure N A = 0 \\<Longrightarrow> emeasure M A = 0", "{"], ["proof (state)\nthis:\n  emeasure M A = 0 \\<Longrightarrow> emeasure N A = 0\n\ngoal (1 subgoal):\n 1. emeasure N A = 0 \\<Longrightarrow> emeasure M A = 0", "assume \"emeasure N A = 0\""], ["proof (state)\nthis:\n  emeasure N A = 0\n\ngoal (1 subgoal):\n 1. emeasure N A = 0 \\<Longrightarrow> emeasure M A = 0", "hence \"A = {}\""], ["proof (prove)\nusing this:\n  emeasure N A = 0\n\ngoal (1 subgoal):\n 1. A = {}", "using \\<open>A\\<in> sets (nat_filtration n)\\<close> infinite_coin_toss_space.nat_filtration_null_set[of q N A n]\n        assms"], ["proof (prove)\nusing this:\n  emeasure N A = 0\n  A \\<in> sets (nat_filtration n)\n  \\<lbrakk>infinite_coin_toss_space q N;\n   A \\<in> sets (infinite_coin_toss_space.nat_filtration N n); 0 < q; q < 1;\n   emeasure N A = 0\\<rbrakk>\n  \\<Longrightarrow> A = {}\n  N = bernoulli_stream q\n  0 < p\n  p < 1\n  0 < q\n  q < 1\n\ngoal (1 subgoal):\n 1. A = {}", "using \\<open>events = sets N\\<close> bernoulli bernoulli_stream_space infinite_coin_toss_space.nat_filtration_sets\n          infinite_coin_toss_space_def nat_filtration_sets"], ["proof (prove)\nusing this:\n  emeasure N A = 0\n  A \\<in> sets (nat_filtration n)\n  \\<lbrakk>infinite_coin_toss_space q N;\n   A \\<in> sets (infinite_coin_toss_space.nat_filtration N n); 0 < q; q < 1;\n   emeasure N A = 0\\<rbrakk>\n  \\<Longrightarrow> A = {}\n  N = bernoulli_stream q\n  0 < p\n  p < 1\n  0 < q\n  q < 1\n  events = sets N\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n  infinite_coin_toss_space ?p ?M \\<Longrightarrow>\n  sets (infinite_coin_toss_space.nat_filtration ?M ?n) =\n  sigma_sets (space (bernoulli_stream ?p))\n   {pseudo_proj_True ?n -` B \\<inter> space ?M |B.\n    B \\<in> sets (bernoulli_stream ?p)}\n  infinite_coin_toss_space ?p ?M \\<equiv>\n  0 \\<le> ?p \\<and> ?p \\<le> 1 \\<and> ?M = bernoulli_stream ?p\n  sets (nat_filtration ?n) =\n  sigma_sets (space (bernoulli_stream p))\n   {pseudo_proj_True ?n -` B \\<inter> space M |B.\n    B \\<in> sets (bernoulli_stream p)}\n\ngoal (1 subgoal):\n 1. A = {}", "by force"], ["proof (state)\nthis:\n  A = {}\n\ngoal (1 subgoal):\n 1. emeasure N A = 0 \\<Longrightarrow> emeasure M A = 0", "thus \"emeasure M A = 0\""], ["proof (prove)\nusing this:\n  A = {}\n\ngoal (1 subgoal):\n 1. emeasure M A = 0", "by simp"], ["proof (state)\nthis:\n  emeasure M A = 0\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  emeasure N A = 0 \\<Longrightarrow> emeasure M A = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (emeasure M A = 0) = (emeasure N A = 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>t A.\n     A \\<in> sets (nat_filtration t) \\<longrightarrow>\n     (emeasure M A = 0) = (emeasure N A = 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) bernoulli_nat_filtration:\n  assumes \"N = bernoulli_stream q\"\nand \"0 < q\"\nand \"q < 1\"\nand \"0 < p\"\nand \"p < 1\"\nshows \"infinite_cts_filtration q N nat_filtration\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_cts_filtration q N nat_filtration", "proof (unfold_locales)"], ["proof (state)\ngoal (4 subgoals):\n 1. 0 \\<le> q\n 2. q \\<le> 1\n 3. N = bernoulli_stream q\n 4. nat_filtration = infinite_coin_toss_space.nat_filtration N", "have \"0 < q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. 0 < q", "by simp"], ["proof (state)\nthis:\n  0 < q\n\ngoal (4 subgoals):\n 1. 0 \\<le> q\n 2. q \\<le> 1\n 3. N = bernoulli_stream q\n 4. nat_filtration = infinite_coin_toss_space.nat_filtration N", "thus \"0 \\<le> q\""], ["proof (prove)\nusing this:\n  0 < q\n\ngoal (1 subgoal):\n 1. 0 \\<le> q", "by simp"], ["proof (state)\nthis:\n  0 \\<le> q\n\ngoal (3 subgoals):\n 1. q \\<le> 1\n 2. N = bernoulli_stream q\n 3. nat_filtration = infinite_coin_toss_space.nat_filtration N", "have \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q < 1", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. q < 1", "by simp"], ["proof (state)\nthis:\n  q < 1\n\ngoal (3 subgoals):\n 1. q \\<le> 1\n 2. N = bernoulli_stream q\n 3. nat_filtration = infinite_coin_toss_space.nat_filtration N", "thus \"q \\<le> 1\""], ["proof (prove)\nusing this:\n  q < 1\n\ngoal (1 subgoal):\n 1. q \\<le> 1", "by simp"], ["proof (state)\nthis:\n  q \\<le> 1\n\ngoal (2 subgoals):\n 1. N = bernoulli_stream q\n 2. nat_filtration = infinite_coin_toss_space.nat_filtration N", "show \"N = bernoulli_stream q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N = bernoulli_stream q", "using assms"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 < q\n  q < 1\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. N = bernoulli_stream q", "by simp"], ["proof (state)\nthis:\n  N = bernoulli_stream q\n\ngoal (1 subgoal):\n 1. nat_filtration = infinite_coin_toss_space.nat_filtration N", "show \"nat_filtration = infinite_coin_toss_space.nat_filtration N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_filtration = infinite_coin_toss_space.nat_filtration N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_filtration = infinite_coin_toss_space.nat_filtration N", "have \"filt_equiv nat_filtration M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filt_equiv nat_filtration M N", "using \\<open>q < 1\\<close> \\<open>0 < q\\<close>"], ["proof (prove)\nusing this:\n  q < 1\n  0 < q\n\ngoal (1 subgoal):\n 1. filt_equiv nat_filtration M N", "by (simp add: assms bernoulli_stream_equiv)"], ["proof (state)\nthis:\n  filt_equiv nat_filtration M N\n\ngoal (1 subgoal):\n 1. nat_filtration = infinite_coin_toss_space.nat_filtration N", "hence \"sets M = sets N\""], ["proof (prove)\nusing this:\n  filt_equiv nat_filtration M N\n\ngoal (1 subgoal):\n 1. events = sets N", "unfolding filt_equiv_def"], ["proof (prove)\nusing this:\n  events = sets N \\<and>\n  Filtration.filtration M nat_filtration \\<and>\n  (\\<forall>t A.\n      A \\<in> sets (nat_filtration t) \\<longrightarrow>\n      (emeasure M A = 0) = (emeasure N A = 0))\n\ngoal (1 subgoal):\n 1. events = sets N", "by simp"], ["proof (state)\nthis:\n  events = sets N\n\ngoal (1 subgoal):\n 1. nat_filtration = infinite_coin_toss_space.nat_filtration N", "hence \"space M = space N\""], ["proof (prove)\nusing this:\n  events = sets N\n\ngoal (1 subgoal):\n 1. space M = space N", "using sets_eq_imp_space_eq"], ["proof (prove)\nusing this:\n  events = sets N\n  sets ?M = sets ?M' \\<Longrightarrow> space ?M = space ?M'\n\ngoal (1 subgoal):\n 1. space M = space N", "by auto"], ["proof (state)\nthis:\n  space M = space N\n\ngoal (1 subgoal):\n 1. nat_filtration = infinite_coin_toss_space.nat_filtration N", "have \"\\<forall>m. nat_filtration m = infinite_coin_toss_space.nat_filtration N m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m.\n       nat_filtration m = infinite_coin_toss_space.nat_filtration N m", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. nat_filtration m = infinite_coin_toss_space.nat_filtration N m", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. nat_filtration m = infinite_coin_toss_space.nat_filtration N m", "have \"infinite_coin_toss_space.nat_filtration N m = fct_gen_subalgebra N N (pseudo_proj_True m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite_coin_toss_space.nat_filtration N m =\n    fct_gen_subalgebra N N (pseudo_proj_True m)", "using \\<open>0 \\<le> q\\<close> \\<open>N = bernoulli_stream q\\<close> \\<open>q \\<le> 1\\<close> infinite_coin_toss_space.intro\n        infinite_coin_toss_space.nat_filtration_def"], ["proof (prove)\nusing this:\n  0 \\<le> q\n  N = bernoulli_stream q\n  q \\<le> 1\n  \\<lbrakk>0 \\<le> ?p; ?p \\<le> 1; ?M = bernoulli_stream ?p\\<rbrakk>\n  \\<Longrightarrow> infinite_coin_toss_space ?p ?M\n  infinite_coin_toss_space ?p ?M \\<Longrightarrow>\n  infinite_coin_toss_space.nat_filtration ?M ?n =\n  fct_gen_subalgebra ?M ?M (pseudo_proj_True ?n)\n\ngoal (1 subgoal):\n 1. infinite_coin_toss_space.nat_filtration N m =\n    fct_gen_subalgebra N N (pseudo_proj_True m)", "by blast"], ["proof (state)\nthis:\n  infinite_coin_toss_space.nat_filtration N m =\n  fct_gen_subalgebra N N (pseudo_proj_True m)\n\ngoal (1 subgoal):\n 1. \\<And>m. nat_filtration m = infinite_coin_toss_space.nat_filtration N m", "thus \"nat_filtration m = infinite_coin_toss_space.nat_filtration N m\""], ["proof (prove)\nusing this:\n  infinite_coin_toss_space.nat_filtration N m =\n  fct_gen_subalgebra N N (pseudo_proj_True m)\n\ngoal (1 subgoal):\n 1. nat_filtration m = infinite_coin_toss_space.nat_filtration N m", "unfolding nat_filtration_def"], ["proof (prove)\nusing this:\n  infinite_coin_toss_space.nat_filtration N m =\n  fct_gen_subalgebra N N (pseudo_proj_True m)\n\ngoal (1 subgoal):\n 1. fct_gen_subalgebra M M (pseudo_proj_True m) =\n    infinite_coin_toss_space.nat_filtration N m", "using fct_gen_subalgebra_cong[of M N M N \"pseudo_proj_True m\"] \\<open>sets M = sets N\\<close> \\<open>space M = space N\\<close>"], ["proof (prove)\nusing this:\n  infinite_coin_toss_space.nat_filtration N m =\n  fct_gen_subalgebra N N (pseudo_proj_True m)\n  \\<lbrakk>space M = space N; events = sets N\\<rbrakk>\n  \\<Longrightarrow> fct_gen_subalgebra M M (pseudo_proj_True m) =\n                    fct_gen_subalgebra N N (pseudo_proj_True m)\n  events = sets N\n  space M = space N\n\ngoal (1 subgoal):\n 1. fct_gen_subalgebra M M (pseudo_proj_True m) =\n    infinite_coin_toss_space.nat_filtration N m", "by simp"], ["proof (state)\nthis:\n  nat_filtration m = infinite_coin_toss_space.nat_filtration N m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>m. nat_filtration m = infinite_coin_toss_space.nat_filtration N m\n\ngoal (1 subgoal):\n 1. nat_filtration = infinite_coin_toss_space.nat_filtration N", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>m. nat_filtration m = infinite_coin_toss_space.nat_filtration N m\n\ngoal (1 subgoal):\n 1. nat_filtration = infinite_coin_toss_space.nat_filtration N", "by auto"], ["proof (state)\nthis:\n  nat_filtration = infinite_coin_toss_space.nat_filtration N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nat_filtration = infinite_coin_toss_space.nat_filtration N\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>More results on the projection function\\<close>"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_Suc_prefix:\n  shows \"pseudo_proj_True (Suc n) w = (w!!0)## pseudo_proj_True n (stl w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w = w !! 0 ## pseudo_proj_True n (stl w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w = w !! 0 ## pseudo_proj_True n (stl w)", "have \"pseudo_proj_True (Suc n) w = shift (stake (Suc n) w) (sconst True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w = stake (Suc n) w @- sconst True", "unfolding pseudo_proj_True_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (Suc n) w @- sconst True = stake (Suc n) w @- sconst True", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) w = stake (Suc n) w @- sconst True\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w = w !! 0 ## pseudo_proj_True n (stl w)", "also"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) w = stake (Suc n) w @- sconst True\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w = w !! 0 ## pseudo_proj_True n (stl w)", "have \"... = shift (w!!0 # (stake n (stl w))) (sconst True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (Suc n) w @- sconst True =\n    (w !! 0 # stake n (stl w)) @- sconst True", "by simp"], ["proof (state)\nthis:\n  stake (Suc n) w @- sconst True = (w !! 0 # stake n (stl w)) @- sconst True\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w = w !! 0 ## pseudo_proj_True n (stl w)", "also"], ["proof (state)\nthis:\n  stake (Suc n) w @- sconst True = (w !! 0 # stake n (stl w)) @- sconst True\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w = w !! 0 ## pseudo_proj_True n (stl w)", "have \"... = w!!0 ## shift (stake n (stl w)) (sconst True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w !! 0 # stake n (stl w)) @- sconst True =\n    w !! 0 ## stake n (stl w) @- sconst True", "by simp"], ["proof (state)\nthis:\n  (w !! 0 # stake n (stl w)) @- sconst True =\n  w !! 0 ## stake n (stl w) @- sconst True\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w = w !! 0 ## pseudo_proj_True n (stl w)", "also"], ["proof (state)\nthis:\n  (w !! 0 # stake n (stl w)) @- sconst True =\n  w !! 0 ## stake n (stl w) @- sconst True\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w = w !! 0 ## pseudo_proj_True n (stl w)", "have \"... = w!!0 ## pseudo_proj_True n (stl w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w !! 0 ## stake n (stl w) @- sconst True =\n    w !! 0 ## pseudo_proj_True n (stl w)", "unfolding pseudo_proj_True_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. w !! 0 ## stake n (stl w) @- sconst True =\n    w !! 0 ## stake n (stl w) @- sconst True", "by simp"], ["proof (state)\nthis:\n  w !! 0 ## stake n (stl w) @- sconst True =\n  w !! 0 ## pseudo_proj_True n (stl w)\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w = w !! 0 ## pseudo_proj_True n (stl w)", "finally"], ["proof (chain)\npicking this:\n  pseudo_proj_True (Suc n) w = w !! 0 ## pseudo_proj_True n (stl w)", "show ?thesis"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) w = w !! 0 ## pseudo_proj_True n (stl w)\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w = w !! 0 ## pseudo_proj_True n (stl w)", "."], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) w = w !! 0 ## pseudo_proj_True n (stl w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_img:\n  assumes \"pseudo_proj_True n w = w\"\n  shows \"w\\<in> range (pseudo_proj_True n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> range (pseudo_proj_True n)", "by (metis assms rangeI)"], ["", "lemma (in infinite_coin_toss_space) sconst_if:\n  assumes \"\\<And>n. snth w n = True\"\n  shows \"w = sconst True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w = sconst True", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. w = sconst True", "obtain nn :: \"(bool \\<Rightarrow> bool) \\<Rightarrow> bool stream \\<Rightarrow> bool stream \\<Rightarrow> nat\" where\n    \"\\<And>p s n sa sb na pa sc pb sd se. (\\<not> p (s !! n::bool) \\<or> smap p s \\<noteq> sa \\<or> sa !! n) \\<and> (\\<not> sb !! na \\<or> smap pa sc \\<noteq> sb \\<or> pa (sc !! na::bool)) \\<and> (\\<not> pb (sd !! nn pb sd se) \\<or> \\<not> se !! nn pb sd se \\<or> smap pb sd = se)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>nn.\n        (\\<And>p s n sa sb na pa sc pb sd se.\n            (\\<not> p (s !! n) \\<or>\n             smap p s \\<noteq> sa \\<or> sa !! n) \\<and>\n            (\\<not> sb !! na \\<or>\n             smap pa sc \\<noteq> sb \\<or> pa (sc !! na)) \\<and>\n            (\\<not> pb (sd !! nn pb sd se) \\<or>\n             \\<not> se !! nn pb sd se \\<or>\n             smap pb sd = se)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using smap_alt"], ["proof (prove)\nusing this:\n  (smap ?f ?s = ?s') = (\\<forall>n. ?f (?s !! n) = ?s' !! n)\n\ngoal (1 subgoal):\n 1. (\\<And>nn.\n        (\\<And>p s n sa sb na pa sc pb sd se.\n            (\\<not> p (s !! n) \\<or>\n             smap p s \\<noteq> sa \\<or> sa !! n) \\<and>\n            (\\<not> sb !! na \\<or>\n             smap pa sc \\<noteq> sb \\<or> pa (sc !! na)) \\<and>\n            (\\<not> pb (sd !! nn pb sd se) \\<or>\n             \\<not> se !! nn pb sd se \\<or>\n             smap pb sd = se)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  (\\<not> ?p1 (?s1 !! ?n1) \\<or>\n   smap ?p1 ?s1 \\<noteq> ?sa1 \\<or> ?sa1 !! ?n1) \\<and>\n  (\\<not> ?sb1 !! ?na1 \\<or>\n   smap ?pa1 ?sc1 \\<noteq> ?sb1 \\<or> ?pa1 (?sc1 !! ?na1)) \\<and>\n  (\\<not> ?pb1 (?sd1 !! nn ?pb1 ?sd1 ?se1) \\<or>\n   \\<not> ?se1 !! nn ?pb1 ?sd1 ?se1 \\<or> smap ?pb1 ?sd1 = ?se1)\n\ngoal (1 subgoal):\n 1. w = sconst True", "then"], ["proof (chain)\npicking this:\n  (\\<not> ?p1 (?s1 !! ?n1) \\<or>\n   smap ?p1 ?s1 \\<noteq> ?sa1 \\<or> ?sa1 !! ?n1) \\<and>\n  (\\<not> ?sb1 !! ?na1 \\<or>\n   smap ?pa1 ?sc1 \\<noteq> ?sb1 \\<or> ?pa1 (?sc1 !! ?na1)) \\<and>\n  (\\<not> ?pb1 (?sd1 !! nn ?pb1 ?sd1 ?se1) \\<or>\n   \\<not> ?se1 !! nn ?pb1 ?sd1 ?se1 \\<or> smap ?pb1 ?sd1 = ?se1)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<not> ?p1 (?s1 !! ?n1) \\<or>\n   smap ?p1 ?s1 \\<noteq> ?sa1 \\<or> ?sa1 !! ?n1) \\<and>\n  (\\<not> ?sb1 !! ?na1 \\<or>\n   smap ?pa1 ?sc1 \\<noteq> ?sb1 \\<or> ?pa1 (?sc1 !! ?na1)) \\<and>\n  (\\<not> ?pb1 (?sd1 !! nn ?pb1 ?sd1 ?se1) \\<or>\n   \\<not> ?se1 !! nn ?pb1 ?sd1 ?se1 \\<or> smap ?pb1 ?sd1 = ?se1)\n\ngoal (1 subgoal):\n 1. w = sconst True", "by (metis (no_types) assms eq_id_iff id_funpow snth_siterate)"], ["proof (state)\nthis:\n  w = sconst True\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_suc_img_pref:\n  shows \"range (pseudo_proj_True (Suc n)) = {y. \\<exists>w \\<in> range (pseudo_proj_True n). y = True ## w} \\<union>\n    {y. \\<exists>w \\<in> range (pseudo_proj_True n). y = False ## w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (pseudo_proj_True (Suc n)) =\n    {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w} \\<union>\n    {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. range (pseudo_proj_True (Suc n))\n    \\<subseteq> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                       y = True ## w} \\<union>\n                {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                       y = False ## w}\n 2. {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w} \\<union>\n    {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n    \\<subseteq> range (pseudo_proj_True (Suc n))", "show \"range (pseudo_proj_True (Suc n))\n    \\<subseteq> {y. \\<exists>w \\<in> range (pseudo_proj_True n). y = True ## w} \\<union> {y. \\<exists>w \\<in> range (pseudo_proj_True n). y = False ## w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (pseudo_proj_True (Suc n))\n    \\<subseteq> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                       y = True ## w} \\<union>\n                {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                       y = False ## w}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True (Suc n)) \\<Longrightarrow>\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<union>\n               {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True (Suc n)) \\<Longrightarrow>\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<union>\n               {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w}", "assume \"x \\<in> range (pseudo_proj_True (Suc n))\""], ["proof (state)\nthis:\n  x \\<in> range (pseudo_proj_True (Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True (Suc n)) \\<Longrightarrow>\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<union>\n               {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w}", "hence \"x = pseudo_proj_True (Suc n) x\""], ["proof (prove)\nusing this:\n  x \\<in> range (pseudo_proj_True (Suc n))\n\ngoal (1 subgoal):\n 1. x = pseudo_proj_True (Suc n) x", "using pseudo_proj_True_proj"], ["proof (prove)\nusing this:\n  x \\<in> range (pseudo_proj_True (Suc n))\n  pseudo_proj_True ?n (pseudo_proj_True ?n ?w) = pseudo_proj_True ?n ?w\n\ngoal (1 subgoal):\n 1. x = pseudo_proj_True (Suc n) x", "by auto"], ["proof (state)\nthis:\n  x = pseudo_proj_True (Suc n) x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True (Suc n)) \\<Longrightarrow>\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<union>\n               {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w}", "define xp where \"xp = stl x\""], ["proof (state)\nthis:\n  xp = stl x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True (Suc n)) \\<Longrightarrow>\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<union>\n               {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w}", "have \"xp = stl (shift (stake (Suc n) x) (sconst True))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xp = stl (stake (Suc n) x @- sconst True)", "using \\<open>x = pseudo_proj_True (Suc n) x\\<close>"], ["proof (prove)\nusing this:\n  x = pseudo_proj_True (Suc n) x\n\ngoal (1 subgoal):\n 1. xp = stl (stake (Suc n) x @- sconst True)", "unfolding xp_def pseudo_proj_True_def"], ["proof (prove)\nusing this:\n  x = stake (Suc n) x @- sconst True\n\ngoal (1 subgoal):\n 1. stl x = stl (stake (Suc n) x @- sconst True)", "by simp"], ["proof (state)\nthis:\n  xp = stl (stake (Suc n) x @- sconst True)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True (Suc n)) \\<Longrightarrow>\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<union>\n               {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w}", "also"], ["proof (state)\nthis:\n  xp = stl (stake (Suc n) x @- sconst True)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True (Suc n)) \\<Longrightarrow>\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<union>\n               {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w}", "have \"... = shift ((stake n (stl x))) (sconst True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stl (stake (Suc n) x @- sconst True) = stake n (stl x) @- sconst True", "by simp"], ["proof (state)\nthis:\n  stl (stake (Suc n) x @- sconst True) = stake n (stl x) @- sconst True\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True (Suc n)) \\<Longrightarrow>\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<union>\n               {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w}", "finally"], ["proof (chain)\npicking this:\n  xp = stake n (stl x) @- sconst True", "have \"xp = shift ((stake n (stl x))) (sconst True)\""], ["proof (prove)\nusing this:\n  xp = stake n (stl x) @- sconst True\n\ngoal (1 subgoal):\n 1. xp = stake n (stl x) @- sconst True", "."], ["proof (state)\nthis:\n  xp = stake n (stl x) @- sconst True\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True (Suc n)) \\<Longrightarrow>\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<union>\n               {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w}", "hence \"xp \\<in> range (pseudo_proj_True n)\""], ["proof (prove)\nusing this:\n  xp = stake n (stl x) @- sconst True\n\ngoal (1 subgoal):\n 1. xp \\<in> range (pseudo_proj_True n)", "using  pseudo_proj_True_def"], ["proof (prove)\nusing this:\n  xp = stake n (stl x) @- sconst True\n  pseudo_proj_True ?n = (\\<lambda>w. stake ?n w @- sconst True)\n\ngoal (1 subgoal):\n 1. xp \\<in> range (pseudo_proj_True n)", "by auto"], ["proof (state)\nthis:\n  xp \\<in> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True (Suc n)) \\<Longrightarrow>\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<union>\n               {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w}", "show \"x\\<in> {y. \\<exists>w \\<in> range (pseudo_proj_True n) . y = True ## w} \\<union> {y. \\<exists>w \\<in> range (pseudo_proj_True n). y = False ## w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                   y = True ## w} \\<union>\n            {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}", "proof (cases \"snth x 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x !! 0 \\<Longrightarrow>\n    x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                   y = True ## w} \\<union>\n            {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n 2. \\<not> x !! 0 \\<Longrightarrow>\n    x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                   y = True ## w} \\<union>\n            {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}", "case True"], ["proof (state)\nthis:\n  x !! 0\n\ngoal (2 subgoals):\n 1. x !! 0 \\<Longrightarrow>\n    x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                   y = True ## w} \\<union>\n            {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n 2. \\<not> x !! 0 \\<Longrightarrow>\n    x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                   y = True ## w} \\<union>\n            {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}", "have \"x = True ## xp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = True ## xp", "unfolding xp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = True ## stl x", "using True"], ["proof (prove)\nusing this:\n  x !! 0\n\ngoal (1 subgoal):\n 1. x = True ## stl x", "by (simp add: stream_eq_Stream_iff)"], ["proof (state)\nthis:\n  x = True ## xp\n\ngoal (2 subgoals):\n 1. x !! 0 \\<Longrightarrow>\n    x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                   y = True ## w} \\<union>\n            {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n 2. \\<not> x !! 0 \\<Longrightarrow>\n    x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                   y = True ## w} \\<union>\n            {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}", "hence \"x \\<in> {y. \\<exists>w \\<in> range (pseudo_proj_True n). y = True ## w}\""], ["proof (prove)\nusing this:\n  x = True ## xp\n\ngoal (1 subgoal):\n 1. x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w}", "using \\<open>xp \\<in> range (pseudo_proj_True n)\\<close>"], ["proof (prove)\nusing this:\n  x = True ## xp\n  xp \\<in> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w}\n\ngoal (2 subgoals):\n 1. x !! 0 \\<Longrightarrow>\n    x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                   y = True ## w} \\<union>\n            {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n 2. \\<not> x !! 0 \\<Longrightarrow>\n    x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                   y = True ## w} \\<union>\n            {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w}\n\ngoal (1 subgoal):\n 1. x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                   y = True ## w} \\<union>\n            {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                 y = True ## w} \\<union>\n          {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n\ngoal (1 subgoal):\n 1. \\<not> x !! 0 \\<Longrightarrow>\n    x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                   y = True ## w} \\<union>\n            {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x !! 0 \\<Longrightarrow>\n    x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                   y = True ## w} \\<union>\n            {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}", "case False"], ["proof (state)\nthis:\n  \\<not> x !! 0\n\ngoal (1 subgoal):\n 1. \\<not> x !! 0 \\<Longrightarrow>\n    x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                   y = True ## w} \\<union>\n            {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}", "have \"x = False ## xp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = False ## xp", "unfolding xp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = False ## stl x", "using False"], ["proof (prove)\nusing this:\n  \\<not> x !! 0\n\ngoal (1 subgoal):\n 1. x = False ## stl x", "by (simp add: stream_eq_Stream_iff)"], ["proof (state)\nthis:\n  x = False ## xp\n\ngoal (1 subgoal):\n 1. \\<not> x !! 0 \\<Longrightarrow>\n    x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                   y = True ## w} \\<union>\n            {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}", "hence \"x \\<in> {y. \\<exists>w \\<in> range (pseudo_proj_True n). y = False ## w}\""], ["proof (prove)\nusing this:\n  x = False ## xp\n\ngoal (1 subgoal):\n 1. x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}", "using \\<open>xp \\<in> range (pseudo_proj_True n)\\<close>"], ["proof (prove)\nusing this:\n  x = False ## xp\n  xp \\<in> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n\ngoal (1 subgoal):\n 1. \\<not> x !! 0 \\<Longrightarrow>\n    x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                   y = True ## w} \\<union>\n            {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n\ngoal (1 subgoal):\n 1. x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                   y = True ## w} \\<union>\n            {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                 y = True ## w} \\<union>\n          {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                 y = True ## w} \\<union>\n          {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  range (pseudo_proj_True (Suc n))\n  \\<subseteq> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                     y = True ## w} \\<union>\n              {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n\ngoal (1 subgoal):\n 1. {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w} \\<union>\n    {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n    \\<subseteq> range (pseudo_proj_True (Suc n))", "have \"{y. \\<exists>w \\<in> range (pseudo_proj_True n) . y = True ## w} \\<subseteq> range (pseudo_proj_True (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w}\n    \\<subseteq> range (pseudo_proj_True (Suc n))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "assume \"y \\<in> {y. \\<exists>w \\<in> range (pseudo_proj_True n) . y = True ## w}\""], ["proof (state)\nthis:\n  y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "hence \"\\<exists>w. w \\<in> range (pseudo_proj_True n) \\<and> y = True ## w\""], ["proof (prove)\nusing this:\n  y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w}\n\ngoal (1 subgoal):\n 1. \\<exists>w. w \\<in> range (pseudo_proj_True n) \\<and> y = True ## w", "by auto"], ["proof (state)\nthis:\n  \\<exists>w. w \\<in> range (pseudo_proj_True n) \\<and> y = True ## w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "from this"], ["proof (chain)\npicking this:\n  \\<exists>w. w \\<in> range (pseudo_proj_True n) \\<and> y = True ## w", "obtain w where \"w\\<in> range (pseudo_proj_True n)\" and \"y = True ## w\""], ["proof (prove)\nusing this:\n  \\<exists>w. w \\<in> range (pseudo_proj_True n) \\<and> y = True ## w\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>w \\<in> range (pseudo_proj_True n); y = True ## w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  w \\<in> range (pseudo_proj_True n)\n  y = True ## w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "have \"w = pseudo_proj_True n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w = pseudo_proj_True n w", "using pseudo_proj_True_proj \\<open>w\\<in> range (pseudo_proj_True n)\\<close>"], ["proof (prove)\nusing this:\n  pseudo_proj_True ?n (pseudo_proj_True ?n ?w) = pseudo_proj_True ?n ?w\n  w \\<in> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. w = pseudo_proj_True n w", "by auto"], ["proof (state)\nthis:\n  w = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "hence \"y = True ## (shift (stake n w) (sconst True))\""], ["proof (prove)\nusing this:\n  w = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. y = True ## stake n w @- sconst True", "using \\<open>y = True ## w\\<close>"], ["proof (prove)\nusing this:\n  w = pseudo_proj_True n w\n  y = True ## w\n\ngoal (1 subgoal):\n 1. y = True ## stake n w @- sconst True", "unfolding pseudo_proj_True_def"], ["proof (prove)\nusing this:\n  w = stake n w @- sconst True\n  y = True ## w\n\ngoal (1 subgoal):\n 1. y = True ## stake n w @- sconst True", "by simp"], ["proof (state)\nthis:\n  y = True ## stake n w @- sconst True\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "also"], ["proof (state)\nthis:\n  y = True ## stake n w @- sconst True\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "have \"... = shift (stake (Suc n) (True ## w)) (sconst True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. True ## stake n w @- sconst True =\n    stake (Suc n) (True ## w) @- sconst True", "by simp"], ["proof (state)\nthis:\n  True ## stake n w @- sconst True =\n  stake (Suc n) (True ## w) @- sconst True\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "also"], ["proof (state)\nthis:\n  True ## stake n w @- sconst True =\n  stake (Suc n) (True ## w) @- sconst True\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "have \"... = pseudo_proj_True (Suc n) (True ## w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (Suc n) (True ## w) @- sconst True =\n    pseudo_proj_True (Suc n) (True ## w)", "unfolding pseudo_proj_True_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (Suc n) (True ## w) @- sconst True =\n    stake (Suc n) (True ## w) @- sconst True", "by simp"], ["proof (state)\nthis:\n  stake (Suc n) (True ## w) @- sconst True =\n  pseudo_proj_True (Suc n) (True ## w)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "finally"], ["proof (chain)\npicking this:\n  y = pseudo_proj_True (Suc n) (True ## w)", "have \"y = pseudo_proj_True (Suc n) (True##w)\""], ["proof (prove)\nusing this:\n  y = pseudo_proj_True (Suc n) (True ## w)\n\ngoal (1 subgoal):\n 1. y = pseudo_proj_True (Suc n) (True ## w)", "."], ["proof (state)\nthis:\n  y = pseudo_proj_True (Suc n) (True ## w)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "thus \"y \\<in> range (pseudo_proj_True (Suc n))\""], ["proof (prove)\nusing this:\n  y = pseudo_proj_True (Suc n) (True ## w)\n\ngoal (1 subgoal):\n 1. y \\<in> range (pseudo_proj_True (Suc n))", "by simp"], ["proof (state)\nthis:\n  y \\<in> range (pseudo_proj_True (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w}\n  \\<subseteq> range (pseudo_proj_True (Suc n))\n\ngoal (1 subgoal):\n 1. {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w} \\<union>\n    {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n    \\<subseteq> range (pseudo_proj_True (Suc n))", "moreover"], ["proof (state)\nthis:\n  {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w}\n  \\<subseteq> range (pseudo_proj_True (Suc n))\n\ngoal (1 subgoal):\n 1. {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w} \\<union>\n    {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n    \\<subseteq> range (pseudo_proj_True (Suc n))", "have \"{y. \\<exists>w \\<in> range (pseudo_proj_True n) . y = False ## w} \\<subseteq> range (pseudo_proj_True (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n    \\<subseteq> range (pseudo_proj_True (Suc n))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "assume \"y \\<in> {y. \\<exists>w \\<in> range (pseudo_proj_True n) . y = False ## w}\""], ["proof (state)\nthis:\n  y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "hence \"\\<exists>w. w \\<in> range (pseudo_proj_True n) \\<and> y = False ## w\""], ["proof (prove)\nusing this:\n  y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n\ngoal (1 subgoal):\n 1. \\<exists>w. w \\<in> range (pseudo_proj_True n) \\<and> y = False ## w", "by auto"], ["proof (state)\nthis:\n  \\<exists>w. w \\<in> range (pseudo_proj_True n) \\<and> y = False ## w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "from this"], ["proof (chain)\npicking this:\n  \\<exists>w. w \\<in> range (pseudo_proj_True n) \\<and> y = False ## w", "obtain w where \"w\\<in> range (pseudo_proj_True n)\" and \"y = False ## w\""], ["proof (prove)\nusing this:\n  \\<exists>w. w \\<in> range (pseudo_proj_True n) \\<and> y = False ## w\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>w \\<in> range (pseudo_proj_True n); y = False ## w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  w \\<in> range (pseudo_proj_True n)\n  y = False ## w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "have \"w = pseudo_proj_True n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w = pseudo_proj_True n w", "using pseudo_proj_True_proj \\<open>w\\<in> range (pseudo_proj_True n)\\<close>"], ["proof (prove)\nusing this:\n  pseudo_proj_True ?n (pseudo_proj_True ?n ?w) = pseudo_proj_True ?n ?w\n  w \\<in> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. w = pseudo_proj_True n w", "by auto"], ["proof (state)\nthis:\n  w = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "hence \"y = False ## (shift (stake n w) (sconst True))\""], ["proof (prove)\nusing this:\n  w = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. y = False ## stake n w @- sconst True", "using \\<open>y = False ## w\\<close>"], ["proof (prove)\nusing this:\n  w = pseudo_proj_True n w\n  y = False ## w\n\ngoal (1 subgoal):\n 1. y = False ## stake n w @- sconst True", "unfolding pseudo_proj_True_def"], ["proof (prove)\nusing this:\n  w = stake n w @- sconst True\n  y = False ## w\n\ngoal (1 subgoal):\n 1. y = False ## stake n w @- sconst True", "by simp"], ["proof (state)\nthis:\n  y = False ## stake n w @- sconst True\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "also"], ["proof (state)\nthis:\n  y = False ## stake n w @- sconst True\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "have \"... = shift (stake (Suc n) (False ## w)) (sconst True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False ## stake n w @- sconst True =\n    stake (Suc n) (False ## w) @- sconst True", "by simp"], ["proof (state)\nthis:\n  False ## stake n w @- sconst True =\n  stake (Suc n) (False ## w) @- sconst True\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "also"], ["proof (state)\nthis:\n  False ## stake n w @- sconst True =\n  stake (Suc n) (False ## w) @- sconst True\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "have \"... = pseudo_proj_True (Suc n) (False ## w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (Suc n) (False ## w) @- sconst True =\n    pseudo_proj_True (Suc n) (False ## w)", "unfolding pseudo_proj_True_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (Suc n) (False ## w) @- sconst True =\n    stake (Suc n) (False ## w) @- sconst True", "by simp"], ["proof (state)\nthis:\n  stake (Suc n) (False ## w) @- sconst True =\n  pseudo_proj_True (Suc n) (False ## w)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "finally"], ["proof (chain)\npicking this:\n  y = pseudo_proj_True (Suc n) (False ## w)", "have \"y = pseudo_proj_True (Suc n) (False##w)\""], ["proof (prove)\nusing this:\n  y = pseudo_proj_True (Suc n) (False ## w)\n\ngoal (1 subgoal):\n 1. y = pseudo_proj_True (Suc n) (False ## w)", "."], ["proof (state)\nthis:\n  y = pseudo_proj_True (Suc n) (False ## w)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True (Suc n))", "thus \"y \\<in> range (pseudo_proj_True (Suc n))\""], ["proof (prove)\nusing this:\n  y = pseudo_proj_True (Suc n) (False ## w)\n\ngoal (1 subgoal):\n 1. y \\<in> range (pseudo_proj_True (Suc n))", "by simp"], ["proof (state)\nthis:\n  y \\<in> range (pseudo_proj_True (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n  \\<subseteq> range (pseudo_proj_True (Suc n))\n\ngoal (1 subgoal):\n 1. {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w} \\<union>\n    {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n    \\<subseteq> range (pseudo_proj_True (Suc n))", "ultimately"], ["proof (chain)\npicking this:\n  {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w}\n  \\<subseteq> range (pseudo_proj_True (Suc n))\n  {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n  \\<subseteq> range (pseudo_proj_True (Suc n))", "show \"{y. \\<exists>w \\<in> range (pseudo_proj_True n) . y = True ## w} \\<union>\n   {y. \\<exists>w \\<in> range (pseudo_proj_True n) . y = False ## w} \\<subseteq> range (pseudo_proj_True (Suc n))\""], ["proof (prove)\nusing this:\n  {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w}\n  \\<subseteq> range (pseudo_proj_True (Suc n))\n  {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n  \\<subseteq> range (pseudo_proj_True (Suc n))\n\ngoal (1 subgoal):\n 1. {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w} \\<union>\n    {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n    \\<subseteq> range (pseudo_proj_True (Suc n))", "by simp"], ["proof (state)\nthis:\n  {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w} \\<union>\n  {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n  \\<subseteq> range (pseudo_proj_True (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) reindex_pseudo_proj:\n  shows \"(\\<Sum>w\\<in>range (pseudo_proj_True n). f (c ## w)) =\n      (\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = c ## w}.f y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n). f (c ## w)) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = c ## w. f y)", "proof (rule sum.reindex_cong[symmetric],auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on ((##) c) (range (pseudo_proj_True n))", "define ccons where \"ccons = (\\<lambda>w. c## w)\""], ["proof (state)\nthis:\n  ccons = (##) c\n\ngoal (1 subgoal):\n 1. inj_on ((##) c) (range (pseudo_proj_True n))", "show \"inj_on ccons (range (pseudo_proj_True n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on ccons (range (pseudo_proj_True n))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> range (pseudo_proj_True n);\n        y \\<in> range (pseudo_proj_True n); ccons x = ccons y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> range (pseudo_proj_True n);\n        y \\<in> range (pseudo_proj_True n); ccons x = ccons y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume \"x\\<in> range (pseudo_proj_True n)\" and \"y\\<in> range (pseudo_proj_True n)\" and \"ccons x = ccons y\""], ["proof (state)\nthis:\n  x \\<in> range (pseudo_proj_True n)\n  y \\<in> range (pseudo_proj_True n)\n  ccons x = ccons y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> range (pseudo_proj_True n);\n        y \\<in> range (pseudo_proj_True n); ccons x = ccons y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"c##x = c##y\""], ["proof (prove)\nusing this:\n  x \\<in> range (pseudo_proj_True n)\n  y \\<in> range (pseudo_proj_True n)\n  ccons x = ccons y\n\ngoal (1 subgoal):\n 1. c ## x = c ## y", "unfolding ccons_def"], ["proof (prove)\nusing this:\n  x \\<in> range (pseudo_proj_True n)\n  y \\<in> range (pseudo_proj_True n)\n  c ## x = c ## y\n\ngoal (1 subgoal):\n 1. c ## x = c ## y", "by simp"], ["proof (state)\nthis:\n  c ## x = c ## y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> range (pseudo_proj_True n);\n        y \\<in> range (pseudo_proj_True n); ccons x = ccons y\\<rbrakk>\n       \\<Longrightarrow> x = y", "thus \"x = y\""], ["proof (prove)\nusing this:\n  c ## x = c ## y\n\ngoal (1 subgoal):\n 1. x = y", "by simp"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on ccons (range (pseudo_proj_True n))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_True_imp_False:\n  assumes \"pseudo_proj_True n w = pseudo_proj_True n x\"\n  shows \"pseudo_proj_False n w = pseudo_proj_False n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n w = pseudo_proj_False n x", "by (metis assms pseudo_proj_False_def pseudo_proj_True_stake)"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_Suc_prefix:\n  assumes \"pseudo_proj_True n w = pseudo_proj_True n x\"\n  shows \"pseudo_proj_True (Suc n) w \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w\n    \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w\n    \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}", "have \"pseudo_proj_False n w = pseudo_proj_False n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n w = pseudo_proj_False n x", "using assms pseudo_proj_True_imp_False[of n w x]"], ["proof (prove)\nusing this:\n  pseudo_proj_True n w = pseudo_proj_True n x\n  pseudo_proj_True n w = pseudo_proj_True n x \\<Longrightarrow>\n  pseudo_proj_False n w = pseudo_proj_False n x\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n w = pseudo_proj_False n x", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_False n w = pseudo_proj_False n x\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w\n    \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}", "hence \"{pseudo_proj_True n w, pseudo_proj_False n w} = {pseudo_proj_True n x, pseudo_proj_False n x}\""], ["proof (prove)\nusing this:\n  pseudo_proj_False n w = pseudo_proj_False n x\n\ngoal (1 subgoal):\n 1. {pseudo_proj_True n w, pseudo_proj_False n w} =\n    {pseudo_proj_True n x, pseudo_proj_False n x}", "using assms"], ["proof (prove)\nusing this:\n  pseudo_proj_False n w = pseudo_proj_False n x\n  pseudo_proj_True n w = pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. {pseudo_proj_True n w, pseudo_proj_False n w} =\n    {pseudo_proj_True n x, pseudo_proj_False n x}", "by simp"], ["proof (state)\nthis:\n  {pseudo_proj_True n w, pseudo_proj_False n w} =\n  {pseudo_proj_True n x, pseudo_proj_False n x}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w\n    \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}", "thus ?thesis"], ["proof (prove)\nusing this:\n  {pseudo_proj_True n w, pseudo_proj_False n w} =\n  {pseudo_proj_True n x, pseudo_proj_False n x}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w\n    \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}", "using pseudo_proj_True_suc_img[of n w]"], ["proof (prove)\nusing this:\n  {pseudo_proj_True n w, pseudo_proj_False n w} =\n  {pseudo_proj_True n x, pseudo_proj_False n x}\n  pseudo_proj_True (Suc n) w\n  \\<in> {pseudo_proj_True n w, pseudo_proj_False n w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w\n    \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) w\n  \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) pseudo_proj_Suc_preimage:\n  shows \"range (pseudo_proj_True (Suc n)) \\<inter> (pseudo_proj_True n) -` {pseudo_proj_True n x} =\n    {pseudo_proj_True n x, pseudo_proj_False n x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (pseudo_proj_True (Suc n)) \\<inter>\n    pseudo_proj_True n -` {pseudo_proj_True n x} =\n    {pseudo_proj_True n x, pseudo_proj_False n x}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. range (pseudo_proj_True (Suc n)) \\<inter>\n    pseudo_proj_True n -` {pseudo_proj_True n x}\n    \\<subseteq> {pseudo_proj_True n x, pseudo_proj_False n x}\n 2. {pseudo_proj_True n x, pseudo_proj_False n x}\n    \\<subseteq> range (pseudo_proj_True (Suc n)) \\<inter>\n                pseudo_proj_True n -` {pseudo_proj_True n x}", "show \"range (pseudo_proj_True (Suc n)) \\<inter> pseudo_proj_True n -` {pseudo_proj_True n x}\n    \\<subseteq> {pseudo_proj_True n x, pseudo_proj_False n x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (pseudo_proj_True (Suc n)) \\<inter>\n    pseudo_proj_True n -` {pseudo_proj_True n x}\n    \\<subseteq> {pseudo_proj_True n x, pseudo_proj_False n x}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n                pseudo_proj_True n -`\n                {pseudo_proj_True n x} \\<Longrightarrow>\n       xa \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n                pseudo_proj_True n -`\n                {pseudo_proj_True n x} \\<Longrightarrow>\n       xa \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}", "assume \"w\\<in> range (pseudo_proj_True (Suc n)) \\<inter> pseudo_proj_True n -` {pseudo_proj_True n x}\""], ["proof (state)\nthis:\n  w \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n          pseudo_proj_True n -` {pseudo_proj_True n x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n                pseudo_proj_True n -`\n                {pseudo_proj_True n x} \\<Longrightarrow>\n       xa \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}", "hence \"w\\<in> range (pseudo_proj_True (Suc n))\" and \"w\\<in> pseudo_proj_True n -` {pseudo_proj_True n x}\""], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n          pseudo_proj_True n -` {pseudo_proj_True n x}\n\ngoal (1 subgoal):\n 1. w \\<in> range (pseudo_proj_True (Suc n)) &&&\n    w \\<in> pseudo_proj_True n -` {pseudo_proj_True n x}", "by auto"], ["proof (state)\nthis:\n  w \\<in> range (pseudo_proj_True (Suc n))\n  w \\<in> pseudo_proj_True n -` {pseudo_proj_True n x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n                pseudo_proj_True n -`\n                {pseudo_proj_True n x} \\<Longrightarrow>\n       xa \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}", "hence \"pseudo_proj_True n w = pseudo_proj_True n x\""], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True (Suc n))\n  w \\<in> pseudo_proj_True n -` {pseudo_proj_True n x}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = pseudo_proj_True n x", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True n w = pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n                pseudo_proj_True n -`\n                {pseudo_proj_True n x} \\<Longrightarrow>\n       xa \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}", "have \"w = pseudo_proj_True (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w = pseudo_proj_True (Suc n) w", "using \\<open>w\\<in> range (pseudo_proj_True (Suc n))\\<close>"], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True (Suc n))\n\ngoal (1 subgoal):\n 1. w = pseudo_proj_True (Suc n) w", "using pseudo_proj_True_proj"], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True (Suc n))\n  pseudo_proj_True ?n (pseudo_proj_True ?n ?w) = pseudo_proj_True ?n ?w\n\ngoal (1 subgoal):\n 1. w = pseudo_proj_True (Suc n) w", "by auto"], ["proof (state)\nthis:\n  w = pseudo_proj_True (Suc n) w\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n                pseudo_proj_True n -`\n                {pseudo_proj_True n x} \\<Longrightarrow>\n       xa \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}", "also"], ["proof (state)\nthis:\n  w = pseudo_proj_True (Suc n) w\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n                pseudo_proj_True n -`\n                {pseudo_proj_True n x} \\<Longrightarrow>\n       xa \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}", "have \"... \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w\n    \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}", "using \\<open>pseudo_proj_True n w = pseudo_proj_True n x\\<close>\n      pseudo_proj_Suc_prefix"], ["proof (prove)\nusing this:\n  pseudo_proj_True n w = pseudo_proj_True n x\n  pseudo_proj_True ?n ?w = pseudo_proj_True ?n ?x \\<Longrightarrow>\n  pseudo_proj_True (Suc ?n) ?w\n  \\<in> {pseudo_proj_True ?n ?x, pseudo_proj_False ?n ?x}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w\n    \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) w\n  \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n                pseudo_proj_True n -`\n                {pseudo_proj_True n x} \\<Longrightarrow>\n       xa \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}", "finally"], ["proof (chain)\npicking this:\n  w \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}", "show \"w \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}\""], ["proof (prove)\nusing this:\n  w \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}\n\ngoal (1 subgoal):\n 1. w \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}", "."], ["proof (state)\nthis:\n  w \\<in> {pseudo_proj_True n x, pseudo_proj_False n x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  range (pseudo_proj_True (Suc n)) \\<inter>\n  pseudo_proj_True n -` {pseudo_proj_True n x}\n  \\<subseteq> {pseudo_proj_True n x, pseudo_proj_False n x}\n\ngoal (1 subgoal):\n 1. {pseudo_proj_True n x, pseudo_proj_False n x}\n    \\<subseteq> range (pseudo_proj_True (Suc n)) \\<inter>\n                pseudo_proj_True n -` {pseudo_proj_True n x}", "show \"{pseudo_proj_True n x, pseudo_proj_False n x}\n    \\<subseteq> range (pseudo_proj_True (Suc n)) \\<inter> pseudo_proj_True n -` {pseudo_proj_True n x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {pseudo_proj_True n x, pseudo_proj_False n x}\n    \\<subseteq> range (pseudo_proj_True (Suc n)) \\<inter>\n                pseudo_proj_True n -` {pseudo_proj_True n x}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {pseudo_proj_True n x, pseudo_proj_False n x}\n    \\<subseteq> range (pseudo_proj_True (Suc n)) \\<inter>\n                pseudo_proj_True n -` {pseudo_proj_True n x}", "have \"pseudo_proj_True n x \\<in> range (pseudo_proj_True (Suc n)) \\<inter> pseudo_proj_True n -` {pseudo_proj_True n x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n x\n    \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n          pseudo_proj_True n -` {pseudo_proj_True n x}", "by (simp add: pseudo_proj_True_Suc_proj pseudo_proj_True_img pseudo_proj_True_proj)"], ["proof (state)\nthis:\n  pseudo_proj_True n x\n  \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n        pseudo_proj_True n -` {pseudo_proj_True n x}\n\ngoal (1 subgoal):\n 1. {pseudo_proj_True n x, pseudo_proj_False n x}\n    \\<subseteq> range (pseudo_proj_True (Suc n)) \\<inter>\n                pseudo_proj_True n -` {pseudo_proj_True n x}", "moreover"], ["proof (state)\nthis:\n  pseudo_proj_True n x\n  \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n        pseudo_proj_True n -` {pseudo_proj_True n x}\n\ngoal (1 subgoal):\n 1. {pseudo_proj_True n x, pseudo_proj_False n x}\n    \\<subseteq> range (pseudo_proj_True (Suc n)) \\<inter>\n                pseudo_proj_True n -` {pseudo_proj_True n x}", "have \"pseudo_proj_False n x \\<in> range (pseudo_proj_True (Suc n)) \\<inter> pseudo_proj_True n -` {pseudo_proj_True n x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n x\n    \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n          pseudo_proj_True n -` {pseudo_proj_True n x}", "by (metis (no_types, lifting) Int_iff UnI2 infinite_coin_toss_space.pseudo_proj_False_def infinite_coin_toss_space_axioms\n          pseudo_proj_True_Suc_False_proj pseudo_proj_True_inverse_induct pseudo_proj_True_stake rangeI singletonI vimage_eq)"], ["proof (state)\nthis:\n  pseudo_proj_False n x\n  \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n        pseudo_proj_True n -` {pseudo_proj_True n x}\n\ngoal (1 subgoal):\n 1. {pseudo_proj_True n x, pseudo_proj_False n x}\n    \\<subseteq> range (pseudo_proj_True (Suc n)) \\<inter>\n                pseudo_proj_True n -` {pseudo_proj_True n x}", "ultimately"], ["proof (chain)\npicking this:\n  pseudo_proj_True n x\n  \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n        pseudo_proj_True n -` {pseudo_proj_True n x}\n  pseudo_proj_False n x\n  \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n        pseudo_proj_True n -` {pseudo_proj_True n x}", "show ?thesis"], ["proof (prove)\nusing this:\n  pseudo_proj_True n x\n  \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n        pseudo_proj_True n -` {pseudo_proj_True n x}\n  pseudo_proj_False n x\n  \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n        pseudo_proj_True n -` {pseudo_proj_True n x}\n\ngoal (1 subgoal):\n 1. {pseudo_proj_True n x, pseudo_proj_False n x}\n    \\<subseteq> range (pseudo_proj_True (Suc n)) \\<inter>\n                pseudo_proj_True n -` {pseudo_proj_True n x}", "by auto"], ["proof (state)\nthis:\n  {pseudo_proj_True n x, pseudo_proj_False n x}\n  \\<subseteq> range (pseudo_proj_True (Suc n)) \\<inter>\n              pseudo_proj_True n -` {pseudo_proj_True n x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {pseudo_proj_True n x, pseudo_proj_False n x}\n  \\<subseteq> range (pseudo_proj_True (Suc n)) \\<inter>\n              pseudo_proj_True n -` {pseudo_proj_True n x}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) f_borel_Suc_preimage:\n  assumes \"f\\<in> measurable (F n) N\"\n  and \"set_discriminating n f N\"\n  shows \"range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x} =\n  (pseudo_proj_True n) ` (f -` {f x}) \\<union> (pseudo_proj_False n) ` (f -` {f x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x} =\n    pseudo_proj_True n ` f -` {f x} \\<union>\n    pseudo_proj_False n ` f -` {f x}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x} =\n    pseudo_proj_True n ` f -` {f x} \\<union>\n    pseudo_proj_False n ` f -` {f x}", "have \"range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x} =\n    (\\<Union> w\\<in> {y. f y = f x}.{pseudo_proj_True n w, pseudo_proj_False n w})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x} =\n    (\\<Union>w\\<in>{y. f y = f x}.\n        {pseudo_proj_True n w, pseudo_proj_False n w})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}\n    \\<subseteq> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w, pseudo_proj_False n w})\n 2. (\\<Union>w\\<in>{y. f y = f x}.\n        {pseudo_proj_True n w, pseudo_proj_False n w})\n    \\<subseteq> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "show \"range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x} \\<subseteq> (\\<Union>w\\<in>{y. f y = f x}. {pseudo_proj_True n w, pseudo_proj_False n w})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}\n    \\<subseteq> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w, pseudo_proj_False n w})", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n                f -` {f x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w, pseudo_proj_False n w})", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n                f -` {f x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w, pseudo_proj_False n w})", "assume \"w\\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}\""], ["proof (state)\nthis:\n  w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n                f -` {f x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w, pseudo_proj_False n w})", "hence \"w\\<in> range (pseudo_proj_True (Suc n))\" and \"w\\<in> f -` {f x}\""], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}\n\ngoal (1 subgoal):\n 1. w \\<in> range (pseudo_proj_True (Suc n)) &&& w \\<in> f -` {f x}", "by auto"], ["proof (state)\nthis:\n  w \\<in> range (pseudo_proj_True (Suc n))\n  w \\<in> f -` {f x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n                f -` {f x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w, pseudo_proj_False n w})", "hence \"f w = f x\""], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True (Suc n))\n  w \\<in> f -` {f x}\n\ngoal (1 subgoal):\n 1. f w = f x", "by simp"], ["proof (state)\nthis:\n  f w = f x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n                f -` {f x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w, pseudo_proj_False n w})", "hence \"w\\<in> {y. f y = f x}\""], ["proof (prove)\nusing this:\n  f w = f x\n\ngoal (1 subgoal):\n 1. w \\<in> {y. f y = f x}", "by simp"], ["proof (state)\nthis:\n  w \\<in> {y. f y = f x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n                f -` {f x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w, pseudo_proj_False n w})", "have \"w = pseudo_proj_True (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w = pseudo_proj_True (Suc n) w", "using \\<open>w\\<in> range (pseudo_proj_True (Suc n))\\<close>"], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True (Suc n))\n\ngoal (1 subgoal):\n 1. w = pseudo_proj_True (Suc n) w", "using pseudo_proj_True_proj"], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True (Suc n))\n  pseudo_proj_True ?n (pseudo_proj_True ?n ?w) = pseudo_proj_True ?n ?w\n\ngoal (1 subgoal):\n 1. w = pseudo_proj_True (Suc n) w", "by auto"], ["proof (state)\nthis:\n  w = pseudo_proj_True (Suc n) w\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n                f -` {f x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w, pseudo_proj_False n w})", "also"], ["proof (state)\nthis:\n  w = pseudo_proj_True (Suc n) w\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n                f -` {f x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w, pseudo_proj_False n w})", "have \"... \\<in> {pseudo_proj_True n w, pseudo_proj_False n w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w\n    \\<in> {pseudo_proj_True n w, pseudo_proj_False n w}", "using pseudo_proj_Suc_prefix"], ["proof (prove)\nusing this:\n  pseudo_proj_True ?n ?w = pseudo_proj_True ?n ?x \\<Longrightarrow>\n  pseudo_proj_True (Suc ?n) ?w\n  \\<in> {pseudo_proj_True ?n ?x, pseudo_proj_False ?n ?x}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w\n    \\<in> {pseudo_proj_True n w, pseudo_proj_False n w}", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) w\n  \\<in> {pseudo_proj_True n w, pseudo_proj_False n w}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n                f -` {f x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w, pseudo_proj_False n w})", "also"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) w\n  \\<in> {pseudo_proj_True n w, pseudo_proj_False n w}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n                f -` {f x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w, pseudo_proj_False n w})", "have \"... \\<subseteq> (\\<Union>w\\<in>{y. f y = f x}. {pseudo_proj_True n w, pseudo_proj_False n w})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {pseudo_proj_True n w, pseudo_proj_False n w}\n    \\<subseteq> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w, pseudo_proj_False n w})", "using \\<open>w\\<in> {y. f y = f x}\\<close>"], ["proof (prove)\nusing this:\n  w \\<in> {y. f y = f x}\n\ngoal (1 subgoal):\n 1. {pseudo_proj_True n w, pseudo_proj_False n w}\n    \\<subseteq> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w, pseudo_proj_False n w})", "by auto"], ["proof (state)\nthis:\n  {pseudo_proj_True n w, pseudo_proj_False n w}\n  \\<subseteq> (\\<Union>w\\<in>{y. f y = f x}.\n                  {pseudo_proj_True n w, pseudo_proj_False n w})\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n                f -` {f x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w, pseudo_proj_False n w})", "finally"], ["proof (chain)\npicking this:\n  w \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n              {pseudo_proj_True n w, pseudo_proj_False n w})", "show \"w \\<in> (\\<Union>w\\<in>{y. f y = f x}. {pseudo_proj_True n w, pseudo_proj_False n w})\""], ["proof (prove)\nusing this:\n  w \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n              {pseudo_proj_True n w, pseudo_proj_False n w})\n\ngoal (1 subgoal):\n 1. w \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n                {pseudo_proj_True n w, pseudo_proj_False n w})", "."], ["proof (state)\nthis:\n  w \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n              {pseudo_proj_True n w, pseudo_proj_False n w})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}\n  \\<subseteq> (\\<Union>w\\<in>{y. f y = f x}.\n                  {pseudo_proj_True n w, pseudo_proj_False n w})\n\ngoal (1 subgoal):\n 1. (\\<Union>w\\<in>{y. f y = f x}.\n        {pseudo_proj_True n w, pseudo_proj_False n w})\n    \\<subseteq> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "show \"(\\<Union>w\\<in>{y. f y = f x}. {pseudo_proj_True n w, pseudo_proj_False n w})\n      \\<subseteq> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>w\\<in>{y. f y = f x}.\n        {pseudo_proj_True n w, pseudo_proj_False n w})\n    \\<subseteq> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w,\n                     pseudo_proj_False n w}) \\<Longrightarrow>\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w,\n                     pseudo_proj_False n w}) \\<Longrightarrow>\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "assume \"w \\<in> (\\<Union>w\\<in>{y. f y = f x}. {pseudo_proj_True n w, pseudo_proj_False n w})\""], ["proof (state)\nthis:\n  w \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n              {pseudo_proj_True n w, pseudo_proj_False n w})\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w,\n                     pseudo_proj_False n w}) \\<Longrightarrow>\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "hence \"\\<exists>y. f y = f x \\<and> w\\<in> {pseudo_proj_True n y, pseudo_proj_False n y}\""], ["proof (prove)\nusing this:\n  w \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n              {pseudo_proj_True n w, pseudo_proj_False n w})\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       f y = f x \\<and>\n       w \\<in> {pseudo_proj_True n y, pseudo_proj_False n y}", "by auto"], ["proof (state)\nthis:\n  \\<exists>y.\n     f y = f x \\<and> w \\<in> {pseudo_proj_True n y, pseudo_proj_False n y}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w,\n                     pseudo_proj_False n w}) \\<Longrightarrow>\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "from this"], ["proof (chain)\npicking this:\n  \\<exists>y.\n     f y = f x \\<and> w \\<in> {pseudo_proj_True n y, pseudo_proj_False n y}", "obtain y where \"f y = f x\" and \"w\\<in> {pseudo_proj_True n y, pseudo_proj_False n y}\""], ["proof (prove)\nusing this:\n  \\<exists>y.\n     f y = f x \\<and> w \\<in> {pseudo_proj_True n y, pseudo_proj_False n y}\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>f y = f x;\n         w \\<in> {pseudo_proj_True n y, pseudo_proj_False n y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f y = f x\n  w \\<in> {pseudo_proj_True n y, pseudo_proj_False n y}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w,\n                     pseudo_proj_False n w}) \\<Longrightarrow>\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "hence \"w = pseudo_proj_True n y \\<or> w = pseudo_proj_False n y\""], ["proof (prove)\nusing this:\n  f y = f x\n  w \\<in> {pseudo_proj_True n y, pseudo_proj_False n y}\n\ngoal (1 subgoal):\n 1. w = pseudo_proj_True n y \\<or> w = pseudo_proj_False n y", "by auto"], ["proof (state)\nthis:\n  w = pseudo_proj_True n y \\<or> w = pseudo_proj_False n y\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (\\<Union>w\\<in>{y. f y = f x}.\n                    {pseudo_proj_True n w,\n                     pseudo_proj_False n w}) \\<Longrightarrow>\n       xa \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "show \"w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "proof (cases \"w = pseudo_proj_True n y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. w = pseudo_proj_True n y \\<Longrightarrow>\n    w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}\n 2. w \\<noteq> pseudo_proj_True n y \\<Longrightarrow>\n    w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "case True"], ["proof (state)\nthis:\n  w = pseudo_proj_True n y\n\ngoal (2 subgoals):\n 1. w = pseudo_proj_True n y \\<Longrightarrow>\n    w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}\n 2. w \\<noteq> pseudo_proj_True n y \\<Longrightarrow>\n    w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "hence \"f w = f y\""], ["proof (prove)\nusing this:\n  w = pseudo_proj_True n y\n\ngoal (1 subgoal):\n 1. f w = f y", "using assms nat_filtration_not_borel_info natural_filtration"], ["proof (prove)\nusing this:\n  w = pseudo_proj_True n y\n  f \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n f N\n  \\<lbrakk>?f \\<in> nat_filtration ?n \\<rightarrow>\\<^sub>M ?N;\n   set_discriminating ?n ?f ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<circ> pseudo_proj_True ?n = ?f\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. f w = f y", "by (metis comp_apply)"], ["proof (state)\nthis:\n  f w = f y\n\ngoal (2 subgoals):\n 1. w = pseudo_proj_True n y \\<Longrightarrow>\n    w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}\n 2. w \\<noteq> pseudo_proj_True n y \\<Longrightarrow>\n    w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "thus ?thesis"], ["proof (prove)\nusing this:\n  f w = f y\n\ngoal (1 subgoal):\n 1. w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "using \\<open>f y = f x\\<close>"], ["proof (prove)\nusing this:\n  f w = f y\n  f y = f x\n\ngoal (1 subgoal):\n 1. w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "by (simp add: True pseudo_proj_True_Suc_proj pseudo_proj_True_img)"], ["proof (state)\nthis:\n  w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}\n\ngoal (1 subgoal):\n 1. w \\<noteq> pseudo_proj_True n y \\<Longrightarrow>\n    w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. w \\<noteq> pseudo_proj_True n y \\<Longrightarrow>\n    w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "case False"], ["proof (state)\nthis:\n  w \\<noteq> pseudo_proj_True n y\n\ngoal (1 subgoal):\n 1. w \\<noteq> pseudo_proj_True n y \\<Longrightarrow>\n    w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "hence \"f w = f y\""], ["proof (prove)\nusing this:\n  w \\<noteq> pseudo_proj_True n y\n\ngoal (1 subgoal):\n 1. f w = f y", "using assms nat_filtration_not_borel_info natural_filtration"], ["proof (prove)\nusing this:\n  w \\<noteq> pseudo_proj_True n y\n  f \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n f N\n  \\<lbrakk>?f \\<in> nat_filtration ?n \\<rightarrow>\\<^sub>M ?N;\n   set_discriminating ?n ?f ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<circ> pseudo_proj_True ?n = ?f\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. f w = f y", "by (metis Int_iff \\<open>w \\<in> {pseudo_proj_True n y, pseudo_proj_False n y}\\<close>\n              comp_apply pseudo_proj_Suc_preimage singletonD vimage_eq)"], ["proof (state)\nthis:\n  f w = f y\n\ngoal (1 subgoal):\n 1. w \\<noteq> pseudo_proj_True n y \\<Longrightarrow>\n    w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "thus ?thesis"], ["proof (prove)\nusing this:\n  f w = f y\n\ngoal (1 subgoal):\n 1. w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "using \\<open>f y = f x\\<close>"], ["proof (prove)\nusing this:\n  f w = f y\n  f y = f x\n\ngoal (1 subgoal):\n 1. w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "using \\<open>w \\<in> {pseudo_proj_True n y, pseudo_proj_False n y}\\<close> pseudo_proj_Suc_preimage"], ["proof (prove)\nusing this:\n  f w = f y\n  f y = f x\n  w \\<in> {pseudo_proj_True n y, pseudo_proj_False n y}\n  range (pseudo_proj_True (Suc ?n)) \\<inter>\n  pseudo_proj_True ?n -` {pseudo_proj_True ?n ?x} =\n  {pseudo_proj_True ?n ?x, pseudo_proj_False ?n ?x}\n\ngoal (1 subgoal):\n 1. w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}", "by auto"], ["proof (state)\nthis:\n  w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Union>w\\<in>{y. f y = f x}.\n      {pseudo_proj_True n w, pseudo_proj_False n w})\n  \\<subseteq> range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x} =\n  (\\<Union>w\\<in>{y. f y = f x}.\n      {pseudo_proj_True n w, pseudo_proj_False n w})\n\ngoal (1 subgoal):\n 1. range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x} =\n    pseudo_proj_True n ` f -` {f x} \\<union>\n    pseudo_proj_False n ` f -` {f x}", "also"], ["proof (state)\nthis:\n  range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x} =\n  (\\<Union>w\\<in>{y. f y = f x}.\n      {pseudo_proj_True n w, pseudo_proj_False n w})\n\ngoal (1 subgoal):\n 1. range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x} =\n    pseudo_proj_True n ` f -` {f x} \\<union>\n    pseudo_proj_False n ` f -` {f x}", "have \"... =\n    (\\<Union> w\\<in> {y. f y = f x}.{pseudo_proj_True n w}) \\<union> (\\<Union> w\\<in> {y. f y = f x}.{pseudo_proj_False n w})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>w\\<in>{y. f y = f x}.\n        {pseudo_proj_True n w, pseudo_proj_False n w}) =\n    (\\<Union>w\\<in>{y. f y = f x}. {pseudo_proj_True n w}) \\<union>\n    (\\<Union>w\\<in>{y. f y = f x}. {pseudo_proj_False n w})", "by auto"], ["proof (state)\nthis:\n  (\\<Union>w\\<in>{y. f y = f x}.\n      {pseudo_proj_True n w, pseudo_proj_False n w}) =\n  (\\<Union>w\\<in>{y. f y = f x}. {pseudo_proj_True n w}) \\<union>\n  (\\<Union>w\\<in>{y. f y = f x}. {pseudo_proj_False n w})\n\ngoal (1 subgoal):\n 1. range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x} =\n    pseudo_proj_True n ` f -` {f x} \\<union>\n    pseudo_proj_False n ` f -` {f x}", "also"], ["proof (state)\nthis:\n  (\\<Union>w\\<in>{y. f y = f x}.\n      {pseudo_proj_True n w, pseudo_proj_False n w}) =\n  (\\<Union>w\\<in>{y. f y = f x}. {pseudo_proj_True n w}) \\<union>\n  (\\<Union>w\\<in>{y. f y = f x}. {pseudo_proj_False n w})\n\ngoal (1 subgoal):\n 1. range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x} =\n    pseudo_proj_True n ` f -` {f x} \\<union>\n    pseudo_proj_False n ` f -` {f x}", "have \"... = (pseudo_proj_True n) ` {y. f y = f x} \\<union> (pseudo_proj_False n) `{y. f y = f x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>w\\<in>{y. f y = f x}. {pseudo_proj_True n w}) \\<union>\n    (\\<Union>w\\<in>{y. f y = f x}. {pseudo_proj_False n w}) =\n    pseudo_proj_True n ` {y. f y = f x} \\<union>\n    pseudo_proj_False n ` {y. f y = f x}", "by auto"], ["proof (state)\nthis:\n  (\\<Union>w\\<in>{y. f y = f x}. {pseudo_proj_True n w}) \\<union>\n  (\\<Union>w\\<in>{y. f y = f x}. {pseudo_proj_False n w}) =\n  pseudo_proj_True n ` {y. f y = f x} \\<union>\n  pseudo_proj_False n ` {y. f y = f x}\n\ngoal (1 subgoal):\n 1. range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x} =\n    pseudo_proj_True n ` f -` {f x} \\<union>\n    pseudo_proj_False n ` f -` {f x}", "also"], ["proof (state)\nthis:\n  (\\<Union>w\\<in>{y. f y = f x}. {pseudo_proj_True n w}) \\<union>\n  (\\<Union>w\\<in>{y. f y = f x}. {pseudo_proj_False n w}) =\n  pseudo_proj_True n ` {y. f y = f x} \\<union>\n  pseudo_proj_False n ` {y. f y = f x}\n\ngoal (1 subgoal):\n 1. range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x} =\n    pseudo_proj_True n ` f -` {f x} \\<union>\n    pseudo_proj_False n ` f -` {f x}", "have \"... = (pseudo_proj_True n) ` (f -` {f x}) \\<union> (pseudo_proj_False n) ` (f -` {f x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n ` {y. f y = f x} \\<union>\n    pseudo_proj_False n ` {y. f y = f x} =\n    pseudo_proj_True n ` f -` {f x} \\<union>\n    pseudo_proj_False n ` f -` {f x}", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True n ` {y. f y = f x} \\<union>\n  pseudo_proj_False n ` {y. f y = f x} =\n  pseudo_proj_True n ` f -` {f x} \\<union> pseudo_proj_False n ` f -` {f x}\n\ngoal (1 subgoal):\n 1. range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x} =\n    pseudo_proj_True n ` f -` {f x} \\<union>\n    pseudo_proj_False n ` f -` {f x}", "finally"], ["proof (chain)\npicking this:\n  range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x} =\n  pseudo_proj_True n ` f -` {f x} \\<union> pseudo_proj_False n ` f -` {f x}", "show ?thesis"], ["proof (prove)\nusing this:\n  range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x} =\n  pseudo_proj_True n ` f -` {f x} \\<union> pseudo_proj_False n ` f -` {f x}\n\ngoal (1 subgoal):\n 1. range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x} =\n    pseudo_proj_True n ` f -` {f x} \\<union>\n    pseudo_proj_False n ` f -` {f x}", "."], ["proof (state)\nthis:\n  range (pseudo_proj_True (Suc n)) \\<inter> f -` {f x} =\n  pseudo_proj_True n ` f -` {f x} \\<union> pseudo_proj_False n ` f -` {f x}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) pseudo_proj_preimage:\n  assumes \"g\\<in> measurable (F n) N\"\n  and \"set_discriminating n g N\"\n  shows \"pseudo_proj_True n -` (g -` {g z}) = pseudo_proj_True n -` (pseudo_proj_True n `(g -` {g z}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` g -` {g z} =\n    pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. pseudo_proj_True n -` g -` {g z}\n    \\<subseteq> pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}\n 2. pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}\n    \\<subseteq> pseudo_proj_True n -` g -` {g z}", "show \"pseudo_proj_True n -` g -` {g z} \\<subseteq> pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` g -` {g z}\n    \\<subseteq> pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}", "assume \"w\\<in> pseudo_proj_True n -` g -` {g z}\""], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_True n -` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}", "have \"pseudo_proj_True n w = pseudo_proj_True n (pseudo_proj_True n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n w = pseudo_proj_True n (pseudo_proj_True n w)", "by (simp add: pseudo_proj_True_proj)"], ["proof (state)\nthis:\n  pseudo_proj_True n w = pseudo_proj_True n (pseudo_proj_True n w)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}", "also"], ["proof (state)\nthis:\n  pseudo_proj_True n w = pseudo_proj_True n (pseudo_proj_True n w)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}", "have \"... \\<in> pseudo_proj_True n `(g -` {g z})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n (pseudo_proj_True n w)\n    \\<in> pseudo_proj_True n ` g -` {g z}", "using \\<open>w\\<in> pseudo_proj_True n -` g -` {g z}\\<close>"], ["proof (prove)\nusing this:\n  w \\<in> pseudo_proj_True n -` g -` {g z}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n (pseudo_proj_True n w)\n    \\<in> pseudo_proj_True n ` g -` {g z}", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True n (pseudo_proj_True n w)\n  \\<in> pseudo_proj_True n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}", "finally"], ["proof (chain)\npicking this:\n  pseudo_proj_True n w \\<in> pseudo_proj_True n ` g -` {g z}", "have \"pseudo_proj_True n w \\<in> pseudo_proj_True n `(g -` {g z})\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n w \\<in> pseudo_proj_True n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n w \\<in> pseudo_proj_True n ` g -` {g z}", "."], ["proof (state)\nthis:\n  pseudo_proj_True n w \\<in> pseudo_proj_True n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}", "thus \"w\\<in> pseudo_proj_True n -` (pseudo_proj_True n `(g -` {g z}))\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n w \\<in> pseudo_proj_True n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. w \\<in> pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}", "by simp"], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_True n -` g -` {g z}\n  \\<subseteq> pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}\n    \\<subseteq> pseudo_proj_True n -` g -` {g z}", "show \"pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z} \\<subseteq> pseudo_proj_True n -` g -` {g z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}\n    \\<subseteq> pseudo_proj_True n -` g -` {g z}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` g -` {g z}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` g -` {g z}", "assume \"w \\<in> pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}\""], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` g -` {g z}", "hence \"\\<exists>y. pseudo_proj_True n w = pseudo_proj_True n y \\<and> g y = g z\""], ["proof (prove)\nusing this:\n  w \\<in> pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<exists>y. pseudo_proj_True n w = pseudo_proj_True n y \\<and> g y = g z", "by auto"], ["proof (state)\nthis:\n  \\<exists>y. pseudo_proj_True n w = pseudo_proj_True n y \\<and> g y = g z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` g -` {g z}", "from this"], ["proof (chain)\npicking this:\n  \\<exists>y. pseudo_proj_True n w = pseudo_proj_True n y \\<and> g y = g z", "obtain y where \"pseudo_proj_True n w = pseudo_proj_True n y\" and \"g y = g z\""], ["proof (prove)\nusing this:\n  \\<exists>y. pseudo_proj_True n w = pseudo_proj_True n y \\<and> g y = g z\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>pseudo_proj_True n w = pseudo_proj_True n y;\n         g y = g z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True n w = pseudo_proj_True n y\n  g y = g z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` g -` {g z}", "have \"g (pseudo_proj_True n w) = g (pseudo_proj_True n y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (pseudo_proj_True n w) = g (pseudo_proj_True n y)", "using \\<open>pseudo_proj_True n w = pseudo_proj_True n y\\<close>"], ["proof (prove)\nusing this:\n  pseudo_proj_True n w = pseudo_proj_True n y\n\ngoal (1 subgoal):\n 1. g (pseudo_proj_True n w) = g (pseudo_proj_True n y)", "by simp"], ["proof (state)\nthis:\n  g (pseudo_proj_True n w) = g (pseudo_proj_True n y)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` g -` {g z}", "also"], ["proof (state)\nthis:\n  g (pseudo_proj_True n w) = g (pseudo_proj_True n y)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` g -` {g z}", "have \"... = g y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (pseudo_proj_True n y) = g y", "using assms nat_filtration_not_borel_info natural_filtration"], ["proof (prove)\nusing this:\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  \\<lbrakk>?f \\<in> nat_filtration ?n \\<rightarrow>\\<^sub>M ?N;\n   set_discriminating ?n ?f ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<circ> pseudo_proj_True ?n = ?f\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. g (pseudo_proj_True n y) = g y", "by (metis comp_apply)"], ["proof (state)\nthis:\n  g (pseudo_proj_True n y) = g y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` g -` {g z}", "also"], ["proof (state)\nthis:\n  g (pseudo_proj_True n y) = g y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` g -` {g z}", "have \"... = g z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g y = g z", "using \\<open>g y = g z\\<close>"], ["proof (prove)\nusing this:\n  g y = g z\n\ngoal (1 subgoal):\n 1. g y = g z", "."], ["proof (state)\nthis:\n  g y = g z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` g -` {g z}", "finally"], ["proof (chain)\npicking this:\n  g (pseudo_proj_True n w) = g z", "have \"g (pseudo_proj_True n w) = g z\""], ["proof (prove)\nusing this:\n  g (pseudo_proj_True n w) = g z\n\ngoal (1 subgoal):\n 1. g (pseudo_proj_True n w) = g z", "."], ["proof (state)\nthis:\n  g (pseudo_proj_True n w) = g z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -`\n               pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` g -` {g z}", "thus \"w\\<in> pseudo_proj_True n -` g -` {g z}\""], ["proof (prove)\nusing this:\n  g (pseudo_proj_True n w) = g z\n\ngoal (1 subgoal):\n 1. w \\<in> pseudo_proj_True n -` g -` {g z}", "by simp"], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_True n -` g -` {g z}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}\n  \\<subseteq> pseudo_proj_True n -` g -` {g z}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) borel_pseudo_proj_preimage:\n  fixes g::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"g\\<in> borel_measurable (F n)\"\n  shows \"pseudo_proj_True n -` (g -` {g z}) = pseudo_proj_True n -` (pseudo_proj_True n `(g -` {g z}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` g -` {g z} =\n    pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}", "using pseudo_proj_preimage[of g n borel z] set_discriminating_if[of g n] natural_filtration assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>g \\<in> borel_measurable (F n);\n   set_discriminating n g borel\\<rbrakk>\n  \\<Longrightarrow> pseudo_proj_True n -` g -` {g z} =\n                    pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}\n  g \\<in> borel_measurable (nat_filtration n) \\<Longrightarrow>\n  set_discriminating n g borel\n  F = nat_filtration\n  g \\<in> borel_measurable (F n)\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` g -` {g z} =\n    pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}", "by simp"], ["", "lemma (in infinite_cts_filtration) pseudo_proj_False_preimage:\n  assumes \"g\\<in> measurable (F n) N\"\n  and \"set_discriminating n g N\"\n  shows \"pseudo_proj_False n -` (g -` {g z}) = pseudo_proj_False n -` (pseudo_proj_False n `(g -` {g z}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` g -` {g z} =\n    pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. pseudo_proj_False n -` g -` {g z}\n    \\<subseteq> pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}\n 2. pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}\n    \\<subseteq> pseudo_proj_False n -` g -` {g z}", "show \"pseudo_proj_False n -` g -` {g z} \\<subseteq> pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` g -` {g z}\n    \\<subseteq> pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}", "assume \"w\\<in> pseudo_proj_False n -` g -` {g z}\""], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_False n -` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}", "have \"pseudo_proj_False n w = pseudo_proj_False n (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n w = pseudo_proj_False n (pseudo_proj_False n w)", "using pseudo_proj_False_def pseudo_proj_False_stake"], ["proof (prove)\nusing this:\n  pseudo_proj_False ?n = (\\<lambda>w. (stake ?n w @ [False]) @- sconst True)\n  stake ?n (pseudo_proj_False ?n ?w) = stake ?n ?w\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n w = pseudo_proj_False n (pseudo_proj_False n w)", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_False n w = pseudo_proj_False n (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}", "also"], ["proof (state)\nthis:\n  pseudo_proj_False n w = pseudo_proj_False n (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}", "have \"... \\<in> pseudo_proj_False n `(g -` {g z})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n (pseudo_proj_False n w)\n    \\<in> pseudo_proj_False n ` g -` {g z}", "using \\<open>w\\<in> pseudo_proj_False n -` g -` {g z}\\<close>"], ["proof (prove)\nusing this:\n  w \\<in> pseudo_proj_False n -` g -` {g z}\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n (pseudo_proj_False n w)\n    \\<in> pseudo_proj_False n ` g -` {g z}", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_False n (pseudo_proj_False n w)\n  \\<in> pseudo_proj_False n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}", "finally"], ["proof (chain)\npicking this:\n  pseudo_proj_False n w \\<in> pseudo_proj_False n ` g -` {g z}", "have \"pseudo_proj_False n w \\<in> pseudo_proj_False n `(g -` {g z})\""], ["proof (prove)\nusing this:\n  pseudo_proj_False n w \\<in> pseudo_proj_False n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n w \\<in> pseudo_proj_False n ` g -` {g z}", "."], ["proof (state)\nthis:\n  pseudo_proj_False n w \\<in> pseudo_proj_False n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}", "thus \"w\\<in> pseudo_proj_False n -` (pseudo_proj_False n `(g -` {g z}))\""], ["proof (prove)\nusing this:\n  pseudo_proj_False n w \\<in> pseudo_proj_False n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. w \\<in> pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}", "by simp"], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_False n -` g -` {g z}\n  \\<subseteq> pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}\n    \\<subseteq> pseudo_proj_False n -` g -` {g z}", "show \"pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z} \\<subseteq> pseudo_proj_False n -` g -` {g z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}\n    \\<subseteq> pseudo_proj_False n -` g -` {g z}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -`\n               pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` g -` {g z}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -`\n               pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` g -` {g z}", "assume \"w \\<in> pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}\""], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -`\n               pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` g -` {g z}", "hence \"\\<exists>y. pseudo_proj_False n w = pseudo_proj_False n y \\<and> g y = g z\""], ["proof (prove)\nusing this:\n  w \\<in> pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       pseudo_proj_False n w = pseudo_proj_False n y \\<and> g y = g z", "by auto"], ["proof (state)\nthis:\n  \\<exists>y. pseudo_proj_False n w = pseudo_proj_False n y \\<and> g y = g z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -`\n               pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` g -` {g z}", "from this"], ["proof (chain)\npicking this:\n  \\<exists>y. pseudo_proj_False n w = pseudo_proj_False n y \\<and> g y = g z", "obtain y where \"pseudo_proj_False n w = pseudo_proj_False n y\" and \"g y = g z\""], ["proof (prove)\nusing this:\n  \\<exists>y. pseudo_proj_False n w = pseudo_proj_False n y \\<and> g y = g z\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>pseudo_proj_False n w = pseudo_proj_False n y;\n         g y = g z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_False n w = pseudo_proj_False n y\n  g y = g z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -`\n               pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` g -` {g z}", "have \"g (pseudo_proj_False n w) = g (pseudo_proj_False n y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (pseudo_proj_False n w) = g (pseudo_proj_False n y)", "using \\<open>pseudo_proj_False n w = pseudo_proj_False n y\\<close>"], ["proof (prove)\nusing this:\n  pseudo_proj_False n w = pseudo_proj_False n y\n\ngoal (1 subgoal):\n 1. g (pseudo_proj_False n w) = g (pseudo_proj_False n y)", "by simp"], ["proof (state)\nthis:\n  g (pseudo_proj_False n w) = g (pseudo_proj_False n y)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -`\n               pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` g -` {g z}", "also"], ["proof (state)\nthis:\n  g (pseudo_proj_False n w) = g (pseudo_proj_False n y)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -`\n               pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` g -` {g z}", "have \"... = g y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (pseudo_proj_False n y) = g y", "using assms nat_filtration_not_borel_info' natural_filtration"], ["proof (prove)\nusing this:\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  \\<lbrakk>?f \\<in> nat_filtration ?n \\<rightarrow>\\<^sub>M ?N;\n   set_discriminating ?n ?f ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<circ> pseudo_proj_False ?n = ?f\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. g (pseudo_proj_False n y) = g y", "by (metis comp_apply)"], ["proof (state)\nthis:\n  g (pseudo_proj_False n y) = g y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -`\n               pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` g -` {g z}", "also"], ["proof (state)\nthis:\n  g (pseudo_proj_False n y) = g y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -`\n               pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` g -` {g z}", "have \"... = g z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g y = g z", "using \\<open>g y = g z\\<close>"], ["proof (prove)\nusing this:\n  g y = g z\n\ngoal (1 subgoal):\n 1. g y = g z", "."], ["proof (state)\nthis:\n  g y = g z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -`\n               pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` g -` {g z}", "finally"], ["proof (chain)\npicking this:\n  g (pseudo_proj_False n w) = g z", "have \"g (pseudo_proj_False n w) = g z\""], ["proof (prove)\nusing this:\n  g (pseudo_proj_False n w) = g z\n\ngoal (1 subgoal):\n 1. g (pseudo_proj_False n w) = g z", "."], ["proof (state)\nthis:\n  g (pseudo_proj_False n w) = g z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -`\n               pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` g -` {g z}", "thus \"w\\<in> pseudo_proj_False n -` g -` {g z}\""], ["proof (prove)\nusing this:\n  g (pseudo_proj_False n w) = g z\n\ngoal (1 subgoal):\n 1. w \\<in> pseudo_proj_False n -` g -` {g z}", "by simp"], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_False n -` g -` {g z}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}\n  \\<subseteq> pseudo_proj_False n -` g -` {g z}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) borel_pseudo_proj_False_preimage:\n  fixes g::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"g\\<in> borel_measurable (F n)\"\n  shows \"pseudo_proj_False n -` (g -` {g z}) = pseudo_proj_False n -` (pseudo_proj_False n `(g -` {g z}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` g -` {g z} =\n    pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}", "using pseudo_proj_False_preimage[of g n borel z] set_discriminating_if[of g n] natural_filtration assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>g \\<in> borel_measurable (F n);\n   set_discriminating n g borel\\<rbrakk>\n  \\<Longrightarrow> pseudo_proj_False n -` g -` {g z} =\n                    pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}\n  g \\<in> borel_measurable (nat_filtration n) \\<Longrightarrow>\n  set_discriminating n g borel\n  F = nat_filtration\n  g \\<in> borel_measurable (F n)\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` g -` {g z} =\n    pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}", "by simp"], ["", "lemma (in infinite_cts_filtration) pseudo_proj_preimage':\n  assumes \"g\\<in> measurable (F n) N\"\n  and \"set_discriminating n g N\"\n  shows \"pseudo_proj_True n -` (g -` {g z}) = g -` {g z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` g -` {g z} = g -` {g z}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. pseudo_proj_True n -` g -` {g z} \\<subseteq> g -` {g z}\n 2. g -` {g z} \\<subseteq> pseudo_proj_True n -` g -` {g z}", "show \"pseudo_proj_True n -` g -` {g z} \\<subseteq> g -` {g z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` g -` {g z} \\<subseteq> g -` {g z}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> g -` {g z}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> g -` {g z}", "assume \"w\\<in> pseudo_proj_True n -` g -` {g z}\""], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_True n -` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> g -` {g z}", "have \"g w = g (pseudo_proj_True n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g w = g (pseudo_proj_True n w)", "using assms nat_filtration_not_borel_info natural_filtration"], ["proof (prove)\nusing this:\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  \\<lbrakk>?f \\<in> nat_filtration ?n \\<rightarrow>\\<^sub>M ?N;\n   set_discriminating ?n ?f ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<circ> pseudo_proj_True ?n = ?f\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. g w = g (pseudo_proj_True n w)", "by (metis comp_apply)"], ["proof (state)\nthis:\n  g w = g (pseudo_proj_True n w)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> g -` {g z}", "also"], ["proof (state)\nthis:\n  g w = g (pseudo_proj_True n w)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> g -` {g z}", "have \"... = g z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (pseudo_proj_True n w) = g z", "using \\<open>w\\<in> pseudo_proj_True n -` g -` {g z}\\<close>"], ["proof (prove)\nusing this:\n  w \\<in> pseudo_proj_True n -` g -` {g z}\n\ngoal (1 subgoal):\n 1. g (pseudo_proj_True n w) = g z", "by simp"], ["proof (state)\nthis:\n  g (pseudo_proj_True n w) = g z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> g -` {g z}", "finally"], ["proof (chain)\npicking this:\n  g w = g z", "have \"g w = g z\""], ["proof (prove)\nusing this:\n  g w = g z\n\ngoal (1 subgoal):\n 1. g w = g z", "."], ["proof (state)\nthis:\n  g w = g z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> g -` {g z}", "thus \"w\\<in> g -`{g z}\""], ["proof (prove)\nusing this:\n  g w = g z\n\ngoal (1 subgoal):\n 1. w \\<in> g -` {g z}", "by simp"], ["proof (state)\nthis:\n  w \\<in> g -` {g z}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_True n -` g -` {g z} \\<subseteq> g -` {g z}\n\ngoal (1 subgoal):\n 1. g -` {g z} \\<subseteq> pseudo_proj_True n -` g -` {g z}", "show \"g -` {g z} \\<subseteq> pseudo_proj_True n -` g -` {g z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g -` {g z} \\<subseteq> pseudo_proj_True n -` g -` {g z}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` g -` {g z}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` g -` {g z}", "assume \"w \\<in> g -` {g z}\""], ["proof (state)\nthis:\n  w \\<in> g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` g -` {g z}", "have \"g (pseudo_proj_True n w) = g w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (pseudo_proj_True n w) = g w", "using assms nat_filtration_not_borel_info natural_filtration"], ["proof (prove)\nusing this:\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  \\<lbrakk>?f \\<in> nat_filtration ?n \\<rightarrow>\\<^sub>M ?N;\n   set_discriminating ?n ?f ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<circ> pseudo_proj_True ?n = ?f\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. g (pseudo_proj_True n w) = g w", "by (metis comp_apply)"], ["proof (state)\nthis:\n  g (pseudo_proj_True n w) = g w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` g -` {g z}", "also"], ["proof (state)\nthis:\n  g (pseudo_proj_True n w) = g w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` g -` {g z}", "have \"... = g z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g w = g z", "using \\<open>w\\<in> g -`{g z}\\<close>"], ["proof (prove)\nusing this:\n  w \\<in> g -` {g z}\n\ngoal (1 subgoal):\n 1. g w = g z", "by simp"], ["proof (state)\nthis:\n  g w = g z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` g -` {g z}", "finally"], ["proof (chain)\npicking this:\n  g (pseudo_proj_True n w) = g z", "have \"g (pseudo_proj_True n w) = g z\""], ["proof (prove)\nusing this:\n  g (pseudo_proj_True n w) = g z\n\ngoal (1 subgoal):\n 1. g (pseudo_proj_True n w) = g z", "."], ["proof (state)\nthis:\n  g (pseudo_proj_True n w) = g z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True n -` g -` {g z}", "thus \"w\\<in> pseudo_proj_True n -` g -` {g z}\""], ["proof (prove)\nusing this:\n  g (pseudo_proj_True n w) = g z\n\ngoal (1 subgoal):\n 1. w \\<in> pseudo_proj_True n -` g -` {g z}", "by simp"], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_True n -` g -` {g z}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g -` {g z} \\<subseteq> pseudo_proj_True n -` g -` {g z}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) borel_pseudo_proj_preimage':\n  fixes g::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"g\\<in> borel_measurable (F n)\"\n  shows \"pseudo_proj_True n -` (g -` {g z}) = g -` {g z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` g -` {g z} = g -` {g z}", "using assms natural_filtration"], ["proof (prove)\nusing this:\n  g \\<in> borel_measurable (F n)\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` g -` {g z} = g -` {g z}", "by (simp add: set_discriminating_if pseudo_proj_preimage')"], ["", "lemma (in infinite_cts_filtration) pseudo_proj_False_preimage':\n  assumes \"g\\<in> measurable (F n) N\"\n  and \"set_discriminating n g N\"\n  shows \"pseudo_proj_False n -` (g -` {g z}) = g -` {g z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` g -` {g z} = g -` {g z}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. pseudo_proj_False n -` g -` {g z} \\<subseteq> g -` {g z}\n 2. g -` {g z} \\<subseteq> pseudo_proj_False n -` g -` {g z}", "show \"pseudo_proj_False n -` g -` {g z} \\<subseteq> g -` {g z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` g -` {g z} \\<subseteq> g -` {g z}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> g -` {g z}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> g -` {g z}", "assume \"w\\<in> pseudo_proj_False n -` g -` {g z}\""], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_False n -` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> g -` {g z}", "have \"g w = g (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g w = g (pseudo_proj_False n w)", "using assms nat_filtration_not_borel_info' natural_filtration"], ["proof (prove)\nusing this:\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  \\<lbrakk>?f \\<in> nat_filtration ?n \\<rightarrow>\\<^sub>M ?N;\n   set_discriminating ?n ?f ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<circ> pseudo_proj_False ?n = ?f\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. g w = g (pseudo_proj_False n w)", "by (metis comp_apply)"], ["proof (state)\nthis:\n  g w = g (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> g -` {g z}", "also"], ["proof (state)\nthis:\n  g w = g (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> g -` {g z}", "have \"... = g z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (pseudo_proj_False n w) = g z", "using \\<open>w\\<in> pseudo_proj_False n -` g -` {g z}\\<close>"], ["proof (prove)\nusing this:\n  w \\<in> pseudo_proj_False n -` g -` {g z}\n\ngoal (1 subgoal):\n 1. g (pseudo_proj_False n w) = g z", "by simp"], ["proof (state)\nthis:\n  g (pseudo_proj_False n w) = g z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> g -` {g z}", "finally"], ["proof (chain)\npicking this:\n  g w = g z", "have \"g w = g z\""], ["proof (prove)\nusing this:\n  g w = g z\n\ngoal (1 subgoal):\n 1. g w = g z", "."], ["proof (state)\nthis:\n  g w = g z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_False n -` g -` {g z} \\<Longrightarrow>\n       x \\<in> g -` {g z}", "thus \"w\\<in> g -`{g z}\""], ["proof (prove)\nusing this:\n  g w = g z\n\ngoal (1 subgoal):\n 1. w \\<in> g -` {g z}", "by simp"], ["proof (state)\nthis:\n  w \\<in> g -` {g z}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_False n -` g -` {g z} \\<subseteq> g -` {g z}\n\ngoal (1 subgoal):\n 1. g -` {g z} \\<subseteq> pseudo_proj_False n -` g -` {g z}", "show \"g -` {g z} \\<subseteq> pseudo_proj_False n -` g -` {g z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g -` {g z} \\<subseteq> pseudo_proj_False n -` g -` {g z}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` g -` {g z}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` g -` {g z}", "assume \"w \\<in> g -` {g z}\""], ["proof (state)\nthis:\n  w \\<in> g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` g -` {g z}", "have \"g (pseudo_proj_False n w) = g w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (pseudo_proj_False n w) = g w", "using assms nat_filtration_not_borel_info' natural_filtration"], ["proof (prove)\nusing this:\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  \\<lbrakk>?f \\<in> nat_filtration ?n \\<rightarrow>\\<^sub>M ?N;\n   set_discriminating ?n ?f ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<circ> pseudo_proj_False ?n = ?f\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. g (pseudo_proj_False n w) = g w", "by (metis comp_apply)"], ["proof (state)\nthis:\n  g (pseudo_proj_False n w) = g w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` g -` {g z}", "also"], ["proof (state)\nthis:\n  g (pseudo_proj_False n w) = g w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` g -` {g z}", "have \"... = g z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g w = g z", "using \\<open>w\\<in> g -`{g z}\\<close>"], ["proof (prove)\nusing this:\n  w \\<in> g -` {g z}\n\ngoal (1 subgoal):\n 1. g w = g z", "by simp"], ["proof (state)\nthis:\n  g w = g z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` g -` {g z}", "finally"], ["proof (chain)\npicking this:\n  g (pseudo_proj_False n w) = g z", "have \"g (pseudo_proj_False n w) = g z\""], ["proof (prove)\nusing this:\n  g (pseudo_proj_False n w) = g z\n\ngoal (1 subgoal):\n 1. g (pseudo_proj_False n w) = g z", "."], ["proof (state)\nthis:\n  g (pseudo_proj_False n w) = g z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> g -` {g z} \\<Longrightarrow>\n       x \\<in> pseudo_proj_False n -` g -` {g z}", "thus \"w\\<in> pseudo_proj_False n -` g -` {g z}\""], ["proof (prove)\nusing this:\n  g (pseudo_proj_False n w) = g z\n\ngoal (1 subgoal):\n 1. w \\<in> pseudo_proj_False n -` g -` {g z}", "by simp"], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_False n -` g -` {g z}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g -` {g z} \\<subseteq> pseudo_proj_False n -` g -` {g z}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) borel_pseudo_proj_False_preimage':\n  fixes g::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"g\\<in> borel_measurable (F n)\"\n  shows \"pseudo_proj_False n -` (g -` {g z}) = g -` {g z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` g -` {g z} = g -` {g z}", "using assms natural_filtration"], ["proof (prove)\nusing this:\n  g \\<in> borel_measurable (F n)\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` g -` {g z} = g -` {g z}", "by (simp add: set_discriminating_if pseudo_proj_False_preimage')"], ["", "subsubsection \\<open>Integrals and conditional expectations on the natural filtration\\<close>"], ["", "lemma (in infinite_cts_filtration) cst_integral:\n  fixes f::\"bool stream\\<Rightarrow>real\"\n  assumes \"f \\<in> borel_measurable (F 0)\"\n  and \"f (sconst True) = c\"\nshows \"has_bochner_integral M f c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "have \"space M = space (F 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space M = space (F 0)", "using filtration"], ["proof (prove)\nusing this:\n  Filtration.filtration M F\n\ngoal (1 subgoal):\n 1. space M = space (F 0)", "by (simp add: filtration_def subalgebra_def)"], ["proof (state)\nthis:\n  space M = space (F 0)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "have \"f\\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable borel f", "using assms(1) nat_filtration_borel_measurable_integrable natural_filtration"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F 0)\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  integrable M ?f\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. random_variable borel f", "by blast"], ["proof (state)\nthis:\n  random_variable borel f\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "have \"\\<exists>d. \\<forall>x\\<in> space (F 0). f x = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>d. \\<forall>x\\<in>space (F 0). f x = d", "proof (rule triv_measurable_cst)"], ["proof (state)\ngoal (4 subgoals):\n 1. space (F 0) = space ?M\n 2. space ?M \\<noteq> {}\n 3. sets (F 0) = {{}, space ?M}\n 4. f \\<in> borel_measurable (F 0)", "show \"space (F 0) = space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space (F 0) = space M", "using \\<open>space M = space (F 0)\\<close>"], ["proof (prove)\nusing this:\n  space M = space (F 0)\n\ngoal (1 subgoal):\n 1. space (F 0) = space M", ".."], ["proof (state)\nthis:\n  space (F 0) = space M\n\ngoal (3 subgoals):\n 1. space M \\<noteq> {}\n 2. sets (F 0) = {{}, space M}\n 3. f \\<in> borel_measurable (F 0)", "show \"sets (F 0) = {{}, space M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (F 0) = {{}, space M}", "using info_disc_filtr"], ["proof (prove)\nusing this:\n  disc_filtr M F \\<and> sets (F \\<bottom>) = {{}, space M}\n\ngoal (1 subgoal):\n 1. sets (F 0) = {{}, space M}", "by (simp add: init_triv_filt_def bot_nat_def)"], ["proof (state)\nthis:\n  sets (F 0) = {{}, space M}\n\ngoal (2 subgoals):\n 1. space M \\<noteq> {}\n 2. f \\<in> borel_measurable (F 0)", "show \"f \\<in> borel_measurable (F 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (F 0)", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F 0)\n  f (sconst True) = c\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (F 0)", "by simp"], ["proof (state)\nthis:\n  f \\<in> borel_measurable (F 0)\n\ngoal (1 subgoal):\n 1. space M \\<noteq> {}", "show \"space M \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space M \\<noteq> {}", "by (simp add:not_empty)"], ["proof (state)\nthis:\n  space M \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>d. \\<forall>x\\<in>space (F 0). f x = d\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "from this"], ["proof (chain)\npicking this:\n  \\<exists>d. \\<forall>x\\<in>space (F 0). f x = d", "obtain d where \"\\<forall>x\\<in> space (F 0). f x = d\""], ["proof (prove)\nusing this:\n  \\<exists>d. \\<forall>x\\<in>space (F 0). f x = d\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<forall>x\\<in>space (F 0). f x = d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>x\\<in>space (F 0). f x = d\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "hence \"\\<forall> x\\<in> space M. f x = d\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>space (F 0). f x = d\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>space M. f x = d", "using \\<open>space M = space (F 0)\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>space (F 0). f x = d\n  space M = space (F 0)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>space M. f x = d", "by simp"], ["proof (state)\nthis:\n  \\<forall>x\\<in>space M. f x = d\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "hence \"f (sconst True) = d\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>space M. f x = d\n\ngoal (1 subgoal):\n 1. f (sconst True) = d", "using bernoulli_stream_space bernoulli"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>space M. f x = d\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n  M = bernoulli_stream p\n\ngoal (1 subgoal):\n 1. f (sconst True) = d", "by simp"], ["proof (state)\nthis:\n  f (sconst True) = d\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "hence \"c = d\""], ["proof (prove)\nusing this:\n  f (sconst True) = d\n\ngoal (1 subgoal):\n 1. c = d", "using assms"], ["proof (prove)\nusing this:\n  f (sconst True) = d\n  f \\<in> borel_measurable (F 0)\n  f (sconst True) = c\n\ngoal (1 subgoal):\n 1. c = d", "by simp"], ["proof (state)\nthis:\n  c = d\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "hence \"\\<forall>x\\<in> space M. f x = c\""], ["proof (prove)\nusing this:\n  c = d\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>space M. f x = c", "using \\<open>\\<forall> x\\<in> space M. f x = d\\<close> \\<open>c = d\\<close>"], ["proof (prove)\nusing this:\n  c = d\n  \\<forall>x\\<in>space M. f x = d\n  c = d\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>space M. f x = c", "by simp"], ["proof (state)\nthis:\n  \\<forall>x\\<in>space M. f x = c\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "have \"f\\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable borel f", "using assms(1) nat_filtration_borel_measurable_integrable natural_filtration"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F 0)\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  integrable M ?f\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. random_variable borel f", "by blast"], ["proof (state)\nthis:\n  random_variable borel f\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "have \"integral\\<^sup>N M f = integral\\<^sup>N M (\\<lambda>w. c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n    \\<integral>\\<^sup>+ x. ennreal c \\<partial>M", "proof (rule nn_integral_cong)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> space M \\<Longrightarrow> ennreal (f x) = ennreal c", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> space M \\<Longrightarrow> ennreal (f x) = ennreal c", "assume \"x\\<in> space M\""], ["proof (state)\nthis:\n  x \\<in> space M\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> space M \\<Longrightarrow> ennreal (f x) = ennreal c", "thus \"ennreal (f x) = ennreal c\""], ["proof (prove)\nusing this:\n  x \\<in> space M\n\ngoal (1 subgoal):\n 1. ennreal (f x) = ennreal c", "using \\<open>\\<forall> x\\<in> space M. f x = d\\<close> \\<open>c = d\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> space M\n  \\<forall>x\\<in>space M. f x = d\n  c = d\n\ngoal (1 subgoal):\n 1. ennreal (f x) = ennreal c", "by auto"], ["proof (state)\nthis:\n  ennreal (f x) = ennreal c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n  \\<integral>\\<^sup>+ x. ennreal c \\<partial>M\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n  \\<integral>\\<^sup>+ x. ennreal c \\<partial>M\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "have \"... = integral\\<^sup>N M (\\<lambda>w. c * (indicator (space M)) w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal c \\<partial>M =\n    \\<integral>\\<^sup>+ x. ennreal (c * indicat_real (space M) x)\n                       \\<partial>M", "by (simp add: nn_integral_cong)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal c \\<partial>M =\n  \\<integral>\\<^sup>+ x. ennreal (c * indicat_real (space M) x) \\<partial>M\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal c \\<partial>M =\n  \\<integral>\\<^sup>+ x. ennreal (c * indicat_real (space M) x) \\<partial>M\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "have \"... = ennreal c * emeasure M (space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (c * indicat_real (space M) x)\n                       \\<partial>M =\n    ennreal c * emeasure M (space M)", "using nn_integral_cmult_indicator[of \"space M\" M c]"], ["proof (prove)\nusing this:\n  space M \\<in> events \\<Longrightarrow>\n  \\<integral>\\<^sup>+x\\<in>space M. ennreal c\\<partial>M =\n  ennreal c * emeasure M (space M)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (c * indicat_real (space M) x)\n                       \\<partial>M =\n    ennreal c * emeasure M (space M)", "by (simp add: nn_integral_cong)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (c * indicat_real (space M) x)\n                     \\<partial>M =\n  ennreal c * emeasure M (space M)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (c * indicat_real (space M) x)\n                     \\<partial>M =\n  ennreal c * emeasure M (space M)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "have \"... = ennreal c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal c * emeasure M (space M) = ennreal c", "by (simp add: emeasure_space_1)"], ["proof (state)\nthis:\n  ennreal c * emeasure M (space M) = ennreal c\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "finally"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M = ennreal c", "have \"integral\\<^sup>N M f = ennreal c\""], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M = ennreal c\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M = ennreal c", "."], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M = ennreal c\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "hence \"integral\\<^sup>N M (\\<lambda>x. - f x) = ennreal (-c)\""], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M = ennreal c\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (- f x) \\<partial>M = ennreal (- c)", "by (simp add: \\<open>\\<forall>x\\<in>space M. f x = d\\<close> \\<open>c = d\\<close> emeasure_space_1 nn_integral_cong)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (- f x) \\<partial>M = ennreal (- c)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "show \"has_bochner_integral M f c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "proof (cases \"0 \\<le> c\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> c \\<Longrightarrow> has_bochner_integral M f c\n 2. \\<not> 0 \\<le> c \\<Longrightarrow> has_bochner_integral M f c", "case True"], ["proof (state)\nthis:\n  0 \\<le> c\n\ngoal (2 subgoals):\n 1. 0 \\<le> c \\<Longrightarrow> has_bochner_integral M f c\n 2. \\<not> 0 \\<le> c \\<Longrightarrow> has_bochner_integral M f c", "hence \"AE x in M. 0 \\<le> f x\""], ["proof (prove)\nusing this:\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. AE x in M. 0 \\<le> f x", "using \\<open>\\<forall>x\\<in> space M. f x = c\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> c\n  \\<forall>x\\<in>space M. f x = c\n\ngoal (1 subgoal):\n 1. AE x in M. 0 \\<le> f x", "by simp"], ["proof (state)\nthis:\n  AE x in M. 0 \\<le> f x\n\ngoal (2 subgoals):\n 1. 0 \\<le> c \\<Longrightarrow> has_bochner_integral M f c\n 2. \\<not> 0 \\<le> c \\<Longrightarrow> has_bochner_integral M f c", "thus ?thesis"], ["proof (prove)\nusing this:\n  AE x in M. 0 \\<le> f x\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "using \\<open>random_variable borel f\\<close> True\n      \\<open>integral\\<^sup>N M f = ennreal c\\<close>"], ["proof (prove)\nusing this:\n  AE x in M. 0 \\<le> f x\n  random_variable borel f\n  0 \\<le> c\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M = ennreal c\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "by (simp add: has_bochner_integral_nn_integral)"], ["proof (state)\nthis:\n  has_bochner_integral M f c\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> c \\<Longrightarrow> has_bochner_integral M f c", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> c \\<Longrightarrow> has_bochner_integral M f c", "case False"], ["proof (state)\nthis:\n  \\<not> 0 \\<le> c\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> c \\<Longrightarrow> has_bochner_integral M f c", "let ?mf = \"\\<lambda>w. - f w\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> c \\<Longrightarrow> has_bochner_integral M f c", "have \"AE x in M. 0 \\<le> ?mf x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. 0 \\<le> - f x", "using \\<open>\\<forall>x\\<in> space M. f x = c\\<close> False"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>space M. f x = c\n  \\<not> 0 \\<le> c\n\ngoal (1 subgoal):\n 1. AE x in M. 0 \\<le> - f x", "by simp"], ["proof (state)\nthis:\n  AE x in M. 0 \\<le> - f x\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> c \\<Longrightarrow> has_bochner_integral M f c", "hence \"has_bochner_integral M ?mf (-c)\""], ["proof (prove)\nusing this:\n  AE x in M. 0 \\<le> - f x\n\ngoal (1 subgoal):\n 1. has_bochner_integral M (\\<lambda>w. - f w) (- c)", "using \\<open>random_variable borel f\\<close> False\n      \\<open>integral\\<^sup>N M (\\<lambda>x. - f x) = ennreal (-c)\\<close>"], ["proof (prove)\nusing this:\n  AE x in M. 0 \\<le> - f x\n  random_variable borel f\n  \\<not> 0 \\<le> c\n  \\<integral>\\<^sup>+ x. ennreal (- f x) \\<partial>M = ennreal (- c)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M (\\<lambda>w. - f w) (- c)", "by (simp add: has_bochner_integral_nn_integral)"], ["proof (state)\nthis:\n  has_bochner_integral M (\\<lambda>w. - f w) (- c)\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> c \\<Longrightarrow> has_bochner_integral M f c", "thus ?thesis"], ["proof (prove)\nusing this:\n  has_bochner_integral M (\\<lambda>w. - f w) (- c)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "using has_bochner_integral_minus"], ["proof (prove)\nusing this:\n  has_bochner_integral M (\\<lambda>w. - f w) (- c)\n  has_bochner_integral ?M ?f ?x \\<Longrightarrow>\n  has_bochner_integral ?M (\\<lambda>x. - ?f x) (- ?x)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f c", "by fastforce"], ["proof (state)\nthis:\n  has_bochner_integral M f c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  has_bochner_integral M f c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) cst_nn_integral:\n  fixes f::\"bool stream\\<Rightarrow>real\"\n  assumes \"f \\<in> borel_measurable (F 0)\"\n  and \"\\<And>w. 0 \\<le> f w\"\n  and \"f (sconst True) = c\"\nshows \"integral\\<^sup>N M f = ennreal c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M = ennreal c", "using assms cst_integral"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F 0)\n  0 \\<le> f ?w1\n  f (sconst True) = c\n  \\<lbrakk>?f \\<in> borel_measurable (F 0); ?f (sconst True) = ?c\\<rbrakk>\n  \\<Longrightarrow> has_bochner_integral M ?f ?c\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M = ennreal c", "by (simp add: assms(1) has_bochner_integral_iff nn_integral_eq_integral)"], ["", "lemma (in infinite_cts_filtration) suc_measurable:\n  fixes f::\"bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"f\\<in> borel_measurable (F (Suc n))\"\n  shows \"(\\<lambda>w. f (c ## w)) \\<in> borel_measurable (F n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. f (c ## w)) \\<in> borel_measurable (F n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>w. f (c ## w)) \\<in> borel_measurable (F n)", "have \"(\\<lambda>w. f (c ## w)) \\<in> borel_measurable (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. f (c ## w)) \\<in> borel_measurable (nat_filtration n)", "proof (rule nat_filtration_comp_measurable)"], ["proof (state)\ngoal (2 subgoals):\n 1. random_variable borel (\\<lambda>w. f (c ## w))\n 2. (\\<lambda>w. f (c ## w)) \\<circ> pseudo_proj_True n =\n    (\\<lambda>w. f (c ## w))", "have \"f\\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable borel f", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n\ngoal (1 subgoal):\n 1. random_variable borel f", "using measurable_from_subalg nat_filtration_subalgebra natural_filtration"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  \\<lbrakk>subalgebra ?M ?F; ?f \\<in> ?F \\<rightarrow>\\<^sub>M ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> ?M \\<rightarrow>\\<^sub>M ?N\n  subalgebra M (nat_filtration ?n)\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. random_variable borel f", "by blast"], ["proof (state)\nthis:\n  random_variable borel f\n\ngoal (2 subgoals):\n 1. random_variable borel (\\<lambda>w. f (c ## w))\n 2. (\\<lambda>w. f (c ## w)) \\<circ> pseudo_proj_True n =\n    (\\<lambda>w. f (c ## w))", "hence \"f\\<in> borel_measurable (stream_space (measure_pmf (bernoulli_pmf p)))\""], ["proof (prove)\nusing this:\n  random_variable borel f\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (stream_space (measure_pmf (bernoulli_pmf p)))", "using bernoulli"], ["proof (prove)\nusing this:\n  random_variable borel f\n  M = bernoulli_stream p\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (stream_space (measure_pmf (bernoulli_pmf p)))", "unfolding bernoulli_stream_def"], ["proof (prove)\nusing this:\n  random_variable borel f\n  M = stream_space (measure_pmf (bernoulli_pmf p))\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (stream_space (measure_pmf (bernoulli_pmf p)))", "by simp"], ["proof (state)\nthis:\n  f \\<in> borel_measurable (stream_space (measure_pmf (bernoulli_pmf p)))\n\ngoal (2 subgoals):\n 1. random_variable borel (\\<lambda>w. f (c ## w))\n 2. (\\<lambda>w. f (c ## w)) \\<circ> pseudo_proj_True n =\n    (\\<lambda>w. f (c ## w))", "have \"(\\<lambda>w. c ## w) \\<in> (stream_space (measure_pmf (bernoulli_pmf p))  \\<rightarrow>\\<^sub>M stream_space (measure_pmf (bernoulli_pmf p)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (##) c\n    \\<in> stream_space (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n          stream_space (measure_pmf (bernoulli_pmf p))", "proof (rule measurable_Stream)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. c)\n    \\<in> stream_space (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n          measure_pmf (bernoulli_pmf p)\n 2. (\\<lambda>x. x)\n    \\<in> stream_space (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n          stream_space (measure_pmf (bernoulli_pmf p))", "show \"(\\<lambda>x. c) \\<in> stream_space (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M measure_pmf (bernoulli_pmf p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. c)\n    \\<in> stream_space (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n          measure_pmf (bernoulli_pmf p)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. c)\n  \\<in> stream_space (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n        measure_pmf (bernoulli_pmf p)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x)\n    \\<in> stream_space (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n          stream_space (measure_pmf (bernoulli_pmf p))", "show \"(\\<lambda>x. x) \\<in> stream_space (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M stream_space (measure_pmf (bernoulli_pmf p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x)\n    \\<in> stream_space (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n          stream_space (measure_pmf (bernoulli_pmf p))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. x)\n  \\<in> stream_space (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n        stream_space (measure_pmf (bernoulli_pmf p))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (##) c\n  \\<in> stream_space (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n        stream_space (measure_pmf (bernoulli_pmf p))\n\ngoal (2 subgoals):\n 1. random_variable borel (\\<lambda>w. f (c ## w))\n 2. (\\<lambda>w. f (c ## w)) \\<circ> pseudo_proj_True n =\n    (\\<lambda>w. f (c ## w))", "hence \"(\\<lambda>w. f (c ## w)) \\<in> (stream_space (measure_pmf (bernoulli_pmf p))  \\<rightarrow>\\<^sub>M borel)\""], ["proof (prove)\nusing this:\n  (##) c\n  \\<in> stream_space (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n        stream_space (measure_pmf (bernoulli_pmf p))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f (c ## w))\n    \\<in> borel_measurable (stream_space (measure_pmf (bernoulli_pmf p)))", "using \\<open>f\\<in> borel_measurable (stream_space (measure_pmf (bernoulli_pmf p)))\\<close>\n        measurable_comp[of \"(\\<lambda>w. c ## w)\" \"stream_space (measure_pmf (bernoulli_pmf p))\" \"stream_space (measure_pmf (bernoulli_pmf p))\" f borel]"], ["proof (prove)\nusing this:\n  (##) c\n  \\<in> stream_space (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n        stream_space (measure_pmf (bernoulli_pmf p))\n  f \\<in> borel_measurable (stream_space (measure_pmf (bernoulli_pmf p)))\n  \\<lbrakk>(##) c\n           \\<in> stream_space\n                  (measure_pmf (bernoulli_pmf p)) \\<rightarrow>\\<^sub>M\n                 stream_space (measure_pmf (bernoulli_pmf p));\n   f \\<in> borel_measurable\n            (stream_space (measure_pmf (bernoulli_pmf p)))\\<rbrakk>\n  \\<Longrightarrow> f \\<circ> (##) c\n                    \\<in> borel_measurable\n                           (stream_space (measure_pmf (bernoulli_pmf p)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f (c ## w))\n    \\<in> borel_measurable (stream_space (measure_pmf (bernoulli_pmf p)))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. f (c ## w))\n  \\<in> borel_measurable (stream_space (measure_pmf (bernoulli_pmf p)))\n\ngoal (2 subgoals):\n 1. random_variable borel (\\<lambda>w. f (c ## w))\n 2. (\\<lambda>w. f (c ## w)) \\<circ> pseudo_proj_True n =\n    (\\<lambda>w. f (c ## w))", "thus \"random_variable borel (\\<lambda>w. f (c ## w))\""], ["proof (prove)\nusing this:\n  (\\<lambda>w. f (c ## w))\n  \\<in> borel_measurable (stream_space (measure_pmf (bernoulli_pmf p)))\n\ngoal (1 subgoal):\n 1. random_variable borel (\\<lambda>w. f (c ## w))", "using  bernoulli"], ["proof (prove)\nusing this:\n  (\\<lambda>w. f (c ## w))\n  \\<in> borel_measurable (stream_space (measure_pmf (bernoulli_pmf p)))\n  M = bernoulli_stream p\n\ngoal (1 subgoal):\n 1. random_variable borel (\\<lambda>w. f (c ## w))", "unfolding bernoulli_stream_def"], ["proof (prove)\nusing this:\n  (\\<lambda>w. f (c ## w))\n  \\<in> borel_measurable (stream_space (measure_pmf (bernoulli_pmf p)))\n  M = stream_space (measure_pmf (bernoulli_pmf p))\n\ngoal (1 subgoal):\n 1. random_variable borel (\\<lambda>w. f (c ## w))", "by simp"], ["proof (state)\nthis:\n  random_variable borel (\\<lambda>w. f (c ## w))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f (c ## w)) \\<circ> pseudo_proj_True n =\n    (\\<lambda>w. f (c ## w))", "have \"\\<forall>w. f (c ## (pseudo_proj_True n w)) = f (c##w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w. f (c ## pseudo_proj_True n w) = f (c ## w)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w. f (c ## pseudo_proj_True n w) = f (c ## w)", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w. f (c ## pseudo_proj_True n w) = f (c ## w)", "have \"c## (pseudo_proj_True n w) = pseudo_proj_True (Suc n) (c##w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c ## pseudo_proj_True n w = pseudo_proj_True (Suc n) (c ## w)", "unfolding pseudo_proj_True_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. c ## stake n w @- sconst True = stake (Suc n) (c ## w) @- sconst True", "by simp"], ["proof (state)\nthis:\n  c ## pseudo_proj_True n w = pseudo_proj_True (Suc n) (c ## w)\n\ngoal (1 subgoal):\n 1. \\<And>w. f (c ## pseudo_proj_True n w) = f (c ## w)", "hence \"f (c ## (pseudo_proj_True n w)) = f (pseudo_proj_True (Suc n) (c##w))\""], ["proof (prove)\nusing this:\n  c ## pseudo_proj_True n w = pseudo_proj_True (Suc n) (c ## w)\n\ngoal (1 subgoal):\n 1. f (c ## pseudo_proj_True n w) = f (pseudo_proj_True (Suc n) (c ## w))", "by simp"], ["proof (state)\nthis:\n  f (c ## pseudo_proj_True n w) = f (pseudo_proj_True (Suc n) (c ## w))\n\ngoal (1 subgoal):\n 1. \\<And>w. f (c ## pseudo_proj_True n w) = f (c ## w)", "also"], ["proof (state)\nthis:\n  f (c ## pseudo_proj_True n w) = f (pseudo_proj_True (Suc n) (c ## w))\n\ngoal (1 subgoal):\n 1. \\<And>w. f (c ## pseudo_proj_True n w) = f (c ## w)", "have \"... = f (c##w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (pseudo_proj_True (Suc n) (c ## w)) = f (c ## w)", "using assms nat_filtration_info[of f \"Suc n\"] natural_filtration"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  f \\<in> borel_measurable (nat_filtration (Suc n)) \\<Longrightarrow>\n  f \\<circ> pseudo_proj_True (Suc n) = f\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. f (pseudo_proj_True (Suc n) (c ## w)) = f (c ## w)", "by (metis comp_apply)"], ["proof (state)\nthis:\n  f (pseudo_proj_True (Suc n) (c ## w)) = f (c ## w)\n\ngoal (1 subgoal):\n 1. \\<And>w. f (c ## pseudo_proj_True n w) = f (c ## w)", "finally"], ["proof (chain)\npicking this:\n  f (c ## pseudo_proj_True n w) = f (c ## w)", "show \"f (c ## (pseudo_proj_True n w)) = f (c##w)\""], ["proof (prove)\nusing this:\n  f (c ## pseudo_proj_True n w) = f (c ## w)\n\ngoal (1 subgoal):\n 1. f (c ## pseudo_proj_True n w) = f (c ## w)", "."], ["proof (state)\nthis:\n  f (c ## pseudo_proj_True n w) = f (c ## w)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w. f (c ## pseudo_proj_True n w) = f (c ## w)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f (c ## w)) \\<circ> pseudo_proj_True n =\n    (\\<lambda>w. f (c ## w))", "thus \"(\\<lambda>w. f (c ## w)) \\<circ> pseudo_proj_True n = (\\<lambda>w. f (c ## w))\""], ["proof (prove)\nusing this:\n  \\<forall>w. f (c ## pseudo_proj_True n w) = f (c ## w)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f (c ## w)) \\<circ> pseudo_proj_True n =\n    (\\<lambda>w. f (c ## w))", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>w. f (c ## w)) \\<circ> pseudo_proj_True n =\n  (\\<lambda>w. f (c ## w))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>w. f (c ## w)) \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f (c ## w)) \\<in> borel_measurable (F n)", "thus \"(\\<lambda>w. f (c ## w)) \\<in> borel_measurable (F n)\""], ["proof (prove)\nusing this:\n  (\\<lambda>w. f (c ## w)) \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f (c ## w)) \\<in> borel_measurable (F n)", "using natural_filtration"], ["proof (prove)\nusing this:\n  (\\<lambda>w. f (c ## w)) \\<in> borel_measurable (nat_filtration n)\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f (c ## w)) \\<in> borel_measurable (F n)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. f (c ## w)) \\<in> borel_measurable (F n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) F_n_nn_integral_pos:\n  fixes f::\"bool stream\\<Rightarrow>real\"\n  shows \"\\<And>f. (\\<forall>x. 0 \\<le> f x) \\<Longrightarrow> f \\<in> borel_measurable (F n) \\<Longrightarrow> integral\\<^sup>N M f =\n    (\\<Sum> w\\<in> range (pseudo_proj_True n). (emeasure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) *  ennreal (f w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F n)\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True n).\n                            emeasure M\n                             (pseudo_proj_True n -` {w} \\<inter> space M) *\n                            ennreal (f w))", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F 0)\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True 0).\n                            emeasure M\n                             (pseudo_proj_True 0 -` {w} \\<inter> space M) *\n                            ennreal (f w))\n 2. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "case 0"], ["proof (state)\nthis:\n  \\<forall>x. 0 \\<le> f x\n  f \\<in> borel_measurable (F 0)\n\ngoal (2 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F 0)\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True 0).\n                            emeasure M\n                             (pseudo_proj_True 0 -` {w} \\<inter> space M) *\n                            ennreal (f w))\n 2. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "have \"range (pseudo_proj_True 0) = {sconst True}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (pseudo_proj_True 0) = {sconst True}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. range (pseudo_proj_True 0) \\<subseteq> {sconst True}\n 2. {sconst True} \\<subseteq> range (pseudo_proj_True 0)", "have \"\\<And>w. pseudo_proj_True 0 w = sconst True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w. pseudo_proj_True 0 w = sconst True", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w. pseudo_proj_True 0 w = sconst True", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w. pseudo_proj_True 0 w = sconst True", "show \"pseudo_proj_True 0 w = sconst True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True 0 w = sconst True", "unfolding pseudo_proj_True_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. stake 0 w @- sconst True = sconst True", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True 0 w = sconst True\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_True 0 ?w1 = sconst True\n\ngoal (2 subgoals):\n 1. range (pseudo_proj_True 0) \\<subseteq> {sconst True}\n 2. {sconst True} \\<subseteq> range (pseudo_proj_True 0)", "thus \"range (pseudo_proj_True 0) \\<subseteq> {sconst True}\""], ["proof (prove)\nusing this:\n  pseudo_proj_True 0 ?w1 = sconst True\n\ngoal (1 subgoal):\n 1. range (pseudo_proj_True 0) \\<subseteq> {sconst True}", "by auto"], ["proof (state)\nthis:\n  range (pseudo_proj_True 0) \\<subseteq> {sconst True}\n\ngoal (1 subgoal):\n 1. {sconst True} \\<subseteq> range (pseudo_proj_True 0)", "show \"{sconst True} \\<subseteq> range (pseudo_proj_True 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {sconst True} \\<subseteq> range (pseudo_proj_True 0)", "using \\<open>range (pseudo_proj_True 0) \\<subseteq> {sconst True}\\<close> subset_singletonD"], ["proof (prove)\nusing this:\n  range (pseudo_proj_True 0) \\<subseteq> {sconst True}\n  ?A \\<subseteq> {?x} \\<Longrightarrow> ?A = {} \\<or> ?A = {?x}\n\ngoal (1 subgoal):\n 1. {sconst True} \\<subseteq> range (pseudo_proj_True 0)", "by fastforce"], ["proof (state)\nthis:\n  {sconst True} \\<subseteq> range (pseudo_proj_True 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  range (pseudo_proj_True 0) = {sconst True}\n\ngoal (2 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F 0)\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True 0).\n                            emeasure M\n                             (pseudo_proj_True 0 -` {w} \\<inter> space M) *\n                            ennreal (f w))\n 2. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "hence \"(emeasure M ((pseudo_proj_True 0) -`{sconst True} \\<inter> space M)) = ennreal 1\""], ["proof (prove)\nusing this:\n  range (pseudo_proj_True 0) = {sconst True}\n\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True 0 -` {sconst True} \\<inter> space M) =\n    ennreal 1", "by (metis Int_absorb1 UNIV_I emeasure_eq_measure image_eqI prob_space subsetI vimage_eq)"], ["proof (state)\nthis:\n  emeasure M (pseudo_proj_True 0 -` {sconst True} \\<inter> space M) =\n  ennreal 1\n\ngoal (2 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F 0)\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True 0).\n                            emeasure M\n                             (pseudo_proj_True 0 -` {w} \\<inter> space M) *\n                            ennreal (f w))\n 2. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "have \"(\\<Sum> w\\<in> range (pseudo_proj_True 0). f w) = (\\<Sum> w\\<in> {sconst True}. f w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f (range (pseudo_proj_True 0)) = sum f {sconst True}", "using \\<open>range (pseudo_proj_True 0) = {sconst True}\\<close>\n    sum.cong[of \"range (pseudo_proj_True n)\" \"{sconst True}\" f f]"], ["proof (prove)\nusing this:\n  range (pseudo_proj_True 0) = {sconst True}\n  \\<lbrakk>range (pseudo_proj_True n) = {sconst True};\n   \\<And>x. x \\<in> {sconst True} \\<Longrightarrow> f x = f x\\<rbrakk>\n  \\<Longrightarrow> sum f (range (pseudo_proj_True n)) = sum f {sconst True}\n\ngoal (1 subgoal):\n 1. sum f (range (pseudo_proj_True 0)) = sum f {sconst True}", "by simp"], ["proof (state)\nthis:\n  sum f (range (pseudo_proj_True 0)) = sum f {sconst True}\n\ngoal (2 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F 0)\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True 0).\n                            emeasure M\n                             (pseudo_proj_True 0 -` {w} \\<inter> space M) *\n                            ennreal (f w))\n 2. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "also"], ["proof (state)\nthis:\n  sum f (range (pseudo_proj_True 0)) = sum f {sconst True}\n\ngoal (2 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F 0)\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True 0).\n                            emeasure M\n                             (pseudo_proj_True 0 -` {w} \\<inter> space M) *\n                            ennreal (f w))\n 2. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "have \"... = f (sconst True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {sconst True} = f (sconst True)", "by simp"], ["proof (state)\nthis:\n  sum f {sconst True} = f (sconst True)\n\ngoal (2 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F 0)\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True 0).\n                            emeasure M\n                             (pseudo_proj_True 0 -` {w} \\<inter> space M) *\n                            ennreal (f w))\n 2. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "finally"], ["proof (chain)\npicking this:\n  sum f (range (pseudo_proj_True 0)) = f (sconst True)", "have \"(\\<Sum> w\\<in> range (pseudo_proj_True 0). f w) = f (sconst True)\""], ["proof (prove)\nusing this:\n  sum f (range (pseudo_proj_True 0)) = f (sconst True)\n\ngoal (1 subgoal):\n 1. sum f (range (pseudo_proj_True 0)) = f (sconst True)", "."], ["proof (state)\nthis:\n  sum f (range (pseudo_proj_True 0)) = f (sconst True)\n\ngoal (2 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F 0)\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True 0).\n                            emeasure M\n                             (pseudo_proj_True 0 -` {w} \\<inter> space M) *\n                            ennreal (f w))\n 2. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "hence \"(\\<Sum> w\\<in> range (pseudo_proj_True 0). (emeasure M ((pseudo_proj_True 0) -`{w} \\<inter> space M)) * f w) = f (sconst True)\""], ["proof (prove)\nusing this:\n  sum f (range (pseudo_proj_True 0)) = f (sconst True)\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True 0).\n       emeasure M (pseudo_proj_True 0 -` {w} \\<inter> space M) *\n       ennreal (f w)) =\n    ennreal (f (sconst True))", "using \\<open>(emeasure M ((pseudo_proj_True 0) -`{sconst True} \\<inter> space M)) = ennreal 1\\<close>"], ["proof (prove)\nusing this:\n  sum f (range (pseudo_proj_True 0)) = f (sconst True)\n  emeasure M (pseudo_proj_True 0 -` {sconst True} \\<inter> space M) =\n  ennreal 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True 0).\n       emeasure M (pseudo_proj_True 0 -` {w} \\<inter> space M) *\n       ennreal (f w)) =\n    ennreal (f (sconst True))", "by (simp add: \\<open>range (pseudo_proj_True 0) = {sconst True}\\<close>)"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True 0).\n     emeasure M (pseudo_proj_True 0 -` {w} \\<inter> space M) *\n     ennreal (f w)) =\n  ennreal (f (sconst True))\n\ngoal (2 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F 0)\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True 0).\n                            emeasure M\n                             (pseudo_proj_True 0 -` {w} \\<inter> space M) *\n                            ennreal (f w))\n 2. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "thus \"integral\\<^sup>N M f = (\\<Sum> w\\<in> range (pseudo_proj_True 0). (emeasure M ((pseudo_proj_True 0) -`{w} \\<inter> space M)) * f w)\""], ["proof (prove)\nusing this:\n  (\\<Sum>w\\<in>range (pseudo_proj_True 0).\n     emeasure M (pseudo_proj_True 0 -` {w} \\<inter> space M) *\n     ennreal (f w)) =\n  ennreal (f (sconst True))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n    (\\<Sum>w\\<in>range (pseudo_proj_True 0).\n       emeasure M (pseudo_proj_True 0 -` {w} \\<inter> space M) *\n       ennreal (f w))", "using 0"], ["proof (prove)\nusing this:\n  (\\<Sum>w\\<in>range (pseudo_proj_True 0).\n     emeasure M (pseudo_proj_True 0 -` {w} \\<inter> space M) *\n     ennreal (f w)) =\n  ennreal (f (sconst True))\n  \\<forall>x. 0 \\<le> f x\n  f \\<in> borel_measurable (F 0)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n    (\\<Sum>w\\<in>range (pseudo_proj_True 0).\n       emeasure M (pseudo_proj_True 0 -` {w} \\<inter> space M) *\n       ennreal (f w))", "by (simp add:cst_nn_integral)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n  (\\<Sum>w\\<in>range (pseudo_proj_True 0).\n     emeasure M (pseudo_proj_True 0 -` {w} \\<inter> space M) *\n     ennreal (f w))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>x. 0 \\<le> ?f1 x;\n   ?f1 \\<in> borel_measurable (F n)\\<rbrakk>\n  \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (?f1 x) \\<partial>M =\n                    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n                       emeasure M\n                        (pseudo_proj_True n -` {w} \\<inter> space M) *\n                       ennreal (?f1 w))\n  \\<forall>x. 0 \\<le> f x\n  f \\<in> borel_measurable (F (Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "define BP where \"BP = measure_pmf (bernoulli_pmf p)\""], ["proof (state)\nthis:\n  BP = measure_pmf (bernoulli_pmf p)\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "have \"integral\\<^sup>N M f = integral\\<^sup>N (stream_space BP) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n    \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>stream_space BP", "using bernoulli"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n    \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>stream_space BP", "unfolding bernoulli_stream_def BP_def"], ["proof (prove)\nusing this:\n  M = stream_space (measure_pmf (bernoulli_pmf p))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n    \\<integral>\\<^sup>+ x. ennreal (f x)\n                       \\<partial>stream_space\n                                  (measure_pmf (bernoulli_pmf p))", "by simp"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>stream_space BP\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>stream_space BP\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "have \"... = \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ X. f (x ## X) \\<partial>stream_space BP \\<partial>BP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>stream_space BP =\n    \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ xa. ennreal (f (x ## xa))\n        \\<partial>stream_space BP\n                       \\<partial>BP", "proof (rule prob_space.nn_integral_stream_space)"], ["proof (state)\ngoal (2 subgoals):\n 1. prob_space BP\n 2. (\\<lambda>X. ennreal (f X)) \\<in> borel_measurable (stream_space BP)", "show \"prob_space BP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space BP", "unfolding BP_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space (measure_pmf (bernoulli_pmf p))", "by (simp add: bernoulli bernoulli_stream_def\n      prob_space.prob_space_stream_space prob_space_measure_pmf)"], ["proof (state)\nthis:\n  prob_space BP\n\ngoal (1 subgoal):\n 1. (\\<lambda>X. ennreal (f X)) \\<in> borel_measurable (stream_space BP)", "have \"f\\<in> borel_measurable (stream_space BP)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (stream_space BP)", "using bernoulli Suc"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  \\<lbrakk>\\<forall>x. 0 \\<le> ?f1 x;\n   ?f1 \\<in> borel_measurable (F n)\\<rbrakk>\n  \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (?f1 x) \\<partial>M =\n                    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n                       emeasure M\n                        (pseudo_proj_True n -` {w} \\<inter> space M) *\n                       ennreal (?f1 w))\n  \\<forall>x. 0 \\<le> f x\n  f \\<in> borel_measurable (F (Suc n))\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (stream_space BP)", "unfolding bernoulli_stream_def BP_def"], ["proof (prove)\nusing this:\n  M = stream_space (measure_pmf (bernoulli_pmf p))\n  \\<lbrakk>\\<forall>x. 0 \\<le> ?f1 x;\n   ?f1 \\<in> borel_measurable (F n)\\<rbrakk>\n  \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (?f1 x) \\<partial>M =\n                    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n                       emeasure M\n                        (pseudo_proj_True n -` {w} \\<inter> space M) *\n                       ennreal (?f1 w))\n  \\<forall>x. 0 \\<le> f x\n  f \\<in> borel_measurable (F (Suc n))\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (stream_space (measure_pmf (bernoulli_pmf p)))", "using measurable_from_subalg nat_filtration_subalgebra natural_filtration"], ["proof (prove)\nusing this:\n  M = stream_space (measure_pmf (bernoulli_pmf p))\n  \\<lbrakk>\\<forall>x. 0 \\<le> ?f1 x;\n   ?f1 \\<in> borel_measurable (F n)\\<rbrakk>\n  \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (?f1 x) \\<partial>M =\n                    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n                       emeasure M\n                        (pseudo_proj_True n -` {w} \\<inter> space M) *\n                       ennreal (?f1 w))\n  \\<forall>x. 0 \\<le> f x\n  f \\<in> borel_measurable (F (Suc n))\n  \\<lbrakk>subalgebra ?M ?F; ?f \\<in> ?F \\<rightarrow>\\<^sub>M ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> ?M \\<rightarrow>\\<^sub>M ?N\n  subalgebra M (nat_filtration ?n)\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (stream_space (measure_pmf (bernoulli_pmf p)))", "by blast"], ["proof (state)\nthis:\n  f \\<in> borel_measurable (stream_space BP)\n\ngoal (1 subgoal):\n 1. (\\<lambda>X. ennreal (f X)) \\<in> borel_measurable (stream_space BP)", "thus \"(\\<lambda>X. ennreal (f X)) \\<in> borel_measurable (stream_space BP)\""], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (stream_space BP)\n\ngoal (1 subgoal):\n 1. (\\<lambda>X. ennreal (f X)) \\<in> borel_measurable (stream_space BP)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>X. ennreal (f X)) \\<in> borel_measurable (stream_space BP)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>stream_space BP =\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ xa. ennreal (f (x ## xa))\n      \\<partial>stream_space BP\n                     \\<partial>BP\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>stream_space BP =\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ xa. ennreal (f (x ## xa))\n      \\<partial>stream_space BP\n                     \\<partial>BP\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "have \"... = (\\<lambda>x. (\\<integral>\\<^sup>+ X. f (x ## X) \\<partial>stream_space BP)) True * ennreal p +\n    (\\<lambda>x. (\\<integral>\\<^sup>+ X. f (x ## X) \\<partial>stream_space BP)) False * ennreal (1 -p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ xa. ennreal (f (x ## xa))\n        \\<partial>stream_space BP\n                       \\<partial>BP =\n    \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    \\<integral>\\<^sup>+ x. ennreal (f (False ## x))\n                       \\<partial>stream_space BP *\n    ennreal (1 - p)", "using  p_gt_0 p_lt_1"], ["proof (prove)\nusing this:\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ xa. ennreal (f (x ## xa))\n        \\<partial>stream_space BP\n                       \\<partial>BP =\n    \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    \\<integral>\\<^sup>+ x. ennreal (f (False ## x))\n                       \\<partial>stream_space BP *\n    ennreal (1 - p)", "unfolding BP_def"], ["proof (prove)\nusing this:\n  0 \\<le> p\n  p \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ xa. ennreal (f (x ## xa))\n        \\<partial>stream_space (measure_pmf (bernoulli_pmf p))\n                       \\<partial>measure_pmf (bernoulli_pmf p) =\n    \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space\n                                  (measure_pmf (bernoulli_pmf p)) *\n    ennreal p +\n    \\<integral>\\<^sup>+ x. ennreal (f (False ## x))\n                       \\<partial>stream_space\n                                  (measure_pmf (bernoulli_pmf p)) *\n    ennreal (1 - p)", "by simp"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ xa. ennreal (f (x ## xa))\n      \\<partial>stream_space BP\n                     \\<partial>BP =\n  \\<integral>\\<^sup>+ x. ennreal (f (True ## x)) \\<partial>stream_space BP *\n  ennreal p +\n  \\<integral>\\<^sup>+ x. ennreal (f (False ## x))\n                     \\<partial>stream_space BP *\n  ennreal (1 - p)\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. \\<integral>\\<^sup>+ xa. ennreal (f (x ## xa))\n      \\<partial>stream_space BP\n                     \\<partial>BP =\n  \\<integral>\\<^sup>+ x. ennreal (f (True ## x)) \\<partial>stream_space BP *\n  ennreal p +\n  \\<integral>\\<^sup>+ x. ennreal (f (False ## x))\n                     \\<partial>stream_space BP *\n  ennreal (1 - p)\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "have \"... = (\\<integral>\\<^sup>+ X. f (True ## X) \\<partial>stream_space BP) * p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *  (f (False ## w))) * (1-p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    \\<integral>\\<^sup>+ x. ennreal (f (False ## x))\n                       \\<partial>stream_space BP *\n    ennreal (1 - p) =\n    \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    \\<integral>\\<^sup>+ x. ennreal (f (False ## x))\n                       \\<partial>stream_space BP *\n    ennreal (1 - p) =\n    \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "define ff where \"ff = (\\<lambda>w. f (False ## w))\""], ["proof (state)\nthis:\n  ff = (\\<lambda>w. f (False ## w))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    \\<integral>\\<^sup>+ x. ennreal (f (False ## x))\n                       \\<partial>stream_space BP *\n    ennreal (1 - p) =\n    \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "have \"\\<And>x. 0 \\<le> ff x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. 0 \\<le> ff x", "using Suc"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>x. 0 \\<le> ?f1 x;\n   ?f1 \\<in> borel_measurable (F n)\\<rbrakk>\n  \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (?f1 x) \\<partial>M =\n                    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n                       emeasure M\n                        (pseudo_proj_True n -` {w} \\<inter> space M) *\n                       ennreal (?f1 w))\n  \\<forall>x. 0 \\<le> f x\n  f \\<in> borel_measurable (F (Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>x. 0 \\<le> ff x", "unfolding ff_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>x. 0 \\<le> ?f1 x;\n   ?f1 \\<in> borel_measurable (F n)\\<rbrakk>\n  \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (?f1 x) \\<partial>M =\n                    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n                       emeasure M\n                        (pseudo_proj_True n -` {w} \\<inter> space M) *\n                       ennreal (?f1 w))\n  \\<forall>x. 0 \\<le> f x\n  f \\<in> borel_measurable (F (Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>x. 0 \\<le> f (False ## x)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> ff ?x1\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    \\<integral>\\<^sup>+ x. ennreal (f (False ## x))\n                       \\<partial>stream_space BP *\n    ennreal (1 - p) =\n    \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "moreover"], ["proof (state)\nthis:\n  0 \\<le> ff ?x1\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    \\<integral>\\<^sup>+ x. ennreal (f (False ## x))\n                       \\<partial>stream_space BP *\n    ennreal (1 - p) =\n    \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "have \"ff\\<in> borel_measurable (F n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ff \\<in> borel_measurable (F n)", "using Suc"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>x. 0 \\<le> ?f1 x;\n   ?f1 \\<in> borel_measurable (F n)\\<rbrakk>\n  \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (?f1 x) \\<partial>M =\n                    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n                       emeasure M\n                        (pseudo_proj_True n -` {w} \\<inter> space M) *\n                       ennreal (?f1 w))\n  \\<forall>x. 0 \\<le> f x\n  f \\<in> borel_measurable (F (Suc n))\n\ngoal (1 subgoal):\n 1. ff \\<in> borel_measurable (F n)", "unfolding ff_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>x. 0 \\<le> ?f1 x;\n   ?f1 \\<in> borel_measurable (F n)\\<rbrakk>\n  \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (?f1 x) \\<partial>M =\n                    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n                       emeasure M\n                        (pseudo_proj_True n -` {w} \\<inter> space M) *\n                       ennreal (?f1 w))\n  \\<forall>x. 0 \\<le> f x\n  f \\<in> borel_measurable (F (Suc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f (False ## w)) \\<in> borel_measurable (F n)", "by (simp add:suc_measurable)"], ["proof (state)\nthis:\n  ff \\<in> borel_measurable (F n)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    \\<integral>\\<^sup>+ x. ennreal (f (False ## x))\n                       \\<partial>stream_space BP *\n    ennreal (1 - p) =\n    \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> ff ?x1\n  ff \\<in> borel_measurable (F n)", "have \"(\\<integral>\\<^sup>+ x. ennreal (ff x) \\<partial>M) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (ff w))\""], ["proof (prove)\nusing this:\n  0 \\<le> ff ?x1\n  ff \\<in> borel_measurable (F n)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (ff x) \\<partial>M =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (ff w))", "using Suc"], ["proof (prove)\nusing this:\n  0 \\<le> ff ?x1\n  ff \\<in> borel_measurable (F n)\n  \\<lbrakk>\\<forall>x. 0 \\<le> ?f1 x;\n   ?f1 \\<in> borel_measurable (F n)\\<rbrakk>\n  \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (?f1 x) \\<partial>M =\n                    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n                       emeasure M\n                        (pseudo_proj_True n -` {w} \\<inter> space M) *\n                       ennreal (?f1 w))\n  \\<forall>x. 0 \\<le> f x\n  f \\<in> borel_measurable (F (Suc n))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (ff x) \\<partial>M =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (ff w))", "by simp"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (ff x) \\<partial>M =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (ff w))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    \\<integral>\\<^sup>+ x. ennreal (f (False ## x))\n                       \\<partial>stream_space BP *\n    ennreal (1 - p) =\n    \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. ennreal (ff x) \\<partial>M =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (ff w))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    \\<integral>\\<^sup>+ x. ennreal (f (False ## x))\n                       \\<partial>stream_space BP *\n    ennreal (1 - p) =\n    \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "unfolding ff_def"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. ennreal (f (False ## x)) \\<partial>M =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w)))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    \\<integral>\\<^sup>+ x. ennreal (f (False ## x))\n                       \\<partial>stream_space BP *\n    ennreal (1 - p) =\n    \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "by (simp add: BP_def bernoulli bernoulli_stream_def)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (f (True ## x)) \\<partial>stream_space BP *\n  ennreal p +\n  \\<integral>\\<^sup>+ x. ennreal (f (False ## x))\n                     \\<partial>stream_space BP *\n  ennreal (1 - p) =\n  \\<integral>\\<^sup>+ x. ennreal (f (True ## x)) \\<partial>stream_space BP *\n  ennreal p +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (f (True ## x)) \\<partial>stream_space BP *\n  ennreal p +\n  \\<integral>\\<^sup>+ x. ennreal (f (False ## x))\n                     \\<partial>stream_space BP *\n  ennreal (1 - p) =\n  \\<integral>\\<^sup>+ x. ennreal (f (True ## x)) \\<partial>stream_space BP *\n  ennreal p +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p)\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (f (True ## x)) \\<partial>stream_space BP *\n  ennreal p +\n  \\<integral>\\<^sup>+ x. ennreal (f (False ## x))\n                     \\<partial>stream_space BP *\n  ennreal (1 - p) =\n  \\<integral>\\<^sup>+ x. ennreal (f (True ## x)) \\<partial>stream_space BP *\n  ennreal p +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p)\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "have \"... = (\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *  (f (True ## w))) * p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *  (f (False ## w))) * (1-p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (True ## w))) *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (True ## w))) *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "define ft where \"ft = (\\<lambda>w. f (True ## w))\""], ["proof (state)\nthis:\n  ft = (\\<lambda>w. f (True ## w))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (True ## w))) *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "have \"\\<And>x. 0 \\<le> ft x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. 0 \\<le> ft x", "using Suc"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>x. 0 \\<le> ?f1 x;\n   ?f1 \\<in> borel_measurable (F n)\\<rbrakk>\n  \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (?f1 x) \\<partial>M =\n                    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n                       emeasure M\n                        (pseudo_proj_True n -` {w} \\<inter> space M) *\n                       ennreal (?f1 w))\n  \\<forall>x. 0 \\<le> f x\n  f \\<in> borel_measurable (F (Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>x. 0 \\<le> ft x", "unfolding ft_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>x. 0 \\<le> ?f1 x;\n   ?f1 \\<in> borel_measurable (F n)\\<rbrakk>\n  \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (?f1 x) \\<partial>M =\n                    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n                       emeasure M\n                        (pseudo_proj_True n -` {w} \\<inter> space M) *\n                       ennreal (?f1 w))\n  \\<forall>x. 0 \\<le> f x\n  f \\<in> borel_measurable (F (Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>x. 0 \\<le> f (True ## x)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> ft ?x1\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (True ## w))) *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "moreover"], ["proof (state)\nthis:\n  0 \\<le> ft ?x1\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (True ## w))) *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "have \"ft\\<in> borel_measurable (F n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ft \\<in> borel_measurable (F n)", "using Suc"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>x. 0 \\<le> ?f1 x;\n   ?f1 \\<in> borel_measurable (F n)\\<rbrakk>\n  \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (?f1 x) \\<partial>M =\n                    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n                       emeasure M\n                        (pseudo_proj_True n -` {w} \\<inter> space M) *\n                       ennreal (?f1 w))\n  \\<forall>x. 0 \\<le> f x\n  f \\<in> borel_measurable (F (Suc n))\n\ngoal (1 subgoal):\n 1. ft \\<in> borel_measurable (F n)", "unfolding ft_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>x. 0 \\<le> ?f1 x;\n   ?f1 \\<in> borel_measurable (F n)\\<rbrakk>\n  \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (?f1 x) \\<partial>M =\n                    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n                       emeasure M\n                        (pseudo_proj_True n -` {w} \\<inter> space M) *\n                       ennreal (?f1 w))\n  \\<forall>x. 0 \\<le> f x\n  f \\<in> borel_measurable (F (Suc n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f (True ## w)) \\<in> borel_measurable (F n)", "by (simp add:suc_measurable)"], ["proof (state)\nthis:\n  ft \\<in> borel_measurable (F n)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (True ## w))) *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> ft ?x1\n  ft \\<in> borel_measurable (F n)", "have \"(\\<integral>\\<^sup>+ x. ennreal (ft x) \\<partial>M) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (ft w))\""], ["proof (prove)\nusing this:\n  0 \\<le> ft ?x1\n  ft \\<in> borel_measurable (F n)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (ft x) \\<partial>M =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (ft w))", "using Suc"], ["proof (prove)\nusing this:\n  0 \\<le> ft ?x1\n  ft \\<in> borel_measurable (F n)\n  \\<lbrakk>\\<forall>x. 0 \\<le> ?f1 x;\n   ?f1 \\<in> borel_measurable (F n)\\<rbrakk>\n  \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (?f1 x) \\<partial>M =\n                    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n                       emeasure M\n                        (pseudo_proj_True n -` {w} \\<inter> space M) *\n                       ennreal (?f1 w))\n  \\<forall>x. 0 \\<le> f x\n  f \\<in> borel_measurable (F (Suc n))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (ft x) \\<partial>M =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (ft w))", "by simp"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (ft x) \\<partial>M =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (ft w))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (True ## w))) *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. ennreal (ft x) \\<partial>M =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (ft w))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (True ## w))) *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "unfolding ft_def"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. ennreal (f (True ## x)) \\<partial>M =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (True ## w)))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f (True ## x))\n                       \\<partial>stream_space BP *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (True ## w))) *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "by (simp add: BP_def bernoulli bernoulli_stream_def)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (f (True ## x)) \\<partial>stream_space BP *\n  ennreal p +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (True ## w))) *\n  ennreal p +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (f (True ## x)) \\<partial>stream_space BP *\n  ennreal p +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (True ## w))) *\n  ennreal p +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p)\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (f (True ## x)) \\<partial>stream_space BP *\n  ennreal p +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (True ## w))) *\n  ennreal p +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p)\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "have \"... = (\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * p *  (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M)  *  (f (False ## w)))* (1-p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (True ## w))) *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (True ## w))) *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "have \"(\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *  (f (True ## w))) * p =\n      (\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *  (f (True ## w)) * p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (True ## w))) *\n    ennreal p =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (True ## w)) *\n       ennreal p)", "by (rule sum_distrib_right)"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (True ## w))) *\n  ennreal p =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (True ## w)) *\n     ennreal p)\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (True ## w))) *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (True ## w))) *\n  ennreal p =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (True ## w)) *\n     ennreal p)\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (True ## w))) *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "have \"... = (\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * p * (f (True ## w)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (True ## w)) *\n       ennreal p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w)))", "proof (rule sum.cong, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {x} \\<inter> space M) *\n       ennreal (f (True ## x)) *\n       ennreal p =\n       emeasure M (pseudo_proj_True n -` {x} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## x))", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {x} \\<inter> space M) *\n       ennreal (f (True ## x)) *\n       ennreal p =\n       emeasure M (pseudo_proj_True n -` {x} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## x))", "assume \"w\\<in> range (pseudo_proj_True n)\""], ["proof (state)\nthis:\n  w \\<in> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {x} \\<inter> space M) *\n       ennreal (f (True ## x)) *\n       ennreal p =\n       emeasure M (pseudo_proj_True n -` {x} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## x))", "show \"emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f (True ## w)) * ennreal p =\n         emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p * ennreal (f (True ## w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n    ennreal (f (True ## w)) *\n    ennreal p =\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n    ennreal (f (True ## w))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n    ennreal (f (True ## w)) *\n    ennreal p =\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n    ennreal (f (True ## w))", "have \"ennreal (f (True ## w)) * ennreal p = ennreal p * ennreal (f (True ## w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (f (True ## w)) * ennreal p =\n    ennreal p * ennreal (f (True ## w))", "by (simp add:mult.commute)"], ["proof (state)\nthis:\n  ennreal (f (True ## w)) * ennreal p = ennreal p * ennreal (f (True ## w))\n\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n    ennreal (f (True ## w)) *\n    ennreal p =\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n    ennreal (f (True ## w))", "hence \"\\<And>x. x * ennreal (f (True ## w)) * ennreal p = x * ennreal p * ennreal (f (True ## w))\""], ["proof (prove)\nusing this:\n  ennreal (f (True ## w)) * ennreal p = ennreal p * ennreal (f (True ## w))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x * ennreal (f (True ## w)) * ennreal p =\n       x * ennreal p * ennreal (f (True ## w))", "by (simp add: semiring_normalization_rules(16))"], ["proof (state)\nthis:\n  ?x1 * ennreal (f (True ## w)) * ennreal p =\n  ?x1 * ennreal p * ennreal (f (True ## w))\n\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n    ennreal (f (True ## w)) *\n    ennreal p =\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n    ennreal (f (True ## w))", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?x1 * ennreal (f (True ## w)) * ennreal p =\n  ?x1 * ennreal p * ennreal (f (True ## w))\n\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n    ennreal (f (True ## w)) *\n    ennreal p =\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n    ennreal (f (True ## w))", "by simp"], ["proof (state)\nthis:\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n  ennreal (f (True ## w)) *\n  ennreal p =\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n  ennreal (f (True ## w))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n  ennreal (f (True ## w)) *\n  ennreal p =\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n  ennreal (f (True ## w))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (True ## w)) *\n     ennreal p) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (True ## w))) *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (True ## w))) *\n  ennreal p =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w)))", "have \"(\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *  (f (True ## w))) * p =\n      (\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * p * (f (True ## w)))\""], ["proof (prove)\nusing this:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (True ## w))) *\n  ennreal p =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (True ## w))) *\n    ennreal p =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w)))", "."], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (True ## w))) *\n  ennreal p =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (True ## w))) *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (True ## w))) *\n  ennreal p =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (True ## w))) *\n    ennreal p +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (True ## w))) *\n  ennreal p +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w))) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (True ## w))) *\n  ennreal p +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w))) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p)\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (True ## w))) *\n  ennreal p +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w))) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p)\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "have \"... = (\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * p *  (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * (1-p) *  (f (False ## w)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w)))", "have \"(\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *  (f (False ## w))) * (1-p) =\n      (\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *  (f (False ## w)) * (1-p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w)) *\n       ennreal (1 - p))", "by (rule sum_distrib_right)"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w)) *\n     ennreal (1 - p))\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w)) *\n     ennreal (1 - p))\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w)))", "have \"... = (\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * (1-p) * (f (False ## w)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w)) *\n       ennreal (1 - p)) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w)))", "proof (rule sum.cong, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {x} \\<inter> space M) *\n       ennreal (f (False ## x)) *\n       ennreal (1 - p) =\n       emeasure M (pseudo_proj_True n -` {x} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## x))", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {x} \\<inter> space M) *\n       ennreal (f (False ## x)) *\n       ennreal (1 - p) =\n       emeasure M (pseudo_proj_True n -` {x} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## x))", "assume \"w\\<in> range (pseudo_proj_True n)\""], ["proof (state)\nthis:\n  w \\<in> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {x} \\<inter> space M) *\n       ennreal (f (False ## x)) *\n       ennreal (1 - p) =\n       emeasure M (pseudo_proj_True n -` {x} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## x))", "show \"emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f (False ## w)) * ennreal (1-p) =\n         emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (1-p) * ennreal (f (False ## w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n    ennreal (f (False ## w)) *\n    ennreal (1 - p) =\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n    ennreal (1 - p) *\n    ennreal (f (False ## w))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n    ennreal (f (False ## w)) *\n    ennreal (1 - p) =\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n    ennreal (1 - p) *\n    ennreal (f (False ## w))", "have \"ennreal (f (False ## w)) * ennreal (1-p) = ennreal (1-p) * ennreal (f (False ## w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (f (False ## w)) * ennreal (1 - p) =\n    ennreal (1 - p) * ennreal (f (False ## w))", "by (simp add:mult.commute)"], ["proof (state)\nthis:\n  ennreal (f (False ## w)) * ennreal (1 - p) =\n  ennreal (1 - p) * ennreal (f (False ## w))\n\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n    ennreal (f (False ## w)) *\n    ennreal (1 - p) =\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n    ennreal (1 - p) *\n    ennreal (f (False ## w))", "hence \"\\<And>x. x * ennreal (f (False ## w)) * ennreal (1-p) = x * ennreal (1-p) * ennreal (f (False ## w))\""], ["proof (prove)\nusing this:\n  ennreal (f (False ## w)) * ennreal (1 - p) =\n  ennreal (1 - p) * ennreal (f (False ## w))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x * ennreal (f (False ## w)) * ennreal (1 - p) =\n       x * ennreal (1 - p) * ennreal (f (False ## w))", "by (simp add: semiring_normalization_rules(16))"], ["proof (state)\nthis:\n  ?x1 * ennreal (f (False ## w)) * ennreal (1 - p) =\n  ?x1 * ennreal (1 - p) * ennreal (f (False ## w))\n\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n    ennreal (f (False ## w)) *\n    ennreal (1 - p) =\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n    ennreal (1 - p) *\n    ennreal (f (False ## w))", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?x1 * ennreal (f (False ## w)) * ennreal (1 - p) =\n  ?x1 * ennreal (1 - p) * ennreal (f (False ## w))\n\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n    ennreal (f (False ## w)) *\n    ennreal (1 - p) =\n    emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n    ennreal (1 - p) *\n    ennreal (f (False ## w))", "by simp"], ["proof (state)\nthis:\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n  ennreal (f (False ## w)) *\n  ennreal (1 - p) =\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n  ennreal (1 - p) *\n  ennreal (f (False ## w))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n  ennreal (f (False ## w)) *\n  ennreal (1 - p) =\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n  ennreal (1 - p) *\n  ennreal (f (False ## w))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w)) *\n     ennreal (1 - p)) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w)))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w)))", "have \"(\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *  (f (False ## w))) * (1-p) =\n      (\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * (1-p) * (f (False ## w)))\""], ["proof (prove)\nusing this:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w)))", "."], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w)))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f (False ## w))) *\n    ennreal (1 - p) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w))) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w))) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w))) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w))) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w)))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w))) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f (False ## w))) *\n  ennreal (1 - p) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w))) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w)))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "have \"... = (\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = True ## w}. emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * p *  (f (y))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * (1-p) *  (f (False ## w)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w))) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w))) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w)))", "have \"(\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * p *  (f (True ## w))) =\n      (\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {stl (True##w)} \\<inter> space M) * p *  (f (True ## w)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        (pseudo_proj_True n -` {stl (True ## w)} \\<inter> space M) *\n       ennreal p *\n       ennreal (f (True ## w)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w))) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {stl (True ## w)} \\<inter> space M) *\n     ennreal p *\n     ennreal (f (True ## w)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w))) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w))) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {stl (True ## w)} \\<inter> space M) *\n     ennreal p *\n     ennreal (f (True ## w)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w))) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w)))", "have \"... =\n      (\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = True ## w}. emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * p *  (f (y)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        (pseudo_proj_True n -` {stl (True ## w)} \\<inter> space M) *\n       ennreal p *\n       ennreal (f (True ## w))) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y))", "by (rule reindex_pseudo_proj)"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {stl (True ## w)} \\<inter> space M) *\n     ennreal p *\n     ennreal (f (True ## w))) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal p *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w))) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w)))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w))) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal p *\n     ennreal (f y))", "have \"(\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * p *  (f (True ## w))) =\n      (\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = True ## w}. emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * p *  (f (y)))\""], ["proof (prove)\nusing this:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w))) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal p *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y))", "."], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w))) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal p *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w))) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w)))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w))) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal p *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w))) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w))) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w))) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal p *\n     ennreal (f y)) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w))) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w))) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal p *\n     ennreal (f y)) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w)))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal p *\n     ennreal (f (True ## w))) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w))) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal p *\n     ennreal (f y)) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w)))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "have \"... = (\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = True ## w}. emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * p *  (f (y))) +\n    (\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = False ## w}. emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * (1-p) *  (f (y)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w))) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w))) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y))", "have \"(\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * (1-p) *  (f (False ## w))) =\n      (\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {stl (False##w)} \\<inter> space M) * (1-p) *  (f (False ## w)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w))) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        (pseudo_proj_True n -` {stl (False ## w)} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w))) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      (pseudo_proj_True n -` {stl (False ## w)} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w))) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y))", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w))) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      (pseudo_proj_True n -` {stl (False ## w)} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w))) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y))", "have \"... =\n      (\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = False ## w}. emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * (1-p) *  (f (y)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        (pseudo_proj_True n -` {stl (False ## w)} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w))) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y))", "by (rule reindex_pseudo_proj)"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      (pseudo_proj_True n -` {stl (False ## w)} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w))) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w))) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w))) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f y))", "have \"(\\<Sum>w\\<in>range (pseudo_proj_True n). emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * (1-p) *  (f (False ## w))) =\n      (\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = False ## w}. emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * (1-p) *  (f (y)))\""], ["proof (prove)\nusing this:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w))) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w))) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y))", "."], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w))) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w))) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w))) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f (False ## w))) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal p *\n     ennreal (f y)) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w))) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal p *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f y))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal p *\n     ennreal (f y)) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w))) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal p *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "also"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal p *\n     ennreal (f y)) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f (False ## w))) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal p *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "have \"... = (\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = True ## w}. (prob_component p y 0) * emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *  (f (y))) +\n    (\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = False ## w}. emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * (1-p) *  (f (y)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y)) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y)) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y))", "have \"\\<forall>y \\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = True ## w}. emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * p =\n      prob_component p y 0 * emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>{y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                          y = True ## w}.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p =\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p =\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p =\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "assume \"y \\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = True ## w}\""], ["proof (state)\nthis:\n  y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w}\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p =\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "hence \"\\<exists>w \\<in> range (pseudo_proj_True n). y = True ## w\""], ["proof (prove)\nusing this:\n  y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w}\n\ngoal (1 subgoal):\n 1. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w", "by simp"], ["proof (state)\nthis:\n  \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p =\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w", "obtain w where \"w\\<in> range (pseudo_proj_True n)\" and \"y = True ## w\""], ["proof (prove)\nusing this:\n  \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>w \\<in> range (pseudo_proj_True n); y = True ## w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  w \\<in> range (pseudo_proj_True n)\n  y = True ## w\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p =\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "have \"emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * p = p *emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n    ennreal p =\n    ennreal p * emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "by (simp add:mult.commute)"], ["proof (state)\nthis:\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * ennreal p =\n  ennreal p * emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p =\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "also"], ["proof (state)\nthis:\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * ennreal p =\n  ennreal p * emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p =\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "have \"... = prob_component p y 0 * emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal p *\n    emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) =\n    ennreal (prob_component p y 0) *\n    emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "using \\<open>y = True ## w\\<close>"], ["proof (prove)\nusing this:\n  y = True ## w\n\ngoal (1 subgoal):\n 1. ennreal p *\n    emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) =\n    ennreal (prob_component p y 0) *\n    emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "unfolding prob_component_def"], ["proof (prove)\nusing this:\n  y = True ## w\n\ngoal (1 subgoal):\n 1. ennreal p *\n    emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) =\n    ennreal (if y !! 0 then p else 1 - p) *\n    emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "by simp"], ["proof (state)\nthis:\n  ennreal p * emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) =\n  ennreal (prob_component p y 0) *\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p =\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "finally"], ["proof (chain)\npicking this:\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * ennreal p =\n  ennreal (prob_component p y 0) *\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "show \"emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * p =\n        prob_component p y 0 * emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\""], ["proof (prove)\nusing this:\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * ennreal p =\n  ennreal (prob_component p y 0) *\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n    ennreal p =\n    ennreal (prob_component p y 0) *\n    emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "."], ["proof (state)\nthis:\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * ennreal p =\n  ennreal (prob_component p y 0) *\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>y\\<in>{y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                        y = True ## w}.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal p =\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y)) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>{y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                        y = True ## w}.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal p =\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal p *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y)) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal p *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f y)) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f y))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal p *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f y)) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "also"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal p *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f y)) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "have \"... = (\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = True ## w}. (prob_component p y 0) * emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *  (f (y))) +\n    (\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = False ## w}. (prob_component p y 0) * emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *  (f (y)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y)) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y)) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y))", "have \"\\<forall>y \\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = False ## w}. emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * (1-p) =\n      prob_component p y 0 * emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>{y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                          y = False ## w}.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) =\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) =\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) =\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "assume \"y \\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = False ## w}\""], ["proof (state)\nthis:\n  y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) =\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "hence \"\\<exists>w \\<in> range (pseudo_proj_True n). y = False ## w\""], ["proof (prove)\nusing this:\n  y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n\ngoal (1 subgoal):\n 1. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w", "by simp"], ["proof (state)\nthis:\n  \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) =\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w", "obtain w where \"w\\<in> range (pseudo_proj_True n)\" and \"y = False ## w\""], ["proof (prove)\nusing this:\n  \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>w \\<in> range (pseudo_proj_True n); y = False ## w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  w \\<in> range (pseudo_proj_True n)\n  y = False ## w\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) =\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "have \"emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * (1-p) = (1-p) *emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n    ennreal (1 - p) =\n    ennreal (1 - p) *\n    emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "by (simp add:mult.commute)"], ["proof (state)\nthis:\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n  ennreal (1 - p) =\n  ennreal (1 - p) *\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) =\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "also"], ["proof (state)\nthis:\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n  ennreal (1 - p) =\n  ennreal (1 - p) *\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) =\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "have \"... = prob_component p y 0 * emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (1 - p) *\n    emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) =\n    ennreal (prob_component p y 0) *\n    emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "using \\<open>y = False ## w\\<close>"], ["proof (prove)\nusing this:\n  y = False ## w\n\ngoal (1 subgoal):\n 1. ennreal (1 - p) *\n    emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) =\n    ennreal (prob_component p y 0) *\n    emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "unfolding prob_component_def"], ["proof (prove)\nusing this:\n  y = False ## w\n\ngoal (1 subgoal):\n 1. ennreal (1 - p) *\n    emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) =\n    ennreal (if y !! 0 then p else 1 - p) *\n    emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "by simp"], ["proof (state)\nthis:\n  ennreal (1 - p) *\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) =\n  ennreal (prob_component p y 0) *\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) =\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "finally"], ["proof (chain)\npicking this:\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n  ennreal (1 - p) =\n  ennreal (prob_component p y 0) *\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "show \"emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * (1-p) =\n        prob_component p y 0 * emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\""], ["proof (prove)\nusing this:\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n  ennreal (1 - p) =\n  ennreal (prob_component p y 0) *\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n    ennreal (1 - p) =\n    ennreal (prob_component p y 0) *\n    emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)", "."], ["proof (state)\nthis:\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n  ennreal (1 - p) =\n  ennreal (prob_component p y 0) *\n  emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>y\\<in>{y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                        y = False ## w}.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (1 - p) =\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y)) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>{y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                        y = False ## w}.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (1 - p) =\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (1 - p) *\n       ennreal (f y)) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f y)) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f y)) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "also"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (1 - p) *\n     ennreal (f y)) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "have \"... = (\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = True ## w}. emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *  (f y)) +\n    (\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = False ## w}. (prob_component p y 0) * emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *  (f (y)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y))", "have \"(\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       ennreal (prob_component p y 0) * emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * (f y)) =\n      (\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = True ## w}. emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} * (f y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n       ennreal (f y))", "proof (rule sum.cong, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       ennreal (prob_component p x 0) *\n       emeasure M (pseudo_proj_True n -` {stl x} \\<inter> space M) *\n       ennreal (f x) =\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = True ## x} *\n       ennreal (f x)", "fix xx"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       ennreal (prob_component p x 0) *\n       emeasure M (pseudo_proj_True n -` {stl x} \\<inter> space M) *\n       ennreal (f x) =\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = True ## x} *\n       ennreal (f x)", "assume \"xx \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w}\""], ["proof (state)\nthis:\n  xx \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       ennreal (prob_component p x 0) *\n       emeasure M (pseudo_proj_True n -` {stl x} \\<inter> space M) *\n       ennreal (f x) =\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = True ## x} *\n       ennreal (f x)", "hence \"\\<exists>w\\<in>range (pseudo_proj_True n). xx = True ## w\""], ["proof (prove)\nusing this:\n  xx \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w}\n\ngoal (1 subgoal):\n 1. \\<exists>w\\<in>range (pseudo_proj_True n). xx = True ## w", "by simp"], ["proof (state)\nthis:\n  \\<exists>w\\<in>range (pseudo_proj_True n). xx = True ## w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       ennreal (prob_component p x 0) *\n       emeasure M (pseudo_proj_True n -` {stl x} \\<inter> space M) *\n       ennreal (f x) =\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = True ## x} *\n       ennreal (f x)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>w\\<in>range (pseudo_proj_True n). xx = True ## w", "obtain ww where \"ww\\<in>range (pseudo_proj_True n)\" and \"xx = True## ww\""], ["proof (prove)\nusing this:\n  \\<exists>w\\<in>range (pseudo_proj_True n). xx = True ## w\n\ngoal (1 subgoal):\n 1. (\\<And>ww.\n        \\<lbrakk>ww \\<in> range (pseudo_proj_True n);\n         xx = True ## ww\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ww \\<in> range (pseudo_proj_True n)\n  xx = True ## ww\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       ennreal (prob_component p x 0) *\n       emeasure M (pseudo_proj_True n -` {stl x} \\<inter> space M) *\n       ennreal (f x) =\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = True ## x} *\n       ennreal (f x)", "have \"ennreal (prob_component p (True##ww) 0) * emeasure M (pseudo_proj_True n -` {ww} \\<inter> space M) =\n         emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {ww}. z = True ## x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (prob_component p (True ## ww) 0) *\n    emeasure M (pseudo_proj_True n -` {ww} \\<inter> space M) =\n    emeasure M\n     {z \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {ww}. z = True ## x}", "using \\<open>ww\\<in>range (pseudo_proj_True n)\\<close>"], ["proof (prove)\nusing this:\n  ww \\<in> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. ennreal (prob_component p (True ## ww) 0) *\n    emeasure M (pseudo_proj_True n -` {ww} \\<inter> space M) =\n    emeasure M\n     {z \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {ww}. z = True ## x}", "by (rule pseudo_proj_element_prob_pref[symmetric])"], ["proof (state)\nthis:\n  ennreal (prob_component p (True ## ww) 0) *\n  emeasure M (pseudo_proj_True n -` {ww} \\<inter> space M) =\n  emeasure M\n   {z \\<in> space M.\n    \\<exists>x\\<in>pseudo_proj_True n -` {ww}. z = True ## x}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = True ## w} \\<Longrightarrow>\n       ennreal (prob_component p x 0) *\n       emeasure M (pseudo_proj_True n -` {stl x} \\<inter> space M) *\n       ennreal (f x) =\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = True ## x} *\n       ennreal (f x)", "thus \"ennreal (prob_component p xx 0) * emeasure M (pseudo_proj_True n -` {stl xx} \\<inter> space M) * (f xx) =\n         emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {stl xx}. z = True ## x} * (f xx)\""], ["proof (prove)\nusing this:\n  ennreal (prob_component p (True ## ww) 0) *\n  emeasure M (pseudo_proj_True n -` {ww} \\<inter> space M) =\n  emeasure M\n   {z \\<in> space M.\n    \\<exists>x\\<in>pseudo_proj_True n -` {ww}. z = True ## x}\n\ngoal (1 subgoal):\n 1. ennreal (prob_component p xx 0) *\n    emeasure M (pseudo_proj_True n -` {stl xx} \\<inter> space M) *\n    ennreal (f xx) =\n    emeasure M\n     {z \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {stl xx}. z = True ## x} *\n    ennreal (f xx)", "using \\<open>xx = True##ww\\<close>"], ["proof (prove)\nusing this:\n  ennreal (prob_component p (True ## ww) 0) *\n  emeasure M (pseudo_proj_True n -` {ww} \\<inter> space M) =\n  emeasure M\n   {z \\<in> space M.\n    \\<exists>x\\<in>pseudo_proj_True n -` {ww}. z = True ## x}\n  xx = True ## ww\n\ngoal (1 subgoal):\n 1. ennreal (prob_component p xx 0) *\n    emeasure M (pseudo_proj_True n -` {stl xx} \\<inter> space M) *\n    ennreal (f xx) =\n    emeasure M\n     {z \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {stl xx}. z = True ## x} *\n    ennreal (f xx)", "by simp"], ["proof (state)\nthis:\n  ennreal (prob_component p xx 0) *\n  emeasure M (pseudo_proj_True n -` {stl xx} \\<inter> space M) *\n  ennreal (f xx) =\n  emeasure M\n   {z \\<in> space M.\n    \\<exists>x\\<in>pseudo_proj_True n -` {stl xx}. z = True ## x} *\n  ennreal (f xx)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "also"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "have \"... = (\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = True ## w}. emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *  (f y)) +\n    (\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = False ## w}. emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = False ## x} *  (f y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = False ## x} *\n       ennreal (f y))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = False ## x} *\n       ennreal (f y))", "have \"(\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       ennreal (prob_component p y 0) * emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) * (f y)) =\n      (\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = False ## w}. emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = False ## x} * (f y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = False ## x} *\n       ennreal (f y))", "proof (rule sum.cong, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       ennreal (prob_component p x 0) *\n       emeasure M (pseudo_proj_True n -` {stl x} \\<inter> space M) *\n       ennreal (f x) =\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = False ## x} *\n       ennreal (f x)", "fix xx"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       ennreal (prob_component p x 0) *\n       emeasure M (pseudo_proj_True n -` {stl x} \\<inter> space M) *\n       ennreal (f x) =\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = False ## x} *\n       ennreal (f x)", "assume \"xx \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\""], ["proof (state)\nthis:\n  xx \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       ennreal (prob_component p x 0) *\n       emeasure M (pseudo_proj_True n -` {stl x} \\<inter> space M) *\n       ennreal (f x) =\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = False ## x} *\n       ennreal (f x)", "hence \"\\<exists>w\\<in>range (pseudo_proj_True n). xx = False ## w\""], ["proof (prove)\nusing this:\n  xx \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w}\n\ngoal (1 subgoal):\n 1. \\<exists>w\\<in>range (pseudo_proj_True n). xx = False ## w", "by simp"], ["proof (state)\nthis:\n  \\<exists>w\\<in>range (pseudo_proj_True n). xx = False ## w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       ennreal (prob_component p x 0) *\n       emeasure M (pseudo_proj_True n -` {stl x} \\<inter> space M) *\n       ennreal (f x) =\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = False ## x} *\n       ennreal (f x)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>w\\<in>range (pseudo_proj_True n). xx = False ## w", "obtain ww where \"ww\\<in>range (pseudo_proj_True n)\" and \"xx = False## ww\""], ["proof (prove)\nusing this:\n  \\<exists>w\\<in>range (pseudo_proj_True n). xx = False ## w\n\ngoal (1 subgoal):\n 1. (\\<And>ww.\n        \\<lbrakk>ww \\<in> range (pseudo_proj_True n);\n         xx = False ## ww\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ww \\<in> range (pseudo_proj_True n)\n  xx = False ## ww\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       ennreal (prob_component p x 0) *\n       emeasure M (pseudo_proj_True n -` {stl x} \\<inter> space M) *\n       ennreal (f x) =\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = False ## x} *\n       ennreal (f x)", "have \"ennreal (prob_component p (False##ww) 0) * emeasure M (pseudo_proj_True n -` {ww} \\<inter> space M) =\n         emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {ww}. z = False ## x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (prob_component p (False ## ww) 0) *\n    emeasure M (pseudo_proj_True n -` {ww} \\<inter> space M) =\n    emeasure M\n     {z \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {ww}. z = False ## x}", "using \\<open>ww\\<in>range (pseudo_proj_True n)\\<close>"], ["proof (prove)\nusing this:\n  ww \\<in> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. ennreal (prob_component p (False ## ww) 0) *\n    emeasure M (pseudo_proj_True n -` {ww} \\<inter> space M) =\n    emeasure M\n     {z \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {ww}. z = False ## x}", "by (rule pseudo_proj_element_prob_pref[symmetric])"], ["proof (state)\nthis:\n  ennreal (prob_component p (False ## ww) 0) *\n  emeasure M (pseudo_proj_True n -` {ww} \\<inter> space M) =\n  emeasure M\n   {z \\<in> space M.\n    \\<exists>x\\<in>pseudo_proj_True n -` {ww}. z = False ## x}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {y. \\<exists>w\\<in>range (pseudo_proj_True n).\n                      y = False ## w} \\<Longrightarrow>\n       ennreal (prob_component p x 0) *\n       emeasure M (pseudo_proj_True n -` {stl x} \\<inter> space M) *\n       ennreal (f x) =\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = False ## x} *\n       ennreal (f x)", "thus \"ennreal (prob_component p xx 0) * emeasure M (pseudo_proj_True n -` {stl xx} \\<inter> space M) * (f xx) =\n         emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {stl xx}. z = False ## x} * (f xx)\""], ["proof (prove)\nusing this:\n  ennreal (prob_component p (False ## ww) 0) *\n  emeasure M (pseudo_proj_True n -` {ww} \\<inter> space M) =\n  emeasure M\n   {z \\<in> space M.\n    \\<exists>x\\<in>pseudo_proj_True n -` {ww}. z = False ## x}\n\ngoal (1 subgoal):\n 1. ennreal (prob_component p xx 0) *\n    emeasure M (pseudo_proj_True n -` {stl xx} \\<inter> space M) *\n    ennreal (f xx) =\n    emeasure M\n     {z \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {stl xx}. z = False ## x} *\n    ennreal (f xx)", "using \\<open>xx = False##ww\\<close>"], ["proof (prove)\nusing this:\n  ennreal (prob_component p (False ## ww) 0) *\n  emeasure M (pseudo_proj_True n -` {ww} \\<inter> space M) =\n  emeasure M\n   {z \\<in> space M.\n    \\<exists>x\\<in>pseudo_proj_True n -` {ww}. z = False ## x}\n  xx = False ## ww\n\ngoal (1 subgoal):\n 1. ennreal (prob_component p xx 0) *\n    emeasure M (pseudo_proj_True n -` {stl xx} \\<inter> space M) *\n    ennreal (f xx) =\n    emeasure M\n     {z \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {stl xx}. z = False ## x} *\n    ennreal (f xx)", "by simp"], ["proof (state)\nthis:\n  ennreal (prob_component p xx 0) *\n  emeasure M (pseudo_proj_True n -` {stl xx} \\<inter> space M) *\n  ennreal (f xx) =\n  emeasure M\n   {z \\<in> space M.\n    \\<exists>x\\<in>pseudo_proj_True n -` {stl xx}. z = False ## x} *\n  ennreal (f xx)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = False ## x} *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = False ## x} *\n       ennreal (f y))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = False ## x} *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       ennreal (prob_component p y 0) *\n       emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n       ennreal (f y)) =\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = False ## x} *\n       ennreal (f y))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = False ## x} *\n     ennreal (f y))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = False ## x} *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "also"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     ennreal (prob_component p y 0) *\n     emeasure M (pseudo_proj_True n -` {stl y} \\<inter> space M) *\n     ennreal (f y)) =\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = False ## x} *\n     ennreal (f y))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "have \"... = (\\<Sum>w\\<in> range (pseudo_proj_True n). emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = True ## x} *  (f (True##w))) +\n    (\\<Sum>w \\<in> range (pseudo_proj_True n). emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = False ## x} *  (f (False##w)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = False ## x} *\n       ennreal (f y)) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = True ## x} *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = False ## x} *\n       ennreal (f (False ## w)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = False ## x} *\n       ennreal (f y)) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = True ## x} *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = False ## x} *\n       ennreal (f (False ## w)))", "have \"\\<And>c. (\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = c ## w}. emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = c ## x} *  (f y)) =\n      (\\<Sum>w\\<in> range (pseudo_proj_True n). emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *  (f (c##w)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c.\n       (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = c ## w.\n          emeasure M\n           {z \\<in> space M.\n            \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = c ## x} *\n          ennreal (f y)) =\n       (\\<Sum>w\\<in>range (pseudo_proj_True n).\n          emeasure M\n           {z \\<in> space M.\n            \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *\n          ennreal (f (c ## w)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c.\n       (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = c ## w.\n          emeasure M\n           {z \\<in> space M.\n            \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = c ## x} *\n          ennreal (f y)) =\n       (\\<Sum>w\\<in>range (pseudo_proj_True n).\n          emeasure M\n           {z \\<in> space M.\n            \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *\n          ennreal (f (c ## w)))", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c.\n       (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = c ## w.\n          emeasure M\n           {z \\<in> space M.\n            \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = c ## x} *\n          ennreal (f y)) =\n       (\\<Sum>w\\<in>range (pseudo_proj_True n).\n          emeasure M\n           {z \\<in> space M.\n            \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *\n          ennreal (f (c ## w)))", "have \"(\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = c ## w}. emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = c ## x} *  (f y)) =\n      (\\<Sum>w\\<in> range (pseudo_proj_True n). emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {stl (c##w)}. z = c ## x} *  (f (c##w)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = c ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = c ## x} *\n       ennreal (f y)) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl (c ## w)}. z = c ## x} *\n       ennreal (f (c ## w)))", "by (rule reindex_pseudo_proj[symmetric])"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = c ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = c ## x} *\n     ennreal (f y)) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl (c ## w)}. z = c ## x} *\n     ennreal (f (c ## w)))\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = c ## w.\n          emeasure M\n           {z \\<in> space M.\n            \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = c ## x} *\n          ennreal (f y)) =\n       (\\<Sum>w\\<in>range (pseudo_proj_True n).\n          emeasure M\n           {z \\<in> space M.\n            \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *\n          ennreal (f (c ## w)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = c ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = c ## x} *\n     ennreal (f y)) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl (c ## w)}. z = c ## x} *\n     ennreal (f (c ## w)))\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = c ## w.\n          emeasure M\n           {z \\<in> space M.\n            \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = c ## x} *\n          ennreal (f y)) =\n       (\\<Sum>w\\<in>range (pseudo_proj_True n).\n          emeasure M\n           {z \\<in> space M.\n            \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *\n          ennreal (f (c ## w)))", "have \"... = (\\<Sum>w\\<in> range (pseudo_proj_True n). emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *  (f (c##w)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl (c ## w)}. z = c ## x} *\n       ennreal (f (c ## w))) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *\n       ennreal (f (c ## w)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl (c ## w)}. z = c ## x} *\n     ennreal (f (c ## w))) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *\n     ennreal (f (c ## w)))\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = c ## w.\n          emeasure M\n           {z \\<in> space M.\n            \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = c ## x} *\n          ennreal (f y)) =\n       (\\<Sum>w\\<in>range (pseudo_proj_True n).\n          emeasure M\n           {z \\<in> space M.\n            \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *\n          ennreal (f (c ## w)))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = c ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = c ## x} *\n     ennreal (f y)) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *\n     ennreal (f (c ## w)))", "show \"(\\<Sum>y\\<in>{y. \\<exists>w \\<in> range (pseudo_proj_True n). y = c ## w}. emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = c ## x} *  (f y)) =\n        (\\<Sum>w\\<in> range (pseudo_proj_True n). emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *  (f (c##w)))\""], ["proof (prove)\nusing this:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = c ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = c ## x} *\n     ennreal (f y)) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *\n     ennreal (f (c ## w)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = c ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = c ## x} *\n       ennreal (f y)) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *\n       ennreal (f (c ## w)))", "."], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = c ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = c ## x} *\n     ennreal (f y)) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *\n     ennreal (f (c ## w)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = ?c1 ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = ?c1 ## x} *\n     ennreal (f y)) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = ?c1 ## x} *\n     ennreal (f (?c1 ## w)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = False ## x} *\n       ennreal (f y)) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = True ## x} *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = False ## x} *\n       ennreal (f (False ## w)))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = ?c1 ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = ?c1 ## x} *\n     ennreal (f y)) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = ?c1 ## x} *\n     ennreal (f (?c1 ## w)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n       ennreal (f y)) +\n    (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = False ## x} *\n       ennreal (f y)) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = True ## x} *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = False ## x} *\n       ennreal (f (False ## w)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = False ## x} *\n     ennreal (f y)) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = True ## x} *\n     ennreal (f (True ## w))) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = False ## x} *\n     ennreal (f (False ## w)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = False ## x} *\n     ennreal (f y)) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = True ## x} *\n     ennreal (f (True ## w))) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = False ## x} *\n     ennreal (f (False ## w)))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "also"], ["proof (state)\nthis:\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = True ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = True ## x} *\n     ennreal (f y)) +\n  (\\<Sum>y | \\<exists>w\\<in>range (pseudo_proj_True n). y = False ## w.\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {stl y}. z = False ## x} *\n     ennreal (f y)) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = True ## x} *\n     ennreal (f (True ## w))) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = False ## x} *\n     ennreal (f (False ## w)))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "have \"... = (\\<Sum>w\\<in> {w. w\\<in> range (pseudo_proj_True (Suc n)) \\<and> w!!0 = True}. emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> (space M)) *  (f w)) +\n    (\\<Sum>w\\<in> {w. w\\<in> range (pseudo_proj_True (Suc n)) \\<and> w!!0 = False}. emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> (space M)) *  (f w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = True ## x} *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = False ## x} *\n       ennreal (f (False ## w))) =\n    (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and>\n               w !! 0 = True.\n       emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       ennreal (f w)) +\n    (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and>\n               w !! 0 = False.\n       emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       ennreal (f w))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = True ## x} *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = False ## x} *\n       ennreal (f (False ## w))) =\n    (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and>\n               w !! 0 = True.\n       emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       ennreal (f w)) +\n    (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and>\n               w !! 0 = False.\n       emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       ennreal (f w))", "have \"\\<And>c. (\\<Sum>w\\<in> range (pseudo_proj_True n). emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *  (f (c##w))) =\n      (\\<Sum>w\\<in> {w. w\\<in> range (pseudo_proj_True (Suc n)) \\<and> w!!0 = c}. emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> (space M)) *  (f w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c.\n       (\\<Sum>w\\<in>range (pseudo_proj_True n).\n          emeasure M\n           {z \\<in> space M.\n            \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *\n          ennreal (f (c ## w))) =\n       (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and>\n                  w !! 0 = c.\n          emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n          ennreal (f w))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c.\n       (\\<Sum>w\\<in>range (pseudo_proj_True n).\n          emeasure M\n           {z \\<in> space M.\n            \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *\n          ennreal (f (c ## w))) =\n       (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and>\n                  w !! 0 = c.\n          emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n          ennreal (f w))", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c.\n       (\\<Sum>w\\<in>range (pseudo_proj_True n).\n          emeasure M\n           {z \\<in> space M.\n            \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *\n          ennreal (f (c ## w))) =\n       (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and>\n                  w !! 0 = c.\n          emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n          ennreal (f w))", "show \"(\\<Sum>w\\<in> range (pseudo_proj_True n). emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *  (f (c##w))) =\n        (\\<Sum>w\\<in> {w. w\\<in> range (pseudo_proj_True (Suc n)) \\<and> w!!0 = c}. emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> (space M)) *  (f w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *\n       ennreal (f (c ## w))) =\n    (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and> w !! 0 = c.\n       emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       ennreal (f w))", "proof (rule sum.reindex_cong)"], ["proof (state)\ngoal (3 subgoals):\n 1. inj_on ?l {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n 2. range (pseudo_proj_True n) =\n    ?l ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n 3. \\<And>x.\n       x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {?l x}. z = c ## x} *\n       ennreal (f (c ## ?l x)) =\n       emeasure M (pseudo_proj_True (Suc n) -` {x} \\<inter> space M) *\n       ennreal (f x)", "show \"inj_on stl {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on stl {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)).\n                         w !! 0 = c};\n        y \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c};\n        stl x = stl y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)).\n                         w !! 0 = c};\n        y \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c};\n        stl x = stl y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume \"x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\"\n            and \"y \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\"\n            and \"stl x = stl y\""], ["proof (state)\nthis:\n  x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n  y \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n  stl x = stl y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)).\n                         w !! 0 = c};\n        y \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c};\n        stl x = stl y\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"x!!0 = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x !! 0 = c", "using \\<open>x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n\ngoal (1 subgoal):\n 1. x !! 0 = c", "by simp"], ["proof (state)\nthis:\n  x !! 0 = c\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)).\n                         w !! 0 = c};\n        y \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c};\n        stl x = stl y\\<rbrakk>\n       \\<Longrightarrow> x = y", "moreover"], ["proof (state)\nthis:\n  x !! 0 = c\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)).\n                         w !! 0 = c};\n        y \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c};\n        stl x = stl y\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"y!!0 = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y !! 0 = c", "using \\<open>y \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\\<close>"], ["proof (prove)\nusing this:\n  y \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n\ngoal (1 subgoal):\n 1. y !! 0 = c", "by simp"], ["proof (state)\nthis:\n  y !! 0 = c\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)).\n                         w !! 0 = c};\n        y \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c};\n        stl x = stl y\\<rbrakk>\n       \\<Longrightarrow> x = y", "ultimately"], ["proof (chain)\npicking this:\n  x !! 0 = c\n  y !! 0 = c", "show \"x = y\""], ["proof (prove)\nusing this:\n  x !! 0 = c\n  y !! 0 = c\n\ngoal (1 subgoal):\n 1. x = y", "using \\<open>stl x=  stl y\\<close>"], ["proof (prove)\nusing this:\n  x !! 0 = c\n  y !! 0 = c\n  stl x = stl y\n\ngoal (1 subgoal):\n 1. x = y", "by (smt snth.simps(1) stream_eq_Stream_iff)"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "(*by (metis (full_types, hide_lams)  pmf_bernoulli_True snth.simps(1) stream_eq_Stream_iff) *)"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on stl {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n\ngoal (2 subgoals):\n 1. range (pseudo_proj_True n) =\n    stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n 2. \\<And>x.\n       x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = c ## x} *\n       ennreal (f (c ## stl x)) =\n       emeasure M (pseudo_proj_True (Suc n) -` {x} \\<inter> space M) *\n       ennreal (f x)", "show \"range (pseudo_proj_True n) = stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (pseudo_proj_True n) =\n    stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. range (pseudo_proj_True n)\n    \\<subseteq> stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n 2. stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n    \\<subseteq> range (pseudo_proj_True n)", "show \"range (pseudo_proj_True n) \\<subseteq> stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (pseudo_proj_True n)\n    \\<subseteq> stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       x \\<in> stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       x \\<in> stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}", "assume \"x\\<in> range (pseudo_proj_True n)\""], ["proof (state)\nthis:\n  x \\<in> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       x \\<in> stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}", "hence \"pseudo_proj_True n x = x\""], ["proof (prove)\nusing this:\n  x \\<in> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n x = x", "using pseudo_proj_True_proj"], ["proof (prove)\nusing this:\n  x \\<in> range (pseudo_proj_True n)\n  pseudo_proj_True ?n (pseudo_proj_True ?n ?w) = pseudo_proj_True ?n ?w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n x = x", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True n x = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       x \\<in> stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}", "have \"pseudo_proj_True (Suc n) (c##x) = c##x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) (c ## x) = c ## x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) (c ## x) = c ## x", "have \"pseudo_proj_True (Suc n) (c##x) = c ## pseudo_proj_True n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) (c ## x) = c ## pseudo_proj_True n x", "using pseudo_proj_True_Suc_prefix[of n \"c##x\"]"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) (c ## x) =\n  (c ## x) !! 0 ## pseudo_proj_True n (stl (c ## x))\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) (c ## x) = c ## pseudo_proj_True n x", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) (c ## x) = c ## pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) (c ## x) = c ## x", "also"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) (c ## x) = c ## pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) (c ## x) = c ## x", "have \"... = c## x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c ## pseudo_proj_True n x = c ## x", "using \\<open>pseudo_proj_True n x = x\\<close>"], ["proof (prove)\nusing this:\n  pseudo_proj_True n x = x\n\ngoal (1 subgoal):\n 1. c ## pseudo_proj_True n x = c ## x", "by simp"], ["proof (state)\nthis:\n  c ## pseudo_proj_True n x = c ## x\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) (c ## x) = c ## x", "finally"], ["proof (chain)\npicking this:\n  pseudo_proj_True (Suc n) (c ## x) = c ## x", "show ?thesis"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) (c ## x) = c ## x\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) (c ## x) = c ## x", "."], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) (c ## x) = c ## x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) (c ## x) = c ## x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       x \\<in> stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}", "hence \"c##x\\<in> range (pseudo_proj_True (Suc n))\""], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) (c ## x) = c ## x\n\ngoal (1 subgoal):\n 1. c ## x \\<in> range (pseudo_proj_True (Suc n))", "by (simp add: pseudo_proj_True_img)"], ["proof (state)\nthis:\n  c ## x \\<in> range (pseudo_proj_True (Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       x \\<in> stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}", "thus \"x\\<in> stl`{w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\""], ["proof (prove)\nusing this:\n  c ## x \\<in> range (pseudo_proj_True (Suc n))\n\ngoal (1 subgoal):\n 1. x \\<in> stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c ## x \\<in> range (pseudo_proj_True (Suc n)) \\<Longrightarrow>\n    x \\<in> stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}", "have \"\\<exists>s. (s \\<in> range (pseudo_proj_True (Suc n)) \\<and> s !! 0 = c) \\<and> stl s = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s.\n       (s \\<in> range (pseudo_proj_True (Suc n)) \\<and> s !! 0 = c) \\<and>\n       stl s = x", "by (metis (no_types) \\<open>c ## x \\<in> range (pseudo_proj_True (Suc n))\\<close> snth.simps(1) stream.sel(1) stream.sel(2))"], ["proof (state)\nthis:\n  \\<exists>s.\n     (s \\<in> range (pseudo_proj_True (Suc n)) \\<and> s !! 0 = c) \\<and>\n     stl s = x\n\ngoal (1 subgoal):\n 1. c ## x \\<in> range (pseudo_proj_True (Suc n)) \\<Longrightarrow>\n    x \\<in> stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}", "then"], ["proof (chain)\npicking this:\n  \\<exists>s.\n     (s \\<in> range (pseudo_proj_True (Suc n)) \\<and> s !! 0 = c) \\<and>\n     stl s = x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>s.\n     (s \\<in> range (pseudo_proj_True (Suc n)) \\<and> s !! 0 = c) \\<and>\n     stl s = x\n\ngoal (1 subgoal):\n 1. x \\<in> stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}", "by force"], ["proof (state)\nthis:\n  x \\<in> stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  range (pseudo_proj_True n)\n  \\<subseteq> stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n\ngoal (1 subgoal):\n 1. stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n    \\<subseteq> range (pseudo_proj_True n)", "show \"stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c} \\<subseteq> range (pseudo_proj_True n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n    \\<subseteq> range (pseudo_proj_True n)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> stl `\n               {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True n)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> stl `\n               {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True n)", "assume \"x\\<in> stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\""], ["proof (state)\nthis:\n  x \\<in> stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> stl `\n               {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True n)", "hence \"\\<exists> w\\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}. x = stl w\""], ["proof (prove)\nusing this:\n  x \\<in> stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n\ngoal (1 subgoal):\n 1. \\<exists>w\\<in>{w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}.\n       x = stl w", "by auto"], ["proof (state)\nthis:\n  \\<exists>w\\<in>{w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}.\n     x = stl w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> stl `\n               {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True n)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>w\\<in>{w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}.\n     x = stl w", "obtain w where \"w \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\" and \"x = stl w\""], ["proof (prove)\nusing this:\n  \\<exists>w\\<in>{w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}.\n     x = stl w\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>w \\<in> {w \\<in> range (pseudo_proj_True (Suc n)).\n                          w !! 0 = c};\n         x = stl w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  w \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n  x = stl w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> stl `\n               {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True n)", "have \"w\\<in> range (pseudo_proj_True (Suc n))\" and \"w!!0 = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> range (pseudo_proj_True (Suc n)) &&& w !! 0 = c", "using \\<open>w \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\\<close>"], ["proof (prove)\nusing this:\n  w \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n\ngoal (1 subgoal):\n 1. w \\<in> range (pseudo_proj_True (Suc n)) &&& w !! 0 = c", "by auto"], ["proof (state)\nthis:\n  w \\<in> range (pseudo_proj_True (Suc n))\n  w !! 0 = c\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> stl `\n               {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True n)", "have \"c##x = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c ## x = w", "using \\<open>x = stl w\\<close> \\<open>w!!0 = c\\<close>"], ["proof (prove)\nusing this:\n  x = stl w\n  w !! 0 = c\n\ngoal (1 subgoal):\n 1. c ## x = w", "by force"], ["proof (state)\nthis:\n  c ## x = w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> stl `\n               {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True n)", "also"], ["proof (state)\nthis:\n  c ## x = w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> stl `\n               {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True n)", "have \"... = pseudo_proj_True (Suc n) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w = pseudo_proj_True (Suc n) w", "using \\<open>w\\<in> range (pseudo_proj_True (Suc n))\\<close>"], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True (Suc n))\n\ngoal (1 subgoal):\n 1. w = pseudo_proj_True (Suc n) w", "using pseudo_proj_True_proj"], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True (Suc n))\n  pseudo_proj_True ?n (pseudo_proj_True ?n ?w) = pseudo_proj_True ?n ?w\n\ngoal (1 subgoal):\n 1. w = pseudo_proj_True (Suc n) w", "by auto"], ["proof (state)\nthis:\n  w = pseudo_proj_True (Suc n) w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> stl `\n               {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True n)", "also"], ["proof (state)\nthis:\n  w = pseudo_proj_True (Suc n) w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> stl `\n               {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True n)", "have \"... = c ## pseudo_proj_True n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w = c ## pseudo_proj_True n x", "using \\<open>x = stl w\\<close> \\<open>w!!0 = c\\<close>"], ["proof (prove)\nusing this:\n  x = stl w\n  w !! 0 = c\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w = c ## pseudo_proj_True n x", "by (simp add:pseudo_proj_True_Suc_prefix)"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) w = c ## pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> stl `\n               {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True n)", "finally"], ["proof (chain)\npicking this:\n  c ## x = c ## pseudo_proj_True n x", "have \"c##x = c## pseudo_proj_True n x\""], ["proof (prove)\nusing this:\n  c ## x = c ## pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. c ## x = c ## pseudo_proj_True n x", "."], ["proof (state)\nthis:\n  c ## x = c ## pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> stl `\n               {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True n)", "hence \"x = pseudo_proj_True n x\""], ["proof (prove)\nusing this:\n  c ## x = c ## pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. x = pseudo_proj_True n x", "by simp"], ["proof (state)\nthis:\n  x = pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> stl `\n               {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       x \\<in> range (pseudo_proj_True n)", "thus \"x\\<in> range (pseudo_proj_True n)\""], ["proof (prove)\nusing this:\n  x = pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. x \\<in> range (pseudo_proj_True n)", "by auto"], ["proof (state)\nthis:\n  x \\<in> range (pseudo_proj_True n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n  \\<subseteq> range (pseudo_proj_True n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  range (pseudo_proj_True n) =\n  stl ` {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = c ## x} *\n       ennreal (f (c ## stl x)) =\n       emeasure M (pseudo_proj_True (Suc n) -` {x} \\<inter> space M) *\n       ennreal (f x)", "show \"\\<And>x. x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c} \\<Longrightarrow>\n         emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = c ## x} * ennreal (f (c ## stl x)) =\n         emeasure M (pseudo_proj_True (Suc n) -` {x} \\<inter> space M) * ennreal (f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = c ## x} *\n       ennreal (f (c ## stl x)) =\n       emeasure M (pseudo_proj_True (Suc n) -` {x} \\<inter> space M) *\n       ennreal (f x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = c ## x} *\n       ennreal (f (c ## stl x)) =\n       emeasure M (pseudo_proj_True (Suc n) -` {x} \\<inter> space M) *\n       ennreal (f x)", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = c ## x} *\n       ennreal (f (c ## stl x)) =\n       emeasure M (pseudo_proj_True (Suc n) -` {x} \\<inter> space M) *\n       ennreal (f x)", "assume \"w \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\""], ["proof (state)\nthis:\n  w \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = c ## x} *\n       ennreal (f (c ## stl x)) =\n       emeasure M (pseudo_proj_True (Suc n) -` {x} \\<inter> space M) *\n       ennreal (f x)", "hence \"w \\<in> range (pseudo_proj_True (Suc n))\" and \"w !! 0 = c\""], ["proof (prove)\nusing this:\n  w \\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = c}\n\ngoal (1 subgoal):\n 1. w \\<in> range (pseudo_proj_True (Suc n)) &&& w !! 0 = c", "by auto"], ["proof (state)\nthis:\n  w \\<in> range (pseudo_proj_True (Suc n))\n  w !! 0 = c\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = c ## x} *\n       ennreal (f (c ## stl x)) =\n       emeasure M (pseudo_proj_True (Suc n) -` {x} \\<inter> space M) *\n       ennreal (f x)", "have \"{z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x} = (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {z \\<in> space M.\n     \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x} =\n    pseudo_proj_True (Suc n) -` {w} \\<inter> space M", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {z \\<in> space M.\n     \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}\n    \\<subseteq> pseudo_proj_True (Suc n) -` {w} \\<inter> space M\n 2. pseudo_proj_True (Suc n) -` {w} \\<inter> space M\n    \\<subseteq> {z \\<in> space M.\n                 \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}", "show \"{z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x} \\<subseteq> pseudo_proj_True (Suc n) -` {w} \\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {z \\<in> space M.\n     \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}\n    \\<subseteq> pseudo_proj_True (Suc n) -` {w} \\<inter> space M", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}.\n                   z = c ## x} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter> space M", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}.\n                   z = c ## x} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter> space M", "assume \"z \\<in> {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}\""], ["proof (state)\nthis:\n  z \\<in> {z \\<in> space M.\n           \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}.\n                   z = c ## x} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter> space M", "hence \"\\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x\" and \"z\\<in> space M\""], ["proof (prove)\nusing this:\n  z \\<in> {z \\<in> space M.\n           \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x &&&\n    z \\<in> space M", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x\n  z \\<in> space M\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}.\n                   z = c ## x} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter> space M", "from \\<open>\\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x\\<close>"], ["proof (chain)\npicking this:\n  \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x", "obtain x where \"x\\<in>pseudo_proj_True n -` {stl w}\"\n                and \"z = c##x\""], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> pseudo_proj_True n -` {stl w}; z = c ## x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> pseudo_proj_True n -` {stl w}\n  z = c ## x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}.\n                   z = c ## x} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter> space M", "have \"pseudo_proj_True (Suc n) z = c ## pseudo_proj_True n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) z = c ## pseudo_proj_True n x", "using \\<open>z = c##x\\<close>"], ["proof (prove)\nusing this:\n  z = c ## x\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) z = c ## pseudo_proj_True n x", "by (simp add:pseudo_proj_True_Suc_prefix)"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) z = c ## pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}.\n                   z = c ## x} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter> space M", "also"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) z = c ## pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}.\n                   z = c ## x} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter> space M", "have \"... = c## stl w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c ## pseudo_proj_True n x = c ## stl w", "using \\<open>x\\<in>pseudo_proj_True n -` {stl w}\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> pseudo_proj_True n -` {stl w}\n\ngoal (1 subgoal):\n 1. c ## pseudo_proj_True n x = c ## stl w", "by simp"], ["proof (state)\nthis:\n  c ## pseudo_proj_True n x = c ## stl w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}.\n                   z = c ## x} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter> space M", "also"], ["proof (state)\nthis:\n  c ## pseudo_proj_True n x = c ## stl w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}.\n                   z = c ## x} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter> space M", "have \"... = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c ## stl w = w", "using \\<open>w !! 0 = c\\<close>"], ["proof (prove)\nusing this:\n  w !! 0 = c\n\ngoal (1 subgoal):\n 1. c ## stl w = w", "by force"], ["proof (state)\nthis:\n  c ## stl w = w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}.\n                   z = c ## x} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter> space M", "finally"], ["proof (chain)\npicking this:\n  pseudo_proj_True (Suc n) z = w", "have \"pseudo_proj_True (Suc n) z = w\""], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) z = w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) z = w", "."], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) z = w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}.\n                   z = c ## x} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter> space M", "thus \"z\\<in> pseudo_proj_True (Suc n) -` {w} \\<inter> space M\""], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) z = w\n\ngoal (1 subgoal):\n 1. z \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter> space M", "using \\<open>z\\<in> space M\\<close>"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) z = w\n  z \\<in> space M\n\ngoal (1 subgoal):\n 1. z \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter> space M", "by auto"], ["proof (state)\nthis:\n  z \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter> space M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {z \\<in> space M.\n   \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}\n  \\<subseteq> pseudo_proj_True (Suc n) -` {w} \\<inter> space M\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<inter> space M\n    \\<subseteq> {z \\<in> space M.\n                 \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}", "show \"pseudo_proj_True (Suc n) -` {w} \\<inter> space M \\<subseteq> {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} \\<inter> space M\n    \\<subseteq> {z \\<in> space M.\n                 \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}", "assume \"z\\<in> pseudo_proj_True (Suc n) -` {w} \\<inter> space M\""], ["proof (state)\nthis:\n  z \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}", "hence \"z\\<in> space M\" and \"pseudo_proj_True (Suc n) z = w\""], ["proof (prove)\nusing this:\n  z \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter> space M\n\ngoal (1 subgoal):\n 1. z \\<in> space M &&& pseudo_proj_True (Suc n) z = w", "by auto"], ["proof (state)\nthis:\n  z \\<in> space M\n  pseudo_proj_True (Suc n) z = w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}", "hence \"stl w = stl (pseudo_proj_True (Suc n) z)\""], ["proof (prove)\nusing this:\n  z \\<in> space M\n  pseudo_proj_True (Suc n) z = w\n\ngoal (1 subgoal):\n 1. stl w = stl (pseudo_proj_True (Suc n) z)", "by simp"], ["proof (state)\nthis:\n  stl w = stl (pseudo_proj_True (Suc n) z)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}", "also"], ["proof (state)\nthis:\n  stl w = stl (pseudo_proj_True (Suc n) z)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}", "have \"... = pseudo_proj_True n (stl z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stl (pseudo_proj_True (Suc n) z) = pseudo_proj_True n (stl z)", "by (simp add: pseudo_proj_True_Suc_prefix)"], ["proof (state)\nthis:\n  stl (pseudo_proj_True (Suc n) z) = pseudo_proj_True n (stl z)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}", "finally"], ["proof (chain)\npicking this:\n  stl w = pseudo_proj_True n (stl z)", "have \"stl w = pseudo_proj_True n (stl z)\""], ["proof (prove)\nusing this:\n  stl w = pseudo_proj_True n (stl z)\n\ngoal (1 subgoal):\n 1. stl w = pseudo_proj_True n (stl z)", "."], ["proof (state)\nthis:\n  stl w = pseudo_proj_True n (stl z)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}", "hence \"stl z \\<in> pseudo_proj_True n -` {stl w}\""], ["proof (prove)\nusing this:\n  stl w = pseudo_proj_True n (stl z)\n\ngoal (1 subgoal):\n 1. stl z \\<in> pseudo_proj_True n -` {stl w}", "by simp"], ["proof (state)\nthis:\n  stl z \\<in> pseudo_proj_True n -` {stl w}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}", "have \"z!!0 ## pseudo_proj_True n (stl z) = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z !! 0 ## pseudo_proj_True n (stl z) = w", "using pseudo_proj_True_Suc_prefix\n                \\<open>pseudo_proj_True (Suc n) z = w\\<close>"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc ?n) ?w = ?w !! 0 ## pseudo_proj_True ?n (stl ?w)\n  pseudo_proj_True (Suc n) z = w\n\ngoal (1 subgoal):\n 1. z !! 0 ## pseudo_proj_True n (stl z) = w", "by simp"], ["proof (state)\nthis:\n  z !! 0 ## pseudo_proj_True n (stl z) = w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}", "also"], ["proof (state)\nthis:\n  z !! 0 ## pseudo_proj_True n (stl z) = w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}", "have \"... = c## (stl w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w = c ## stl w", "using \\<open>w!!0 = c\\<close>"], ["proof (prove)\nusing this:\n  w !! 0 = c\n\ngoal (1 subgoal):\n 1. w = c ## stl w", "by force"], ["proof (state)\nthis:\n  w = c ## stl w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}", "finally"], ["proof (chain)\npicking this:\n  z !! 0 ## pseudo_proj_True n (stl z) = c ## stl w", "have \"z!!0 ## pseudo_proj_True n (stl z) = c## (stl w)\""], ["proof (prove)\nusing this:\n  z !! 0 ## pseudo_proj_True n (stl z) = c ## stl w\n\ngoal (1 subgoal):\n 1. z !! 0 ## pseudo_proj_True n (stl z) = c ## stl w", "."], ["proof (state)\nthis:\n  z !! 0 ## pseudo_proj_True n (stl z) = c ## stl w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}", "hence \"z!!0 = c\""], ["proof (prove)\nusing this:\n  z !! 0 ## pseudo_proj_True n (stl z) = c ## stl w\n\ngoal (1 subgoal):\n 1. z !! 0 = c", "by simp"], ["proof (state)\nthis:\n  z !! 0 = c\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}", "hence \"z =c## (stl z)\""], ["proof (prove)\nusing this:\n  z !! 0 = c\n\ngoal (1 subgoal):\n 1. z = c ## stl z", "by force"], ["proof (state)\nthis:\n  z = c ## stl z\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc n) -` {w} \\<inter>\n               space M \\<Longrightarrow>\n       x \\<in> {z \\<in> space M.\n                \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}", "thus \"z\\<in> {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}\""], ["proof (prove)\nusing this:\n  z = c ## stl z\n\ngoal (1 subgoal):\n 1. z \\<in> {z \\<in> space M.\n             \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}", "using \\<open>z\\<in> space M\\<close>\n                \\<open>stl z \\<in> pseudo_proj_True n -` {stl w}\\<close>"], ["proof (prove)\nusing this:\n  z = c ## stl z\n  z \\<in> space M\n  stl z \\<in> pseudo_proj_True n -` {stl w}\n\ngoal (1 subgoal):\n 1. z \\<in> {z \\<in> space M.\n             \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}", "by auto"], ["proof (state)\nthis:\n  z \\<in> {z \\<in> space M.\n           \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) -` {w} \\<inter> space M\n  \\<subseteq> {z \\<in> space M.\n               \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {z \\<in> space M.\n   \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x} =\n  pseudo_proj_True (Suc n) -` {w} \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = c ## x} *\n       ennreal (f (c ## stl x)) =\n       emeasure M (pseudo_proj_True (Suc n) -` {x} \\<inter> space M) *\n       ennreal (f x)", "hence \"emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x} * ennreal (f (c ## stl w)) =\n            emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * ennreal (f (c ## stl w))\""], ["proof (prove)\nusing this:\n  {z \\<in> space M.\n   \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x} =\n  pseudo_proj_True (Suc n) -` {w} \\<inter> space M\n\ngoal (1 subgoal):\n 1. emeasure M\n     {z \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x} *\n    ennreal (f (c ## stl w)) =\n    emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n    ennreal (f (c ## stl w))", "by simp"], ["proof (state)\nthis:\n  emeasure M\n   {z \\<in> space M.\n    \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x} *\n  ennreal (f (c ## stl w)) =\n  emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n  ennreal (f (c ## stl w))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = c ## x} *\n       ennreal (f (c ## stl x)) =\n       emeasure M (pseudo_proj_True (Suc n) -` {x} \\<inter> space M) *\n       ennreal (f x)", "also"], ["proof (state)\nthis:\n  emeasure M\n   {z \\<in> space M.\n    \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x} *\n  ennreal (f (c ## stl w)) =\n  emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n  ennreal (f (c ## stl w))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = c ## x} *\n       ennreal (f (c ## stl x)) =\n       emeasure M (pseudo_proj_True (Suc n) -` {x} \\<inter> space M) *\n       ennreal (f x)", "have \"... = emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * ennreal (f w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n    ennreal (f (c ## stl w)) =\n    emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n    ennreal (f w)", "using \\<open>w!!0 = c\\<close>"], ["proof (prove)\nusing this:\n  w !! 0 = c\n\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n    ennreal (f (c ## stl w)) =\n    emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n    ennreal (f w)", "by force"], ["proof (state)\nthis:\n  emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n  ennreal (f (c ## stl w)) =\n  emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n  ennreal (f w)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = c} \\<Longrightarrow>\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {stl x}. z = c ## x} *\n       ennreal (f (c ## stl x)) =\n       emeasure M (pseudo_proj_True (Suc n) -` {x} \\<inter> space M) *\n       ennreal (f x)", "finally"], ["proof (chain)\npicking this:\n  emeasure M\n   {z \\<in> space M.\n    \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x} *\n  ennreal (f (c ## stl w)) =\n  emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n  ennreal (f w)", "show \"emeasure M {z \\<in> space M. \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x} * ennreal (f (c ## stl w)) =\n            emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * ennreal (f w)\""], ["proof (prove)\nusing this:\n  emeasure M\n   {z \\<in> space M.\n    \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x} *\n  ennreal (f (c ## stl w)) =\n  emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n  ennreal (f w)\n\ngoal (1 subgoal):\n 1. emeasure M\n     {z \\<in> space M.\n      \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x} *\n    ennreal (f (c ## stl w)) =\n    emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n    ennreal (f w)", "."], ["proof (state)\nthis:\n  emeasure M\n   {z \\<in> space M.\n    \\<exists>x\\<in>pseudo_proj_True n -` {stl w}. z = c ## x} *\n  ennreal (f (c ## stl w)) =\n  emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n  ennreal (f w)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x1\n  \\<in> {w \\<in> range (pseudo_proj_True (Suc n)).\n         w !! 0 = c} \\<Longrightarrow>\n  emeasure M\n   {z \\<in> space M.\n    \\<exists>x\\<in>pseudo_proj_True n -` {stl ?x1}. z = c ## x} *\n  ennreal (f (c ## stl ?x1)) =\n  emeasure M (pseudo_proj_True (Suc n) -` {?x1} \\<inter> space M) *\n  ennreal (f ?x1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = c ## x} *\n     ennreal (f (c ## w))) =\n  (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and> w !! 0 = c.\n     emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     ennreal (f w))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = ?c1 ## x} *\n     ennreal (f (?c1 ## w))) =\n  (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and> w !! 0 = ?c1.\n     emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     ennreal (f w))\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = True ## x} *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = False ## x} *\n       ennreal (f (False ## w))) =\n    (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and>\n               w !! 0 = True.\n       emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       ennreal (f w)) +\n    (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and>\n               w !! 0 = False.\n       emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       ennreal (f w))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = ?c1 ## x} *\n     ennreal (f (?c1 ## w))) =\n  (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and> w !! 0 = ?c1.\n     emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     ennreal (f w))\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = True ## x} *\n       ennreal (f (True ## w))) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M\n        {z \\<in> space M.\n         \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = False ## x} *\n       ennreal (f (False ## w))) =\n    (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and>\n               w !! 0 = True.\n       emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       ennreal (f w)) +\n    (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and>\n               w !! 0 = False.\n       emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       ennreal (f w))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = True ## x} *\n     ennreal (f (True ## w))) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = False ## x} *\n     ennreal (f (False ## w))) =\n  (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and> w !! 0 = True.\n     emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     ennreal (f w)) +\n  (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and> w !! 0 = False.\n     emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     ennreal (f w))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = True ## x} *\n     ennreal (f (True ## w))) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = False ## x} *\n     ennreal (f (False ## w))) =\n  (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and> w !! 0 = True.\n     emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     ennreal (f w)) +\n  (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and> w !! 0 = False.\n     emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     ennreal (f w))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = True ## x} *\n     ennreal (f (True ## w))) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M\n      {z \\<in> space M.\n       \\<exists>x\\<in>pseudo_proj_True n -` {w}. z = False ## x} *\n     ennreal (f (False ## w))) =\n  (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and> w !! 0 = True.\n     emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     ennreal (f w)) +\n  (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and> w !! 0 = False.\n     emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     ennreal (f w))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "have \"... = (\\<Sum>w\\<in> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = True} \\<union>\n    {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False}.\n    emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * ennreal (f w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and>\n               w !! 0 = True.\n       emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       ennreal (f w)) +\n    (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and>\n               w !! 0 = False.\n       emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       ennreal (f w)) =\n    (\\<Sum>w\\<in>{w \\<in> range (pseudo_proj_True (Suc n)).\n                  w !! 0 = True} \\<union>\n                 {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False}.\n       emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       ennreal (f w))", "proof (rule sum.union_disjoint[symmetric])"], ["proof (state)\ngoal (3 subgoals):\n 1. finite {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = True}\n 2. finite {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False}\n 3. {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = True} \\<inter>\n    {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False} =\n    {}", "show \"finite {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = True}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = True}", "by (simp add: pseudo_proj_True_finite_image)"], ["proof (state)\nthis:\n  finite {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = True}\n\ngoal (2 subgoals):\n 1. finite {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False}\n 2. {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = True} \\<inter>\n    {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False} =\n    {}", "show \"finite {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False}", "by (simp add: pseudo_proj_True_finite_image)"], ["proof (state)\nthis:\n  finite {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False}\n\ngoal (1 subgoal):\n 1. {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = True} \\<inter>\n    {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False} =\n    {}", "show \"{w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = True} \\<inter> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = True} \\<inter>\n    {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False} =\n    {}", "by auto"], ["proof (state)\nthis:\n  {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = True} \\<inter>\n  {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False} =\n  {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and> w !! 0 = True.\n     emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     ennreal (f w)) +\n  (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and> w !! 0 = False.\n     emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     ennreal (f w)) =\n  (\\<Sum>w\\<in>{w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = True} \\<union>\n               {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False}.\n     emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     ennreal (f w))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "also"], ["proof (state)\nthis:\n  (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and> w !! 0 = True.\n     emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     ennreal (f w)) +\n  (\\<Sum>w | w \\<in> range (pseudo_proj_True (Suc n)) \\<and> w !! 0 = False.\n     emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     ennreal (f w)) =\n  (\\<Sum>w\\<in>{w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = True} \\<union>\n               {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False}.\n     emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     ennreal (f w))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "have \"... = (\\<Sum>w\\<in> range (pseudo_proj_True (Suc n)).emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * ennreal (f w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>{w \\<in> range (pseudo_proj_True (Suc n)).\n                  w !! 0 = True} \\<union>\n                 {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False}.\n       emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       ennreal (f w)) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n       emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       ennreal (f w))", "proof (rule sum.cong)"], ["proof (state)\ngoal (2 subgoals):\n 1. {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = True} \\<union>\n    {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False} =\n    range (pseudo_proj_True (Suc n))\n 2. \\<And>x.\n       x \\<in> range (pseudo_proj_True (Suc n)) \\<Longrightarrow>\n       emeasure M (pseudo_proj_True (Suc n) -` {x} \\<inter> space M) *\n       ennreal (f x) =\n       emeasure M (pseudo_proj_True (Suc n) -` {x} \\<inter> space M) *\n       ennreal (f x)", "show \"{w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = True} \\<union> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False} =\n    range (pseudo_proj_True (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = True} \\<union>\n    {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False} =\n    range (pseudo_proj_True (Suc n))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = True} \\<union>\n    {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False}\n    \\<subseteq> range (pseudo_proj_True (Suc n))\n 2. range (pseudo_proj_True (Suc n))\n    \\<subseteq> {w \\<in> range (pseudo_proj_True (Suc n)).\n                 w !! 0 = True} \\<union>\n                {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False}", "show \"{w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = True} \\<union> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False}\n        \\<subseteq> range (pseudo_proj_True (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = True} \\<union>\n    {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False}\n    \\<subseteq> range (pseudo_proj_True (Suc n))", "by auto"], ["proof (state)\nthis:\n  {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = True} \\<union>\n  {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False}\n  \\<subseteq> range (pseudo_proj_True (Suc n))\n\ngoal (1 subgoal):\n 1. range (pseudo_proj_True (Suc n))\n    \\<subseteq> {w \\<in> range (pseudo_proj_True (Suc n)).\n                 w !! 0 = True} \\<union>\n                {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False}", "show \"range (pseudo_proj_True (Suc n))\n        \\<subseteq> {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = True} \\<union>\n        {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (pseudo_proj_True (Suc n))\n    \\<subseteq> {w \\<in> range (pseudo_proj_True (Suc n)).\n                 w !! 0 = True} \\<union>\n                {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False}", "by (simp add: subsetI)"], ["proof (state)\nthis:\n  range (pseudo_proj_True (Suc n))\n  \\<subseteq> {w \\<in> range (pseudo_proj_True (Suc n)).\n               w !! 0 = True} \\<union>\n              {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = True} \\<union>\n  {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False} =\n  range (pseudo_proj_True (Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True (Suc n)) \\<Longrightarrow>\n       emeasure M (pseudo_proj_True (Suc n) -` {x} \\<inter> space M) *\n       ennreal (f x) =\n       emeasure M (pseudo_proj_True (Suc n) -` {x} \\<inter> space M) *\n       ennreal (f x)", "qed simp"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>{w \\<in> range (pseudo_proj_True (Suc n)).\n                w !! 0 = True} \\<union>\n               {w \\<in> range (pseudo_proj_True (Suc n)). w !! 0 = False}.\n     emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     ennreal (f w)) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n     emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     ennreal (f w))\n\ngoal (1 subgoal):\n 1. \\<And>n f.\n       \\<lbrakk>\\<And>f.\n                   \\<lbrakk>\\<forall>x. 0 \\<le> f x;\n                    f \\<in> borel_measurable (F n)\\<rbrakk>\n                   \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x)\n                  \\<partial>M =\n                                     (\\<Sum>w\n      \\<in>range (pseudo_proj_True n).\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w));\n        \\<forall>x. 0 \\<le> f x;\n        f \\<in> borel_measurable (F (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n                         (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n                            emeasure M\n                             (pseudo_proj_True (Suc n) -` {w} \\<inter>\n                              space M) *\n                            ennreal (f w))", "finally"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n     emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     ennreal (f w))", "show \"integral\\<^sup>N M f =\n    (\\<Sum>w\\<in> range (pseudo_proj_True (Suc n)). emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * ennreal (f w))\""], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n     emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     ennreal (f w))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n    (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n       emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       ennreal (f w))", "."], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n     emeasure M (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     ennreal (f w))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) F_n_integral_pos:\n  fixes f::\"bool stream\\<Rightarrow>real\"\n  assumes \"f\\<in> borel_measurable (F n)\"\n  and \"\\<forall>w. 0 \\<le> f w\"\n  shows \"has_bochner_integral M f\n    (\\<Sum> w\\<in> range (pseudo_proj_True n). (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) *   (f w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "have \"integral\\<^sup>N M f = (\\<Sum> w\\<in> range (pseudo_proj_True n). (emeasure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) *   (f w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f w))", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F n)\n  \\<forall>w. 0 \\<le> f w\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f w))", "by (simp add: F_n_nn_integral_pos)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f w))\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "have \"integral\\<^sup>L M f = enn2real (integral\\<^sup>N M f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expectation f =\n    enn2real (\\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M)", "proof (rule integral_eq_nn_integral)"], ["proof (state)\ngoal (2 subgoals):\n 1. random_variable borel f\n 2. AE x in M. 0 \\<le> f x", "show \"AE x in M. 0\\<le> f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. 0 \\<le> f x", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F n)\n  \\<forall>w. 0 \\<le> f w\n\ngoal (1 subgoal):\n 1. AE x in M. 0 \\<le> f x", "by simp"], ["proof (state)\nthis:\n  AE x in M. 0 \\<le> f x\n\ngoal (1 subgoal):\n 1. random_variable borel f", "show \"random_variable borel f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable borel f", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F n)\n  \\<forall>w. 0 \\<le> f w\n\ngoal (1 subgoal):\n 1. random_variable borel f", "using measurable_from_subalg nat_filtration_subalgebra natural_filtration"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F n)\n  \\<forall>w. 0 \\<le> f w\n  \\<lbrakk>subalgebra ?M ?F; ?f \\<in> ?F \\<rightarrow>\\<^sub>M ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> ?M \\<rightarrow>\\<^sub>M ?N\n  subalgebra M (nat_filtration ?n)\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. random_variable borel f", "by blast"], ["proof (state)\nthis:\n  random_variable borel f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  expectation f =\n  enn2real (\\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "also"], ["proof (state)\nthis:\n  expectation f =\n  enn2real (\\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "have \"... = enn2real (\\<Sum> w\\<in> range (pseudo_proj_True n). (emeasure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) *   (f w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enn2real (\\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M) =\n    enn2real\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n        ennreal (f w))", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F n)\n  \\<forall>w. 0 \\<le> f w\n\ngoal (1 subgoal):\n 1. enn2real (\\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M) =\n    enn2real\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n        ennreal (f w))", "by (simp add: F_n_nn_integral_pos)"], ["proof (state)\nthis:\n  enn2real (\\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M) =\n  enn2real\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n      ennreal (f w))\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "also"], ["proof (state)\nthis:\n  enn2real (\\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M) =\n  enn2real\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n      ennreal (f w))\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "have \"... = (\\<Sum> w\\<in> range (pseudo_proj_True n). enn2real ((emeasure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) *   (f w)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enn2real\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n        ennreal (f w)) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       enn2real\n        (emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n         ennreal (f w)))", "proof (rule enn2real_sum)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (range (pseudo_proj_True n))\n 2. \\<And>w.\n       w \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f w)\n       < \\<top>", "show \"finite (range (pseudo_proj_True n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_True n))", "by (simp add: pseudo_proj_True_finite_image)"], ["proof (state)\nthis:\n  finite (range (pseudo_proj_True n))\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f w)\n       < \\<top>", "show \"\\<And>w. w \\<in> range (pseudo_proj_True n) \\<Longrightarrow> emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w) < \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f w)\n       < \\<top>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f w)\n       < \\<top>", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f w)\n       < \\<top>", "assume \"w\\<in> range (pseudo_proj_True n)\""], ["proof (state)\nthis:\n  w \\<in> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f w)\n       < \\<top>", "show \"emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w) < \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w)\n    < \\<top>", "by (simp add: emeasure_eq_measure ennreal_mult_less_top)"], ["proof (state)\nthis:\n  emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) * ennreal (f w)\n  < \\<top>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?w1 \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n  emeasure M (pseudo_proj_True n -` {?w1} \\<inter> space M) *\n  ennreal (f ?w1)\n  < \\<top>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  enn2real\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n      ennreal (f w)) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     enn2real\n      (emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f w)))\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "also"], ["proof (state)\nthis:\n  enn2real\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n      ennreal (f w)) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     enn2real\n      (emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f w)))\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "have \"... = (\\<Sum> w\\<in> range (pseudo_proj_True n).  ((measure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) *   (f w)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       enn2real\n        (emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n         ennreal (f w))) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "by (simp add: Sigma_Algebra.measure_def assms(2) enn2real_mult)"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     enn2real\n      (emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f w))) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "finally"], ["proof (chain)\npicking this:\n  expectation f =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "have \"integral\\<^sup>L M f =(\\<Sum> w\\<in> range (pseudo_proj_True n).  ((measure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) *   (f w)))\""], ["proof (prove)\nusing this:\n  expectation f =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n\ngoal (1 subgoal):\n 1. expectation f =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "."], ["proof (state)\nthis:\n  expectation f =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "moreover"], ["proof (state)\nthis:\n  expectation f =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "have \"integrable M f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M f", "proof (rule integrableI_nn_integral_finite)"], ["proof (state)\ngoal (3 subgoals):\n 1. random_variable borel f\n 2. AE x in M. 0 \\<le> f x\n 3. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M = ennreal ?x", "show \"random_variable borel f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable borel f", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F n)\n  \\<forall>w. 0 \\<le> f w\n\ngoal (1 subgoal):\n 1. random_variable borel f", "using measurable_from_subalg nat_filtration_subalgebra natural_filtration"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F n)\n  \\<forall>w. 0 \\<le> f w\n  \\<lbrakk>subalgebra ?M ?F; ?f \\<in> ?F \\<rightarrow>\\<^sub>M ?N\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> ?M \\<rightarrow>\\<^sub>M ?N\n  subalgebra M (nat_filtration ?n)\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. random_variable borel f", "by blast"], ["proof (state)\nthis:\n  random_variable borel f\n\ngoal (2 subgoals):\n 1. AE x in M. 0 \\<le> f x\n 2. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M = ennreal ?x", "show \"AE x in M. 0 \\<le> f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. 0 \\<le> f x", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F n)\n  \\<forall>w. 0 \\<le> f w\n\ngoal (1 subgoal):\n 1. AE x in M. 0 \\<le> f x", "by simp"], ["proof (state)\nthis:\n  AE x in M. 0 \\<le> f x\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M = ennreal ?x", "have \"(\\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M) = (\\<Sum> w\\<in> range (pseudo_proj_True n). (emeasure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) *   (f w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f w))", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F n)\n  \\<forall>w. 0 \\<le> f w\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f w))", "by (simp add: F_n_nn_integral_pos)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f w))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M = ennreal ?x", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f w))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M = ennreal ?x", "have \"... = (\\<Sum> w\\<in> range (pseudo_proj_True n). ennreal (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M) *   (f w)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n       ennreal (f w)) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       ennreal (prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w))", "proof (rule sum.cong, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {x} \\<inter> space M) *\n       ennreal (f x) =\n       ennreal (prob (pseudo_proj_True n -` {x} \\<inter> space M) * f x)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {x} \\<inter> space M) *\n       ennreal (f x) =\n       ennreal (prob (pseudo_proj_True n -` {x} \\<inter> space M) * f x)", "assume \"x\\<in> range (pseudo_proj_True n)\""], ["proof (state)\nthis:\n  x \\<in> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       emeasure M (pseudo_proj_True n -` {x} \\<inter> space M) *\n       ennreal (f x) =\n       ennreal (prob (pseudo_proj_True n -` {x} \\<inter> space M) * f x)", "thus \"emeasure M (pseudo_proj_True n -` {x} \\<inter> space M) * ennreal (f x) =\n         ennreal (prob (pseudo_proj_True n -` {x} \\<inter> space M) * f x)\""], ["proof (prove)\nusing this:\n  x \\<in> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True n -` {x} \\<inter> space M) *\n    ennreal (f x) =\n    ennreal (prob (pseudo_proj_True n -` {x} \\<inter> space M) * f x)", "using assms(2) emeasure_eq_measure ennreal_mult''"], ["proof (prove)\nusing this:\n  x \\<in> range (pseudo_proj_True n)\n  \\<forall>w. 0 \\<le> f w\n  emeasure M ?A = ennreal (prob ?A)\n  0 \\<le> ?b \\<Longrightarrow> ennreal (?a * ?b) = ennreal ?a * ennreal ?b\n\ngoal (1 subgoal):\n 1. emeasure M (pseudo_proj_True n -` {x} \\<inter> space M) *\n    ennreal (f x) =\n    ennreal (prob (pseudo_proj_True n -` {x} \\<inter> space M) * f x)", "by auto"], ["proof (state)\nthis:\n  emeasure M (pseudo_proj_True n -` {x} \\<inter> space M) * ennreal (f x) =\n  ennreal (prob (pseudo_proj_True n -` {x} \\<inter> space M) * f x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f w)) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     ennreal (prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M = ennreal ?x", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     emeasure M (pseudo_proj_True n -` {w} \\<inter> space M) *\n     ennreal (f w)) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     ennreal (prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M = ennreal ?x", "have \"... = ennreal (\\<Sum> w\\<in> range (pseudo_proj_True n). (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M) *   (f w)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       ennreal (prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)) =\n    ennreal\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "proof (rule ennreal_sum)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (range (pseudo_proj_True n))\n 2. \\<And>w. 0 \\<le> prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w", "show \"finite (range (pseudo_proj_True n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_True n))", "by (simp add: pseudo_proj_True_finite_image)"], ["proof (state)\nthis:\n  finite (range (pseudo_proj_True n))\n\ngoal (1 subgoal):\n 1. \\<And>w. 0 \\<le> prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w", "show \"\\<And>w. 0 \\<le> prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w. 0 \\<le> prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w", "using assms(2) measure_nonneg zero_le_mult_iff"], ["proof (prove)\nusing this:\n  \\<forall>w. 0 \\<le> f w\n  0 \\<le> Sigma_Algebra.measure ?M ?A\n  ((0::?'a) \\<le> ?a * ?b) =\n  ((0::?'a) \\<le> ?a \\<and> (0::?'a) \\<le> ?b \\<or>\n   ?a \\<le> (0::?'a) \\<and> ?b \\<le> (0::?'a))\n\ngoal (1 subgoal):\n 1. \\<And>w. 0 \\<le> prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w", "by blast"], ["proof (state)\nthis:\n  0 \\<le> prob (pseudo_proj_True n -` {?w1} \\<inter> space M) * f ?w1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     ennreal (prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)) =\n  ennreal\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M = ennreal ?x", "finally"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n  ennreal\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "show \"(\\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M) =\n      ennreal (\\<Sum> w\\<in> range (pseudo_proj_True n). (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M) *   (f w)))\""], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n  ennreal\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n    ennreal\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "."], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>M =\n  ennreal\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  integrable M f\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "ultimately"], ["proof (chain)\npicking this:\n  expectation f =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n  integrable M f", "show ?thesis"], ["proof (prove)\nusing this:\n  expectation f =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n  integrable M f\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "using has_bochner_integral_iff"], ["proof (prove)\nusing this:\n  expectation f =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n  integrable M f\n  has_bochner_integral ?M ?f ?x =\n  (integrable ?M ?f \\<and> integral\\<^sup>L ?M ?f = ?x)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "by blast"], ["proof (state)\nthis:\n  has_bochner_integral M f\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) F_n_integral:\n  fixes f::\"bool stream\\<Rightarrow>real\"\n  assumes \"f\\<in> borel_measurable (F n)\"\n  shows \"has_bochner_integral M f\n    (\\<Sum> w\\<in> range (pseudo_proj_True n). (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) * (f w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "define fpos where \"fpos = (\\<lambda>w. max 0 (f w))\""], ["proof (state)\nthis:\n  fpos = (\\<lambda>w. max 0 (f w))\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "define fneg where \"fneg = (\\<lambda>w. max 0 (-f w))\""], ["proof (state)\nthis:\n  fneg = (\\<lambda>w. max 0 (- f w))\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "have \"\\<forall>w. 0 \\<le> fpos w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w. 0 \\<le> fpos w", "unfolding fpos_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w. 0 \\<le> max 0 (f w)", "by simp"], ["proof (state)\nthis:\n  \\<forall>w. 0 \\<le> fpos w\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "have \"\\<forall>w. 0 \\<le> fneg w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w. 0 \\<le> fneg w", "unfolding fneg_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w. 0 \\<le> max 0 (- f w)", "by simp"], ["proof (state)\nthis:\n  \\<forall>w. 0 \\<le> fneg w\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "have \"fpos \\<in> borel_measurable (F n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fpos \\<in> borel_measurable (F n)", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F n)\n\ngoal (1 subgoal):\n 1. fpos \\<in> borel_measurable (F n)", "unfolding fpos_def"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. max 0 (f w)) \\<in> borel_measurable (F n)", "by simp"], ["proof (state)\nthis:\n  fpos \\<in> borel_measurable (F n)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "have \"fneg \\<in> borel_measurable (F n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fneg \\<in> borel_measurable (F n)", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F n)\n\ngoal (1 subgoal):\n 1. fneg \\<in> borel_measurable (F n)", "unfolding fneg_def"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. max 0 (- f w)) \\<in> borel_measurable (F n)", "by simp"], ["proof (state)\nthis:\n  fneg \\<in> borel_measurable (F n)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "have \"has_bochner_integral M fpos\n    (\\<Sum> w\\<in> range (pseudo_proj_True n). (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) *   (fpos w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_bochner_integral M fpos\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w)", "using \\<open>fpos\\<in> borel_measurable (F n)\\<close> \\<open>\\<forall>w. 0 \\<le> fpos w\\<close>"], ["proof (prove)\nusing this:\n  fpos \\<in> borel_measurable (F n)\n  \\<forall>w. 0 \\<le> fpos w\n\ngoal (1 subgoal):\n 1. has_bochner_integral M fpos\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w)", "by (simp add: F_n_integral_pos)"], ["proof (state)\nthis:\n  has_bochner_integral M fpos\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "moreover"], ["proof (state)\nthis:\n  has_bochner_integral M fpos\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "have \"has_bochner_integral M fneg\n    (\\<Sum> w\\<in> range (pseudo_proj_True n). (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) *   (fneg w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_bochner_integral M fneg\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w)", "using \\<open>fneg\\<in> borel_measurable (F n)\\<close> \\<open>\\<forall>w. 0 \\<le> fneg w\\<close>"], ["proof (prove)\nusing this:\n  fneg \\<in> borel_measurable (F n)\n  \\<forall>w. 0 \\<le> fneg w\n\ngoal (1 subgoal):\n 1. has_bochner_integral M fneg\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w)", "by (simp add: F_n_integral_pos)"], ["proof (state)\nthis:\n  has_bochner_integral M fneg\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "ultimately"], ["proof (chain)\npicking this:\n  has_bochner_integral M fpos\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w)\n  has_bochner_integral M fneg\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w)", "have posd: \"has_bochner_integral M (\\<lambda>w. fpos w - fneg w)\n    ((\\<Sum> w\\<in> range (pseudo_proj_True n). (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) *   (fpos w)) -\n    (\\<Sum> w\\<in> range (pseudo_proj_True n). (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) *   (fneg w)))\""], ["proof (prove)\nusing this:\n  has_bochner_integral M fpos\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w)\n  has_bochner_integral M fneg\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M (\\<lambda>w. fpos w - fneg w)\n     ((\\<Sum>w\\<in>range (pseudo_proj_True n).\n         prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w) -\n      (\\<Sum>w\\<in>range (pseudo_proj_True n).\n         prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w))", "by (simp add:has_bochner_integral_diff)"], ["proof (state)\nthis:\n  has_bochner_integral M (\\<lambda>w. fpos w - fneg w)\n   ((\\<Sum>w\\<in>range (pseudo_proj_True n).\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w) -\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w))\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "have \"((\\<Sum> w\\<in> range (pseudo_proj_True n). (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) *   (fpos w)) -\n    (\\<Sum> w\\<in> range (pseudo_proj_True n). (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) *   (fneg w))) =\n    (\\<Sum> w\\<in> range (pseudo_proj_True n). (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M) * fpos w -\n      (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) * fneg w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w) -\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w -\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w)", "by (rule sum_subtractf[symmetric])"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w) -\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w -\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w) -\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w -\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "have \"... =\n    (\\<Sum> w\\<in> range (pseudo_proj_True n). (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M) * (fpos w - fneg w)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w -\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) *\n       (fpos w - fneg w))", "proof (rule sum.cong, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       prob (pseudo_proj_True n -` {x} \\<inter> space M) * fpos x -\n       prob (pseudo_proj_True n -` {x} \\<inter> space M) * fneg x =\n       prob (pseudo_proj_True n -` {x} \\<inter> space M) * (fpos x - fneg x)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       prob (pseudo_proj_True n -` {x} \\<inter> space M) * fpos x -\n       prob (pseudo_proj_True n -` {x} \\<inter> space M) * fneg x =\n       prob (pseudo_proj_True n -` {x} \\<inter> space M) * (fpos x - fneg x)", "assume \"x\\<in> range (pseudo_proj_True n)\""], ["proof (state)\nthis:\n  x \\<in> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       prob (pseudo_proj_True n -` {x} \\<inter> space M) * fpos x -\n       prob (pseudo_proj_True n -` {x} \\<inter> space M) * fneg x =\n       prob (pseudo_proj_True n -` {x} \\<inter> space M) * (fpos x - fneg x)", "show \"prob (pseudo_proj_True n -` {x} \\<inter> space M) * fpos x - prob (pseudo_proj_True n -` {x} \\<inter> space M) * fneg x =\n         prob (pseudo_proj_True n -` {x} \\<inter> space M) * (fpos x - fneg x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True n -` {x} \\<inter> space M) * fpos x -\n    prob (pseudo_proj_True n -` {x} \\<inter> space M) * fneg x =\n    prob (pseudo_proj_True n -` {x} \\<inter> space M) * (fpos x - fneg x)", "by (rule right_diff_distrib[symmetric])"], ["proof (state)\nthis:\n  prob (pseudo_proj_True n -` {x} \\<inter> space M) * fpos x -\n  prob (pseudo_proj_True n -` {x} \\<inter> space M) * fneg x =\n  prob (pseudo_proj_True n -` {x} \\<inter> space M) * (fpos x - fneg x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w -\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * (fpos w - fneg w))\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w -\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * (fpos w - fneg w))\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "have \"... =\n    (\\<Sum> w\\<in> range (pseudo_proj_True n). (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M) * f w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) *\n       (fpos w - fneg w)) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "proof (rule sum.cong, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       prob (pseudo_proj_True n -` {x} \\<inter> space M) *\n       (fpos x - fneg x) =\n       prob (pseudo_proj_True n -` {x} \\<inter> space M) * f x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       prob (pseudo_proj_True n -` {x} \\<inter> space M) *\n       (fpos x - fneg x) =\n       prob (pseudo_proj_True n -` {x} \\<inter> space M) * f x", "assume \"x\\<in> range (pseudo_proj_True n)\""], ["proof (state)\nthis:\n  x \\<in> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       prob (pseudo_proj_True n -` {x} \\<inter> space M) *\n       (fpos x - fneg x) =\n       prob (pseudo_proj_True n -` {x} \\<inter> space M) * f x", "show \"prob (pseudo_proj_True n -` {x} \\<inter> space M) * (fpos x - fneg x) = prob (pseudo_proj_True n -` {x} \\<inter> space M) * f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True n -` {x} \\<inter> space M) * (fpos x - fneg x) =\n    prob (pseudo_proj_True n -` {x} \\<inter> space M) * f x", "unfolding fpos_def fneg_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True n -` {x} \\<inter> space M) *\n    (max 0 (f x) - max 0 (- f x)) =\n    prob (pseudo_proj_True n -` {x} \\<inter> space M) * f x", "by auto"], ["proof (state)\nthis:\n  prob (pseudo_proj_True n -` {x} \\<inter> space M) * (fpos x - fneg x) =\n  prob (pseudo_proj_True n -` {x} \\<inter> space M) * f x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) *\n     (fpos w - fneg w)) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w) -\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "have \"((\\<Sum> w\\<in> range (pseudo_proj_True n). (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) *   (fpos w)) -\n    (\\<Sum> w\\<in> range (pseudo_proj_True n). (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) *   (fneg w))) =\n    (\\<Sum> w\\<in> range (pseudo_proj_True n). (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M) * f w))\""], ["proof (prove)\nusing this:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w) -\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w) -\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "."], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w) -\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "hence \"has_bochner_integral M (\\<lambda>w. fpos w - fneg w) (\\<Sum> w\\<in> range (pseudo_proj_True n). (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M) * f w))\""], ["proof (prove)\nusing this:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w) -\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M (\\<lambda>w. fpos w - fneg w)\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "using posd"], ["proof (prove)\nusing this:\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w) -\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n  has_bochner_integral M (\\<lambda>w. fpos w - fneg w)\n   ((\\<Sum>w\\<in>range (pseudo_proj_True n).\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) * fpos w) -\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) * fneg w))\n\ngoal (1 subgoal):\n 1. has_bochner_integral M (\\<lambda>w. fpos w - fneg w)\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "by simp"], ["proof (state)\nthis:\n  has_bochner_integral M (\\<lambda>w. fpos w - fneg w)\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "moreover"], ["proof (state)\nthis:\n  has_bochner_integral M (\\<lambda>w. fpos w - fneg w)\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "have \"\\<And>w. fpos w - fneg w = f w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w. fpos w - fneg w = f w", "unfolding fpos_def fneg_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w. max 0 (f w) - max 0 (- f w) = f w", "by auto"], ["proof (state)\nthis:\n  fpos ?w1 - fneg ?w1 = f ?w1\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "ultimately"], ["proof (chain)\npicking this:\n  has_bochner_integral M (\\<lambda>w. fpos w - fneg w)\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n  fpos ?w1 - fneg ?w1 = f ?w1", "show ?thesis"], ["proof (prove)\nusing this:\n  has_bochner_integral M (\\<lambda>w. fpos w - fneg w)\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n  fpos ?w1 - fneg ?w1 = f ?w1\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "using has_bochner_integral_diff"], ["proof (prove)\nusing this:\n  has_bochner_integral M (\\<lambda>w. fpos w - fneg w)\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n  fpos ?w1 - fneg ?w1 = f ?w1\n  \\<lbrakk>has_bochner_integral ?M ?f ?x;\n   has_bochner_integral ?M ?g ?y\\<rbrakk>\n  \\<Longrightarrow> has_bochner_integral ?M (\\<lambda>x. ?f x - ?g x)\n                     (?x - ?y)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)", "by simp"], ["proof (state)\nthis:\n  has_bochner_integral M f\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) F_n_integral_prob_comp:\nfixes f::\"bool stream\\<Rightarrow>real\"\n  assumes \"f\\<in> borel_measurable (F n)\"\n  shows \"has_bochner_integral M f\n    (\\<Sum> w\\<in> range (pseudo_proj_True n). (prod (prob_component p w) {0..<n}) * (f w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prod (prob_component p w) {0..<n} * f w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prod (prob_component p w) {0..<n} * f w)", "have \"\\<forall> w\\<in> range (pseudo_proj_True n). (measure M ((pseudo_proj_True n) -`{w} \\<inter> space M)) * f w =\n    (prod (prob_component p w) {0..<n}) * (f w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>range (pseudo_proj_True n).\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w =\n       prod (prob_component p w) {0..<n} * f w", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w =\n       prod (prob_component p w) {0..<n} * f w", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w =\n       prod (prob_component p w) {0..<n} * f w", "assume \"w\\<in> range (pseudo_proj_True n)\""], ["proof (state)\nthis:\n  w \\<in> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> range (pseudo_proj_True n) \\<Longrightarrow>\n       prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w =\n       prod (prob_component p w) {0..<n} * f w", "thus \"prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w = prod (prob_component p w) {0..<n} * f w\""], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w =\n    prod (prob_component p w) {0..<n} * f w", "using bernoulli_stream_pseudo_prob bernoulli p_lt_1 p_gt_0"], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True n)\n  \\<lbrakk>M = bernoulli_stream p; p \\<le> 1; 0 \\<le> p;\n   ?w \\<in> range (pseudo_proj_True ?n)\\<rbrakk>\n  \\<Longrightarrow> prob (pseudo_proj_True ?n -` {?w} \\<inter> space M) =\n                    prod (prob_component p ?w) {0..<?n}\n  M = bernoulli_stream p\n  p \\<le> 1\n  0 \\<le> p\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w =\n    prod (prob_component p w) {0..<n} * f w", "by simp"], ["proof (state)\nthis:\n  prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w =\n  prod (prob_component p w) {0..<n} * f w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w =\n     prod (prob_component p w) {0..<n} * f w\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prod (prob_component p w) {0..<n} * f w)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w =\n     prod (prob_component p w) {0..<n} * f w\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prod (prob_component p w) {0..<n} * f w)", "using F_n_integral assms"], ["proof (prove)\nusing this:\n  \\<forall>w\\<in>range (pseudo_proj_True n).\n     prob (pseudo_proj_True n -` {w} \\<inter> space M) * f w =\n     prod (prob_component p w) {0..<n} * f w\n  ?f \\<in> borel_measurable (F ?n) \\<Longrightarrow>\n  has_bochner_integral M ?f\n   (\\<Sum>w\\<in>range (pseudo_proj_True ?n).\n      prob (pseudo_proj_True ?n -` {w} \\<inter> space M) * ?f w)\n  f \\<in> borel_measurable (F n)\n\ngoal (1 subgoal):\n 1. has_bochner_integral M f\n     (\\<Sum>w\\<in>range (pseudo_proj_True n).\n        prod (prob_component p w) {0..<n} * f w)", "by (metis (no_types, lifting) sum.cong)"], ["proof (state)\nthis:\n  has_bochner_integral M f\n   (\\<Sum>w\\<in>range (pseudo_proj_True n).\n      prod (prob_component p w) {0..<n} * f w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) expect_prob_comp:\nfixes f::\"bool stream\\<Rightarrow>real\"\n  assumes \"f\\<in> borel_measurable (F n)\"\n  shows \"expectation f =\n    (\\<Sum> w\\<in> range (pseudo_proj_True n). (prod (prob_component p w) {0..<n}) * (f w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expectation f =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       prod (prob_component p w) {0..<n} * f w)", "using assms F_n_integral_prob_comp has_bochner_integral_iff"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F n)\n  ?f \\<in> borel_measurable (F ?n) \\<Longrightarrow>\n  has_bochner_integral M ?f\n   (\\<Sum>w\\<in>range (pseudo_proj_True ?n).\n      prod (prob_component p w) {0..<?n} * ?f w)\n  has_bochner_integral ?M ?f ?x =\n  (integrable ?M ?f \\<and> integral\\<^sup>L ?M ?f = ?x)\n\ngoal (1 subgoal):\n 1. expectation f =\n    (\\<Sum>w\\<in>range (pseudo_proj_True n).\n       prod (prob_component p w) {0..<n} * f w)", "by blast"], ["", "lemma sum_union_disjoint':\n  assumes \"finite A\"\n    and \"finite B\"\n    and \"A \\<inter> B = {}\"\n    and \"A \\<union> B = C\"\n  shows \"sum g C = sum g A + sum g B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum g C = sum g A + sum g B", "using sum.union_disjoint[OF assms(1-3)] and assms(4)"], ["proof (prove)\nusing this:\n  sum ?g (A \\<union> B) = sum ?g A + sum ?g B\n  A \\<union> B = C\n\ngoal (1 subgoal):\n 1. sum g C = sum g A + sum g B", "by auto"], ["", "lemma (in infinite_cts_filtration) borel_Suc_expectation:\n  fixes f::\"bool stream\\<Rightarrow> real\"\n  assumes \"f\\<in> borel_measurable (F (Suc n))\"\n  and \"g\\<in> measurable (F n) N\"\n  and \"set_discriminating n g N\"\n  and \"g -` {g z} \\<in> sets (F n)\"\n  and \"\\<forall>y z. (g y = g z \\<and> snth y n = snth z n) \\<longrightarrow> f y = f z\"\n  shows \"expectation (\\<lambda>x. f x * indicator (g -` {g z}) x) =\n    prob (g -` {g z}) * (p * f (pseudo_proj_True n z) +\n     (1 -p) * f (pseudo_proj_False n z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "define expind where \"expind = (\\<lambda>x. f x * indicator (g -` {g z}) x)\""], ["proof (state)\nthis:\n  expind = (\\<lambda>x. f x * indicat_real (g -` {g z}) x)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "have \"expind\\<in> borel_measurable (F (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expind \\<in> borel_measurable (F (Suc n))", "unfolding expind_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x * indicat_real (g -` {g z}) x)\n    \\<in> borel_measurable (F (Suc n))", "proof (rule borel_measurable_times, (simp add:assms(1,2)))"], ["proof (state)\ngoal (1 subgoal):\n 1. indicat_real (g -` {g z}) \\<in> borel_measurable (F (Suc n))", "show \"indicator (g -` {g z}) \\<in> borel_measurable (F (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. indicator (g -` {g z}) \\<in> borel_measurable (F (Suc n))", "proof (rule borel_measurable_indicator)"], ["proof (state)\ngoal (1 subgoal):\n 1. g -` {g z} \\<in> sets (F (Suc n))", "have \"g -` {g z} \\<in> sets (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g -` {g z} \\<in> sets (nat_filtration n)", "using assms nat_filtration_borel_measurable_singleton natural_filtration"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  g -` {g z} \\<in> sets (F n)\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  ?f -` {?f ?x} \\<in> sets (nat_filtration ?n)\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. g -` {g z} \\<in> sets (nat_filtration n)", "by simp"], ["proof (state)\nthis:\n  g -` {g z} \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. g -` {g z} \\<in> sets (F (Suc n))", "hence \"g -` {g z} \\<in> sets (F n)\""], ["proof (prove)\nusing this:\n  g -` {g z} \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. g -` {g z} \\<in> sets (F n)", "using natural_filtration"], ["proof (prove)\nusing this:\n  g -` {g z} \\<in> sets (nat_filtration n)\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. g -` {g z} \\<in> sets (F n)", "by simp"], ["proof (state)\nthis:\n  g -` {g z} \\<in> sets (F n)\n\ngoal (1 subgoal):\n 1. g -` {g z} \\<in> sets (F (Suc n))", "thus \"g -` {g z} \\<in> sets (F (Suc n))\""], ["proof (prove)\nusing this:\n  g -` {g z} \\<in> sets (F n)\n\ngoal (1 subgoal):\n 1. g -` {g z} \\<in> sets (F (Suc n))", "using nat_filtration_Suc_sets natural_filtration"], ["proof (prove)\nusing this:\n  g -` {g z} \\<in> sets (F n)\n  sets (nat_filtration ?n) \\<subseteq> sets (nat_filtration (Suc ?n))\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. g -` {g z} \\<in> sets (F (Suc n))", "by blast"], ["proof (state)\nthis:\n  g -` {g z} \\<in> sets (F (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  indicator (g -` {g z}) \\<in> borel_measurable (F (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  expind \\<in> borel_measurable (F (Suc n))\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "hence \"expectation expind =\n    (\\<Sum> w\\<in> range (pseudo_proj_True (Suc n)). (measure M ((pseudo_proj_True (Suc n)) -`{w} \\<inter> space M)) * (expind w))\""], ["proof (prove)\nusing this:\n  expind \\<in> borel_measurable (F (Suc n))\n\ngoal (1 subgoal):\n 1. expectation expind =\n    (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w)", "by (simp add:F_n_integral has_bochner_integral_integral_eq)"], ["proof (state)\nthis:\n  expectation expind =\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "also"], ["proof (state)\nthis:\n  expectation expind =\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "have \"... = (\\<Sum> w\\<in> range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n    (measure M ((pseudo_proj_True (Suc n)) -`{w} \\<inter> space M)) * (expind w)) +\n    (\\<Sum> w\\<in> range (pseudo_proj_True (Suc n)) - g -` {g z}.\n    (measure M ((pseudo_proj_True (Suc n)) -`{w} \\<inter> space M)) * (expind w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) - g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w)", "by (simp add: Int_Diff_Un Int_Diff_disjoint assms sum_union_disjoint' pseudo_proj_True_finite_image)"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) - g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)).\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) - g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "have \"... = (\\<Sum> w\\<in> range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n    (measure M ((pseudo_proj_True (Suc n)) -`{w} \\<inter> space M)) * (expind w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) - g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) - g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w)", "have \"\\<forall>w\\<in> range (pseudo_proj_True (Suc n)) - g -` {g z}. expind w = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>range (pseudo_proj_True (Suc n)) - g -` {g z}.\n       expind w = 0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> range (pseudo_proj_True (Suc n)) -\n               g -` {g z} \\<Longrightarrow>\n       expind w = 0", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> range (pseudo_proj_True (Suc n)) -\n               g -` {g z} \\<Longrightarrow>\n       expind w = 0", "assume \"w\\<in> range (pseudo_proj_True (Suc n)) - g -` {g z}\""], ["proof (state)\nthis:\n  w \\<in> range (pseudo_proj_True (Suc n)) - g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> range (pseudo_proj_True (Suc n)) -\n               g -` {g z} \\<Longrightarrow>\n       expind w = 0", "thus \"expind w = 0\""], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True (Suc n)) - g -` {g z}\n\ngoal (1 subgoal):\n 1. expind w = 0", "unfolding expind_def"], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True (Suc n)) - g -` {g z}\n\ngoal (1 subgoal):\n 1. f w * indicat_real (g -` {g z}) w = 0", "by simp"], ["proof (state)\nthis:\n  expind w = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w\\<in>range (pseudo_proj_True (Suc n)) - g -` {g z}. expind w = 0\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) - g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>w\\<in>range (pseudo_proj_True (Suc n)) - g -` {g z}. expind w = 0\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) +\n    (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) - g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) - g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) - g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) +\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) - g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "have \"... = (\\<Sum> w\\<in> range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n    (measure M ((pseudo_proj_True (Suc n)) -`{w} \\<inter> space M)) * f w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)", "have \"\\<forall>w\\<in> range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}. expind w = f w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n       expind w = f w", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n               g -` {g z} \\<Longrightarrow>\n       expind w = f w", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n               g -` {g z} \\<Longrightarrow>\n       expind w = f w", "assume \"w\\<in> range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}\""], ["proof (state)\nthis:\n  w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n               g -` {g z} \\<Longrightarrow>\n       expind w = f w", "hence \"w\\<in> g -`{g z}\""], ["proof (prove)\nusing this:\n  w \\<in> range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}\n\ngoal (1 subgoal):\n 1. w \\<in> g -` {g z}", "by simp"], ["proof (state)\nthis:\n  w \\<in> g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> range (pseudo_proj_True (Suc n)) \\<inter>\n               g -` {g z} \\<Longrightarrow>\n       expind w = f w", "thus \"expind w = f w\""], ["proof (prove)\nusing this:\n  w \\<in> g -` {g z}\n\ngoal (1 subgoal):\n 1. expind w = f w", "unfolding expind_def"], ["proof (prove)\nusing this:\n  w \\<in> g -` {g z}\n\ngoal (1 subgoal):\n 1. f w * indicat_real (g -` {g z}) w = f w", "by simp"], ["proof (state)\nthis:\n  expind w = f w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n     expind w = f w\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n     expind w = f w\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) =\n    (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * expind w) =\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "have \"... = (\\<Sum> w\\<in> (pseudo_proj_True n) ` (g -` {g z}) \\<union> (pseudo_proj_False n) ` (g -` {g z}).\n    (measure M ((pseudo_proj_True (Suc n)) -`{w} \\<inter> space M)) * f w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z} \\<union>\n                 pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)", "using f_borel_Suc_preimage[of g] assms(1,2, 3)"], ["proof (prove)\nusing this:\n  \\<lbrakk>g \\<in> F ?n \\<rightarrow>\\<^sub>M ?N;\n   set_discriminating ?n g ?N\\<rbrakk>\n  \\<Longrightarrow> range (pseudo_proj_True (Suc ?n)) \\<inter> g -` {g ?x} =\n                    pseudo_proj_True ?n ` g -` {g ?x} \\<union>\n                    pseudo_proj_False ?n ` g -` {g ?x}\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z} \\<union>\n                 pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z} \\<union>\n               pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>range (pseudo_proj_True (Suc n)) \\<inter> g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z} \\<union>\n               pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "have \"... = (\\<Sum> w\\<in> (pseudo_proj_True n) ` (g -` {g z}).\n    (measure M ((pseudo_proj_True (Suc n)) -`{w} \\<inter> space M)) * f w) +\n    (\\<Sum>w\\<in> (pseudo_proj_False n) ` (g -` {g z}).\n    (measure M ((pseudo_proj_True (Suc n)) -`{w} \\<inter> space M)) * f w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z} \\<union>\n                 pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)", "proof (rule sum_union_disjoint')"], ["proof (state)\ngoal (4 subgoals):\n 1. finite (pseudo_proj_True n ` g -` {g z})\n 2. finite (pseudo_proj_False n ` g -` {g z})\n 3. pseudo_proj_True n ` g -` {g z} \\<inter>\n    pseudo_proj_False n ` g -` {g z} =\n    {}\n 4. pseudo_proj_True n ` g -` {g z} \\<union>\n    pseudo_proj_False n ` g -` {g z} =\n    pseudo_proj_True n ` g -` {g z} \\<union>\n    pseudo_proj_False n ` g -` {g z}", "show \"finite (pseudo_proj_True n ` g -` {g z})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (pseudo_proj_True n ` g -` {g z})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (pseudo_proj_True n ` g -` {g z})", "have \"finite (range (pseudo_proj_True n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_True n))", "by (simp add: pseudo_proj_True_finite_image)"], ["proof (state)\nthis:\n  finite (range (pseudo_proj_True n))\n\ngoal (1 subgoal):\n 1. finite (pseudo_proj_True n ` g -` {g z})", "moreover"], ["proof (state)\nthis:\n  finite (range (pseudo_proj_True n))\n\ngoal (1 subgoal):\n 1. finite (pseudo_proj_True n ` g -` {g z})", "have \"pseudo_proj_True n ` g -` {g z} \\<subseteq> range (pseudo_proj_True n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n ` g -` {g z} \\<subseteq> range (pseudo_proj_True n)", "by (simp add: image_mono)"], ["proof (state)\nthis:\n  pseudo_proj_True n ` g -` {g z} \\<subseteq> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. finite (pseudo_proj_True n ` g -` {g z})", "ultimately"], ["proof (chain)\npicking this:\n  finite (range (pseudo_proj_True n))\n  pseudo_proj_True n ` g -` {g z} \\<subseteq> range (pseudo_proj_True n)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (range (pseudo_proj_True n))\n  pseudo_proj_True n ` g -` {g z} \\<subseteq> range (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. finite (pseudo_proj_True n ` g -` {g z})", "by (simp add:finite_subset)"], ["proof (state)\nthis:\n  finite (pseudo_proj_True n ` g -` {g z})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite (pseudo_proj_True n ` g -` {g z})\n\ngoal (3 subgoals):\n 1. finite (pseudo_proj_False n ` g -` {g z})\n 2. pseudo_proj_True n ` g -` {g z} \\<inter>\n    pseudo_proj_False n ` g -` {g z} =\n    {}\n 3. pseudo_proj_True n ` g -` {g z} \\<union>\n    pseudo_proj_False n ` g -` {g z} =\n    pseudo_proj_True n ` g -` {g z} \\<union>\n    pseudo_proj_False n ` g -` {g z}", "show \"finite (pseudo_proj_False n ` g -` {g z})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (pseudo_proj_False n ` g -` {g z})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (pseudo_proj_False n ` g -` {g z})", "have \"finite (range (pseudo_proj_False n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_False n))", "by (metis image_subsetI infinite_super proj_rep_set proj_rep_set_finite pseudo_proj_True_Suc_False_proj rangeI)"], ["proof (state)\nthis:\n  finite (range (pseudo_proj_False n))\n\ngoal (1 subgoal):\n 1. finite (pseudo_proj_False n ` g -` {g z})", "moreover"], ["proof (state)\nthis:\n  finite (range (pseudo_proj_False n))\n\ngoal (1 subgoal):\n 1. finite (pseudo_proj_False n ` g -` {g z})", "have \"pseudo_proj_False n ` g -` {g z} \\<subseteq> range (pseudo_proj_False n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n ` g -` {g z} \\<subseteq> range (pseudo_proj_False n)", "by (simp add: image_mono)"], ["proof (state)\nthis:\n  pseudo_proj_False n ` g -` {g z} \\<subseteq> range (pseudo_proj_False n)\n\ngoal (1 subgoal):\n 1. finite (pseudo_proj_False n ` g -` {g z})", "ultimately"], ["proof (chain)\npicking this:\n  finite (range (pseudo_proj_False n))\n  pseudo_proj_False n ` g -` {g z} \\<subseteq> range (pseudo_proj_False n)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (range (pseudo_proj_False n))\n  pseudo_proj_False n ` g -` {g z} \\<subseteq> range (pseudo_proj_False n)\n\ngoal (1 subgoal):\n 1. finite (pseudo_proj_False n ` g -` {g z})", "by (simp add:finite_subset)"], ["proof (state)\nthis:\n  finite (pseudo_proj_False n ` g -` {g z})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite (pseudo_proj_False n ` g -` {g z})\n\ngoal (2 subgoals):\n 1. pseudo_proj_True n ` g -` {g z} \\<inter>\n    pseudo_proj_False n ` g -` {g z} =\n    {}\n 2. pseudo_proj_True n ` g -` {g z} \\<union>\n    pseudo_proj_False n ` g -` {g z} =\n    pseudo_proj_True n ` g -` {g z} \\<union>\n    pseudo_proj_False n ` g -` {g z}", "show \"pseudo_proj_True n ` g -` {g z} \\<inter> pseudo_proj_False n ` g -` {g z} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n ` g -` {g z} \\<inter>\n    pseudo_proj_False n ` g -` {g z} =\n    {}", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudo_proj_True n ` g -` {g z} \\<inter>\n    pseudo_proj_False n ` g -` {g z} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "assume \"pseudo_proj_True n ` g -` {g z} \\<inter> pseudo_proj_False n ` g -` {g z} \\<noteq> {}\""], ["proof (state)\nthis:\n  pseudo_proj_True n ` g -` {g z} \\<inter>\n  pseudo_proj_False n ` g -` {g z} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n ` g -` {g z} \\<inter>\n    pseudo_proj_False n ` g -` {g z} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "hence \"\\<exists>y. y\\<in> pseudo_proj_True n ` g -` {g z} \\<inter> pseudo_proj_False n ` g -` {g z}\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n ` g -` {g z} \\<inter>\n  pseudo_proj_False n ` g -` {g z} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       y \\<in> pseudo_proj_True n ` g -` {g z} \\<inter>\n               pseudo_proj_False n ` g -` {g z}", "by auto"], ["proof (state)\nthis:\n  \\<exists>y.\n     y \\<in> pseudo_proj_True n ` g -` {g z} \\<inter>\n             pseudo_proj_False n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n ` g -` {g z} \\<inter>\n    pseudo_proj_False n ` g -` {g z} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  \\<exists>y.\n     y \\<in> pseudo_proj_True n ` g -` {g z} \\<inter>\n             pseudo_proj_False n ` g -` {g z}", "obtain y where \"y\\<in> pseudo_proj_True n ` g -` {g z}\" and \"y\\<in> pseudo_proj_False n ` g -` {g z}\""], ["proof (prove)\nusing this:\n  \\<exists>y.\n     y \\<in> pseudo_proj_True n ` g -` {g z} \\<inter>\n             pseudo_proj_False n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> pseudo_proj_True n ` g -` {g z};\n         y \\<in> pseudo_proj_False n ` g -` {g z}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> pseudo_proj_True n ` g -` {g z}\n  y \\<in> pseudo_proj_False n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n ` g -` {g z} \\<inter>\n    pseudo_proj_False n ` g -` {g z} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "have \"\\<exists>yt. yt\\<in> g -`{g z} \\<and> y = pseudo_proj_True n yt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>yt. yt \\<in> g -` {g z} \\<and> y = pseudo_proj_True n yt", "using \\<open>y\\<in> pseudo_proj_True n ` g -` {g z}\\<close>"], ["proof (prove)\nusing this:\n  y \\<in> pseudo_proj_True n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<exists>yt. yt \\<in> g -` {g z} \\<and> y = pseudo_proj_True n yt", "by auto"], ["proof (state)\nthis:\n  \\<exists>yt. yt \\<in> g -` {g z} \\<and> y = pseudo_proj_True n yt\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n ` g -` {g z} \\<inter>\n    pseudo_proj_False n ` g -` {g z} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  \\<exists>yt. yt \\<in> g -` {g z} \\<and> y = pseudo_proj_True n yt", "obtain yt where \"y = pseudo_proj_True n yt\""], ["proof (prove)\nusing this:\n  \\<exists>yt. yt \\<in> g -` {g z} \\<and> y = pseudo_proj_True n yt\n\ngoal (1 subgoal):\n 1. (\\<And>yt.\n        y = pseudo_proj_True n yt \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y = pseudo_proj_True n yt\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n ` g -` {g z} \\<inter>\n    pseudo_proj_False n ` g -` {g z} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "have \"\\<exists>yf. yf\\<in> g -`{g z} \\<and> y = pseudo_proj_False n yf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>yf. yf \\<in> g -` {g z} \\<and> y = pseudo_proj_False n yf", "using \\<open>y\\<in> pseudo_proj_False n ` g -` {g z}\\<close>"], ["proof (prove)\nusing this:\n  y \\<in> pseudo_proj_False n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<exists>yf. yf \\<in> g -` {g z} \\<and> y = pseudo_proj_False n yf", "by auto"], ["proof (state)\nthis:\n  \\<exists>yf. yf \\<in> g -` {g z} \\<and> y = pseudo_proj_False n yf\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n ` g -` {g z} \\<inter>\n    pseudo_proj_False n ` g -` {g z} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  \\<exists>yf. yf \\<in> g -` {g z} \\<and> y = pseudo_proj_False n yf", "obtain yf where \"y = pseudo_proj_False n yf\""], ["proof (prove)\nusing this:\n  \\<exists>yf. yf \\<in> g -` {g z} \\<and> y = pseudo_proj_False n yf\n\ngoal (1 subgoal):\n 1. (\\<And>yf.\n        y = pseudo_proj_False n yf \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y = pseudo_proj_False n yf\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n ` g -` {g z} \\<inter>\n    pseudo_proj_False n ` g -` {g z} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "have \"snth y n = True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y !! n = True", "using \\<open>y = pseudo_proj_True n yt\\<close>"], ["proof (prove)\nusing this:\n  y = pseudo_proj_True n yt\n\ngoal (1 subgoal):\n 1. y !! n = True", "unfolding pseudo_proj_True_def"], ["proof (prove)\nusing this:\n  y = stake n yt @- sconst True\n\ngoal (1 subgoal):\n 1. y !! n = True", "by simp"], ["proof (state)\nthis:\n  y !! n = True\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n ` g -` {g z} \\<inter>\n    pseudo_proj_False n ` g -` {g z} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  y !! n = True\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n ` g -` {g z} \\<inter>\n    pseudo_proj_False n ` g -` {g z} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "have \"snth y n = False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y !! n = False", "using \\<open>y = pseudo_proj_False n yf\\<close>"], ["proof (prove)\nusing this:\n  y = pseudo_proj_False n yf\n\ngoal (1 subgoal):\n 1. y !! n = False", "unfolding pseudo_proj_False_def"], ["proof (prove)\nusing this:\n  y = (stake n yf @ [False]) @- sconst True\n\ngoal (1 subgoal):\n 1. y !! n = False", "by simp"], ["proof (state)\nthis:\n  y !! n = False\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n ` g -` {g z} \\<inter>\n    pseudo_proj_False n ` g -` {g z} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  y !! n = True\n  y !! n = False", "show False"], ["proof (prove)\nusing this:\n  y !! n = True\n  y !! n = False\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_True n ` g -` {g z} \\<inter>\n  pseudo_proj_False n ` g -` {g z} =\n  {}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n ` g -` {g z} \\<union>\n    pseudo_proj_False n ` g -` {g z} =\n    pseudo_proj_True n ` g -` {g z} \\<union>\n    pseudo_proj_False n ` g -` {g z}", "qed simp"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z} \\<union>\n               pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z} \\<union>\n               pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "have \"... = (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}. prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f (pseudo_proj_True n z)) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}. prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_True n z)) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_True n z)) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)", "define zt where \"zt = pseudo_proj_True n z\""], ["proof (state)\nthis:\n  zt = pseudo_proj_True n z\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_True n z)) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)", "have eqw: \"\\<And>w. w\\<in>pseudo_proj_True n ` g -` {g z} \\<Longrightarrow> (g w = g zt \\<and> snth w n = snth zt n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       g w = g zt \\<and> w !! n = zt !! n", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow> g w = g zt\n 2. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       w !! n = zt !! n", "fix w"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow> g w = g zt\n 2. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       w !! n = zt !! n", "assume \"w\\<in> pseudo_proj_True n ` g -` {g z}\""], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_True n ` g -` {g z}\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow> g w = g zt\n 2. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       w !! n = zt !! n", "hence \"\\<exists>y. w = pseudo_proj_True n y \\<and> g y = g z\""], ["proof (prove)\nusing this:\n  w \\<in> pseudo_proj_True n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<exists>y. w = pseudo_proj_True n y \\<and> g y = g z", "by auto"], ["proof (state)\nthis:\n  \\<exists>y. w = pseudo_proj_True n y \\<and> g y = g z\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow> g w = g zt\n 2. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       w !! n = zt !! n", "from this"], ["proof (chain)\npicking this:\n  \\<exists>y. w = pseudo_proj_True n y \\<and> g y = g z", "obtain yt where \"w = pseudo_proj_True n yt\" and \"g yt = g z\""], ["proof (prove)\nusing this:\n  \\<exists>y. w = pseudo_proj_True n y \\<and> g y = g z\n\ngoal (1 subgoal):\n 1. (\\<And>yt.\n        \\<lbrakk>w = pseudo_proj_True n yt; g yt = g z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  w = pseudo_proj_True n yt\n  g yt = g z\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow> g w = g zt\n 2. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       w !! n = zt !! n", "have \"g w= g yt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g w = g yt", "using \\<open>w = pseudo_proj_True n yt\\<close> nat_filtration_not_borel_info[of g] natural_filtration\n        assms"], ["proof (prove)\nusing this:\n  w = pseudo_proj_True n yt\n  \\<lbrakk>g \\<in> nat_filtration ?n \\<rightarrow>\\<^sub>M ?N;\n   set_discriminating ?n g ?N\\<rbrakk>\n  \\<Longrightarrow> g \\<circ> pseudo_proj_True ?n = g\n  F = nat_filtration\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  g -` {g z} \\<in> sets (F n)\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n\ngoal (1 subgoal):\n 1. g w = g yt", "by (metis comp_apply)"], ["proof (state)\nthis:\n  g w = g yt\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow> g w = g zt\n 2. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       w !! n = zt !! n", "also"], ["proof (state)\nthis:\n  g w = g yt\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow> g w = g zt\n 2. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       w !! n = zt !! n", "have \"... = g zt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g yt = g zt", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  g -` {g z} \\<in> sets (F n)\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n\ngoal (1 subgoal):\n 1. g yt = g zt", "using nat_filtration_not_borel_info[of g] natural_filtration \\<open>g yt = g z\\<close>"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  g -` {g z} \\<in> sets (F n)\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n  \\<lbrakk>g \\<in> nat_filtration ?n \\<rightarrow>\\<^sub>M ?N;\n   set_discriminating ?n g ?N\\<rbrakk>\n  \\<Longrightarrow> g \\<circ> pseudo_proj_True ?n = g\n  F = nat_filtration\n  g yt = g z\n\ngoal (1 subgoal):\n 1. g yt = g zt", "unfolding zt_def"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  g -` {g z} \\<in> sets (F n)\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n  \\<lbrakk>g \\<in> nat_filtration ?n \\<rightarrow>\\<^sub>M ?N;\n   set_discriminating ?n g ?N\\<rbrakk>\n  \\<Longrightarrow> g \\<circ> pseudo_proj_True ?n = g\n  F = nat_filtration\n  g yt = g z\n\ngoal (1 subgoal):\n 1. g yt = g (pseudo_proj_True n z)", "by (metis comp_apply)"], ["proof (state)\nthis:\n  g yt = g zt\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow> g w = g zt\n 2. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       w !! n = zt !! n", "finally"], ["proof (chain)\npicking this:\n  g w = g zt", "show \"g w = g zt\""], ["proof (prove)\nusing this:\n  g w = g zt\n\ngoal (1 subgoal):\n 1. g w = g zt", "."], ["proof (state)\nthis:\n  g w = g zt\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       w !! n = zt !! n", "show \"w !! n = zt !! n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w !! n = zt !! n", "using \\<open>w = pseudo_proj_True n yt\\<close>"], ["proof (prove)\nusing this:\n  w = pseudo_proj_True n yt\n\ngoal (1 subgoal):\n 1. w !! n = zt !! n", "unfolding zt_def pseudo_proj_True_def"], ["proof (prove)\nusing this:\n  w = stake n yt @- sconst True\n\ngoal (1 subgoal):\n 1. w !! n = (stake n z @- sconst True) !! n", "by simp"], ["proof (state)\nthis:\n  w !! n = zt !! n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?w1 \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n  g ?w1 = g zt \\<and> ?w1 !! n = zt !! n\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_True n z)) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)", "hence \"\\<And>w. w\\<in>pseudo_proj_True n ` g -` {g z} \\<Longrightarrow> f w = f zt\""], ["proof (prove)\nusing this:\n  ?w1 \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n  g ?w1 = g zt \\<and> ?w1 !! n = zt !! n\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow> f w = f zt", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       ?w2 w \\<in> pseudo_proj_True n ` g -` {g z}\n 2. \\<And>w.\n       \\<lbrakk>w \\<in> pseudo_proj_True n ` g -` {g z}; g (?w2 w) = g zt;\n        ?w2 w !! n = zt !! n\\<rbrakk>\n       \\<Longrightarrow> f w = f zt", "fix w"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       ?w2 w \\<in> pseudo_proj_True n ` g -` {g z}\n 2. \\<And>w.\n       \\<lbrakk>w \\<in> pseudo_proj_True n ` g -` {g z}; g (?w2 w) = g zt;\n        ?w2 w !! n = zt !! n\\<rbrakk>\n       \\<Longrightarrow> f w = f zt", "assume \"w \\<in> pseudo_proj_True n ` g -` {g z}\""], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_True n ` g -` {g z}\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       ?w2 w \\<in> pseudo_proj_True n ` g -` {g z}\n 2. \\<And>w.\n       \\<lbrakk>w \\<in> pseudo_proj_True n ` g -` {g z}; g (?w2 w) = g zt;\n        ?w2 w !! n = zt !! n\\<rbrakk>\n       \\<Longrightarrow> f w = f zt", "hence \"g w = g zt \\<and> snth w n = snth zt n\""], ["proof (prove)\nusing this:\n  w \\<in> pseudo_proj_True n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. g w = g zt \\<and> w !! n = zt !! n", "using eqw [of w]"], ["proof (prove)\nusing this:\n  w \\<in> pseudo_proj_True n ` g -` {g z}\n  w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n  g w = g zt \\<and> w !! n = zt !! n\n\ngoal (1 subgoal):\n 1. g w = g zt \\<and> w !! n = zt !! n", "by simp"], ["proof (state)\nthis:\n  g w = g zt \\<and> w !! n = zt !! n\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       ?w2 w \\<in> pseudo_proj_True n ` g -` {g z}\n 2. \\<And>w.\n       \\<lbrakk>w \\<in> pseudo_proj_True n ` g -` {g z}; g (?w2 w) = g zt;\n        ?w2 w !! n = zt !! n\\<rbrakk>\n       \\<Longrightarrow> f w = f zt", "thus \"f w = f zt\""], ["proof (prove)\nusing this:\n  g w = g zt \\<and> w !! n = zt !! n\n\ngoal (1 subgoal):\n 1. f w = f zt", "using assms(5)"], ["proof (prove)\nusing this:\n  g w = g zt \\<and> w !! n = zt !! n\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n\ngoal (1 subgoal):\n 1. f w = f zt", "by blast"], ["proof (state)\nthis:\n  f w = f zt\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       ?w2 w \\<in> pseudo_proj_True n ` g -` {g z}", "qed"], ["proof (state)\nthis:\n  ?w1 \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow> f ?w1 = f zt\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_True n z)) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?w1 \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow> f ?w1 = f zt\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_True n z)) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     f (pseudo_proj_True n z)) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     f (pseudo_proj_True n z)) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     f (pseudo_proj_True n z)) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "have \"... = (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}. prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f (pseudo_proj_True n z)) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}. prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f (pseudo_proj_False n z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_True n z)) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_True n z)) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_False n z))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_True n z)) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_True n z)) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_False n z))", "define zf where \"zf = pseudo_proj_False n z\""], ["proof (state)\nthis:\n  zf = pseudo_proj_False n z\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_True n z)) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_True n z)) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_False n z))", "have eqw: \"\\<And>w. w\\<in>pseudo_proj_False n ` g -` {g z} \\<Longrightarrow> (g w = g zf \\<and> snth w n = snth zf n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       g w = g zf \\<and> w !! n = zf !! n", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow> g w = g zf\n 2. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       w !! n = zf !! n", "fix w"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow> g w = g zf\n 2. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       w !! n = zf !! n", "assume \"w\\<in> pseudo_proj_False n ` g -` {g z}\""], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_False n ` g -` {g z}\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow> g w = g zf\n 2. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       w !! n = zf !! n", "hence \"\\<exists>y. w = pseudo_proj_False n y \\<and> g y = g z\""], ["proof (prove)\nusing this:\n  w \\<in> pseudo_proj_False n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<exists>y. w = pseudo_proj_False n y \\<and> g y = g z", "by auto"], ["proof (state)\nthis:\n  \\<exists>y. w = pseudo_proj_False n y \\<and> g y = g z\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow> g w = g zf\n 2. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       w !! n = zf !! n", "from this"], ["proof (chain)\npicking this:\n  \\<exists>y. w = pseudo_proj_False n y \\<and> g y = g z", "obtain yf where \"w = pseudo_proj_False n yf\" and \"g yf = g z\""], ["proof (prove)\nusing this:\n  \\<exists>y. w = pseudo_proj_False n y \\<and> g y = g z\n\ngoal (1 subgoal):\n 1. (\\<And>yf.\n        \\<lbrakk>w = pseudo_proj_False n yf; g yf = g z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  w = pseudo_proj_False n yf\n  g yf = g z\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow> g w = g zf\n 2. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       w !! n = zf !! n", "have \"g w= g yf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g w = g yf", "using \\<open>w = pseudo_proj_False n yf\\<close> nat_filtration_not_borel_info'[of g] natural_filtration\n        assms"], ["proof (prove)\nusing this:\n  w = pseudo_proj_False n yf\n  \\<lbrakk>g \\<in> nat_filtration ?n \\<rightarrow>\\<^sub>M ?N;\n   set_discriminating ?n g ?N\\<rbrakk>\n  \\<Longrightarrow> g \\<circ> pseudo_proj_False ?n = g\n  F = nat_filtration\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  g -` {g z} \\<in> sets (F n)\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n\ngoal (1 subgoal):\n 1. g w = g yf", "by (metis comp_apply)"], ["proof (state)\nthis:\n  g w = g yf\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow> g w = g zf\n 2. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       w !! n = zf !! n", "also"], ["proof (state)\nthis:\n  g w = g yf\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow> g w = g zf\n 2. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       w !! n = zf !! n", "have \"... = g zf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g yf = g zf", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  g -` {g z} \\<in> sets (F n)\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n\ngoal (1 subgoal):\n 1. g yf = g zf", "using nat_filtration_not_borel_info'[of g] natural_filtration \\<open>g yf = g z\\<close>"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  g -` {g z} \\<in> sets (F n)\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n  \\<lbrakk>g \\<in> nat_filtration ?n \\<rightarrow>\\<^sub>M ?N;\n   set_discriminating ?n g ?N\\<rbrakk>\n  \\<Longrightarrow> g \\<circ> pseudo_proj_False ?n = g\n  F = nat_filtration\n  g yf = g z\n\ngoal (1 subgoal):\n 1. g yf = g zf", "unfolding zf_def"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  g -` {g z} \\<in> sets (F n)\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n  \\<lbrakk>g \\<in> nat_filtration ?n \\<rightarrow>\\<^sub>M ?N;\n   set_discriminating ?n g ?N\\<rbrakk>\n  \\<Longrightarrow> g \\<circ> pseudo_proj_False ?n = g\n  F = nat_filtration\n  g yf = g z\n\ngoal (1 subgoal):\n 1. g yf = g (pseudo_proj_False n z)", "by (metis comp_apply)"], ["proof (state)\nthis:\n  g yf = g zf\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow> g w = g zf\n 2. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       w !! n = zf !! n", "finally"], ["proof (chain)\npicking this:\n  g w = g zf", "show \"g w = g zf\""], ["proof (prove)\nusing this:\n  g w = g zf\n\ngoal (1 subgoal):\n 1. g w = g zf", "."], ["proof (state)\nthis:\n  g w = g zf\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       w !! n = zf !! n", "show \"w !! n = zf !! n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w !! n = zf !! n", "using \\<open>w = pseudo_proj_False n yf\\<close>"], ["proof (prove)\nusing this:\n  w = pseudo_proj_False n yf\n\ngoal (1 subgoal):\n 1. w !! n = zf !! n", "unfolding zf_def pseudo_proj_False_def"], ["proof (prove)\nusing this:\n  w = (stake n yf @ [False]) @- sconst True\n\ngoal (1 subgoal):\n 1. w !! n = ((stake n z @ [False]) @- sconst True) !! n", "by simp"], ["proof (state)\nthis:\n  w !! n = zf !! n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?w1 \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n  g ?w1 = g zf \\<and> ?w1 !! n = zf !! n\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_True n z)) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_True n z)) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_False n z))", "hence \"\\<And>w. w\\<in>pseudo_proj_False n ` g -` {g z} \\<Longrightarrow> f w = f zf\""], ["proof (prove)\nusing this:\n  ?w1 \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n  g ?w1 = g zf \\<and> ?w1 !! n = zf !! n\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow> f w = f zf", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       ?w2 w \\<in> pseudo_proj_False n ` g -` {g z}\n 2. \\<And>w.\n       \\<lbrakk>w \\<in> pseudo_proj_False n ` g -` {g z}; g (?w2 w) = g zf;\n        ?w2 w !! n = zf !! n\\<rbrakk>\n       \\<Longrightarrow> f w = f zf", "fix w"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       ?w2 w \\<in> pseudo_proj_False n ` g -` {g z}\n 2. \\<And>w.\n       \\<lbrakk>w \\<in> pseudo_proj_False n ` g -` {g z}; g (?w2 w) = g zf;\n        ?w2 w !! n = zf !! n\\<rbrakk>\n       \\<Longrightarrow> f w = f zf", "assume \"w\\<in> pseudo_proj_False n ` g -` {g z}\""], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_False n ` g -` {g z}\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       ?w2 w \\<in> pseudo_proj_False n ` g -` {g z}\n 2. \\<And>w.\n       \\<lbrakk>w \\<in> pseudo_proj_False n ` g -` {g z}; g (?w2 w) = g zf;\n        ?w2 w !! n = zf !! n\\<rbrakk>\n       \\<Longrightarrow> f w = f zf", "hence \"g w = g zf \\<and> snth w n = snth zf n\""], ["proof (prove)\nusing this:\n  w \\<in> pseudo_proj_False n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. g w = g zf \\<and> w !! n = zf !! n", "using eqw [of w]"], ["proof (prove)\nusing this:\n  w \\<in> pseudo_proj_False n ` g -` {g z}\n  w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n  g w = g zf \\<and> w !! n = zf !! n\n\ngoal (1 subgoal):\n 1. g w = g zf \\<and> w !! n = zf !! n", "by simp"], ["proof (state)\nthis:\n  g w = g zf \\<and> w !! n = zf !! n\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       ?w2 w \\<in> pseudo_proj_False n ` g -` {g z}\n 2. \\<And>w.\n       \\<lbrakk>w \\<in> pseudo_proj_False n ` g -` {g z}; g (?w2 w) = g zf;\n        ?w2 w !! n = zf !! n\\<rbrakk>\n       \\<Longrightarrow> f w = f zf", "thus \"f w = f zf\""], ["proof (prove)\nusing this:\n  g w = g zf \\<and> w !! n = zf !! n\n\ngoal (1 subgoal):\n 1. f w = f zf", "using assms"], ["proof (prove)\nusing this:\n  g w = g zf \\<and> w !! n = zf !! n\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  g -` {g z} \\<in> sets (F n)\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n\ngoal (1 subgoal):\n 1. f w = f zf", "by blast"], ["proof (state)\nthis:\n  f w = f zf\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       ?w2 w \\<in> pseudo_proj_False n ` g -` {g z}", "qed"], ["proof (state)\nthis:\n  ?w1 \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow> f ?w1 = f zf\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_True n z)) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_True n z)) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_False n z))", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?w1 \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow> f ?w1 = f zf\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_True n z)) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_True n z)) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_False n z))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     f (pseudo_proj_True n z)) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     f (pseudo_proj_True n z)) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     f (pseudo_proj_False n z))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     f (pseudo_proj_True n z)) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     f (pseudo_proj_True n z)) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     f (pseudo_proj_False n z))\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     f (pseudo_proj_True n z)) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) * f w) =\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     f (pseudo_proj_True n z)) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     f (pseudo_proj_False n z))\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "have \"... = (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}. prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}. prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) * f (pseudo_proj_False n z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_True n z)) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n       f (pseudo_proj_False n z)) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_False n z)", "by (simp add: sum_distrib_right)"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     f (pseudo_proj_True n z)) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     f (pseudo_proj_False n z)) =\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n  f (pseudo_proj_False n z)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     f (pseudo_proj_True n z)) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) *\n     f (pseudo_proj_False n z)) =\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n  f (pseudo_proj_False n z)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "have \"... = (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}. prob ({x. stake n x = stake n w}) * p) * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}. prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) * f (pseudo_proj_False n z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_False n z) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w} * p) *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_False n z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_False n z) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w} * p) *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_False n z)", "have \"\\<And>w. w\\<in>pseudo_proj_True n ` g -` {g z} \\<Longrightarrow> (prob (pseudo_proj_True (Suc n) -` {w}) =\n      (prob ({x. stake n x = stake n w})) * p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w}) =\n       prob {x. stake n x = stake n w} * p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w}) =\n       prob {x. stake n x = stake n w} * p", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w}) =\n       prob {x. stake n x = stake n w} * p", "assume \"w\\<in>pseudo_proj_True n ` g -` {g z}\""], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_True n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w}) =\n       prob {x. stake n x = stake n w} * p", "hence \"\\<exists>y. w = pseudo_proj_True n y \\<and> g y = g z\""], ["proof (prove)\nusing this:\n  w \\<in> pseudo_proj_True n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<exists>y. w = pseudo_proj_True n y \\<and> g y = g z", "by auto"], ["proof (state)\nthis:\n  \\<exists>y. w = pseudo_proj_True n y \\<and> g y = g z\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w}) =\n       prob {x. stake n x = stake n w} * p", "from this"], ["proof (chain)\npicking this:\n  \\<exists>y. w = pseudo_proj_True n y \\<and> g y = g z", "obtain yt where \"w = pseudo_proj_True n yt\" and \"g yt = g z\""], ["proof (prove)\nusing this:\n  \\<exists>y. w = pseudo_proj_True n y \\<and> g y = g z\n\ngoal (1 subgoal):\n 1. (\\<And>yt.\n        \\<lbrakk>w = pseudo_proj_True n yt; g yt = g z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  w = pseudo_proj_True n yt\n  g yt = g z\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w}) =\n       prob {x. stake n x = stake n w} * p", "hence \"snth w n\""], ["proof (prove)\nusing this:\n  w = pseudo_proj_True n yt\n  g yt = g z\n\ngoal (1 subgoal):\n 1. w !! n", "unfolding pseudo_proj_True_def"], ["proof (prove)\nusing this:\n  w = stake n yt @- sconst True\n  g yt = g z\n\ngoal (1 subgoal):\n 1. w !! n", "by simp"], ["proof (state)\nthis:\n  w !! n\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w}) =\n       prob {x. stake n x = stake n w} * p", "have \"pseudo_proj_True (Suc n) w = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w = w", "using \\<open>w = pseudo_proj_True n yt\\<close>"], ["proof (prove)\nusing this:\n  w = pseudo_proj_True n yt\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w = w", "by (simp add: pseudo_proj_True_Suc_proj)"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) w = w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w}) =\n       prob {x. stake n x = stake n w} * p", "hence \"pseudo_proj_True (Suc n) -` {w} = {x. stake (Suc n) x = stake (Suc n) w}\""], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) w = w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} = {x. stake (Suc n) x = stake (Suc n) w}", "using pseudo_proj_True_preimage_stake"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) w = w\n  ?w = pseudo_proj_True ?n ?w \\<Longrightarrow>\n  pseudo_proj_True ?n -` {?w} = {x. stake ?n x = stake ?n ?w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} = {x. stake (Suc n) x = stake (Suc n) w}", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) -` {w} = {x. stake (Suc n) x = stake (Suc n) w}\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w}) =\n       prob {x. stake n x = stake n w} * p", "hence \"prob (pseudo_proj_True (Suc n) -` {w}) = prob {x. stake n x = stake n w} * prob_component p w n\""], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) -` {w} = {x. stake (Suc n) x = stake (Suc n) w}\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True (Suc n) -` {w}) =\n    prob {x. stake n x = stake n w} * prob_component p w n", "using bernoulli_stream_element_prob_rec' bernoulli bernoulli_stream_space p_lt_1 p_gt_0"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) -` {w} = {x. stake (Suc n) x = stake (Suc n) w}\n  \\<lbrakk>?M = bernoulli_stream ?p; 0 \\<le> ?p; ?p \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> \\<P>(w in ?M. stake (Suc ?n) w = stake (Suc ?n) ?x) =\n                    \\<P>(w in ?M. stake ?n w = stake ?n ?x) *\n                    prob_component ?p ?x ?n\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n  p \\<le> 1\n  0 \\<le> p\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True (Suc n) -` {w}) =\n    prob {x. stake n x = stake n w} * prob_component p w n", "by simp"], ["proof (state)\nthis:\n  prob (pseudo_proj_True (Suc n) -` {w}) =\n  prob {x. stake n x = stake n w} * prob_component p w n\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w}) =\n       prob {x. stake n x = stake n w} * p", "also"], ["proof (state)\nthis:\n  prob (pseudo_proj_True (Suc n) -` {w}) =\n  prob {x. stake n x = stake n w} * prob_component p w n\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w}) =\n       prob {x. stake n x = stake n w} * p", "have \"... = prob {x. stake n x = stake n w} * p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob {x. stake n x = stake n w} * prob_component p w n =\n    prob {x. stake n x = stake n w} * p", "using \\<open>snth w n\\<close>"], ["proof (prove)\nusing this:\n  w !! n\n\ngoal (1 subgoal):\n 1. prob {x. stake n x = stake n w} * prob_component p w n =\n    prob {x. stake n x = stake n w} * p", "unfolding prob_component_def"], ["proof (prove)\nusing this:\n  w !! n\n\ngoal (1 subgoal):\n 1. prob {x. stake n x = stake n w} * (if w !! n then p else 1 - p) =\n    prob {x. stake n x = stake n w} * p", "by simp"], ["proof (state)\nthis:\n  prob {x. stake n x = stake n w} * prob_component p w n =\n  prob {x. stake n x = stake n w} * p\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w}) =\n       prob {x. stake n x = stake n w} * p", "finally"], ["proof (chain)\npicking this:\n  prob (pseudo_proj_True (Suc n) -` {w}) =\n  prob {x. stake n x = stake n w} * p", "show \"prob (pseudo_proj_True (Suc n) -` {w}) = prob {x. stake n x = stake n w} * p\""], ["proof (prove)\nusing this:\n  prob (pseudo_proj_True (Suc n) -` {w}) =\n  prob {x. stake n x = stake n w} * p\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True (Suc n) -` {w}) =\n    prob {x. stake n x = stake n w} * p", "."], ["proof (state)\nthis:\n  prob (pseudo_proj_True (Suc n) -` {w}) =\n  prob {x. stake n x = stake n w} * p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?w1 \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n  prob (pseudo_proj_True (Suc n) -` {?w1}) =\n  prob {x. stake n x = stake n ?w1} * p\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_False n z) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w} * p) *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_False n z)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?w1 \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n  prob (pseudo_proj_True (Suc n) -` {?w1}) =\n  prob {x. stake n x = stake n ?w1} * p\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_False n z) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w} * p) *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_False n z)", "using bernoulli bernoulli_stream_space"], ["proof (prove)\nusing this:\n  ?w1 \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n  prob (pseudo_proj_True (Suc n) -` {?w1}) =\n  prob {x. stake n x = stake n ?w1} * p\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_False n z) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w} * p) *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_False n z)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n  f (pseudo_proj_False n z) =\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w} * p) *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n  f (pseudo_proj_False n z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n  f (pseudo_proj_False n z) =\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w} * p) *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n  f (pseudo_proj_False n z)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n  f (pseudo_proj_False n z) =\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w} * p) *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n  f (pseudo_proj_False n z)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "have \"... = (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}. prob ({x. stake n x = stake n w}) * p) * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}. prob {x. stake n x = stake n w} * (1 -p)) * f (pseudo_proj_False n z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w} * p) *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_False n z) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w} * p) *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w} * (1 - p)) *\n    f (pseudo_proj_False n z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w} * p) *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_False n z) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w} * p) *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w} * (1 - p)) *\n    f (pseudo_proj_False n z)", "have \"\\<And>w. w\\<in>pseudo_proj_False n ` g -` {g z} \\<Longrightarrow> (prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) =\n      (prob {x. stake n x = stake n w}) * (1-p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) =\n       prob {x. stake n x = stake n w} * (1 - p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) =\n       prob {x. stake n x = stake n w} * (1 - p)", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) =\n       prob {x. stake n x = stake n w} * (1 - p)", "assume \"w\\<in>pseudo_proj_False n ` g -` {g z}\""], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_False n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) =\n       prob {x. stake n x = stake n w} * (1 - p)", "hence \"\\<exists>y. w = pseudo_proj_False n y \\<and> g y = g z\""], ["proof (prove)\nusing this:\n  w \\<in> pseudo_proj_False n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<exists>y. w = pseudo_proj_False n y \\<and> g y = g z", "by auto"], ["proof (state)\nthis:\n  \\<exists>y. w = pseudo_proj_False n y \\<and> g y = g z\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) =\n       prob {x. stake n x = stake n w} * (1 - p)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>y. w = pseudo_proj_False n y \\<and> g y = g z", "obtain yt where \"w = pseudo_proj_False n yt\" and \"g yt = g z\""], ["proof (prove)\nusing this:\n  \\<exists>y. w = pseudo_proj_False n y \\<and> g y = g z\n\ngoal (1 subgoal):\n 1. (\\<And>yt.\n        \\<lbrakk>w = pseudo_proj_False n yt; g yt = g z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  w = pseudo_proj_False n yt\n  g yt = g z\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) =\n       prob {x. stake n x = stake n w} * (1 - p)", "hence \"\\<not>snth w n\""], ["proof (prove)\nusing this:\n  w = pseudo_proj_False n yt\n  g yt = g z\n\ngoal (1 subgoal):\n 1. \\<not> w !! n", "unfolding pseudo_proj_False_def"], ["proof (prove)\nusing this:\n  w = (stake n yt @ [False]) @- sconst True\n  g yt = g z\n\ngoal (1 subgoal):\n 1. \\<not> w !! n", "by simp"], ["proof (state)\nthis:\n  \\<not> w !! n\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) =\n       prob {x. stake n x = stake n w} * (1 - p)", "have \"pseudo_proj_True (Suc n) w = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w = w", "using \\<open>w = pseudo_proj_False n yt\\<close>"], ["proof (prove)\nusing this:\n  w = pseudo_proj_False n yt\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) w = w", "by (simp add: pseudo_proj_True_Suc_False_proj)"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) w = w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) =\n       prob {x. stake n x = stake n w} * (1 - p)", "hence \"pseudo_proj_True (Suc n) -`{w} = {x. stake (Suc n) x = stake (Suc n) w}\""], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) w = w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} = {x. stake (Suc n) x = stake (Suc n) w}", "using pseudo_proj_True_preimage_stake"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) w = w\n  ?w = pseudo_proj_True ?n ?w \\<Longrightarrow>\n  pseudo_proj_True ?n -` {?w} = {x. stake ?n x = stake ?n ?w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) -` {w} = {x. stake (Suc n) x = stake (Suc n) w}", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) -` {w} = {x. stake (Suc n) x = stake (Suc n) w}\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) =\n       prob {x. stake n x = stake n w} * (1 - p)", "hence \"prob (pseudo_proj_True (Suc n) -`{w}) = prob {x. stake n x = stake n w} * prob_component p w n\""], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) -` {w} = {x. stake (Suc n) x = stake (Suc n) w}\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True (Suc n) -` {w}) =\n    prob {x. stake n x = stake n w} * prob_component p w n", "using bernoulli_stream_element_prob_rec' bernoulli bernoulli_stream_space p_lt_1 p_gt_0"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) -` {w} = {x. stake (Suc n) x = stake (Suc n) w}\n  \\<lbrakk>?M = bernoulli_stream ?p; 0 \\<le> ?p; ?p \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> \\<P>(w in ?M. stake (Suc ?n) w = stake (Suc ?n) ?x) =\n                    \\<P>(w in ?M. stake ?n w = stake ?n ?x) *\n                    prob_component ?p ?x ?n\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n  p \\<le> 1\n  0 \\<le> p\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True (Suc n) -` {w}) =\n    prob {x. stake n x = stake n w} * prob_component p w n", "by simp"], ["proof (state)\nthis:\n  prob (pseudo_proj_True (Suc n) -` {w}) =\n  prob {x. stake n x = stake n w} * prob_component p w n\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) =\n       prob {x. stake n x = stake n w} * (1 - p)", "also"], ["proof (state)\nthis:\n  prob (pseudo_proj_True (Suc n) -` {w}) =\n  prob {x. stake n x = stake n w} * prob_component p w n\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) =\n       prob {x. stake n x = stake n w} * (1 - p)", "have \"... = prob {x. stake n x = stake n w} * (1-p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob {x. stake n x = stake n w} * prob_component p w n =\n    prob {x. stake n x = stake n w} * (1 - p)", "using \\<open>\\<not>snth w n\\<close>"], ["proof (prove)\nusing this:\n  \\<not> w !! n\n\ngoal (1 subgoal):\n 1. prob {x. stake n x = stake n w} * prob_component p w n =\n    prob {x. stake n x = stake n w} * (1 - p)", "unfolding prob_component_def"], ["proof (prove)\nusing this:\n  \\<not> w !! n\n\ngoal (1 subgoal):\n 1. prob {x. stake n x = stake n w} * (if w !! n then p else 1 - p) =\n    prob {x. stake n x = stake n w} * (1 - p)", "by simp"], ["proof (state)\nthis:\n  prob {x. stake n x = stake n w} * prob_component p w n =\n  prob {x. stake n x = stake n w} * (1 - p)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) =\n       prob {x. stake n x = stake n w} * (1 - p)", "finally"], ["proof (chain)\npicking this:\n  prob (pseudo_proj_True (Suc n) -` {w}) =\n  prob {x. stake n x = stake n w} * (1 - p)", "show \"prob (pseudo_proj_True (Suc n) -`{w} \\<inter> space M) = prob {x. stake n x = stake n w} * (1-p)\""], ["proof (prove)\nusing this:\n  prob (pseudo_proj_True (Suc n) -` {w}) =\n  prob {x. stake n x = stake n w} * (1 - p)\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) =\n    prob {x. stake n x = stake n w} * (1 - p)", "using bernoulli\n        bernoulli_stream_space"], ["proof (prove)\nusing this:\n  prob (pseudo_proj_True (Suc n) -` {w}) =\n  prob {x. stake n x = stake n w} * (1 - p)\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) =\n    prob {x. stake n x = stake n w} * (1 - p)", "by simp"], ["proof (state)\nthis:\n  prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M) =\n  prob {x. stake n x = stake n w} * (1 - p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?w1 \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n  prob (pseudo_proj_True (Suc n) -` {?w1} \\<inter> space M) =\n  prob {x. stake n x = stake n ?w1} * (1 - p)\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w} * p) *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_False n z) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w} * p) *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w} * (1 - p)) *\n    f (pseudo_proj_False n z)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?w1 \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n  prob (pseudo_proj_True (Suc n) -` {?w1} \\<inter> space M) =\n  prob {x. stake n x = stake n ?w1} * (1 - p)\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w} * p) *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n    f (pseudo_proj_False n z) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w} * p) *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w} * (1 - p)) *\n    f (pseudo_proj_False n z)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w} * p) *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n  f (pseudo_proj_False n z) =\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w} * p) *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w} * (1 - p)) *\n  f (pseudo_proj_False n z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w} * p) *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n  f (pseudo_proj_False n z) =\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w} * p) *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w} * (1 - p)) *\n  f (pseudo_proj_False n z)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w} * p) *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob (pseudo_proj_True (Suc n) -` {w} \\<inter> space M)) *\n  f (pseudo_proj_False n z) =\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w} * p) *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w} * (1 - p)) *\n  f (pseudo_proj_False n z)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "have \"... = (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}. prob ({x. stake n x = stake n w})) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}. prob {x. stake n x = stake n w}) * (1 -p) * f (pseudo_proj_False n z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w} * p) *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w} * (1 - p)) *\n    f (pseudo_proj_False n z) =\n    (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    p *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z)", "by (simp add:sum_distrib_right)"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w} * p) *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w} * (1 - p)) *\n  f (pseudo_proj_False n z) =\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) *\n  p *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) *\n  (1 - p) *\n  f (pseudo_proj_False n z)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w} * p) *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w} * (1 - p)) *\n  f (pseudo_proj_False n z) =\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) *\n  p *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) *\n  (1 - p) *\n  f (pseudo_proj_False n z)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "have \"... = prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}. prob {x. stake n x = stake n w}) * (1 -p) * f (pseudo_proj_False n z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    p *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    p *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z)", "have projset: \"\\<And>w. w\\<in>pseudo_proj_True n ` g -` {g z} \\<Longrightarrow> {x. stake n x = stake n w} \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} \\<in> events", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} \\<in> events", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} \\<in> events", "assume \"w\\<in> pseudo_proj_True n ` g -` {g z}\""], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_True n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} \\<in> events", "hence \"\\<exists>y. w = pseudo_proj_True n y\""], ["proof (prove)\nusing this:\n  w \\<in> pseudo_proj_True n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<exists>y. w = pseudo_proj_True n y", "by auto"], ["proof (state)\nthis:\n  \\<exists>y. w = pseudo_proj_True n y\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} \\<in> events", "from this"], ["proof (chain)\npicking this:\n  \\<exists>y. w = pseudo_proj_True n y", "obtain y where \"w = pseudo_proj_True n y\""], ["proof (prove)\nusing this:\n  \\<exists>y. w = pseudo_proj_True n y\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        w = pseudo_proj_True n y \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  w = pseudo_proj_True n y\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} \\<in> events", "hence \"w = pseudo_proj_True n w\""], ["proof (prove)\nusing this:\n  w = pseudo_proj_True n y\n\ngoal (1 subgoal):\n 1. w = pseudo_proj_True n w", "by (simp add: pseudo_proj_True_proj)"], ["proof (state)\nthis:\n  w = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} \\<in> events", "hence \"pseudo_proj_True n -`{w} = {x. stake n x = stake n w}\""], ["proof (prove)\nusing this:\n  w = pseudo_proj_True n w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} = {x. stake n x = stake n w}", "using pseudo_proj_True_preimage_stake"], ["proof (prove)\nusing this:\n  w = pseudo_proj_True n w\n  ?w = pseudo_proj_True ?n ?w \\<Longrightarrow>\n  pseudo_proj_True ?n -` {?w} = {x. stake ?n x = stake ?n ?w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} = {x. stake n x = stake n w}", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {w} = {x. stake n x = stake n w}\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} \\<in> events", "moreover"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {w} = {x. stake n x = stake n w}\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} \\<in> events", "have \"pseudo_proj_True n -`{w} \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<in> events", "using \\<open>w = pseudo_proj_True n w\\<close> bernoulli bernoulli_stream_space pseudo_proj_True_singleton"], ["proof (prove)\nusing this:\n  w = pseudo_proj_True n w\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n  ?w = pseudo_proj_True ?n ?w \\<Longrightarrow>\n  pseudo_proj_True ?n -` {?w} \\<inter> space (bernoulli_stream p)\n  \\<in> sets (bernoulli_stream p)\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {w} \\<in> events", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {w} \\<in> events\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} \\<in> events", "ultimately"], ["proof (chain)\npicking this:\n  pseudo_proj_True n -` {w} = {x. stake n x = stake n w}\n  pseudo_proj_True n -` {w} \\<in> events", "show \"{x. stake n x = stake n w} \\<in> sets M\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n -` {w} = {x. stake n x = stake n w}\n  pseudo_proj_True n -` {w} \\<in> events\n\ngoal (1 subgoal):\n 1. {x. stake n x = stake n w} \\<in> events", "by simp"], ["proof (state)\nthis:\n  {x. stake n x = stake n w} \\<in> events\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?w1 \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n  {x. stake n x = stake n ?w1} \\<in> events\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    p *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z)", "have \"(\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}. prob ({x. stake n x = stake n w})) =\n      prob (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}. {x. stake n x = stake n w})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) =\n    prob\n     (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n         {x. stake n x = stake n w})", "proof (rule finite_measure_finite_Union[symmetric])"], ["proof (state)\ngoal (3 subgoals):\n 1. finite (pseudo_proj_True n ` g -` {g z})\n 2. (\\<lambda>i. {x. stake n x = stake n i}) `\n    pseudo_proj_True n ` g -` {g z}\n    \\<subseteq> events\n 3. disjoint_family_on (\\<lambda>i. {x. stake n x = stake n i})\n     (pseudo_proj_True n ` g -` {g z})", "show \"finite (pseudo_proj_True n ` g -` {g z})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (pseudo_proj_True n ` g -` {g z})", "by (meson finite_subset image_mono pseudo_proj_True_finite_image subset_UNIV)"], ["proof (state)\nthis:\n  finite (pseudo_proj_True n ` g -` {g z})\n\ngoal (2 subgoals):\n 1. (\\<lambda>i. {x. stake n x = stake n i}) `\n    pseudo_proj_True n ` g -` {g z}\n    \\<subseteq> events\n 2. disjoint_family_on (\\<lambda>i. {x. stake n x = stake n i})\n     (pseudo_proj_True n ` g -` {g z})", "show \"(\\<lambda>i. {x. stake n x = stake n i}) ` pseudo_proj_True n ` g -` {g z} \\<subseteq> events\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. {x. stake n x = stake n i}) `\n    pseudo_proj_True n ` g -` {g z}\n    \\<subseteq> events", "using projset"], ["proof (prove)\nusing this:\n  ?w1 \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n  {x. stake n x = stake n ?w1} \\<in> events\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. {x. stake n x = stake n i}) `\n    pseudo_proj_True n ` g -` {g z}\n    \\<subseteq> events", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>i. {x. stake n x = stake n i}) ` pseudo_proj_True n ` g -` {g z}\n  \\<subseteq> events\n\ngoal (1 subgoal):\n 1. disjoint_family_on (\\<lambda>i. {x. stake n x = stake n i})\n     (pseudo_proj_True n ` g -` {g z})", "show \"disjoint_family_on (\\<lambda>i. {x. stake n x = stake n i}) (pseudo_proj_True n ` g -` {g z})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disjoint_family_on (\\<lambda>i. {x. stake n x = stake n i})\n     (pseudo_proj_True n ` g -` {g z})", "unfolding disjoint_family_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m\\<in>pseudo_proj_True n ` g -` {g z}.\n       \\<forall>na\\<in>pseudo_proj_True n ` g -` {g z}.\n          m \\<noteq> na \\<longrightarrow>\n          {x. stake n x = stake n m} \\<inter> {x. stake n x = stake n na} =\n          {}", "proof (intro ballI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>m \\<in> pseudo_proj_True n ` g -` {g z};\n        na \\<in> pseudo_proj_True n ` g -` {g z}; m \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> {x. stake n x = stake n m} \\<inter>\n                         {x. stake n x = stake n na} =\n                         {}", "fix u v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>m \\<in> pseudo_proj_True n ` g -` {g z};\n        na \\<in> pseudo_proj_True n ` g -` {g z}; m \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> {x. stake n x = stake n m} \\<inter>\n                         {x. stake n x = stake n na} =\n                         {}", "assume \"u \\<in>  pseudo_proj_True n ` g -` {g z}\" and \"v\\<in> pseudo_proj_True n ` g -` {g z}\" and \"u \\<noteq> v\""], ["proof (state)\nthis:\n  u \\<in> pseudo_proj_True n ` g -` {g z}\n  v \\<in> pseudo_proj_True n ` g -` {g z}\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>m \\<in> pseudo_proj_True n ` g -` {g z};\n        na \\<in> pseudo_proj_True n ` g -` {g z}; m \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> {x. stake n x = stake n m} \\<inter>\n                         {x. stake n x = stake n na} =\n                         {}", "note uvprops = this"], ["proof (state)\nthis:\n  u \\<in> pseudo_proj_True n ` g -` {g z}\n  v \\<in> pseudo_proj_True n ` g -` {g z}\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>m \\<in> pseudo_proj_True n ` g -` {g z};\n        na \\<in> pseudo_proj_True n ` g -` {g z}; m \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> {x. stake n x = stake n m} \\<inter>\n                         {x. stake n x = stake n na} =\n                         {}", "show \"{x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} = {}", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "assume \"{x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} \\<noteq> {}\""], ["proof (state)\nthis:\n  {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "hence \"\\<exists> uu. uu\\<in> {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v}\""], ["proof (prove)\nusing this:\n  {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>uu.\n       uu \\<in> {x. stake n x = stake n u} \\<inter>\n                {x. stake n x = stake n v}", "by auto"], ["proof (state)\nthis:\n  \\<exists>uu.\n     uu \\<in> {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v}\n\ngoal (1 subgoal):\n 1. {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  \\<exists>uu.\n     uu \\<in> {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v}", "obtain uu where \"uu\\<in> {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v}\""], ["proof (prove)\nusing this:\n  \\<exists>uu.\n     uu \\<in> {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v}\n\ngoal (1 subgoal):\n 1. (\\<And>uu.\n        uu \\<in> {x. stake n x = stake n u} \\<inter>\n                 {x. stake n x = stake n v} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  uu \\<in> {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v}\n\ngoal (1 subgoal):\n 1. {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "hence \"stake n uu = stake n u\" and \"stake n uu = stake n v\""], ["proof (prove)\nusing this:\n  uu \\<in> {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v}\n\ngoal (1 subgoal):\n 1. stake n uu = stake n u &&& stake n uu = stake n v", "by auto"], ["proof (state)\nthis:\n  stake n uu = stake n u\n  stake n uu = stake n v\n\ngoal (1 subgoal):\n 1. {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  stake n uu = stake n u\n  stake n uu = stake n v\n\ngoal (1 subgoal):\n 1. {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "have \"stake n u \\<noteq> stake n v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake n u \\<noteq> stake n v", "by (metis uvprops imageE pseudo_proj_True_proj pseudo_proj_True_stake_image)"], ["proof (state)\nthis:\n  stake n u \\<noteq> stake n v\n\ngoal (1 subgoal):\n 1. {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  stake n uu = stake n u\n  stake n uu = stake n v\n  stake n u \\<noteq> stake n v", "show False"], ["proof (prove)\nusing this:\n  stake n uu = stake n u\n  stake n uu = stake n v\n  stake n u \\<noteq> stake n v\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  disjoint_family_on (\\<lambda>i. {x. stake n x = stake n i})\n   (pseudo_proj_True n ` g -` {g z})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) =\n  prob\n   (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       {x. stake n x = stake n w})\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    p *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z)", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) =\n  prob\n   (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       {x. stake n x = stake n w})\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    p *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z)", "have \"... = prob (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}. pseudo_proj_True n -`{w})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob\n     (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n         {x. stake n x = stake n w}) =\n    prob\n     (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n         pseudo_proj_True n -` {w})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. prob\n     (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n         {x. stake n x = stake n w}) =\n    prob\n     (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n         pseudo_proj_True n -` {w})", "have \"\\<And>w. w\\<in>pseudo_proj_True n ` g -` {g z} \\<Longrightarrow> {x. stake n x = stake n w} =  pseudo_proj_True n -`{w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} = pseudo_proj_True n -` {w}", "using pseudo_proj_True_preimage_stake pseudo_proj_True_proj"], ["proof (prove)\nusing this:\n  ?w = pseudo_proj_True ?n ?w \\<Longrightarrow>\n  pseudo_proj_True ?n -` {?w} = {x. stake ?n x = stake ?n ?w}\n  pseudo_proj_True ?n (pseudo_proj_True ?n ?w) = pseudo_proj_True ?n ?w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} = pseudo_proj_True n -` {w}", "by force"], ["proof (state)\nthis:\n  ?w1 \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n  {x. stake n x = stake n ?w1} = pseudo_proj_True n -` {?w1}\n\ngoal (1 subgoal):\n 1. prob\n     (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n         {x. stake n x = stake n w}) =\n    prob\n     (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n         pseudo_proj_True n -` {w})", "hence \"(\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}. {x. stake n x = stake n w}) =\n        (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}. pseudo_proj_True n -`{w})\""], ["proof (prove)\nusing this:\n  ?w1 \\<in> pseudo_proj_True n ` g -` {g z} \\<Longrightarrow>\n  {x. stake n x = stake n ?w1} = pseudo_proj_True n -` {?w1}\n\ngoal (1 subgoal):\n 1. (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n        {x. stake n x = stake n w}) =\n    (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n        pseudo_proj_True n -` {w})", "by auto"], ["proof (state)\nthis:\n  (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n      {x. stake n x = stake n w}) =\n  (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}. pseudo_proj_True n -` {w})\n\ngoal (1 subgoal):\n 1. prob\n     (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n         {x. stake n x = stake n w}) =\n    prob\n     (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n         pseudo_proj_True n -` {w})", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n      {x. stake n x = stake n w}) =\n  (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}. pseudo_proj_True n -` {w})\n\ngoal (1 subgoal):\n 1. prob\n     (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n         {x. stake n x = stake n w}) =\n    prob\n     (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n         pseudo_proj_True n -` {w})", "by simp"], ["proof (state)\nthis:\n  prob\n   (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       {x. stake n x = stake n w}) =\n  prob\n   (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       pseudo_proj_True n -` {w})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prob\n   (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       {x. stake n x = stake n w}) =\n  prob\n   (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       pseudo_proj_True n -` {w})\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    p *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z)", "also"], ["proof (state)\nthis:\n  prob\n   (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       {x. stake n x = stake n w}) =\n  prob\n   (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       pseudo_proj_True n -` {w})\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    p *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z)", "have \"... = prob (pseudo_proj_True n -`(pseudo_proj_True n ` g -` {g z}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob\n     (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n         pseudo_proj_True n -` {w}) =\n    prob (pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z})", "by (metis vimage_eq_UN)"], ["proof (state)\nthis:\n  prob\n   (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       pseudo_proj_True n -` {w}) =\n  prob (pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z})\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    p *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z)", "also"], ["proof (state)\nthis:\n  prob\n   (\\<Union>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       pseudo_proj_True n -` {w}) =\n  prob (pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z})\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    p *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z)", "have \"... = prob (g -` {g z})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}) =\n    prob (g -` {g z})", "using pseudo_proj_preimage[symmetric, of g n N z]\n      pseudo_proj_preimage'[of g n] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>g \\<in> F n \\<rightarrow>\\<^sub>M N;\n   set_discriminating n g N\\<rbrakk>\n  \\<Longrightarrow> pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z} =\n                    pseudo_proj_True n -` g -` {g z}\n  \\<lbrakk>g \\<in> F n \\<rightarrow>\\<^sub>M ?N;\n   set_discriminating n g ?N\\<rbrakk>\n  \\<Longrightarrow> pseudo_proj_True n -` g -` {g ?z} = g -` {g ?z}\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  g -` {g z} \\<in> sets (F n)\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}) =\n    prob (g -` {g z})", "by simp"], ["proof (state)\nthis:\n  prob (pseudo_proj_True n -` pseudo_proj_True n ` g -` {g z}) =\n  prob (g -` {g z})\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    p *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) =\n  prob (g -` {g z})", "have \"(\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}. prob ({x. stake n x = stake n w})) = prob (g -` {g z})\""], ["proof (prove)\nusing this:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) =\n  prob (g -` {g z})\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) =\n    prob (g -` {g z})", "."], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) =\n  prob (g -` {g z})\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    p *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) =\n  prob (g -` {g z})\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    p *\n    f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) *\n  p *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) *\n  (1 - p) *\n  f (pseudo_proj_False n z) =\n  prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) *\n  (1 - p) *\n  f (pseudo_proj_False n z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) *\n  p *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) *\n  (1 - p) *\n  f (pseudo_proj_False n z) =\n  prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) *\n  (1 - p) *\n  f (pseudo_proj_False n z)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_True n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) *\n  p *\n  f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) *\n  (1 - p) *\n  f (pseudo_proj_False n z) =\n  prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) *\n  (1 - p) *\n  f (pseudo_proj_False n z)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "have \"... = prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    prob (g -`{g z}) * (1 -p) * f (pseudo_proj_False n z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    prob (g -` {g z}) * (1 - p) * f (pseudo_proj_False n z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    prob (g -` {g z}) * (1 - p) * f (pseudo_proj_False n z)", "have projset: \"\\<And>w. w\\<in>pseudo_proj_False n ` g -` {g z} \\<Longrightarrow> {x. stake n x = stake n w} \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} \\<in> events", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} \\<in> events", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} \\<in> events", "assume \"w\\<in> pseudo_proj_False n ` g -` {g z}\""], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_False n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} \\<in> events", "hence \"\\<exists>y. w = pseudo_proj_False n y\""], ["proof (prove)\nusing this:\n  w \\<in> pseudo_proj_False n ` g -` {g z}\n\ngoal (1 subgoal):\n 1. \\<exists>y. w = pseudo_proj_False n y", "by auto"], ["proof (state)\nthis:\n  \\<exists>y. w = pseudo_proj_False n y\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} \\<in> events", "from this"], ["proof (chain)\npicking this:\n  \\<exists>y. w = pseudo_proj_False n y", "obtain y where \"w = pseudo_proj_False n y\""], ["proof (prove)\nusing this:\n  \\<exists>y. w = pseudo_proj_False n y\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        w = pseudo_proj_False n y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  w = pseudo_proj_False n y\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} \\<in> events", "hence \"w = pseudo_proj_False n w\""], ["proof (prove)\nusing this:\n  w = pseudo_proj_False n y\n\ngoal (1 subgoal):\n 1. w = pseudo_proj_False n w", "using pseudo_proj_False_def pseudo_proj_False_stake"], ["proof (prove)\nusing this:\n  w = pseudo_proj_False n y\n  pseudo_proj_False ?n = (\\<lambda>w. (stake ?n w @ [False]) @- sconst True)\n  stake ?n (pseudo_proj_False ?n ?w) = stake ?n ?w\n\ngoal (1 subgoal):\n 1. w = pseudo_proj_False n w", "by auto"], ["proof (state)\nthis:\n  w = pseudo_proj_False n w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} \\<in> events", "hence \"pseudo_proj_False n -`{w} = {x. stake n x = stake n w}\""], ["proof (prove)\nusing this:\n  w = pseudo_proj_False n w\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` {w} = {x. stake n x = stake n w}", "using pseudo_proj_False_preimage_stake"], ["proof (prove)\nusing this:\n  w = pseudo_proj_False n w\n  ?w = pseudo_proj_False ?n ?w \\<Longrightarrow>\n  pseudo_proj_False ?n -` {?w} = {x. stake ?n x = stake ?n ?w}\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` {w} = {x. stake n x = stake n w}", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_False n -` {w} = {x. stake n x = stake n w}\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} \\<in> events", "moreover"], ["proof (state)\nthis:\n  pseudo_proj_False n -` {w} = {x. stake n x = stake n w}\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} \\<in> events", "have \"pseudo_proj_False n -`{w} \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` {w} \\<in> events", "using \\<open>w = pseudo_proj_False n w\\<close> bernoulli bernoulli_stream_space pseudo_proj_False_singleton"], ["proof (prove)\nusing this:\n  w = pseudo_proj_False n w\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n  ?w = pseudo_proj_False ?n ?w \\<Longrightarrow>\n  pseudo_proj_False ?n -` {?w} \\<inter> space (bernoulli_stream p)\n  \\<in> sets (bernoulli_stream p)\n\ngoal (1 subgoal):\n 1. pseudo_proj_False n -` {w} \\<in> events", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_False n -` {w} \\<in> events\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} \\<in> events", "ultimately"], ["proof (chain)\npicking this:\n  pseudo_proj_False n -` {w} = {x. stake n x = stake n w}\n  pseudo_proj_False n -` {w} \\<in> events", "show \"{x. stake n x = stake n w} \\<in> sets M\""], ["proof (prove)\nusing this:\n  pseudo_proj_False n -` {w} = {x. stake n x = stake n w}\n  pseudo_proj_False n -` {w} \\<in> events\n\ngoal (1 subgoal):\n 1. {x. stake n x = stake n w} \\<in> events", "by simp"], ["proof (state)\nthis:\n  {x. stake n x = stake n w} \\<in> events\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?w1 \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n  {x. stake n x = stake n ?w1} \\<in> events\n\ngoal (1 subgoal):\n 1. prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    prob (g -` {g z}) * (1 - p) * f (pseudo_proj_False n z)", "have \"(\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}. prob ({x. stake n x = stake n w})) =\n      prob (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}. {x. stake n x = stake n w})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) =\n    prob\n     (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n         {x. stake n x = stake n w})", "proof (rule finite_measure_finite_Union[symmetric])"], ["proof (state)\ngoal (3 subgoals):\n 1. finite (pseudo_proj_False n ` g -` {g z})\n 2. (\\<lambda>i. {x. stake n x = stake n i}) `\n    pseudo_proj_False n ` g -` {g z}\n    \\<subseteq> events\n 3. disjoint_family_on (\\<lambda>i. {x. stake n x = stake n i})\n     (pseudo_proj_False n ` g -` {g z})", "show \"finite (pseudo_proj_False n ` g -` {g z})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (pseudo_proj_False n ` g -` {g z})", "by (meson finite_subset image_mono pseudo_proj_False_finite_image subset_UNIV)"], ["proof (state)\nthis:\n  finite (pseudo_proj_False n ` g -` {g z})\n\ngoal (2 subgoals):\n 1. (\\<lambda>i. {x. stake n x = stake n i}) `\n    pseudo_proj_False n ` g -` {g z}\n    \\<subseteq> events\n 2. disjoint_family_on (\\<lambda>i. {x. stake n x = stake n i})\n     (pseudo_proj_False n ` g -` {g z})", "show \"(\\<lambda>i. {x. stake n x = stake n i}) ` pseudo_proj_False n ` g -` {g z} \\<subseteq> events\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. {x. stake n x = stake n i}) `\n    pseudo_proj_False n ` g -` {g z}\n    \\<subseteq> events", "using projset"], ["proof (prove)\nusing this:\n  ?w1 \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n  {x. stake n x = stake n ?w1} \\<in> events\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. {x. stake n x = stake n i}) `\n    pseudo_proj_False n ` g -` {g z}\n    \\<subseteq> events", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>i. {x. stake n x = stake n i}) `\n  pseudo_proj_False n ` g -` {g z}\n  \\<subseteq> events\n\ngoal (1 subgoal):\n 1. disjoint_family_on (\\<lambda>i. {x. stake n x = stake n i})\n     (pseudo_proj_False n ` g -` {g z})", "show \"disjoint_family_on (\\<lambda>i. {x. stake n x = stake n i}) (pseudo_proj_False n ` g -` {g z})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disjoint_family_on (\\<lambda>i. {x. stake n x = stake n i})\n     (pseudo_proj_False n ` g -` {g z})", "unfolding disjoint_family_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m\\<in>pseudo_proj_False n ` g -` {g z}.\n       \\<forall>na\\<in>pseudo_proj_False n ` g -` {g z}.\n          m \\<noteq> na \\<longrightarrow>\n          {x. stake n x = stake n m} \\<inter> {x. stake n x = stake n na} =\n          {}", "proof (intro ballI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>m \\<in> pseudo_proj_False n ` g -` {g z};\n        na \\<in> pseudo_proj_False n ` g -` {g z}; m \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> {x. stake n x = stake n m} \\<inter>\n                         {x. stake n x = stake n na} =\n                         {}", "fix u v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>m \\<in> pseudo_proj_False n ` g -` {g z};\n        na \\<in> pseudo_proj_False n ` g -` {g z}; m \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> {x. stake n x = stake n m} \\<inter>\n                         {x. stake n x = stake n na} =\n                         {}", "assume \"u \\<in>  pseudo_proj_False n ` g -` {g z}\" and \"v\\<in> pseudo_proj_False n ` g -` {g z}\" and \"u \\<noteq> v\""], ["proof (state)\nthis:\n  u \\<in> pseudo_proj_False n ` g -` {g z}\n  v \\<in> pseudo_proj_False n ` g -` {g z}\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>m \\<in> pseudo_proj_False n ` g -` {g z};\n        na \\<in> pseudo_proj_False n ` g -` {g z}; m \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> {x. stake n x = stake n m} \\<inter>\n                         {x. stake n x = stake n na} =\n                         {}", "note uvprops = this"], ["proof (state)\nthis:\n  u \\<in> pseudo_proj_False n ` g -` {g z}\n  v \\<in> pseudo_proj_False n ` g -` {g z}\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>m \\<in> pseudo_proj_False n ` g -` {g z};\n        na \\<in> pseudo_proj_False n ` g -` {g z}; m \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> {x. stake n x = stake n m} \\<inter>\n                         {x. stake n x = stake n na} =\n                         {}", "show \"{x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} = {}", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "assume \"{x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} \\<noteq> {}\""], ["proof (state)\nthis:\n  {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "hence \"\\<exists> uu. uu\\<in> {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v}\""], ["proof (prove)\nusing this:\n  {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>uu.\n       uu \\<in> {x. stake n x = stake n u} \\<inter>\n                {x. stake n x = stake n v}", "by auto"], ["proof (state)\nthis:\n  \\<exists>uu.\n     uu \\<in> {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v}\n\ngoal (1 subgoal):\n 1. {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  \\<exists>uu.\n     uu \\<in> {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v}", "obtain uu where \"uu\\<in> {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v}\""], ["proof (prove)\nusing this:\n  \\<exists>uu.\n     uu \\<in> {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v}\n\ngoal (1 subgoal):\n 1. (\\<And>uu.\n        uu \\<in> {x. stake n x = stake n u} \\<inter>\n                 {x. stake n x = stake n v} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  uu \\<in> {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v}\n\ngoal (1 subgoal):\n 1. {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "hence \"stake n uu = stake n u\" and \"stake n uu = stake n v\""], ["proof (prove)\nusing this:\n  uu \\<in> {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v}\n\ngoal (1 subgoal):\n 1. stake n uu = stake n u &&& stake n uu = stake n v", "by auto"], ["proof (state)\nthis:\n  stake n uu = stake n u\n  stake n uu = stake n v\n\ngoal (1 subgoal):\n 1. {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  stake n uu = stake n u\n  stake n uu = stake n v\n\ngoal (1 subgoal):\n 1. {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "have \"stake n u \\<noteq> stake n v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake n u \\<noteq> stake n v", "using pseudo_proj_False_def pseudo_proj_False_stake uvprops"], ["proof (prove)\nusing this:\n  pseudo_proj_False ?n = (\\<lambda>w. (stake ?n w @ [False]) @- sconst True)\n  stake ?n (pseudo_proj_False ?n ?w) = stake ?n ?w\n  u \\<in> pseudo_proj_False n ` g -` {g z}\n  v \\<in> pseudo_proj_False n ` g -` {g z}\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. stake n u \\<noteq> stake n v", "by auto"], ["proof (state)\nthis:\n  stake n u \\<noteq> stake n v\n\ngoal (1 subgoal):\n 1. {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} \\<noteq>\n    {} \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  stake n uu = stake n u\n  stake n uu = stake n v\n  stake n u \\<noteq> stake n v", "show False"], ["proof (prove)\nusing this:\n  stake n uu = stake n u\n  stake n uu = stake n v\n  stake n u \\<noteq> stake n v\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {x. stake n x = stake n u} \\<inter> {x. stake n x = stake n v} = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  disjoint_family_on (\\<lambda>i. {x. stake n x = stake n i})\n   (pseudo_proj_False n ` g -` {g z})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) =\n  prob\n   (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       {x. stake n x = stake n w})\n\ngoal (1 subgoal):\n 1. prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    prob (g -` {g z}) * (1 - p) * f (pseudo_proj_False n z)", "also"], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) =\n  prob\n   (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       {x. stake n x = stake n w})\n\ngoal (1 subgoal):\n 1. prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    prob (g -` {g z}) * (1 - p) * f (pseudo_proj_False n z)", "have \"... = prob (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}. pseudo_proj_False n -`{w})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob\n     (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n         {x. stake n x = stake n w}) =\n    prob\n     (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n         pseudo_proj_False n -` {w})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. prob\n     (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n         {x. stake n x = stake n w}) =\n    prob\n     (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n         pseudo_proj_False n -` {w})", "have \"\\<And>w. w\\<in>pseudo_proj_False n ` g -` {g z} \\<Longrightarrow> {x. stake n x = stake n w} =  pseudo_proj_False n -`{w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} = pseudo_proj_False n -` {w}", "using pseudo_proj_False_preimage_stake pseudo_proj_False_def pseudo_proj_False_stake"], ["proof (prove)\nusing this:\n  ?w = pseudo_proj_False ?n ?w \\<Longrightarrow>\n  pseudo_proj_False ?n -` {?w} = {x. stake ?n x = stake ?n ?w}\n  pseudo_proj_False ?n = (\\<lambda>w. (stake ?n w @ [False]) @- sconst True)\n  stake ?n (pseudo_proj_False ?n ?w) = stake ?n ?w\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n       {x. stake n x = stake n w} = pseudo_proj_False n -` {w}", "by force"], ["proof (state)\nthis:\n  ?w1 \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n  {x. stake n x = stake n ?w1} = pseudo_proj_False n -` {?w1}\n\ngoal (1 subgoal):\n 1. prob\n     (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n         {x. stake n x = stake n w}) =\n    prob\n     (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n         pseudo_proj_False n -` {w})", "hence \"(\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}. {x. stake n x = stake n w}) =\n        (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}. pseudo_proj_False n -`{w})\""], ["proof (prove)\nusing this:\n  ?w1 \\<in> pseudo_proj_False n ` g -` {g z} \\<Longrightarrow>\n  {x. stake n x = stake n ?w1} = pseudo_proj_False n -` {?w1}\n\ngoal (1 subgoal):\n 1. (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n        {x. stake n x = stake n w}) =\n    (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n        pseudo_proj_False n -` {w})", "by auto"], ["proof (state)\nthis:\n  (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n      {x. stake n x = stake n w}) =\n  (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n      pseudo_proj_False n -` {w})\n\ngoal (1 subgoal):\n 1. prob\n     (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n         {x. stake n x = stake n w}) =\n    prob\n     (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n         pseudo_proj_False n -` {w})", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n      {x. stake n x = stake n w}) =\n  (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n      pseudo_proj_False n -` {w})\n\ngoal (1 subgoal):\n 1. prob\n     (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n         {x. stake n x = stake n w}) =\n    prob\n     (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n         pseudo_proj_False n -` {w})", "by simp"], ["proof (state)\nthis:\n  prob\n   (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       {x. stake n x = stake n w}) =\n  prob\n   (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       pseudo_proj_False n -` {w})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prob\n   (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       {x. stake n x = stake n w}) =\n  prob\n   (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       pseudo_proj_False n -` {w})\n\ngoal (1 subgoal):\n 1. prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    prob (g -` {g z}) * (1 - p) * f (pseudo_proj_False n z)", "also"], ["proof (state)\nthis:\n  prob\n   (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       {x. stake n x = stake n w}) =\n  prob\n   (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       pseudo_proj_False n -` {w})\n\ngoal (1 subgoal):\n 1. prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    prob (g -` {g z}) * (1 - p) * f (pseudo_proj_False n z)", "have \"... = prob (pseudo_proj_False n -`(pseudo_proj_False n ` g -` {g z}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob\n     (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n         pseudo_proj_False n -` {w}) =\n    prob (pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z})", "by (metis vimage_eq_UN)"], ["proof (state)\nthis:\n  prob\n   (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       pseudo_proj_False n -` {w}) =\n  prob (pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z})\n\ngoal (1 subgoal):\n 1. prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    prob (g -` {g z}) * (1 - p) * f (pseudo_proj_False n z)", "also"], ["proof (state)\nthis:\n  prob\n   (\\<Union>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       pseudo_proj_False n -` {w}) =\n  prob (pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z})\n\ngoal (1 subgoal):\n 1. prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    prob (g -` {g z}) * (1 - p) * f (pseudo_proj_False n z)", "have \"... = prob (g -` {g z})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob (pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}) =\n    prob (g -` {g z})", "using pseudo_proj_False_preimage[symmetric, of g n N z]\n      pseudo_proj_False_preimage'[of g n] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>g \\<in> F n \\<rightarrow>\\<^sub>M N;\n   set_discriminating n g N\\<rbrakk>\n  \\<Longrightarrow> pseudo_proj_False n -`\n                    pseudo_proj_False n ` g -` {g z} =\n                    pseudo_proj_False n -` g -` {g z}\n  \\<lbrakk>g \\<in> F n \\<rightarrow>\\<^sub>M ?N;\n   set_discriminating n g ?N\\<rbrakk>\n  \\<Longrightarrow> pseudo_proj_False n -` g -` {g ?z} = g -` {g ?z}\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  g -` {g z} \\<in> sets (F n)\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n\ngoal (1 subgoal):\n 1. prob (pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}) =\n    prob (g -` {g z})", "by simp"], ["proof (state)\nthis:\n  prob (pseudo_proj_False n -` pseudo_proj_False n ` g -` {g z}) =\n  prob (g -` {g z})\n\ngoal (1 subgoal):\n 1. prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    prob (g -` {g z}) * (1 - p) * f (pseudo_proj_False n z)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) =\n  prob (g -` {g z})", "have \"(\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}. prob ({x. stake n x = stake n w})) = prob (g -` {g z})\""], ["proof (prove)\nusing this:\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) =\n  prob (g -` {g z})\n\ngoal (1 subgoal):\n 1. (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) =\n    prob (g -` {g z})", "."], ["proof (state)\nthis:\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) =\n  prob (g -` {g z})\n\ngoal (1 subgoal):\n 1. prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    prob (g -` {g z}) * (1 - p) * f (pseudo_proj_False n z)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) =\n  prob (g -` {g z})\n\ngoal (1 subgoal):\n 1. prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n       prob {x. stake n x = stake n w}) *\n    (1 - p) *\n    f (pseudo_proj_False n z) =\n    prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    prob (g -` {g z}) * (1 - p) * f (pseudo_proj_False n z)", "by simp"], ["proof (state)\nthis:\n  prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) *\n  (1 - p) *\n  f (pseudo_proj_False n z) =\n  prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n  prob (g -` {g z}) * (1 - p) * f (pseudo_proj_False n z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) *\n  (1 - p) *\n  f (pseudo_proj_False n z) =\n  prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n  prob (g -` {g z}) * (1 - p) * f (pseudo_proj_False n z)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "also"], ["proof (state)\nthis:\n  prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n  (\\<Sum>w\\<in>pseudo_proj_False n ` g -` {g z}.\n     prob {x. stake n x = stake n w}) *\n  (1 - p) *\n  f (pseudo_proj_False n z) =\n  prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n  prob (g -` {g z}) * (1 - p) * f (pseudo_proj_False n z)\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "have \"... = prob (g -` {g z}) * (p * f (pseudo_proj_True n z) +\n     (1 -p) * f (pseudo_proj_False n z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    prob (g -` {g z}) * (1 - p) * f (pseudo_proj_False n z) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "using distrib_left[symmetric, of \"prob (g -` {g z})\" \"p * f (pseudo_proj_True n z)\" \"(1 - p) * f (pseudo_proj_False n z)\"]"], ["proof (prove)\nusing this:\n  prob (g -` {g z}) * (p * f (pseudo_proj_True n z)) +\n  prob (g -` {g z}) * ((1 - p) * f (pseudo_proj_False n z)) =\n  prob (g -` {g z}) *\n  (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))\n\ngoal (1 subgoal):\n 1. prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n    prob (g -` {g z}) * (1 - p) * f (pseudo_proj_False n z) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "by simp"], ["proof (state)\nthis:\n  prob (g -` {g z}) * p * f (pseudo_proj_True n z) +\n  prob (g -` {g z}) * (1 - p) * f (pseudo_proj_False n z) =\n  prob (g -` {g z}) *\n  (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "finally"], ["proof (chain)\npicking this:\n  expectation expind =\n  prob (g -` {g z}) *\n  (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "show \"expectation (\\<lambda>x. f x * indicator (g -` {g z}) x) =\n    prob (g -` {g z}) * (p * f (pseudo_proj_True n z) +\n     (1 -p) * f (pseudo_proj_False n z))\""], ["proof (prove)\nusing this:\n  expectation expind =\n  prob (g -` {g z}) *\n  (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "unfolding expind_def"], ["proof (prove)\nusing this:\n  expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n  prob (g -` {g z}) *\n  (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n    prob (g -` {g z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "."], ["proof (state)\nthis:\n  expectation (\\<lambda>x. f x * indicat_real (g -` {g z}) x) =\n  prob (g -` {g z}) *\n  (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) borel_Suc_expectation_pseudo_proj:\n  fixes f::\"bool stream\\<Rightarrow> real\"\n  assumes \"f\\<in> borel_measurable (F (Suc n))\"\n  shows \"expectation (\\<lambda>x. f x * indicator (pseudo_proj_True n -` {pseudo_proj_True n z}) x) =\n    prob (pseudo_proj_True n -` {pseudo_proj_True n z}) *\n    (p * (f (pseudo_proj_True n z)) + (1-p) * (f (pseudo_proj_False n z)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expectation\n     (\\<lambda>x.\n         f x *\n         indicat_real (pseudo_proj_True n -` {pseudo_proj_True n z}) x) =\n    prob (pseudo_proj_True n -` {pseudo_proj_True n z}) *\n    (p * f (pseudo_proj_True n z) + (1 - p) * f (pseudo_proj_False n z))", "proof (rule borel_Suc_expectation)"], ["proof (state)\ngoal (5 subgoals):\n 1. f \\<in> borel_measurable (F (Suc n))\n 2. pseudo_proj_True n \\<in> F n \\<rightarrow>\\<^sub>M ?N\n 3. set_discriminating n (pseudo_proj_True n) ?N\n 4. pseudo_proj_True n -` {pseudo_proj_True n z} \\<in> sets (F n)\n 5. \\<forall>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       f y = f z", "show \"f \\<in> borel_measurable (F (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (F (Suc n))", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (F (Suc n))", "by simp"], ["proof (state)\nthis:\n  f \\<in> borel_measurable (F (Suc n))\n\ngoal (4 subgoals):\n 1. pseudo_proj_True n \\<in> F n \\<rightarrow>\\<^sub>M ?N\n 2. set_discriminating n (pseudo_proj_True n) ?N\n 3. pseudo_proj_True n -` {pseudo_proj_True n z} \\<in> sets (F n)\n 4. \\<forall>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       f y = f z", "show \"pseudo_proj_True n \\<in> F n \\<rightarrow>\\<^sub>M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n \\<in> F n \\<rightarrow>\\<^sub>M M", "by (simp add: nat_filtration_pseudo_proj_True_measurable natural_filtration)"], ["proof (state)\nthis:\n  pseudo_proj_True n \\<in> F n \\<rightarrow>\\<^sub>M M\n\ngoal (3 subgoals):\n 1. set_discriminating n (pseudo_proj_True n) M\n 2. pseudo_proj_True n -` {pseudo_proj_True n z} \\<in> sets (F n)\n 3. \\<forall>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       f y = f z", "show \"pseudo_proj_True n -` {pseudo_proj_True n z} \\<in> sets (F n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {pseudo_proj_True n z} \\<in> sets (F n)", "by (simp add: nat_filtration_singleton natural_filtration pseudo_proj_True_proj)"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {pseudo_proj_True n z} \\<in> sets (F n)\n\ngoal (2 subgoals):\n 1. set_discriminating n (pseudo_proj_True n) M\n 2. \\<forall>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       f y = f z", "show \"\\<forall>y z. (pseudo_proj_True n y = pseudo_proj_True n z \\<and> snth y n = snth z n) \\<longrightarrow> f y = f z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       f y = f z", "proof (intro allI impI conjI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       f y = f z", "fix y z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       f y = f z", "assume \"pseudo_proj_True n y = pseudo_proj_True n z \\<and> y !! n = z !! n\""], ["proof (state)\nthis:\n  pseudo_proj_True n y = pseudo_proj_True n z \\<and> y !! n = z !! n\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       f y = f z", "hence \"pseudo_proj_True n y = pseudo_proj_True n z\" and \"snth y n = snth z n\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n y = pseudo_proj_True n z \\<and> y !! n = z !! n\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n y = pseudo_proj_True n z &&& y !! n = z !! n", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True n y = pseudo_proj_True n z\n  y !! n = z !! n\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       f y = f z", "hence \"pseudo_proj_True (Suc n) y = pseudo_proj_True (Suc n) z\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n y = pseudo_proj_True n z\n  y !! n = z !! n\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) y = pseudo_proj_True (Suc n) z", "unfolding pseudo_proj_True_def"], ["proof (prove)\nusing this:\n  stake n y @- sconst True = stake n z @- sconst True\n  y !! n = z !! n\n\ngoal (1 subgoal):\n 1. stake (Suc n) y @- sconst True = stake (Suc n) z @- sconst True", "by (metis (full_types) \\<open>pseudo_proj_True n y = pseudo_proj_True n z\\<close> pseudo_proj_True_same_img stake_Suc)"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) y = pseudo_proj_True (Suc n) z\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       f y = f z", "thus \"f y = f z\""], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) y = pseudo_proj_True (Suc n) z\n\ngoal (1 subgoal):\n 1. f y = f z", "using nat_filtration_info assms natural_filtration"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) y = pseudo_proj_True (Suc n) z\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  ?f \\<circ> pseudo_proj_True ?n = ?f\n  f \\<in> borel_measurable (F (Suc n))\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. f y = f z", "by (metis comp_apply)"], ["proof (state)\nthis:\n  f y = f z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>y z.\n     pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n     y !! n = z !! n \\<longrightarrow>\n     f y = f z\n\ngoal (1 subgoal):\n 1. set_discriminating n (pseudo_proj_True n) M", "show \"set_discriminating n (pseudo_proj_True n) M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_discriminating n (pseudo_proj_True n) M", "unfolding set_discriminating_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w.\n       pseudo_proj_True n w \\<noteq>\n       pseudo_proj_True n (pseudo_proj_True n w) \\<longrightarrow>\n       (\\<exists>A\\<in>events.\n           (pseudo_proj_True n w \\<in> A) =\n           (pseudo_proj_True n (pseudo_proj_True n w) \\<notin> A))", "using pseudo_proj_True_proj"], ["proof (prove)\nusing this:\n  pseudo_proj_True ?n (pseudo_proj_True ?n ?w) = pseudo_proj_True ?n ?w\n\ngoal (1 subgoal):\n 1. \\<forall>w.\n       pseudo_proj_True n w \\<noteq>\n       pseudo_proj_True n (pseudo_proj_True n w) \\<longrightarrow>\n       (\\<exists>A\\<in>events.\n           (pseudo_proj_True n w \\<in> A) =\n           (pseudo_proj_True n (pseudo_proj_True n w) \\<notin> A))", "by simp"], ["proof (state)\nthis:\n  set_discriminating n (pseudo_proj_True n) M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) f_borel_Suc_expl_cond_expect:\n  assumes \"f\\<in> borel_measurable (F (Suc n))\"\n  and \"g\\<in> measurable (F n) N\"\n  and \"set_discriminating n g N\"\n  and \"g -` {g w} \\<in> sets (F n)\"\n  and \"\\<forall>y z. (g y = g z \\<and> snth y n = snth z n) \\<longrightarrow> f y = f z\"\nand \"0 < p\"\nand \"p < 1\"\n  shows \"expl_cond_expect M g f w = p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expl_cond_expect M g f w =\n    p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. expl_cond_expect M g f w =\n    p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)", "have nz:\"prob (g -`{g w}) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob (g -` {g w}) \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. prob (g -` {g w}) \\<noteq> 0", "have \"pseudo_proj_True n -`{pseudo_proj_True n w}  \\<subseteq> g -` {g w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {pseudo_proj_True n w} \\<subseteq> g -` {g w}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {pseudo_proj_True n w} \\<subseteq> g -` {g w}", "have \"\\<forall>f n m s. f \\<notin> F n \\<rightarrow>\\<^sub>M m \\<or> \\<not> set_discriminating n f m \\<or> pseudo_proj_True n -` f -` {f s::'a} = f -` {f s}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f n m s.\n       f \\<notin> F n \\<rightarrow>\\<^sub>M m \\<or>\n       \\<not> set_discriminating n f m \\<or>\n       pseudo_proj_True n -` f -` {f s} = f -` {f s}", "by (meson pseudo_proj_preimage')"], ["proof (state)\nthis:\n  \\<forall>f n m s.\n     f \\<notin> F n \\<rightarrow>\\<^sub>M m \\<or>\n     \\<not> set_discriminating n f m \\<or>\n     pseudo_proj_True n -` f -` {f s} = f -` {f s}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {pseudo_proj_True n w} \\<subseteq> g -` {g w}", "then"], ["proof (chain)\npicking this:\n  \\<forall>f n m s.\n     f \\<notin> F n \\<rightarrow>\\<^sub>M m \\<or>\n     \\<not> set_discriminating n f m \\<or>\n     pseudo_proj_True n -` f -` {f s} = f -` {f s}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>f n m s.\n     f \\<notin> F n \\<rightarrow>\\<^sub>M m \\<or>\n     \\<not> set_discriminating n f m \\<or>\n     pseudo_proj_True n -` f -` {f s} = f -` {f s}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {pseudo_proj_True n w} \\<subseteq> g -` {g w}", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>f n m s.\n     f \\<notin> F n \\<rightarrow>\\<^sub>M m \\<or>\n     \\<not> set_discriminating n f m \\<or>\n     pseudo_proj_True n -` f -` {f s} = f -` {f s}\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  g -` {g w} \\<in> sets (F n)\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {pseudo_proj_True n w} \\<subseteq> g -` {g w}", "by blast"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {pseudo_proj_True n w} \\<subseteq> g -` {g w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {pseudo_proj_True n w} \\<subseteq> g -` {g w}\n\ngoal (1 subgoal):\n 1. prob (g -` {g w}) \\<noteq> 0", "moreover"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {pseudo_proj_True n w} \\<subseteq> g -` {g w}\n\ngoal (1 subgoal):\n 1. prob (g -` {g w}) \\<noteq> 0", "have \"prob (pseudo_proj_True n -`{pseudo_proj_True n w}) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < prob (pseudo_proj_True n -` {pseudo_proj_True n w})", "using bernoulli_stream_pref_prob_pos\n      pseudo_proj_True_preimage_stake bernoulli bernoulli_stream_space emeasure_eq_measure pseudo_proj_True_proj assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < p; p < 1\\<rbrakk>\n  \\<Longrightarrow> 0 < emeasure M\n                         {w \\<in> space M. stake ?n w = stake ?n ?x}\n  ?w = pseudo_proj_True ?n ?w \\<Longrightarrow>\n  pseudo_proj_True ?n -` {?w} = {x. stake ?n x = stake ?n ?w}\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n  emeasure M ?A = ennreal (prob ?A)\n  pseudo_proj_True ?n (pseudo_proj_True ?n ?w) = pseudo_proj_True ?n ?w\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  g -` {g w} \\<in> sets (F n)\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. 0 < prob (pseudo_proj_True n -` {pseudo_proj_True n w})", "by auto"], ["proof (state)\nthis:\n  0 < prob (pseudo_proj_True n -` {pseudo_proj_True n w})\n\ngoal (1 subgoal):\n 1. prob (g -` {g w}) \\<noteq> 0", "moreover"], ["proof (state)\nthis:\n  0 < prob (pseudo_proj_True n -` {pseudo_proj_True n w})\n\ngoal (1 subgoal):\n 1. prob (g -` {g w}) \\<noteq> 0", "have \"pseudo_proj_True n -`{pseudo_proj_True n w} \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> events", "using bernoulli bernoulli_stream_space pseudo_proj_True_proj pseudo_proj_True_singleton"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n  pseudo_proj_True ?n (pseudo_proj_True ?n ?w) = pseudo_proj_True ?n ?w\n  ?w = pseudo_proj_True ?n ?w \\<Longrightarrow>\n  pseudo_proj_True ?n -` {?w} \\<inter> space (bernoulli_stream p)\n  \\<in> sets (bernoulli_stream p)\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> events", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> events\n\ngoal (1 subgoal):\n 1. prob (g -` {g w}) \\<noteq> 0", "moreover"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> events\n\ngoal (1 subgoal):\n 1. prob (g -` {g w}) \\<noteq> 0", "have \"g -`{g w} \\<in> events\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g -` {g w} \\<in> events", "using assms natural_filtration nat_filtration_subalgebra"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  g -` {g w} \\<in> sets (F n)\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n  0 < p\n  p < 1\n  F = nat_filtration\n  subalgebra M (nat_filtration ?n)\n\ngoal (1 subgoal):\n 1. g -` {g w} \\<in> events", "unfolding subalgebra_def"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  g -` {g w} \\<in> sets (F n)\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n  0 < p\n  p < 1\n  F = nat_filtration\n  space (nat_filtration ?n) = space M \\<and>\n  sets (nat_filtration ?n) \\<subseteq> events\n\ngoal (1 subgoal):\n 1. g -` {g w} \\<in> events", "by blast"], ["proof (state)\nthis:\n  g -` {g w} \\<in> events\n\ngoal (1 subgoal):\n 1. prob (g -` {g w}) \\<noteq> 0", "ultimately"], ["proof (chain)\npicking this:\n  pseudo_proj_True n -` {pseudo_proj_True n w} \\<subseteq> g -` {g w}\n  0 < prob (pseudo_proj_True n -` {pseudo_proj_True n w})\n  pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> events\n  g -` {g w} \\<in> events", "show ?thesis"], ["proof (prove)\nusing this:\n  pseudo_proj_True n -` {pseudo_proj_True n w} \\<subseteq> g -` {g w}\n  0 < prob (pseudo_proj_True n -` {pseudo_proj_True n w})\n  pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> events\n  g -` {g w} \\<in> events\n\ngoal (1 subgoal):\n 1. prob (g -` {g w}) \\<noteq> 0", "using  measure_increasing  increasingD"], ["proof (prove)\nusing this:\n  pseudo_proj_True n -` {pseudo_proj_True n w} \\<subseteq> g -` {g w}\n  0 < prob (pseudo_proj_True n -` {pseudo_proj_True n w})\n  pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> events\n  g -` {g w} \\<in> events\n  increasing events prob\n  \\<lbrakk>increasing ?M ?f; ?x \\<subseteq> ?y; ?x \\<in> ?M;\n   ?y \\<in> ?M\\<rbrakk>\n  \\<Longrightarrow> ?f ?x \\<le> ?f ?y\n\ngoal (1 subgoal):\n 1. prob (g -` {g w}) \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>pseudo_proj_True n -` {pseudo_proj_True n w}\n             \\<subseteq> g -` {g w};\n     0 < prob (pseudo_proj_True n -` {pseudo_proj_True n w});\n     pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> events;\n     g -` {g w} \\<in> events; increasing events prob;\n     \\<And>M f x y.\n        \\<lbrakk>increasing M f; x \\<subseteq> y; x \\<in> M;\n         y \\<in> M\\<rbrakk>\n        \\<Longrightarrow> f x \\<le> f y\\<rbrakk>\n    \\<Longrightarrow> prob (g -` {g w}) \\<noteq> 0", "have \"g -` {g w} \\<notin> events \\<or> pseudo_proj_True n -` {pseudo_proj_True n w} \\<notin> events \\<or> prob (pseudo_proj_True n -` {pseudo_proj_True n w}) \\<le> prob (g -` {g w})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g -` {g w} \\<notin> events \\<or>\n    pseudo_proj_True n -` {pseudo_proj_True n w} \\<notin> events \\<or>\n    prob (pseudo_proj_True n -` {pseudo_proj_True n w})\n    \\<le> prob (g -` {g w})", "using \\<open>pseudo_proj_True n -` {pseudo_proj_True n w} \\<subseteq> g -` {g w}\\<close> increasingD measure_increasing"], ["proof (prove)\nusing this:\n  pseudo_proj_True n -` {pseudo_proj_True n w} \\<subseteq> g -` {g w}\n  \\<lbrakk>increasing ?M ?f; ?x \\<subseteq> ?y; ?x \\<in> ?M;\n   ?y \\<in> ?M\\<rbrakk>\n  \\<Longrightarrow> ?f ?x \\<le> ?f ?y\n  increasing events prob\n\ngoal (1 subgoal):\n 1. g -` {g w} \\<notin> events \\<or>\n    pseudo_proj_True n -` {pseudo_proj_True n w} \\<notin> events \\<or>\n    prob (pseudo_proj_True n -` {pseudo_proj_True n w})\n    \\<le> prob (g -` {g w})", "by blast"], ["proof (state)\nthis:\n  g -` {g w} \\<notin> events \\<or>\n  pseudo_proj_True n -` {pseudo_proj_True n w} \\<notin> events \\<or>\n  prob (pseudo_proj_True n -` {pseudo_proj_True n w})\n  \\<le> prob (g -` {g w})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pseudo_proj_True n -` {pseudo_proj_True n w}\n             \\<subseteq> g -` {g w};\n     0 < prob (pseudo_proj_True n -` {pseudo_proj_True n w});\n     pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> events;\n     g -` {g w} \\<in> events; increasing events prob;\n     \\<And>M f x y.\n        \\<lbrakk>increasing M f; x \\<subseteq> y; x \\<in> M;\n         y \\<in> M\\<rbrakk>\n        \\<Longrightarrow> f x \\<le> f y\\<rbrakk>\n    \\<Longrightarrow> prob (g -` {g w}) \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  g -` {g w} \\<notin> events \\<or>\n  pseudo_proj_True n -` {pseudo_proj_True n w} \\<notin> events \\<or>\n  prob (pseudo_proj_True n -` {pseudo_proj_True n w})\n  \\<le> prob (g -` {g w})", "show ?thesis"], ["proof (prove)\nusing this:\n  g -` {g w} \\<notin> events \\<or>\n  pseudo_proj_True n -` {pseudo_proj_True n w} \\<notin> events \\<or>\n  prob (pseudo_proj_True n -` {pseudo_proj_True n w})\n  \\<le> prob (g -` {g w})\n\ngoal (1 subgoal):\n 1. prob (g -` {g w}) \\<noteq> 0", "using \\<open>0 < prob (pseudo_proj_True n -` {pseudo_proj_True n w})\\<close> \\<open>g -` {g w} \\<in> events\\<close> \\<open>pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> events\\<close>"], ["proof (prove)\nusing this:\n  g -` {g w} \\<notin> events \\<or>\n  pseudo_proj_True n -` {pseudo_proj_True n w} \\<notin> events \\<or>\n  prob (pseudo_proj_True n -` {pseudo_proj_True n w})\n  \\<le> prob (g -` {g w})\n  0 < prob (pseudo_proj_True n -` {pseudo_proj_True n w})\n  g -` {g w} \\<in> events\n  pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> events\n\ngoal (1 subgoal):\n 1. prob (g -` {g w}) \\<noteq> 0", "by linarith"], ["proof (state)\nthis:\n  prob (g -` {g w}) \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prob (g -` {g w}) \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prob (g -` {g w}) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. expl_cond_expect M g f w =\n    p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)", "hence \"expl_cond_expect M g f w =\n    expectation (\\<lambda>x. f x * indicator (g -` {g w} \\<inter> space M) x) /\n      prob (g -` {g w} \\<inter> space M)\""], ["proof (prove)\nusing this:\n  prob (g -` {g w}) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. expl_cond_expect M g f w =\n    expectation\n     (\\<lambda>x. f x * indicat_real (g -` {g w} \\<inter> space M) x) /\n    prob (g -` {g w} \\<inter> space M)", "unfolding expl_cond_expect_def img_dce_def"], ["proof (prove)\nusing this:\n  prob (g -` {g w}) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         if prob (g -` {y} \\<inter> space M) = 0 then 0\n         else expectation\n               (\\<lambda>w.\n                   f w * indicat_real (g -` {y} \\<inter> space M) w) /\n              prob (g -` {y} \\<inter> space M)) \\<circ>\n     g)\n     w =\n    expectation\n     (\\<lambda>x. f x * indicat_real (g -` {g w} \\<inter> space M) x) /\n    prob (g -` {g w} \\<inter> space M)", "by simp"], ["proof (state)\nthis:\n  expl_cond_expect M g f w =\n  expectation\n   (\\<lambda>x. f x * indicat_real (g -` {g w} \\<inter> space M) x) /\n  prob (g -` {g w} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. expl_cond_expect M g f w =\n    p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)", "also"], ["proof (state)\nthis:\n  expl_cond_expect M g f w =\n  expectation\n   (\\<lambda>x. f x * indicat_real (g -` {g w} \\<inter> space M) x) /\n  prob (g -` {g w} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. expl_cond_expect M g f w =\n    p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)", "have \"... = expectation (\\<lambda>x. f x * indicator (g -` {g w}) x) / prob (g -` {g w})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expectation\n     (\\<lambda>x. f x * indicat_real (g -` {g w} \\<inter> space M) x) /\n    prob (g -` {g w} \\<inter> space M) =\n    expectation (\\<lambda>x. f x * indicat_real (g -` {g w}) x) /\n    prob (g -` {g w})", "using bernoulli"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n\ngoal (1 subgoal):\n 1. expectation\n     (\\<lambda>x. f x * indicat_real (g -` {g w} \\<inter> space M) x) /\n    prob (g -` {g w} \\<inter> space M) =\n    expectation (\\<lambda>x. f x * indicat_real (g -` {g w}) x) /\n    prob (g -` {g w})", "by (simp add:bernoulli_stream_space)"], ["proof (state)\nthis:\n  expectation\n   (\\<lambda>x. f x * indicat_real (g -` {g w} \\<inter> space M) x) /\n  prob (g -` {g w} \\<inter> space M) =\n  expectation (\\<lambda>x. f x * indicat_real (g -` {g w}) x) /\n  prob (g -` {g w})\n\ngoal (1 subgoal):\n 1. expl_cond_expect M g f w =\n    p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)", "also"], ["proof (state)\nthis:\n  expectation\n   (\\<lambda>x. f x * indicat_real (g -` {g w} \\<inter> space M) x) /\n  prob (g -` {g w} \\<inter> space M) =\n  expectation (\\<lambda>x. f x * indicat_real (g -` {g w}) x) /\n  prob (g -` {g w})\n\ngoal (1 subgoal):\n 1. expl_cond_expect M g f w =\n    p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)", "have \"... = prob (g -` {g w}) * (p * f (pseudo_proj_True n w) +\n     (1 -p) * f (pseudo_proj_False n w)) / prob (g -` {g w})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g w}) x) /\n    prob (g -` {g w}) =\n    prob (g -` {g w}) *\n    (p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)) /\n    prob (g -` {g w})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g w}) x) /\n    prob (g -` {g w}) =\n    prob (g -` {g w}) *\n    (p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)) /\n    prob (g -` {g w})", "have \"expectation (\\<lambda>x. f x * indicator (g -` {g w}) x) = prob (g -` {g w}) * (p * f (pseudo_proj_True n w) +\n     (1 -p) * f (pseudo_proj_False n w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g w}) x) =\n    prob (g -` {g w}) *\n    (p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w))", "proof (rule borel_Suc_expectation)"], ["proof (state)\ngoal (5 subgoals):\n 1. f \\<in> borel_measurable (F (Suc n))\n 2. g \\<in> F n \\<rightarrow>\\<^sub>M ?N\n 3. set_discriminating n g ?N\n 4. g -` {g w} \\<in> sets (F n)\n 5. \\<forall>y z.\n       g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z", "show \"f \\<in> borel_measurable (F (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (F (Suc n))", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  g -` {g w} \\<in> sets (F n)\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (F (Suc n))", "by simp"], ["proof (state)\nthis:\n  f \\<in> borel_measurable (F (Suc n))\n\ngoal (4 subgoals):\n 1. g \\<in> F n \\<rightarrow>\\<^sub>M ?N\n 2. set_discriminating n g ?N\n 3. g -` {g w} \\<in> sets (F n)\n 4. \\<forall>y z.\n       g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z", "show \"g \\<in> F n \\<rightarrow>\\<^sub>M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> F n \\<rightarrow>\\<^sub>M N", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  g -` {g w} \\<in> sets (F n)\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. g \\<in> F n \\<rightarrow>\\<^sub>M N", "by simp"], ["proof (state)\nthis:\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n\ngoal (3 subgoals):\n 1. set_discriminating n g N\n 2. g -` {g w} \\<in> sets (F n)\n 3. \\<forall>y z.\n       g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z", "show \"set_discriminating n g N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_discriminating n g N", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  g -` {g w} \\<in> sets (F n)\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. set_discriminating n g N", "by simp"], ["proof (state)\nthis:\n  set_discriminating n g N\n\ngoal (2 subgoals):\n 1. g -` {g w} \\<in> sets (F n)\n 2. \\<forall>y z.\n       g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z", "show \"g -` {g w} \\<in> sets (F n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g -` {g w} \\<in> sets (F n)", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  g -` {g w} \\<in> sets (F n)\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. g -` {g w} \\<in> sets (F n)", "by simp"], ["proof (state)\nthis:\n  g -` {g w} \\<in> sets (F n)\n\ngoal (1 subgoal):\n 1. \\<forall>y z.\n       g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z", "show \"\\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y z.\n       g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z", "using assms(5)"], ["proof (prove)\nusing this:\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n\ngoal (1 subgoal):\n 1. \\<forall>y z.\n       g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z", "by blast"], ["proof (state)\nthis:\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  expectation (\\<lambda>x. f x * indicat_real (g -` {g w}) x) =\n  prob (g -` {g w}) *\n  (p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w))\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g w}) x) /\n    prob (g -` {g w}) =\n    prob (g -` {g w}) *\n    (p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)) /\n    prob (g -` {g w})", "thus ?thesis"], ["proof (prove)\nusing this:\n  expectation (\\<lambda>x. f x * indicat_real (g -` {g w}) x) =\n  prob (g -` {g w}) *\n  (p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w))\n\ngoal (1 subgoal):\n 1. expectation (\\<lambda>x. f x * indicat_real (g -` {g w}) x) /\n    prob (g -` {g w}) =\n    prob (g -` {g w}) *\n    (p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)) /\n    prob (g -` {g w})", "by simp"], ["proof (state)\nthis:\n  expectation (\\<lambda>x. f x * indicat_real (g -` {g w}) x) /\n  prob (g -` {g w}) =\n  prob (g -` {g w}) *\n  (p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)) /\n  prob (g -` {g w})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  expectation (\\<lambda>x. f x * indicat_real (g -` {g w}) x) /\n  prob (g -` {g w}) =\n  prob (g -` {g w}) *\n  (p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)) /\n  prob (g -` {g w})\n\ngoal (1 subgoal):\n 1. expl_cond_expect M g f w =\n    p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)", "also"], ["proof (state)\nthis:\n  expectation (\\<lambda>x. f x * indicat_real (g -` {g w}) x) /\n  prob (g -` {g w}) =\n  prob (g -` {g w}) *\n  (p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)) /\n  prob (g -` {g w})\n\ngoal (1 subgoal):\n 1. expl_cond_expect M g f w =\n    p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)", "have \"... = p * f (pseudo_proj_True n w) + (1 -p) * f (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob (g -` {g w}) *\n    (p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)) /\n    prob (g -` {g w}) =\n    p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)", "using nz"], ["proof (prove)\nusing this:\n  prob (g -` {g w}) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. prob (g -` {g w}) *\n    (p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)) /\n    prob (g -` {g w}) =\n    p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)", "by simp"], ["proof (state)\nthis:\n  prob (g -` {g w}) *\n  (p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)) /\n  prob (g -` {g w}) =\n  p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. expl_cond_expect M g f w =\n    p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)", "finally"], ["proof (chain)\npicking this:\n  expl_cond_expect M g f w =\n  p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)", "show ?thesis"], ["proof (prove)\nusing this:\n  expl_cond_expect M g f w =\n  p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)\n\ngoal (1 subgoal):\n 1. expl_cond_expect M g f w =\n    p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)", "."], ["proof (state)\nthis:\n  expl_cond_expect M g f w =\n  p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) f_borel_Suc_real_cond_exp:\n  assumes \"f\\<in> borel_measurable (F (Suc n))\"\n  and \"g\\<in> measurable (F n) N\"\n  and \"set_discriminating n g N\"\n  and \"\\<forall>w. g -` {g w} \\<in> sets (F n)\"\n  and \"\\<forall>r\\<in>range g \\<inter> space N. \\<exists>A\\<in>sets N. range g \\<inter> A = {r}\"\n  and \"\\<forall>y z. (g y = g z \\<and> snth y n = snth z n) \\<longrightarrow> f y = f z\"\n  and \"0 < p\"\nand \"p < 1\"\n  shows \"AE w in M. real_cond_exp M (fct_gen_subalgebra M N g) f w = p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE w in M. real_cond_exp M (fct_gen_subalgebra M N g) f w =\n               p * f (pseudo_proj_True n w) +\n               (1 - p) * f (pseudo_proj_False n w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. AE w in M. real_cond_exp M (fct_gen_subalgebra M N g) f w =\n               p * f (pseudo_proj_True n w) +\n               (1 - p) * f (pseudo_proj_False n w)", "have \"AE w in M. real_cond_exp M (fct_gen_subalgebra M N g) f w = expl_cond_expect M g f w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE w in M. real_cond_exp M (fct_gen_subalgebra M N g) f w =\n               expl_cond_expect M g f w", "proof (rule charact_cond_exp')"], ["proof (state)\ngoal (4 subgoals):\n 1. disc_fct g\n 2. integrable M f\n 3. random_variable N g\n 4. \\<forall>r\\<in>range g \\<inter> space N.\n       \\<exists>A\\<in>sets N. range g \\<inter> A = {r}", "show \"disc_fct g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc_fct g", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. disc_fct g", "have \"g = g \\<circ> (pseudo_proj_True n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g = g \\<circ> pseudo_proj_True n", "using nat_filtration_not_borel_info[of g n] assms natural_filtration"], ["proof (prove)\nusing this:\n  \\<lbrakk>g \\<in> nat_filtration n \\<rightarrow>\\<^sub>M ?N;\n   set_discriminating n g ?N\\<rbrakk>\n  \\<Longrightarrow> g \\<circ> pseudo_proj_True n = g\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  \\<forall>w. g -` {g w} \\<in> sets (F n)\n  \\<forall>r\\<in>range g \\<inter> space N.\n     \\<exists>A\\<in>sets N. range g \\<inter> A = {r}\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n  0 < p\n  p < 1\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. g = g \\<circ> pseudo_proj_True n", "by simp"], ["proof (state)\nthis:\n  g = g \\<circ> pseudo_proj_True n\n\ngoal (1 subgoal):\n 1. disc_fct g", "have \"disc_fct (pseudo_proj_True n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc_fct (pseudo_proj_True n)", "unfolding disc_fct_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. countable (range (pseudo_proj_True n))", "using pseudo_proj_True_finite_image"], ["proof (prove)\nusing this:\n  finite (range (pseudo_proj_True ?n))\n\ngoal (1 subgoal):\n 1. countable (range (pseudo_proj_True n))", "by (simp add: countable_finite)"], ["proof (state)\nthis:\n  disc_fct (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. disc_fct g", "hence \"disc_fct (g \\<circ> (pseudo_proj_True n))\""], ["proof (prove)\nusing this:\n  disc_fct (pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. disc_fct (g \\<circ> pseudo_proj_True n)", "unfolding disc_fct_def"], ["proof (prove)\nusing this:\n  countable (range (pseudo_proj_True n))\n\ngoal (1 subgoal):\n 1. countable (range (g \\<circ> pseudo_proj_True n))", "by (metis countable_image image_comp)"], ["proof (state)\nthis:\n  disc_fct (g \\<circ> pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. disc_fct g", "thus ?thesis"], ["proof (prove)\nusing this:\n  disc_fct (g \\<circ> pseudo_proj_True n)\n\ngoal (1 subgoal):\n 1. disc_fct g", "using \\<open>g = g \\<circ> (pseudo_proj_True n)\\<close>"], ["proof (prove)\nusing this:\n  disc_fct (g \\<circ> pseudo_proj_True n)\n  g = g \\<circ> pseudo_proj_True n\n\ngoal (1 subgoal):\n 1. disc_fct g", "by simp"], ["proof (state)\nthis:\n  disc_fct g\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  disc_fct g\n\ngoal (3 subgoals):\n 1. integrable M f\n 2. random_variable N g\n 3. \\<forall>r\\<in>range g \\<inter> space N.\n       \\<exists>A\\<in>sets N. range g \\<inter> A = {r}", "show \"integrable M f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M f", "using assms nat_filtration_borel_measurable_integrable natural_filtration"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  \\<forall>w. g -` {g w} \\<in> sets (F n)\n  \\<forall>r\\<in>range g \\<inter> space N.\n     \\<exists>A\\<in>sets N. range g \\<inter> A = {r}\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n  0 < p\n  p < 1\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  integrable M ?f\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. integrable M f", "by simp"], ["proof (state)\nthis:\n  integrable M f\n\ngoal (2 subgoals):\n 1. random_variable N g\n 2. \\<forall>r\\<in>range g \\<inter> space N.\n       \\<exists>A\\<in>sets N. range g \\<inter> A = {r}", "show \"random_variable N g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable N g", "using assms filtration_measurable natural_filtration nat_filtration_subalgebra"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  \\<forall>w. g -` {g w} \\<in> sets (F n)\n  \\<forall>r\\<in>range g \\<inter> space N.\n     \\<exists>A\\<in>sets N. range g \\<inter> A = {r}\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n  0 < p\n  p < 1\n  ?f \\<in> F ?t \\<rightarrow>\\<^sub>M ?N \\<Longrightarrow>\n  random_variable ?N ?f\n  F = nat_filtration\n  subalgebra M (nat_filtration ?n)\n\ngoal (1 subgoal):\n 1. random_variable N g", "using nat_discrete_filtration"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  \\<forall>w. g -` {g w} \\<in> sets (F n)\n  \\<forall>r\\<in>range g \\<inter> space N.\n     \\<exists>A\\<in>sets N. range g \\<inter> A = {r}\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n  0 < p\n  p < 1\n  ?f \\<in> F ?t \\<rightarrow>\\<^sub>M ?N \\<Longrightarrow>\n  random_variable ?N ?f\n  F = nat_filtration\n  subalgebra M (nat_filtration ?n)\n  Filtration.filtration M nat_filtration\n\ngoal (1 subgoal):\n 1. random_variable N g", "by blast"], ["proof (state)\nthis:\n  random_variable N g\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>range g \\<inter> space N.\n       \\<exists>A\\<in>sets N. range g \\<inter> A = {r}", "show \"\\<forall>r\\<in>range g \\<inter> space N. \\<exists>A\\<in>sets N. range g \\<inter> A = {r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>range g \\<inter> space N.\n       \\<exists>A\\<in>sets N. range g \\<inter> A = {r}", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  \\<forall>w. g -` {g w} \\<in> sets (F n)\n  \\<forall>r\\<in>range g \\<inter> space N.\n     \\<exists>A\\<in>sets N. range g \\<inter> A = {r}\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>range g \\<inter> space N.\n       \\<exists>A\\<in>sets N. range g \\<inter> A = {r}", "by simp"], ["proof (state)\nthis:\n  \\<forall>r\\<in>range g \\<inter> space N.\n     \\<exists>A\\<in>sets N. range g \\<inter> A = {r}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AE w in M. real_cond_exp M (fct_gen_subalgebra M N g) f w =\n             expl_cond_expect M g f w\n\ngoal (1 subgoal):\n 1. AE w in M. real_cond_exp M (fct_gen_subalgebra M N g) f w =\n               p * f (pseudo_proj_True n w) +\n               (1 - p) * f (pseudo_proj_False n w)", "moreover"], ["proof (state)\nthis:\n  AE w in M. real_cond_exp M (fct_gen_subalgebra M N g) f w =\n             expl_cond_expect M g f w\n\ngoal (1 subgoal):\n 1. AE w in M. real_cond_exp M (fct_gen_subalgebra M N g) f w =\n               p * f (pseudo_proj_True n w) +\n               (1 - p) * f (pseudo_proj_False n w)", "have \"\\<And>w. expl_cond_expect M g f w = p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w.\n       expl_cond_expect M g f w =\n       p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)", "using assms f_borel_Suc_expl_cond_expect"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  g \\<in> F n \\<rightarrow>\\<^sub>M N\n  set_discriminating n g N\n  \\<forall>w. g -` {g w} \\<in> sets (F n)\n  \\<forall>r\\<in>range g \\<inter> space N.\n     \\<exists>A\\<in>sets N. range g \\<inter> A = {r}\n  \\<forall>y z. g y = g z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\n  0 < p\n  p < 1\n  \\<lbrakk>?f \\<in> borel_measurable (F (Suc ?n));\n   ?g \\<in> F ?n \\<rightarrow>\\<^sub>M ?N; set_discriminating ?n ?g ?N;\n   ?g -` {?g ?w} \\<in> sets (F ?n);\n   \\<forall>y z.\n      ?g y = ?g z \\<and> y !! ?n = z !! ?n \\<longrightarrow> ?f y = ?f z;\n   0 < p; p < 1\\<rbrakk>\n  \\<Longrightarrow> expl_cond_expect M ?g ?f ?w =\n                    p * ?f (pseudo_proj_True ?n ?w) +\n                    (1 - p) * ?f (pseudo_proj_False ?n ?w)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       expl_cond_expect M g f w =\n       p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)", "by blast"], ["proof (state)\nthis:\n  expl_cond_expect M g f ?w1 =\n  p * f (pseudo_proj_True n ?w1) + (1 - p) * f (pseudo_proj_False n ?w1)\n\ngoal (1 subgoal):\n 1. AE w in M. real_cond_exp M (fct_gen_subalgebra M N g) f w =\n               p * f (pseudo_proj_True n w) +\n               (1 - p) * f (pseudo_proj_False n w)", "ultimately"], ["proof (chain)\npicking this:\n  AE w in M. real_cond_exp M (fct_gen_subalgebra M N g) f w =\n             expl_cond_expect M g f w\n  expl_cond_expect M g f ?w1 =\n  p * f (pseudo_proj_True n ?w1) + (1 - p) * f (pseudo_proj_False n ?w1)", "show ?thesis"], ["proof (prove)\nusing this:\n  AE w in M. real_cond_exp M (fct_gen_subalgebra M N g) f w =\n             expl_cond_expect M g f w\n  expl_cond_expect M g f ?w1 =\n  p * f (pseudo_proj_True n ?w1) + (1 - p) * f (pseudo_proj_False n ?w1)\n\ngoal (1 subgoal):\n 1. AE w in M. real_cond_exp M (fct_gen_subalgebra M N g) f w =\n               p * f (pseudo_proj_True n w) +\n               (1 - p) * f (pseudo_proj_False n w)", "by simp"], ["proof (state)\nthis:\n  AE w in M. real_cond_exp M (fct_gen_subalgebra M N g) f w =\n             p * f (pseudo_proj_True n w) +\n             (1 - p) * f (pseudo_proj_False n w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) f_borel_Suc_real_cond_exp_proj:\n  assumes \"f\\<in> borel_measurable (F (Suc n))\"\nand \"0 < p\"\nand \"p < 1\"\nshows \"AE w in M. real_cond_exp M (fct_gen_subalgebra M M (pseudo_proj_True n)) f w =\n  p * f (pseudo_proj_True n w) + (1 - p) * f (pseudo_proj_False n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE w in M. real_cond_exp M (fct_gen_subalgebra M M (pseudo_proj_True n))\n                f w =\n               p * f (pseudo_proj_True n w) +\n               (1 - p) * f (pseudo_proj_False n w)", "proof (rule f_borel_Suc_real_cond_exp)"], ["proof (state)\ngoal (8 subgoals):\n 1. f \\<in> borel_measurable (F (Suc n))\n 2. pseudo_proj_True n \\<in> F n \\<rightarrow>\\<^sub>M M\n 3. set_discriminating n (pseudo_proj_True n) M\n 4. \\<forall>w.\n       pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> sets (F n)\n 5. \\<forall>r\\<in>range (pseudo_proj_True n) \\<inter> space M.\n       \\<exists>A\\<in>events. range (pseudo_proj_True n) \\<inter> A = {r}\n 6. \\<forall>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       f y = f z\n 7. 0 < p\n 8. p < 1", "show \"f \\<in> borel_measurable (F (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (F (Suc n))", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (F (Suc n))", "by simp"], ["proof (state)\nthis:\n  f \\<in> borel_measurable (F (Suc n))\n\ngoal (7 subgoals):\n 1. pseudo_proj_True n \\<in> F n \\<rightarrow>\\<^sub>M M\n 2. set_discriminating n (pseudo_proj_True n) M\n 3. \\<forall>w.\n       pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> sets (F n)\n 4. \\<forall>r\\<in>range (pseudo_proj_True n) \\<inter> space M.\n       \\<exists>A\\<in>events. range (pseudo_proj_True n) \\<inter> A = {r}\n 5. \\<forall>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       f y = f z\n 6. 0 < p\n 7. p < 1", "show \"pseudo_proj_True n \\<in> F n \\<rightarrow>\\<^sub>M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n \\<in> F n \\<rightarrow>\\<^sub>M M", "by (simp add: nat_filtration_pseudo_proj_True_measurable natural_filtration)"], ["proof (state)\nthis:\n  pseudo_proj_True n \\<in> F n \\<rightarrow>\\<^sub>M M\n\ngoal (6 subgoals):\n 1. set_discriminating n (pseudo_proj_True n) M\n 2. \\<forall>w.\n       pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> sets (F n)\n 3. \\<forall>r\\<in>range (pseudo_proj_True n) \\<inter> space M.\n       \\<exists>A\\<in>events. range (pseudo_proj_True n) \\<inter> A = {r}\n 4. \\<forall>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       f y = f z\n 5. 0 < p\n 6. p < 1", "show \"\\<forall>w. pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> sets (F n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w.\n       pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> sets (F n)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w. pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> sets (F n)", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w. pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> sets (F n)", "show \"pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> sets (F n) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> sets (F n)", "by (simp add: nat_filtration_singleton natural_filtration pseudo_proj_True_proj)"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> sets (F n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w. pseudo_proj_True n -` {pseudo_proj_True n w} \\<in> sets (F n)\n\ngoal (5 subgoals):\n 1. set_discriminating n (pseudo_proj_True n) M\n 2. \\<forall>r\\<in>range (pseudo_proj_True n) \\<inter> space M.\n       \\<exists>A\\<in>events. range (pseudo_proj_True n) \\<inter> A = {r}\n 3. \\<forall>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       f y = f z\n 4. 0 < p\n 5. p < 1", "show \"\\<forall>r\\<in>range (pseudo_proj_True n) \\<inter> space M. \\<exists>A\\<in>events. range (pseudo_proj_True n) \\<inter> A = {r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>range (pseudo_proj_True n) \\<inter> space M.\n       \\<exists>A\\<in>events. range (pseudo_proj_True n) \\<inter> A = {r}", "proof (intro ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (pseudo_proj_True n) \\<inter> space M \\<Longrightarrow>\n       \\<exists>A\\<in>events. range (pseudo_proj_True n) \\<inter> A = {r}", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (pseudo_proj_True n) \\<inter> space M \\<Longrightarrow>\n       \\<exists>A\\<in>events. range (pseudo_proj_True n) \\<inter> A = {r}", "assume \"r \\<in> range (pseudo_proj_True n) \\<inter> space M\""], ["proof (state)\nthis:\n  r \\<in> range (pseudo_proj_True n) \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (pseudo_proj_True n) \\<inter> space M \\<Longrightarrow>\n       \\<exists>A\\<in>events. range (pseudo_proj_True n) \\<inter> A = {r}", "hence \"r\\<in> range (pseudo_proj_True n)\" and \"r\\<in> space M\""], ["proof (prove)\nusing this:\n  r \\<in> range (pseudo_proj_True n) \\<inter> space M\n\ngoal (1 subgoal):\n 1. r \\<in> range (pseudo_proj_True n) &&& r \\<in> space M", "by auto"], ["proof (state)\nthis:\n  r \\<in> range (pseudo_proj_True n)\n  r \\<in> space M\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (pseudo_proj_True n) \\<inter> space M \\<Longrightarrow>\n       \\<exists>A\\<in>events. range (pseudo_proj_True n) \\<inter> A = {r}", "hence \"pseudo_proj_True n r = r\""], ["proof (prove)\nusing this:\n  r \\<in> range (pseudo_proj_True n)\n  r \\<in> space M\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n r = r", "using pseudo_proj_True_proj"], ["proof (prove)\nusing this:\n  r \\<in> range (pseudo_proj_True n)\n  r \\<in> space M\n  pseudo_proj_True ?n (pseudo_proj_True ?n ?w) = pseudo_proj_True ?n ?w\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n r = r", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True n r = r\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (pseudo_proj_True n) \\<inter> space M \\<Longrightarrow>\n       \\<exists>A\\<in>events. range (pseudo_proj_True n) \\<inter> A = {r}", "hence \"(pseudo_proj_True n) -`{r} \\<inter> space M \\<in> sets M\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n r = r\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {r} \\<inter> space M \\<in> events", "using pseudo_proj_True_singleton bernoulli"], ["proof (prove)\nusing this:\n  pseudo_proj_True n r = r\n  ?w = pseudo_proj_True ?n ?w \\<Longrightarrow>\n  pseudo_proj_True ?n -` {?w} \\<inter> space (bernoulli_stream p)\n  \\<in> sets (bernoulli_stream p)\n  M = bernoulli_stream p\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n -` {r} \\<inter> space M \\<in> events", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {r} \\<inter> space M \\<in> events\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (pseudo_proj_True n) \\<inter> space M \\<Longrightarrow>\n       \\<exists>A\\<in>events. range (pseudo_proj_True n) \\<inter> A = {r}", "moreover"], ["proof (state)\nthis:\n  pseudo_proj_True n -` {r} \\<inter> space M \\<in> events\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (pseudo_proj_True n) \\<inter> space M \\<Longrightarrow>\n       \\<exists>A\\<in>events. range (pseudo_proj_True n) \\<inter> A = {r}", "have \"range (pseudo_proj_True n) \\<inter> ((pseudo_proj_True n) -`{r} \\<inter> space M) = {r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (pseudo_proj_True n) \\<inter>\n    (pseudo_proj_True n -` {r} \\<inter> space M) =\n    {r}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. range (pseudo_proj_True n) \\<inter>\n    (pseudo_proj_True n -` {r} \\<inter> space M)\n    \\<subseteq> {r}\n 2. {r}\n    \\<subseteq> range (pseudo_proj_True n) \\<inter>\n                (pseudo_proj_True n -` {r} \\<inter> space M)", "have \"r\\<in> range (pseudo_proj_True n) \\<inter> (pseudo_proj_True n -` {r} \\<inter> space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> range (pseudo_proj_True n) \\<inter>\n            (pseudo_proj_True n -` {r} \\<inter> space M)", "using \\<open>pseudo_proj_True n r = r\\<close> \\<open>r \\<in> range (pseudo_proj_True n)\\<close> \\<open>r \\<in> space M\\<close>"], ["proof (prove)\nusing this:\n  pseudo_proj_True n r = r\n  r \\<in> range (pseudo_proj_True n)\n  r \\<in> space M\n\ngoal (1 subgoal):\n 1. r \\<in> range (pseudo_proj_True n) \\<inter>\n            (pseudo_proj_True n -` {r} \\<inter> space M)", "by blast"], ["proof (state)\nthis:\n  r \\<in> range (pseudo_proj_True n) \\<inter>\n          (pseudo_proj_True n -` {r} \\<inter> space M)\n\ngoal (2 subgoals):\n 1. range (pseudo_proj_True n) \\<inter>\n    (pseudo_proj_True n -` {r} \\<inter> space M)\n    \\<subseteq> {r}\n 2. {r}\n    \\<subseteq> range (pseudo_proj_True n) \\<inter>\n                (pseudo_proj_True n -` {r} \\<inter> space M)", "thus \"{r} \\<subseteq> range (pseudo_proj_True n) \\<inter> (pseudo_proj_True n -` {r} \\<inter> space M)\""], ["proof (prove)\nusing this:\n  r \\<in> range (pseudo_proj_True n) \\<inter>\n          (pseudo_proj_True n -` {r} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. {r}\n    \\<subseteq> range (pseudo_proj_True n) \\<inter>\n                (pseudo_proj_True n -` {r} \\<inter> space M)", "by auto"], ["proof (state)\nthis:\n  {r}\n  \\<subseteq> range (pseudo_proj_True n) \\<inter>\n              (pseudo_proj_True n -` {r} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. range (pseudo_proj_True n) \\<inter>\n    (pseudo_proj_True n -` {r} \\<inter> space M)\n    \\<subseteq> {r}", "show \"range (pseudo_proj_True n) \\<inter> (pseudo_proj_True n -` {r} \\<inter> space M) \\<subseteq> {r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (pseudo_proj_True n) \\<inter>\n    (pseudo_proj_True n -` {r} \\<inter> space M)\n    \\<subseteq> {r}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<inter>\n               (pseudo_proj_True n -` {r} \\<inter>\n                space M) \\<Longrightarrow>\n       x \\<in> {r}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<inter>\n               (pseudo_proj_True n -` {r} \\<inter>\n                space M) \\<Longrightarrow>\n       x \\<in> {r}", "assume \"x \\<in> range (pseudo_proj_True n) \\<inter> (pseudo_proj_True n -` {r} \\<inter> space M)\""], ["proof (state)\nthis:\n  x \\<in> range (pseudo_proj_True n) \\<inter>\n          (pseudo_proj_True n -` {r} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<inter>\n               (pseudo_proj_True n -` {r} \\<inter>\n                space M) \\<Longrightarrow>\n       x \\<in> {r}", "hence \"x\\<in> range (pseudo_proj_True n)\" and \"x\\<in> (pseudo_proj_True n -` {r})\""], ["proof (prove)\nusing this:\n  x \\<in> range (pseudo_proj_True n) \\<inter>\n          (pseudo_proj_True n -` {r} \\<inter> space M)\n\ngoal (1 subgoal):\n 1. x \\<in> range (pseudo_proj_True n) &&& x \\<in> pseudo_proj_True n -` {r}", "by auto"], ["proof (state)\nthis:\n  x \\<in> range (pseudo_proj_True n)\n  x \\<in> pseudo_proj_True n -` {r}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<inter>\n               (pseudo_proj_True n -` {r} \\<inter>\n                space M) \\<Longrightarrow>\n       x \\<in> {r}", "have \"x = pseudo_proj_True n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = pseudo_proj_True n x", "using \\<open>x\\<in> range (pseudo_proj_True n)\\<close> pseudo_proj_True_proj"], ["proof (prove)\nusing this:\n  x \\<in> range (pseudo_proj_True n)\n  pseudo_proj_True ?n (pseudo_proj_True ?n ?w) = pseudo_proj_True ?n ?w\n\ngoal (1 subgoal):\n 1. x = pseudo_proj_True n x", "by auto"], ["proof (state)\nthis:\n  x = pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<inter>\n               (pseudo_proj_True n -` {r} \\<inter>\n                space M) \\<Longrightarrow>\n       x \\<in> {r}", "also"], ["proof (state)\nthis:\n  x = pseudo_proj_True n x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<inter>\n               (pseudo_proj_True n -` {r} \\<inter>\n                space M) \\<Longrightarrow>\n       x \\<in> {r}", "have \"... = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True n x = r", "using \\<open>x\\<in> (pseudo_proj_True n -` {r})\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> pseudo_proj_True n -` {r}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n x = r", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True n x = r\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<inter>\n               (pseudo_proj_True n -` {r} \\<inter>\n                space M) \\<Longrightarrow>\n       x \\<in> {r}", "finally"], ["proof (chain)\npicking this:\n  x = r", "have \"x = r\""], ["proof (prove)\nusing this:\n  x = r\n\ngoal (1 subgoal):\n 1. x = r", "."], ["proof (state)\nthis:\n  x = r\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range (pseudo_proj_True n) \\<inter>\n               (pseudo_proj_True n -` {r} \\<inter>\n                space M) \\<Longrightarrow>\n       x \\<in> {r}", "thus \"x\\<in> {r}\""], ["proof (prove)\nusing this:\n  x = r\n\ngoal (1 subgoal):\n 1. x \\<in> {r}", "by simp"], ["proof (state)\nthis:\n  x \\<in> {r}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  range (pseudo_proj_True n) \\<inter>\n  (pseudo_proj_True n -` {r} \\<inter> space M)\n  \\<subseteq> {r}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  range (pseudo_proj_True n) \\<inter>\n  (pseudo_proj_True n -` {r} \\<inter> space M) =\n  {r}\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> range (pseudo_proj_True n) \\<inter> space M \\<Longrightarrow>\n       \\<exists>A\\<in>events. range (pseudo_proj_True n) \\<inter> A = {r}", "ultimately"], ["proof (chain)\npicking this:\n  pseudo_proj_True n -` {r} \\<inter> space M \\<in> events\n  range (pseudo_proj_True n) \\<inter>\n  (pseudo_proj_True n -` {r} \\<inter> space M) =\n  {r}", "show \"\\<exists>A\\<in>events. range (pseudo_proj_True n) \\<inter> A = {r}\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n -` {r} \\<inter> space M \\<in> events\n  range (pseudo_proj_True n) \\<inter>\n  (pseudo_proj_True n -` {r} \\<inter> space M) =\n  {r}\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>events. range (pseudo_proj_True n) \\<inter> A = {r}", "by auto"], ["proof (state)\nthis:\n  \\<exists>A\\<in>events. range (pseudo_proj_True n) \\<inter> A = {r}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>r\\<in>range (pseudo_proj_True n) \\<inter> space M.\n     \\<exists>A\\<in>events. range (pseudo_proj_True n) \\<inter> A = {r}\n\ngoal (4 subgoals):\n 1. set_discriminating n (pseudo_proj_True n) M\n 2. \\<forall>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       f y = f z\n 3. 0 < p\n 4. p < 1", "show \"\\<forall>y z. pseudo_proj_True n y = pseudo_proj_True n z \\<and> y !! n = z !! n \\<longrightarrow> f y = f z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<longrightarrow>\n       f y = f z", "proof (intro allI impI conjI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       f y = f z", "fix y z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       f y = f z", "assume \"pseudo_proj_True n y = pseudo_proj_True n z \\<and> y !! n = z !! n\""], ["proof (state)\nthis:\n  pseudo_proj_True n y = pseudo_proj_True n z \\<and> y !! n = z !! n\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       f y = f z", "hence \"pseudo_proj_True n y = pseudo_proj_True n z\" and \"snth y n = snth z n\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n y = pseudo_proj_True n z \\<and> y !! n = z !! n\n\ngoal (1 subgoal):\n 1. pseudo_proj_True n y = pseudo_proj_True n z &&& y !! n = z !! n", "by auto"], ["proof (state)\nthis:\n  pseudo_proj_True n y = pseudo_proj_True n z\n  y !! n = z !! n\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       f y = f z", "hence \"pseudo_proj_True (Suc n) y = pseudo_proj_True (Suc n) z\""], ["proof (prove)\nusing this:\n  pseudo_proj_True n y = pseudo_proj_True n z\n  y !! n = z !! n\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc n) y = pseudo_proj_True (Suc n) z", "unfolding pseudo_proj_True_def"], ["proof (prove)\nusing this:\n  stake n y @- sconst True = stake n z @- sconst True\n  y !! n = z !! n\n\ngoal (1 subgoal):\n 1. stake (Suc n) y @- sconst True = stake (Suc n) z @- sconst True", "by (metis (full_types) \\<open>pseudo_proj_True n y = pseudo_proj_True n z\\<close> pseudo_proj_True_same_img stake_Suc)"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc n) y = pseudo_proj_True (Suc n) z\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n       y !! n = z !! n \\<Longrightarrow>\n       f y = f z", "thus \"f y = f z\""], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) y = pseudo_proj_True (Suc n) z\n\ngoal (1 subgoal):\n 1. f y = f z", "using nat_filtration_info assms natural_filtration"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc n) y = pseudo_proj_True (Suc n) z\n  ?f \\<in> borel_measurable (nat_filtration ?n) \\<Longrightarrow>\n  ?f \\<circ> pseudo_proj_True ?n = ?f\n  f \\<in> borel_measurable (F (Suc n))\n  0 < p\n  p < 1\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. f y = f z", "by (metis comp_apply)"], ["proof (state)\nthis:\n  f y = f z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>y z.\n     pseudo_proj_True n y = pseudo_proj_True n z \\<and>\n     y !! n = z !! n \\<longrightarrow>\n     f y = f z\n\ngoal (3 subgoals):\n 1. set_discriminating n (pseudo_proj_True n) M\n 2. 0 < p\n 3. p < 1", "show \"set_discriminating n (pseudo_proj_True n) M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_discriminating n (pseudo_proj_True n) M", "unfolding set_discriminating_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w.\n       pseudo_proj_True n w \\<noteq>\n       pseudo_proj_True n (pseudo_proj_True n w) \\<longrightarrow>\n       (\\<exists>A\\<in>events.\n           (pseudo_proj_True n w \\<in> A) =\n           (pseudo_proj_True n (pseudo_proj_True n w) \\<notin> A))", "using pseudo_proj_True_proj"], ["proof (prove)\nusing this:\n  pseudo_proj_True ?n (pseudo_proj_True ?n ?w) = pseudo_proj_True ?n ?w\n\ngoal (1 subgoal):\n 1. \\<forall>w.\n       pseudo_proj_True n w \\<noteq>\n       pseudo_proj_True n (pseudo_proj_True n w) \\<longrightarrow>\n       (\\<exists>A\\<in>events.\n           (pseudo_proj_True n w \\<in> A) =\n           (pseudo_proj_True n (pseudo_proj_True n w) \\<notin> A))", "by simp"], ["proof (state)\nthis:\n  set_discriminating n (pseudo_proj_True n) M\n\ngoal (2 subgoals):\n 1. 0 < p\n 2. p < 1", "show \"0 < p\" and \"p < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < p &&& p < 1", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (F (Suc n))\n  0 < p\n  p < 1\n\ngoal (1 subgoal):\n 1. 0 < p &&& p < 1", "by auto"], ["proof (state)\nthis:\n  0 < p\n  p < 1\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection  \\<open>Images of stochastic processes by prefixes of streams\\<close>"], ["", "text \\<open>We define a function that, given a stream of coin tosses and a stochastic process, returns a stream of the values\nof the stochastic process up to a given time. This function will be used to characterize the smallest filtration that,\nat any time n, makes each random variable of a given stochastic process measurable up to time n.\\<close>"], ["", "subsubsection \\<open>Definitions\\<close>"], ["", "primrec smap_stoch_proc where\n  \"smap_stoch_proc 0 f k w = []\"\n| \"smap_stoch_proc (Suc n) f k w = (f k w) # (smap_stoch_proc n f (Suc k) w)\""], ["", "lemma smap_stoch_proc_length:\n  shows \"length (smap_stoch_proc n f k w) = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (smap_stoch_proc n f k w) = n", "by (induction n arbitrary:k) auto"], ["", "lemma smap_stoch_proc_nth:\n  shows \"Suc p \\<le> Suc n \\<Longrightarrow> nth (smap_stoch_proc (Suc n) f k w) p = f (k+p) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc p \\<le> Suc n \\<Longrightarrow>\n    smap_stoch_proc (Suc n) f k w ! p = f (k + p) w", "proof (induction n arbitrary:p k)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p k.\n       Suc p \\<le> Suc 0 \\<Longrightarrow>\n       smap_stoch_proc (Suc 0) f k w ! p = f (k + p) w\n 2. \\<And>n p k.\n       \\<lbrakk>\\<And>p k.\n                   Suc p \\<le> Suc n \\<Longrightarrow>\n                   smap_stoch_proc (Suc n) f k w ! p = f (k + p) w;\n        Suc p \\<le> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> smap_stoch_proc (Suc (Suc n)) f k w ! p =\n                         f (k + p) w", "case 0"], ["proof (state)\nthis:\n  Suc p \\<le> Suc 0\n\ngoal (2 subgoals):\n 1. \\<And>p k.\n       Suc p \\<le> Suc 0 \\<Longrightarrow>\n       smap_stoch_proc (Suc 0) f k w ! p = f (k + p) w\n 2. \\<And>n p k.\n       \\<lbrakk>\\<And>p k.\n                   Suc p \\<le> Suc n \\<Longrightarrow>\n                   smap_stoch_proc (Suc n) f k w ! p = f (k + p) w;\n        Suc p \\<le> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> smap_stoch_proc (Suc (Suc n)) f k w ! p =\n                         f (k + p) w", "hence \"p = 0\""], ["proof (prove)\nusing this:\n  Suc p \\<le> Suc 0\n\ngoal (1 subgoal):\n 1. p = 0", "by simp"], ["proof (state)\nthis:\n  p = 0\n\ngoal (2 subgoals):\n 1. \\<And>p k.\n       Suc p \\<le> Suc 0 \\<Longrightarrow>\n       smap_stoch_proc (Suc 0) f k w ! p = f (k + p) w\n 2. \\<And>n p k.\n       \\<lbrakk>\\<And>p k.\n                   Suc p \\<le> Suc n \\<Longrightarrow>\n                   smap_stoch_proc (Suc n) f k w ! p = f (k + p) w;\n        Suc p \\<le> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> smap_stoch_proc (Suc (Suc n)) f k w ! p =\n                         f (k + p) w", "hence \"(smap_stoch_proc (Suc 0) f k w) ! p = ((f k w) # (smap_stoch_proc 0 f (Suc k) w))!0\""], ["proof (prove)\nusing this:\n  p = 0\n\ngoal (1 subgoal):\n 1. smap_stoch_proc (Suc 0) f k w ! p =\n    (f k w # smap_stoch_proc 0 f (Suc k) w) ! 0", "by simp"], ["proof (state)\nthis:\n  smap_stoch_proc (Suc 0) f k w ! p =\n  (f k w # smap_stoch_proc 0 f (Suc k) w) ! 0\n\ngoal (2 subgoals):\n 1. \\<And>p k.\n       Suc p \\<le> Suc 0 \\<Longrightarrow>\n       smap_stoch_proc (Suc 0) f k w ! p = f (k + p) w\n 2. \\<And>n p k.\n       \\<lbrakk>\\<And>p k.\n                   Suc p \\<le> Suc n \\<Longrightarrow>\n                   smap_stoch_proc (Suc n) f k w ! p = f (k + p) w;\n        Suc p \\<le> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> smap_stoch_proc (Suc (Suc n)) f k w ! p =\n                         f (k + p) w", "also"], ["proof (state)\nthis:\n  smap_stoch_proc (Suc 0) f k w ! p =\n  (f k w # smap_stoch_proc 0 f (Suc k) w) ! 0\n\ngoal (2 subgoals):\n 1. \\<And>p k.\n       Suc p \\<le> Suc 0 \\<Longrightarrow>\n       smap_stoch_proc (Suc 0) f k w ! p = f (k + p) w\n 2. \\<And>n p k.\n       \\<lbrakk>\\<And>p k.\n                   Suc p \\<le> Suc n \\<Longrightarrow>\n                   smap_stoch_proc (Suc n) f k w ! p = f (k + p) w;\n        Suc p \\<le> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> smap_stoch_proc (Suc (Suc n)) f k w ! p =\n                         f (k + p) w", "have \"... = f (k+p) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f k w # smap_stoch_proc 0 f (Suc k) w) ! 0 = f (k + p) w", "using \\<open>p=0\\<close>"], ["proof (prove)\nusing this:\n  p = 0\n\ngoal (1 subgoal):\n 1. (f k w # smap_stoch_proc 0 f (Suc k) w) ! 0 = f (k + p) w", "by simp"], ["proof (state)\nthis:\n  (f k w # smap_stoch_proc 0 f (Suc k) w) ! 0 = f (k + p) w\n\ngoal (2 subgoals):\n 1. \\<And>p k.\n       Suc p \\<le> Suc 0 \\<Longrightarrow>\n       smap_stoch_proc (Suc 0) f k w ! p = f (k + p) w\n 2. \\<And>n p k.\n       \\<lbrakk>\\<And>p k.\n                   Suc p \\<le> Suc n \\<Longrightarrow>\n                   smap_stoch_proc (Suc n) f k w ! p = f (k + p) w;\n        Suc p \\<le> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> smap_stoch_proc (Suc (Suc n)) f k w ! p =\n                         f (k + p) w", "finally"], ["proof (chain)\npicking this:\n  smap_stoch_proc (Suc 0) f k w ! p = f (k + p) w", "show ?case"], ["proof (prove)\nusing this:\n  smap_stoch_proc (Suc 0) f k w ! p = f (k + p) w\n\ngoal (1 subgoal):\n 1. smap_stoch_proc (Suc 0) f k w ! p = f (k + p) w", "."], ["proof (state)\nthis:\n  smap_stoch_proc (Suc 0) f k w ! p = f (k + p) w\n\ngoal (1 subgoal):\n 1. \\<And>n p k.\n       \\<lbrakk>\\<And>p k.\n                   Suc p \\<le> Suc n \\<Longrightarrow>\n                   smap_stoch_proc (Suc n) f k w ! p = f (k + p) w;\n        Suc p \\<le> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> smap_stoch_proc (Suc (Suc n)) f k w ! p =\n                         f (k + p) w", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n p k.\n       \\<lbrakk>\\<And>p k.\n                   Suc p \\<le> Suc n \\<Longrightarrow>\n                   smap_stoch_proc (Suc n) f k w ! p = f (k + p) w;\n        Suc p \\<le> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> smap_stoch_proc (Suc (Suc n)) f k w ! p =\n                         f (k + p) w", "case (Suc n)"], ["proof (state)\nthis:\n  Suc ?p \\<le> Suc n \\<Longrightarrow>\n  smap_stoch_proc (Suc n) f ?k w ! ?p = f (?k + ?p) w\n  Suc p \\<le> Suc (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>n p k.\n       \\<lbrakk>\\<And>p k.\n                   Suc p \\<le> Suc n \\<Longrightarrow>\n                   smap_stoch_proc (Suc n) f k w ! p = f (k + p) w;\n        Suc p \\<le> Suc (Suc n)\\<rbrakk>\n       \\<Longrightarrow> smap_stoch_proc (Suc (Suc n)) f k w ! p =\n                         f (k + p) w", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w", "proof (cases \"\\<exists>m. p = Suc m\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>m. p = Suc m \\<Longrightarrow>\n    smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w\n 2. \\<nexists>m. p = Suc m \\<Longrightarrow>\n    smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w", "case True"], ["proof (state)\nthis:\n  \\<exists>m. p = Suc m\n\ngoal (2 subgoals):\n 1. \\<exists>m. p = Suc m \\<Longrightarrow>\n    smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w\n 2. \\<nexists>m. p = Suc m \\<Longrightarrow>\n    smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w", "from this"], ["proof (chain)\npicking this:\n  \\<exists>m. p = Suc m", "obtain m where \"p = Suc m\""], ["proof (prove)\nusing this:\n  \\<exists>m. p = Suc m\n\ngoal (1 subgoal):\n 1. (\\<And>m. p = Suc m \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  p = Suc m\n\ngoal (2 subgoals):\n 1. \\<exists>m. p = Suc m \\<Longrightarrow>\n    smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w\n 2. \\<nexists>m. p = Suc m \\<Longrightarrow>\n    smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w", "hence \"smap_stoch_proc (Suc (Suc n)) f k w ! p = (smap_stoch_proc (Suc n) f (Suc k) w) ! m\""], ["proof (prove)\nusing this:\n  p = Suc m\n\ngoal (1 subgoal):\n 1. smap_stoch_proc (Suc (Suc n)) f k w ! p =\n    smap_stoch_proc (Suc n) f (Suc k) w ! m", "by simp"], ["proof (state)\nthis:\n  smap_stoch_proc (Suc (Suc n)) f k w ! p =\n  smap_stoch_proc (Suc n) f (Suc k) w ! m\n\ngoal (2 subgoals):\n 1. \\<exists>m. p = Suc m \\<Longrightarrow>\n    smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w\n 2. \\<nexists>m. p = Suc m \\<Longrightarrow>\n    smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w", "also"], ["proof (state)\nthis:\n  smap_stoch_proc (Suc (Suc n)) f k w ! p =\n  smap_stoch_proc (Suc n) f (Suc k) w ! m\n\ngoal (2 subgoals):\n 1. \\<exists>m. p = Suc m \\<Longrightarrow>\n    smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w\n 2. \\<nexists>m. p = Suc m \\<Longrightarrow>\n    smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w", "have \"... = f ((Suc k) + m) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smap_stoch_proc (Suc n) f (Suc k) w ! m = f (Suc k + m) w", "using Suc(1)[of m] Suc.prems \\<open>p = Suc m\\<close>"], ["proof (prove)\nusing this:\n  Suc m \\<le> Suc n \\<Longrightarrow>\n  smap_stoch_proc (Suc n) f ?k w ! m = f (?k + m) w\n  Suc p \\<le> Suc (Suc n)\n  p = Suc m\n\ngoal (1 subgoal):\n 1. smap_stoch_proc (Suc n) f (Suc k) w ! m = f (Suc k + m) w", "by blast"], ["proof (state)\nthis:\n  smap_stoch_proc (Suc n) f (Suc k) w ! m = f (Suc k + m) w\n\ngoal (2 subgoals):\n 1. \\<exists>m. p = Suc m \\<Longrightarrow>\n    smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w\n 2. \\<nexists>m. p = Suc m \\<Longrightarrow>\n    smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w", "also"], ["proof (state)\nthis:\n  smap_stoch_proc (Suc n) f (Suc k) w ! m = f (Suc k + m) w\n\ngoal (2 subgoals):\n 1. \\<exists>m. p = Suc m \\<Longrightarrow>\n    smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w\n 2. \\<nexists>m. p = Suc m \\<Longrightarrow>\n    smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w", "have \"... = f (k + (Suc m)) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (Suc k + m) w = f (k + Suc m) w", "by simp"], ["proof (state)\nthis:\n  f (Suc k + m) w = f (k + Suc m) w\n\ngoal (2 subgoals):\n 1. \\<exists>m. p = Suc m \\<Longrightarrow>\n    smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w\n 2. \\<nexists>m. p = Suc m \\<Longrightarrow>\n    smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w", "finally"], ["proof (chain)\npicking this:\n  smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + Suc m) w", "show \"smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w\""], ["proof (prove)\nusing this:\n  smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + Suc m) w\n\ngoal (1 subgoal):\n 1. smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w", "using \\<open>p = Suc m\\<close>"], ["proof (prove)\nusing this:\n  smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + Suc m) w\n  p = Suc m\n\ngoal (1 subgoal):\n 1. smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w", "by simp"], ["proof (state)\nthis:\n  smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w\n\ngoal (1 subgoal):\n 1. \\<nexists>m. p = Suc m \\<Longrightarrow>\n    smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>m. p = Suc m \\<Longrightarrow>\n    smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w", "case False"], ["proof (state)\nthis:\n  \\<nexists>m. p = Suc m\n\ngoal (1 subgoal):\n 1. \\<nexists>m. p = Suc m \\<Longrightarrow>\n    smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w", "hence \"p = 0\""], ["proof (prove)\nusing this:\n  \\<nexists>m. p = Suc m\n\ngoal (1 subgoal):\n 1. p = 0", "using less_Suc_eq_0_disj"], ["proof (prove)\nusing this:\n  \\<nexists>m. p = Suc m\n  (?m < Suc ?n) = (?m = 0 \\<or> (\\<exists>j. ?m = Suc j \\<and> j < ?n))\n\ngoal (1 subgoal):\n 1. p = 0", "by blast"], ["proof (state)\nthis:\n  p = 0\n\ngoal (1 subgoal):\n 1. \\<nexists>m. p = Suc m \\<Longrightarrow>\n    smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w", "thus \"smap_stoch_proc (Suc (Suc n)) f k w ! p =  f (k+p) w\""], ["proof (prove)\nusing this:\n  p = 0\n\ngoal (1 subgoal):\n 1. smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w", "by simp"], ["proof (state)\nthis:\n  smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  smap_stoch_proc (Suc (Suc n)) f k w ! p = f (k + p) w\n\ngoal:\nNo subgoals!", "qed"], ["", "definition proj_stoch_proc where\n\"proj_stoch_proc f n = (\\<lambda>w. shift (smap_stoch_proc n f 0 w) (sconst (f n w)))\""], ["", "lemma proj_stoch_proc_component:\n  shows \"k < n \\<Longrightarrow> (snth (proj_stoch_proc f n w) k) = f k w\"\n    and \"n \\<le> k \\<Longrightarrow> (snth (proj_stoch_proc f n w) k) = f n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (k < n \\<Longrightarrow> proj_stoch_proc f n w !! k = f k w) &&&\n    (n \\<le> k \\<Longrightarrow> proj_stoch_proc f n w !! k = f n w)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. k < n \\<Longrightarrow> proj_stoch_proc f n w !! k = f k w\n 2. n \\<le> k \\<Longrightarrow> proj_stoch_proc f n w !! k = f n w", "show \"k < n \\<Longrightarrow> proj_stoch_proc f n w !! k = f k w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k < n \\<Longrightarrow> proj_stoch_proc f n w !! k = f k w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k < n \\<Longrightarrow> proj_stoch_proc f n w !! k = f k w", "assume \"k < n\""], ["proof (state)\nthis:\n  k < n\n\ngoal (1 subgoal):\n 1. k < n \\<Longrightarrow> proj_stoch_proc f n w !! k = f k w", "hence \"\\<exists>m. n = Suc m\""], ["proof (prove)\nusing this:\n  k < n\n\ngoal (1 subgoal):\n 1. \\<exists>m. n = Suc m", "using less_imp_Suc_add"], ["proof (prove)\nusing this:\n  k < n\n  ?m < ?n \\<Longrightarrow> \\<exists>k. ?n = Suc (?m + k)\n\ngoal (1 subgoal):\n 1. \\<exists>m. n = Suc m", "by blast"], ["proof (state)\nthis:\n  \\<exists>m. n = Suc m\n\ngoal (1 subgoal):\n 1. k < n \\<Longrightarrow> proj_stoch_proc f n w !! k = f k w", "from this"], ["proof (chain)\npicking this:\n  \\<exists>m. n = Suc m", "obtain m where \"n = Suc m\""], ["proof (prove)\nusing this:\n  \\<exists>m. n = Suc m\n\ngoal (1 subgoal):\n 1. (\\<And>m. n = Suc m \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  n = Suc m\n\ngoal (1 subgoal):\n 1. k < n \\<Longrightarrow> proj_stoch_proc f n w !! k = f k w", "have \"proj_stoch_proc f n w !! k = (smap_stoch_proc n f 0 w) ! k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc f n w !! k = smap_stoch_proc n f 0 w ! k", "unfolding proj_stoch_proc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (smap_stoch_proc n f 0 w @- sconst (f n w)) !! k =\n    smap_stoch_proc n f 0 w ! k", "using \\<open>k<n\\<close>"], ["proof (prove)\nusing this:\n  k < n\n\ngoal (1 subgoal):\n 1. (smap_stoch_proc n f 0 w @- sconst (f n w)) !! k =\n    smap_stoch_proc n f 0 w ! k", "by (simp add: smap_stoch_proc_length)"], ["proof (state)\nthis:\n  proj_stoch_proc f n w !! k = smap_stoch_proc n f 0 w ! k\n\ngoal (1 subgoal):\n 1. k < n \\<Longrightarrow> proj_stoch_proc f n w !! k = f k w", "also"], ["proof (state)\nthis:\n  proj_stoch_proc f n w !! k = smap_stoch_proc n f 0 w ! k\n\ngoal (1 subgoal):\n 1. k < n \\<Longrightarrow> proj_stoch_proc f n w !! k = f k w", "have \"... = f k w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smap_stoch_proc n f 0 w ! k = f k w", "using \\<open>n = Suc m\\<close> \\<open>k < n\\<close> smap_stoch_proc_nth"], ["proof (prove)\nusing this:\n  n = Suc m\n  k < n\n  Suc ?p \\<le> Suc ?n \\<Longrightarrow>\n  smap_stoch_proc (Suc ?n) ?f ?k ?w ! ?p = ?f (?k + ?p) ?w\n\ngoal (1 subgoal):\n 1. smap_stoch_proc n f 0 w ! k = f k w", "by (metis Suc_leI add.left_neutral)"], ["proof (state)\nthis:\n  smap_stoch_proc n f 0 w ! k = f k w\n\ngoal (1 subgoal):\n 1. k < n \\<Longrightarrow> proj_stoch_proc f n w !! k = f k w", "finally"], ["proof (chain)\npicking this:\n  proj_stoch_proc f n w !! k = f k w", "show ?thesis"], ["proof (prove)\nusing this:\n  proj_stoch_proc f n w !! k = f k w\n\ngoal (1 subgoal):\n 1. proj_stoch_proc f n w !! k = f k w", "."], ["proof (state)\nthis:\n  proj_stoch_proc f n w !! k = f k w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  k < n \\<Longrightarrow> proj_stoch_proc f n w !! k = f k w\n\ngoal (1 subgoal):\n 1. n \\<le> k \\<Longrightarrow> proj_stoch_proc f n w !! k = f n w", "show \"n \\<le> k \\<Longrightarrow> (snth (proj_stoch_proc f n w) k) = f n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> k \\<Longrightarrow> proj_stoch_proc f n w !! k = f n w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<le> k \\<Longrightarrow> proj_stoch_proc f n w !! k = f n w", "assume \"n \\<le> k\""], ["proof (state)\nthis:\n  n \\<le> k\n\ngoal (1 subgoal):\n 1. n \\<le> k \\<Longrightarrow> proj_stoch_proc f n w !! k = f n w", "hence \"proj_stoch_proc f n w !! k = (sconst (f n w)) !! (k - n)\""], ["proof (prove)\nusing this:\n  n \\<le> k\n\ngoal (1 subgoal):\n 1. proj_stoch_proc f n w !! k = sconst (f n w) !! (k - n)", "by (simp add: proj_stoch_proc_def smap_stoch_proc_length)"], ["proof (state)\nthis:\n  proj_stoch_proc f n w !! k = sconst (f n w) !! (k - n)\n\ngoal (1 subgoal):\n 1. n \\<le> k \\<Longrightarrow> proj_stoch_proc f n w !! k = f n w", "also"], ["proof (state)\nthis:\n  proj_stoch_proc f n w !! k = sconst (f n w) !! (k - n)\n\ngoal (1 subgoal):\n 1. n \\<le> k \\<Longrightarrow> proj_stoch_proc f n w !! k = f n w", "have \"... = f n w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sconst (f n w) !! (k - n) = f n w", "by simp"], ["proof (state)\nthis:\n  sconst (f n w) !! (k - n) = f n w\n\ngoal (1 subgoal):\n 1. n \\<le> k \\<Longrightarrow> proj_stoch_proc f n w !! k = f n w", "finally"], ["proof (chain)\npicking this:\n  proj_stoch_proc f n w !! k = f n w", "show ?thesis"], ["proof (prove)\nusing this:\n  proj_stoch_proc f n w !! k = f n w\n\ngoal (1 subgoal):\n 1. proj_stoch_proc f n w !! k = f n w", "."], ["proof (state)\nthis:\n  proj_stoch_proc f n w !! k = f n w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  n \\<le> k \\<Longrightarrow> proj_stoch_proc f n w !! k = f n w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_stoch_proc_component':\n  assumes \"k \\<le> n\"\n  shows \"f k x = snth (proj_stoch_proc f n x) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f k x = proj_stoch_proc f n x !! k", "proof (cases \"k < n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k < n \\<Longrightarrow> f k x = proj_stoch_proc f n x !! k\n 2. \\<not> k < n \\<Longrightarrow> f k x = proj_stoch_proc f n x !! k", "case True"], ["proof (state)\nthis:\n  k < n\n\ngoal (2 subgoals):\n 1. k < n \\<Longrightarrow> f k x = proj_stoch_proc f n x !! k\n 2. \\<not> k < n \\<Longrightarrow> f k x = proj_stoch_proc f n x !! k", "thus ?thesis"], ["proof (prove)\nusing this:\n  k < n\n\ngoal (1 subgoal):\n 1. f k x = proj_stoch_proc f n x !! k", "using proj_stoch_proc_component[of k n f x] assms"], ["proof (prove)\nusing this:\n  k < n\n  k < n \\<Longrightarrow> proj_stoch_proc f n x !! k = f k x\n  k \\<le> n \\<Longrightarrow> proj_stoch_proc f k x !! n = f k x\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. f k x = proj_stoch_proc f n x !! k", "by simp"], ["proof (state)\nthis:\n  f k x = proj_stoch_proc f n x !! k\n\ngoal (1 subgoal):\n 1. \\<not> k < n \\<Longrightarrow> f k x = proj_stoch_proc f n x !! k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> k < n \\<Longrightarrow> f k x = proj_stoch_proc f n x !! k", "case False"], ["proof (state)\nthis:\n  \\<not> k < n\n\ngoal (1 subgoal):\n 1. \\<not> k < n \\<Longrightarrow> f k x = proj_stoch_proc f n x !! k", "hence \"k = n\""], ["proof (prove)\nusing this:\n  \\<not> k < n\n\ngoal (1 subgoal):\n 1. k = n", "using assms"], ["proof (prove)\nusing this:\n  \\<not> k < n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. k = n", "by simp"], ["proof (state)\nthis:\n  k = n\n\ngoal (1 subgoal):\n 1. \\<not> k < n \\<Longrightarrow> f k x = proj_stoch_proc f n x !! k", "thus ?thesis"], ["proof (prove)\nusing this:\n  k = n\n\ngoal (1 subgoal):\n 1. f k x = proj_stoch_proc f n x !! k", "using proj_stoch_proc_component[of k n f x] assms"], ["proof (prove)\nusing this:\n  k = n\n  k < n \\<Longrightarrow> proj_stoch_proc f n x !! k = f k x\n  k \\<le> n \\<Longrightarrow> proj_stoch_proc f k x !! n = f k x\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. f k x = proj_stoch_proc f n x !! k", "by simp"], ["proof (state)\nthis:\n  f k x = proj_stoch_proc f n x !! k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_stoch_proc_eq_snth:\n  assumes \"proj_stoch_proc f n x = proj_stoch_proc f n y\"\nand \"k \\<le> n\"\nshows \"f k x = f k y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f k x = f k y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f k x = f k y", "have \"f k x = snth (proj_stoch_proc f n x) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f k x = proj_stoch_proc f n x !! k", "using assms proj_stoch_proc_component'[of k n f]"], ["proof (prove)\nusing this:\n  proj_stoch_proc f n x = proj_stoch_proc f n y\n  k \\<le> n\n  k \\<le> n \\<Longrightarrow> f k ?x = proj_stoch_proc f n ?x !! k\n\ngoal (1 subgoal):\n 1. f k x = proj_stoch_proc f n x !! k", "by simp"], ["proof (state)\nthis:\n  f k x = proj_stoch_proc f n x !! k\n\ngoal (1 subgoal):\n 1. f k x = f k y", "also"], ["proof (state)\nthis:\n  f k x = proj_stoch_proc f n x !! k\n\ngoal (1 subgoal):\n 1. f k x = f k y", "have \"... = snth (proj_stoch_proc f n y) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc f n x !! k = proj_stoch_proc f n y !! k", "using assms"], ["proof (prove)\nusing this:\n  proj_stoch_proc f n x = proj_stoch_proc f n y\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. proj_stoch_proc f n x !! k = proj_stoch_proc f n y !! k", "by simp"], ["proof (state)\nthis:\n  proj_stoch_proc f n x !! k = proj_stoch_proc f n y !! k\n\ngoal (1 subgoal):\n 1. f k x = f k y", "also"], ["proof (state)\nthis:\n  proj_stoch_proc f n x !! k = proj_stoch_proc f n y !! k\n\ngoal (1 subgoal):\n 1. f k x = f k y", "have \"... = f k y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc f n y !! k = f k y", "using assms proj_stoch_proc_component'[of k n f]"], ["proof (prove)\nusing this:\n  proj_stoch_proc f n x = proj_stoch_proc f n y\n  k \\<le> n\n  k \\<le> n \\<Longrightarrow> f k ?x = proj_stoch_proc f n ?x !! k\n\ngoal (1 subgoal):\n 1. proj_stoch_proc f n y !! k = f k y", "by simp"], ["proof (state)\nthis:\n  proj_stoch_proc f n y !! k = f k y\n\ngoal (1 subgoal):\n 1. f k x = f k y", "finally"], ["proof (chain)\npicking this:\n  f k x = f k y", "show ?thesis"], ["proof (prove)\nusing this:\n  f k x = f k y\n\ngoal (1 subgoal):\n 1. f k x = f k y", "."], ["proof (state)\nthis:\n  f k x = f k y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_stoch_measurable_if_adapted:\n  assumes \"filtration M F\"\n  and \"adapt_stoch_proc F f N\"\n  shows \"proj_stoch_proc f n \\<in> measurable M (stream_space N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc f n \\<in> M \\<rightarrow>\\<^sub>M stream_space N", "proof (rule measurable_stream_space2)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>na.\n       (\\<lambda>x. proj_stoch_proc f n x !! na)\n       \\<in> M \\<rightarrow>\\<^sub>M N", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>na.\n       (\\<lambda>x. proj_stoch_proc f n x !! na)\n       \\<in> M \\<rightarrow>\\<^sub>M N", "show \"(\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N", "proof (cases \"m < n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N\n 2. \\<not> m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N", "case True"], ["proof (state)\nthis:\n  m < n\n\ngoal (2 subgoals):\n 1. m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N\n 2. \\<not> m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N", "hence \"\\<forall>x. proj_stoch_proc f n x !! m = f m x\""], ["proof (prove)\nusing this:\n  m < n\n\ngoal (1 subgoal):\n 1. \\<forall>x. proj_stoch_proc f n x !! m = f m x", "by (simp add: proj_stoch_proc_component)"], ["proof (state)\nthis:\n  \\<forall>x. proj_stoch_proc f n x !! m = f m x\n\ngoal (2 subgoals):\n 1. m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N\n 2. \\<not> m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N", "hence \"(\\<lambda>x. proj_stoch_proc f n x !! m) = f m\""], ["proof (prove)\nusing this:\n  \\<forall>x. proj_stoch_proc f n x !! m = f m x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. proj_stoch_proc f n x !! m) = f m", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) = f m\n\ngoal (2 subgoals):\n 1. m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N\n 2. \\<not> m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) = f m\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N", "using assms"], ["proof (prove)\nusing this:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) = f m\n  Filtration.filtration M F\n  adapt_stoch_proc F f N\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N", "unfolding adapt_stoch_proc_def filtration_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) = f m\n  (\\<forall>t. subalgebra M (F t)) \\<and>\n  (\\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (F t) (F s))\n  \\<forall>t. f t \\<in> F t \\<rightarrow>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N", "by (metis measurable_from_subalg)"], ["proof (state)\nthis:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N", "case False"], ["proof (state)\nthis:\n  \\<not> m < n\n\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N", "hence \"\\<forall>x. proj_stoch_proc f n x !! m = f n x\""], ["proof (prove)\nusing this:\n  \\<not> m < n\n\ngoal (1 subgoal):\n 1. \\<forall>x. proj_stoch_proc f n x !! m = f n x", "by (simp add: proj_stoch_proc_component)"], ["proof (state)\nthis:\n  \\<forall>x. proj_stoch_proc f n x !! m = f n x\n\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N", "hence \"(\\<lambda>x. proj_stoch_proc f n x !! m) = f n\""], ["proof (prove)\nusing this:\n  \\<forall>x. proj_stoch_proc f n x !! m = f n x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. proj_stoch_proc f n x !! m) = f n", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) = f n\n\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) = f n\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N", "using assms"], ["proof (prove)\nusing this:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) = f n\n  Filtration.filtration M F\n  adapt_stoch_proc F f N\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N", "unfolding adapt_stoch_proc_def filtration_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) = f n\n  (\\<forall>t. subalgebra M (F t)) \\<and>\n  (\\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (F t) (F s))\n  \\<forall>t. f t \\<in> F t \\<rightarrow>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N", "by (metis measurable_from_subalg)"], ["proof (state)\nthis:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_stoch_adapted_if_adapted:\n  assumes \"filtration M F\"\n  and \"adapt_stoch_proc F f N\"\n  shows \"proj_stoch_proc f n \\<in> measurable (F n) (stream_space N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc f n \\<in> F n \\<rightarrow>\\<^sub>M stream_space N", "proof (rule measurable_stream_space2)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>na.\n       (\\<lambda>x. proj_stoch_proc f n x !! na)\n       \\<in> F n \\<rightarrow>\\<^sub>M N", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>na.\n       (\\<lambda>x. proj_stoch_proc f n x !! na)\n       \\<in> F n \\<rightarrow>\\<^sub>M N", "show \"(\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> measurable (F n) N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. proj_stoch_proc f n x !! m)\n    \\<in> F n \\<rightarrow>\\<^sub>M N", "proof (cases \"m < n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m)\n    \\<in> F n \\<rightarrow>\\<^sub>M N\n 2. \\<not> m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m)\n    \\<in> F n \\<rightarrow>\\<^sub>M N", "case True"], ["proof (state)\nthis:\n  m < n\n\ngoal (2 subgoals):\n 1. m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m)\n    \\<in> F n \\<rightarrow>\\<^sub>M N\n 2. \\<not> m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m)\n    \\<in> F n \\<rightarrow>\\<^sub>M N", "hence \"\\<forall>x. proj_stoch_proc f n x !! m = f m x\""], ["proof (prove)\nusing this:\n  m < n\n\ngoal (1 subgoal):\n 1. \\<forall>x. proj_stoch_proc f n x !! m = f m x", "by (simp add: proj_stoch_proc_component)"], ["proof (state)\nthis:\n  \\<forall>x. proj_stoch_proc f n x !! m = f m x\n\ngoal (2 subgoals):\n 1. m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m)\n    \\<in> F n \\<rightarrow>\\<^sub>M N\n 2. \\<not> m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m)\n    \\<in> F n \\<rightarrow>\\<^sub>M N", "hence \"(\\<lambda>x. proj_stoch_proc f n x !! m) = f m\""], ["proof (prove)\nusing this:\n  \\<forall>x. proj_stoch_proc f n x !! m = f m x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. proj_stoch_proc f n x !! m) = f m", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) = f m\n\ngoal (2 subgoals):\n 1. m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m)\n    \\<in> F n \\<rightarrow>\\<^sub>M N\n 2. \\<not> m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m)\n    \\<in> F n \\<rightarrow>\\<^sub>M N", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) = f m\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. proj_stoch_proc f n x !! m)\n    \\<in> F n \\<rightarrow>\\<^sub>M N", "using assms"], ["proof (prove)\nusing this:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) = f m\n  Filtration.filtration M F\n  adapt_stoch_proc F f N\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. proj_stoch_proc f n x !! m)\n    \\<in> F n \\<rightarrow>\\<^sub>M N", "unfolding adapt_stoch_proc_def filtration_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) = f m\n  (\\<forall>t. subalgebra M (F t)) \\<and>\n  (\\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (F t) (F s))\n  \\<forall>t. f t \\<in> F t \\<rightarrow>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. proj_stoch_proc f n x !! m)\n    \\<in> F n \\<rightarrow>\\<^sub>M N", "by (metis True measurable_from_subalg not_less order.asym)"], ["proof (state)\nthis:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> F n \\<rightarrow>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m)\n    \\<in> F n \\<rightarrow>\\<^sub>M N", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m)\n    \\<in> F n \\<rightarrow>\\<^sub>M N", "case False"], ["proof (state)\nthis:\n  \\<not> m < n\n\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m)\n    \\<in> F n \\<rightarrow>\\<^sub>M N", "hence \"\\<forall>x. proj_stoch_proc f n x !! m = f n x\""], ["proof (prove)\nusing this:\n  \\<not> m < n\n\ngoal (1 subgoal):\n 1. \\<forall>x. proj_stoch_proc f n x !! m = f n x", "by (simp add: proj_stoch_proc_component)"], ["proof (state)\nthis:\n  \\<forall>x. proj_stoch_proc f n x !! m = f n x\n\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m)\n    \\<in> F n \\<rightarrow>\\<^sub>M N", "hence \"(\\<lambda>x. proj_stoch_proc f n x !! m) = f n\""], ["proof (prove)\nusing this:\n  \\<forall>x. proj_stoch_proc f n x !! m = f n x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. proj_stoch_proc f n x !! m) = f n", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) = f n\n\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    (\\<lambda>x. proj_stoch_proc f n x !! m)\n    \\<in> F n \\<rightarrow>\\<^sub>M N", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) = f n\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. proj_stoch_proc f n x !! m)\n    \\<in> F n \\<rightarrow>\\<^sub>M N", "using assms"], ["proof (prove)\nusing this:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) = f n\n  Filtration.filtration M F\n  adapt_stoch_proc F f N\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. proj_stoch_proc f n x !! m)\n    \\<in> F n \\<rightarrow>\\<^sub>M N", "unfolding adapt_stoch_proc_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) = f n\n  Filtration.filtration M F\n  \\<forall>t. f t \\<in> F t \\<rightarrow>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. proj_stoch_proc f n x !! m)\n    \\<in> F n \\<rightarrow>\\<^sub>M N", "by metis"], ["proof (state)\nthis:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> F n \\<rightarrow>\\<^sub>M N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. proj_stoch_proc f n x !! m) \\<in> F n \\<rightarrow>\\<^sub>M N\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_stoch_adapted_if_adapted':\n  assumes \"filtration M F\"\n  and \"adapt_stoch_proc F f N\"\nshows \"adapt_stoch_proc F (proj_stoch_proc f) (stream_space N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. adapt_stoch_proc F (proj_stoch_proc f) (stream_space N)", "unfolding adapt_stoch_proc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t.\n       proj_stoch_proc f t \\<in> F t \\<rightarrow>\\<^sub>M stream_space N", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       proj_stoch_proc f t \\<in> F t \\<rightarrow>\\<^sub>M stream_space N", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       proj_stoch_proc f t \\<in> F t \\<rightarrow>\\<^sub>M stream_space N", "show \"proj_stoch_proc f n \\<in> F n \\<rightarrow>\\<^sub>M stream_space N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc f n \\<in> F n \\<rightarrow>\\<^sub>M stream_space N", "using assms"], ["proof (prove)\nusing this:\n  Filtration.filtration M F\n  adapt_stoch_proc F f N\n\ngoal (1 subgoal):\n 1. proj_stoch_proc f n \\<in> F n \\<rightarrow>\\<^sub>M stream_space N", "by (simp add: proj_stoch_adapted_if_adapted)"], ["proof (state)\nthis:\n  proj_stoch_proc f n \\<in> F n \\<rightarrow>\\<^sub>M stream_space N\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) proj_stoch_proj_invariant:\nfixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"borel_adapt_stoch_proc F X\"\nshows \"proj_stoch_proc X n w = proj_stoch_proc X n (pseudo_proj_True n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w = proj_stoch_proc X n (pseudo_proj_True n w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w = proj_stoch_proc X n (pseudo_proj_True n w)", "have \"\\<And>m. snth (proj_stoch_proc X n w) m = snth (proj_stoch_proc X n (pseudo_proj_True n w)) m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       proj_stoch_proc X n w !! m =\n       proj_stoch_proc X n (pseudo_proj_True n w) !! m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       proj_stoch_proc X n w !! m =\n       proj_stoch_proc X n (pseudo_proj_True n w) !! m", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       proj_stoch_proc X n w !! m =\n       proj_stoch_proc X n (pseudo_proj_True n w) !! m", "show \"snth (proj_stoch_proc X n w) m = snth (proj_stoch_proc X n (pseudo_proj_True n w)) m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "proof (cases \"m < n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m\n 2. \\<not> m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "case True"], ["proof (state)\nthis:\n  m < n\n\ngoal (2 subgoals):\n 1. m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m\n 2. \\<not> m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "hence \"snth (proj_stoch_proc X n w) m = X m w\""], ["proof (prove)\nusing this:\n  m < n\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w !! m = X m w", "by (simp add: proj_stoch_proc_component)"], ["proof (state)\nthis:\n  proj_stoch_proc X n w !! m = X m w\n\ngoal (2 subgoals):\n 1. m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m\n 2. \\<not> m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "also"], ["proof (state)\nthis:\n  proj_stoch_proc X n w !! m = X m w\n\ngoal (2 subgoals):\n 1. m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m\n 2. \\<not> m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "have \"... = X m (pseudo_proj_True n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X m w = X m (pseudo_proj_True n w)", "proof (rule borel_adapt_nat_filtration_info[symmetric], (simp add:assms))"], ["proof (state)\ngoal (1 subgoal):\n 1. m \\<le> n", "show \"m \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<le> n", "using True"], ["proof (prove)\nusing this:\n  m < n\n\ngoal (1 subgoal):\n 1. m \\<le> n", "by linarith"], ["proof (state)\nthis:\n  m \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  X m w = X m (pseudo_proj_True n w)\n\ngoal (2 subgoals):\n 1. m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m\n 2. \\<not> m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "also"], ["proof (state)\nthis:\n  X m w = X m (pseudo_proj_True n w)\n\ngoal (2 subgoals):\n 1. m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m\n 2. \\<not> m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "have \"... = snth (proj_stoch_proc X n (pseudo_proj_True n w)) m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X m (pseudo_proj_True n w) =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "using True"], ["proof (prove)\nusing this:\n  m < n\n\ngoal (1 subgoal):\n 1. X m (pseudo_proj_True n w) =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "by (simp add: proj_stoch_proc_component)"], ["proof (state)\nthis:\n  X m (pseudo_proj_True n w) =\n  proj_stoch_proc X n (pseudo_proj_True n w) !! m\n\ngoal (2 subgoals):\n 1. m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m\n 2. \\<not> m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "finally"], ["proof (chain)\npicking this:\n  proj_stoch_proc X n w !! m =\n  proj_stoch_proc X n (pseudo_proj_True n w) !! m", "show ?thesis"], ["proof (prove)\nusing this:\n  proj_stoch_proc X n w !! m =\n  proj_stoch_proc X n (pseudo_proj_True n w) !! m\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "."], ["proof (state)\nthis:\n  proj_stoch_proc X n w !! m =\n  proj_stoch_proc X n (pseudo_proj_True n w) !! m\n\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "case False"], ["proof (state)\nthis:\n  \\<not> m < n\n\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "hence \"snth (proj_stoch_proc X n w) m = X n w\""], ["proof (prove)\nusing this:\n  \\<not> m < n\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w !! m = X n w", "by (simp add: proj_stoch_proc_component)"], ["proof (state)\nthis:\n  proj_stoch_proc X n w !! m = X n w\n\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "also"], ["proof (state)\nthis:\n  proj_stoch_proc X n w !! m = X n w\n\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "have \"... = X n (pseudo_proj_True n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X n w = X n (pseudo_proj_True n w)", "by (rule borel_adapt_nat_filtration_info[symmetric]) (auto simp add:assms)"], ["proof (state)\nthis:\n  X n w = X n (pseudo_proj_True n w)\n\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "also"], ["proof (state)\nthis:\n  X n w = X n (pseudo_proj_True n w)\n\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "have \"... = snth (proj_stoch_proc X n (pseudo_proj_True n w)) m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X n (pseudo_proj_True n w) =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "using False"], ["proof (prove)\nusing this:\n  \\<not> m < n\n\ngoal (1 subgoal):\n 1. X n (pseudo_proj_True n w) =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "by (simp add: proj_stoch_proc_component)"], ["proof (state)\nthis:\n  X n (pseudo_proj_True n w) =\n  proj_stoch_proc X n (pseudo_proj_True n w) !! m\n\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "finally"], ["proof (chain)\npicking this:\n  proj_stoch_proc X n w !! m =\n  proj_stoch_proc X n (pseudo_proj_True n w) !! m", "show ?thesis"], ["proof (prove)\nusing this:\n  proj_stoch_proc X n w !! m =\n  proj_stoch_proc X n (pseudo_proj_True n w) !! m\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w !! m =\n    proj_stoch_proc X n (pseudo_proj_True n w) !! m", "."], ["proof (state)\nthis:\n  proj_stoch_proc X n w !! m =\n  proj_stoch_proc X n (pseudo_proj_True n w) !! m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  proj_stoch_proc X n w !! m =\n  proj_stoch_proc X n (pseudo_proj_True n w) !! m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  proj_stoch_proc X n w !! ?m1 =\n  proj_stoch_proc X n (pseudo_proj_True n w) !! ?m1\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w = proj_stoch_proc X n (pseudo_proj_True n w)", "thus \"proj_stoch_proc X n w = proj_stoch_proc X n (pseudo_proj_True n w)\""], ["proof (prove)\nusing this:\n  proj_stoch_proc X n w !! ?m1 =\n  proj_stoch_proc X n (pseudo_proj_True n w) !! ?m1\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w = proj_stoch_proc X n (pseudo_proj_True n w)", "using diff_streams_only_if"], ["proof (prove)\nusing this:\n  proj_stoch_proc X n w !! ?m1 =\n  proj_stoch_proc X n (pseudo_proj_True n w) !! ?m1\n  ?w \\<noteq> ?x \\<Longrightarrow> \\<exists>n. ?w !! n \\<noteq> ?x !! n\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w = proj_stoch_proc X n (pseudo_proj_True n w)", "by auto"], ["proof (state)\nthis:\n  proj_stoch_proc X n w = proj_stoch_proc X n (pseudo_proj_True n w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) proj_stoch_set_finite_range:\n  fixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  shows \"finite (range (proj_stoch_proc X n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range (proj_stoch_proc X n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (range (proj_stoch_proc X n))", "have \"finite (range (pseudo_proj_True n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_True n))", "using pseudo_proj_True_finite_image"], ["proof (prove)\nusing this:\n  finite (range (pseudo_proj_True ?n))\n\ngoal (1 subgoal):\n 1. finite (range (pseudo_proj_True n))", "by simp"], ["proof (state)\nthis:\n  finite (range (pseudo_proj_True n))\n\ngoal (1 subgoal):\n 1. finite (range (proj_stoch_proc X n))", "moreover"], ["proof (state)\nthis:\n  finite (range (pseudo_proj_True n))\n\ngoal (1 subgoal):\n 1. finite (range (proj_stoch_proc X n))", "have \"proj_stoch_proc X n = (proj_stoch_proc X n) \\<circ> (pseudo_proj_True n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n = proj_stoch_proc X n \\<circ> pseudo_proj_True n", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       proj_stoch_proc X n x =\n       (proj_stoch_proc X n \\<circ> pseudo_proj_True n) x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       proj_stoch_proc X n x =\n       (proj_stoch_proc X n \\<circ> pseudo_proj_True n) x", "show \"proj_stoch_proc X n x = (proj_stoch_proc X n \\<circ> pseudo_proj_True n) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n x =\n    (proj_stoch_proc X n \\<circ> pseudo_proj_True n) x", "using assms proj_stoch_proj_invariant"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc F X\n  borel_adapt_stoch_proc F ?X \\<Longrightarrow>\n  proj_stoch_proc ?X ?n ?w = proj_stoch_proc ?X ?n (pseudo_proj_True ?n ?w)\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n x =\n    (proj_stoch_proc X n \\<circ> pseudo_proj_True n) x", "by (metis comp_apply)"], ["proof (state)\nthis:\n  proj_stoch_proc X n x = (proj_stoch_proc X n \\<circ> pseudo_proj_True n) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  proj_stoch_proc X n = proj_stoch_proc X n \\<circ> pseudo_proj_True n\n\ngoal (1 subgoal):\n 1. finite (range (proj_stoch_proc X n))", "ultimately"], ["proof (chain)\npicking this:\n  finite (range (pseudo_proj_True n))\n  proj_stoch_proc X n = proj_stoch_proc X n \\<circ> pseudo_proj_True n", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (range (pseudo_proj_True n))\n  proj_stoch_proc X n = proj_stoch_proc X n \\<circ> pseudo_proj_True n\n\ngoal (1 subgoal):\n 1. finite (range (proj_stoch_proc X n))", "by (metis finite_imageI fun.set_map)"], ["proof (state)\nthis:\n  finite (range (proj_stoch_proc X n))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) proj_stoch_set_discriminating:\n  fixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  shows \"set_discriminating n (proj_stoch_proc X n) N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_discriminating n (proj_stoch_proc X n) N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. set_discriminating n (proj_stoch_proc X n) N", "have \"\\<forall>w. proj_stoch_proc X n w = proj_stoch_proc X n (pseudo_proj_True n w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w.\n       proj_stoch_proc X n w = proj_stoch_proc X n (pseudo_proj_True n w)", "using assms proj_stoch_proj_invariant"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc F X\n  borel_adapt_stoch_proc F ?X \\<Longrightarrow>\n  proj_stoch_proc ?X ?n ?w = proj_stoch_proc ?X ?n (pseudo_proj_True ?n ?w)\n\ngoal (1 subgoal):\n 1. \\<forall>w.\n       proj_stoch_proc X n w = proj_stoch_proc X n (pseudo_proj_True n w)", "by auto"], ["proof (state)\nthis:\n  \\<forall>w.\n     proj_stoch_proc X n w = proj_stoch_proc X n (pseudo_proj_True n w)\n\ngoal (1 subgoal):\n 1. set_discriminating n (proj_stoch_proc X n) N", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>w.\n     proj_stoch_proc X n w = proj_stoch_proc X n (pseudo_proj_True n w)\n\ngoal (1 subgoal):\n 1. set_discriminating n (proj_stoch_proc X n) N", "unfolding set_discriminating_def"], ["proof (prove)\nusing this:\n  \\<forall>w.\n     proj_stoch_proc X n w = proj_stoch_proc X n (pseudo_proj_True n w)\n\ngoal (1 subgoal):\n 1. \\<forall>w.\n       proj_stoch_proc X n w \\<noteq>\n       proj_stoch_proc X n (pseudo_proj_True n w) \\<longrightarrow>\n       (\\<exists>A\\<in>sets N.\n           (proj_stoch_proc X n w \\<in> A) =\n           (proj_stoch_proc X n (pseudo_proj_True n w) \\<notin> A))", "by simp"], ["proof (state)\nthis:\n  set_discriminating n (proj_stoch_proc X n) N\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) proj_stoch_preimage:\n  assumes \"borel_adapt_stoch_proc F X\"\n  shows \"(proj_stoch_proc X n) -` {proj_stoch_proc X n w} = (\\<Inter>i\\<in> {m. m \\<le> n}. (X i) -` {X i w})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n w} =\n    (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n w}\n    \\<subseteq> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w})\n 2. (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w})\n    \\<subseteq> proj_stoch_proc X n -` {proj_stoch_proc X n w}", "define psX where \"psX = proj_stoch_proc X n\""], ["proof (state)\nthis:\n  psX = proj_stoch_proc X n\n\ngoal (2 subgoals):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n w}\n    \\<subseteq> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w})\n 2. (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w})\n    \\<subseteq> proj_stoch_proc X n -` {proj_stoch_proc X n w}", "show \"proj_stoch_proc X n -` {proj_stoch_proc X n w} \\<subseteq> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n w}\n    \\<subseteq> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w})", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> proj_stoch_proc X n -`\n               {proj_stoch_proc X n w} \\<Longrightarrow>\n       x \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w})", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> proj_stoch_proc X n -`\n               {proj_stoch_proc X n w} \\<Longrightarrow>\n       x \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w})", "assume \"x \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n w}\""], ["proof (state)\nthis:\n  x \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n w}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> proj_stoch_proc X n -`\n               {proj_stoch_proc X n w} \\<Longrightarrow>\n       x \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w})", "hence \"psX x = psX w\""], ["proof (prove)\nusing this:\n  x \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n w}\n\ngoal (1 subgoal):\n 1. psX x = psX w", "unfolding psX_def"], ["proof (prove)\nusing this:\n  x \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n w}\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n x = proj_stoch_proc X n w", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n w}\n  borel_adapt_stoch_proc F X\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n x = proj_stoch_proc X n w", "by simp"], ["proof (state)\nthis:\n  psX x = psX w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> proj_stoch_proc X n -`\n               {proj_stoch_proc X n w} \\<Longrightarrow>\n       x \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w})", "hence \"\\<And>i. i \\<in>{m. m \\<le> n} \\<Longrightarrow> x  \\<in> (X i) -`{X i w}\""], ["proof (prove)\nusing this:\n  psX x = psX w\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {m. m \\<le> n} \\<Longrightarrow> x \\<in> X i -` {X i w}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> {m. m \\<le> n}; psX x = psX w\\<rbrakk>\n       \\<Longrightarrow> x \\<in> X i -` {X i w}", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> {m. m \\<le> n}; psX x = psX w\\<rbrakk>\n       \\<Longrightarrow> x \\<in> X i -` {X i w}", "assume \"i\\<in> {m. m\\<le>n}\""], ["proof (state)\nthis:\n  i \\<in> {m. m \\<le> n}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> {m. m \\<le> n}; psX x = psX w\\<rbrakk>\n       \\<Longrightarrow> x \\<in> X i -` {X i w}", "hence \"i \\<le> n\""], ["proof (prove)\nusing this:\n  i \\<in> {m. m \\<le> n}\n\ngoal (1 subgoal):\n 1. i \\<le> n", "by auto"], ["proof (state)\nthis:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> {m. m \\<le> n}; psX x = psX w\\<rbrakk>\n       \\<Longrightarrow> x \\<in> X i -` {X i w}", "have \"X i x = snth (psX x) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X i x = psX x !! i", "unfolding psX_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. X i x = proj_stoch_proc X n x !! i", "by (metis Suc_le_eq Suc_le_mono \\<open>i \\<le> n\\<close> le_Suc_eq nat.simps(1) proj_stoch_proc_component(1)\n            proj_stoch_proc_component(2))"], ["proof (state)\nthis:\n  X i x = psX x !! i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> {m. m \\<le> n}; psX x = psX w\\<rbrakk>\n       \\<Longrightarrow> x \\<in> X i -` {X i w}", "also"], ["proof (state)\nthis:\n  X i x = psX x !! i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> {m. m \\<le> n}; psX x = psX w\\<rbrakk>\n       \\<Longrightarrow> x \\<in> X i -` {X i w}", "have \"... = snth (psX w) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. psX x !! i = psX w !! i", "using \\<open>psX x = psX w\\<close>"], ["proof (prove)\nusing this:\n  psX x = psX w\n\ngoal (1 subgoal):\n 1. psX x !! i = psX w !! i", "by simp"], ["proof (state)\nthis:\n  psX x !! i = psX w !! i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> {m. m \\<le> n}; psX x = psX w\\<rbrakk>\n       \\<Longrightarrow> x \\<in> X i -` {X i w}", "also"], ["proof (state)\nthis:\n  psX x !! i = psX w !! i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> {m. m \\<le> n}; psX x = psX w\\<rbrakk>\n       \\<Longrightarrow> x \\<in> X i -` {X i w}", "have \"... = X i w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. psX w !! i = X i w", "unfolding psX_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w !! i = X i w", "by (metis Suc_le_eq Suc_le_mono \\<open>i \\<le> n\\<close> le_Suc_eq nat.simps(1) proj_stoch_proc_component(1)\n            proj_stoch_proc_component(2))"], ["proof (state)\nthis:\n  psX w !! i = X i w\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> {m. m \\<le> n}; psX x = psX w\\<rbrakk>\n       \\<Longrightarrow> x \\<in> X i -` {X i w}", "finally"], ["proof (chain)\npicking this:\n  X i x = X i w", "have \"X i x = X i w\""], ["proof (prove)\nusing this:\n  X i x = X i w\n\ngoal (1 subgoal):\n 1. X i x = X i w", "."], ["proof (state)\nthis:\n  X i x = X i w\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> {m. m \\<le> n}; psX x = psX w\\<rbrakk>\n       \\<Longrightarrow> x \\<in> X i -` {X i w}", "thus \"x  \\<in> (X i) -`{X i w}\""], ["proof (prove)\nusing this:\n  X i x = X i w\n\ngoal (1 subgoal):\n 1. x \\<in> X i -` {X i w}", "by simp"], ["proof (state)\nthis:\n  x \\<in> X i -` {X i w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i1 \\<in> {m. m \\<le> n} \\<Longrightarrow> x \\<in> X ?i1 -` {X ?i1 w}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> proj_stoch_proc X n -`\n               {proj_stoch_proc X n w} \\<Longrightarrow>\n       x \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w})", "thus \"x \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. (X i) -` {X i w})\""], ["proof (prove)\nusing this:\n  ?i1 \\<in> {m. m \\<le> n} \\<Longrightarrow> x \\<in> X ?i1 -` {X ?i1 w}\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w})", "by auto"], ["proof (state)\nthis:\n  x \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  proj_stoch_proc X n -` {proj_stoch_proc X n w}\n  \\<subseteq> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w})\n\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w})\n    \\<subseteq> proj_stoch_proc X n -` {proj_stoch_proc X n w}", "show \"(\\<Inter>i\\<in>{m. m \\<le> n}. (X i) -` {X i w}) \\<subseteq> (proj_stoch_proc X n) -` {proj_stoch_proc X n w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w})\n    \\<subseteq> proj_stoch_proc X n -` {proj_stoch_proc X n w}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}.\n                   X i -` {X i w}) \\<Longrightarrow>\n       x \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n w}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}.\n                   X i -` {X i w}) \\<Longrightarrow>\n       x \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n w}", "assume \"x\\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. (X i) -` {X i w})\""], ["proof (state)\nthis:\n  x \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}.\n                   X i -` {X i w}) \\<Longrightarrow>\n       x \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n w}", "hence \"\\<And>i. i \\<in>{m. m \\<le> n} \\<Longrightarrow> x  \\<in> (X i) -`{X i w}\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w})\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {m. m \\<le> n} \\<Longrightarrow> x \\<in> X i -` {X i w}", "by simp"], ["proof (state)\nthis:\n  ?i1 \\<in> {m. m \\<le> n} \\<Longrightarrow> x \\<in> X ?i1 -` {X ?i1 w}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}.\n                   X i -` {X i w}) \\<Longrightarrow>\n       x \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n w}", "hence \"\\<And>i. i \\<in>{m. m \\<le> n} \\<Longrightarrow> X i x = X i w\""], ["proof (prove)\nusing this:\n  ?i1 \\<in> {m. m \\<le> n} \\<Longrightarrow> x \\<in> X ?i1 -` {X ?i1 w}\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {m. m \\<le> n} \\<Longrightarrow> X i x = X i w", "by simp"], ["proof (state)\nthis:\n  ?i1 \\<in> {m. m \\<le> n} \\<Longrightarrow> X ?i1 x = X ?i1 w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}.\n                   X i -` {X i w}) \\<Longrightarrow>\n       x \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n w}", "hence \"\\<And>i. i \\<le> n \\<Longrightarrow> X i x = X i w\""], ["proof (prove)\nusing this:\n  ?i1 \\<in> {m. m \\<le> n} \\<Longrightarrow> X ?i1 x = X ?i1 w\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> X i x = X i w", "by auto"], ["proof (state)\nthis:\n  ?i1 \\<le> n \\<Longrightarrow> X ?i1 x = X ?i1 w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}.\n                   X i -` {X i w}) \\<Longrightarrow>\n       x \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n w}", "hence \"psX x = psX w\""], ["proof (prove)\nusing this:\n  ?i1 \\<le> n \\<Longrightarrow> X ?i1 x = X ?i1 w\n\ngoal (1 subgoal):\n 1. psX x = psX w", "unfolding psX_def"], ["proof (prove)\nusing this:\n  ?i1 \\<le> n \\<Longrightarrow> X ?i1 x = X ?i1 w\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n x = proj_stoch_proc X n w", "by (metis (mono_tags, hide_lams) diff_streams_only_if linear not_le order_refl\n          proj_stoch_proc_component(1) proj_stoch_proc_component(2))"], ["proof (state)\nthis:\n  psX x = psX w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}.\n                   X i -` {X i w}) \\<Longrightarrow>\n       x \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n w}", "thus \"x \\<in> (proj_stoch_proc X n) -` {proj_stoch_proc X n w}\""], ["proof (prove)\nusing this:\n  psX x = psX w\n\ngoal (1 subgoal):\n 1. x \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n w}", "unfolding psX_def"], ["proof (prove)\nusing this:\n  proj_stoch_proc X n x = proj_stoch_proc X n w\n\ngoal (1 subgoal):\n 1. x \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n w}", "by auto"], ["proof (state)\nthis:\n  x \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w})\n  \\<subseteq> proj_stoch_proc X n -` {proj_stoch_proc X n w}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) proj_stoch_singleton_set:\n  fixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> ('b::t2_space)\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  shows \"(proj_stoch_proc X n) -` {proj_stoch_proc X n w} \\<in> sets (F n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n w} \\<in> sets (F n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n w} \\<in> sets (F n)", "have \"\\<And>i. i \\<le> n \\<Longrightarrow> (X i) \\<in> measurable (F n) borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> X i \\<in> borel_measurable (F n)", "by (meson adapt_stoch_proc_def assms increasing_measurable_info)"], ["proof (state)\nthis:\n  ?i1 \\<le> n \\<Longrightarrow> X ?i1 \\<in> borel_measurable (F n)\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n w} \\<in> sets (F n)", "have \"(\\<Inter>i\\<in> {m. m \\<le> n}. (X i) -` {X i w}) \\<in> sets (F n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w}) \\<in> sets (F n)", "proof ((rule sigma_algebra.countable_INT''), auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. sigma_algebra ?\\<Omega> (sets (F n))\n 2. UNIV \\<in> sets (F n)\n 3. \\<And>i. i \\<le> n \\<Longrightarrow> X i -` {X i w} \\<in> sets (F n)", "show \"sigma_algebra (space (F n)) (sets (F n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_algebra (space (F n)) (sets (F n))", "using measure_space measure_space_def"], ["proof (prove)\nusing this:\n  measure_space (space ?M) (sets ?M) (emeasure ?M)\n  measure_space ?\\<Omega> ?A ?\\<mu> =\n  (sigma_algebra ?\\<Omega> ?A \\<and>\n   positive ?A ?\\<mu> \\<and> countably_additive ?A ?\\<mu>)\n\ngoal (1 subgoal):\n 1. sigma_algebra (space (F n)) (sets (F n))", "by auto"], ["proof (state)\nthis:\n  sigma_algebra (space (F n)) (sets (F n))\n\ngoal (2 subgoals):\n 1. UNIV \\<in> sets (F n)\n 2. \\<And>i. i \\<le> n \\<Longrightarrow> X i -` {X i w} \\<in> sets (F n)", "show \"UNIV \\<in> sets (F n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV \\<in> sets (F n)", "using \\<open>sigma_algebra (space (F n)) (sets (F n))\\<close> nat_filtration_space natural_filtration\n        sigma_algebra.sigma_sets_eq sigma_sets_top"], ["proof (prove)\nusing this:\n  sigma_algebra (space (F n)) (sets (F n))\n  space (nat_filtration ?n) = UNIV\n  F = nat_filtration\n  sigma_algebra ?\\<Omega> ?M \\<Longrightarrow> sigma_sets ?\\<Omega> ?M = ?M\n  ?sp \\<in> sigma_sets ?sp ?A\n\ngoal (1 subgoal):\n 1. UNIV \\<in> sets (F n)", "by fastforce"], ["proof (state)\nthis:\n  UNIV \\<in> sets (F n)\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> X i -` {X i w} \\<in> sets (F n)", "have \"\\<And>i. i \\<le> n \\<Longrightarrow> (X i) -` {X i w} \\<in> sets (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       X i -` {X i w} \\<in> sets (nat_filtration n)", "proof (rule nat_filtration_borel_measurable_singleton)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       X i \\<in> borel_measurable (nat_filtration n)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       X i \\<in> borel_measurable (nat_filtration n)", "assume \"i \\<le> n\""], ["proof (state)\nthis:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       X i \\<in> borel_measurable (nat_filtration n)", "show \"X i \\<in> borel_measurable (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X i \\<in> borel_measurable (nat_filtration n)", "using assms natural_filtration"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc F X\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. X i \\<in> borel_measurable (nat_filtration n)", "unfolding adapt_stoch_proc_def"], ["proof (prove)\nusing this:\n  \\<forall>t. X t \\<in> borel_measurable (F t)\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. X i \\<in> borel_measurable (nat_filtration n)", "using \\<open>i \\<le> n\\<close> increasing_measurable_info"], ["proof (prove)\nusing this:\n  \\<forall>t. X t \\<in> borel_measurable (F t)\n  F = nat_filtration\n  i \\<le> n\n  \\<lbrakk>?f \\<in> F ?s \\<rightarrow>\\<^sub>M ?N; ?s \\<le> ?t\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> F ?t \\<rightarrow>\\<^sub>M ?N\n\ngoal (1 subgoal):\n 1. X i \\<in> borel_measurable (nat_filtration n)", "by blast"], ["proof (state)\nthis:\n  X i \\<in> borel_measurable (nat_filtration n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i1 \\<le> n \\<Longrightarrow>\n  X ?i1 -` {X ?i1 w} \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> X i -` {X i w} \\<in> sets (F n)", "thus \"\\<And>i. i \\<le> n \\<Longrightarrow> (X i) -` {X i w} \\<in> sets (F n)\""], ["proof (prove)\nusing this:\n  ?i1 \\<le> n \\<Longrightarrow>\n  X ?i1 -` {X ?i1 w} \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> X i -` {X i w} \\<in> sets (F n)", "using natural_filtration"], ["proof (prove)\nusing this:\n  ?i1 \\<le> n \\<Longrightarrow>\n  X ?i1 -` {X ?i1 w} \\<in> sets (nat_filtration n)\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> X i -` {X i w} \\<in> sets (F n)", "by simp"], ["proof (state)\nthis:\n  ?i1 \\<le> n \\<Longrightarrow> X ?i1 -` {X ?i1 w} \\<in> sets (F n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w}) \\<in> sets (F n)\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n w} \\<in> sets (F n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w}) \\<in> sets (F n)\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n w} \\<in> sets (F n)", "using assms"], ["proof (prove)\nusing this:\n  (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i w}) \\<in> sets (F n)\n  borel_adapt_stoch_proc F X\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n w} \\<in> sets (F n)", "by (simp add: proj_stoch_preimage)"], ["proof (state)\nthis:\n  proj_stoch_proc X n -` {proj_stoch_proc X n w} \\<in> sets (F n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) finite_range_stream_space:\n  fixes f::\"'a \\<Rightarrow> 'b::t1_space\"\n  assumes \"finite (range f)\"\n  shows \"(\\<lambda>w. snth w i) -` (open_exclude_set (f x) (range f)) \\<in> sets (stream_space borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! i) -` open_exclude_set (f x) (range f)\n    \\<in> sets (stream_space borel)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! i) -` open_exclude_set (f x) (range f)\n    \\<in> sets (stream_space borel)", "define opex where \"opex = open_exclude_set (f x) (range f)\""], ["proof (state)\nthis:\n  opex = open_exclude_set (f x) (range f)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! i) -` open_exclude_set (f x) (range f)\n    \\<in> sets (stream_space borel)", "have \"open opex\" and \"opex \\<inter> (range f) = {f x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open opex &&& opex \\<inter> range f = {f x}", "using assms"], ["proof (prove)\nusing this:\n  finite (range f)\n\ngoal (1 subgoal):\n 1. open opex &&& opex \\<inter> range f = {f x}", "unfolding opex_def"], ["proof (prove)\nusing this:\n  finite (range f)\n\ngoal (1 subgoal):\n 1. open (open_exclude_set (f x) (range f)) &&&\n    open_exclude_set (f x) (range f) \\<inter> range f = {f x}", "by\n    (auto simp add:open_exclude_finite)"], ["proof (state)\nthis:\n  open opex\n  opex \\<inter> range f = {f x}\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! i) -` open_exclude_set (f x) (range f)\n    \\<in> sets (stream_space borel)", "hence \"opex\\<in> sets borel\""], ["proof (prove)\nusing this:\n  open opex\n  opex \\<inter> range f = {f x}\n\ngoal (1 subgoal):\n 1. opex \\<in> sets borel", "by simp"], ["proof (state)\nthis:\n  opex \\<in> sets borel\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! i) -` open_exclude_set (f x) (range f)\n    \\<in> sets (stream_space borel)", "hence vim: \"(\\<lambda>w. snth w i) -` opex \\<in> sets (vimage_algebra (streams (space borel)) (\\<lambda>w. snth w i) borel)\""], ["proof (prove)\nusing this:\n  opex \\<in> sets borel\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! i) -` opex\n    \\<in> sets\n           (vimage_algebra (streams (space borel)) (\\<lambda>w. w !! i)\n             borel)", "by (metis in_vimage_algebra inf_top.right_neutral space_borel streams_UNIV)"], ["proof (state)\nthis:\n  (\\<lambda>w. w !! i) -` opex\n  \\<in> sets\n         (vimage_algebra (streams (space borel)) (\\<lambda>w. w !! i) borel)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! i) -` open_exclude_set (f x) (range f)\n    \\<in> sets (stream_space borel)", "have \"(\\<lambda>w. snth w i) -` opex \\<in> sets (\\<Squnion>i. vimage_algebra (streams (space borel)) (\\<lambda>w. snth w i) borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! i) -` opex\n    \\<in> sets\n           (\\<Squnion>i.\n               vimage_algebra (streams (space borel)) (\\<lambda>w. w !! i)\n                borel)", "proof (rule in_sets_SUP, simp)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i \\<in> UNIV \\<Longrightarrow>\n       space\n        (vimage_algebra (streams (space borel)) (\\<lambda>w. w !! i)\n          borel) =\n       ?Y\n 2. (\\<lambda>w. w !! i) -` opex\n    \\<in> sets\n           (vimage_algebra (streams (space borel)) (\\<lambda>w. w !! ?i)\n             borel)", "show \"\\<And>i. i \\<in> UNIV \\<Longrightarrow> space (vimage_algebra (streams (space borel)) (\\<lambda>w. w !! i) borel) =\n      UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> UNIV \\<Longrightarrow>\n       space\n        (vimage_algebra (streams (space borel)) (\\<lambda>w. w !! i)\n          borel) =\n       UNIV", "by simp"], ["proof (state)\nthis:\n  ?i1 \\<in> UNIV \\<Longrightarrow>\n  space\n   (vimage_algebra (streams (space borel)) (\\<lambda>w. w !! ?i1) borel) =\n  UNIV\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! i) -` opex\n    \\<in> sets\n           (vimage_algebra (streams (space borel)) (\\<lambda>w. w !! ?i)\n             borel)", "show \"(\\<lambda>w. w !! i) -` opex \\<in> sets (vimage_algebra (streams (space borel)) (\\<lambda>w. w !! i) borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! i) -` opex\n    \\<in> sets\n           (vimage_algebra (streams (space borel)) (\\<lambda>w. w !! i)\n             borel)", "using vim"], ["proof (prove)\nusing this:\n  (\\<lambda>w. w !! i) -` opex\n  \\<in> sets\n         (vimage_algebra (streams (space borel)) (\\<lambda>w. w !! i) borel)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! i) -` opex\n    \\<in> sets\n           (vimage_algebra (streams (space borel)) (\\<lambda>w. w !! i)\n             borel)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. w !! i) -` opex\n  \\<in> sets\n         (vimage_algebra (streams (space borel)) (\\<lambda>w. w !! i) borel)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>w. w !! i) -` opex\n  \\<in> sets\n         (\\<Squnion>i.\n             vimage_algebra (streams (space borel)) (\\<lambda>w. w !! i)\n              borel)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! i) -` open_exclude_set (f x) (range f)\n    \\<in> sets (stream_space borel)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>w. w !! i) -` opex\n  \\<in> sets\n         (\\<Squnion>i.\n             vimage_algebra (streams (space borel)) (\\<lambda>w. w !! i)\n              borel)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! i) -` open_exclude_set (f x) (range f)\n    \\<in> sets (stream_space borel)", "using sets_stream_space_eq"], ["proof (prove)\nusing this:\n  (\\<lambda>w. w !! i) -` opex\n  \\<in> sets\n         (\\<Squnion>i.\n             vimage_algebra (streams (space borel)) (\\<lambda>w. w !! i)\n              borel)\n  sets (stream_space ?M) =\n  sets\n   (\\<Squnion>i.\n       vimage_algebra (streams (space ?M)) (\\<lambda>s. s !! i) ?M)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! i) -` open_exclude_set (f x) (range f)\n    \\<in> sets (stream_space borel)", "unfolding opex_def"], ["proof (prove)\nusing this:\n  (\\<lambda>w. w !! i) -` open_exclude_set (f x) (range f)\n  \\<in> sets\n         (\\<Squnion>i.\n             vimage_algebra (streams (space borel)) (\\<lambda>w. w !! i)\n              borel)\n  sets (stream_space ?M) =\n  sets\n   (\\<Squnion>i.\n       vimage_algebra (streams (space ?M)) (\\<lambda>s. s !! i) ?M)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! i) -` open_exclude_set (f x) (range f)\n    \\<in> sets (stream_space borel)", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>w. w !! i) -` open_exclude_set (f x) (range f)\n  \\<in> sets (stream_space borel)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) proj_stoch_range_singleton:\n  fixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> ('b::t2_space)\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  and \"r\\<in> range (proj_stoch_proc X n)\"\nshows \"\\<exists>A\\<in>sets (stream_space borel). range (proj_stoch_proc X n) \\<inter> A = {r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets (stream_space borel).\n       range (proj_stoch_proc X n) \\<inter> A = {r}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets (stream_space borel).\n       range (proj_stoch_proc X n) \\<inter> A = {r}", "have \"\\<exists>x. r = proj_stoch_proc X n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. r = proj_stoch_proc X n x", "using assms"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc F X\n  r \\<in> range (proj_stoch_proc X n)\n\ngoal (1 subgoal):\n 1. \\<exists>x. r = proj_stoch_proc X n x", "by auto"], ["proof (state)\nthis:\n  \\<exists>x. r = proj_stoch_proc X n x\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets (stream_space borel).\n       range (proj_stoch_proc X n) \\<inter> A = {r}", "from this"], ["proof (chain)\npicking this:\n  \\<exists>x. r = proj_stoch_proc X n x", "obtain x where \"r = proj_stoch_proc X n x\""], ["proof (prove)\nusing this:\n  \\<exists>x. r = proj_stoch_proc X n x\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        r = proj_stoch_proc X n x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r = proj_stoch_proc X n x\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets (stream_space borel).\n       range (proj_stoch_proc X n) \\<inter> A = {r}", "have \"\\<And>i. i \\<le> n \\<Longrightarrow> (X i) \\<in> measurable (F n) borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> X i \\<in> borel_measurable (F n)", "by (meson adapt_stoch_proc_def assms increasing_measurable_info)"], ["proof (state)\nthis:\n  ?i1 \\<le> n \\<Longrightarrow> X ?i1 \\<in> borel_measurable (F n)\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets (stream_space borel).\n       range (proj_stoch_proc X n) \\<inter> A = {r}", "hence fin: \"\\<And>i. i \\<le> n \\<Longrightarrow> finite (range (X i))\""], ["proof (prove)\nusing this:\n  ?i1 \\<le> n \\<Longrightarrow> X ?i1 \\<in> borel_measurable (F n)\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> finite (range (X i))", "by (metis bernoulli bernoulli_stream_space nat_filtration_vimage_finite natural_filtration streams_UNIV)"], ["proof (state)\nthis:\n  ?i1 \\<le> n \\<Longrightarrow> finite (range (X ?i1))\n\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets (stream_space borel).\n       range (proj_stoch_proc X n) \\<inter> A = {r}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets (stream_space borel).\n       range (proj_stoch_proc X n) \\<inter> A = {r}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. range (proj_stoch_proc X n) \\<inter> ?x = {r}\n 2. ?x \\<in> sets (stream_space borel)", "define cand where \"cand = (\\<Inter>i \\<in> {m. m\\<le> n}. (\\<lambda>w. snth w i) -` (open_exclude_set (X i x) (range (X i))))\""], ["proof (state)\nthis:\n  cand =\n  (\\<Inter>i\\<in>{m. m \\<le> n}.\n      (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i)))\n\ngoal (2 subgoals):\n 1. range (proj_stoch_proc X n) \\<inter> ?x = {r}\n 2. ?x \\<in> sets (stream_space borel)", "show \"cand \\<in> sets (stream_space borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cand \\<in> sets (stream_space borel)", "unfolding cand_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{m. m \\<le> n}.\n        (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i)))\n    \\<in> sets (stream_space borel)", "proof ((rule sigma_algebra.countable_INT''), auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. sigma_algebra ?\\<Omega> (sets (stream_space borel))\n 2. UNIV \\<in> sets (stream_space borel)\n 3. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))\n       \\<in> sets (stream_space borel)", "show \"UNIV \\<in> sets (stream_space borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV \\<in> sets (stream_space borel)", "by (metis space_borel streams_UNIV streams_stream_space)"], ["proof (state)\nthis:\n  UNIV \\<in> sets (stream_space borel)\n\ngoal (2 subgoals):\n 1. sigma_algebra ?\\<Omega> (sets (stream_space borel))\n 2. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))\n       \\<in> sets (stream_space borel)", "show \"sigma_algebra (space (stream_space borel)) (sets (stream_space borel))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_algebra (space (stream_space borel)) (sets (stream_space borel))", "by (simp add: sets.sigma_algebra_axioms)"], ["proof (state)\nthis:\n  sigma_algebra (space (stream_space borel)) (sets (stream_space borel))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))\n       \\<in> sets (stream_space borel)", "show \"\\<And>i. i \\<le> n \\<Longrightarrow> (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i)) \\<in> sets (stream_space borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))\n       \\<in> sets (stream_space borel)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))\n       \\<in> sets (stream_space borel)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))\n       \\<in> sets (stream_space borel)", "assume \"i \\<le> n\""], ["proof (state)\nthis:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))\n       \\<in> sets (stream_space borel)", "thus \"(\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i)) \\<in> sets (stream_space borel)\""], ["proof (prove)\nusing this:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))\n    \\<in> sets (stream_space borel)", "using fin"], ["proof (prove)\nusing this:\n  i \\<le> n\n  ?i1 \\<le> n \\<Longrightarrow> finite (range (X ?i1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))\n    \\<in> sets (stream_space borel)", "by (simp add:finite_range_stream_space)"], ["proof (state)\nthis:\n  (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))\n  \\<in> sets (stream_space borel)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i3 \\<le> n \\<Longrightarrow>\n  (\\<lambda>w. w !! ?i3) -` open_exclude_set (X ?i3 x) (range (X ?i3))\n  \\<in> sets (stream_space borel)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cand \\<in> sets (stream_space borel)\n\ngoal (1 subgoal):\n 1. range (proj_stoch_proc X n) \\<inter>\n    (\\<Inter>i\\<in>{m. m \\<le> n}.\n        (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))) =\n    {r}", "have \"range (proj_stoch_proc X n) \\<inter> cand = {proj_stoch_proc X n x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (proj_stoch_proc X n) \\<inter> cand = {proj_stoch_proc X n x}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. range (proj_stoch_proc X n) \\<inter> cand\n    \\<subseteq> {proj_stoch_proc X n x}\n 2. {proj_stoch_proc X n x}\n    \\<subseteq> range (proj_stoch_proc X n) \\<inter> cand", "have \"proj_stoch_proc X n x \\<in> range (proj_stoch_proc X n) \\<inter> cand\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n x \\<in> range (proj_stoch_proc X n) \\<inter> cand", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. proj_stoch_proc X n x \\<in> range (proj_stoch_proc X n)\n 2. proj_stoch_proc X n x \\<in> cand", "show \"proj_stoch_proc X n x \\<in> range (proj_stoch_proc X n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n x \\<in> range (proj_stoch_proc X n)", "by simp"], ["proof (state)\nthis:\n  proj_stoch_proc X n x \\<in> range (proj_stoch_proc X n)\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n x \\<in> cand", "show \"proj_stoch_proc X n x \\<in> cand\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n x \\<in> cand", "unfolding cand_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n x\n    \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}.\n              (\\<lambda>w. w !! i) -`\n              open_exclude_set (X i x) (range (X i)))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       proj_stoch_proc X n x\n       \\<in> (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       proj_stoch_proc X n x\n       \\<in> (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))", "assume \"i\\<in> {m. m\\<le> n}\""], ["proof (state)\nthis:\n  i \\<in> {m. m \\<le> n}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       proj_stoch_proc X n x\n       \\<in> (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))", "hence \"i \\<le> n\""], ["proof (prove)\nusing this:\n  i \\<in> {m. m \\<le> n}\n\ngoal (1 subgoal):\n 1. i \\<le> n", "by simp"], ["proof (state)\nthis:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       proj_stoch_proc X n x\n       \\<in> (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))", "hence \"snth (proj_stoch_proc X n x) i = X i x\""], ["proof (prove)\nusing this:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n x !! i = X i x", "by (metis le_antisym not_less proj_stoch_proc_component)"], ["proof (state)\nthis:\n  proj_stoch_proc X n x !! i = X i x\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       proj_stoch_proc X n x\n       \\<in> (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))", "also"], ["proof (state)\nthis:\n  proj_stoch_proc X n x !! i = X i x\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       proj_stoch_proc X n x\n       \\<in> (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))", "have \"... \\<in> open_exclude_set (X i x) (range (X i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X i x \\<in> open_exclude_set (X i x) (range (X i))", "using assms open_exclude_finite(2)"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc F X\n  r \\<in> range (proj_stoch_proc X n)\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> open_exclude_set ?x ?A \\<inter> ?A = {?x}\n\ngoal (1 subgoal):\n 1. X i x \\<in> open_exclude_set (X i x) (range (X i))", "by (metis IntE \\<open>i \\<le> n\\<close> fin insert_iff rangeI)"], ["proof (state)\nthis:\n  X i x \\<in> open_exclude_set (X i x) (range (X i))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       proj_stoch_proc X n x\n       \\<in> (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))", "finally"], ["proof (chain)\npicking this:\n  proj_stoch_proc X n x !! i \\<in> open_exclude_set (X i x) (range (X i))", "have \"snth (proj_stoch_proc X n x) i \\<in> open_exclude_set (X i x) (range (X i))\""], ["proof (prove)\nusing this:\n  proj_stoch_proc X n x !! i \\<in> open_exclude_set (X i x) (range (X i))\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n x !! i \\<in> open_exclude_set (X i x) (range (X i))", "."], ["proof (state)\nthis:\n  proj_stoch_proc X n x !! i \\<in> open_exclude_set (X i x) (range (X i))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       proj_stoch_proc X n x\n       \\<in> (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))", "thus \"proj_stoch_proc X n x \\<in> (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))\""], ["proof (prove)\nusing this:\n  proj_stoch_proc X n x !! i \\<in> open_exclude_set (X i x) (range (X i))\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n x\n    \\<in> (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))", "by simp"], ["proof (state)\nthis:\n  proj_stoch_proc X n x\n  \\<in> (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  proj_stoch_proc X n x \\<in> cand\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  proj_stoch_proc X n x \\<in> range (proj_stoch_proc X n) \\<inter> cand\n\ngoal (2 subgoals):\n 1. range (proj_stoch_proc X n) \\<inter> cand\n    \\<subseteq> {proj_stoch_proc X n x}\n 2. {proj_stoch_proc X n x}\n    \\<subseteq> range (proj_stoch_proc X n) \\<inter> cand", "thus \"{proj_stoch_proc X n x} \\<subseteq> range (proj_stoch_proc X n) \\<inter> cand\""], ["proof (prove)\nusing this:\n  proj_stoch_proc X n x \\<in> range (proj_stoch_proc X n) \\<inter> cand\n\ngoal (1 subgoal):\n 1. {proj_stoch_proc X n x}\n    \\<subseteq> range (proj_stoch_proc X n) \\<inter> cand", "by simp"], ["proof (state)\nthis:\n  {proj_stoch_proc X n x}\n  \\<subseteq> range (proj_stoch_proc X n) \\<inter> cand\n\ngoal (1 subgoal):\n 1. range (proj_stoch_proc X n) \\<inter> cand\n    \\<subseteq> {proj_stoch_proc X n x}", "show \"range (proj_stoch_proc X n) \\<inter> cand \\<subseteq> {proj_stoch_proc X n x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (proj_stoch_proc X n) \\<inter> cand\n    \\<subseteq> {proj_stoch_proc X n x}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (proj_stoch_proc X n) \\<inter> cand \\<Longrightarrow>\n       xa \\<in> {proj_stoch_proc X n x}", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (proj_stoch_proc X n) \\<inter> cand \\<Longrightarrow>\n       xa \\<in> {proj_stoch_proc X n x}", "assume \"z\\<in> range (proj_stoch_proc X n) \\<inter> cand\""], ["proof (state)\nthis:\n  z \\<in> range (proj_stoch_proc X n) \\<inter> cand\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (proj_stoch_proc X n) \\<inter> cand \\<Longrightarrow>\n       xa \\<in> {proj_stoch_proc X n x}", "hence \"\\<exists>y. z = proj_stoch_proc X n y\""], ["proof (prove)\nusing this:\n  z \\<in> range (proj_stoch_proc X n) \\<inter> cand\n\ngoal (1 subgoal):\n 1. \\<exists>y. z = proj_stoch_proc X n y", "by auto"], ["proof (state)\nthis:\n  \\<exists>y. z = proj_stoch_proc X n y\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (proj_stoch_proc X n) \\<inter> cand \\<Longrightarrow>\n       xa \\<in> {proj_stoch_proc X n x}", "from this"], ["proof (chain)\npicking this:\n  \\<exists>y. z = proj_stoch_proc X n y", "obtain y where \"z = proj_stoch_proc X n y\""], ["proof (prove)\nusing this:\n  \\<exists>y. z = proj_stoch_proc X n y\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        z = proj_stoch_proc X n y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z = proj_stoch_proc X n y\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (proj_stoch_proc X n) \\<inter> cand \\<Longrightarrow>\n       xa \\<in> {proj_stoch_proc X n x}", "hence \"proj_stoch_proc X n y \\<in> cand\""], ["proof (prove)\nusing this:\n  z = proj_stoch_proc X n y\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n y \\<in> cand", "using \\<open>z\\<in> range (proj_stoch_proc X n) \\<inter> cand\\<close>"], ["proof (prove)\nusing this:\n  z = proj_stoch_proc X n y\n  z \\<in> range (proj_stoch_proc X n) \\<inter> cand\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n y \\<in> cand", "by simp"], ["proof (state)\nthis:\n  proj_stoch_proc X n y \\<in> cand\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (proj_stoch_proc X n) \\<inter> cand \\<Longrightarrow>\n       xa \\<in> {proj_stoch_proc X n x}", "have \"\\<forall>i. i\\<le>n \\<longrightarrow> X i y = X i x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n. X i y = X i x", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> X i y = X i x", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> X i y = X i x", "assume \"i \\<le> n\""], ["proof (state)\nthis:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> X i y = X i x", "hence \"X i y = snth (proj_stoch_proc X n y) i\""], ["proof (prove)\nusing this:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. X i y = proj_stoch_proc X n y !! i", "by (metis le_antisym not_less proj_stoch_proc_component)"], ["proof (state)\nthis:\n  X i y = proj_stoch_proc X n y !! i\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> X i y = X i x", "also"], ["proof (state)\nthis:\n  X i y = proj_stoch_proc X n y !! i\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> X i y = X i x", "have \"... \\<in> open_exclude_set (X i x) (range (X i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n y !! i \\<in> open_exclude_set (X i x) (range (X i))", "using \\<open>proj_stoch_proc X n y \\<in> cand\\<close> \\<open>i \\<le> n\\<close>"], ["proof (prove)\nusing this:\n  proj_stoch_proc X n y \\<in> cand\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n y !! i \\<in> open_exclude_set (X i x) (range (X i))", "unfolding cand_def"], ["proof (prove)\nusing this:\n  proj_stoch_proc X n y\n  \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}.\n            (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i)))\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n y !! i \\<in> open_exclude_set (X i x) (range (X i))", "by simp"], ["proof (state)\nthis:\n  proj_stoch_proc X n y !! i \\<in> open_exclude_set (X i x) (range (X i))\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> X i y = X i x", "finally"], ["proof (chain)\npicking this:\n  X i y \\<in> open_exclude_set (X i x) (range (X i))", "have \"X i y \\<in> open_exclude_set (X i x) (range (X i))\""], ["proof (prove)\nusing this:\n  X i y \\<in> open_exclude_set (X i x) (range (X i))\n\ngoal (1 subgoal):\n 1. X i y \\<in> open_exclude_set (X i x) (range (X i))", "."], ["proof (state)\nthis:\n  X i y \\<in> open_exclude_set (X i x) (range (X i))\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> X i y = X i x", "thus \"X i y = X i x\""], ["proof (prove)\nusing this:\n  X i y \\<in> open_exclude_set (X i x) (range (X i))\n\ngoal (1 subgoal):\n 1. X i y = X i x", "using assms"], ["proof (prove)\nusing this:\n  X i y \\<in> open_exclude_set (X i x) (range (X i))\n  borel_adapt_stoch_proc F X\n  r \\<in> range (proj_stoch_proc X n)\n\ngoal (1 subgoal):\n 1. X i y = X i x", "using assms open_exclude_finite(2)"], ["proof (prove)\nusing this:\n  X i y \\<in> open_exclude_set (X i x) (range (X i))\n  borel_adapt_stoch_proc F X\n  r \\<in> range (proj_stoch_proc X n)\n  borel_adapt_stoch_proc F X\n  r \\<in> range (proj_stoch_proc X n)\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> open_exclude_set ?x ?A \\<inter> ?A = {?x}\n\ngoal (1 subgoal):\n 1. X i y = X i x", "by (metis Int_iff \\<open>i \\<le> n\\<close> empty_iff fin insert_iff rangeI)"], ["proof (state)\nthis:\n  X i y = X i x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i\\<le>n. X i y = X i x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (proj_stoch_proc X n) \\<inter> cand \\<Longrightarrow>\n       xa \\<in> {proj_stoch_proc X n x}", "hence \"\\<forall>i. snth (proj_stoch_proc X n y) i = snth (proj_stoch_proc X n x) i\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n. X i y = X i x\n\ngoal (1 subgoal):\n 1. \\<forall>i. proj_stoch_proc X n y !! i = proj_stoch_proc X n x !! i", "using proj_stoch_proc_component"], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n. X i y = X i x\n  ?k < ?n \\<Longrightarrow> proj_stoch_proc ?f ?n ?w !! ?k = ?f ?k ?w\n  ?n \\<le> ?k \\<Longrightarrow> proj_stoch_proc ?f ?n ?w !! ?k = ?f ?n ?w\n\ngoal (1 subgoal):\n 1. \\<forall>i. proj_stoch_proc X n y !! i = proj_stoch_proc X n x !! i", "by (metis nat_le_linear not_less)"], ["proof (state)\nthis:\n  \\<forall>i. proj_stoch_proc X n y !! i = proj_stoch_proc X n x !! i\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (proj_stoch_proc X n) \\<inter> cand \\<Longrightarrow>\n       xa \\<in> {proj_stoch_proc X n x}", "hence \"proj_stoch_proc X n y = proj_stoch_proc X n x\""], ["proof (prove)\nusing this:\n  \\<forall>i. proj_stoch_proc X n y !! i = proj_stoch_proc X n x !! i\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n y = proj_stoch_proc X n x", "using diff_streams_only_if"], ["proof (prove)\nusing this:\n  \\<forall>i. proj_stoch_proc X n y !! i = proj_stoch_proc X n x !! i\n  ?w \\<noteq> ?x \\<Longrightarrow> \\<exists>n. ?w !! n \\<noteq> ?x !! n\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n y = proj_stoch_proc X n x", "by auto"], ["proof (state)\nthis:\n  proj_stoch_proc X n y = proj_stoch_proc X n x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> range (proj_stoch_proc X n) \\<inter> cand \\<Longrightarrow>\n       xa \\<in> {proj_stoch_proc X n x}", "thus \"z\\<in> {proj_stoch_proc X n x}\""], ["proof (prove)\nusing this:\n  proj_stoch_proc X n y = proj_stoch_proc X n x\n\ngoal (1 subgoal):\n 1. z \\<in> {proj_stoch_proc X n x}", "using \\<open>z = proj_stoch_proc X n y\\<close>"], ["proof (prove)\nusing this:\n  proj_stoch_proc X n y = proj_stoch_proc X n x\n  z = proj_stoch_proc X n y\n\ngoal (1 subgoal):\n 1. z \\<in> {proj_stoch_proc X n x}", "by auto"], ["proof (state)\nthis:\n  z \\<in> {proj_stoch_proc X n x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  range (proj_stoch_proc X n) \\<inter> cand\n  \\<subseteq> {proj_stoch_proc X n x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  range (proj_stoch_proc X n) \\<inter> cand = {proj_stoch_proc X n x}\n\ngoal (1 subgoal):\n 1. range (proj_stoch_proc X n) \\<inter>\n    (\\<Inter>i\\<in>{m. m \\<le> n}.\n        (\\<lambda>w. w !! i) -` open_exclude_set (X i x) (range (X i))) =\n    {r}", "thus \"range (proj_stoch_proc X n) \\<inter> cand = {r}\""], ["proof (prove)\nusing this:\n  range (proj_stoch_proc X n) \\<inter> cand = {proj_stoch_proc X n x}\n\ngoal (1 subgoal):\n 1. range (proj_stoch_proc X n) \\<inter> cand = {r}", "using \\<open>r = proj_stoch_proc X n x\\<close>"], ["proof (prove)\nusing this:\n  range (proj_stoch_proc X n) \\<inter> cand = {proj_stoch_proc X n x}\n  r = proj_stoch_proc X n x\n\ngoal (1 subgoal):\n 1. range (proj_stoch_proc X n) \\<inter> cand = {r}", "by simp"], ["proof (state)\nthis:\n  range (proj_stoch_proc X n) \\<inter> cand = {r}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>A\\<in>sets (stream_space borel).\n     range (proj_stoch_proc X n) \\<inter> A = {r}\n\ngoal:\nNo subgoals!", "qed"], ["", "definition (in infinite_cts_filtration) stream_space_single where\n\"stream_space_single X r = (if (\\<exists>U. U\\<in> sets (stream_space borel) \\<and> U\\<inter> (range X) = {r})\n  then SOME U. U\\<in> sets (stream_space borel) \\<and> U \\<inter> (range X) = {r} else {})\""], ["", "lemma (in infinite_cts_filtration) stream_space_singleI:\n  assumes \"\\<exists>U. U\\<in> sets (stream_space borel) \\<and> U\\<inter> (range X) = {r}\"\n  shows \"stream_space_single X r \\<in> sets (stream_space borel) \\<and> stream_space_single X r \\<inter> (range X) = {r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stream_space_single X r \\<in> sets (stream_space borel) \\<and>\n    stream_space_single X r \\<inter> range X = {r}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. stream_space_single X r \\<in> sets (stream_space borel) \\<and>\n    stream_space_single X r \\<inter> range X = {r}", "let ?V = \"SOME U. U\\<in> sets (stream_space borel) \\<and> U\\<inter> (range X) = {r}\""], ["proof (state)\ngoal (1 subgoal):\n 1. stream_space_single X r \\<in> sets (stream_space borel) \\<and>\n    stream_space_single X r \\<inter> range X = {r}", "have vprop: \"?V\\<in> sets (stream_space borel) \\<and> ?V \\<inter> (range X) = {r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (SOME U.\n        U \\<in> sets (stream_space borel) \\<and> U \\<inter> range X = {r})\n    \\<in> sets (stream_space borel) \\<and>\n    (SOME U.\n        U \\<in> sets (stream_space borel) \\<and>\n        U \\<inter> range X = {r}) \\<inter>\n    range X =\n    {r}", "using someI_ex[of \"\\<lambda>U. U\\<in> sets (stream_space borel) \\<and> U\\<inter> (range X) = {r}\"]\n    assms"], ["proof (prove)\nusing this:\n  \\<exists>x.\n     x \\<in> sets (stream_space borel) \\<and>\n     x \\<inter> range X = {r} \\<Longrightarrow>\n  (SOME x.\n      x \\<in> sets (stream_space borel) \\<and> x \\<inter> range X = {r})\n  \\<in> sets (stream_space borel) \\<and>\n  (SOME x.\n      x \\<in> sets (stream_space borel) \\<and>\n      x \\<inter> range X = {r}) \\<inter>\n  range X =\n  {r}\n  \\<exists>U.\n     U \\<in> sets (stream_space borel) \\<and> U \\<inter> range X = {r}\n\ngoal (1 subgoal):\n 1. (SOME U.\n        U \\<in> sets (stream_space borel) \\<and> U \\<inter> range X = {r})\n    \\<in> sets (stream_space borel) \\<and>\n    (SOME U.\n        U \\<in> sets (stream_space borel) \\<and>\n        U \\<inter> range X = {r}) \\<inter>\n    range X =\n    {r}", "by blast"], ["proof (state)\nthis:\n  (SOME U.\n      U \\<in> sets (stream_space borel) \\<and> U \\<inter> range X = {r})\n  \\<in> sets (stream_space borel) \\<and>\n  (SOME U.\n      U \\<in> sets (stream_space borel) \\<and>\n      U \\<inter> range X = {r}) \\<inter>\n  range X =\n  {r}\n\ngoal (1 subgoal):\n 1. stream_space_single X r \\<in> sets (stream_space borel) \\<and>\n    stream_space_single X r \\<inter> range X = {r}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. stream_space_single X r \\<in> sets (stream_space borel) \\<and>\n    stream_space_single X r \\<inter> range X = {r}", "by (simp add:stream_space_single_def vprop assms)"], ["proof (state)\nthis:\n  stream_space_single X r \\<in> sets (stream_space borel) \\<and>\n  stream_space_single X r \\<inter> range X = {r}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration)\nfixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> ('b::t2_space)\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  and \"r\\<in> range (proj_stoch_proc X n)\"\nshows stream_space_single_set: \"stream_space_single (proj_stoch_proc X n) r \\<in> sets (stream_space borel)\"\nand stream_space_single_preimage: \"stream_space_single (proj_stoch_proc X n) r \\<inter> range (proj_stoch_proc X n) = {r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stream_space_single (proj_stoch_proc X n) r\n    \\<in> sets (stream_space borel) &&&\n    stream_space_single (proj_stoch_proc X n) r \\<inter>\n    range (proj_stoch_proc X n) =\n    {r}", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. stream_space_single (proj_stoch_proc X n) r\n    \\<in> sets (stream_space borel)\n 2. stream_space_single (proj_stoch_proc X n) r \\<inter>\n    range (proj_stoch_proc X n) =\n    {r}", "have \"\\<exists>A\\<in>sets (stream_space borel). range (proj_stoch_proc X n) \\<inter> A = {r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A\\<in>sets (stream_space borel).\n       range (proj_stoch_proc X n) \\<inter> A = {r}", "by (simp add: assms proj_stoch_range_singleton)"], ["proof (state)\nthis:\n  \\<exists>A\\<in>sets (stream_space borel).\n     range (proj_stoch_proc X n) \\<inter> A = {r}\n\ngoal (2 subgoals):\n 1. stream_space_single (proj_stoch_proc X n) r\n    \\<in> sets (stream_space borel)\n 2. stream_space_single (proj_stoch_proc X n) r \\<inter>\n    range (proj_stoch_proc X n) =\n    {r}", "hence \"\\<exists>U. U \\<in> sets (stream_space borel) \\<and> U \\<inter> range (proj_stoch_proc X n) = {r}\""], ["proof (prove)\nusing this:\n  \\<exists>A\\<in>sets (stream_space borel).\n     range (proj_stoch_proc X n) \\<inter> A = {r}\n\ngoal (1 subgoal):\n 1. \\<exists>U.\n       U \\<in> sets (stream_space borel) \\<and>\n       U \\<inter> range (proj_stoch_proc X n) = {r}", "by auto"], ["proof (state)\nthis:\n  \\<exists>U.\n     U \\<in> sets (stream_space borel) \\<and>\n     U \\<inter> range (proj_stoch_proc X n) = {r}\n\ngoal (2 subgoals):\n 1. stream_space_single (proj_stoch_proc X n) r\n    \\<in> sets (stream_space borel)\n 2. stream_space_single (proj_stoch_proc X n) r \\<inter>\n    range (proj_stoch_proc X n) =\n    {r}", "hence a: \"stream_space_single (proj_stoch_proc X n) r \\<in> sets (stream_space borel) \\<and>\n    stream_space_single (proj_stoch_proc X n) r \\<inter> (range (proj_stoch_proc X n)) = {r}\""], ["proof (prove)\nusing this:\n  \\<exists>U.\n     U \\<in> sets (stream_space borel) \\<and>\n     U \\<inter> range (proj_stoch_proc X n) = {r}\n\ngoal (1 subgoal):\n 1. stream_space_single (proj_stoch_proc X n) r\n    \\<in> sets (stream_space borel) \\<and>\n    stream_space_single (proj_stoch_proc X n) r \\<inter>\n    range (proj_stoch_proc X n) =\n    {r}", "using stream_space_singleI[of \"proj_stoch_proc X n\"]"], ["proof (prove)\nusing this:\n  \\<exists>U.\n     U \\<in> sets (stream_space borel) \\<and>\n     U \\<inter> range (proj_stoch_proc X n) = {r}\n  \\<exists>U.\n     U \\<in> sets (stream_space borel) \\<and>\n     U \\<inter> range (proj_stoch_proc X n) = {?r} \\<Longrightarrow>\n  stream_space_single (proj_stoch_proc X n) ?r\n  \\<in> sets (stream_space borel) \\<and>\n  stream_space_single (proj_stoch_proc X n) ?r \\<inter>\n  range (proj_stoch_proc X n) =\n  {?r}\n\ngoal (1 subgoal):\n 1. stream_space_single (proj_stoch_proc X n) r\n    \\<in> sets (stream_space borel) \\<and>\n    stream_space_single (proj_stoch_proc X n) r \\<inter>\n    range (proj_stoch_proc X n) =\n    {r}", "by simp"], ["proof (state)\nthis:\n  stream_space_single (proj_stoch_proc X n) r\n  \\<in> sets (stream_space borel) \\<and>\n  stream_space_single (proj_stoch_proc X n) r \\<inter>\n  range (proj_stoch_proc X n) =\n  {r}\n\ngoal (2 subgoals):\n 1. stream_space_single (proj_stoch_proc X n) r\n    \\<in> sets (stream_space borel)\n 2. stream_space_single (proj_stoch_proc X n) r \\<inter>\n    range (proj_stoch_proc X n) =\n    {r}", "thus \"stream_space_single (proj_stoch_proc X n) r \\<in> sets (stream_space borel)\""], ["proof (prove)\nusing this:\n  stream_space_single (proj_stoch_proc X n) r\n  \\<in> sets (stream_space borel) \\<and>\n  stream_space_single (proj_stoch_proc X n) r \\<inter>\n  range (proj_stoch_proc X n) =\n  {r}\n\ngoal (1 subgoal):\n 1. stream_space_single (proj_stoch_proc X n) r\n    \\<in> sets (stream_space borel)", "by simp"], ["proof (state)\nthis:\n  stream_space_single (proj_stoch_proc X n) r\n  \\<in> sets (stream_space borel)\n\ngoal (1 subgoal):\n 1. stream_space_single (proj_stoch_proc X n) r \\<inter>\n    range (proj_stoch_proc X n) =\n    {r}", "show \"stream_space_single (proj_stoch_proc X n) r \\<inter> range (proj_stoch_proc X n) = {r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stream_space_single (proj_stoch_proc X n) r \\<inter>\n    range (proj_stoch_proc X n) =\n    {r}", "using a"], ["proof (prove)\nusing this:\n  stream_space_single (proj_stoch_proc X n) r\n  \\<in> sets (stream_space borel) \\<and>\n  stream_space_single (proj_stoch_proc X n) r \\<inter>\n  range (proj_stoch_proc X n) =\n  {r}\n\ngoal (1 subgoal):\n 1. stream_space_single (proj_stoch_proc X n) r \\<inter>\n    range (proj_stoch_proc X n) =\n    {r}", "by simp"], ["proof (state)\nthis:\n  stream_space_single (proj_stoch_proc X n) r \\<inter>\n  range (proj_stoch_proc X n) =\n  {r}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Induced filtration, relationship with filtration generated by underlying stochastic process\\<close>"], ["", "definition comp_proj_i where\n\"comp_proj_i X n i y = {z\\<in> range (proj_stoch_proc X n). snth z i = y}\""], ["", "lemma (in infinite_cts_filtration) comp_proj_i_finite:\n  fixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  shows \"finite (comp_proj_i X n i y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (comp_proj_i X n i y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (comp_proj_i X n i y)", "have \"finite (range (proj_stoch_proc X n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range (proj_stoch_proc X n))", "using proj_stoch_set_finite_range[of X] assms"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc F X \\<Longrightarrow>\n  finite (range (proj_stoch_proc X ?n))\n  borel_adapt_stoch_proc F X\n\ngoal (1 subgoal):\n 1. finite (range (proj_stoch_proc X n))", "by simp"], ["proof (state)\nthis:\n  finite (range (proj_stoch_proc X n))\n\ngoal (1 subgoal):\n 1. finite (comp_proj_i X n i y)", "thus ?thesis"], ["proof (prove)\nusing this:\n  finite (range (proj_stoch_proc X n))\n\ngoal (1 subgoal):\n 1. finite (comp_proj_i X n i y)", "unfolding comp_proj_i_def"], ["proof (prove)\nusing this:\n  finite (range (proj_stoch_proc X n))\n\ngoal (1 subgoal):\n 1. finite {z \\<in> range (proj_stoch_proc X n). z !! i = y}", "by simp"], ["proof (state)\nthis:\n  finite (comp_proj_i X n i y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stoch_proc_comp_proj_i_preimage:\n  assumes \"i \\<le> n\"\n  shows \"(X i) -` {X i x} = (\\<Union>z\\<in> comp_proj_i X n i (X i x). (proj_stoch_proc X n) -` {z})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X i -` {X i x} =\n    (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. X i -` {X i x}\n    \\<subseteq> (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n                    proj_stoch_proc X n -` {z})\n 2. (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z})\n    \\<subseteq> X i -` {X i x}", "show \"X i -` {X i x} \\<subseteq> (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X i -` {X i x}\n    \\<subseteq> (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n                    proj_stoch_proc X n -` {z})", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> X i -` {X i x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n                    proj_stoch_proc X n -` {z})", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> X i -` {X i x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n                    proj_stoch_proc X n -` {z})", "assume \"w \\<in> X i -` {X i x}\""], ["proof (state)\nthis:\n  w \\<in> X i -` {X i x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> X i -` {X i x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n                    proj_stoch_proc X n -` {z})", "hence \"X i w = X i x\""], ["proof (prove)\nusing this:\n  w \\<in> X i -` {X i x}\n\ngoal (1 subgoal):\n 1. X i w = X i x", "by simp"], ["proof (state)\nthis:\n  X i w = X i x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> X i -` {X i x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n                    proj_stoch_proc X n -` {z})", "hence \"snth (proj_stoch_proc X n w) i = X i x\""], ["proof (prove)\nusing this:\n  X i w = X i x\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w !! i = X i x", "using assms"], ["proof (prove)\nusing this:\n  X i w = X i x\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w !! i = X i x", "by (metis le_neq_implies_less proj_stoch_proc_component(1) proj_stoch_proc_component(2))"], ["proof (state)\nthis:\n  proj_stoch_proc X n w !! i = X i x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> X i -` {X i x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n                    proj_stoch_proc X n -` {z})", "hence \"(proj_stoch_proc X n w) \\<in> comp_proj_i X n i (X i x)\""], ["proof (prove)\nusing this:\n  proj_stoch_proc X n w !! i = X i x\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w \\<in> comp_proj_i X n i (X i x)", "unfolding comp_proj_i_def"], ["proof (prove)\nusing this:\n  proj_stoch_proc X n w !! i = X i x\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w\n    \\<in> {z \\<in> range (proj_stoch_proc X n). z !! i = X i x}", "by simp"], ["proof (state)\nthis:\n  proj_stoch_proc X n w \\<in> comp_proj_i X n i (X i x)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> X i -` {X i x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n                    proj_stoch_proc X n -` {z})", "moreover"], ["proof (state)\nthis:\n  proj_stoch_proc X n w \\<in> comp_proj_i X n i (X i x)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> X i -` {X i x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n                    proj_stoch_proc X n -` {z})", "have \"w\\<in> proj_stoch_proc X i -` {proj_stoch_proc X i w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> proj_stoch_proc X i -` {proj_stoch_proc X i w}", "by simp"], ["proof (state)\nthis:\n  w \\<in> proj_stoch_proc X i -` {proj_stoch_proc X i w}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> X i -` {X i x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n                    proj_stoch_proc X n -` {z})", "ultimately"], ["proof (chain)\npicking this:\n  proj_stoch_proc X n w \\<in> comp_proj_i X n i (X i x)\n  w \\<in> proj_stoch_proc X i -` {proj_stoch_proc X i w}", "show \"w\\<in> (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z})\""], ["proof (prove)\nusing this:\n  proj_stoch_proc X n w \\<in> comp_proj_i X n i (X i x)\n  w \\<in> proj_stoch_proc X i -` {proj_stoch_proc X i w}\n\ngoal (1 subgoal):\n 1. w \\<in> (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n                proj_stoch_proc X n -` {z})", "by simp"], ["proof (state)\nthis:\n  w \\<in> (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n              proj_stoch_proc X n -` {z})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  X i -` {X i x}\n  \\<subseteq> (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n                  proj_stoch_proc X n -` {z})\n\ngoal (1 subgoal):\n 1. (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z})\n    \\<subseteq> X i -` {X i x}", "show \"(\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z}) \\<subseteq> X i -` {X i x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z})\n    \\<subseteq> X i -` {X i x}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z})\n    \\<subseteq> X i -` {X i x}", "have \"\\<forall>z\\<in> comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z} \\<subseteq> X i -` {X i x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>comp_proj_i X n i (X i x).\n       proj_stoch_proc X n -` {z} \\<subseteq> X i -` {X i x}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> comp_proj_i X n i (X i x) \\<Longrightarrow>\n       proj_stoch_proc X n -` {z} \\<subseteq> X i -` {X i x}", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> comp_proj_i X n i (X i x) \\<Longrightarrow>\n       proj_stoch_proc X n -` {z} \\<subseteq> X i -` {X i x}", "assume \"z\\<in> comp_proj_i X n i (X i x)\""], ["proof (state)\nthis:\n  z \\<in> comp_proj_i X n i (X i x)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> comp_proj_i X n i (X i x) \\<Longrightarrow>\n       proj_stoch_proc X n -` {z} \\<subseteq> X i -` {X i x}", "hence \"z\\<in> range (proj_stoch_proc X n)\" and \"snth z i = X i x\""], ["proof (prove)\nusing this:\n  z \\<in> comp_proj_i X n i (X i x)\n\ngoal (1 subgoal):\n 1. z \\<in> range (proj_stoch_proc X n) &&& z !! i = X i x", "unfolding comp_proj_i_def"], ["proof (prove)\nusing this:\n  z \\<in> {z \\<in> range (proj_stoch_proc X n). z !! i = X i x}\n\ngoal (1 subgoal):\n 1. z \\<in> range (proj_stoch_proc X n) &&& z !! i = X i x", "by auto"], ["proof (state)\nthis:\n  z \\<in> range (proj_stoch_proc X n)\n  z !! i = X i x\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> comp_proj_i X n i (X i x) \\<Longrightarrow>\n       proj_stoch_proc X n -` {z} \\<subseteq> X i -` {X i x}", "show \"proj_stoch_proc X n -` {z} \\<subseteq> X i -` {X i x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {z} \\<subseteq> X i -` {X i x}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -` {z} \\<Longrightarrow>\n       xa \\<in> X i -` {X i x}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -` {z} \\<Longrightarrow>\n       xa \\<in> X i -` {X i x}", "assume \"w\\<in>proj_stoch_proc X n -` {z}\""], ["proof (state)\nthis:\n  w \\<in> proj_stoch_proc X n -` {z}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -` {z} \\<Longrightarrow>\n       xa \\<in> X i -` {X i x}", "have \"X i w = snth (proj_stoch_proc X n w) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X i w = proj_stoch_proc X n w !! i", "using assms"], ["proof (prove)\nusing this:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. X i w = proj_stoch_proc X n w !! i", "by (metis le_neq_implies_less proj_stoch_proc_component(1) proj_stoch_proc_component(2))"], ["proof (state)\nthis:\n  X i w = proj_stoch_proc X n w !! i\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -` {z} \\<Longrightarrow>\n       xa \\<in> X i -` {X i x}", "also"], ["proof (state)\nthis:\n  X i w = proj_stoch_proc X n w !! i\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -` {z} \\<Longrightarrow>\n       xa \\<in> X i -` {X i x}", "have \"... = snth z i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w !! i = z !! i", "using \\<open>w\\<in>proj_stoch_proc X n -` {z}\\<close>"], ["proof (prove)\nusing this:\n  w \\<in> proj_stoch_proc X n -` {z}\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w !! i = z !! i", "by auto"], ["proof (state)\nthis:\n  proj_stoch_proc X n w !! i = z !! i\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -` {z} \\<Longrightarrow>\n       xa \\<in> X i -` {X i x}", "also"], ["proof (state)\nthis:\n  proj_stoch_proc X n w !! i = z !! i\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -` {z} \\<Longrightarrow>\n       xa \\<in> X i -` {X i x}", "have \"... = X i x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z !! i = X i x", "using \\<open>snth z i = X i x\\<close>"], ["proof (prove)\nusing this:\n  z !! i = X i x\n\ngoal (1 subgoal):\n 1. z !! i = X i x", "by simp"], ["proof (state)\nthis:\n  z !! i = X i x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -` {z} \\<Longrightarrow>\n       xa \\<in> X i -` {X i x}", "finally"], ["proof (chain)\npicking this:\n  X i w = X i x", "have \"X i w = X i x\""], ["proof (prove)\nusing this:\n  X i w = X i x\n\ngoal (1 subgoal):\n 1. X i w = X i x", "."], ["proof (state)\nthis:\n  X i w = X i x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -` {z} \\<Longrightarrow>\n       xa \\<in> X i -` {X i x}", "thus \"w\\<in> X i -` {X i x}\""], ["proof (prove)\nusing this:\n  X i w = X i x\n\ngoal (1 subgoal):\n 1. w \\<in> X i -` {X i x}", "by simp"], ["proof (state)\nthis:\n  w \\<in> X i -` {X i x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  proj_stoch_proc X n -` {z} \\<subseteq> X i -` {X i x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>z\\<in>comp_proj_i X n i (X i x).\n     proj_stoch_proc X n -` {z} \\<subseteq> X i -` {X i x}\n\ngoal (1 subgoal):\n 1. (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z})\n    \\<subseteq> X i -` {X i x}", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>z\\<in>comp_proj_i X n i (X i x).\n     proj_stoch_proc X n -` {z} \\<subseteq> X i -` {X i x}\n\ngoal (1 subgoal):\n 1. (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z})\n    \\<subseteq> X i -` {X i x}", "by auto"], ["proof (state)\nthis:\n  (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z})\n  \\<subseteq> X i -` {X i x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z})\n  \\<subseteq> X i -` {X i x}\n\ngoal:\nNo subgoals!", "qed"], ["", "(* comp_proj to remove? *)"], ["", "definition comp_proj where\n  \"comp_proj X n y = {z\\<in> range (proj_stoch_proc X n). snth z n = y}\""], ["", "lemma (in infinite_cts_filtration) comp_proj_finite:\n  fixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> 'b::{t0_space}\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  shows \"finite (comp_proj X n y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (comp_proj X n y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (comp_proj X n y)", "have \"finite (range (proj_stoch_proc X n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range (proj_stoch_proc X n))", "using proj_stoch_set_finite_range[of X] assms"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc F X \\<Longrightarrow>\n  finite (range (proj_stoch_proc X ?n))\n  borel_adapt_stoch_proc F X\n\ngoal (1 subgoal):\n 1. finite (range (proj_stoch_proc X n))", "by simp"], ["proof (state)\nthis:\n  finite (range (proj_stoch_proc X n))\n\ngoal (1 subgoal):\n 1. finite (comp_proj X n y)", "thus ?thesis"], ["proof (prove)\nusing this:\n  finite (range (proj_stoch_proc X n))\n\ngoal (1 subgoal):\n 1. finite (comp_proj X n y)", "unfolding comp_proj_def"], ["proof (prove)\nusing this:\n  finite (range (proj_stoch_proc X n))\n\ngoal (1 subgoal):\n 1. finite {z \\<in> range (proj_stoch_proc X n). z !! n = y}", "by simp"], ["proof (state)\nthis:\n  finite (comp_proj X n y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stoch_proc_comp_proj_preimage:\n  shows \"(X n) -` {X n x} = (\\<Union>z\\<in> comp_proj X n (X n x). (proj_stoch_proc X n) -` {z})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X n -` {X n x} =\n    (\\<Union>z\\<in>comp_proj X n (X n x). proj_stoch_proc X n -` {z})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. X n -` {X n x}\n    \\<subseteq> (\\<Union>z\\<in>comp_proj X n (X n x).\n                    proj_stoch_proc X n -` {z})\n 2. (\\<Union>z\\<in>comp_proj X n (X n x). proj_stoch_proc X n -` {z})\n    \\<subseteq> X n -` {X n x}", "show \"X n -` {X n x} \\<subseteq> (\\<Union>z\\<in>comp_proj X n (X n x). proj_stoch_proc X n -` {z})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X n -` {X n x}\n    \\<subseteq> (\\<Union>z\\<in>comp_proj X n (X n x).\n                    proj_stoch_proc X n -` {z})", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> X n -` {X n x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>z\\<in>comp_proj X n (X n x).\n                    proj_stoch_proc X n -` {z})", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> X n -` {X n x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>z\\<in>comp_proj X n (X n x).\n                    proj_stoch_proc X n -` {z})", "assume \"w \\<in> X n -` {X n x}\""], ["proof (state)\nthis:\n  w \\<in> X n -` {X n x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> X n -` {X n x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>z\\<in>comp_proj X n (X n x).\n                    proj_stoch_proc X n -` {z})", "hence \"X n w = X n x\""], ["proof (prove)\nusing this:\n  w \\<in> X n -` {X n x}\n\ngoal (1 subgoal):\n 1. X n w = X n x", "by simp"], ["proof (state)\nthis:\n  X n w = X n x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> X n -` {X n x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>z\\<in>comp_proj X n (X n x).\n                    proj_stoch_proc X n -` {z})", "hence \"snth (proj_stoch_proc X n w) n = X n x\""], ["proof (prove)\nusing this:\n  X n w = X n x\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w !! n = X n x", "by (simp add: proj_stoch_proc_component(2))"], ["proof (state)\nthis:\n  proj_stoch_proc X n w !! n = X n x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> X n -` {X n x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>z\\<in>comp_proj X n (X n x).\n                    proj_stoch_proc X n -` {z})", "hence \"(proj_stoch_proc X n w) \\<in> comp_proj X n (X n x)\""], ["proof (prove)\nusing this:\n  proj_stoch_proc X n w !! n = X n x\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w \\<in> comp_proj X n (X n x)", "unfolding comp_proj_def"], ["proof (prove)\nusing this:\n  proj_stoch_proc X n w !! n = X n x\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w\n    \\<in> {z \\<in> range (proj_stoch_proc X n). z !! n = X n x}", "by simp"], ["proof (state)\nthis:\n  proj_stoch_proc X n w \\<in> comp_proj X n (X n x)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> X n -` {X n x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>z\\<in>comp_proj X n (X n x).\n                    proj_stoch_proc X n -` {z})", "moreover"], ["proof (state)\nthis:\n  proj_stoch_proc X n w \\<in> comp_proj X n (X n x)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> X n -` {X n x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>z\\<in>comp_proj X n (X n x).\n                    proj_stoch_proc X n -` {z})", "have \"w\\<in> proj_stoch_proc X n -` {proj_stoch_proc X n w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n w}", "by simp"], ["proof (state)\nthis:\n  w \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n w}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> X n -` {X n x} \\<Longrightarrow>\n       xa \\<in> (\\<Union>z\\<in>comp_proj X n (X n x).\n                    proj_stoch_proc X n -` {z})", "ultimately"], ["proof (chain)\npicking this:\n  proj_stoch_proc X n w \\<in> comp_proj X n (X n x)\n  w \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n w}", "show \"w\\<in> (\\<Union>z\\<in>comp_proj X n (X n x). proj_stoch_proc X n -` {z})\""], ["proof (prove)\nusing this:\n  proj_stoch_proc X n w \\<in> comp_proj X n (X n x)\n  w \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n w}\n\ngoal (1 subgoal):\n 1. w \\<in> (\\<Union>z\\<in>comp_proj X n (X n x).\n                proj_stoch_proc X n -` {z})", "by simp"], ["proof (state)\nthis:\n  w \\<in> (\\<Union>z\\<in>comp_proj X n (X n x). proj_stoch_proc X n -` {z})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  X n -` {X n x}\n  \\<subseteq> (\\<Union>z\\<in>comp_proj X n (X n x).\n                  proj_stoch_proc X n -` {z})\n\ngoal (1 subgoal):\n 1. (\\<Union>z\\<in>comp_proj X n (X n x). proj_stoch_proc X n -` {z})\n    \\<subseteq> X n -` {X n x}", "show \"(\\<Union>z\\<in>comp_proj X n (X n x). proj_stoch_proc X n -` {z}) \\<subseteq> X n -` {X n x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>z\\<in>comp_proj X n (X n x). proj_stoch_proc X n -` {z})\n    \\<subseteq> X n -` {X n x}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union>z\\<in>comp_proj X n (X n x). proj_stoch_proc X n -` {z})\n    \\<subseteq> X n -` {X n x}", "have \"\\<forall>z\\<in> comp_proj X n (X n x). proj_stoch_proc X n -` {z} \\<subseteq> X n -` {X n x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>comp_proj X n (X n x).\n       proj_stoch_proc X n -` {z} \\<subseteq> X n -` {X n x}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> comp_proj X n (X n x) \\<Longrightarrow>\n       proj_stoch_proc X n -` {z} \\<subseteq> X n -` {X n x}", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> comp_proj X n (X n x) \\<Longrightarrow>\n       proj_stoch_proc X n -` {z} \\<subseteq> X n -` {X n x}", "assume \"z\\<in> comp_proj X n (X n x)\""], ["proof (state)\nthis:\n  z \\<in> comp_proj X n (X n x)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> comp_proj X n (X n x) \\<Longrightarrow>\n       proj_stoch_proc X n -` {z} \\<subseteq> X n -` {X n x}", "hence \"z\\<in> range (proj_stoch_proc X n)\" and \"snth z n = X n x\""], ["proof (prove)\nusing this:\n  z \\<in> comp_proj X n (X n x)\n\ngoal (1 subgoal):\n 1. z \\<in> range (proj_stoch_proc X n) &&& z !! n = X n x", "unfolding comp_proj_def"], ["proof (prove)\nusing this:\n  z \\<in> {z \\<in> range (proj_stoch_proc X n). z !! n = X n x}\n\ngoal (1 subgoal):\n 1. z \\<in> range (proj_stoch_proc X n) &&& z !! n = X n x", "by auto"], ["proof (state)\nthis:\n  z \\<in> range (proj_stoch_proc X n)\n  z !! n = X n x\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> comp_proj X n (X n x) \\<Longrightarrow>\n       proj_stoch_proc X n -` {z} \\<subseteq> X n -` {X n x}", "show \"proj_stoch_proc X n -` {z} \\<subseteq> X n -` {X n x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {z} \\<subseteq> X n -` {X n x}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -` {z} \\<Longrightarrow>\n       xa \\<in> X n -` {X n x}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -` {z} \\<Longrightarrow>\n       xa \\<in> X n -` {X n x}", "assume \"w\\<in>proj_stoch_proc X n -` {z}\""], ["proof (state)\nthis:\n  w \\<in> proj_stoch_proc X n -` {z}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -` {z} \\<Longrightarrow>\n       xa \\<in> X n -` {X n x}", "have \"X n w = snth (proj_stoch_proc X n w) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X n w = proj_stoch_proc X n w !! n", "by (simp add: proj_stoch_proc_component(2))"], ["proof (state)\nthis:\n  X n w = proj_stoch_proc X n w !! n\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -` {z} \\<Longrightarrow>\n       xa \\<in> X n -` {X n x}", "also"], ["proof (state)\nthis:\n  X n w = proj_stoch_proc X n w !! n\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -` {z} \\<Longrightarrow>\n       xa \\<in> X n -` {X n x}", "have \"... = snth z n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w !! n = z !! n", "using \\<open>w\\<in>proj_stoch_proc X n -` {z}\\<close>"], ["proof (prove)\nusing this:\n  w \\<in> proj_stoch_proc X n -` {z}\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n w !! n = z !! n", "by auto"], ["proof (state)\nthis:\n  proj_stoch_proc X n w !! n = z !! n\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -` {z} \\<Longrightarrow>\n       xa \\<in> X n -` {X n x}", "also"], ["proof (state)\nthis:\n  proj_stoch_proc X n w !! n = z !! n\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -` {z} \\<Longrightarrow>\n       xa \\<in> X n -` {X n x}", "have \"... = X n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z !! n = X n x", "using \\<open>snth z n = X n x\\<close>"], ["proof (prove)\nusing this:\n  z !! n = X n x\n\ngoal (1 subgoal):\n 1. z !! n = X n x", "by simp"], ["proof (state)\nthis:\n  z !! n = X n x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -` {z} \\<Longrightarrow>\n       xa \\<in> X n -` {X n x}", "finally"], ["proof (chain)\npicking this:\n  X n w = X n x", "have \"X n w = X n x\""], ["proof (prove)\nusing this:\n  X n w = X n x\n\ngoal (1 subgoal):\n 1. X n w = X n x", "."], ["proof (state)\nthis:\n  X n w = X n x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -` {z} \\<Longrightarrow>\n       xa \\<in> X n -` {X n x}", "thus \"w\\<in> X n -` {X n x}\""], ["proof (prove)\nusing this:\n  X n w = X n x\n\ngoal (1 subgoal):\n 1. w \\<in> X n -` {X n x}", "by simp"], ["proof (state)\nthis:\n  w \\<in> X n -` {X n x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  proj_stoch_proc X n -` {z} \\<subseteq> X n -` {X n x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>z\\<in>comp_proj X n (X n x).\n     proj_stoch_proc X n -` {z} \\<subseteq> X n -` {X n x}\n\ngoal (1 subgoal):\n 1. (\\<Union>z\\<in>comp_proj X n (X n x). proj_stoch_proc X n -` {z})\n    \\<subseteq> X n -` {X n x}", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>z\\<in>comp_proj X n (X n x).\n     proj_stoch_proc X n -` {z} \\<subseteq> X n -` {X n x}\n\ngoal (1 subgoal):\n 1. (\\<Union>z\\<in>comp_proj X n (X n x). proj_stoch_proc X n -` {z})\n    \\<subseteq> X n -` {X n x}", "by auto"], ["proof (state)\nthis:\n  (\\<Union>z\\<in>comp_proj X n (X n x). proj_stoch_proc X n -` {z})\n  \\<subseteq> X n -` {X n x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Union>z\\<in>comp_proj X n (X n x). proj_stoch_proc X n -` {z})\n  \\<subseteq> X n -` {X n x}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma comp_proj_stoch_proc_preimage:\n  shows \"(proj_stoch_proc X n) -` {proj_stoch_proc X n x} = (\\<Inter> i\\<in> {m. m\\<le>n}. (X i) -`{X i x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n x} =\n    (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n x}\n    \\<subseteq> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\n 2. (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\n    \\<subseteq> proj_stoch_proc X n -` {proj_stoch_proc X n x}", "show \"proj_stoch_proc X n -` {proj_stoch_proc X n x} \\<subseteq> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n x}\n    \\<subseteq> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -`\n                {proj_stoch_proc X n x} \\<Longrightarrow>\n       xa \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -`\n                {proj_stoch_proc X n x} \\<Longrightarrow>\n       xa \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})", "assume \"z\\<in> proj_stoch_proc X n -` {proj_stoch_proc X n x}\""], ["proof (state)\nthis:\n  z \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -`\n                {proj_stoch_proc X n x} \\<Longrightarrow>\n       xa \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})", "hence \"proj_stoch_proc X n z = proj_stoch_proc X n x\""], ["proof (prove)\nusing this:\n  z \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n x}\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n z = proj_stoch_proc X n x", "by simp"], ["proof (state)\nthis:\n  proj_stoch_proc X n z = proj_stoch_proc X n x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -`\n                {proj_stoch_proc X n x} \\<Longrightarrow>\n       xa \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})", "hence \"\\<forall>i\\<le>n. X i z = X i x\""], ["proof (prove)\nusing this:\n  proj_stoch_proc X n z = proj_stoch_proc X n x\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n. X i z = X i x", "using proj_stoch_proc_component"], ["proof (prove)\nusing this:\n  proj_stoch_proc X n z = proj_stoch_proc X n x\n  ?k < ?n \\<Longrightarrow> proj_stoch_proc ?f ?n ?w !! ?k = ?f ?k ?w\n  ?n \\<le> ?k \\<Longrightarrow> proj_stoch_proc ?f ?n ?w !! ?k = ?f ?n ?w\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n. X i z = X i x", "by (metis less_le)"], ["proof (state)\nthis:\n  \\<forall>i\\<le>n. X i z = X i x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -`\n                {proj_stoch_proc X n x} \\<Longrightarrow>\n       xa \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})", "hence \"\\<forall>i\\<le>n. z\\<in> X i -`{X i x}\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n. X i z = X i x\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n. z \\<in> X i -` {X i x}", "by simp"], ["proof (state)\nthis:\n  \\<forall>i\\<le>n. z \\<in> X i -` {X i x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> proj_stoch_proc X n -`\n                {proj_stoch_proc X n x} \\<Longrightarrow>\n       xa \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})", "thus \"z\\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n. z \\<in> X i -` {X i x}\n\ngoal (1 subgoal):\n 1. z \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})", "by simp"], ["proof (state)\nthis:\n  z \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  proj_stoch_proc X n -` {proj_stoch_proc X n x}\n  \\<subseteq> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\n\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\n    \\<subseteq> proj_stoch_proc X n -` {proj_stoch_proc X n x}", "show \"(\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x}) \\<subseteq> proj_stoch_proc X n -` {proj_stoch_proc X n x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\n    \\<subseteq> proj_stoch_proc X n -` {proj_stoch_proc X n x}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}.\n                    X i -` {X i x}) \\<Longrightarrow>\n       xa \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n x}", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}.\n                    X i -` {X i x}) \\<Longrightarrow>\n       xa \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n x}", "assume \"z\\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\""], ["proof (state)\nthis:\n  z \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}.\n                    X i -` {X i x}) \\<Longrightarrow>\n       xa \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n x}", "hence \"\\<forall>i\\<le> n. X i z = X i x\""], ["proof (prove)\nusing this:\n  z \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n. X i z = X i x", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<le>n. X i z = X i x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}.\n                    X i -` {X i x}) \\<Longrightarrow>\n       xa \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n x}", "hence \"\\<forall>i. snth (proj_stoch_proc X n z) i = snth (proj_stoch_proc X n x) i\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n. X i z = X i x\n\ngoal (1 subgoal):\n 1. \\<forall>i. proj_stoch_proc X n z !! i = proj_stoch_proc X n x !! i", "using proj_stoch_proc_component"], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n. X i z = X i x\n  ?k < ?n \\<Longrightarrow> proj_stoch_proc ?f ?n ?w !! ?k = ?f ?k ?w\n  ?n \\<le> ?k \\<Longrightarrow> proj_stoch_proc ?f ?n ?w !! ?k = ?f ?n ?w\n\ngoal (1 subgoal):\n 1. \\<forall>i. proj_stoch_proc X n z !! i = proj_stoch_proc X n x !! i", "by (metis nat_le_linear not_less)"], ["proof (state)\nthis:\n  \\<forall>i. proj_stoch_proc X n z !! i = proj_stoch_proc X n x !! i\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}.\n                    X i -` {X i x}) \\<Longrightarrow>\n       xa \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n x}", "hence \"proj_stoch_proc X n z = proj_stoch_proc X n x\""], ["proof (prove)\nusing this:\n  \\<forall>i. proj_stoch_proc X n z !! i = proj_stoch_proc X n x !! i\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n z = proj_stoch_proc X n x", "using diff_streams_only_if"], ["proof (prove)\nusing this:\n  \\<forall>i. proj_stoch_proc X n z !! i = proj_stoch_proc X n x !! i\n  ?w \\<noteq> ?x \\<Longrightarrow> \\<exists>n. ?w !! n \\<noteq> ?x !! n\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n z = proj_stoch_proc X n x", "by auto"], ["proof (state)\nthis:\n  proj_stoch_proc X n z = proj_stoch_proc X n x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (\\<Inter>i\\<in>{m. m \\<le> n}.\n                    X i -` {X i x}) \\<Longrightarrow>\n       xa \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n x}", "thus \"z\\<in> proj_stoch_proc X n -` {proj_stoch_proc X n x}\""], ["proof (prove)\nusing this:\n  proj_stoch_proc X n z = proj_stoch_proc X n x\n\ngoal (1 subgoal):\n 1. z \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n x}", "by simp"], ["proof (state)\nthis:\n  z \\<in> proj_stoch_proc X n -` {proj_stoch_proc X n x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\n  \\<subseteq> proj_stoch_proc X n -` {proj_stoch_proc X n x}\n\ngoal:\nNo subgoals!", "qed"], ["", "definition  stoch_proc_filt where\n  \"stoch_proc_filt M X N (n::nat) = gen_subalgebra M (sigma_sets (space M) (\\<Union> i\\<in> {m. m\\<le> n}. {(X i -`A) \\<inter> (space M) | A. A\\<in> sets N }))\""], ["", "lemma  stoch_proc_filt_space:\n  shows \"space (stoch_proc_filt M X N n) = space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space (stoch_proc_filt M X N n) = space M", "unfolding stoch_proc_filt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. space\n     (gen_subalgebra M\n       (sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets N}))) =\n    space M", "by (simp add:gen_subalgebra_space)"], ["", "lemma  stoch_proc_filt_sets:\nassumes \"\\<And>i. i \\<le> n\\<Longrightarrow> (X i) \\<in> measurable M N\"\n  shows \"sets (stoch_proc_filt M X N n) = (sigma_sets (space M) (\\<Union> i\\<in> {m. m\\<le> n}. {(X i -`A) \\<inter> (space M) | A. A\\<in> sets N }))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X N n) =\n    sigma_sets (space M)\n     (\\<Union>i\\<in>{m. m \\<le> n}.\n         {X i -` A \\<inter> space M |A. A \\<in> sets N})", "unfolding stoch_proc_filt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sets\n     (gen_subalgebra M\n       (sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets N}))) =\n    sigma_sets (space M)\n     (\\<Union>i\\<in>{m. m \\<le> n}.\n         {X i -` A \\<inter> space M |A. A \\<in> sets N})", "proof (rule gen_subalgebra_sigma_sets)"], ["proof (state)\ngoal (2 subgoals):\n 1. sigma_sets (space M)\n     (\\<Union>i\\<in>{m. m \\<le> n}.\n         {X i -` A \\<inter> space M |A. A \\<in> sets N})\n    \\<subseteq> sets M\n 2. sigma_algebra (space M)\n     (sigma_sets (space M)\n       (\\<Union>i\\<in>{m. m \\<le> n}.\n           {X i -` A \\<inter> space M |A. A \\<in> sets N}))", "show \"sigma_algebra (space M) (sigma_sets (space M) (\\<Union>i\\<in>{m. m \\<le> n}. {X i -` A \\<inter> space M |A. A \\<in> sets N}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_algebra (space M)\n     (sigma_sets (space M)\n       (\\<Union>i\\<in>{m. m \\<le> n}.\n           {X i -` A \\<inter> space M |A. A \\<in> sets N}))", "using assms"], ["proof (prove)\nusing this:\n  ?i \\<le> n \\<Longrightarrow> X ?i \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. sigma_algebra (space M)\n     (sigma_sets (space M)\n       (\\<Union>i\\<in>{m. m \\<le> n}.\n           {X i -` A \\<inter> space M |A. A \\<in> sets N}))", "by (simp add: adapt_sigma_sets)"], ["proof (state)\nthis:\n  sigma_algebra (space M)\n   (sigma_sets (space M)\n     (\\<Union>i\\<in>{m. m \\<le> n}.\n         {X i -` A \\<inter> space M |A. A \\<in> sets N}))\n\ngoal (1 subgoal):\n 1. sigma_sets (space M)\n     (\\<Union>i\\<in>{m. m \\<le> n}.\n         {X i -` A \\<inter> space M |A. A \\<in> sets N})\n    \\<subseteq> sets M", "show \"sigma_sets (space M) (\\<Union>i\\<in>{m. m \\<le> n}. {X i -` A \\<inter> space M |A. A \\<in> sets N}) \\<subseteq> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_sets (space M)\n     (\\<Union>i\\<in>{m. m \\<le> n}.\n         {X i -` A \\<inter> space M |A. A \\<in> sets N})\n    \\<subseteq> sets M", "proof (rule sigma_algebra.sigma_sets_subset, rule Sigma_Algebra.sets.sigma_algebra_axioms, rule UN_subset_iff[THEN iffD2], intro ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       {X i -` A \\<inter> space M |A. A \\<in> sets N} \\<subseteq> sets M", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       {X i -` A \\<inter> space M |A. A \\<in> sets N} \\<subseteq> sets M", "assume \"i\\<in> {m. m\\<le>n}\""], ["proof (state)\nthis:\n  i \\<in> {m. m \\<le> n}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       {X i -` A \\<inter> space M |A. A \\<in> sets N} \\<subseteq> sets M", "thus \"{X i -` A \\<inter> space M |A. A \\<in> sets N} \\<subseteq> sets M\""], ["proof (prove)\nusing this:\n  i \\<in> {m. m \\<le> n}\n\ngoal (1 subgoal):\n 1. {X i -` A \\<inter> space M |A. A \\<in> sets N} \\<subseteq> sets M", "using assms measurable_sets"], ["proof (prove)\nusing this:\n  i \\<in> {m. m \\<le> n}\n  ?i \\<le> n \\<Longrightarrow> X ?i \\<in> M \\<rightarrow>\\<^sub>M N\n  \\<lbrakk>?f \\<in> ?M \\<rightarrow>\\<^sub>M ?A; ?S \\<in> sets ?A\\<rbrakk>\n  \\<Longrightarrow> ?f -` ?S \\<inter> space ?M \\<in> sets ?M\n\ngoal (1 subgoal):\n 1. {X i -` A \\<inter> space M |A. A \\<in> sets N} \\<subseteq> sets M", "by blast"], ["proof (state)\nthis:\n  {X i -` A \\<inter> space M |A. A \\<in> sets N} \\<subseteq> sets M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets N})\n  \\<subseteq> sets M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stoch_proc_filt_adapt:\n  assumes \"\\<And>n. X n \\<in> measurable M N\"\n  shows \"adapt_stoch_proc (stoch_proc_filt M X N) X N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. adapt_stoch_proc (stoch_proc_filt M X N) X N", "unfolding adapt_stoch_proc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t. X t \\<in> stoch_proc_filt M X N t \\<rightarrow>\\<^sub>M N", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t. X t \\<in> stoch_proc_filt M X N t \\<rightarrow>\\<^sub>M N", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t. X t \\<in> stoch_proc_filt M X N t \\<rightarrow>\\<^sub>M N", "show \"X m \\<in> measurable (stoch_proc_filt M X N m) N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X m \\<in> stoch_proc_filt M X N m \\<rightarrow>\\<^sub>M N", "unfolding measurable_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. X m\n    \\<in> {f \\<in> space (stoch_proc_filt M X N m) \\<rightarrow> space N.\n           \\<forall>y\\<in>sets N.\n              f -` y \\<inter> space (stoch_proc_filt M X N m)\n              \\<in> sets (stoch_proc_filt M X N m)}", "proof ((intro CollectI), (intro conjI))"], ["proof (state)\ngoal (2 subgoals):\n 1. X m \\<in> space (stoch_proc_filt M X N m) \\<rightarrow> space N\n 2. \\<forall>y\\<in>sets N.\n       X m -` y \\<inter> space (stoch_proc_filt M X N m)\n       \\<in> sets (stoch_proc_filt M X N m)", "have \"space (stoch_proc_filt M X N m) = space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space (stoch_proc_filt M X N m) = space M", "by (simp add: stoch_proc_filt_space)"], ["proof (state)\nthis:\n  space (stoch_proc_filt M X N m) = space M\n\ngoal (2 subgoals):\n 1. X m \\<in> space (stoch_proc_filt M X N m) \\<rightarrow> space N\n 2. \\<forall>y\\<in>sets N.\n       X m -` y \\<inter> space (stoch_proc_filt M X N m)\n       \\<in> sets (stoch_proc_filt M X N m)", "thus \"X m \\<in> space (stoch_proc_filt M X N m) \\<rightarrow> space N\""], ["proof (prove)\nusing this:\n  space (stoch_proc_filt M X N m) = space M\n\ngoal (1 subgoal):\n 1. X m \\<in> space (stoch_proc_filt M X N m) \\<rightarrow> space N", "using assms"], ["proof (prove)\nusing this:\n  space (stoch_proc_filt M X N m) = space M\n  X ?n \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. X m \\<in> space (stoch_proc_filt M X N m) \\<rightarrow> space N", "unfolding measurable_def"], ["proof (prove)\nusing this:\n  space (stoch_proc_filt M X N m) = space M\n  X ?n\n  \\<in> {f \\<in> space M \\<rightarrow> space N.\n         \\<forall>y\\<in>sets N. f -` y \\<inter> space M \\<in> sets M}\n\ngoal (1 subgoal):\n 1. X m \\<in> space (stoch_proc_filt M X N m) \\<rightarrow> space N", "by simp"], ["proof (state)\nthis:\n  X m \\<in> space (stoch_proc_filt M X N m) \\<rightarrow> space N\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>sets N.\n       X m -` y \\<inter> space (stoch_proc_filt M X N m)\n       \\<in> sets (stoch_proc_filt M X N m)", "show \"\\<forall>y\\<in>sets N. X m -` y \\<inter> space (stoch_proc_filt M X N m) \\<in> sets (stoch_proc_filt M X N m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>sets N.\n       X m -` y \\<inter> space (stoch_proc_filt M X N m)\n       \\<in> sets (stoch_proc_filt M X N m)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets N \\<Longrightarrow>\n       X m -` y \\<inter> space (stoch_proc_filt M X N m)\n       \\<in> sets (stoch_proc_filt M X N m)", "fix B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets N \\<Longrightarrow>\n       X m -` y \\<inter> space (stoch_proc_filt M X N m)\n       \\<in> sets (stoch_proc_filt M X N m)", "assume \"B\\<in> sets N\""], ["proof (state)\nthis:\n  B \\<in> sets N\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets N \\<Longrightarrow>\n       X m -` y \\<inter> space (stoch_proc_filt M X N m)\n       \\<in> sets (stoch_proc_filt M X N m)", "have \"X m -` B \\<inter> space (stoch_proc_filt M X N m) = X m -`B \\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X m -` B \\<inter> space (stoch_proc_filt M X N m) =\n    X m -` B \\<inter> space M", "using \\<open>space (stoch_proc_filt M X N m) = space M\\<close>"], ["proof (prove)\nusing this:\n  space (stoch_proc_filt M X N m) = space M\n\ngoal (1 subgoal):\n 1. X m -` B \\<inter> space (stoch_proc_filt M X N m) =\n    X m -` B \\<inter> space M", "by simp"], ["proof (state)\nthis:\n  X m -` B \\<inter> space (stoch_proc_filt M X N m) =\n  X m -` B \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets N \\<Longrightarrow>\n       X m -` y \\<inter> space (stoch_proc_filt M X N m)\n       \\<in> sets (stoch_proc_filt M X N m)", "also"], ["proof (state)\nthis:\n  X m -` B \\<inter> space (stoch_proc_filt M X N m) =\n  X m -` B \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets N \\<Longrightarrow>\n       X m -` y \\<inter> space (stoch_proc_filt M X N m)\n       \\<in> sets (stoch_proc_filt M X N m)", "have \"... \\<in> (\\<Union> i\\<in> {p. p\\<le> m}. {(X i -`A) \\<inter> (space M) | A. A\\<in> sets N })\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X m -` B \\<inter> space M\n    \\<in> (\\<Union>i\\<in>{p. p \\<le> m}.\n              {X i -` A \\<inter> space M |A. A \\<in> sets N})", "using \\<open>B\\<in> sets N\\<close>"], ["proof (prove)\nusing this:\n  B \\<in> sets N\n\ngoal (1 subgoal):\n 1. X m -` B \\<inter> space M\n    \\<in> (\\<Union>i\\<in>{p. p \\<le> m}.\n              {X i -` A \\<inter> space M |A. A \\<in> sets N})", "by auto"], ["proof (state)\nthis:\n  X m -` B \\<inter> space M\n  \\<in> (\\<Union>i\\<in>{p. p \\<le> m}.\n            {X i -` A \\<inter> space M |A. A \\<in> sets N})\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets N \\<Longrightarrow>\n       X m -` y \\<inter> space (stoch_proc_filt M X N m)\n       \\<in> sets (stoch_proc_filt M X N m)", "also"], ["proof (state)\nthis:\n  X m -` B \\<inter> space M\n  \\<in> (\\<Union>i\\<in>{p. p \\<le> m}.\n            {X i -` A \\<inter> space M |A. A \\<in> sets N})\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets N \\<Longrightarrow>\n       X m -` y \\<inter> space (stoch_proc_filt M X N m)\n       \\<in> sets (stoch_proc_filt M X N m)", "have \"... \\<subseteq> sigma_sets (space M) (\\<Union> i\\<in> {p. p\\<le> m}. {(X i -`A) \\<inter> (space M) | A. A\\<in> sets N })\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>i\\<in>{p. p \\<le> m}.\n        {X i -` A \\<inter> space M |A. A \\<in> sets N})\n    \\<subseteq> sigma_sets (space M)\n                 (\\<Union>i\\<in>{p. p \\<le> m}.\n                     {X i -` A \\<inter> space M |A. A \\<in> sets N})", "by auto"], ["proof (state)\nthis:\n  (\\<Union>i\\<in>{p. p \\<le> m}.\n      {X i -` A \\<inter> space M |A. A \\<in> sets N})\n  \\<subseteq> sigma_sets (space M)\n               (\\<Union>i\\<in>{p. p \\<le> m}.\n                   {X i -` A \\<inter> space M |A. A \\<in> sets N})\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets N \\<Longrightarrow>\n       X m -` y \\<inter> space (stoch_proc_filt M X N m)\n       \\<in> sets (stoch_proc_filt M X N m)", "also"], ["proof (state)\nthis:\n  (\\<Union>i\\<in>{p. p \\<le> m}.\n      {X i -` A \\<inter> space M |A. A \\<in> sets N})\n  \\<subseteq> sigma_sets (space M)\n               (\\<Union>i\\<in>{p. p \\<le> m}.\n                   {X i -` A \\<inter> space M |A. A \\<in> sets N})\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets N \\<Longrightarrow>\n       X m -` y \\<inter> space (stoch_proc_filt M X N m)\n       \\<in> sets (stoch_proc_filt M X N m)", "have \"... = sets (stoch_proc_filt M X N m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_sets (space M)\n     (\\<Union>i\\<in>{p. p \\<le> m}.\n         {X i -` A \\<inter> space M |A. A \\<in> sets N}) =\n    sets (stoch_proc_filt M X N m)", "using assms stoch_proc_filt_sets"], ["proof (prove)\nusing this:\n  X ?n \\<in> M \\<rightarrow>\\<^sub>M N\n  (\\<And>i.\n      i \\<le> ?n \\<Longrightarrow>\n      ?X i \\<in> ?M \\<rightarrow>\\<^sub>M ?N) \\<Longrightarrow>\n  sets (stoch_proc_filt ?M ?X ?N ?n) =\n  sigma_sets (space ?M)\n   (\\<Union>i\\<in>{m. m \\<le> ?n}.\n       {?X i -` A \\<inter> space ?M |A. A \\<in> sets ?N})\n\ngoal (1 subgoal):\n 1. sigma_sets (space M)\n     (\\<Union>i\\<in>{p. p \\<le> m}.\n         {X i -` A \\<inter> space M |A. A \\<in> sets N}) =\n    sets (stoch_proc_filt M X N m)", "by blast"], ["proof (state)\nthis:\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{p. p \\<le> m}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets N}) =\n  sets (stoch_proc_filt M X N m)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets N \\<Longrightarrow>\n       X m -` y \\<inter> space (stoch_proc_filt M X N m)\n       \\<in> sets (stoch_proc_filt M X N m)", "finally"], ["proof (chain)\npicking this:\n  X m -` B \\<inter> space (stoch_proc_filt M X N m)\n  \\<in> sets (stoch_proc_filt M X N m)", "show \"X m -` B \\<inter> space (stoch_proc_filt M X N m) \\<in> sets (stoch_proc_filt M X N m)\""], ["proof (prove)\nusing this:\n  X m -` B \\<inter> space (stoch_proc_filt M X N m)\n  \\<in> sets (stoch_proc_filt M X N m)\n\ngoal (1 subgoal):\n 1. X m -` B \\<inter> space (stoch_proc_filt M X N m)\n    \\<in> sets (stoch_proc_filt M X N m)", "."], ["proof (state)\nthis:\n  X m -` B \\<inter> space (stoch_proc_filt M X N m)\n  \\<in> sets (stoch_proc_filt M X N m)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>y\\<in>sets N.\n     X m -` y \\<inter> space (stoch_proc_filt M X N m)\n     \\<in> sets (stoch_proc_filt M X N m)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  X m \\<in> stoch_proc_filt M X N m \\<rightarrow>\\<^sub>M N\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  stoch_proc_filt_disc_filtr:\n  assumes \"\\<And>i. (X i) \\<in> measurable M N\"\n  shows \"disc_filtr M (stoch_proc_filt M X N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc_filtr M (stoch_proc_filt M X N)", "unfolding disc_filtr_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>n. subalgebra M (stoch_proc_filt M X N n)) \\<and>\n    (\\<forall>n m.\n        n \\<le> m \\<longrightarrow>\n        subalgebra (stoch_proc_filt M X N m) (stoch_proc_filt M X N n))", "proof (intro conjI allI impI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n. subalgebra M (stoch_proc_filt M X N n)\n 2. \\<And>n m.\n       n \\<le> m \\<Longrightarrow>\n       subalgebra (stoch_proc_filt M X N m) (stoch_proc_filt M X N n)", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n. subalgebra M (stoch_proc_filt M X N n)\n 2. \\<And>n m.\n       n \\<le> m \\<Longrightarrow>\n       subalgebra (stoch_proc_filt M X N m) (stoch_proc_filt M X N n)", "fix n"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n. subalgebra M (stoch_proc_filt M X N n)\n 2. \\<And>n m.\n       n \\<le> m \\<Longrightarrow>\n       subalgebra (stoch_proc_filt M X N m) (stoch_proc_filt M X N n)", "show \"subalgebra M (stoch_proc_filt M X N n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subalgebra M (stoch_proc_filt M X N n)", "unfolding subalgebra_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. space (stoch_proc_filt M X N n) = space M \\<and>\n    sets (stoch_proc_filt M X N n) \\<subseteq> sets M", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. space (stoch_proc_filt M X N n) = space M\n 2. sets (stoch_proc_filt M X N n) \\<subseteq> sets M", "show \"space (stoch_proc_filt M X N n) = space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space (stoch_proc_filt M X N n) = space M", "by (simp add:stoch_proc_filt_space)"], ["proof (state)\nthis:\n  space (stoch_proc_filt M X N n) = space M\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X N n) \\<subseteq> sets M", "show \"sets (stoch_proc_filt M X N n) \\<subseteq> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X N n) \\<subseteq> sets M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X N n) \\<subseteq> sets M", "have \"sigma_sets (space M) (\\<Union>i\\<in>{m. m \\<le> n}. {X i -` A \\<inter> space M |A. A \\<in> sets N}) \\<subseteq> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_sets (space M)\n     (\\<Union>i\\<in>{m. m \\<le> n}.\n         {X i -` A \\<inter> space M |A. A \\<in> sets N})\n    \\<subseteq> sets M", "proof (rule sigma_algebra.sigma_sets_subset, rule Sigma_Algebra.sets.sigma_algebra_axioms, rule UN_subset_iff[THEN iffD2], intro ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       {X i -` A \\<inter> space M |A. A \\<in> sets N} \\<subseteq> sets M", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       {X i -` A \\<inter> space M |A. A \\<in> sets N} \\<subseteq> sets M", "assume \"i\\<in> {m. m\\<le>n}\""], ["proof (state)\nthis:\n  i \\<in> {m. m \\<le> n}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       {X i -` A \\<inter> space M |A. A \\<in> sets N} \\<subseteq> sets M", "thus \"{X i -` A \\<inter> space M |A. A \\<in> sets N} \\<subseteq> sets M\""], ["proof (prove)\nusing this:\n  i \\<in> {m. m \\<le> n}\n\ngoal (1 subgoal):\n 1. {X i -` A \\<inter> space M |A. A \\<in> sets N} \\<subseteq> sets M", "using assms measurable_sets"], ["proof (prove)\nusing this:\n  i \\<in> {m. m \\<le> n}\n  X ?i \\<in> M \\<rightarrow>\\<^sub>M N\n  \\<lbrakk>?f \\<in> ?M \\<rightarrow>\\<^sub>M ?A; ?S \\<in> sets ?A\\<rbrakk>\n  \\<Longrightarrow> ?f -` ?S \\<inter> space ?M \\<in> sets ?M\n\ngoal (1 subgoal):\n 1. {X i -` A \\<inter> space M |A. A \\<in> sets N} \\<subseteq> sets M", "by blast"], ["proof (state)\nthis:\n  {X i -` A \\<inter> space M |A. A \\<in> sets N} \\<subseteq> sets M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets N})\n  \\<subseteq> sets M\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X N n) \\<subseteq> sets M", "thus ?thesis"], ["proof (prove)\nusing this:\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets N})\n  \\<subseteq> sets M\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X N n) \\<subseteq> sets M", "using assms"], ["proof (prove)\nusing this:\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets N})\n  \\<subseteq> sets M\n  X ?i \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X N n) \\<subseteq> sets M", "by (simp add:stoch_proc_filt_sets)"], ["proof (state)\nthis:\n  sets (stoch_proc_filt M X N n) \\<subseteq> sets M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sets (stoch_proc_filt M X N n) \\<subseteq> sets M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subalgebra M (stoch_proc_filt M X N n)\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<le> m \\<Longrightarrow>\n       subalgebra (stoch_proc_filt M X N m) (stoch_proc_filt M X N n)", "}"], ["proof (state)\nthis:\n  subalgebra M (stoch_proc_filt M X N ?n2)\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<le> m \\<Longrightarrow>\n       subalgebra (stoch_proc_filt M X N m) (stoch_proc_filt M X N n)", "{"], ["proof (state)\nthis:\n  subalgebra M (stoch_proc_filt M X N ?n2)\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<le> m \\<Longrightarrow>\n       subalgebra (stoch_proc_filt M X N m) (stoch_proc_filt M X N n)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<le> m \\<Longrightarrow>\n       subalgebra (stoch_proc_filt M X N m) (stoch_proc_filt M X N n)", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<le> m \\<Longrightarrow>\n       subalgebra (stoch_proc_filt M X N m) (stoch_proc_filt M X N n)", "assume \"(n::nat) \\<le> p\""], ["proof (state)\nthis:\n  n \\<le> p\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       n \\<le> m \\<Longrightarrow>\n       subalgebra (stoch_proc_filt M X N m) (stoch_proc_filt M X N n)", "show \"subalgebra (stoch_proc_filt M X N p) (stoch_proc_filt M X N n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subalgebra (stoch_proc_filt M X N p) (stoch_proc_filt M X N n)", "unfolding subalgebra_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. space (stoch_proc_filt M X N n) = space (stoch_proc_filt M X N p) \\<and>\n    sets (stoch_proc_filt M X N n)\n    \\<subseteq> sets (stoch_proc_filt M X N p)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. space (stoch_proc_filt M X N n) = space (stoch_proc_filt M X N p)\n 2. sets (stoch_proc_filt M X N n)\n    \\<subseteq> sets (stoch_proc_filt M X N p)", "have \"space (stoch_proc_filt M X N n) = space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space (stoch_proc_filt M X N n) = space M", "by (simp add: stoch_proc_filt_space)"], ["proof (state)\nthis:\n  space (stoch_proc_filt M X N n) = space M\n\ngoal (2 subgoals):\n 1. space (stoch_proc_filt M X N n) = space (stoch_proc_filt M X N p)\n 2. sets (stoch_proc_filt M X N n)\n    \\<subseteq> sets (stoch_proc_filt M X N p)", "also"], ["proof (state)\nthis:\n  space (stoch_proc_filt M X N n) = space M\n\ngoal (2 subgoals):\n 1. space (stoch_proc_filt M X N n) = space (stoch_proc_filt M X N p)\n 2. sets (stoch_proc_filt M X N n)\n    \\<subseteq> sets (stoch_proc_filt M X N p)", "have \"... = space (stoch_proc_filt M X N p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space M = space (stoch_proc_filt M X N p)", "by (simp add: stoch_proc_filt_space)"], ["proof (state)\nthis:\n  space M = space (stoch_proc_filt M X N p)\n\ngoal (2 subgoals):\n 1. space (stoch_proc_filt M X N n) = space (stoch_proc_filt M X N p)\n 2. sets (stoch_proc_filt M X N n)\n    \\<subseteq> sets (stoch_proc_filt M X N p)", "finally"], ["proof (chain)\npicking this:\n  space (stoch_proc_filt M X N n) = space (stoch_proc_filt M X N p)", "show \"space (stoch_proc_filt M X N n) = space (stoch_proc_filt M X N p)\""], ["proof (prove)\nusing this:\n  space (stoch_proc_filt M X N n) = space (stoch_proc_filt M X N p)\n\ngoal (1 subgoal):\n 1. space (stoch_proc_filt M X N n) = space (stoch_proc_filt M X N p)", "."], ["proof (state)\nthis:\n  space (stoch_proc_filt M X N n) = space (stoch_proc_filt M X N p)\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X N n)\n    \\<subseteq> sets (stoch_proc_filt M X N p)", "show \"sets (stoch_proc_filt M X N n) \\<subseteq> sets (stoch_proc_filt M X N p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X N n)\n    \\<subseteq> sets (stoch_proc_filt M X N p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X N n)\n    \\<subseteq> sets (stoch_proc_filt M X N p)", "have \"sigma_sets (space M) (\\<Union>i\\<in>{m. m \\<le> n}. {X i -` A \\<inter> space M |A. A \\<in> sets N}) \\<subseteq>\n        sigma_sets (space M) (\\<Union>i\\<in>{m. m \\<le> p}. {X i -` A \\<inter> space M |A. A \\<in> sets N})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_sets (space M)\n     (\\<Union>i\\<in>{m. m \\<le> n}.\n         {X i -` A \\<inter> space M |A. A \\<in> sets N})\n    \\<subseteq> sigma_sets (space M)\n                 (\\<Union>i\\<in>{m. m \\<le> p}.\n                     {X i -` A \\<inter> space M |A. A \\<in> sets N})", "proof (rule sigma_sets_mono')"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union>i\\<in>{m. m \\<le> n}.\n        {X i -` A \\<inter> space M |A. A \\<in> sets N})\n    \\<subseteq> (\\<Union>i\\<in>{m. m \\<le> p}.\n                    {X i -` A \\<inter> space M |A. A \\<in> sets N})", "show \"(\\<Union>i\\<in>{m. m \\<le> n}. {X i -` A \\<inter> space M |A. A \\<in> sets N}) \\<subseteq> (\\<Union>i\\<in>{m. m \\<le> p}. {X i -` A \\<inter> space M |A. A \\<in> sets N})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>i\\<in>{m. m \\<le> n}.\n        {X i -` A \\<inter> space M |A. A \\<in> sets N})\n    \\<subseteq> (\\<Union>i\\<in>{m. m \\<le> p}.\n                    {X i -` A \\<inter> space M |A. A \\<in> sets N})", "proof (rule UN_subset_iff[THEN iffD2], intro ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       {X i -` A \\<inter> space M |A. A \\<in> sets N}\n       \\<subseteq> (\\<Union>i\\<in>{m. m \\<le> p}.\n                       {X i -` A \\<inter> space M |A. A \\<in> sets N})", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       {X i -` A \\<inter> space M |A. A \\<in> sets N}\n       \\<subseteq> (\\<Union>i\\<in>{m. m \\<le> p}.\n                       {X i -` A \\<inter> space M |A. A \\<in> sets N})", "assume \"i\\<in> {m. m\\<le>n}\""], ["proof (state)\nthis:\n  i \\<in> {m. m \\<le> n}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       {X i -` A \\<inter> space M |A. A \\<in> sets N}\n       \\<subseteq> (\\<Union>i\\<in>{m. m \\<le> p}.\n                       {X i -` A \\<inter> space M |A. A \\<in> sets N})", "show \"{X i -` A \\<inter> space M |A. A \\<in> sets N} \\<subseteq> (\\<Union>i\\<in>{m. m \\<le> p}. {X i -` A \\<inter> space M |A. A \\<in> sets N})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {X i -` A \\<inter> space M |A. A \\<in> sets N}\n    \\<subseteq> (\\<Union>i\\<in>{m. m \\<le> p}.\n                    {X i -` A \\<inter> space M |A. A \\<in> sets N})", "using \\<open>i \\<in> {m. m \\<le> n}\\<close> \\<open>n \\<le> p\\<close> order_trans"], ["proof (prove)\nusing this:\n  i \\<in> {m. m \\<le> n}\n  n \\<le> p\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x \\<le> ?z\n\ngoal (1 subgoal):\n 1. {X i -` A \\<inter> space M |A. A \\<in> sets N}\n    \\<subseteq> (\\<Union>i\\<in>{m. m \\<le> p}.\n                    {X i -` A \\<inter> space M |A. A \\<in> sets N})", "by auto"], ["proof (state)\nthis:\n  {X i -` A \\<inter> space M |A. A \\<in> sets N}\n  \\<subseteq> (\\<Union>i\\<in>{m. m \\<le> p}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets N})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Union>i\\<in>{m. m \\<le> n}.\n      {X i -` A \\<inter> space M |A. A \\<in> sets N})\n  \\<subseteq> (\\<Union>i\\<in>{m. m \\<le> p}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets N})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets N})\n  \\<subseteq> sigma_sets (space M)\n               (\\<Union>i\\<in>{m. m \\<le> p}.\n                   {X i -` A \\<inter> space M |A. A \\<in> sets N})\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X N n)\n    \\<subseteq> sets (stoch_proc_filt M X N p)", "thus ?thesis"], ["proof (prove)\nusing this:\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets N})\n  \\<subseteq> sigma_sets (space M)\n               (\\<Union>i\\<in>{m. m \\<le> p}.\n                   {X i -` A \\<inter> space M |A. A \\<in> sets N})\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X N n)\n    \\<subseteq> sets (stoch_proc_filt M X N p)", "using assms"], ["proof (prove)\nusing this:\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets N})\n  \\<subseteq> sigma_sets (space M)\n               (\\<Union>i\\<in>{m. m \\<le> p}.\n                   {X i -` A \\<inter> space M |A. A \\<in> sets N})\n  X ?i \\<in> M \\<rightarrow>\\<^sub>M N\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X N n)\n    \\<subseteq> sets (stoch_proc_filt M X N p)", "by (simp add:stoch_proc_filt_sets)"], ["proof (state)\nthis:\n  sets (stoch_proc_filt M X N n) \\<subseteq> sets (stoch_proc_filt M X N p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sets (stoch_proc_filt M X N n) \\<subseteq> sets (stoch_proc_filt M X N p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subalgebra (stoch_proc_filt M X N p) (stoch_proc_filt M X N n)\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  ?n2 \\<le> ?p2 \\<Longrightarrow>\n  subalgebra (stoch_proc_filt M X N ?p2) (stoch_proc_filt M X N ?n2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gen_subalgebra_eq_space_sets:\n  assumes \"space M = space N\"\n  and \"P = Q\"\n  and \"P\\<subseteq> Pow (space M)\"\n  shows \"sets (gen_subalgebra M P) = sets (gen_subalgebra N Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (gen_subalgebra M P) = sets (gen_subalgebra N Q)", "unfolding gen_subalgebra_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (sigma (space M) P) = sets (sigma (space N) Q)", "using assms"], ["proof (prove)\nusing this:\n  space M = space N\n  P = Q\n  P \\<subseteq> Pow (space M)\n\ngoal (1 subgoal):\n 1. sets (sigma (space M) P) = sets (sigma (space N) Q)", "by simp"], ["", "lemma stoch_proc_filt_eq_sets:\n  assumes \"space M = space N\"\n  shows \"sets (stoch_proc_filt M X P n) = sets (stoch_proc_filt N X P n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X P n) = sets (stoch_proc_filt N X P n)", "unfolding stoch_proc_filt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sets\n     (gen_subalgebra M\n       (sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets P}))) =\n    sets\n     (gen_subalgebra N\n       (sigma_sets (space N)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space N |A. A \\<in> sets P})))", "proof (rule gen_subalgebra_eq_space_sets, (simp add: assms)+)"], ["proof (state)\ngoal (1 subgoal):\n 1. sigma_sets (space N)\n     (\\<Union>x\\<in>{m. m \\<le> n}.\n         {X x -` A \\<inter> space N |A. A \\<in> sets P})\n    \\<subseteq> Pow (space N)", "show \"sigma_sets (space N) (\\<Union>x\\<in>{m. m \\<le> n}. {X x -` A \\<inter> space N |A. A \\<in> sets P}) \\<subseteq> Pow (space N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_sets (space N)\n     (\\<Union>x\\<in>{m. m \\<le> n}.\n         {X x -` A \\<inter> space N |A. A \\<in> sets P})\n    \\<subseteq> Pow (space N)", "proof (rule sigma_algebra.sigma_sets_subset)"], ["proof (state)\ngoal (2 subgoals):\n 1. sigma_algebra (space N) (Pow (space N))\n 2. (\\<Union>x\\<in>{m. m \\<le> n}.\n        {X x -` A \\<inter> space N |A. A \\<in> sets P})\n    \\<subseteq> Pow (space N)", "show \"sigma_algebra (space N) (Pow (space N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_algebra (space N) (Pow (space N))", "by (simp add: sigma_algebra_Pow)"], ["proof (state)\nthis:\n  sigma_algebra (space N) (Pow (space N))\n\ngoal (1 subgoal):\n 1. (\\<Union>x\\<in>{m. m \\<le> n}.\n        {X x -` A \\<inter> space N |A. A \\<in> sets P})\n    \\<subseteq> Pow (space N)", "show \"(\\<Union>x\\<in>{m. m \\<le> n}. {X x -` A \\<inter> space N |A. A \\<in> sets P}) \\<subseteq> Pow (space N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>x\\<in>{m. m \\<le> n}.\n        {X x -` A \\<inter> space N |A. A \\<in> sets P})\n    \\<subseteq> Pow (space N)", "by auto"], ["proof (state)\nthis:\n  (\\<Union>x\\<in>{m. m \\<le> n}.\n      {X x -` A \\<inter> space N |A. A \\<in> sets P})\n  \\<subseteq> Pow (space N)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sigma_sets (space N)\n   (\\<Union>x\\<in>{m. m \\<le> n}.\n       {X x -` A \\<inter> space N |A. A \\<in> sets P})\n  \\<subseteq> Pow (space N)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) stoch_proc_filt_triv_init:\n  fixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> real\"\n  assumes \"borel_adapt_stoch_proc nat_filtration X\"\n  shows \"init_triv_filt M (stoch_proc_filt M X borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. init_triv_filt M (stoch_proc_filt M X borel)", "unfolding init_triv_filt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Filtration.filtration M (stoch_proc_filt M X borel) \\<and>\n    sets (stoch_proc_filt M X borel \\<bottom>) = {{}, space M}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. Filtration.filtration M (stoch_proc_filt M X borel)\n 2. sets (stoch_proc_filt M X borel \\<bottom>) = {{}, space M}", "show \"filtration M (stoch_proc_filt M X borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Filtration.filtration M (stoch_proc_filt M X borel)", "using stoch_proc_filt_disc_filtr"], ["proof (prove)\nusing this:\n  (\\<And>i. ?X i \\<in> ?M \\<rightarrow>\\<^sub>M ?N) \\<Longrightarrow>\n  disc_filtr ?M (stoch_proc_filt ?M ?X ?N)\n\ngoal (1 subgoal):\n 1. Filtration.filtration M (stoch_proc_filt M X borel)", "unfolding  filtration_def"], ["proof (prove)\nusing this:\n  (\\<And>i. ?X i \\<in> ?M \\<rightarrow>\\<^sub>M ?N) \\<Longrightarrow>\n  disc_filtr ?M (stoch_proc_filt ?M ?X ?N)\n\ngoal (1 subgoal):\n 1. (\\<forall>t. subalgebra M (stoch_proc_filt M X borel t)) \\<and>\n    (\\<forall>s t.\n        s \\<le> t \\<longrightarrow>\n        subalgebra (stoch_proc_filt M X borel t)\n         (stoch_proc_filt M X borel s))", "by (metis adapt_stoch_proc_def assms disc_filtr_def  measurable_from_subalg nat_filtration_subalgebra)"], ["proof (state)\nthis:\n  Filtration.filtration M (stoch_proc_filt M X borel)\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel \\<bottom>) = {{}, space M}", "show \"sets (stoch_proc_filt M X borel bot) = {{}, space M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel \\<bottom>) = {{}, space M}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel \\<bottom>) = {{}, space M}", "have seteq: \"sets (stoch_proc_filt M X borel 0) =\n      (sigma_sets (space M) (\\<Union> i\\<in> {m. m\\<le> 0}. {(X i -`A) \\<inter> (space M) | A. A\\<in> sets borel}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel 0) =\n    sigma_sets (space M)\n     (\\<Union>i\\<in>{m. m \\<le> 0}.\n         {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "proof (rule stoch_proc_filt_sets)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> 0 \\<Longrightarrow> random_variable borel (X i)", "show \"\\<And>i. i \\<le> 0 \\<Longrightarrow> random_variable borel (X i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> 0 \\<Longrightarrow> random_variable borel (X i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> 0 \\<Longrightarrow> random_variable borel (X i)", "fix i::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> 0 \\<Longrightarrow> random_variable borel (X i)", "assume \"i \\<le> 0\""], ["proof (state)\nthis:\n  i \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> 0 \\<Longrightarrow> random_variable borel (X i)", "show \"random_variable borel (X i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable borel (X i)", "using assms"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc nat_filtration X\n\ngoal (1 subgoal):\n 1. random_variable borel (X i)", "unfolding adapt_stoch_proc_def"], ["proof (prove)\nusing this:\n  \\<forall>t. X t \\<in> borel_measurable (nat_filtration t)\n\ngoal (1 subgoal):\n 1. random_variable borel (X i)", "using filtration_measurable nat_discrete_filtration"], ["proof (prove)\nusing this:\n  \\<forall>t. X t \\<in> borel_measurable (nat_filtration t)\n  ?f \\<in> F ?t \\<rightarrow>\\<^sub>M ?N \\<Longrightarrow>\n  random_variable ?N ?f\n  Filtration.filtration M nat_filtration\n\ngoal (1 subgoal):\n 1. random_variable borel (X i)", "using natural_filtration"], ["proof (prove)\nusing this:\n  \\<forall>t. X t \\<in> borel_measurable (nat_filtration t)\n  ?f \\<in> F ?t \\<rightarrow>\\<^sub>M ?N \\<Longrightarrow>\n  random_variable ?N ?f\n  Filtration.filtration M nat_filtration\n  F = nat_filtration\n\ngoal (1 subgoal):\n 1. random_variable borel (X i)", "by blast"], ["proof (state)\nthis:\n  random_variable borel (X i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i1 \\<le> 0 \\<Longrightarrow> random_variable borel (X ?i1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sets (stoch_proc_filt M X borel 0) =\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> 0}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel \\<bottom>) = {{}, space M}", "have \"triv_init_disc_filtr_prob_space M nat_filtration\""], ["proof (prove)\ngoal (1 subgoal):\n 1. triv_init_disc_filtr_prob_space M nat_filtration", "proof (unfold_locales, intro conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. disc_filtr M nat_filtration\n 2. sets (nat_filtration \\<bottom>) = {{}, space M}", "show \"disc_filtr M nat_filtration\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disc_filtr M nat_filtration", "unfolding disc_filtr_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>n. subalgebra M (nat_filtration n)) \\<and>\n    (\\<forall>n m.\n        n \\<le> m \\<longrightarrow>\n        subalgebra (nat_filtration m) (nat_filtration n))", "using filtrationE2 nat_discrete_filtration nat_filtration_subalgebra"], ["proof (prove)\nusing this:\n  \\<lbrakk>Filtration.filtration ?M ?F; ?s \\<le> ?t\\<rbrakk>\n  \\<Longrightarrow> subalgebra (?F ?t) (?F ?s)\n  Filtration.filtration M nat_filtration\n  subalgebra M (nat_filtration ?n)\n\ngoal (1 subgoal):\n 1. (\\<forall>n. subalgebra M (nat_filtration n)) \\<and>\n    (\\<forall>n m.\n        n \\<le> m \\<longrightarrow>\n        subalgebra (nat_filtration m) (nat_filtration n))", "by auto"], ["proof (state)\nthis:\n  disc_filtr M nat_filtration\n\ngoal (1 subgoal):\n 1. sets (nat_filtration \\<bottom>) = {{}, space M}", "show \"sets (nat_filtration \\<bottom>) = {{}, space M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (nat_filtration \\<bottom>) = {{}, space M}", "using nat_info_filtration"], ["proof (prove)\nusing this:\n  init_triv_filt M nat_filtration\n\ngoal (1 subgoal):\n 1. sets (nat_filtration \\<bottom>) = {{}, space M}", "unfolding init_triv_filt_def"], ["proof (prove)\nusing this:\n  Filtration.filtration M nat_filtration \\<and>\n  sets (nat_filtration \\<bottom>) = {{}, space M}\n\ngoal (1 subgoal):\n 1. sets (nat_filtration \\<bottom>) = {{}, space M}", "by simp"], ["proof (state)\nthis:\n  sets (nat_filtration \\<bottom>) = {{}, space M}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  triv_init_disc_filtr_prob_space M nat_filtration\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel \\<bottom>) = {{}, space M}", "hence \"\\<exists>c. \\<forall>w \\<in> space M. ((X 0 w)::real) = c\""], ["proof (prove)\nusing this:\n  triv_init_disc_filtr_prob_space M nat_filtration\n\ngoal (1 subgoal):\n 1. \\<exists>c. \\<forall>w\\<in>space M. X 0 w = c", "using assms\n        triv_init_disc_filtr_prob_space.adapted_init[of M nat_filtration X]"], ["proof (prove)\nusing this:\n  triv_init_disc_filtr_prob_space M nat_filtration\n  borel_adapt_stoch_proc nat_filtration X\n  \\<lbrakk>triv_init_disc_filtr_prob_space M nat_filtration;\n   borel_adapt_stoch_proc nat_filtration X\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c. \\<forall>w\\<in>space M. X 0 w = c\n\ngoal (1 subgoal):\n 1. \\<exists>c. \\<forall>w\\<in>space M. X 0 w = c", "by simp"], ["proof (state)\nthis:\n  \\<exists>c. \\<forall>w\\<in>space M. X 0 w = c\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel \\<bottom>) = {{}, space M}", "from this"], ["proof (chain)\npicking this:\n  \\<exists>c. \\<forall>w\\<in>space M. X 0 w = c", "obtain c where img: \"\\<forall>w \\<in> space M. (X 0 w) = c\""], ["proof (prove)\nusing this:\n  \\<exists>c. \\<forall>w\\<in>space M. X 0 w = c\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<forall>w\\<in>space M. X 0 w = c \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>w\\<in>space M. X 0 w = c\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel \\<bottom>) = {{}, space M}", "have \"(\\<Union> i\\<in> {m. m\\<le> 0}. {(X i -`A) \\<inter> (space M) | A. A\\<in> sets borel}) =\n      {(X 0 -`A) \\<inter> (space M) | A. A\\<in> sets borel}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>i\\<in>{m. m \\<le> 0}.\n        {X i -` A \\<inter> space M |A. A \\<in> sets borel}) =\n    {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}", "by auto"], ["proof (state)\nthis:\n  (\\<Union>i\\<in>{m. m \\<le> 0}.\n      {X i -` A \\<inter> space M |A. A \\<in> sets borel}) =\n  {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel \\<bottom>) = {{}, space M}", "also"], ["proof (state)\nthis:\n  (\\<Union>i\\<in>{m. m \\<le> 0}.\n      {X i -` A \\<inter> space M |A. A \\<in> sets borel}) =\n  {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel \\<bottom>) = {{}, space M}", "have \"... = {{}, space M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {X 0 -` A \\<inter> space M |A. A \\<in> sets borel} = {{}, space M}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\n    \\<subseteq> {{}, space M}\n 2. {{}, space M}\n    \\<subseteq> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}", "show \"{X 0 -` A \\<inter> space M |A. A \\<in> sets borel} \\<subseteq> {{}, space M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\n    \\<subseteq> {{}, space M}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\n    \\<subseteq> {{}, space M}", "have \"\\<forall>A \\<in> sets borel. (X 0 -`A) \\<inter> (space M) \\<in> {{}, space M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>A\\<in>sets borel. X 0 -` A \\<inter> space M \\<in> {{}, space M}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X 0 -` A \\<inter> space M \\<in> {{}, space M}", "fix A::\"real set\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X 0 -` A \\<inter> space M \\<in> {{}, space M}", "assume \"A\\<in> sets borel\""], ["proof (state)\nthis:\n  A \\<in> sets borel\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X 0 -` A \\<inter> space M \\<in> {{}, space M}", "show \"(X 0 -`A) \\<inter> (space M) \\<in> {{}, space M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X 0 -` A \\<inter> space M \\<in> {{}, space M}", "proof (cases \"c\\<in> A\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c \\<in> A \\<Longrightarrow>\n    X 0 -` A \\<inter> space M \\<in> {{}, space M}\n 2. c \\<notin> A \\<Longrightarrow>\n    X 0 -` A \\<inter> space M \\<in> {{}, space M}", "case True"], ["proof (state)\nthis:\n  c \\<in> A\n\ngoal (2 subgoals):\n 1. c \\<in> A \\<Longrightarrow>\n    X 0 -` A \\<inter> space M \\<in> {{}, space M}\n 2. c \\<notin> A \\<Longrightarrow>\n    X 0 -` A \\<inter> space M \\<in> {{}, space M}", "hence \"X 0 -` A \\<inter> space M = space M\""], ["proof (prove)\nusing this:\n  c \\<in> A\n\ngoal (1 subgoal):\n 1. X 0 -` A \\<inter> space M = space M", "using img"], ["proof (prove)\nusing this:\n  c \\<in> A\n  \\<forall>w\\<in>space M. X 0 w = c\n\ngoal (1 subgoal):\n 1. X 0 -` A \\<inter> space M = space M", "by auto"], ["proof (state)\nthis:\n  X 0 -` A \\<inter> space M = space M\n\ngoal (2 subgoals):\n 1. c \\<in> A \\<Longrightarrow>\n    X 0 -` A \\<inter> space M \\<in> {{}, space M}\n 2. c \\<notin> A \\<Longrightarrow>\n    X 0 -` A \\<inter> space M \\<in> {{}, space M}", "thus ?thesis"], ["proof (prove)\nusing this:\n  X 0 -` A \\<inter> space M = space M\n\ngoal (1 subgoal):\n 1. X 0 -` A \\<inter> space M \\<in> {{}, space M}", "by simp"], ["proof (state)\nthis:\n  X 0 -` A \\<inter> space M \\<in> {{}, space M}\n\ngoal (1 subgoal):\n 1. c \\<notin> A \\<Longrightarrow>\n    X 0 -` A \\<inter> space M \\<in> {{}, space M}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<notin> A \\<Longrightarrow>\n    X 0 -` A \\<inter> space M \\<in> {{}, space M}", "case False"], ["proof (state)\nthis:\n  c \\<notin> A\n\ngoal (1 subgoal):\n 1. c \\<notin> A \\<Longrightarrow>\n    X 0 -` A \\<inter> space M \\<in> {{}, space M}", "hence \"X 0 -` A \\<inter> space M = {}\""], ["proof (prove)\nusing this:\n  c \\<notin> A\n\ngoal (1 subgoal):\n 1. X 0 -` A \\<inter> space M = {}", "using img"], ["proof (prove)\nusing this:\n  c \\<notin> A\n  \\<forall>w\\<in>space M. X 0 w = c\n\ngoal (1 subgoal):\n 1. X 0 -` A \\<inter> space M = {}", "by auto"], ["proof (state)\nthis:\n  X 0 -` A \\<inter> space M = {}\n\ngoal (1 subgoal):\n 1. c \\<notin> A \\<Longrightarrow>\n    X 0 -` A \\<inter> space M \\<in> {{}, space M}", "thus ?thesis"], ["proof (prove)\nusing this:\n  X 0 -` A \\<inter> space M = {}\n\ngoal (1 subgoal):\n 1. X 0 -` A \\<inter> space M \\<in> {{}, space M}", "by simp"], ["proof (state)\nthis:\n  X 0 -` A \\<inter> space M \\<in> {{}, space M}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  X 0 -` A \\<inter> space M \\<in> {{}, space M}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>A\\<in>sets borel. X 0 -` A \\<inter> space M \\<in> {{}, space M}\n\ngoal (1 subgoal):\n 1. {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\n    \\<subseteq> {{}, space M}", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>A\\<in>sets borel. X 0 -` A \\<inter> space M \\<in> {{}, space M}\n\ngoal (1 subgoal):\n 1. {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\n    \\<subseteq> {{}, space M}", "by auto"], ["proof (state)\nthis:\n  {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\n  \\<subseteq> {{}, space M}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\n  \\<subseteq> {{}, space M}\n\ngoal (1 subgoal):\n 1. {{}, space M}\n    \\<subseteq> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}", "show \"{{}, space M} \\<subseteq> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {{}, space M}\n    \\<subseteq> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {{}, space M}\n    \\<subseteq> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}", "have \"{} \\<in> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<in> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}", "by blast"], ["proof (state)\nthis:\n  {} \\<in> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. {{}, space M}\n    \\<subseteq> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}", "moreover"], ["proof (state)\nthis:\n  {} \\<in> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. {{}, space M}\n    \\<subseteq> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}", "have \"space M \\<in> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space M \\<in> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. space M \\<in> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}", "have \"UNIV \\<subseteq> X 0 -` space borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV \\<subseteq> X 0 -` space borel", "using space_borel"], ["proof (prove)\nusing this:\n  space borel = UNIV\n\ngoal (1 subgoal):\n 1. UNIV \\<subseteq> X 0 -` space borel", "by blast"], ["proof (state)\nthis:\n  UNIV \\<subseteq> X 0 -` space borel\n\ngoal (1 subgoal):\n 1. space M \\<in> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}", "then"], ["proof (chain)\npicking this:\n  UNIV \\<subseteq> X 0 -` space borel", "show ?thesis"], ["proof (prove)\nusing this:\n  UNIV \\<subseteq> X 0 -` space borel\n\ngoal (1 subgoal):\n 1. space M \\<in> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}", "using bernoulli_stream_space"], ["proof (prove)\nusing this:\n  UNIV \\<subseteq> X 0 -` space borel\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. space M \\<in> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}", "by blast"], ["proof (state)\nthis:\n  space M \\<in> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  space M \\<in> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. {{}, space M}\n    \\<subseteq> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}", "ultimately"], ["proof (chain)\npicking this:\n  {} \\<in> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\n  space M \\<in> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}", "show ?thesis"], ["proof (prove)\nusing this:\n  {} \\<in> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\n  space M \\<in> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. {{}, space M}\n    \\<subseteq> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}", "by auto"], ["proof (state)\nthis:\n  {{}, space M}\n  \\<subseteq> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {{}, space M}\n  \\<subseteq> {X 0 -` A \\<inter> space M |A. A \\<in> sets borel}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {X 0 -` A \\<inter> space M |A. A \\<in> sets borel} = {{}, space M}\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel \\<bottom>) = {{}, space M}", "finally"], ["proof (chain)\npicking this:\n  (\\<Union>i\\<in>{m. m \\<le> 0}.\n      {X i -` A \\<inter> space M |A. A \\<in> sets borel}) =\n  {{}, space M}", "have \"(\\<Union> i\\<in> {m. m\\<le> 0}. {(X i -`A) \\<inter> (space M) | A. A\\<in> sets borel}) = {{}, space M}\""], ["proof (prove)\nusing this:\n  (\\<Union>i\\<in>{m. m \\<le> 0}.\n      {X i -` A \\<inter> space M |A. A \\<in> sets borel}) =\n  {{}, space M}\n\ngoal (1 subgoal):\n 1. (\\<Union>i\\<in>{m. m \\<le> 0}.\n        {X i -` A \\<inter> space M |A. A \\<in> sets borel}) =\n    {{}, space M}", "."], ["proof (state)\nthis:\n  (\\<Union>i\\<in>{m. m \\<le> 0}.\n      {X i -` A \\<inter> space M |A. A \\<in> sets borel}) =\n  {{}, space M}\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel \\<bottom>) = {{}, space M}", "moreover"], ["proof (state)\nthis:\n  (\\<Union>i\\<in>{m. m \\<le> 0}.\n      {X i -` A \\<inter> space M |A. A \\<in> sets borel}) =\n  {{}, space M}\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel \\<bottom>) = {{}, space M}", "have \"sigma_sets (space M) {{}, space M} = {{}, space M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_sets (space M) {{}, space M} = {{}, space M}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sigma_sets (space M) {{}, space M} = {{}, space M}", "have \"sigma_sets (space M) {space M} = {{}, space M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_sets (space M) {space M} = {{}, space M}", "by simp"], ["proof (state)\nthis:\n  sigma_sets (space M) {space M} = {{}, space M}\n\ngoal (1 subgoal):\n 1. sigma_sets (space M) {{}, space M} = {{}, space M}", "have \"sigma_sets (space M) (sigma_sets (space M) {space M}) = sigma_sets (space M) {space M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_sets (space M) (sigma_sets (space M) {space M}) =\n    sigma_sets (space M) {space M}", "by (rule sigma_sets_sigma_sets_eq, simp)"], ["proof (state)\nthis:\n  sigma_sets (space M) (sigma_sets (space M) {space M}) =\n  sigma_sets (space M) {space M}\n\ngoal (1 subgoal):\n 1. sigma_sets (space M) {{}, space M} = {{}, space M}", "also"], ["proof (state)\nthis:\n  sigma_sets (space M) (sigma_sets (space M) {space M}) =\n  sigma_sets (space M) {space M}\n\ngoal (1 subgoal):\n 1. sigma_sets (space M) {{}, space M} = {{}, space M}", "have \"... = {{}, space M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_sets (space M) {space M} = {{}, space M}", "by simp"], ["proof (state)\nthis:\n  sigma_sets (space M) {space M} = {{}, space M}\n\ngoal (1 subgoal):\n 1. sigma_sets (space M) {{}, space M} = {{}, space M}", "finally"], ["proof (chain)\npicking this:\n  sigma_sets (space M) (sigma_sets (space M) {space M}) = {{}, space M}", "show ?thesis"], ["proof (prove)\nusing this:\n  sigma_sets (space M) (sigma_sets (space M) {space M}) = {{}, space M}\n\ngoal (1 subgoal):\n 1. sigma_sets (space M) {{}, space M} = {{}, space M}", "by simp"], ["proof (state)\nthis:\n  sigma_sets (space M) {{}, space M} = {{}, space M}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sigma_sets (space M) {{}, space M} = {{}, space M}\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel \\<bottom>) = {{}, space M}", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Union>i\\<in>{m. m \\<le> 0}.\n      {X i -` A \\<inter> space M |A. A \\<in> sets borel}) =\n  {{}, space M}\n  sigma_sets (space M) {{}, space M} = {{}, space M}", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Union>i\\<in>{m. m \\<le> 0}.\n      {X i -` A \\<inter> space M |A. A \\<in> sets borel}) =\n  {{}, space M}\n  sigma_sets (space M) {{}, space M} = {{}, space M}\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel \\<bottom>) = {{}, space M}", "using seteq"], ["proof (prove)\nusing this:\n  (\\<Union>i\\<in>{m. m \\<le> 0}.\n      {X i -` A \\<inter> space M |A. A \\<in> sets borel}) =\n  {{}, space M}\n  sigma_sets (space M) {{}, space M} = {{}, space M}\n  sets (stoch_proc_filt M X borel 0) =\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> 0}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel \\<bottom>) = {{}, space M}", "by (simp add: bot_nat_def)"], ["proof (state)\nthis:\n  sets (stoch_proc_filt M X borel \\<bottom>) = {{}, space M}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sets (stoch_proc_filt M X borel \\<bottom>) = {{}, space M}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) stream_space_borel_union:\nfixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> ('b::t2_space)\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  and \"i\\<le> n\"\n  and \"A\\<in> sets borel\"\nshows \"\\<forall>y\\<in> A\\<inter> range (X i). X i -`{y} = (proj_stoch_proc X n) -` (\\<Union>z\\<in> comp_proj_i X n i y.\n    (stream_space_single (proj_stoch_proc X n) z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>A \\<inter> range (X i).\n       X i -` {y} =\n       proj_stoch_proc X n -`\n       \\<Union>\n        (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> A \\<inter> range (X i) \\<Longrightarrow>\n       X i -` {y} =\n       proj_stoch_proc X n -`\n       \\<Union>\n        (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> A \\<inter> range (X i) \\<Longrightarrow>\n       X i -` {y} =\n       proj_stoch_proc X n -`\n       \\<Union>\n        (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)", "assume \"y\\<in> A\\<inter> range (X i)\""], ["proof (state)\nthis:\n  y \\<in> A \\<inter> range (X i)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> A \\<inter> range (X i) \\<Longrightarrow>\n       X i -` {y} =\n       proj_stoch_proc X n -`\n       \\<Union>\n        (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)", "hence \"\\<exists>x. y = X i x\""], ["proof (prove)\nusing this:\n  y \\<in> A \\<inter> range (X i)\n\ngoal (1 subgoal):\n 1. \\<exists>x. y = X i x", "by auto"], ["proof (state)\nthis:\n  \\<exists>x. y = X i x\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> A \\<inter> range (X i) \\<Longrightarrow>\n       X i -` {y} =\n       proj_stoch_proc X n -`\n       \\<Union>\n        (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>x. y = X i x", "obtain x where \"y = X i x\""], ["proof (prove)\nusing this:\n  \\<exists>x. y = X i x\n\ngoal (1 subgoal):\n 1. (\\<And>x. y = X i x \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  y = X i x\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> A \\<inter> range (X i) \\<Longrightarrow>\n       X i -` {y} =\n       proj_stoch_proc X n -`\n       \\<Union>\n        (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)", "hence \"X i -`{y} = X i -`{X i x}\""], ["proof (prove)\nusing this:\n  y = X i x\n\ngoal (1 subgoal):\n 1. X i -` {y} = X i -` {X i x}", "by simp"], ["proof (state)\nthis:\n  X i -` {y} = X i -` {X i x}\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> A \\<inter> range (X i) \\<Longrightarrow>\n       X i -` {y} =\n       proj_stoch_proc X n -`\n       \\<Union>\n        (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)", "also"], ["proof (state)\nthis:\n  X i -` {y} = X i -` {X i x}\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> A \\<inter> range (X i) \\<Longrightarrow>\n       X i -` {y} =\n       proj_stoch_proc X n -`\n       \\<Union>\n        (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)", "have \"... = (\\<Union>z\\<in> comp_proj_i X n i (X i x). (proj_stoch_proc X n) -` {z})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X i -` {X i x} =\n    (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z})", "using \\<open>i\\<le> n\\<close>"], ["proof (prove)\nusing this:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. X i -` {X i x} =\n    (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z})", "by (simp add: stoch_proc_comp_proj_i_preimage)"], ["proof (state)\nthis:\n  X i -` {X i x} =\n  (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z})\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> A \\<inter> range (X i) \\<Longrightarrow>\n       X i -` {y} =\n       proj_stoch_proc X n -`\n       \\<Union>\n        (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)", "also"], ["proof (state)\nthis:\n  X i -` {X i x} =\n  (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z})\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> A \\<inter> range (X i) \\<Longrightarrow>\n       X i -` {y} =\n       proj_stoch_proc X n -`\n       \\<Union>\n        (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)", "have \"... = (\\<Union>z\\<in> comp_proj_i X n i (X i x). (proj_stoch_proc X n) -`\n    (stream_space_single (proj_stoch_proc X n) z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z}) =\n    (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n        proj_stoch_proc X n -` stream_space_single (proj_stoch_proc X n) z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z}) =\n    (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n        proj_stoch_proc X n -` stream_space_single (proj_stoch_proc X n) z)", "have \"\\<forall>z\\<in> comp_proj_i X n i (X i x). (proj_stoch_proc X n) -` {z} = (proj_stoch_proc X n) -`\n      (stream_space_single (proj_stoch_proc X n) z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>comp_proj_i X n i (X i x).\n       proj_stoch_proc X n -` {z} =\n       proj_stoch_proc X n -` stream_space_single (proj_stoch_proc X n) z", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> comp_proj_i X n i (X i x) \\<Longrightarrow>\n       proj_stoch_proc X n -` {z} =\n       proj_stoch_proc X n -` stream_space_single (proj_stoch_proc X n) z", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> comp_proj_i X n i (X i x) \\<Longrightarrow>\n       proj_stoch_proc X n -` {z} =\n       proj_stoch_proc X n -` stream_space_single (proj_stoch_proc X n) z", "assume \"z \\<in> comp_proj_i X n i (X i x)\""], ["proof (state)\nthis:\n  z \\<in> comp_proj_i X n i (X i x)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> comp_proj_i X n i (X i x) \\<Longrightarrow>\n       proj_stoch_proc X n -` {z} =\n       proj_stoch_proc X n -` stream_space_single (proj_stoch_proc X n) z", "have \"stream_space_single (proj_stoch_proc X n) z \\<inter> range (proj_stoch_proc X n) = {z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stream_space_single (proj_stoch_proc X n) z \\<inter>\n    range (proj_stoch_proc X n) =\n    {z}", "using stream_space_single_preimage assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>borel_adapt_stoch_proc F ?X;\n   ?r \\<in> range (proj_stoch_proc ?X ?n)\\<rbrakk>\n  \\<Longrightarrow> stream_space_single (proj_stoch_proc ?X ?n) ?r \\<inter>\n                    range (proj_stoch_proc ?X ?n) =\n                    {?r}\n  borel_adapt_stoch_proc F X\n  i \\<le> n\n  A \\<in> sets borel\n\ngoal (1 subgoal):\n 1. stream_space_single (proj_stoch_proc X n) z \\<inter>\n    range (proj_stoch_proc X n) =\n    {z}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>X r n.\n                \\<lbrakk>borel_adapt_stoch_proc F X;\n                 r \\<in> range (proj_stoch_proc X n)\\<rbrakk>\n                \\<Longrightarrow> stream_space_single (proj_stoch_proc X n)\n                                   r \\<inter>\n                                  range (proj_stoch_proc X n) =\n                                  {r};\n     borel_adapt_stoch_proc F X; i \\<le> n; A \\<in> sets borel\\<rbrakk>\n    \\<Longrightarrow> stream_space_single (proj_stoch_proc X n) z \\<inter>\n                      range (proj_stoch_proc X n) =\n                      {z}", "have \"z \\<in> range (proj_stoch_proc X n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> range (proj_stoch_proc X n)", "using \\<open>z \\<in> comp_proj_i X n i (X i x)\\<close> comp_proj_i_def"], ["proof (prove)\nusing this:\n  z \\<in> comp_proj_i X n i (X i x)\n  comp_proj_i ?X ?n ?i ?y =\n  {z \\<in> range (proj_stoch_proc ?X ?n). z !! ?i = ?y}\n\ngoal (1 subgoal):\n 1. z \\<in> range (proj_stoch_proc X n)", "by force"], ["proof (state)\nthis:\n  z \\<in> range (proj_stoch_proc X n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>X r n.\n                \\<lbrakk>borel_adapt_stoch_proc F X;\n                 r \\<in> range (proj_stoch_proc X n)\\<rbrakk>\n                \\<Longrightarrow> stream_space_single (proj_stoch_proc X n)\n                                   r \\<inter>\n                                  range (proj_stoch_proc X n) =\n                                  {r};\n     borel_adapt_stoch_proc F X; i \\<le> n; A \\<in> sets borel\\<rbrakk>\n    \\<Longrightarrow> stream_space_single (proj_stoch_proc X n) z \\<inter>\n                      range (proj_stoch_proc X n) =\n                      {z}", "then"], ["proof (chain)\npicking this:\n  z \\<in> range (proj_stoch_proc X n)", "show ?thesis"], ["proof (prove)\nusing this:\n  z \\<in> range (proj_stoch_proc X n)\n\ngoal (1 subgoal):\n 1. stream_space_single (proj_stoch_proc X n) z \\<inter>\n    range (proj_stoch_proc X n) =\n    {z}", "by (meson assms stream_space_single_preimage)"], ["proof (state)\nthis:\n  stream_space_single (proj_stoch_proc X n) z \\<inter>\n  range (proj_stoch_proc X n) =\n  {z}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  stream_space_single (proj_stoch_proc X n) z \\<inter>\n  range (proj_stoch_proc X n) =\n  {z}\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> comp_proj_i X n i (X i x) \\<Longrightarrow>\n       proj_stoch_proc X n -` {z} =\n       proj_stoch_proc X n -` stream_space_single (proj_stoch_proc X n) z", "thus \"(proj_stoch_proc X n) -` {z} = (proj_stoch_proc X n) -`\n        (stream_space_single (proj_stoch_proc X n) z)\""], ["proof (prove)\nusing this:\n  stream_space_single (proj_stoch_proc X n) z \\<inter>\n  range (proj_stoch_proc X n) =\n  {z}\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {z} =\n    proj_stoch_proc X n -` stream_space_single (proj_stoch_proc X n) z", "by auto"], ["proof (state)\nthis:\n  proj_stoch_proc X n -` {z} =\n  proj_stoch_proc X n -` stream_space_single (proj_stoch_proc X n) z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>z\\<in>comp_proj_i X n i (X i x).\n     proj_stoch_proc X n -` {z} =\n     proj_stoch_proc X n -` stream_space_single (proj_stoch_proc X n) z\n\ngoal (1 subgoal):\n 1. (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z}) =\n    (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n        proj_stoch_proc X n -` stream_space_single (proj_stoch_proc X n) z)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>z\\<in>comp_proj_i X n i (X i x).\n     proj_stoch_proc X n -` {z} =\n     proj_stoch_proc X n -` stream_space_single (proj_stoch_proc X n) z\n\ngoal (1 subgoal):\n 1. (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z}) =\n    (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n        proj_stoch_proc X n -` stream_space_single (proj_stoch_proc X n) z)", "by auto"], ["proof (state)\nthis:\n  (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z}) =\n  (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n      proj_stoch_proc X n -` stream_space_single (proj_stoch_proc X n) z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z}) =\n  (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n      proj_stoch_proc X n -` stream_space_single (proj_stoch_proc X n) z)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> A \\<inter> range (X i) \\<Longrightarrow>\n       X i -` {y} =\n       proj_stoch_proc X n -`\n       \\<Union>\n        (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)", "also"], ["proof (state)\nthis:\n  (\\<Union>z\\<in>comp_proj_i X n i (X i x). proj_stoch_proc X n -` {z}) =\n  (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n      proj_stoch_proc X n -` stream_space_single (proj_stoch_proc X n) z)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> A \\<inter> range (X i) \\<Longrightarrow>\n       X i -` {y} =\n       proj_stoch_proc X n -`\n       \\<Union>\n        (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)", "have \"... = proj_stoch_proc X n -` (\\<Union>z\\<in> comp_proj_i X n i y. (stream_space_single (proj_stoch_proc X n) z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n        proj_stoch_proc X n -`\n        stream_space_single (proj_stoch_proc X n) z) =\n    proj_stoch_proc X n -`\n    \\<Union>\n     (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)", "by (simp add: \\<open>y = X i x\\<close> vimage_Union)"], ["proof (state)\nthis:\n  (\\<Union>z\\<in>comp_proj_i X n i (X i x).\n      proj_stoch_proc X n -` stream_space_single (proj_stoch_proc X n) z) =\n  proj_stoch_proc X n -`\n  \\<Union> (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> A \\<inter> range (X i) \\<Longrightarrow>\n       X i -` {y} =\n       proj_stoch_proc X n -`\n       \\<Union>\n        (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)", "finally"], ["proof (chain)\npicking this:\n  X i -` {y} =\n  proj_stoch_proc X n -`\n  \\<Union> (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)", "show \"X i -`{y} = (proj_stoch_proc X n) -` (\\<Union>z\\<in> comp_proj_i X n i y.\n    (stream_space_single (proj_stoch_proc X n) z))\""], ["proof (prove)\nusing this:\n  X i -` {y} =\n  proj_stoch_proc X n -`\n  \\<Union> (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)\n\ngoal (1 subgoal):\n 1. X i -` {y} =\n    proj_stoch_proc X n -`\n    \\<Union>\n     (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)", "using \\<open>y = X i x\\<close>"], ["proof (prove)\nusing this:\n  X i -` {y} =\n  proj_stoch_proc X n -`\n  \\<Union> (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)\n  y = X i x\n\ngoal (1 subgoal):\n 1. X i -` {y} =\n    proj_stoch_proc X n -`\n    \\<Union>\n     (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)", "by simp"], ["proof (state)\nthis:\n  X i -` {y} =\n  proj_stoch_proc X n -`\n  \\<Union> (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) proj_stoch_pre_borel:\n  fixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> ('b::t2_space)\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  shows \"proj_stoch_proc X n -` {proj_stoch_proc X n x} \\<in> sets (stoch_proc_filt M X borel n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n x}\n    \\<in> sets (stoch_proc_filt M X borel n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n x}\n    \\<in> sets (stoch_proc_filt M X borel n)", "have \"proj_stoch_proc X n -` {proj_stoch_proc X n x} = (\\<Inter> i\\<in> {m. m\\<le>n}. (X i) -`{X i x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n x} =\n    (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})", "by (simp add:comp_proj_stoch_proc_preimage)"], ["proof (state)\nthis:\n  proj_stoch_proc X n -` {proj_stoch_proc X n x} =\n  (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n x}\n    \\<in> sets (stoch_proc_filt M X borel n)", "also"], ["proof (state)\nthis:\n  proj_stoch_proc X n -` {proj_stoch_proc X n x} =\n  (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n x}\n    \\<in> sets (stoch_proc_filt M X borel n)", "have \"... \\<in> sigma_sets (space M) (\\<Union>i\\<in>{m. m \\<le> n}. {X i -` A \\<inter> space M |A. A \\<in> sets borel})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\n    \\<in> sigma_sets (space M)\n           (\\<Union>i\\<in>{m. m \\<le> n}.\n               {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\n    \\<in> sigma_sets (space M)\n           (\\<Union>i\\<in>{m. m \\<le> n}.\n               {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "have inset: \"\\<forall>i\\<le>n. (X i) -`{X i x} \\<in> {X i -` A \\<inter> space M |A. A \\<in> sets borel}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n.\n       X i -` {X i x}\n       \\<in> {X i -` A \\<inter> space M |A. A \\<in> sets borel}", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       X i -` {X i x}\n       \\<in> {X i -` A \\<inter> space M |A. A \\<in> sets borel}", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       X i -` {X i x}\n       \\<in> {X i -` A \\<inter> space M |A. A \\<in> sets borel}", "assume \"i \\<le> n\""], ["proof (state)\nthis:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       X i -` {X i x}\n       \\<in> {X i -` A \\<inter> space M |A. A \\<in> sets borel}", "have \"\\<exists>U. open U \\<and> U\\<inter> (range (X i)) = {X i x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>U. open U \\<and> U \\<inter> range (X i) = {X i x}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>U. open U \\<and> U \\<inter> range (X i) = {X i x}", "have \"\\<exists>U. open U \\<and> X i x\\<in> U \\<and> U\\<inter> ((range (X i))-{X i x}) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>U.\n       open U \\<and>\n       X i x \\<in> U \\<and> U \\<inter> (range (X i) - {X i x}) = {}", "proof (rule open_except_set)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (range (X i) - {X i x})\n 2. X i x \\<notin> range (X i) - {X i x}", "have \"finite (range (X i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range (X i))", "using assms"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc F X\n\ngoal (1 subgoal):\n 1. finite (range (X i))", "by (metis adapt_stoch_proc_def bernoulli bernoulli_stream_space\n              nat_filtration_vimage_finite natural_filtration streams_UNIV)"], ["proof (state)\nthis:\n  finite (range (X i))\n\ngoal (2 subgoals):\n 1. finite (range (X i) - {X i x})\n 2. X i x \\<notin> range (X i) - {X i x}", "thus \"finite (range (X i) -{X i x})\""], ["proof (prove)\nusing this:\n  finite (range (X i))\n\ngoal (1 subgoal):\n 1. finite (range (X i) - {X i x})", "by auto"], ["proof (state)\nthis:\n  finite (range (X i) - {X i x})\n\ngoal (1 subgoal):\n 1. X i x \\<notin> range (X i) - {X i x}", "show \"X i x\\<notin> (range (X i)) -{X i x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X i x \\<notin> range (X i) - {X i x}", "by simp"], ["proof (state)\nthis:\n  X i x \\<notin> range (X i) - {X i x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>U.\n     open U \\<and>\n     X i x \\<in> U \\<and> U \\<inter> (range (X i) - {X i x}) = {}\n\ngoal (1 subgoal):\n 1. \\<exists>U. open U \\<and> U \\<inter> range (X i) = {X i x}", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>U.\n     open U \\<and>\n     X i x \\<in> U \\<and> U \\<inter> (range (X i) - {X i x}) = {}\n\ngoal (1 subgoal):\n 1. \\<exists>U. open U \\<and> U \\<inter> range (X i) = {X i x}", "using assms"], ["proof (prove)\nusing this:\n  \\<exists>U.\n     open U \\<and>\n     X i x \\<in> U \\<and> U \\<inter> (range (X i) - {X i x}) = {}\n  borel_adapt_stoch_proc F X\n\ngoal (1 subgoal):\n 1. \\<exists>U. open U \\<and> U \\<inter> range (X i) = {X i x}", "by auto"], ["proof (state)\nthis:\n  \\<exists>U. open U \\<and> U \\<inter> range (X i) = {X i x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>U. open U \\<and> U \\<inter> range (X i) = {X i x}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       X i -` {X i x}\n       \\<in> {X i -` A \\<inter> space M |A. A \\<in> sets borel}", "from this"], ["proof (chain)\npicking this:\n  \\<exists>U. open U \\<and> U \\<inter> range (X i) = {X i x}", "obtain U where \"open U\" and \"U\\<inter> (range (X i)) = {X i x}\""], ["proof (prove)\nusing this:\n  \\<exists>U. open U \\<and> U \\<inter> range (X i) = {X i x}\n\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>open U; U \\<inter> range (X i) = {X i x}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  open U\n  U \\<inter> range (X i) = {X i x}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       X i -` {X i x}\n       \\<in> {X i -` A \\<inter> space M |A. A \\<in> sets borel}", "have \"X i -` {X i x} = X i -`U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X i -` {X i x} = X i -` U", "using \\<open>U\\<inter> (range (X i)) = {X i x}\\<close>"], ["proof (prove)\nusing this:\n  U \\<inter> range (X i) = {X i x}\n\ngoal (1 subgoal):\n 1. X i -` {X i x} = X i -` U", "by auto"], ["proof (state)\nthis:\n  X i -` {X i x} = X i -` U\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       X i -` {X i x}\n       \\<in> {X i -` A \\<inter> space M |A. A \\<in> sets borel}", "also"], ["proof (state)\nthis:\n  X i -` {X i x} = X i -` U\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       X i -` {X i x}\n       \\<in> {X i -` A \\<inter> space M |A. A \\<in> sets borel}", "have \"... = X i -` U \\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X i -` U = X i -` U \\<inter> space M", "using bernoulli bernoulli_stream_space"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. X i -` U = X i -` U \\<inter> space M", "by simp"], ["proof (state)\nthis:\n  X i -` U = X i -` U \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       X i -` {X i x}\n       \\<in> {X i -` A \\<inter> space M |A. A \\<in> sets borel}", "finally"], ["proof (chain)\npicking this:\n  X i -` {X i x} = X i -` U \\<inter> space M", "have \"X i -` {X i x} = X i -` U \\<inter> space M\""], ["proof (prove)\nusing this:\n  X i -` {X i x} = X i -` U \\<inter> space M\n\ngoal (1 subgoal):\n 1. X i -` {X i x} = X i -` U \\<inter> space M", "."], ["proof (state)\nthis:\n  X i -` {X i x} = X i -` U \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       X i -` {X i x}\n       \\<in> {X i -` A \\<inter> space M |A. A \\<in> sets borel}", "moreover"], ["proof (state)\nthis:\n  X i -` {X i x} = X i -` U \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       X i -` {X i x}\n       \\<in> {X i -` A \\<inter> space M |A. A \\<in> sets borel}", "have \"U \\<in> sets borel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U \\<in> sets borel", "using \\<open>open U\\<close>"], ["proof (prove)\nusing this:\n  open U\n\ngoal (1 subgoal):\n 1. U \\<in> sets borel", "by simp"], ["proof (state)\nthis:\n  U \\<in> sets borel\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       X i -` {X i x}\n       \\<in> {X i -` A \\<inter> space M |A. A \\<in> sets borel}", "ultimately"], ["proof (chain)\npicking this:\n  X i -` {X i x} = X i -` U \\<inter> space M\n  U \\<in> sets borel", "show \"(X i) -`{X i x} \\<in> {X i -` A \\<inter> space M |A. A \\<in> sets borel}\""], ["proof (prove)\nusing this:\n  X i -` {X i x} = X i -` U \\<inter> space M\n  U \\<in> sets borel\n\ngoal (1 subgoal):\n 1. X i -` {X i x} \\<in> {X i -` A \\<inter> space M |A. A \\<in> sets borel}", "by auto"], ["proof (state)\nthis:\n  X i -` {X i x} \\<in> {X i -` A \\<inter> space M |A. A \\<in> sets borel}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i\\<le>n.\n     X i -` {X i x} \\<in> {X i -` A \\<inter> space M |A. A \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\n    \\<in> sigma_sets (space M)\n           (\\<Union>i\\<in>{m. m \\<le> n}.\n               {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\n    \\<in> sigma_sets (space M)\n           (\\<Union>i\\<in>{m. m \\<le> n}.\n               {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "proof (rule sigma_set_inter_init)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       X i -` {X i x}\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n 2. (\\<Union>i\\<in>{m. m \\<le> n}.\n        {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n    \\<subseteq> Pow (space M)", "show \"(\\<Union>i\\<in>{m. m \\<le> n}. {X i -` A \\<inter> space M |A. A \\<in> sets borel}) \\<subseteq> Pow (space M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>i\\<in>{m. m \\<le> n}.\n        {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n    \\<subseteq> Pow (space M)", "by auto"], ["proof (state)\nthis:\n  (\\<Union>i\\<in>{m. m \\<le> n}.\n      {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n  \\<subseteq> Pow (space M)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       X i -` {X i x}\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "show \"\\<And>i. i \\<le> n \\<Longrightarrow> X i -` {X i x} \\<in> sigma_sets (space M) (\\<Union>i\\<in>{m. m \\<le> n}. {X i -` A \\<inter> space M |A. A \\<in> sets borel})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       X i -` {X i x}\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "using inset"], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     X i -` {X i x} \\<in> {X i -` A \\<inter> space M |A. A \\<in> sets borel}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       X i -` {X i x}\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "by (metis (no_types, lifting) UN_I mem_Collect_eq sigma_sets.Basic)"], ["proof (state)\nthis:\n  ?i1 \\<le> n \\<Longrightarrow>\n  X ?i1 -` {X ?i1 x}\n  \\<in> sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\n  \\<in> sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\n  \\<in> sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n x}\n    \\<in> sets (stoch_proc_filt M X borel n)", "also"], ["proof (state)\nthis:\n  (\\<Inter>i\\<in>{m. m \\<le> n}. X i -` {X i x})\n  \\<in> sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n x}\n    \\<in> sets (stoch_proc_filt M X borel n)", "have \"... = sets (stoch_proc_filt M X borel n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_sets (space M)\n     (\\<Union>i\\<in>{m. m \\<le> n}.\n         {X i -` A \\<inter> space M |A. A \\<in> sets borel}) =\n    sets (stoch_proc_filt M X borel n)", "proof (rule stoch_proc_filt_sets[symmetric])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> random_variable borel (X i)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> random_variable borel (X i)", "assume \"i \\<le> n\""], ["proof (state)\nthis:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> random_variable borel (X i)", "show \"random_variable borel (X i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable borel (X i)", "using assms borel_adapt_stoch_proc_borel_measurable"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc F X\n  borel_adapt_stoch_proc F ?X \\<Longrightarrow>\n  \\<forall>n. random_variable borel (?X n)\n\ngoal (1 subgoal):\n 1. random_variable borel (X i)", "by blast"], ["proof (state)\nthis:\n  random_variable borel (X i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets borel}) =\n  sets (stoch_proc_filt M X borel n)\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n x}\n    \\<in> sets (stoch_proc_filt M X borel n)", "finally"], ["proof (chain)\npicking this:\n  proj_stoch_proc X n -` {proj_stoch_proc X n x}\n  \\<in> sets (stoch_proc_filt M X borel n)", "show \"proj_stoch_proc X n -` {proj_stoch_proc X n x}\n    \\<in> sets (stoch_proc_filt M X borel n)\""], ["proof (prove)\nusing this:\n  proj_stoch_proc X n -` {proj_stoch_proc X n x}\n  \\<in> sets (stoch_proc_filt M X borel n)\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n x}\n    \\<in> sets (stoch_proc_filt M X borel n)", "."], ["proof (state)\nthis:\n  proj_stoch_proc X n -` {proj_stoch_proc X n x}\n  \\<in> sets (stoch_proc_filt M X borel n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_cts_filtration) stoch_proc_filt_gen:\nfixes X::\"nat \\<Rightarrow> bool stream \\<Rightarrow> ('b::t2_space)\"\n  assumes \"borel_adapt_stoch_proc F X\"\n  shows \"stoch_proc_filt M X borel n = fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc X n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stoch_proc_filt M X borel n =\n    fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc X n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. stoch_proc_filt M X borel n =\n    fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc X n)", "have \"(\\<Union>i\\<in>{m. m \\<le> n}. {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n    \\<subseteq> {proj_stoch_proc X n -` B \\<inter> space M |B. B \\<in> sets (stream_space borel)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>i\\<in>{m. m \\<le> n}.\n        {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n    \\<subseteq> {proj_stoch_proc X n -` B \\<inter> space M |B.\n                 B \\<in> sets (stream_space borel)}", "proof (rule UN_subset_iff[THEN iffD2], intro ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       {X i -` A \\<inter> space M |A. A \\<in> sets borel}\n       \\<subseteq> {proj_stoch_proc X n -` B \\<inter> space M |B.\n                    B \\<in> sets (stream_space borel)}", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       {X i -` A \\<inter> space M |A. A \\<in> sets borel}\n       \\<subseteq> {proj_stoch_proc X n -` B \\<inter> space M |B.\n                    B \\<in> sets (stream_space borel)}", "assume \"i\\<in> {m. m\\<le>n}\""], ["proof (state)\nthis:\n  i \\<in> {m. m \\<le> n}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       {X i -` A \\<inter> space M |A. A \\<in> sets borel}\n       \\<subseteq> {proj_stoch_proc X n -` B \\<inter> space M |B.\n                    B \\<in> sets (stream_space borel)}", "hence \"i \\<le> n\""], ["proof (prove)\nusing this:\n  i \\<in> {m. m \\<le> n}\n\ngoal (1 subgoal):\n 1. i \\<le> n", "by simp"], ["proof (state)\nthis:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {m. m \\<le> n} \\<Longrightarrow>\n       {X i -` A \\<inter> space M |A. A \\<in> sets borel}\n       \\<subseteq> {proj_stoch_proc X n -` B \\<inter> space M |B.\n                    B \\<in> sets (stream_space borel)}", "show \"{X i -` A \\<inter> space M |A. A \\<in> sets borel} \\<subseteq>\n      {proj_stoch_proc X n -` B \\<inter> space M |B. B \\<in> sets (stream_space borel)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {X i -` A \\<inter> space M |A. A \\<in> sets borel}\n    \\<subseteq> {proj_stoch_proc X n -` B \\<inter> space M |B.\n                 B \\<in> sets (stream_space borel)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {X i -` A \\<inter> space M |A. A \\<in> sets borel}\n    \\<subseteq> {proj_stoch_proc X n -` B \\<inter> space M |B.\n                 B \\<in> sets (stream_space borel)}", "have \"\\<And>A. A\\<in> sets borel \\<Longrightarrow> X i -` A \\<inter> space M \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B. B \\<in> sets (stream_space borel)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X i -` A \\<inter> space M\n       \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B.\n              B \\<in> sets (stream_space borel)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X i -` A \\<inter> space M\n       \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B.\n              B \\<in> sets (stream_space borel)}", "fix A::\"'b set\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X i -` A \\<inter> space M\n       \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B.\n              B \\<in> sets (stream_space borel)}", "assume \"A\\<in> sets borel\""], ["proof (state)\nthis:\n  A \\<in> sets borel\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X i -` A \\<inter> space M\n       \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B.\n              B \\<in> sets (stream_space borel)}", "have \"X i -`A \\<inter> space M = X i -` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X i -` A \\<inter> space M = X i -` A", "using bernoulli bernoulli_stream_space"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. X i -` A \\<inter> space M = X i -` A", "by simp"], ["proof (state)\nthis:\n  X i -` A \\<inter> space M = X i -` A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X i -` A \\<inter> space M\n       \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B.\n              B \\<in> sets (stream_space borel)}", "also"], ["proof (state)\nthis:\n  X i -` A \\<inter> space M = X i -` A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X i -` A \\<inter> space M\n       \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B.\n              B \\<in> sets (stream_space borel)}", "have \"... = X i -`(A\\<inter> range (X i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X i -` A = X i -` (A \\<inter> range (X i))", "by auto"], ["proof (state)\nthis:\n  X i -` A = X i -` (A \\<inter> range (X i))\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X i -` A \\<inter> space M\n       \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B.\n              B \\<in> sets (stream_space borel)}", "also"], ["proof (state)\nthis:\n  X i -` A = X i -` (A \\<inter> range (X i))\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X i -` A \\<inter> space M\n       \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B.\n              B \\<in> sets (stream_space borel)}", "have \"... = (\\<Union> y\\<in> A\\<inter> range (X i). X i -`{y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X i -` (A \\<inter> range (X i)) =\n    (\\<Union>y\\<in>A \\<inter> range (X i). X i -` {y})", "by auto"], ["proof (state)\nthis:\n  X i -` (A \\<inter> range (X i)) =\n  (\\<Union>y\\<in>A \\<inter> range (X i). X i -` {y})\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X i -` A \\<inter> space M\n       \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B.\n              B \\<in> sets (stream_space borel)}", "also"], ["proof (state)\nthis:\n  X i -` (A \\<inter> range (X i)) =\n  (\\<Union>y\\<in>A \\<inter> range (X i). X i -` {y})\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X i -` A \\<inter> space M\n       \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B.\n              B \\<in> sets (stream_space borel)}", "have \"... = (\\<Union> y\\<in> A\\<inter> range (X i). (proj_stoch_proc X n) -` (\\<Union>z\\<in> comp_proj_i X n i y.\n            (stream_space_single (proj_stoch_proc X n) z)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>y\\<in>A \\<inter> range (X i). X i -` {y}) =\n    (\\<Union>y\\<in>A \\<inter> range (X i).\n        proj_stoch_proc X n -`\n        \\<Union>\n         (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))", "using stream_space_borel_union assms \\<open>i\\<le>n\\<close> \\<open>A\\<in>sets borel\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>borel_adapt_stoch_proc F ?X; ?i \\<le> ?n;\n   ?A \\<in> sets borel\\<rbrakk>\n  \\<Longrightarrow> \\<forall>y\\<in>?A \\<inter> range (?X ?i).\n                       ?X ?i -` {y} =\n                       proj_stoch_proc ?X ?n -`\n                       \\<Union>\n                        (stream_space_single (proj_stoch_proc ?X ?n) `\n                         comp_proj_i ?X ?n ?i y)\n  borel_adapt_stoch_proc F X\n  i \\<le> n\n  A \\<in> sets borel\n\ngoal (1 subgoal):\n 1. (\\<Union>y\\<in>A \\<inter> range (X i). X i -` {y}) =\n    (\\<Union>y\\<in>A \\<inter> range (X i).\n        proj_stoch_proc X n -`\n        \\<Union>\n         (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))", "by (metis (mono_tags, lifting) image_cong)"], ["proof (state)\nthis:\n  (\\<Union>y\\<in>A \\<inter> range (X i). X i -` {y}) =\n  (\\<Union>y\\<in>A \\<inter> range (X i).\n      proj_stoch_proc X n -`\n      \\<Union>\n       (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X i -` A \\<inter> space M\n       \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B.\n              B \\<in> sets (stream_space borel)}", "also"], ["proof (state)\nthis:\n  (\\<Union>y\\<in>A \\<inter> range (X i). X i -` {y}) =\n  (\\<Union>y\\<in>A \\<inter> range (X i).\n      proj_stoch_proc X n -`\n      \\<Union>\n       (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X i -` A \\<inter> space M\n       \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B.\n              B \\<in> sets (stream_space borel)}", "have \"... = (proj_stoch_proc X n) -` (\\<Union> y\\<in> A\\<inter> range (X i). (\\<Union>z\\<in> comp_proj_i X n i y.\n            (stream_space_single (proj_stoch_proc X n) z)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>y\\<in>A \\<inter> range (X i).\n        proj_stoch_proc X n -`\n        \\<Union>\n         (stream_space_single (proj_stoch_proc X n) `\n          comp_proj_i X n i y)) =\n    proj_stoch_proc X n -`\n    (\\<Union>y\\<in>A \\<inter> range (X i).\n        \\<Union>\n         (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))", "by (simp add: vimage_Union)"], ["proof (state)\nthis:\n  (\\<Union>y\\<in>A \\<inter> range (X i).\n      proj_stoch_proc X n -`\n      \\<Union>\n       (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)) =\n  proj_stoch_proc X n -`\n  (\\<Union>y\\<in>A \\<inter> range (X i).\n      \\<Union>\n       (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X i -` A \\<inter> space M\n       \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B.\n              B \\<in> sets (stream_space borel)}", "finally"], ["proof (chain)\npicking this:\n  X i -` A \\<inter> space M =\n  proj_stoch_proc X n -`\n  (\\<Union>y\\<in>A \\<inter> range (X i).\n      \\<Union>\n       (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))", "have \"X i -`A \\<inter> space M = (proj_stoch_proc X n) -` (\\<Union> y\\<in> A\\<inter> range (X i). (\\<Union>z\\<in> comp_proj_i X n i y.\n            (stream_space_single (proj_stoch_proc X n) z)))\""], ["proof (prove)\nusing this:\n  X i -` A \\<inter> space M =\n  proj_stoch_proc X n -`\n  (\\<Union>y\\<in>A \\<inter> range (X i).\n      \\<Union>\n       (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))\n\ngoal (1 subgoal):\n 1. X i -` A \\<inter> space M =\n    proj_stoch_proc X n -`\n    (\\<Union>y\\<in>A \\<inter> range (X i).\n        \\<Union>\n         (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))", "."], ["proof (state)\nthis:\n  X i -` A \\<inter> space M =\n  proj_stoch_proc X n -`\n  (\\<Union>y\\<in>A \\<inter> range (X i).\n      \\<Union>\n       (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X i -` A \\<inter> space M\n       \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B.\n              B \\<in> sets (stream_space borel)}", "moreover"], ["proof (state)\nthis:\n  X i -` A \\<inter> space M =\n  proj_stoch_proc X n -`\n  (\\<Union>y\\<in>A \\<inter> range (X i).\n      \\<Union>\n       (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X i -` A \\<inter> space M\n       \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B.\n              B \\<in> sets (stream_space borel)}", "have \"(\\<Union> y\\<in> A\\<inter> range (X i). (\\<Union>z\\<in> comp_proj_i X n i y.\n            (stream_space_single (proj_stoch_proc X n) z))) \\<in> sets (stream_space borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>y\\<in>A \\<inter> range (X i).\n        \\<Union>\n         (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))\n    \\<in> sets (stream_space borel)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union>y\\<in>A \\<inter> range (X i).\n        \\<Union>\n         (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))\n    \\<in> sets (stream_space borel)", "have \"finite (A\\<inter> range (X i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (A \\<inter> range (X i))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (A \\<inter> range (X i))", "have \"finite (range (X i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range (X i))", "using assms"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc F X\n\ngoal (1 subgoal):\n 1. finite (range (X i))", "by (metis adapt_stoch_proc_def bernoulli bernoulli_stream_space\n                  nat_filtration_vimage_finite natural_filtration streams_UNIV)"], ["proof (state)\nthis:\n  finite (range (X i))\n\ngoal (1 subgoal):\n 1. finite (A \\<inter> range (X i))", "thus ?thesis"], ["proof (prove)\nusing this:\n  finite (range (X i))\n\ngoal (1 subgoal):\n 1. finite (A \\<inter> range (X i))", "by auto"], ["proof (state)\nthis:\n  finite (A \\<inter> range (X i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite (A \\<inter> range (X i))\n\ngoal (1 subgoal):\n 1. (\\<Union>y\\<in>A \\<inter> range (X i).\n        \\<Union>\n         (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))\n    \\<in> sets (stream_space borel)", "moreover"], ["proof (state)\nthis:\n  finite (A \\<inter> range (X i))\n\ngoal (1 subgoal):\n 1. (\\<Union>y\\<in>A \\<inter> range (X i).\n        \\<Union>\n         (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))\n    \\<in> sets (stream_space borel)", "have \"\\<forall>y\\<in> A\\<inter> range (X i). (\\<Union>z\\<in> comp_proj_i X n i y.\n            (stream_space_single (proj_stoch_proc X n) z)) \\<in> sets (stream_space borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>A \\<inter> range (X i).\n       \\<Union>\n        (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)\n       \\<in> sets (stream_space borel)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> A \\<inter> range (X i) \\<Longrightarrow>\n       \\<Union>\n        (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)\n       \\<in> sets (stream_space borel)", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> A \\<inter> range (X i) \\<Longrightarrow>\n       \\<Union>\n        (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)\n       \\<in> sets (stream_space borel)", "assume \"y\\<in> A\\<inter> range (X i)\""], ["proof (state)\nthis:\n  y \\<in> A \\<inter> range (X i)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> A \\<inter> range (X i) \\<Longrightarrow>\n       \\<Union>\n        (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)\n       \\<in> sets (stream_space borel)", "have \"finite (comp_proj_i X n i y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (comp_proj_i X n i y)", "by (simp add: assms comp_proj_i_finite)"], ["proof (state)\nthis:\n  finite (comp_proj_i X n i y)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> A \\<inter> range (X i) \\<Longrightarrow>\n       \\<Union>\n        (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)\n       \\<in> sets (stream_space borel)", "moreover"], ["proof (state)\nthis:\n  finite (comp_proj_i X n i y)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> A \\<inter> range (X i) \\<Longrightarrow>\n       \\<Union>\n        (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)\n       \\<in> sets (stream_space borel)", "have \"\\<forall>z\\<in> comp_proj_i X n i y. (stream_space_single (proj_stoch_proc X n) z) \\<in> sets (stream_space borel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>comp_proj_i X n i y.\n       stream_space_single (proj_stoch_proc X n) z\n       \\<in> sets (stream_space borel)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> comp_proj_i X n i y \\<Longrightarrow>\n       stream_space_single (proj_stoch_proc X n) z\n       \\<in> sets (stream_space borel)", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> comp_proj_i X n i y \\<Longrightarrow>\n       stream_space_single (proj_stoch_proc X n) z\n       \\<in> sets (stream_space borel)", "assume \"z\\<in> comp_proj_i X n i y\""], ["proof (state)\nthis:\n  z \\<in> comp_proj_i X n i y\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> comp_proj_i X n i y \\<Longrightarrow>\n       stream_space_single (proj_stoch_proc X n) z\n       \\<in> sets (stream_space borel)", "thus \"(stream_space_single (proj_stoch_proc X n) z) \\<in> sets (stream_space borel)\""], ["proof (prove)\nusing this:\n  z \\<in> comp_proj_i X n i y\n\ngoal (1 subgoal):\n 1. stream_space_single (proj_stoch_proc X n) z\n    \\<in> sets (stream_space borel)", "using assms\n                stream_space_single_set"], ["proof (prove)\nusing this:\n  z \\<in> comp_proj_i X n i y\n  borel_adapt_stoch_proc F X\n  \\<lbrakk>borel_adapt_stoch_proc F ?X;\n   ?r \\<in> range (proj_stoch_proc ?X ?n)\\<rbrakk>\n  \\<Longrightarrow> stream_space_single (proj_stoch_proc ?X ?n) ?r\n                    \\<in> sets (stream_space borel)\n\ngoal (1 subgoal):\n 1. stream_space_single (proj_stoch_proc X n) z\n    \\<in> sets (stream_space borel)", "unfolding comp_proj_i_def"], ["proof (prove)\nusing this:\n  z \\<in> {z \\<in> range (proj_stoch_proc X n). z !! i = y}\n  borel_adapt_stoch_proc F X\n  \\<lbrakk>borel_adapt_stoch_proc F ?X;\n   ?r \\<in> range (proj_stoch_proc ?X ?n)\\<rbrakk>\n  \\<Longrightarrow> stream_space_single (proj_stoch_proc ?X ?n) ?r\n                    \\<in> sets (stream_space borel)\n\ngoal (1 subgoal):\n 1. stream_space_single (proj_stoch_proc X n) z\n    \\<in> sets (stream_space borel)", "by auto"], ["proof (state)\nthis:\n  stream_space_single (proj_stoch_proc X n) z\n  \\<in> sets (stream_space borel)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>z\\<in>comp_proj_i X n i y.\n     stream_space_single (proj_stoch_proc X n) z\n     \\<in> sets (stream_space borel)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> A \\<inter> range (X i) \\<Longrightarrow>\n       \\<Union>\n        (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)\n       \\<in> sets (stream_space borel)", "ultimately"], ["proof (chain)\npicking this:\n  finite (comp_proj_i X n i y)\n  \\<forall>z\\<in>comp_proj_i X n i y.\n     stream_space_single (proj_stoch_proc X n) z\n     \\<in> sets (stream_space borel)", "show \"(\\<Union>z\\<in> comp_proj_i X n i y. (stream_space_single (proj_stoch_proc X n) z)) \\<in>\n              sets (stream_space borel)\""], ["proof (prove)\nusing this:\n  finite (comp_proj_i X n i y)\n  \\<forall>z\\<in>comp_proj_i X n i y.\n     stream_space_single (proj_stoch_proc X n) z\n     \\<in> sets (stream_space borel)\n\ngoal (1 subgoal):\n 1. \\<Union>\n     (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)\n    \\<in> sets (stream_space borel)", "by blast"], ["proof (state)\nthis:\n  \\<Union> (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)\n  \\<in> sets (stream_space borel)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>y\\<in>A \\<inter> range (X i).\n     \\<Union>\n      (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)\n     \\<in> sets (stream_space borel)\n\ngoal (1 subgoal):\n 1. (\\<Union>y\\<in>A \\<inter> range (X i).\n        \\<Union>\n         (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))\n    \\<in> sets (stream_space borel)", "ultimately"], ["proof (chain)\npicking this:\n  finite (A \\<inter> range (X i))\n  \\<forall>y\\<in>A \\<inter> range (X i).\n     \\<Union>\n      (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)\n     \\<in> sets (stream_space borel)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (A \\<inter> range (X i))\n  \\<forall>y\\<in>A \\<inter> range (X i).\n     \\<Union>\n      (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y)\n     \\<in> sets (stream_space borel)\n\ngoal (1 subgoal):\n 1. (\\<Union>y\\<in>A \\<inter> range (X i).\n        \\<Union>\n         (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))\n    \\<in> sets (stream_space borel)", "by blast"], ["proof (state)\nthis:\n  (\\<Union>y\\<in>A \\<inter> range (X i).\n      \\<Union>\n       (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))\n  \\<in> sets (stream_space borel)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Union>y\\<in>A \\<inter> range (X i).\n      \\<Union>\n       (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))\n  \\<in> sets (stream_space borel)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X i -` A \\<inter> space M\n       \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B.\n              B \\<in> sets (stream_space borel)}", "ultimately"], ["proof (chain)\npicking this:\n  X i -` A \\<inter> space M =\n  proj_stoch_proc X n -`\n  (\\<Union>y\\<in>A \\<inter> range (X i).\n      \\<Union>\n       (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))\n  (\\<Union>y\\<in>A \\<inter> range (X i).\n      \\<Union>\n       (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))\n  \\<in> sets (stream_space borel)", "show \"X i -` A \\<inter> space M \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B. B \\<in> sets (stream_space borel)}\""], ["proof (prove)\nusing this:\n  X i -` A \\<inter> space M =\n  proj_stoch_proc X n -`\n  (\\<Union>y\\<in>A \\<inter> range (X i).\n      \\<Union>\n       (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))\n  (\\<Union>y\\<in>A \\<inter> range (X i).\n      \\<Union>\n       (stream_space_single (proj_stoch_proc X n) ` comp_proj_i X n i y))\n  \\<in> sets (stream_space borel)\n\ngoal (1 subgoal):\n 1. X i -` A \\<inter> space M\n    \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B.\n           B \\<in> sets (stream_space borel)}", "by (metis (mono_tags, lifting) \\<open>X i -` A \\<inter> space M = X i -` A\\<close> mem_Collect_eq)"], ["proof (state)\nthis:\n  X i -` A \\<inter> space M\n  \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B.\n         B \\<in> sets (stream_space borel)}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?A1 \\<in> sets borel \\<Longrightarrow>\n  X i -` ?A1 \\<inter> space M\n  \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B.\n         B \\<in> sets (stream_space borel)}\n\ngoal (1 subgoal):\n 1. {X i -` A \\<inter> space M |A. A \\<in> sets borel}\n    \\<subseteq> {proj_stoch_proc X n -` B \\<inter> space M |B.\n                 B \\<in> sets (stream_space borel)}", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?A1 \\<in> sets borel \\<Longrightarrow>\n  X i -` ?A1 \\<inter> space M\n  \\<in> {proj_stoch_proc X n -` B \\<inter> space M |B.\n         B \\<in> sets (stream_space borel)}\n\ngoal (1 subgoal):\n 1. {X i -` A \\<inter> space M |A. A \\<in> sets borel}\n    \\<subseteq> {proj_stoch_proc X n -` B \\<inter> space M |B.\n                 B \\<in> sets (stream_space borel)}", "by auto"], ["proof (state)\nthis:\n  {X i -` A \\<inter> space M |A. A \\<in> sets borel}\n  \\<subseteq> {proj_stoch_proc X n -` B \\<inter> space M |B.\n               B \\<in> sets (stream_space borel)}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {X i -` A \\<inter> space M |A. A \\<in> sets borel}\n  \\<subseteq> {proj_stoch_proc X n -` B \\<inter> space M |B.\n               B \\<in> sets (stream_space borel)}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Union>i\\<in>{m. m \\<le> n}.\n      {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n  \\<subseteq> {proj_stoch_proc X n -` B \\<inter> space M |B.\n               B \\<in> sets (stream_space borel)}\n\ngoal (1 subgoal):\n 1. stoch_proc_filt M X borel n =\n    fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc X n)", "hence l: \"sigma_sets (space M) (\\<Union>i\\<in>{m. m \\<le> n}. {X i -` A \\<inter> space M |A. A \\<in> sets borel}) \\<subseteq>\n    sigma_sets (space M) {proj_stoch_proc X n -` B \\<inter> space M |B. B \\<in> sets (stream_space borel)}\""], ["proof (prove)\nusing this:\n  (\\<Union>i\\<in>{m. m \\<le> n}.\n      {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n  \\<subseteq> {proj_stoch_proc X n -` B \\<inter> space M |B.\n               B \\<in> sets (stream_space borel)}\n\ngoal (1 subgoal):\n 1. sigma_sets (space M)\n     (\\<Union>i\\<in>{m. m \\<le> n}.\n         {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n    \\<subseteq> sigma_sets (space M)\n                 {proj_stoch_proc X n -` B \\<inter> space M |B.\n                  B \\<in> sets (stream_space borel)}", "by (rule sigma_sets_mono')"], ["proof (state)\nthis:\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n  \\<subseteq> sigma_sets (space M)\n               {proj_stoch_proc X n -` B \\<inter> space M |B.\n                B \\<in> sets (stream_space borel)}\n\ngoal (1 subgoal):\n 1. stoch_proc_filt M X borel n =\n    fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc X n)", "have \"{proj_stoch_proc X n -` B \\<inter> space M |B. B \\<in> sets (stream_space borel)}\n      \\<subseteq> sigma_sets (space M) (\\<Union>i\\<in>{m. m \\<le> n}. {X i -` A \\<inter> space M |A. A \\<in> sets borel})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {proj_stoch_proc X n -` B \\<inter> space M |B.\n     B \\<in> sets (stream_space borel)}\n    \\<subseteq> sigma_sets (space M)\n                 (\\<Union>i\\<in>{m. m \\<le> n}.\n                     {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {proj_stoch_proc X n -` B \\<inter> space M |B.\n     B \\<in> sets (stream_space borel)}\n    \\<subseteq> sigma_sets (space M)\n                 (\\<Union>i\\<in>{m. m \\<le> n}.\n                     {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "have \"\\<forall>B\\<in> sets (stream_space borel). proj_stoch_proc X n -` B \\<inter> space M \\<in>\n      sigma_sets (space M) (\\<Union> i\\<in> {m. m\\<le> n}. {(X i -`A) \\<inter> (space M) | A. A\\<in> sets borel })\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>B\\<in>sets (stream_space borel).\n       proj_stoch_proc X n -` B \\<inter> space M\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (stream_space borel) \\<Longrightarrow>\n       proj_stoch_proc X n -` B \\<inter> space M\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "fix B::\"'b stream set\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (stream_space borel) \\<Longrightarrow>\n       proj_stoch_proc X n -` B \\<inter> space M\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "assume \"B\\<in> sets (stream_space borel)\""], ["proof (state)\nthis:\n  B \\<in> sets (stream_space borel)\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (stream_space borel) \\<Longrightarrow>\n       proj_stoch_proc X n -` B \\<inter> space M\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "have \"proj_stoch_proc X n -` B \\<inter> space M = proj_stoch_proc X n -`B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` B \\<inter> space M = proj_stoch_proc X n -` B", "using bernoulli bernoulli_stream_space"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` B \\<inter> space M = proj_stoch_proc X n -` B", "by simp"], ["proof (state)\nthis:\n  proj_stoch_proc X n -` B \\<inter> space M = proj_stoch_proc X n -` B\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (stream_space borel) \\<Longrightarrow>\n       proj_stoch_proc X n -` B \\<inter> space M\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "also"], ["proof (state)\nthis:\n  proj_stoch_proc X n -` B \\<inter> space M = proj_stoch_proc X n -` B\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (stream_space borel) \\<Longrightarrow>\n       proj_stoch_proc X n -` B \\<inter> space M\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "have \"... = proj_stoch_proc X n -` (B \\<inter> range (proj_stoch_proc X n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` B =\n    proj_stoch_proc X n -` (B \\<inter> range (proj_stoch_proc X n))", "by auto"], ["proof (state)\nthis:\n  proj_stoch_proc X n -` B =\n  proj_stoch_proc X n -` (B \\<inter> range (proj_stoch_proc X n))\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (stream_space borel) \\<Longrightarrow>\n       proj_stoch_proc X n -` B \\<inter> space M\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "also"], ["proof (state)\nthis:\n  proj_stoch_proc X n -` B =\n  proj_stoch_proc X n -` (B \\<inter> range (proj_stoch_proc X n))\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (stream_space borel) \\<Longrightarrow>\n       proj_stoch_proc X n -` B \\<inter> space M\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "have \"... = proj_stoch_proc X n -` (\\<Union> y\\<in> (B \\<inter> range (proj_stoch_proc X n)). {y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` (B \\<inter> range (proj_stoch_proc X n)) =\n    proj_stoch_proc X n -`\n    (\\<Union>y\\<in>B \\<inter> range (proj_stoch_proc X n). {y})", "by simp"], ["proof (state)\nthis:\n  proj_stoch_proc X n -` (B \\<inter> range (proj_stoch_proc X n)) =\n  proj_stoch_proc X n -`\n  (\\<Union>y\\<in>B \\<inter> range (proj_stoch_proc X n). {y})\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (stream_space borel) \\<Longrightarrow>\n       proj_stoch_proc X n -` B \\<inter> space M\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "also"], ["proof (state)\nthis:\n  proj_stoch_proc X n -` (B \\<inter> range (proj_stoch_proc X n)) =\n  proj_stoch_proc X n -`\n  (\\<Union>y\\<in>B \\<inter> range (proj_stoch_proc X n). {y})\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (stream_space borel) \\<Longrightarrow>\n       proj_stoch_proc X n -` B \\<inter> space M\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "have \"... = (\\<Union> y\\<in> (B \\<inter> range (proj_stoch_proc X n)).  proj_stoch_proc X n -`{y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -`\n    (\\<Union>y\\<in>B \\<inter> range (proj_stoch_proc X n). {y}) =\n    (\\<Union>y\\<in>B \\<inter> range (proj_stoch_proc X n).\n        proj_stoch_proc X n -` {y})", "by auto"], ["proof (state)\nthis:\n  proj_stoch_proc X n -`\n  (\\<Union>y\\<in>B \\<inter> range (proj_stoch_proc X n). {y}) =\n  (\\<Union>y\\<in>B \\<inter> range (proj_stoch_proc X n).\n      proj_stoch_proc X n -` {y})\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (stream_space borel) \\<Longrightarrow>\n       proj_stoch_proc X n -` B \\<inter> space M\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "finally"], ["proof (chain)\npicking this:\n  proj_stoch_proc X n -` B \\<inter> space M =\n  (\\<Union>y\\<in>B \\<inter> range (proj_stoch_proc X n).\n      proj_stoch_proc X n -` {y})", "have eqB: \"proj_stoch_proc X n -` B \\<inter> space M =\n        (\\<Union> y\\<in> (B \\<inter> range (proj_stoch_proc X n)). proj_stoch_proc X n -`{y})\""], ["proof (prove)\nusing this:\n  proj_stoch_proc X n -` B \\<inter> space M =\n  (\\<Union>y\\<in>B \\<inter> range (proj_stoch_proc X n).\n      proj_stoch_proc X n -` {y})\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` B \\<inter> space M =\n    (\\<Union>y\\<in>B \\<inter> range (proj_stoch_proc X n).\n        proj_stoch_proc X n -` {y})", "."], ["proof (state)\nthis:\n  proj_stoch_proc X n -` B \\<inter> space M =\n  (\\<Union>y\\<in>B \\<inter> range (proj_stoch_proc X n).\n      proj_stoch_proc X n -` {y})\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (stream_space borel) \\<Longrightarrow>\n       proj_stoch_proc X n -` B \\<inter> space M\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "have \"\\<forall>y\\<in> (B \\<inter> range (proj_stoch_proc X n)). proj_stoch_proc X n -`{y} \\<in>\n        sigma_sets (space M) (\\<Union> i\\<in> {m. m\\<le> n}. {(X i -`A) \\<inter> (space M) | A. A\\<in> sets borel })\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>B \\<inter> range (proj_stoch_proc X n).\n       proj_stoch_proc X n -` {y}\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> B \\<inter> range (proj_stoch_proc X n) \\<Longrightarrow>\n       proj_stoch_proc X n -` {y}\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> B \\<inter> range (proj_stoch_proc X n) \\<Longrightarrow>\n       proj_stoch_proc X n -` {y}\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "assume \"y \\<in> B \\<inter> range (proj_stoch_proc X n)\""], ["proof (state)\nthis:\n  y \\<in> B \\<inter> range (proj_stoch_proc X n)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> B \\<inter> range (proj_stoch_proc X n) \\<Longrightarrow>\n       proj_stoch_proc X n -` {y}\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "hence \"\\<exists>x. y = proj_stoch_proc X n x\""], ["proof (prove)\nusing this:\n  y \\<in> B \\<inter> range (proj_stoch_proc X n)\n\ngoal (1 subgoal):\n 1. \\<exists>x. y = proj_stoch_proc X n x", "by auto"], ["proof (state)\nthis:\n  \\<exists>x. y = proj_stoch_proc X n x\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> B \\<inter> range (proj_stoch_proc X n) \\<Longrightarrow>\n       proj_stoch_proc X n -` {y}\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "from this"], ["proof (chain)\npicking this:\n  \\<exists>x. y = proj_stoch_proc X n x", "obtain x where \"y = proj_stoch_proc X n x\""], ["proof (prove)\nusing this:\n  \\<exists>x. y = proj_stoch_proc X n x\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        y = proj_stoch_proc X n x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y = proj_stoch_proc X n x\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> B \\<inter> range (proj_stoch_proc X n) \\<Longrightarrow>\n       proj_stoch_proc X n -` {y}\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "have \"proj_stoch_proc X n -`{proj_stoch_proc X n x} \\<in> sets (stoch_proc_filt M X borel n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {proj_stoch_proc X n x}\n    \\<in> sets (stoch_proc_filt M X borel n)", "by (rule proj_stoch_pre_borel, simp add:assms)"], ["proof (state)\nthis:\n  proj_stoch_proc X n -` {proj_stoch_proc X n x}\n  \\<in> sets (stoch_proc_filt M X borel n)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> B \\<inter> range (proj_stoch_proc X n) \\<Longrightarrow>\n       proj_stoch_proc X n -` {y}\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "also"], ["proof (state)\nthis:\n  proj_stoch_proc X n -` {proj_stoch_proc X n x}\n  \\<in> sets (stoch_proc_filt M X borel n)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> B \\<inter> range (proj_stoch_proc X n) \\<Longrightarrow>\n       proj_stoch_proc X n -` {y}\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "have \"... = sigma_sets (space M) (\\<Union> i\\<in> {m. m\\<le> n}. {(X i -`A) \\<inter> (space M) | A. A\\<in> sets borel })\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel n) =\n    sigma_sets (space M)\n     (\\<Union>i\\<in>{m. m \\<le> n}.\n         {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "proof (rule stoch_proc_filt_sets)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> random_variable borel (X i)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> random_variable borel (X i)", "assume \"i\\<le> n\""], ["proof (state)\nthis:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<le> n \\<Longrightarrow> random_variable borel (X i)", "show \"random_variable borel (X i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. random_variable borel (X i)", "using assms borel_adapt_stoch_proc_borel_measurable"], ["proof (prove)\nusing this:\n  borel_adapt_stoch_proc F X\n  borel_adapt_stoch_proc F ?X \\<Longrightarrow>\n  \\<forall>n. random_variable borel (?X n)\n\ngoal (1 subgoal):\n 1. random_variable borel (X i)", "by blast"], ["proof (state)\nthis:\n  random_variable borel (X i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sets (stoch_proc_filt M X borel n) =\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> B \\<inter> range (proj_stoch_proc X n) \\<Longrightarrow>\n       proj_stoch_proc X n -` {y}\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "finally"], ["proof (chain)\npicking this:\n  proj_stoch_proc X n -` {proj_stoch_proc X n x}\n  \\<in> sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "show \"proj_stoch_proc X n -`{y} \\<in>\n          sigma_sets (space M) (\\<Union> i\\<in> {m. m\\<le> n}. {(X i -`A) \\<inter> (space M) | A. A\\<in> sets borel })\""], ["proof (prove)\nusing this:\n  proj_stoch_proc X n -` {proj_stoch_proc X n x}\n  \\<in> sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {y}\n    \\<in> sigma_sets (space M)\n           (\\<Union>i\\<in>{m. m \\<le> n}.\n               {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "using \\<open>y = proj_stoch_proc X n x\\<close>"], ["proof (prove)\nusing this:\n  proj_stoch_proc X n -` {proj_stoch_proc X n x}\n  \\<in> sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n  y = proj_stoch_proc X n x\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` {y}\n    \\<in> sigma_sets (space M)\n           (\\<Union>i\\<in>{m. m \\<le> n}.\n               {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "by simp"], ["proof (state)\nthis:\n  proj_stoch_proc X n -` {y}\n  \\<in> sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>y\\<in>B \\<inter> range (proj_stoch_proc X n).\n     proj_stoch_proc X n -` {y}\n     \\<in> sigma_sets (space M)\n            (\\<Union>i\\<in>{m. m \\<le> n}.\n                {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (stream_space borel) \\<Longrightarrow>\n       proj_stoch_proc X n -` B \\<inter> space M\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "hence \"(\\<Union> y\\<in> (B \\<inter> range (proj_stoch_proc X n)). proj_stoch_proc X n -`{y}) \\<in>\n        sigma_sets (space M) (\\<Union> i\\<in> {m. m\\<le> n}. {(X i -`A) \\<inter> (space M) | A. A\\<in> sets borel })\""], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>B \\<inter> range (proj_stoch_proc X n).\n     proj_stoch_proc X n -` {y}\n     \\<in> sigma_sets (space M)\n            (\\<Union>i\\<in>{m. m \\<le> n}.\n                {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. (\\<Union>y\\<in>B \\<inter> range (proj_stoch_proc X n).\n        proj_stoch_proc X n -` {y})\n    \\<in> sigma_sets (space M)\n           (\\<Union>i\\<in>{m. m \\<le> n}.\n               {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "proof (rule sigma_set_union_count)"], ["proof (state)\ngoal (1 subgoal):\n 1. countable (B \\<inter> range (proj_stoch_proc X n))", "have \"finite (range (proj_stoch_proc X n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range (proj_stoch_proc X n))", "by (simp add: assms proj_stoch_set_finite_range)"], ["proof (state)\nthis:\n  finite (range (proj_stoch_proc X n))\n\ngoal (1 subgoal):\n 1. countable (B \\<inter> range (proj_stoch_proc X n))", "thus \"countable (B \\<inter> range (proj_stoch_proc X n))\""], ["proof (prove)\nusing this:\n  finite (range (proj_stoch_proc X n))\n\ngoal (1 subgoal):\n 1. countable (B \\<inter> range (proj_stoch_proc X n))", "by (simp add: countable_finite)"], ["proof (state)\nthis:\n  countable (B \\<inter> range (proj_stoch_proc X n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Union>y\\<in>B \\<inter> range (proj_stoch_proc X n).\n      proj_stoch_proc X n -` {y})\n  \\<in> sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in> sets (stream_space borel) \\<Longrightarrow>\n       proj_stoch_proc X n -` B \\<inter> space M\n       \\<in> sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "thus \"proj_stoch_proc X n -` B \\<inter> space M \\<in>\n        sigma_sets (space M) (\\<Union>i\\<in>{m. m \\<le> n}. {X i -` A \\<inter> space M |A. A \\<in> sets borel})\""], ["proof (prove)\nusing this:\n  (\\<Union>y\\<in>B \\<inter> range (proj_stoch_proc X n).\n      proj_stoch_proc X n -` {y})\n  \\<in> sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` B \\<inter> space M\n    \\<in> sigma_sets (space M)\n           (\\<Union>i\\<in>{m. m \\<le> n}.\n               {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "using eqB"], ["proof (prove)\nusing this:\n  (\\<Union>y\\<in>B \\<inter> range (proj_stoch_proc X n).\n      proj_stoch_proc X n -` {y})\n  \\<in> sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n  proj_stoch_proc X n -` B \\<inter> space M =\n  (\\<Union>y\\<in>B \\<inter> range (proj_stoch_proc X n).\n      proj_stoch_proc X n -` {y})\n\ngoal (1 subgoal):\n 1. proj_stoch_proc X n -` B \\<inter> space M\n    \\<in> sigma_sets (space M)\n           (\\<Union>i\\<in>{m. m \\<le> n}.\n               {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "by simp"], ["proof (state)\nthis:\n  proj_stoch_proc X n -` B \\<inter> space M\n  \\<in> sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>B\\<in>sets (stream_space borel).\n     proj_stoch_proc X n -` B \\<inter> space M\n     \\<in> sigma_sets (space M)\n            (\\<Union>i\\<in>{m. m \\<le> n}.\n                {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. {proj_stoch_proc X n -` B \\<inter> space M |B.\n     B \\<in> sets (stream_space borel)}\n    \\<subseteq> sigma_sets (space M)\n                 (\\<Union>i\\<in>{m. m \\<le> n}.\n                     {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>B\\<in>sets (stream_space borel).\n     proj_stoch_proc X n -` B \\<inter> space M\n     \\<in> sigma_sets (space M)\n            (\\<Union>i\\<in>{m. m \\<le> n}.\n                {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. {proj_stoch_proc X n -` B \\<inter> space M |B.\n     B \\<in> sets (stream_space borel)}\n    \\<subseteq> sigma_sets (space M)\n                 (\\<Union>i\\<in>{m. m \\<le> n}.\n                     {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "by auto"], ["proof (state)\nthis:\n  {proj_stoch_proc X n -` B \\<inter> space M |B.\n   B \\<in> sets (stream_space borel)}\n  \\<subseteq> sigma_sets (space M)\n               (\\<Union>i\\<in>{m. m \\<le> n}.\n                   {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {proj_stoch_proc X n -` B \\<inter> space M |B.\n   B \\<in> sets (stream_space borel)}\n  \\<subseteq> sigma_sets (space M)\n               (\\<Union>i\\<in>{m. m \\<le> n}.\n                   {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. stoch_proc_filt M X borel n =\n    fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc X n)", "hence \"sigma_sets (space M) {proj_stoch_proc X n -` B \\<inter> space M |B. B \\<in> sets (stream_space borel)}\n    \\<subseteq> sigma_sets (space M) (\\<Union>i\\<in>{m. m \\<le> n}. {X i -` A \\<inter> space M |A. A \\<in> sets borel})\""], ["proof (prove)\nusing this:\n  {proj_stoch_proc X n -` B \\<inter> space M |B.\n   B \\<in> sets (stream_space borel)}\n  \\<subseteq> sigma_sets (space M)\n               (\\<Union>i\\<in>{m. m \\<le> n}.\n                   {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. sigma_sets (space M)\n     {proj_stoch_proc X n -` B \\<inter> space M |B.\n      B \\<in> sets (stream_space borel)}\n    \\<subseteq> sigma_sets (space M)\n                 (\\<Union>i\\<in>{m. m \\<le> n}.\n                     {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "by (rule sigma_sets_mono)"], ["proof (state)\nthis:\n  sigma_sets (space M)\n   {proj_stoch_proc X n -` B \\<inter> space M |B.\n    B \\<in> sets (stream_space borel)}\n  \\<subseteq> sigma_sets (space M)\n               (\\<Union>i\\<in>{m. m \\<le> n}.\n                   {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. stoch_proc_filt M X borel n =\n    fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc X n)", "hence \"sigma_sets (space M) {proj_stoch_proc X n -` B \\<inter> space M |B. B \\<in> sets (stream_space borel)}\n    = sigma_sets (space M) (\\<Union>i\\<in>{m. m \\<le> n}. {X i -` A \\<inter> space M |A. A \\<in> sets borel})\""], ["proof (prove)\nusing this:\n  sigma_sets (space M)\n   {proj_stoch_proc X n -` B \\<inter> space M |B.\n    B \\<in> sets (stream_space borel)}\n  \\<subseteq> sigma_sets (space M)\n               (\\<Union>i\\<in>{m. m \\<le> n}.\n                   {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. sigma_sets (space M)\n     {proj_stoch_proc X n -` B \\<inter> space M |B.\n      B \\<in> sets (stream_space borel)} =\n    sigma_sets (space M)\n     (\\<Union>i\\<in>{m. m \\<le> n}.\n         {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "using l"], ["proof (prove)\nusing this:\n  sigma_sets (space M)\n   {proj_stoch_proc X n -` B \\<inter> space M |B.\n    B \\<in> sets (stream_space borel)}\n  \\<subseteq> sigma_sets (space M)\n               (\\<Union>i\\<in>{m. m \\<le> n}.\n                   {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n  \\<subseteq> sigma_sets (space M)\n               {proj_stoch_proc X n -` B \\<inter> space M |B.\n                B \\<in> sets (stream_space borel)}\n\ngoal (1 subgoal):\n 1. sigma_sets (space M)\n     {proj_stoch_proc X n -` B \\<inter> space M |B.\n      B \\<in> sets (stream_space borel)} =\n    sigma_sets (space M)\n     (\\<Union>i\\<in>{m. m \\<le> n}.\n         {X i -` A \\<inter> space M |A. A \\<in> sets borel})", "by simp"], ["proof (state)\nthis:\n  sigma_sets (space M)\n   {proj_stoch_proc X n -` B \\<inter> space M |B.\n    B \\<in> sets (stream_space borel)} =\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. stoch_proc_filt M X borel n =\n    fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc X n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  sigma_sets (space M)\n   {proj_stoch_proc X n -` B \\<inter> space M |B.\n    B \\<in> sets (stream_space borel)} =\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. stoch_proc_filt M X borel n =\n    fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc X n)", "unfolding stoch_proc_filt_def fct_gen_subalgebra_def"], ["proof (prove)\nusing this:\n  sigma_sets (space M)\n   {proj_stoch_proc X n -` B \\<inter> space M |B.\n    B \\<in> sets (stream_space borel)} =\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n\ngoal (1 subgoal):\n 1. gen_subalgebra M\n     (sigma_sets (space M)\n       (\\<Union>i\\<in>{m. m \\<le> n}.\n           {X i -` A \\<inter> space M |A. A \\<in> sets borel})) =\n    gen_subalgebra M\n     (sigma_sets (space M)\n       {proj_stoch_proc X n -` B \\<inter> space M |B.\n        B \\<in> sets (stream_space borel)})", "by simp"], ["proof (state)\nthis:\n  stoch_proc_filt M X borel n =\n  fct_gen_subalgebra M (stream_space borel) (proj_stoch_proc X n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) stoch_proc_subalg_nat_filt:\n  assumes \"borel_adapt_stoch_proc nat_filtration X\"\n  shows \"subalgebra (nat_filtration n) (stoch_proc_filt M X borel n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subalgebra (nat_filtration n) (stoch_proc_filt M X borel n)", "unfolding subalgebra_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. space (stoch_proc_filt M X borel n) = space (nat_filtration n) \\<and>\n    sets (stoch_proc_filt M X borel n) \\<subseteq> sets (nat_filtration n)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. space (stoch_proc_filt M X borel n) = space (nat_filtration n)\n 2. sets (stoch_proc_filt M X borel n) \\<subseteq> sets (nat_filtration n)", "show \"space (stoch_proc_filt M X borel n) = space (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space (stoch_proc_filt M X borel n) = space (nat_filtration n)", "by (simp add: fct_gen_subalgebra_space nat_filtration_def stoch_proc_filt_space)"], ["proof (state)\nthis:\n  space (stoch_proc_filt M X borel n) = space (nat_filtration n)\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel n) \\<subseteq> sets (nat_filtration n)", "show \"sets (stoch_proc_filt M X borel n) \\<subseteq> sets (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel n) \\<subseteq> sets (nat_filtration n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel n) \\<subseteq> sets (nat_filtration n)", "have \"\\<forall>i \\<le> n. (\\<forall> A\\<in> sets borel. X i -`A \\<inter> space M \\<in> sets (nat_filtration n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n.\n       \\<forall>A\\<in>sets borel.\n          X i -` A \\<inter> space M \\<in> sets (nat_filtration n)", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       \\<forall>A\\<in>sets borel.\n          X i -` A \\<inter> space M \\<in> sets (nat_filtration n)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       \\<forall>A\\<in>sets borel.\n          X i -` A \\<inter> space M \\<in> sets (nat_filtration n)", "assume \"i \\<le> n\""], ["proof (state)\nthis:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       \\<forall>A\\<in>sets borel.\n          X i -` A \\<inter> space M \\<in> sets (nat_filtration n)", "have \"X i \\<in> borel_measurable (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X i \\<in> borel_measurable (nat_filtration n)", "by (metis \\<open>i \\<le> n\\<close> adapt_stoch_proc_def assms filtrationE2 measurable_from_subalg nat_discrete_filtration)"], ["proof (state)\nthis:\n  X i \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> n \\<Longrightarrow>\n       \\<forall>A\\<in>sets borel.\n          X i -` A \\<inter> space M \\<in> sets (nat_filtration n)", "show \"\\<forall>A\\<in>sets borel. X i -` A \\<inter> space M \\<in> sets (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>A\\<in>sets borel.\n       X i -` A \\<inter> space M \\<in> sets (nat_filtration n)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X i -` A \\<inter> space M \\<in> sets (nat_filtration n)", "fix A::\"'a set\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X i -` A \\<inter> space M \\<in> sets (nat_filtration n)", "assume \"A\\<in> sets borel\""], ["proof (state)\nthis:\n  A \\<in> sets borel\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> sets borel \\<Longrightarrow>\n       X i -` A \\<inter> space M \\<in> sets (nat_filtration n)", "thus \"X i -` A \\<inter> space M \\<in> sets (nat_filtration n)\""], ["proof (prove)\nusing this:\n  A \\<in> sets borel\n\ngoal (1 subgoal):\n 1. X i -` A \\<inter> space M \\<in> sets (nat_filtration n)", "using \\<open>X i \\<in> borel_measurable (nat_filtration n)\\<close>"], ["proof (prove)\nusing this:\n  A \\<in> sets borel\n  X i \\<in> borel_measurable (nat_filtration n)\n\ngoal (1 subgoal):\n 1. X i -` A \\<inter> space M \\<in> sets (nat_filtration n)", "by (metis bernoulli bernoulli_stream_space measurable_sets nat_filtration_space streams_UNIV)"], ["proof (state)\nthis:\n  X i -` A \\<inter> space M \\<in> sets (nat_filtration n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>A\\<in>sets borel.\n     X i -` A \\<inter> space M \\<in> sets (nat_filtration n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i\\<le>n.\n     \\<forall>A\\<in>sets borel.\n        X i -` A \\<inter> space M \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel n) \\<subseteq> sets (nat_filtration n)", "hence \"(\\<Union> i\\<in> {m. m\\<le> n}. {(X i -`A) \\<inter> (space M) | A. A\\<in> sets borel }) \\<subseteq> sets (nat_filtration n)\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     \\<forall>A\\<in>sets borel.\n        X i -` A \\<inter> space M \\<in> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. (\\<Union>i\\<in>{m. m \\<le> n}.\n        {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n    \\<subseteq> sets (nat_filtration n)", "by auto"], ["proof (state)\nthis:\n  (\\<Union>i\\<in>{m. m \\<le> n}.\n      {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n  \\<subseteq> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel n) \\<subseteq> sets (nat_filtration n)", "hence \"sigma_sets (space M) (\\<Union> i\\<in> {m. m\\<le> n}. {(X i -`A) \\<inter> (space M) | A. A\\<in> sets borel }) \\<subseteq> sets (nat_filtration n)\""], ["proof (prove)\nusing this:\n  (\\<Union>i\\<in>{m. m \\<le> n}.\n      {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n  \\<subseteq> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. sigma_sets (space M)\n     (\\<Union>i\\<in>{m. m \\<le> n}.\n         {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n    \\<subseteq> sets (nat_filtration n)", "by (metis (no_types, lifting) bernoulli bernoulli_stream_space nat_filtration_space sets.sigma_sets_subset streams_UNIV)"], ["proof (state)\nthis:\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n  \\<subseteq> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel n) \\<subseteq> sets (nat_filtration n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n  \\<subseteq> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel n) \\<subseteq> sets (nat_filtration n)", "using assms stoch_proc_filt_sets"], ["proof (prove)\nusing this:\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n  \\<subseteq> sets (nat_filtration n)\n  borel_adapt_stoch_proc nat_filtration X\n  (\\<And>i.\n      i \\<le> ?n \\<Longrightarrow>\n      ?X i \\<in> ?M \\<rightarrow>\\<^sub>M ?N) \\<Longrightarrow>\n  sets (stoch_proc_filt ?M ?X ?N ?n) =\n  sigma_sets (space ?M)\n   (\\<Union>i\\<in>{m. m \\<le> ?n}.\n       {?X i -` A \\<inter> space ?M |A. A \\<in> sets ?N})\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel n) \\<subseteq> sets (nat_filtration n)", "unfolding adapt_stoch_proc_def"], ["proof (prove)\nusing this:\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n  \\<subseteq> sets (nat_filtration n)\n  \\<forall>t. X t \\<in> borel_measurable (nat_filtration t)\n  (\\<And>i.\n      i \\<le> ?n \\<Longrightarrow>\n      ?X i \\<in> ?M \\<rightarrow>\\<^sub>M ?N) \\<Longrightarrow>\n  sets (stoch_proc_filt ?M ?X ?N ?n) =\n  sigma_sets (space ?M)\n   (\\<Union>i\\<in>{m. m \\<le> ?n}.\n       {?X i -` A \\<inter> space ?M |A. A \\<in> sets ?N})\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel n) \\<subseteq> sets (nat_filtration n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n             \\<subseteq> sets (nat_filtration n);\n     \\<forall>t. X t \\<in> borel_measurable (nat_filtration t);\n     \\<And>n X M N.\n        (\\<And>i.\n            i \\<le> n \\<Longrightarrow>\n            X i \\<in> M \\<rightarrow>\\<^sub>M N) \\<Longrightarrow>\n        sets (stoch_proc_filt M X N n) =\n        sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets N})\\<rbrakk>\n    \\<Longrightarrow> sets (stoch_proc_filt M X borel n)\n                      \\<subseteq> sets (nat_filtration n)", "assume \"\\<forall>t. X t \\<in> borel_measurable (nat_filtration t)\""], ["proof (state)\nthis:\n  \\<forall>t. X t \\<in> borel_measurable (nat_filtration t)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n             \\<subseteq> sets (nat_filtration n);\n     \\<forall>t. X t \\<in> borel_measurable (nat_filtration t);\n     \\<And>n X M N.\n        (\\<And>i.\n            i \\<le> n \\<Longrightarrow>\n            X i \\<in> M \\<rightarrow>\\<^sub>M N) \\<Longrightarrow>\n        sets (stoch_proc_filt M X N n) =\n        sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets N})\\<rbrakk>\n    \\<Longrightarrow> sets (stoch_proc_filt M X borel n)\n                      \\<subseteq> sets (nat_filtration n)", "then"], ["proof (chain)\npicking this:\n  \\<forall>t. X t \\<in> borel_measurable (nat_filtration t)", "have f1: \"\\<forall>n m. X n \\<in> borel_measurable m \\<or> \\<not> subalgebra m (nat_filtration n)\""], ["proof (prove)\nusing this:\n  \\<forall>t. X t \\<in> borel_measurable (nat_filtration t)\n\ngoal (1 subgoal):\n 1. \\<forall>n m.\n       X n \\<in> borel_measurable m \\<or>\n       \\<not> subalgebra m (nat_filtration n)", "by (meson measurable_from_subalg)"], ["proof (state)\nthis:\n  \\<forall>n m.\n     X n \\<in> borel_measurable m \\<or>\n     \\<not> subalgebra m (nat_filtration n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n             \\<subseteq> sets (nat_filtration n);\n     \\<forall>t. X t \\<in> borel_measurable (nat_filtration t);\n     \\<And>n X M N.\n        (\\<And>i.\n            i \\<le> n \\<Longrightarrow>\n            X i \\<in> M \\<rightarrow>\\<^sub>M N) \\<Longrightarrow>\n        sets (stoch_proc_filt M X N n) =\n        sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets N})\\<rbrakk>\n    \\<Longrightarrow> sets (stoch_proc_filt M X borel n)\n                      \\<subseteq> sets (nat_filtration n)", "have \"\\<forall>n. subalgebra M (nat_filtration n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. subalgebra M (nat_filtration n)", "by (metis infinite_coin_toss_space.nat_filtration_subalgebra infinite_coin_toss_space_axioms)"], ["proof (state)\nthis:\n  \\<forall>n. subalgebra M (nat_filtration n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>sigma_sets (space M)\n              (\\<Union>i\\<in>{m. m \\<le> n}.\n                  {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n             \\<subseteq> sets (nat_filtration n);\n     \\<forall>t. X t \\<in> borel_measurable (nat_filtration t);\n     \\<And>n X M N.\n        (\\<And>i.\n            i \\<le> n \\<Longrightarrow>\n            X i \\<in> M \\<rightarrow>\\<^sub>M N) \\<Longrightarrow>\n        sets (stoch_proc_filt M X N n) =\n        sigma_sets (space M)\n         (\\<Union>i\\<in>{m. m \\<le> n}.\n             {X i -` A \\<inter> space M |A. A \\<in> sets N})\\<rbrakk>\n    \\<Longrightarrow> sets (stoch_proc_filt M X borel n)\n                      \\<subseteq> sets (nat_filtration n)", "then"], ["proof (chain)\npicking this:\n  \\<forall>n. subalgebra M (nat_filtration n)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n. subalgebra M (nat_filtration n)\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel n) \\<subseteq> sets (nat_filtration n)", "using f1 \\<open>\\<And>n X N M. (\\<And>i. i \\<le> n \\<Longrightarrow> X i \\<in> M \\<rightarrow>\\<^sub>M N) \\<Longrightarrow> sets (stoch_proc_filt M X N n) = sigma_sets (space M) (\\<Union>i\\<in>{m. m \\<le> n}. {X i -` A \\<inter> space M |A. A \\<in> sets N})\\<close> \\<open>sigma_sets (space M) (\\<Union>i\\<in>{m. m \\<le> n}. {X i -` A \\<inter> space M |A. A \\<in> sets borel}) \\<subseteq> sets (nat_filtration n)\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>n. subalgebra M (nat_filtration n)\n  \\<forall>n m.\n     X n \\<in> borel_measurable m \\<or>\n     \\<not> subalgebra m (nat_filtration n)\n  (\\<And>i.\n      i \\<le> ?n \\<Longrightarrow>\n      ?X i \\<in> ?M \\<rightarrow>\\<^sub>M ?N) \\<Longrightarrow>\n  sets (stoch_proc_filt ?M ?X ?N ?n) =\n  sigma_sets (space ?M)\n   (\\<Union>i\\<in>{m. m \\<le> ?n}.\n       {?X i -` A \\<inter> space ?M |A. A \\<in> sets ?N})\n  sigma_sets (space M)\n   (\\<Union>i\\<in>{m. m \\<le> n}.\n       {X i -` A \\<inter> space M |A. A \\<in> sets borel})\n  \\<subseteq> sets (nat_filtration n)\n\ngoal (1 subgoal):\n 1. sets (stoch_proc_filt M X borel n) \\<subseteq> sets (nat_filtration n)", "by blast"], ["proof (state)\nthis:\n  sets (stoch_proc_filt M X borel n) \\<subseteq> sets (nat_filtration n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sets (stoch_proc_filt M X borel n) \\<subseteq> sets (nat_filtration n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sets (stoch_proc_filt M X borel n) \\<subseteq> sets (nat_filtration n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space)\n  assumes \"N = bernoulli_stream q\"\n  and \"0 \\<le> q\"\n  and \"q \\<le> 1\"\n  and \"0 < p\"\n  and \"p < 1\"\n  and \"filt_equiv nat_filtration M N\"\n  shows filt_equiv_sgt: \"0 < q\" and filt_equiv_slt: \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q &&& q < 1", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < q\n 2. q < 1", "have \"space M = space N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space M = space N", "using assms filt_equiv_space"], ["proof (prove)\nusing this:\n  N = bernoulli_stream q\n  0 \\<le> q\n  q \\<le> 1\n  0 < p\n  p < 1\n  filt_equiv nat_filtration M N\n  filt_equiv ?F ?M ?N \\<Longrightarrow> space ?M = space ?N\n\ngoal (1 subgoal):\n 1. space M = space N", "by simp"], ["proof (state)\nthis:\n  space M = space N\n\ngoal (2 subgoals):\n 1. 0 < q\n 2. q < 1", "have eqs: \"{w\\<in> space M. (snth w 0)} = pseudo_proj_True (Suc 0) -`{True ##sconst True}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. w !! 0} =\n    pseudo_proj_True (Suc 0) -` {True ## sconst True}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {w \\<in> space M. w !! 0}\n    \\<subseteq> pseudo_proj_True (Suc 0) -` {True ## sconst True}\n 2. pseudo_proj_True (Suc 0) -` {True ## sconst True}\n    \\<subseteq> {w \\<in> space M. w !! 0}", "show \"{w \\<in> space M. w !! 0} \\<subseteq> pseudo_proj_True (Suc 0) -` {True ##sconst True}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. w !! 0}\n    \\<subseteq> pseudo_proj_True (Suc 0) -` {True ## sconst True}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. w !! 0} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc 0) -` {True ## sconst True}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. w !! 0} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc 0) -` {True ## sconst True}", "assume \"w \\<in> {w \\<in> space M. w !! 0}\""], ["proof (state)\nthis:\n  w \\<in> {w \\<in> space M. w !! 0}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. w !! 0} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc 0) -` {True ## sconst True}", "hence \"snth w 0\""], ["proof (prove)\nusing this:\n  w \\<in> {w \\<in> space M. w !! 0}\n\ngoal (1 subgoal):\n 1. w !! 0", "by simp"], ["proof (state)\nthis:\n  w !! 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. w !! 0} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc 0) -` {True ## sconst True}", "hence \"pseudo_proj_True (Suc 0) w = True##sconst True\""], ["proof (prove)\nusing this:\n  w !! 0\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc 0) w = True ## sconst True", "by (simp add: pseudo_proj_True_def)"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc 0) w = True ## sconst True\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. w !! 0} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc 0) -` {True ## sconst True}", "thus \"w \\<in> pseudo_proj_True (Suc 0) -` {True##sconst True}\""], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc 0) w = True ## sconst True\n\ngoal (1 subgoal):\n 1. w \\<in> pseudo_proj_True (Suc 0) -` {True ## sconst True}", "by simp"], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_True (Suc 0) -` {True ## sconst True}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w \\<in> space M. w !! 0}\n  \\<subseteq> pseudo_proj_True (Suc 0) -` {True ## sconst True}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc 0) -` {True ## sconst True}\n    \\<subseteq> {w \\<in> space M. w !! 0}", "show \"pseudo_proj_True (Suc 0) -` {True##sconst True} \\<subseteq> {w \\<in> space M. w !! 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc 0) -` {True ## sconst True}\n    \\<subseteq> {w \\<in> space M. w !! 0}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc 0) -`\n               {True ## sconst True} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. w !! 0}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc 0) -`\n               {True ## sconst True} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. w !! 0}", "assume \"w \\<in> pseudo_proj_True (Suc 0) -` {True##sconst True}\""], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_True (Suc 0) -` {True ## sconst True}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc 0) -`\n               {True ## sconst True} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. w !! 0}", "hence \"pseudo_proj_True (Suc 0) w = True##sconst True\""], ["proof (prove)\nusing this:\n  w \\<in> pseudo_proj_True (Suc 0) -` {True ## sconst True}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc 0) w = True ## sconst True", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc 0) w = True ## sconst True\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc 0) -`\n               {True ## sconst True} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. w !! 0}", "hence \"snth w 0\""], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc 0) w = True ## sconst True\n\ngoal (1 subgoal):\n 1. w !! 0", "by (metis pseudo_proj_True_Suc_prefix stream_eq_Stream_iff)"], ["proof (state)\nthis:\n  w !! 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc 0) -`\n               {True ## sconst True} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. w !! 0}", "thus \"w\\<in> {w \\<in> space M. w !! 0}\""], ["proof (prove)\nusing this:\n  w !! 0\n\ngoal (1 subgoal):\n 1. w \\<in> {w \\<in> space M. w !! 0}", "using bernoulli bernoulli_stream_space"], ["proof (prove)\nusing this:\n  w !! 0\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. w \\<in> {w \\<in> space M. w !! 0}", "by simp"], ["proof (state)\nthis:\n  w \\<in> {w \\<in> space M. w !! 0}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc 0) -` {True ## sconst True}\n  \\<subseteq> {w \\<in> space M. w !! 0}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w \\<in> space M. w !! 0} =\n  pseudo_proj_True (Suc 0) -` {True ## sconst True}\n\ngoal (2 subgoals):\n 1. 0 < q\n 2. q < 1", "hence natset: \"{w\\<in> space M. (snth w 0)} \\<in> sets (nat_filtration (Suc 0))\""], ["proof (prove)\nusing this:\n  {w \\<in> space M. w !! 0} =\n  pseudo_proj_True (Suc 0) -` {True ## sconst True}\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. w !! 0} \\<in> sets (nat_filtration (Suc 0))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {w \\<in> space M. w !! 0} =\n    pseudo_proj_True (Suc 0) -` {True ## sconst True} \\<Longrightarrow>\n    {w \\<in> space M. w !! 0} \\<in> sets (nat_filtration (Suc 0))", "have \"pseudo_proj_True (Suc 0) -` {True##sconst True} \\<in> sets (nat_filtration (Suc 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc 0) -` {True ## sconst True}\n    \\<in> sets (nat_filtration (Suc 0))", "proof (rule nat_filtration_singleton)"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc 0) (True ## sconst True) = True ## sconst True", "show \"pseudo_proj_True (Suc 0) (True##sconst True) = True## sconst True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc 0) (True ## sconst True) = True ## sconst True", "unfolding pseudo_proj_True_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (Suc 0) (True ## sconst True) @- sconst True = True ## sconst True", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc 0) (True ## sconst True) = True ## sconst True\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc 0) -` {True ## sconst True}\n  \\<in> sets (nat_filtration (Suc 0))\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. w !! 0} =\n    pseudo_proj_True (Suc 0) -` {True ## sconst True} \\<Longrightarrow>\n    {w \\<in> space M. w !! 0} \\<in> sets (nat_filtration (Suc 0))", "thus ?thesis"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc 0) -` {True ## sconst True}\n  \\<in> sets (nat_filtration (Suc 0))\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. w !! 0} \\<in> sets (nat_filtration (Suc 0))", "using eqs"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc 0) -` {True ## sconst True}\n  \\<in> sets (nat_filtration (Suc 0))\n  {w \\<in> space M. w !! 0} =\n  pseudo_proj_True (Suc 0) -` {True ## sconst True}\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. w !! 0} \\<in> sets (nat_filtration (Suc 0))", "by simp"], ["proof (state)\nthis:\n  {w \\<in> space M. w !! 0} \\<in> sets (nat_filtration (Suc 0))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w \\<in> space M. w !! 0} \\<in> sets (nat_filtration (Suc 0))\n\ngoal (2 subgoals):\n 1. 0 < q\n 2. q < 1", "have eqf: \"{w\\<in> space M. \\<not>(snth w 0)} = pseudo_proj_True (Suc 0) -`{False ##sconst True}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. \\<not> w !! 0} =\n    pseudo_proj_True (Suc 0) -` {False ## sconst True}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {w \\<in> space M. \\<not> w !! 0}\n    \\<subseteq> pseudo_proj_True (Suc 0) -` {False ## sconst True}\n 2. pseudo_proj_True (Suc 0) -` {False ## sconst True}\n    \\<subseteq> {w \\<in> space M. \\<not> w !! 0}", "show \"{w \\<in> space M. \\<not>(snth w 0)} \\<subseteq> pseudo_proj_True (Suc 0) -` {False ##sconst True}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. \\<not> w !! 0}\n    \\<subseteq> pseudo_proj_True (Suc 0) -` {False ## sconst True}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. \\<not> w !! 0} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc 0) -` {False ## sconst True}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. \\<not> w !! 0} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc 0) -` {False ## sconst True}", "assume \"w \\<in> {w \\<in> space M. \\<not>(snth w 0)}\""], ["proof (state)\nthis:\n  w \\<in> {w \\<in> space M. \\<not> w !! 0}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. \\<not> w !! 0} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc 0) -` {False ## sconst True}", "hence \"\\<not>(snth w 0)\""], ["proof (prove)\nusing this:\n  w \\<in> {w \\<in> space M. \\<not> w !! 0}\n\ngoal (1 subgoal):\n 1. \\<not> w !! 0", "by simp"], ["proof (state)\nthis:\n  \\<not> w !! 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. \\<not> w !! 0} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc 0) -` {False ## sconst True}", "hence \"pseudo_proj_True (Suc 0) w = False ##sconst True\""], ["proof (prove)\nusing this:\n  \\<not> w !! 0\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc 0) w = False ## sconst True", "by (simp add: pseudo_proj_True_def)"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc 0) w = False ## sconst True\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {w \\<in> space M. \\<not> w !! 0} \\<Longrightarrow>\n       x \\<in> pseudo_proj_True (Suc 0) -` {False ## sconst True}", "thus \"w \\<in> pseudo_proj_True (Suc 0) -` {False ## sconst True}\""], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc 0) w = False ## sconst True\n\ngoal (1 subgoal):\n 1. w \\<in> pseudo_proj_True (Suc 0) -` {False ## sconst True}", "by simp"], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_True (Suc 0) -` {False ## sconst True}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w \\<in> space M. \\<not> w !! 0}\n  \\<subseteq> pseudo_proj_True (Suc 0) -` {False ## sconst True}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc 0) -` {False ## sconst True}\n    \\<subseteq> {w \\<in> space M. \\<not> w !! 0}", "show \"pseudo_proj_True (Suc 0) -` {False ## sconst True} \\<subseteq> {w \\<in> space M. \\<not>(snth w 0)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc 0) -` {False ## sconst True}\n    \\<subseteq> {w \\<in> space M. \\<not> w !! 0}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc 0) -`\n               {False ## sconst True} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. \\<not> w !! 0}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc 0) -`\n               {False ## sconst True} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. \\<not> w !! 0}", "assume \"w \\<in> pseudo_proj_True (Suc 0) -` {False##sconst True}\""], ["proof (state)\nthis:\n  w \\<in> pseudo_proj_True (Suc 0) -` {False ## sconst True}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc 0) -`\n               {False ## sconst True} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. \\<not> w !! 0}", "hence \"pseudo_proj_True (Suc 0) w = False##sconst True\""], ["proof (prove)\nusing this:\n  w \\<in> pseudo_proj_True (Suc 0) -` {False ## sconst True}\n\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc 0) w = False ## sconst True", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc 0) w = False ## sconst True\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc 0) -`\n               {False ## sconst True} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. \\<not> w !! 0}", "hence \"\\<not>(snth w 0)\""], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc 0) w = False ## sconst True\n\ngoal (1 subgoal):\n 1. \\<not> w !! 0", "by (metis pseudo_proj_True_Suc_prefix  stream_eq_Stream_iff)"], ["proof (state)\nthis:\n  \\<not> w !! 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pseudo_proj_True (Suc 0) -`\n               {False ## sconst True} \\<Longrightarrow>\n       x \\<in> {w \\<in> space M. \\<not> w !! 0}", "thus \"w\\<in> {w \\<in> space M. \\<not>(snth w 0)}\""], ["proof (prove)\nusing this:\n  \\<not> w !! 0\n\ngoal (1 subgoal):\n 1. w \\<in> {w \\<in> space M. \\<not> w !! 0}", "using bernoulli bernoulli_stream_space"], ["proof (prove)\nusing this:\n  \\<not> w !! 0\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. w \\<in> {w \\<in> space M. \\<not> w !! 0}", "by simp"], ["proof (state)\nthis:\n  w \\<in> {w \\<in> space M. \\<not> w !! 0}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc 0) -` {False ## sconst True}\n  \\<subseteq> {w \\<in> space M. \\<not> w !! 0}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w \\<in> space M. \\<not> w !! 0} =\n  pseudo_proj_True (Suc 0) -` {False ## sconst True}\n\ngoal (2 subgoals):\n 1. 0 < q\n 2. q < 1", "hence natsetf: \"{w\\<in> space M. \\<not>(snth w 0)} \\<in> sets (nat_filtration (Suc 0))\""], ["proof (prove)\nusing this:\n  {w \\<in> space M. \\<not> w !! 0} =\n  pseudo_proj_True (Suc 0) -` {False ## sconst True}\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. \\<not> w !! 0} \\<in> sets (nat_filtration (Suc 0))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {w \\<in> space M. \\<not> w !! 0} =\n    pseudo_proj_True (Suc 0) -` {False ## sconst True} \\<Longrightarrow>\n    {w \\<in> space M. \\<not> w !! 0} \\<in> sets (nat_filtration (Suc 0))", "have \"pseudo_proj_True (Suc 0) -` {False##sconst True} \\<in> sets (nat_filtration (Suc 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc 0) -` {False ## sconst True}\n    \\<in> sets (nat_filtration (Suc 0))", "proof (rule nat_filtration_singleton)"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc 0) (False ## sconst True) = False ## sconst True", "show \"pseudo_proj_True (Suc 0) (False##sconst True) = False##sconst True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudo_proj_True (Suc 0) (False ## sconst True) = False ## sconst True", "unfolding pseudo_proj_True_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (Suc 0) (False ## sconst True) @- sconst True =\n    False ## sconst True", "by simp"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc 0) (False ## sconst True) = False ## sconst True\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pseudo_proj_True (Suc 0) -` {False ## sconst True}\n  \\<in> sets (nat_filtration (Suc 0))\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. \\<not> w !! 0} =\n    pseudo_proj_True (Suc 0) -` {False ## sconst True} \\<Longrightarrow>\n    {w \\<in> space M. \\<not> w !! 0} \\<in> sets (nat_filtration (Suc 0))", "thus ?thesis"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc 0) -` {False ## sconst True}\n  \\<in> sets (nat_filtration (Suc 0))\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. \\<not> w !! 0} \\<in> sets (nat_filtration (Suc 0))", "using eqf"], ["proof (prove)\nusing this:\n  pseudo_proj_True (Suc 0) -` {False ## sconst True}\n  \\<in> sets (nat_filtration (Suc 0))\n  {w \\<in> space M. \\<not> w !! 0} =\n  pseudo_proj_True (Suc 0) -` {False ## sconst True}\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. \\<not> w !! 0} \\<in> sets (nat_filtration (Suc 0))", "by simp"], ["proof (state)\nthis:\n  {w \\<in> space M. \\<not> w !! 0} \\<in> sets (nat_filtration (Suc 0))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w \\<in> space M. \\<not> w !! 0} \\<in> sets (nat_filtration (Suc 0))\n\ngoal (2 subgoals):\n 1. 0 < q\n 2. q < 1", "(*have \"prob_space N\" using assms\n        by (simp add: bernoulli_stream_def prob_space.prob_space_stream_space\n            prob_space_measure_pmf)*)"], ["proof (state)\nthis:\n  {w \\<in> space M. \\<not> w !! 0} \\<in> sets (nat_filtration (Suc 0))\n\ngoal (2 subgoals):\n 1. 0 < q\n 2. q < 1", "show \"0 < q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < q", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 < q \\<Longrightarrow> False", "assume \"\\<not> 0 < q\""], ["proof (state)\nthis:\n  \\<not> 0 < q\n\ngoal (1 subgoal):\n 1. \\<not> 0 < q \\<Longrightarrow> False", "hence \"q = 0\""], ["proof (prove)\nusing this:\n  \\<not> 0 < q\n\ngoal (1 subgoal):\n 1. q = 0", "using assms"], ["proof (prove)\nusing this:\n  \\<not> 0 < q\n  N = bernoulli_stream q\n  0 \\<le> q\n  q \\<le> 1\n  0 < p\n  p < 1\n  filt_equiv nat_filtration M N\n\ngoal (1 subgoal):\n 1. q = 0", "by simp"], ["proof (state)\nthis:\n  q = 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < q \\<Longrightarrow> False", "hence \"emeasure N {w\\<in> space N. (snth w 0)} = q\""], ["proof (prove)\nusing this:\n  q = 0\n\ngoal (1 subgoal):\n 1. emeasure N {w \\<in> space N. w !! 0} = ennreal q", "using bernoulli_stream_component_probability[of N q]\n        assms"], ["proof (prove)\nusing this:\n  q = 0\n  \\<lbrakk>N = bernoulli_stream q; 0 \\<le> q; q \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>n.\n                       emeasure N {w \\<in> space N. w !! n} = ennreal q\n  N = bernoulli_stream q\n  0 \\<le> q\n  q \\<le> 1\n  0 < p\n  p < 1\n  filt_equiv nat_filtration M N\n\ngoal (1 subgoal):\n 1. emeasure N {w \\<in> space N. w !! 0} = ennreal q", "by blast"], ["proof (state)\nthis:\n  emeasure N {w \\<in> space N. w !! 0} = ennreal q\n\ngoal (1 subgoal):\n 1. \\<not> 0 < q \\<Longrightarrow> False", "hence \"emeasure N {w\\<in> space N. (snth w 0)} = 0\""], ["proof (prove)\nusing this:\n  emeasure N {w \\<in> space N. w !! 0} = ennreal q\n\ngoal (1 subgoal):\n 1. emeasure N {w \\<in> space N. w !! 0} = 0", "using \\<open>q = 0\\<close>"], ["proof (prove)\nusing this:\n  emeasure N {w \\<in> space N. w !! 0} = ennreal q\n  q = 0\n\ngoal (1 subgoal):\n 1. emeasure N {w \\<in> space N. w !! 0} = 0", "by simp"], ["proof (state)\nthis:\n  emeasure N {w \\<in> space N. w !! 0} = 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < q \\<Longrightarrow> False", "hence \"emeasure M {w\\<in> space M. (snth w 0)} = 0\""], ["proof (prove)\nusing this:\n  emeasure N {w \\<in> space N. w !! 0} = 0\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. w !! 0} = 0", "using assms natset"], ["proof (prove)\nusing this:\n  emeasure N {w \\<in> space N. w !! 0} = 0\n  N = bernoulli_stream q\n  0 \\<le> q\n  q \\<le> 1\n  0 < p\n  p < 1\n  filt_equiv nat_filtration M N\n  {w \\<in> space M. w !! 0} \\<in> sets (nat_filtration (Suc 0))\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. w !! 0} = 0", "unfolding filt_equiv_def"], ["proof (prove)\nusing this:\n  emeasure N {w \\<in> space N. w !! 0} = 0\n  N = bernoulli_stream q\n  0 \\<le> q\n  q \\<le> 1\n  0 < p\n  p < 1\n  events = sets N \\<and>\n  Filtration.filtration M nat_filtration \\<and>\n  (\\<forall>t A.\n      A \\<in> sets (nat_filtration t) \\<longrightarrow>\n      (emeasure M A = 0) = (emeasure N A = 0))\n  {w \\<in> space M. w !! 0} \\<in> sets (nat_filtration (Suc 0))\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. w !! 0} = 0", "by (simp add: \\<open>space M = space N\\<close>)"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. w !! 0} = 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < q \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. w !! 0} = 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < q \\<Longrightarrow> False", "have \"emeasure M {w\\<in> space M. (snth w 0)} = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. w !! 0} = ennreal p", "using bernoulli_stream_component_probability[of M p] bernoulli\n        p_lt_1 p_gt_0"], ["proof (prove)\nusing this:\n  \\<lbrakk>M = bernoulli_stream p; 0 \\<le> p; p \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>n.\n                       emeasure M {w \\<in> space M. w !! n} = ennreal p\n  M = bernoulli_stream p\n  p \\<le> 1\n  0 \\<le> p\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. w !! 0} = ennreal p", "by blast"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. w !! 0} = ennreal p\n\ngoal (1 subgoal):\n 1. \\<not> 0 < q \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  emeasure M {w \\<in> space M. w !! 0} = 0\n  emeasure M {w \\<in> space M. w !! 0} = ennreal p", "show False"], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. w !! 0} = 0\n  emeasure M {w \\<in> space M. w !! 0} = ennreal p\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. w !! 0} = 0\n  emeasure M {w \\<in> space M. w !! 0} = ennreal p\n  N = bernoulli_stream q\n  0 \\<le> q\n  q \\<le> 1\n  0 < p\n  p < 1\n  filt_equiv nat_filtration M N\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < q\n\ngoal (1 subgoal):\n 1. q < 1", "show \"q < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q < 1", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> q < 1 \\<Longrightarrow> False", "assume \"\\<not> q < 1\""], ["proof (state)\nthis:\n  \\<not> q < 1\n\ngoal (1 subgoal):\n 1. \\<not> q < 1 \\<Longrightarrow> False", "hence \"q = 1\""], ["proof (prove)\nusing this:\n  \\<not> q < 1\n\ngoal (1 subgoal):\n 1. q = 1", "using assms"], ["proof (prove)\nusing this:\n  \\<not> q < 1\n  N = bernoulli_stream q\n  0 \\<le> q\n  q \\<le> 1\n  0 < p\n  p < 1\n  filt_equiv nat_filtration M N\n\ngoal (1 subgoal):\n 1. q = 1", "by simp"], ["proof (state)\nthis:\n  q = 1\n\ngoal (1 subgoal):\n 1. \\<not> q < 1 \\<Longrightarrow> False", "hence \"emeasure N {w\\<in> space N. \\<not>(snth w 0)} = 1 -q\""], ["proof (prove)\nusing this:\n  q = 1\n\ngoal (1 subgoal):\n 1. emeasure N {w \\<in> space N. \\<not> w !! 0} = ennreal (1 - q)", "using bernoulli_stream_component_probability_compl[of N q]\n        assms"], ["proof (prove)\nusing this:\n  q = 1\n  \\<lbrakk>N = bernoulli_stream q; 0 \\<le> q; q \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>n.\n                       emeasure N {w \\<in> space N. \\<not> w !! n} =\n                       ennreal (1 - q)\n  N = bernoulli_stream q\n  0 \\<le> q\n  q \\<le> 1\n  0 < p\n  p < 1\n  filt_equiv nat_filtration M N\n\ngoal (1 subgoal):\n 1. emeasure N {w \\<in> space N. \\<not> w !! 0} = ennreal (1 - q)", "by blast"], ["proof (state)\nthis:\n  emeasure N {w \\<in> space N. \\<not> w !! 0} = ennreal (1 - q)\n\ngoal (1 subgoal):\n 1. \\<not> q < 1 \\<Longrightarrow> False", "hence \"emeasure N {w\\<in> space N. \\<not>(snth w 0)} = 0\""], ["proof (prove)\nusing this:\n  emeasure N {w \\<in> space N. \\<not> w !! 0} = ennreal (1 - q)\n\ngoal (1 subgoal):\n 1. emeasure N {w \\<in> space N. \\<not> w !! 0} = 0", "using \\<open>q = 1\\<close>"], ["proof (prove)\nusing this:\n  emeasure N {w \\<in> space N. \\<not> w !! 0} = ennreal (1 - q)\n  q = 1\n\ngoal (1 subgoal):\n 1. emeasure N {w \\<in> space N. \\<not> w !! 0} = 0", "by simp"], ["proof (state)\nthis:\n  emeasure N {w \\<in> space N. \\<not> w !! 0} = 0\n\ngoal (1 subgoal):\n 1. \\<not> q < 1 \\<Longrightarrow> False", "hence \"emeasure M {w\\<in> space M. \\<not>(snth w 0)} = 0\""], ["proof (prove)\nusing this:\n  emeasure N {w \\<in> space N. \\<not> w !! 0} = 0\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. \\<not> w !! 0} = 0", "using assms natsetf"], ["proof (prove)\nusing this:\n  emeasure N {w \\<in> space N. \\<not> w !! 0} = 0\n  N = bernoulli_stream q\n  0 \\<le> q\n  q \\<le> 1\n  0 < p\n  p < 1\n  filt_equiv nat_filtration M N\n  {w \\<in> space M. \\<not> w !! 0} \\<in> sets (nat_filtration (Suc 0))\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. \\<not> w !! 0} = 0", "unfolding filt_equiv_def"], ["proof (prove)\nusing this:\n  emeasure N {w \\<in> space N. \\<not> w !! 0} = 0\n  N = bernoulli_stream q\n  0 \\<le> q\n  q \\<le> 1\n  0 < p\n  p < 1\n  events = sets N \\<and>\n  Filtration.filtration M nat_filtration \\<and>\n  (\\<forall>t A.\n      A \\<in> sets (nat_filtration t) \\<longrightarrow>\n      (emeasure M A = 0) = (emeasure N A = 0))\n  {w \\<in> space M. \\<not> w !! 0} \\<in> sets (nat_filtration (Suc 0))\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. \\<not> w !! 0} = 0", "by (simp add: \\<open>space M = space N\\<close>)"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. \\<not> w !! 0} = 0\n\ngoal (1 subgoal):\n 1. \\<not> q < 1 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. \\<not> w !! 0} = 0\n\ngoal (1 subgoal):\n 1. \\<not> q < 1 \\<Longrightarrow> False", "have \"emeasure M {w\\<in> space M. \\<not>(snth w 0)} = 1-p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. \\<not> w !! 0} = ennreal (1 - p)", "using bernoulli_stream_component_probability_compl[of M p] bernoulli\n        p_lt_1 p_gt_0"], ["proof (prove)\nusing this:\n  \\<lbrakk>M = bernoulli_stream p; 0 \\<le> p; p \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>n.\n                       emeasure M {w \\<in> space M. \\<not> w !! n} =\n                       ennreal (1 - p)\n  M = bernoulli_stream p\n  p \\<le> 1\n  0 \\<le> p\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. \\<not> w !! 0} = ennreal (1 - p)", "by blast"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. \\<not> w !! 0} = ennreal (1 - p)\n\ngoal (1 subgoal):\n 1. \\<not> q < 1 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  emeasure M {w \\<in> space M. \\<not> w !! 0} = 0\n  emeasure M {w \\<in> space M. \\<not> w !! 0} = ennreal (1 - p)", "show False"], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. \\<not> w !! 0} = 0\n  emeasure M {w \\<in> space M. \\<not> w !! 0} = ennreal (1 - p)\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. \\<not> w !! 0} = 0\n  emeasure M {w \\<in> space M. \\<not> w !! 0} = ennreal (1 - p)\n  N = bernoulli_stream q\n  0 \\<le> q\n  q \\<le> 1\n  0 < p\n  p < 1\n  filt_equiv nat_filtration M N\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  q < 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stoch_proc_filt_filt_equiv:\n  assumes \"filt_equiv F M N\"\n  shows \"stoch_proc_filt M f P n = stoch_proc_filt N f P n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stoch_proc_filt M f P n = stoch_proc_filt N f P n", "using assms filt_equiv_space filt_equiv_sets"], ["proof (prove)\nusing this:\n  filt_equiv F M N\n  filt_equiv ?F ?M ?N \\<Longrightarrow> space ?M = space ?N\n  filt_equiv ?F ?M ?N \\<Longrightarrow> sets ?M = sets ?N\n\ngoal (1 subgoal):\n 1. stoch_proc_filt M f P n = stoch_proc_filt N f P n", "unfolding stoch_proc_filt_def"], ["proof (prove)\nusing this:\n  filt_equiv F M N\n  filt_equiv ?F ?M ?N \\<Longrightarrow> space ?M = space ?N\n  filt_equiv ?F ?M ?N \\<Longrightarrow> sets ?M = sets ?N\n\ngoal (1 subgoal):\n 1. gen_subalgebra M\n     (sigma_sets (space M)\n       (\\<Union>i\\<in>{m. m \\<le> n}.\n           {f i -` A \\<inter> space M |A. A \\<in> sets P})) =\n    gen_subalgebra N\n     (sigma_sets (space N)\n       (\\<Union>i\\<in>{m. m \\<le> n}.\n           {f i -` A \\<inter> space N |A. A \\<in> sets P}))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>filt_equiv F M N;\n     \\<And>F M N. filt_equiv F M N \\<Longrightarrow> space M = space N;\n     \\<And>F M N.\n        filt_equiv F M N \\<Longrightarrow> sets M = sets N\\<rbrakk>\n    \\<Longrightarrow> gen_subalgebra M\n                       (sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> n}.\n                             {f i -` A \\<inter> space M |A.\n                              A \\<in> sets P})) =\n                      gen_subalgebra N\n                       (sigma_sets (space N)\n                         (\\<Union>i\\<in>{m. m \\<le> n}.\n                             {f i -` A \\<inter> space N |A.\n                              A \\<in> sets P}))", "have \"space N = space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space N = space M", "by (metis assms filt_equiv_space)"], ["proof (state)\nthis:\n  space N = space M\n\ngoal (1 subgoal):\n 1. \\<lbrakk>filt_equiv F M N;\n     \\<And>F M N. filt_equiv F M N \\<Longrightarrow> space M = space N;\n     \\<And>F M N.\n        filt_equiv F M N \\<Longrightarrow> sets M = sets N\\<rbrakk>\n    \\<Longrightarrow> gen_subalgebra M\n                       (sigma_sets (space M)\n                         (\\<Union>i\\<in>{m. m \\<le> n}.\n                             {f i -` A \\<inter> space M |A.\n                              A \\<in> sets P})) =\n                      gen_subalgebra N\n                       (sigma_sets (space N)\n                         (\\<Union>i\\<in>{m. m \\<le> n}.\n                             {f i -` A \\<inter> space N |A.\n                              A \\<in> sets P}))", "then"], ["proof (chain)\npicking this:\n  space N = space M", "show \"gen_subalgebra M (sigma_sets (space M) (\\<Union>n\\<in>{na. na \\<le> n}. {f n -` C \\<inter> space M |C. C \\<in> sets P})) =\n    gen_subalgebra N (sigma_sets (space N) (\\<Union>n\\<in>{na. na \\<le> n}. {f n -` C \\<inter> space N |C. C \\<in> sets P}))\""], ["proof (prove)\nusing this:\n  space N = space M\n\ngoal (1 subgoal):\n 1. gen_subalgebra M\n     (sigma_sets (space M)\n       (\\<Union>n\\<in>{na. na \\<le> n}.\n           {f n -` C \\<inter> space M |C. C \\<in> sets P})) =\n    gen_subalgebra N\n     (sigma_sets (space N)\n       (\\<Union>n\\<in>{na. na \\<le> n}.\n           {f n -` C \\<inter> space N |C. C \\<in> sets P}))", "by (simp add: gen_subalgebra_def)"], ["proof (state)\nthis:\n  gen_subalgebra M\n   (sigma_sets (space M)\n     (\\<Union>n\\<in>{na. na \\<le> n}.\n         {f n -` C \\<inter> space M |C. C \\<in> sets P})) =\n  gen_subalgebra N\n   (sigma_sets (space N)\n     (\\<Union>n\\<in>{na. na \\<le> n}.\n         {f n -` C \\<inter> space N |C. C \\<in> sets P}))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  filt_equiv_filt:\n  assumes \"filt_equiv F M N\"\nand \"filtration M G\"\nshows \"filtration N G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Filtration.filtration N G", "unfolding filtration_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>t. subalgebra N (G t)) \\<and>\n    (\\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s))", "proof (intro allI conjI impI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t. subalgebra N (G t)\n 2. \\<And>s t. s \\<le> t \\<Longrightarrow> subalgebra (G t) (G s)", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t. subalgebra N (G t)\n 2. \\<And>s t. s \\<le> t \\<Longrightarrow> subalgebra (G t) (G s)", "fix t"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t. subalgebra N (G t)\n 2. \\<And>s t. s \\<le> t \\<Longrightarrow> subalgebra (G t) (G s)", "show \"subalgebra N (G t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subalgebra N (G t)", "using assms"], ["proof (prove)\nusing this:\n  filt_equiv F M N\n  Filtration.filtration M G\n\ngoal (1 subgoal):\n 1. subalgebra N (G t)", "unfolding filtration_def filt_equiv_def"], ["proof (prove)\nusing this:\n  sets M = sets N \\<and>\n  ((\\<forall>t. subalgebra M (F t)) \\<and>\n   (\\<forall>s t.\n       s \\<le> t \\<longrightarrow> subalgebra (F t) (F s))) \\<and>\n  (\\<forall>t A.\n      A \\<in> sets (F t) \\<longrightarrow>\n      (emeasure M A = 0) = (emeasure N A = 0))\n  (\\<forall>t. subalgebra M (G t)) \\<and>\n  (\\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s))\n\ngoal (1 subgoal):\n 1. subalgebra N (G t)", "by (metis sets_eq_imp_space_eq subalgebra_def)"], ["proof (state)\nthis:\n  subalgebra N (G t)\n\ngoal (1 subgoal):\n 1. \\<And>s t. s \\<le> t \\<Longrightarrow> subalgebra (G t) (G s)", "}"], ["proof (state)\nthis:\n  subalgebra N (G ?t2)\n\ngoal (1 subgoal):\n 1. \\<And>s t. s \\<le> t \\<Longrightarrow> subalgebra (G t) (G s)", "{"], ["proof (state)\nthis:\n  subalgebra N (G ?t2)\n\ngoal (1 subgoal):\n 1. \\<And>s t. s \\<le> t \\<Longrightarrow> subalgebra (G t) (G s)", "fix s::'c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s t. s \\<le> t \\<Longrightarrow> subalgebra (G t) (G s)", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s t. s \\<le> t \\<Longrightarrow> subalgebra (G t) (G s)", "assume \"s \\<le> t\""], ["proof (state)\nthis:\n  s \\<le> t\n\ngoal (1 subgoal):\n 1. \\<And>s t. s \\<le> t \\<Longrightarrow> subalgebra (G t) (G s)", "thus \"subalgebra (G t) (G s)\""], ["proof (prove)\nusing this:\n  s \\<le> t\n\ngoal (1 subgoal):\n 1. subalgebra (G t) (G s)", "using assms"], ["proof (prove)\nusing this:\n  s \\<le> t\n  filt_equiv F M N\n  Filtration.filtration M G\n\ngoal (1 subgoal):\n 1. subalgebra (G t) (G s)", "unfolding filtration_def"], ["proof (prove)\nusing this:\n  s \\<le> t\n  filt_equiv F M N\n  (\\<forall>t. subalgebra M (G t)) \\<and>\n  (\\<forall>s t. s \\<le> t \\<longrightarrow> subalgebra (G t) (G s))\n\ngoal (1 subgoal):\n 1. subalgebra (G t) (G s)", "by simp"], ["proof (state)\nthis:\n  subalgebra (G t) (G s)\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  ?s2 \\<le> ?t2 \\<Longrightarrow> subalgebra (G ?t2) (G ?s2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  filt_equiv_borel_AE_eq_iff:\n  fixes f::\"'a\\<Rightarrow> real\"\n  assumes \"filt_equiv F M N\"\nand \"f\\<in> borel_measurable (F t)\"\nand \"g\\<in> borel_measurable (F t)\"\nand \"prob_space N\"\nand \"prob_space M\"\nshows \"(AE w in M. f w = g w) \\<longleftrightarrow> (AE w in N. f w = g w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "assume fst: \"AE w in M. f w = g w\""], ["proof (state)\nthis:\n  AE w in M. f w = g w\n\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "have set0: \"{w\\<in> space M. f w \\<noteq> g w} \\<in> sets (F t) \\<and> emeasure M {w\\<in> space M. f w \\<noteq> g w} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. f w \\<noteq> g w} \\<in> sets (F t) \\<and>\n    emeasure M {w \\<in> space M. f w \\<noteq> g w} = 0", "proof (rule filtrated_prob_space.AE_borel_eq, (auto simp add: assms))"], ["proof (state)\ngoal (2 subgoals):\n 1. filtrated_prob_space M F\n 2. AE w in M. f w = g w", "show \"filtrated_prob_space M F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filtrated_prob_space M F", "using assms"], ["proof (prove)\nusing this:\n  filt_equiv F M N\n  f \\<in> borel_measurable (F t)\n  g \\<in> borel_measurable (F t)\n  prob_space N\n  prob_space M\n\ngoal (1 subgoal):\n 1. filtrated_prob_space M F", "unfolding filt_equiv_def"], ["proof (prove)\nusing this:\n  sets M = sets N \\<and>\n  Filtration.filtration M F \\<and>\n  (\\<forall>t A.\n      A \\<in> sets (F t) \\<longrightarrow>\n      (emeasure M A = 0) = (emeasure N A = 0))\n  f \\<in> borel_measurable (F t)\n  g \\<in> borel_measurable (F t)\n  prob_space N\n  prob_space M\n\ngoal (1 subgoal):\n 1. filtrated_prob_space M F", "by (simp add: filtrated_prob_space_axioms.intro filtrated_prob_space_def)"], ["proof (state)\nthis:\n  filtrated_prob_space M F\n\ngoal (1 subgoal):\n 1. AE w in M. f w = g w", "show \"AE w in M. f w =  g w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE w in M. f w = g w", "using fst"], ["proof (prove)\nusing this:\n  AE w in M. f w = g w\n\ngoal (1 subgoal):\n 1. AE w in M. f w = g w", "."], ["proof (state)\nthis:\n  AE w in M. f w = g w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w \\<in> space M. f w \\<noteq> g w} \\<in> sets (F t) \\<and>\n  emeasure M {w \\<in> space M. f w \\<noteq> g w} = 0\n\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "hence \"emeasure N {w\\<in> space M. f w \\<noteq> g w} = 0\""], ["proof (prove)\nusing this:\n  {w \\<in> space M. f w \\<noteq> g w} \\<in> sets (F t) \\<and>\n  emeasure M {w \\<in> space M. f w \\<noteq> g w} = 0\n\ngoal (1 subgoal):\n 1. emeasure N {w \\<in> space M. f w \\<noteq> g w} = 0", "using assms"], ["proof (prove)\nusing this:\n  {w \\<in> space M. f w \\<noteq> g w} \\<in> sets (F t) \\<and>\n  emeasure M {w \\<in> space M. f w \\<noteq> g w} = 0\n  filt_equiv F M N\n  f \\<in> borel_measurable (F t)\n  g \\<in> borel_measurable (F t)\n  prob_space N\n  prob_space M\n\ngoal (1 subgoal):\n 1. emeasure N {w \\<in> space M. f w \\<noteq> g w} = 0", "unfolding filt_equiv_def"], ["proof (prove)\nusing this:\n  {w \\<in> space M. f w \\<noteq> g w} \\<in> sets (F t) \\<and>\n  emeasure M {w \\<in> space M. f w \\<noteq> g w} = 0\n  sets M = sets N \\<and>\n  Filtration.filtration M F \\<and>\n  (\\<forall>t A.\n      A \\<in> sets (F t) \\<longrightarrow>\n      (emeasure M A = 0) = (emeasure N A = 0))\n  f \\<in> borel_measurable (F t)\n  g \\<in> borel_measurable (F t)\n  prob_space N\n  prob_space M\n\ngoal (1 subgoal):\n 1. emeasure N {w \\<in> space M. f w \\<noteq> g w} = 0", "by auto"], ["proof (state)\nthis:\n  emeasure N {w \\<in> space M. f w \\<noteq> g w} = 0\n\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "moreover"], ["proof (state)\nthis:\n  emeasure N {w \\<in> space M. f w \\<noteq> g w} = 0\n\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "have \"{w\\<in> space M. f w \\<noteq> g w} \\<in> sets N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. f w \\<noteq> g w} \\<in> sets N", "using set0 assms"], ["proof (prove)\nusing this:\n  {w \\<in> space M. f w \\<noteq> g w} \\<in> sets (F t) \\<and>\n  emeasure M {w \\<in> space M. f w \\<noteq> g w} = 0\n  filt_equiv F M N\n  f \\<in> borel_measurable (F t)\n  g \\<in> borel_measurable (F t)\n  prob_space N\n  prob_space M\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. f w \\<noteq> g w} \\<in> sets N", "unfolding filt_equiv_def\n      filtration_def subalgebra_def"], ["proof (prove)\nusing this:\n  {w \\<in> space M. f w \\<noteq> g w} \\<in> sets (F t) \\<and>\n  emeasure M {w \\<in> space M. f w \\<noteq> g w} = 0\n  sets M = sets N \\<and>\n  ((\\<forall>t.\n       space (F t) = space M \\<and> sets (F t) \\<subseteq> sets M) \\<and>\n   (\\<forall>s t.\n       s \\<le> t \\<longrightarrow>\n       space (F s) = space (F t) \\<and>\n       sets (F s) \\<subseteq> sets (F t))) \\<and>\n  (\\<forall>t A.\n      A \\<in> sets (F t) \\<longrightarrow>\n      (emeasure M A = 0) = (emeasure N A = 0))\n  f \\<in> borel_measurable (F t)\n  g \\<in> borel_measurable (F t)\n  prob_space N\n  prob_space M\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. f w \\<noteq> g w} \\<in> sets N", "by auto"], ["proof (state)\nthis:\n  {w \\<in> space M. f w \\<noteq> g w} \\<in> sets N\n\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "ultimately"], ["proof (chain)\npicking this:\n  emeasure N {w \\<in> space M. f w \\<noteq> g w} = 0\n  {w \\<in> space M. f w \\<noteq> g w} \\<in> sets N", "have \"AE w in N. f w = g w\""], ["proof (prove)\nusing this:\n  emeasure N {w \\<in> space M. f w \\<noteq> g w} = 0\n  {w \\<in> space M. f w \\<noteq> g w} \\<in> sets N\n\ngoal (1 subgoal):\n 1. AE w in N. f w = g w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>emeasure N {w \\<in> space M. f w \\<noteq> g w} = 0;\n     {w \\<in> space M. f w \\<noteq> g w} \\<in> sets N\\<rbrakk>\n    \\<Longrightarrow> AE w in N. f w = g w", "have \"space M = space N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space M = space N", "by (metis assms(1) filt_equiv_space)"], ["proof (state)\nthis:\n  space M = space N\n\ngoal (1 subgoal):\n 1. \\<lbrakk>emeasure N {w \\<in> space M. f w \\<noteq> g w} = 0;\n     {w \\<in> space M. f w \\<noteq> g w} \\<in> sets N\\<rbrakk>\n    \\<Longrightarrow> AE w in N. f w = g w", "then"], ["proof (chain)\npicking this:\n  space M = space N", "have \"\\<forall>p. almost_everywhere N p \\<or> {a \\<in> space N. \\<not> p a} \\<noteq> {a \\<in> space N. f a \\<noteq> g a}\""], ["proof (prove)\nusing this:\n  space M = space N\n\ngoal (1 subgoal):\n 1. \\<forall>p.\n       almost_everywhere N p \\<or>\n       {a \\<in> space N. \\<not> p a} \\<noteq>\n       {a \\<in> space N. f a \\<noteq> g a}", "using AE_iff_measurable \\<open>emeasure N {w \\<in> space M. f w \\<noteq> g w} = 0\\<close> \\<open>{w \\<in> space M. f w \\<noteq> g w} \\<in> sets N\\<close>"], ["proof (prove)\nusing this:\n  space M = space N\n  \\<lbrakk>?N \\<in> sets ?M; {x \\<in> space ?M. \\<not> ?P x} = ?N\\<rbrakk>\n  \\<Longrightarrow> almost_everywhere ?M ?P = (emeasure ?M ?N = 0)\n  emeasure N {w \\<in> space M. f w \\<noteq> g w} = 0\n  {w \\<in> space M. f w \\<noteq> g w} \\<in> sets N\n\ngoal (1 subgoal):\n 1. \\<forall>p.\n       almost_everywhere N p \\<or>\n       {a \\<in> space N. \\<not> p a} \\<noteq>\n       {a \\<in> space N. f a \\<noteq> g a}", "by auto"], ["proof (state)\nthis:\n  \\<forall>p.\n     almost_everywhere N p \\<or>\n     {a \\<in> space N. \\<not> p a} \\<noteq>\n     {a \\<in> space N. f a \\<noteq> g a}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>emeasure N {w \\<in> space M. f w \\<noteq> g w} = 0;\n     {w \\<in> space M. f w \\<noteq> g w} \\<in> sets N\\<rbrakk>\n    \\<Longrightarrow> AE w in N. f w = g w", "then"], ["proof (chain)\npicking this:\n  \\<forall>p.\n     almost_everywhere N p \\<or>\n     {a \\<in> space N. \\<not> p a} \\<noteq>\n     {a \\<in> space N. f a \\<noteq> g a}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>p.\n     almost_everywhere N p \\<or>\n     {a \\<in> space N. \\<not> p a} \\<noteq>\n     {a \\<in> space N. f a \\<noteq> g a}\n\ngoal (1 subgoal):\n 1. AE w in N. f w = g w", "by metis"], ["proof (state)\nthis:\n  AE w in N. f w = g w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AE w in N. f w = g w\n\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "}"], ["proof (state)\nthis:\n  AE w in M. f w = g w \\<Longrightarrow> AE w in N. f w = g w\n\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "note a = this"], ["proof (state)\nthis:\n  AE w in M. f w = g w \\<Longrightarrow> AE w in N. f w = g w\n\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "{"], ["proof (state)\nthis:\n  AE w in M. f w = g w \\<Longrightarrow> AE w in N. f w = g w\n\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "assume scd: \"AE w in N. f w = g w\""], ["proof (state)\nthis:\n  AE w in N. f w = g w\n\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "have \"space M = space N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space M = space N", "by (metis assms(1) filt_equiv_space)"], ["proof (state)\nthis:\n  space M = space N\n\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "have set0: \"{w\\<in> space N. f w \\<noteq> g w} \\<in> sets (F t) \\<and> emeasure N {w\\<in> space N. f w \\<noteq> g w} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space N. f w \\<noteq> g w} \\<in> sets (F t) \\<and>\n    emeasure N {w \\<in> space N. f w \\<noteq> g w} = 0", "proof (rule filtrated_prob_space.AE_borel_eq, (auto simp add: assms))"], ["proof (state)\ngoal (2 subgoals):\n 1. filtrated_prob_space N F\n 2. AE w in N. f w = g w", "show \"filtrated_prob_space N F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filtrated_prob_space N F", "using assms"], ["proof (prove)\nusing this:\n  filt_equiv F M N\n  f \\<in> borel_measurable (F t)\n  g \\<in> borel_measurable (F t)\n  prob_space N\n  prob_space M\n\ngoal (1 subgoal):\n 1. filtrated_prob_space N F", "unfolding filt_equiv_def"], ["proof (prove)\nusing this:\n  sets M = sets N \\<and>\n  Filtration.filtration M F \\<and>\n  (\\<forall>t A.\n      A \\<in> sets (F t) \\<longrightarrow>\n      (emeasure M A = 0) = (emeasure N A = 0))\n  f \\<in> borel_measurable (F t)\n  g \\<in> borel_measurable (F t)\n  prob_space N\n  prob_space M\n\ngoal (1 subgoal):\n 1. filtrated_prob_space N F", "by (metis \\<open>prob_space N\\<close> assms(1) filt_equiv_filtration filtrated_prob_space_axioms.intro filtrated_prob_space_def)"], ["proof (state)\nthis:\n  filtrated_prob_space N F\n\ngoal (1 subgoal):\n 1. AE w in N. f w = g w", "show \"AE w in N. f w = g w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE w in N. f w = g w", "using scd"], ["proof (prove)\nusing this:\n  AE w in N. f w = g w\n\ngoal (1 subgoal):\n 1. AE w in N. f w = g w", "."], ["proof (state)\nthis:\n  AE w in N. f w = g w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w \\<in> space N. f w \\<noteq> g w} \\<in> sets (F t) \\<and>\n  emeasure N {w \\<in> space N. f w \\<noteq> g w} = 0\n\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "hence \"emeasure M {w\\<in> space M. f w \\<noteq> g w} = 0\""], ["proof (prove)\nusing this:\n  {w \\<in> space N. f w \\<noteq> g w} \\<in> sets (F t) \\<and>\n  emeasure N {w \\<in> space N. f w \\<noteq> g w} = 0\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. f w \\<noteq> g w} = 0", "using assms"], ["proof (prove)\nusing this:\n  {w \\<in> space N. f w \\<noteq> g w} \\<in> sets (F t) \\<and>\n  emeasure N {w \\<in> space N. f w \\<noteq> g w} = 0\n  filt_equiv F M N\n  f \\<in> borel_measurable (F t)\n  g \\<in> borel_measurable (F t)\n  prob_space N\n  prob_space M\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. f w \\<noteq> g w} = 0", "unfolding filt_equiv_def"], ["proof (prove)\nusing this:\n  {w \\<in> space N. f w \\<noteq> g w} \\<in> sets (F t) \\<and>\n  emeasure N {w \\<in> space N. f w \\<noteq> g w} = 0\n  sets M = sets N \\<and>\n  Filtration.filtration M F \\<and>\n  (\\<forall>t A.\n      A \\<in> sets (F t) \\<longrightarrow>\n      (emeasure M A = 0) = (emeasure N A = 0))\n  f \\<in> borel_measurable (F t)\n  g \\<in> borel_measurable (F t)\n  prob_space N\n  prob_space M\n\ngoal (1 subgoal):\n 1. emeasure M {w \\<in> space M. f w \\<noteq> g w} = 0", "by (metis (full_types) assms(1) filt_equiv_space)"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. f w \\<noteq> g w} = 0\n\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "moreover"], ["proof (state)\nthis:\n  emeasure M {w \\<in> space M. f w \\<noteq> g w} = 0\n\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "have \"{w\\<in> space M. f w \\<noteq> g w} \\<in> sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w \\<in> space M. f w \\<noteq> g w} \\<in> sets M", "using set0 assms"], ["proof (prove)\nusing this:\n  {w \\<in> space N. f w \\<noteq> g w} \\<in> sets (F t) \\<and>\n  emeasure N {w \\<in> space N. f w \\<noteq> g w} = 0\n  filt_equiv F M N\n  f \\<in> borel_measurable (F t)\n  g \\<in> borel_measurable (F t)\n  prob_space N\n  prob_space M\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. f w \\<noteq> g w} \\<in> sets M", "unfolding filt_equiv_def\n      filtration_def subalgebra_def"], ["proof (prove)\nusing this:\n  {w \\<in> space N. f w \\<noteq> g w} \\<in> sets (F t) \\<and>\n  emeasure N {w \\<in> space N. f w \\<noteq> g w} = 0\n  sets M = sets N \\<and>\n  ((\\<forall>t.\n       space (F t) = space M \\<and> sets (F t) \\<subseteq> sets M) \\<and>\n   (\\<forall>s t.\n       s \\<le> t \\<longrightarrow>\n       space (F s) = space (F t) \\<and>\n       sets (F s) \\<subseteq> sets (F t))) \\<and>\n  (\\<forall>t A.\n      A \\<in> sets (F t) \\<longrightarrow>\n      (emeasure M A = 0) = (emeasure N A = 0))\n  f \\<in> borel_measurable (F t)\n  g \\<in> borel_measurable (F t)\n  prob_space N\n  prob_space M\n\ngoal (1 subgoal):\n 1. {w \\<in> space M. f w \\<noteq> g w} \\<in> sets M", "by (metis (mono_tags) \\<open>space M = space N\\<close> contra_subsetD)"], ["proof (state)\nthis:\n  {w \\<in> space M. f w \\<noteq> g w} \\<in> sets M\n\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "ultimately"], ["proof (chain)\npicking this:\n  emeasure M {w \\<in> space M. f w \\<noteq> g w} = 0\n  {w \\<in> space M. f w \\<noteq> g w} \\<in> sets M", "have \"AE w in M. f w=  g w\""], ["proof (prove)\nusing this:\n  emeasure M {w \\<in> space M. f w \\<noteq> g w} = 0\n  {w \\<in> space M. f w \\<noteq> g w} \\<in> sets M\n\ngoal (1 subgoal):\n 1. AE w in M. f w = g w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>emeasure M {w \\<in> space M. f w \\<noteq> g w} = 0;\n     {w \\<in> space M. f w \\<noteq> g w} \\<in> sets M\\<rbrakk>\n    \\<Longrightarrow> AE w in M. f w = g w", "have \"\\<forall>p. almost_everywhere M p \\<or> {a \\<in> space M. \\<not> p a} \\<noteq> {a \\<in> space M. f a \\<noteq> g a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p.\n       almost_everywhere M p \\<or>\n       {a \\<in> space M. \\<not> p a} \\<noteq>\n       {a \\<in> space M. f a \\<noteq> g a}", "using AE_iff_measurable \\<open>emeasure M {w \\<in> space M. f w \\<noteq> g w} = 0\\<close> \\<open>{w \\<in> space M. f w \\<noteq> g w} \\<in> sets M\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?N \\<in> sets ?M; {x \\<in> space ?M. \\<not> ?P x} = ?N\\<rbrakk>\n  \\<Longrightarrow> almost_everywhere ?M ?P = (emeasure ?M ?N = 0)\n  emeasure M {w \\<in> space M. f w \\<noteq> g w} = 0\n  {w \\<in> space M. f w \\<noteq> g w} \\<in> sets M\n\ngoal (1 subgoal):\n 1. \\<forall>p.\n       almost_everywhere M p \\<or>\n       {a \\<in> space M. \\<not> p a} \\<noteq>\n       {a \\<in> space M. f a \\<noteq> g a}", "by auto"], ["proof (state)\nthis:\n  \\<forall>p.\n     almost_everywhere M p \\<or>\n     {a \\<in> space M. \\<not> p a} \\<noteq>\n     {a \\<in> space M. f a \\<noteq> g a}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>emeasure M {w \\<in> space M. f w \\<noteq> g w} = 0;\n     {w \\<in> space M. f w \\<noteq> g w} \\<in> sets M\\<rbrakk>\n    \\<Longrightarrow> AE w in M. f w = g w", "then"], ["proof (chain)\npicking this:\n  \\<forall>p.\n     almost_everywhere M p \\<or>\n     {a \\<in> space M. \\<not> p a} \\<noteq>\n     {a \\<in> space M. f a \\<noteq> g a}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>p.\n     almost_everywhere M p \\<or>\n     {a \\<in> space M. \\<not> p a} \\<noteq>\n     {a \\<in> space M. f a \\<noteq> g a}\n\ngoal (1 subgoal):\n 1. AE w in M. f w = g w", "by metis"], ["proof (state)\nthis:\n  AE w in M. f w = g w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AE w in M. f w = g w\n\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "}"], ["proof (state)\nthis:\n  AE w in N. f w = g w \\<Longrightarrow> AE w in M. f w = g w\n\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "thus ?thesis"], ["proof (prove)\nusing this:\n  AE w in N. f w = g w \\<Longrightarrow> AE w in M. f w = g w\n\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "using a"], ["proof (prove)\nusing this:\n  AE w in N. f w = g w \\<Longrightarrow> AE w in M. f w = g w\n  AE w in M. f w = g w \\<Longrightarrow> AE w in N. f w = g w\n\ngoal (1 subgoal):\n 1. (AE w in M. f w = g w) = (AE w in N. f w = g w)", "by auto"], ["proof (state)\nthis:\n  (AE w in M. f w = g w) = (AE w in N. f w = g w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) filt_equiv_triv_init:\n  assumes \"filt_equiv F M N\"\nand \"init_triv_filt M G\"\nshows \"init_triv_filt N G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. init_triv_filt N G", "unfolding init_triv_filt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Filtration.filtration N G \\<and> sets (G \\<bottom>) = {{}, space N}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. Filtration.filtration N G\n 2. sets (G \\<bottom>) = {{}, space N}", "show \"filtration N G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Filtration.filtration N G", "using assms filt_equiv_filt[of F M N G]"], ["proof (prove)\nusing this:\n  filt_equiv F M N\n  init_triv_filt M G\n  \\<lbrakk>filt_equiv F M N; Filtration.filtration M G\\<rbrakk>\n  \\<Longrightarrow> Filtration.filtration N G\n\ngoal (1 subgoal):\n 1. Filtration.filtration N G", "unfolding init_triv_filt_def"], ["proof (prove)\nusing this:\n  filt_equiv F M N\n  Filtration.filtration M G \\<and> sets (G \\<bottom>) = {{}, space M}\n  \\<lbrakk>filt_equiv F M N; Filtration.filtration M G\\<rbrakk>\n  \\<Longrightarrow> Filtration.filtration N G\n\ngoal (1 subgoal):\n 1. Filtration.filtration N G", "by simp"], ["proof (state)\nthis:\n  Filtration.filtration N G\n\ngoal (1 subgoal):\n 1. sets (G \\<bottom>) = {{}, space N}", "show \"sets (G \\<bottom>) = {{}, space N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (G \\<bottom>) = {{}, space N}", "using assms filt_equiv_space[of F M N]"], ["proof (prove)\nusing this:\n  filt_equiv F M N\n  init_triv_filt M G\n  filt_equiv F M N \\<Longrightarrow> space M = space N\n\ngoal (1 subgoal):\n 1. sets (G \\<bottom>) = {{}, space N}", "unfolding init_triv_filt_def"], ["proof (prove)\nusing this:\n  filt_equiv F M N\n  Filtration.filtration M G \\<and> sets (G \\<bottom>) = {{}, space M}\n  filt_equiv F M N \\<Longrightarrow> space M = space N\n\ngoal (1 subgoal):\n 1. sets (G \\<bottom>) = {{}, space N}", "by simp"], ["proof (state)\nthis:\n  sets (G \\<bottom>) = {{}, space N}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in infinite_coin_toss_space) fct_gen_subalgebra_meas_info:\n  assumes \"\\<forall>w. f (g w) = f w\"\n  and \"f \\<in> space M \\<rightarrow> space N\"\nand \"g \\<in> space M \\<rightarrow> space M\"\n  shows \"g \\<in> measurable (fct_gen_subalgebra M N f) (fct_gen_subalgebra M N f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> fct_gen_subalgebra M N f \\<rightarrow>\\<^sub>M\n            fct_gen_subalgebra M N f", "unfolding measurable_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> {fa \\<in> space (fct_gen_subalgebra M N f) \\<rightarrow>\n                      space (fct_gen_subalgebra M N f).\n             \\<forall>y\\<in>sets (fct_gen_subalgebra M N f).\n                fa -` y \\<inter> space (fct_gen_subalgebra M N f)\n                \\<in> sets (fct_gen_subalgebra M N f)}", "proof (intro CollectI conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. g \\<in> space (fct_gen_subalgebra M N f) \\<rightarrow>\n            space (fct_gen_subalgebra M N f)\n 2. \\<forall>y\\<in>sets (fct_gen_subalgebra M N f).\n       g -` y \\<inter> space (fct_gen_subalgebra M N f)\n       \\<in> sets (fct_gen_subalgebra M N f)", "show \"g \\<in> space (fct_gen_subalgebra M N f) \\<rightarrow> space (fct_gen_subalgebra M N f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> space (fct_gen_subalgebra M N f) \\<rightarrow>\n            space (fct_gen_subalgebra M N f)", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>w. f (g w) = f w\n  f \\<in> space M \\<rightarrow> space N\n  g \\<in> space M \\<rightarrow> space M\n\ngoal (1 subgoal):\n 1. g \\<in> space (fct_gen_subalgebra M N f) \\<rightarrow>\n            space (fct_gen_subalgebra M N f)", "by (simp add: fct_gen_subalgebra_space)"], ["proof (state)\nthis:\n  g \\<in> space (fct_gen_subalgebra M N f) \\<rightarrow>\n          space (fct_gen_subalgebra M N f)\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>sets (fct_gen_subalgebra M N f).\n       g -` y \\<inter> space (fct_gen_subalgebra M N f)\n       \\<in> sets (fct_gen_subalgebra M N f)", "show \"\\<forall>y\\<in>sets (fct_gen_subalgebra M N f). g -` y \\<inter> space (fct_gen_subalgebra M N f) \\<in> sets (fct_gen_subalgebra M N f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>sets (fct_gen_subalgebra M N f).\n       g -` y \\<inter> space (fct_gen_subalgebra M N f)\n       \\<in> sets (fct_gen_subalgebra M N f)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (fct_gen_subalgebra M N f) \\<Longrightarrow>\n       g -` y \\<inter> space (fct_gen_subalgebra M N f)\n       \\<in> sets (fct_gen_subalgebra M N f)", "fix B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (fct_gen_subalgebra M N f) \\<Longrightarrow>\n       g -` y \\<inter> space (fct_gen_subalgebra M N f)\n       \\<in> sets (fct_gen_subalgebra M N f)", "assume \"B\\<in> sets (fct_gen_subalgebra M N f)\""], ["proof (state)\nthis:\n  B \\<in> sets (fct_gen_subalgebra M N f)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (fct_gen_subalgebra M N f) \\<Longrightarrow>\n       g -` y \\<inter> space (fct_gen_subalgebra M N f)\n       \\<in> sets (fct_gen_subalgebra M N f)", "hence \"B \\<in> {f -` B \\<inter> space M |B. B \\<in> sets N}\""], ["proof (prove)\nusing this:\n  B \\<in> sets (fct_gen_subalgebra M N f)\n\ngoal (1 subgoal):\n 1. B \\<in> {f -` B \\<inter> space M |B. B \\<in> sets N}", "using assms"], ["proof (prove)\nusing this:\n  B \\<in> sets (fct_gen_subalgebra M N f)\n  \\<forall>w. f (g w) = f w\n  f \\<in> space M \\<rightarrow> space N\n  g \\<in> space M \\<rightarrow> space M\n\ngoal (1 subgoal):\n 1. B \\<in> {f -` B \\<inter> space M |B. B \\<in> sets N}", "by (simp add:fct_gen_subalgebra_sigma_sets)"], ["proof (state)\nthis:\n  B \\<in> {f -` B \\<inter> space M |B. B \\<in> sets N}\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (fct_gen_subalgebra M N f) \\<Longrightarrow>\n       g -` y \\<inter> space (fct_gen_subalgebra M N f)\n       \\<in> sets (fct_gen_subalgebra M N f)", "from this"], ["proof (chain)\npicking this:\n  B \\<in> {f -` B \\<inter> space M |B. B \\<in> sets N}", "obtain C where \"C\\<in> sets N\" and \"B = f -`C \\<inter> space M\""], ["proof (prove)\nusing this:\n  B \\<in> {f -` B \\<inter> space M |B. B \\<in> sets N}\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>C \\<in> sets N; B = f -` C \\<inter> space M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C \\<in> sets N\n  B = f -` C \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (fct_gen_subalgebra M N f) \\<Longrightarrow>\n       g -` y \\<inter> space (fct_gen_subalgebra M N f)\n       \\<in> sets (fct_gen_subalgebra M N f)", "note Cprops = this"], ["proof (state)\nthis:\n  C \\<in> sets N\n  B = f -` C \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (fct_gen_subalgebra M N f) \\<Longrightarrow>\n       g -` y \\<inter> space (fct_gen_subalgebra M N f)\n       \\<in> sets (fct_gen_subalgebra M N f)", "have \"g -` B \\<inter> space (fct_gen_subalgebra M N f) = g -` B \\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g -` B \\<inter> space (fct_gen_subalgebra M N f) =\n    g -` B \\<inter> space M", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>w. f (g w) = f w\n  f \\<in> space M \\<rightarrow> space N\n  g \\<in> space M \\<rightarrow> space M\n\ngoal (1 subgoal):\n 1. g -` B \\<inter> space (fct_gen_subalgebra M N f) =\n    g -` B \\<inter> space M", "by (simp add: fct_gen_subalgebra_space)"], ["proof (state)\nthis:\n  g -` B \\<inter> space (fct_gen_subalgebra M N f) = g -` B \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (fct_gen_subalgebra M N f) \\<Longrightarrow>\n       g -` y \\<inter> space (fct_gen_subalgebra M N f)\n       \\<in> sets (fct_gen_subalgebra M N f)", "also"], ["proof (state)\nthis:\n  g -` B \\<inter> space (fct_gen_subalgebra M N f) = g -` B \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (fct_gen_subalgebra M N f) \\<Longrightarrow>\n       g -` y \\<inter> space (fct_gen_subalgebra M N f)\n       \\<in> sets (fct_gen_subalgebra M N f)", "have \"... = g -` (f -` C \\<inter> space M) \\<inter> space M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g -` B \\<inter> space M =\n    g -` (f -` C \\<inter> space M) \\<inter> space M", "using Cprops"], ["proof (prove)\nusing this:\n  C \\<in> sets N\n  B = f -` C \\<inter> space M\n\ngoal (1 subgoal):\n 1. g -` B \\<inter> space M =\n    g -` (f -` C \\<inter> space M) \\<inter> space M", "by simp"], ["proof (state)\nthis:\n  g -` B \\<inter> space M = g -` (f -` C \\<inter> space M) \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (fct_gen_subalgebra M N f) \\<Longrightarrow>\n       g -` y \\<inter> space (fct_gen_subalgebra M N f)\n       \\<in> sets (fct_gen_subalgebra M N f)", "also"], ["proof (state)\nthis:\n  g -` B \\<inter> space M = g -` (f -` C \\<inter> space M) \\<inter> space M\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (fct_gen_subalgebra M N f) \\<Longrightarrow>\n       g -` y \\<inter> space (fct_gen_subalgebra M N f)\n       \\<in> sets (fct_gen_subalgebra M N f)", "have \"... = g -` (f -` C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g -` (f -` C \\<inter> space M) \\<inter> space M = g -` f -` C", "using bernoulli bernoulli_stream_space"], ["proof (prove)\nusing this:\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n\ngoal (1 subgoal):\n 1. g -` (f -` C \\<inter> space M) \\<inter> space M = g -` f -` C", "by simp"], ["proof (state)\nthis:\n  g -` (f -` C \\<inter> space M) \\<inter> space M = g -` f -` C\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (fct_gen_subalgebra M N f) \\<Longrightarrow>\n       g -` y \\<inter> space (fct_gen_subalgebra M N f)\n       \\<in> sets (fct_gen_subalgebra M N f)", "also"], ["proof (state)\nthis:\n  g -` (f -` C \\<inter> space M) \\<inter> space M = g -` f -` C\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (fct_gen_subalgebra M N f) \\<Longrightarrow>\n       g -` y \\<inter> space (fct_gen_subalgebra M N f)\n       \\<in> sets (fct_gen_subalgebra M N f)", "have \"... = (f\\<circ> g) -` C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g -` f -` C = (f \\<circ> g) -` C", "by auto"], ["proof (state)\nthis:\n  g -` f -` C = (f \\<circ> g) -` C\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (fct_gen_subalgebra M N f) \\<Longrightarrow>\n       g -` y \\<inter> space (fct_gen_subalgebra M N f)\n       \\<in> sets (fct_gen_subalgebra M N f)", "also"], ["proof (state)\nthis:\n  g -` f -` C = (f \\<circ> g) -` C\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (fct_gen_subalgebra M N f) \\<Longrightarrow>\n       g -` y \\<inter> space (fct_gen_subalgebra M N f)\n       \\<in> sets (fct_gen_subalgebra M N f)", "have \"... = f -` C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<circ> g) -` C = f -` C", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (f \\<circ> g) -` C \\<subseteq> f -` C\n 2. f -` C \\<subseteq> (f \\<circ> g) -` C", "show \"(f \\<circ> g) -` C \\<subseteq> f -` C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<circ> g) -` C \\<subseteq> f -` C", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> (f \\<circ> g) -` C \\<Longrightarrow> x \\<in> f -` C", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> (f \\<circ> g) -` C \\<Longrightarrow> x \\<in> f -` C", "assume \"w \\<in> (f \\<circ> g) -` C\""], ["proof (state)\nthis:\n  w \\<in> (f \\<circ> g) -` C\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> (f \\<circ> g) -` C \\<Longrightarrow> x \\<in> f -` C", "hence \"f (g w) \\<in> C\""], ["proof (prove)\nusing this:\n  w \\<in> (f \\<circ> g) -` C\n\ngoal (1 subgoal):\n 1. f (g w) \\<in> C", "by simp"], ["proof (state)\nthis:\n  f (g w) \\<in> C\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> (f \\<circ> g) -` C \\<Longrightarrow> x \\<in> f -` C", "hence \"f w \\<in> C\""], ["proof (prove)\nusing this:\n  f (g w) \\<in> C\n\ngoal (1 subgoal):\n 1. f w \\<in> C", "using assms"], ["proof (prove)\nusing this:\n  f (g w) \\<in> C\n  \\<forall>w. f (g w) = f w\n  f \\<in> space M \\<rightarrow> space N\n  g \\<in> space M \\<rightarrow> space M\n\ngoal (1 subgoal):\n 1. f w \\<in> C", "by simp"], ["proof (state)\nthis:\n  f w \\<in> C\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> (f \\<circ> g) -` C \\<Longrightarrow> x \\<in> f -` C", "thus \"w\\<in> f -`C\""], ["proof (prove)\nusing this:\n  f w \\<in> C\n\ngoal (1 subgoal):\n 1. w \\<in> f -` C", "by simp"], ["proof (state)\nthis:\n  w \\<in> f -` C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (f \\<circ> g) -` C \\<subseteq> f -` C\n\ngoal (1 subgoal):\n 1. f -` C \\<subseteq> (f \\<circ> g) -` C", "show \"f -` C \\<subseteq> (f \\<circ> g) -` C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` C \\<subseteq> (f \\<circ> g) -` C", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> f -` C \\<Longrightarrow> x \\<in> (f \\<circ> g) -` C", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> f -` C \\<Longrightarrow> x \\<in> (f \\<circ> g) -` C", "assume \"w\\<in> f -`C\""], ["proof (state)\nthis:\n  w \\<in> f -` C\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> f -` C \\<Longrightarrow> x \\<in> (f \\<circ> g) -` C", "hence \"f w \\<in> C\""], ["proof (prove)\nusing this:\n  w \\<in> f -` C\n\ngoal (1 subgoal):\n 1. f w \\<in> C", "by simp"], ["proof (state)\nthis:\n  f w \\<in> C\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> f -` C \\<Longrightarrow> x \\<in> (f \\<circ> g) -` C", "hence \"f (g w) \\<in> C\""], ["proof (prove)\nusing this:\n  f w \\<in> C\n\ngoal (1 subgoal):\n 1. f (g w) \\<in> C", "using assms"], ["proof (prove)\nusing this:\n  f w \\<in> C\n  \\<forall>w. f (g w) = f w\n  f \\<in> space M \\<rightarrow> space N\n  g \\<in> space M \\<rightarrow> space M\n\ngoal (1 subgoal):\n 1. f (g w) \\<in> C", "by simp"], ["proof (state)\nthis:\n  f (g w) \\<in> C\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> f -` C \\<Longrightarrow> x \\<in> (f \\<circ> g) -` C", "thus \"w\\<in> (f \\<circ> g) -` C\""], ["proof (prove)\nusing this:\n  f (g w) \\<in> C\n\ngoal (1 subgoal):\n 1. w \\<in> (f \\<circ> g) -` C", "by simp"], ["proof (state)\nthis:\n  w \\<in> (f \\<circ> g) -` C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f -` C \\<subseteq> (f \\<circ> g) -` C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (f \\<circ> g) -` C = f -` C\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (fct_gen_subalgebra M N f) \\<Longrightarrow>\n       g -` y \\<inter> space (fct_gen_subalgebra M N f)\n       \\<in> sets (fct_gen_subalgebra M N f)", "also"], ["proof (state)\nthis:\n  (f \\<circ> g) -` C = f -` C\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (fct_gen_subalgebra M N f) \\<Longrightarrow>\n       g -` y \\<inter> space (fct_gen_subalgebra M N f)\n       \\<in> sets (fct_gen_subalgebra M N f)", "have \"... \\<in> sets (fct_gen_subalgebra M N f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` C \\<in> sets (fct_gen_subalgebra M N f)", "using Cprops(2) \\<open>B \\<in> sets (fct_gen_subalgebra M N f)\\<close> bernoulli bernoulli_stream_space\n        inf_top.right_neutral"], ["proof (prove)\nusing this:\n  B = f -` C \\<inter> space M\n  B \\<in> sets (fct_gen_subalgebra M N f)\n  M = bernoulli_stream p\n  ?N = bernoulli_stream ?p \\<Longrightarrow> space ?N = streams UNIV\n  ?a \\<sqinter> \\<top> = ?a\n\ngoal (1 subgoal):\n 1. f -` C \\<in> sets (fct_gen_subalgebra M N f)", "by auto"], ["proof (state)\nthis:\n  f -` C \\<in> sets (fct_gen_subalgebra M N f)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> sets (fct_gen_subalgebra M N f) \\<Longrightarrow>\n       g -` y \\<inter> space (fct_gen_subalgebra M N f)\n       \\<in> sets (fct_gen_subalgebra M N f)", "finally"], ["proof (chain)\npicking this:\n  g -` B \\<inter> space (fct_gen_subalgebra M N f)\n  \\<in> sets (fct_gen_subalgebra M N f)", "show \"g -` B \\<inter> space (fct_gen_subalgebra M N f) \\<in> sets (fct_gen_subalgebra M N f)\""], ["proof (prove)\nusing this:\n  g -` B \\<inter> space (fct_gen_subalgebra M N f)\n  \\<in> sets (fct_gen_subalgebra M N f)\n\ngoal (1 subgoal):\n 1. g -` B \\<inter> space (fct_gen_subalgebra M N f)\n    \\<in> sets (fct_gen_subalgebra M N f)", "."], ["proof (state)\nthis:\n  g -` B \\<inter> space (fct_gen_subalgebra M N f)\n  \\<in> sets (fct_gen_subalgebra M N f)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>y\\<in>sets (fct_gen_subalgebra M N f).\n     g -` y \\<inter> space (fct_gen_subalgebra M N f)\n     \\<in> sets (fct_gen_subalgebra M N f)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}