{"file_name": "/home/qj213/afp-2021-10-22/thys/Perfect-Number-Thm/Perfect.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Perfect-Number-Thm", "problem_names": ["theorem perfect_number_theorem:\n  assumes even: \"even m\" and perfect: \"perfect m\"\n  shows \"\\<exists> n . m = 2^n*(2^(n+1) - 1) \\<and> prime ((2::nat)^(n+1) - 1)\"", "theorem Euclid_book9_prop36:\n  assumes p: \"prime (2^(n+1) - (1::nat))\"\n  shows \"perfect (2 ^ n * (2 ^ (n + 1) - 1))\""], "translations": [["", "theorem perfect_number_theorem:\n  assumes even: \"even m\" and perfect: \"perfect m\"\n  shows \"\\<exists> n . m = 2^n*(2^(n+1) - 1) \\<and> prime ((2::nat)^(n+1) - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. m = 2 ^ n * (2 ^ (n + 1) - 1) \\<and> prime (2 ^ (n + 1) - 1)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "from perfect"], ["proof (chain)\npicking this:\n  perfect m", "have m0: \"m>0\""], ["proof (prove)\nusing this:\n  perfect m\n\ngoal (1 subgoal):\n 1. 0 < m", "by (auto simp add: perfect_def)"], ["proof (state)\nthis:\n  0 < m\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "let ?n = \"multiplicity 2 m\""], ["proof (state)\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "let ?A = \"m div 2^?n\""], ["proof (state)\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "let ?np = \"(2::nat)^(?n+1) - 1\""], ["proof (state)\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "from even m0"], ["proof (chain)\npicking this:\n  even m\n  0 < m", "have n1: \"?n >= 1 \""], ["proof (prove)\nusing this:\n  even m\n  0 < m\n\ngoal (1 subgoal):\n 1. 1 \\<le> multiplicity 2 m", "by (simp add: multiplicity_geI)"], ["proof (state)\nthis:\n  1 \\<le> multiplicity 2 m\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "have  \"2^?n dvd m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ multiplicity 2 m dvd m", "by (rule multiplicity_dvd)"], ["proof (state)\nthis:\n  2 ^ multiplicity 2 m dvd m\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "hence \"m = 2^?n*?A\""], ["proof (prove)\nusing this:\n  2 ^ multiplicity 2 m dvd m\n\ngoal (1 subgoal):\n 1. m = 2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m)", "by (simp only: dvd_mult_div_cancel)"], ["proof (state)\nthis:\n  m = 2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "with m0"], ["proof (chain)\npicking this:\n  0 < m\n  m = 2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m)", "have mdef: \"m=2^?n*?A \\<and> coprime 2 ?A\""], ["proof (prove)\nusing this:\n  0 < m\n  m = 2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. m = 2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m) \\<and>\n    coprime 2 (m div 2 ^ multiplicity 2 m)", "using multiplicity_decompose [of m 2]"], ["proof (prove)\nusing this:\n  0 < m\n  m = 2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m)\n  \\<lbrakk>m \\<noteq> 0; \\<not> is_unit 2\\<rbrakk>\n  \\<Longrightarrow> odd (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. m = 2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m) \\<and>\n    coprime 2 (m div 2 ^ multiplicity 2 m)", "by simp"], ["proof (state)\nthis:\n  m = 2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m) \\<and>\n  coprime 2 (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "moreover"], ["proof (state)\nthis:\n  m = 2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m) \\<and>\n  coprime 2 (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "with m0"], ["proof (chain)\npicking this:\n  0 < m\n  m = 2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m) \\<and>\n  coprime 2 (m div 2 ^ multiplicity 2 m)", "have a0: \"?A>0\""], ["proof (prove)\nusing this:\n  0 < m\n  m = 2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m) \\<and>\n  coprime 2 (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. 0 < m div 2 ^ multiplicity 2 m", "by (metis nat_0_less_mult_iff)"], ["proof (state)\nthis:\n  0 < m div 2 ^ multiplicity 2 m\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "moreover"], ["proof (state)\nthis:\n  0 < m div 2 ^ multiplicity 2 m\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "{"], ["proof (state)\nthis:\n  0 < m div 2 ^ multiplicity 2 m\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "from perfect"], ["proof (chain)\npicking this:\n  perfect m", "have \"2*m=sigma(m)\""], ["proof (prove)\nusing this:\n  perfect m\n\ngoal (1 subgoal):\n 1. 2 * m = sigma m", "by (simp add: perfect_def)"], ["proof (state)\nthis:\n  2 * m = sigma m\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "with mdef"], ["proof (chain)\npicking this:\n  m = 2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m) \\<and>\n  coprime 2 (m div 2 ^ multiplicity 2 m)\n  2 * m = sigma m", "have \"2^(?n+1)*?A=sigma(2^?n*?A)\""], ["proof (prove)\nusing this:\n  m = 2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m) \\<and>\n  coprime 2 (m div 2 ^ multiplicity 2 m)\n  2 * m = sigma m\n\ngoal (1 subgoal):\n 1. 2 ^ (multiplicity 2 m + 1) * (m div 2 ^ multiplicity 2 m) =\n    sigma (2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m))", "by auto"], ["proof (state)\nthis:\n  2 ^ (multiplicity 2 m + 1) * (m div 2 ^ multiplicity 2 m) =\n  sigma (2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m))\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "}"], ["proof (state)\nthis:\n  2 ^ (multiplicity 2 m + 1) * (m div 2 ^ multiplicity 2 m) =\n  sigma (2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m))\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "ultimately"], ["proof (chain)\npicking this:\n  m = 2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m) \\<and>\n  coprime 2 (m div 2 ^ multiplicity 2 m)\n  0 < m div 2 ^ multiplicity 2 m\n  2 ^ (multiplicity 2 m + 1) * (m div 2 ^ multiplicity 2 m) =\n  sigma (2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m))", "have \"2^(?n+1)*?A=sigma(2^?n)*sigma(?A)\""], ["proof (prove)\nusing this:\n  m = 2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m) \\<and>\n  coprime 2 (m div 2 ^ multiplicity 2 m)\n  0 < m div 2 ^ multiplicity 2 m\n  2 ^ (multiplicity 2 m + 1) * (m div 2 ^ multiplicity 2 m) =\n  sigma (2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m))\n\ngoal (1 subgoal):\n 1. 2 ^ (multiplicity 2 m + 1) * (m div 2 ^ multiplicity 2 m) =\n    sigma (2 ^ multiplicity 2 m) * sigma (m div 2 ^ multiplicity 2 m)", "by (simp add: sigma_semimultiplicative)"], ["proof (state)\nthis:\n  2 ^ (multiplicity 2 m + 1) * (m div 2 ^ multiplicity 2 m) =\n  sigma (2 ^ multiplicity 2 m) * sigma (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "hence formula: \"2^(?n+1)*?A=(?np)*sigma(?A)\""], ["proof (prove)\nusing this:\n  2 ^ (multiplicity 2 m + 1) * (m div 2 ^ multiplicity 2 m) =\n  sigma (2 ^ multiplicity 2 m) * sigma (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. 2 ^ (multiplicity 2 m + 1) * (m div 2 ^ multiplicity 2 m) =\n    (2 ^ (multiplicity 2 m + 1) - 1) * sigma (m div 2 ^ multiplicity 2 m)", "by (simp only: sigma_prime_power_two)"], ["proof (state)\nthis:\n  2 ^ (multiplicity 2 m + 1) * (m div 2 ^ multiplicity 2 m) =\n  (2 ^ (multiplicity 2 m + 1) - 1) * sigma (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "from n1"], ["proof (chain)\npicking this:\n  1 \\<le> multiplicity 2 m", "have \"(2::nat)^(?n+1) >= 2^2\""], ["proof (prove)\nusing this:\n  1 \\<le> multiplicity 2 m\n\ngoal (1 subgoal):\n 1. 2\\<^sup>2 \\<le> 2 ^ (multiplicity 2 m + 1)", "by (simp only: power_increasing)"], ["proof (state)\nthis:\n  2\\<^sup>2 \\<le> 2 ^ (multiplicity 2 m + 1)\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "hence nplarger: \"?np>= 3\""], ["proof (prove)\nusing this:\n  2\\<^sup>2 \\<le> 2 ^ (multiplicity 2 m + 1)\n\ngoal (1 subgoal):\n 1. 3 \\<le> 2 ^ (multiplicity 2 m + 1) - 1", "by auto"], ["proof (state)\nthis:\n  3 \\<le> 2 ^ (multiplicity 2 m + 1) - 1\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "let ?B = \"?A div ?np\""], ["proof (state)\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "from formula"], ["proof (chain)\npicking this:\n  2 ^ (multiplicity 2 m + 1) * (m div 2 ^ multiplicity 2 m) =\n  (2 ^ (multiplicity 2 m + 1) - 1) * sigma (m div 2 ^ multiplicity 2 m)", "have \"?np dvd ?A * 2^(?n+1)\""], ["proof (prove)\nusing this:\n  2 ^ (multiplicity 2 m + 1) * (m div 2 ^ multiplicity 2 m) =\n  (2 ^ (multiplicity 2 m + 1) - 1) * sigma (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. 2 ^ (multiplicity 2 m + 1) - 1 dvd\n    m div 2 ^ multiplicity 2 m * 2 ^ (multiplicity 2 m + 1)", "by (auto simp add: ac_simps)"], ["proof (state)\nthis:\n  2 ^ (multiplicity 2 m + 1) - 1 dvd\n  m div 2 ^ multiplicity 2 m * 2 ^ (multiplicity 2 m + 1)\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "then"], ["proof (chain)\npicking this:\n  2 ^ (multiplicity 2 m + 1) - 1 dvd\n  m div 2 ^ multiplicity 2 m * 2 ^ (multiplicity 2 m + 1)", "have \"?np dvd ?A\""], ["proof (prove)\nusing this:\n  2 ^ (multiplicity 2 m + 1) - 1 dvd\n  m div 2 ^ multiplicity 2 m * 2 ^ (multiplicity 2 m + 1)\n\ngoal (1 subgoal):\n 1. 2 ^ (multiplicity 2 m + 1) - 1 dvd m div 2 ^ multiplicity 2 m", "using coprime_diff_one_left_nat [of \"2 ^ (multiplicity 2 m + 1)\"]"], ["proof (prove)\nusing this:\n  2 ^ (multiplicity 2 m + 1) - 1 dvd\n  m div 2 ^ multiplicity 2 m * 2 ^ (multiplicity 2 m + 1)\n  0 < 2 ^ (multiplicity 2 m + 1) \\<Longrightarrow>\n  coprime (2 ^ (multiplicity 2 m + 1) - 1) (2 ^ (multiplicity 2 m + 1))\n\ngoal (1 subgoal):\n 1. 2 ^ (multiplicity 2 m + 1) - 1 dvd m div 2 ^ multiplicity 2 m", "by (auto simp add: coprime_dvd_mult_left_iff)"], ["proof (state)\nthis:\n  2 ^ (multiplicity 2 m + 1) - 1 dvd m div 2 ^ multiplicity 2 m\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "then"], ["proof (chain)\npicking this:\n  2 ^ (multiplicity 2 m + 1) - 1 dvd m div 2 ^ multiplicity 2 m", "have bdef: \"?np*?B = ?A\""], ["proof (prove)\nusing this:\n  2 ^ (multiplicity 2 m + 1) - 1 dvd m div 2 ^ multiplicity 2 m\n\ngoal (1 subgoal):\n 1. (2 ^ (multiplicity 2 m + 1) - 1) *\n    (m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)) =\n    m div 2 ^ multiplicity 2 m", "by simp"], ["proof (state)\nthis:\n  (2 ^ (multiplicity 2 m + 1) - 1) *\n  (m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)) =\n  m div 2 ^ multiplicity 2 m\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "with a0"], ["proof (chain)\npicking this:\n  0 < m div 2 ^ multiplicity 2 m\n  (2 ^ (multiplicity 2 m + 1) - 1) *\n  (m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)) =\n  m div 2 ^ multiplicity 2 m", "have  b0: \"?B>0\""], ["proof (prove)\nusing this:\n  0 < m div 2 ^ multiplicity 2 m\n  (2 ^ (multiplicity 2 m + 1) - 1) *\n  (m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)) =\n  m div 2 ^ multiplicity 2 m\n\ngoal (1 subgoal):\n 1. 0 < m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)", "by (metis gr0I mult_is_0)"], ["proof (state)\nthis:\n  0 < m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "from nplarger a0"], ["proof (chain)\npicking this:\n  3 \\<le> 2 ^ (multiplicity 2 m + 1) - 1\n  0 < m div 2 ^ multiplicity 2 m", "have bsmallera: \"?B < ?A\""], ["proof (prove)\nusing this:\n  3 \\<le> 2 ^ (multiplicity 2 m + 1) - 1\n  0 < m div 2 ^ multiplicity 2 m\n\ngoal (1 subgoal):\n 1. m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n    < m div 2 ^ multiplicity 2 m", "by auto"], ["proof (state)\nthis:\n  m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n  < m div 2 ^ multiplicity 2 m\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "have \"?B = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) = 1", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) \\<noteq>\n    1 \\<Longrightarrow>\n    False", "assume \"?B \\<noteq> 1\""], ["proof (state)\nthis:\n  m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) \\<noteq> 1\n\ngoal (1 subgoal):\n 1. m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) \\<noteq>\n    1 \\<Longrightarrow>\n    False", "with b0 bsmallera"], ["proof (chain)\npicking this:\n  0 < m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n  m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n  < m div 2 ^ multiplicity 2 m\n  m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) \\<noteq> 1", "have \"1<?B\" \"?B<?A\""], ["proof (prove)\nusing this:\n  0 < m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n  m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n  < m div 2 ^ multiplicity 2 m\n  m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) \\<noteq> 1\n\ngoal (1 subgoal):\n 1. 1 < m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) &&&\n    m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n    < m div 2 ^ multiplicity 2 m", "by auto"], ["proof (state)\nthis:\n  1 < m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n  m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n  < m div 2 ^ multiplicity 2 m\n\ngoal (1 subgoal):\n 1. m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) \\<noteq>\n    1 \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  1 < m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n  m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n  < m div 2 ^ multiplicity 2 m\n\ngoal (1 subgoal):\n 1. m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) \\<noteq>\n    1 \\<Longrightarrow>\n    False", "from bdef"], ["proof (chain)\npicking this:\n  (2 ^ (multiplicity 2 m + 1) - 1) *\n  (m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)) =\n  m div 2 ^ multiplicity 2 m", "have \"?B : divisors ?A\""], ["proof (prove)\nusing this:\n  (2 ^ (multiplicity 2 m + 1) - 1) *\n  (m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)) =\n  m div 2 ^ multiplicity 2 m\n\ngoal (1 subgoal):\n 1. m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n    \\<in> divisors (m div 2 ^ multiplicity 2 m)", "by (metis divisors_eq_dvd dvd_triv_right)"], ["proof (state)\nthis:\n  m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n  \\<in> divisors (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) \\<noteq>\n    1 \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  1 < m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n  m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n  < m div 2 ^ multiplicity 2 m\n  m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n  \\<in> divisors (m div 2 ^ multiplicity 2 m)", "have \"1+?B+?A \\<le> sigma ?A\""], ["proof (prove)\nusing this:\n  1 < m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n  m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n  < m div 2 ^ multiplicity 2 m\n  m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n  \\<in> divisors (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. 1 + m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) +\n    m div 2 ^ multiplicity 2 m\n    \\<le> sigma (m div 2 ^ multiplicity 2 m)", "using sigma_third_divisor"], ["proof (prove)\nusing this:\n  1 < m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n  m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n  < m div 2 ^ multiplicity 2 m\n  m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)\n  \\<in> divisors (m div 2 ^ multiplicity 2 m)\n  \\<lbrakk>1 < ?a; ?a < ?n; ?a dvd ?n\\<rbrakk>\n  \\<Longrightarrow> 1 + ?a + ?n \\<le> sigma ?n\n\ngoal (1 subgoal):\n 1. 1 + m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) +\n    m div 2 ^ multiplicity 2 m\n    \\<le> sigma (m div 2 ^ multiplicity 2 m)", "by blast"], ["proof (state)\nthis:\n  1 + m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) +\n  m div 2 ^ multiplicity 2 m\n  \\<le> sigma (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) \\<noteq>\n    1 \\<Longrightarrow>\n    False", "with nplarger"], ["proof (chain)\npicking this:\n  3 \\<le> 2 ^ (multiplicity 2 m + 1) - 1\n  1 + m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) +\n  m div 2 ^ multiplicity 2 m\n  \\<le> sigma (m div 2 ^ multiplicity 2 m)", "have \"?np*(1+?A+?B) \\<le> ?np*(sigma ?A)\""], ["proof (prove)\nusing this:\n  3 \\<le> 2 ^ (multiplicity 2 m + 1) - 1\n  1 + m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) +\n  m div 2 ^ multiplicity 2 m\n  \\<le> sigma (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. (2 ^ (multiplicity 2 m + 1) - 1) *\n    (1 + m div 2 ^ multiplicity 2 m +\n     m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1))\n    \\<le> (2 ^ (multiplicity 2 m + 1) - 1) *\n          sigma (m div 2 ^ multiplicity 2 m)", "by (auto simp only: nat_mult_le_cancel1)"], ["proof (state)\nthis:\n  (2 ^ (multiplicity 2 m + 1) - 1) *\n  (1 + m div 2 ^ multiplicity 2 m +\n   m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1))\n  \\<le> (2 ^ (multiplicity 2 m + 1) - 1) *\n        sigma (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) \\<noteq>\n    1 \\<Longrightarrow>\n    False", "with bdef"], ["proof (chain)\npicking this:\n  (2 ^ (multiplicity 2 m + 1) - 1) *\n  (m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)) =\n  m div 2 ^ multiplicity 2 m\n  (2 ^ (multiplicity 2 m + 1) - 1) *\n  (1 + m div 2 ^ multiplicity 2 m +\n   m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1))\n  \\<le> (2 ^ (multiplicity 2 m + 1) - 1) *\n        sigma (m div 2 ^ multiplicity 2 m)", "have \"?np+?A*?np + ?A*1 \\<le> ?np*(sigma ?A)\""], ["proof (prove)\nusing this:\n  (2 ^ (multiplicity 2 m + 1) - 1) *\n  (m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)) =\n  m div 2 ^ multiplicity 2 m\n  (2 ^ (multiplicity 2 m + 1) - 1) *\n  (1 + m div 2 ^ multiplicity 2 m +\n   m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1))\n  \\<le> (2 ^ (multiplicity 2 m + 1) - 1) *\n        sigma (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. 2 ^ (multiplicity 2 m + 1) - 1 +\n    m div 2 ^ multiplicity 2 m * (2 ^ (multiplicity 2 m + 1) - 1) +\n    m div 2 ^ multiplicity 2 m * 1\n    \\<le> (2 ^ (multiplicity 2 m + 1) - 1) *\n          sigma (m div 2 ^ multiplicity 2 m)", "by (simp add: mult.commute distrib_left)"], ["proof (state)\nthis:\n  2 ^ (multiplicity 2 m + 1) - 1 +\n  m div 2 ^ multiplicity 2 m * (2 ^ (multiplicity 2 m + 1) - 1) +\n  m div 2 ^ multiplicity 2 m * 1\n  \\<le> (2 ^ (multiplicity 2 m + 1) - 1) *\n        sigma (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) \\<noteq>\n    1 \\<Longrightarrow>\n    False", "hence \"?np+?A*(?np + 1) \\<le> ?np*(sigma ?A)\""], ["proof (prove)\nusing this:\n  2 ^ (multiplicity 2 m + 1) - 1 +\n  m div 2 ^ multiplicity 2 m * (2 ^ (multiplicity 2 m + 1) - 1) +\n  m div 2 ^ multiplicity 2 m * 1\n  \\<le> (2 ^ (multiplicity 2 m + 1) - 1) *\n        sigma (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. 2 ^ (multiplicity 2 m + 1) - 1 +\n    m div 2 ^ multiplicity 2 m * (2 ^ (multiplicity 2 m + 1) - 1 + 1)\n    \\<le> (2 ^ (multiplicity 2 m + 1) - 1) *\n          sigma (m div 2 ^ multiplicity 2 m)", "by (simp only:add_mult_distrib2)"], ["proof (state)\nthis:\n  2 ^ (multiplicity 2 m + 1) - 1 +\n  m div 2 ^ multiplicity 2 m * (2 ^ (multiplicity 2 m + 1) - 1 + 1)\n  \\<le> (2 ^ (multiplicity 2 m + 1) - 1) *\n        sigma (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) \\<noteq>\n    1 \\<Longrightarrow>\n    False", "with nplarger"], ["proof (chain)\npicking this:\n  3 \\<le> 2 ^ (multiplicity 2 m + 1) - 1\n  2 ^ (multiplicity 2 m + 1) - 1 +\n  m div 2 ^ multiplicity 2 m * (2 ^ (multiplicity 2 m + 1) - 1 + 1)\n  \\<le> (2 ^ (multiplicity 2 m + 1) - 1) *\n        sigma (m div 2 ^ multiplicity 2 m)", "have \"2^(?n+1)*?A < ?np*(sigma ?A)\""], ["proof (prove)\nusing this:\n  3 \\<le> 2 ^ (multiplicity 2 m + 1) - 1\n  2 ^ (multiplicity 2 m + 1) - 1 +\n  m div 2 ^ multiplicity 2 m * (2 ^ (multiplicity 2 m + 1) - 1 + 1)\n  \\<le> (2 ^ (multiplicity 2 m + 1) - 1) *\n        sigma (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. 2 ^ (multiplicity 2 m + 1) * (m div 2 ^ multiplicity 2 m)\n    < (2 ^ (multiplicity 2 m + 1) - 1) * sigma (m div 2 ^ multiplicity 2 m)", "by(simp add:mult.commute)"], ["proof (state)\nthis:\n  2 ^ (multiplicity 2 m + 1) * (m div 2 ^ multiplicity 2 m)\n  < (2 ^ (multiplicity 2 m + 1) - 1) * sigma (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) \\<noteq>\n    1 \\<Longrightarrow>\n    False", "with formula"], ["proof (chain)\npicking this:\n  2 ^ (multiplicity 2 m + 1) * (m div 2 ^ multiplicity 2 m) =\n  (2 ^ (multiplicity 2 m + 1) - 1) * sigma (m div 2 ^ multiplicity 2 m)\n  2 ^ (multiplicity 2 m + 1) * (m div 2 ^ multiplicity 2 m)\n  < (2 ^ (multiplicity 2 m + 1) - 1) * sigma (m div 2 ^ multiplicity 2 m)", "show \"False\""], ["proof (prove)\nusing this:\n  2 ^ (multiplicity 2 m + 1) * (m div 2 ^ multiplicity 2 m) =\n  (2 ^ (multiplicity 2 m + 1) - 1) * sigma (m div 2 ^ multiplicity 2 m)\n  2 ^ (multiplicity 2 m + 1) * (m div 2 ^ multiplicity 2 m)\n  < (2 ^ (multiplicity 2 m + 1) - 1) * sigma (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) = 1\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "with bdef"], ["proof (chain)\npicking this:\n  (2 ^ (multiplicity 2 m + 1) - 1) *\n  (m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)) =\n  m div 2 ^ multiplicity 2 m\n  m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) = 1", "have adef: \"?A=?np\""], ["proof (prove)\nusing this:\n  (2 ^ (multiplicity 2 m + 1) - 1) *\n  (m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1)) =\n  m div 2 ^ multiplicity 2 m\n  m div 2 ^ multiplicity 2 m div (2 ^ (multiplicity 2 m + 1) - 1) = 1\n\ngoal (1 subgoal):\n 1. m div 2 ^ multiplicity 2 m = 2 ^ (multiplicity 2 m + 1) - 1", "by auto"], ["proof (state)\nthis:\n  m div 2 ^ multiplicity 2 m = 2 ^ (multiplicity 2 m + 1) - 1\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "with formula"], ["proof (chain)\npicking this:\n  2 ^ (multiplicity 2 m + 1) * (m div 2 ^ multiplicity 2 m) =\n  (2 ^ (multiplicity 2 m + 1) - 1) * sigma (m div 2 ^ multiplicity 2 m)\n  m div 2 ^ multiplicity 2 m = 2 ^ (multiplicity 2 m + 1) - 1", "have \"?np*2^(?n+1) = ?np * sigma(?A)\""], ["proof (prove)\nusing this:\n  2 ^ (multiplicity 2 m + 1) * (m div 2 ^ multiplicity 2 m) =\n  (2 ^ (multiplicity 2 m + 1) - 1) * sigma (m div 2 ^ multiplicity 2 m)\n  m div 2 ^ multiplicity 2 m = 2 ^ (multiplicity 2 m + 1) - 1\n\ngoal (1 subgoal):\n 1. (2 ^ (multiplicity 2 m + 1) - 1) * 2 ^ (multiplicity 2 m + 1) =\n    (2 ^ (multiplicity 2 m + 1) - 1) * sigma (m div 2 ^ multiplicity 2 m)", "by auto"], ["proof (state)\nthis:\n  (2 ^ (multiplicity 2 m + 1) - 1) * 2 ^ (multiplicity 2 m + 1) =\n  (2 ^ (multiplicity 2 m + 1) - 1) * sigma (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "with nplarger adef"], ["proof (chain)\npicking this:\n  3 \\<le> 2 ^ (multiplicity 2 m + 1) - 1\n  m div 2 ^ multiplicity 2 m = 2 ^ (multiplicity 2 m + 1) - 1\n  (2 ^ (multiplicity 2 m + 1) - 1) * 2 ^ (multiplicity 2 m + 1) =\n  (2 ^ (multiplicity 2 m + 1) - 1) * sigma (m div 2 ^ multiplicity 2 m)", "have \"?A + 1=sigma(?A)\""], ["proof (prove)\nusing this:\n  3 \\<le> 2 ^ (multiplicity 2 m + 1) - 1\n  m div 2 ^ multiplicity 2 m = 2 ^ (multiplicity 2 m + 1) - 1\n  (2 ^ (multiplicity 2 m + 1) - 1) * 2 ^ (multiplicity 2 m + 1) =\n  (2 ^ (multiplicity 2 m + 1) - 1) * sigma (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. m div 2 ^ multiplicity 2 m + 1 = sigma (m div 2 ^ multiplicity 2 m)", "by auto"], ["proof (state)\nthis:\n  m div 2 ^ multiplicity 2 m + 1 = sigma (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "with a0"], ["proof (chain)\npicking this:\n  0 < m div 2 ^ multiplicity 2 m\n  m div 2 ^ multiplicity 2 m + 1 = sigma (m div 2 ^ multiplicity 2 m)", "have \"prime ?A\""], ["proof (prove)\nusing this:\n  0 < m div 2 ^ multiplicity 2 m\n  m div 2 ^ multiplicity 2 m + 1 = sigma (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. prime (m div 2 ^ multiplicity 2 m)", "by (simp add: prime_iff_sigma)"], ["proof (state)\nthis:\n  prime (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. m = 2 ^ ?n * (2 ^ (?n + 1) - 1) \\<and> prime (2 ^ (?n + 1) - 1)", "with mdef adef"], ["proof (chain)\npicking this:\n  m = 2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m) \\<and>\n  coprime 2 (m div 2 ^ multiplicity 2 m)\n  m div 2 ^ multiplicity 2 m = 2 ^ (multiplicity 2 m + 1) - 1\n  prime (m div 2 ^ multiplicity 2 m)", "show \"m = 2^?n * ?np \\<and> prime ?np\""], ["proof (prove)\nusing this:\n  m = 2 ^ multiplicity 2 m * (m div 2 ^ multiplicity 2 m) \\<and>\n  coprime 2 (m div 2 ^ multiplicity 2 m)\n  m div 2 ^ multiplicity 2 m = 2 ^ (multiplicity 2 m + 1) - 1\n  prime (m div 2 ^ multiplicity 2 m)\n\ngoal (1 subgoal):\n 1. m = 2 ^ multiplicity 2 m * (2 ^ (multiplicity 2 m + 1) - 1) \\<and>\n    prime (2 ^ (multiplicity 2 m + 1) - 1)", "by simp"], ["proof (state)\nthis:\n  m = 2 ^ multiplicity 2 m * (2 ^ (multiplicity 2 m + 1) - 1) \\<and>\n  prime (2 ^ (multiplicity 2 m + 1) - 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem Euclid_book9_prop36:\n  assumes p: \"prime (2^(n+1) - (1::nat))\"\n  shows \"perfect (2 ^ n * (2 ^ (n + 1) - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perfect (2 ^ n * (2 ^ (n + 1) - 1))", "unfolding perfect_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 2 ^ n * (2 ^ (n + 1) - 1) \\<and>\n    2 * (2 ^ n * (2 ^ (n + 1) - 1)) = sigma (2 ^ n * (2 ^ (n + 1) - 1))", "proof (intro conjI; simp)"], ["proof (state)\ngoal (2 subgoals):\n 1. Suc 0 < 2 * 2 ^ n\n 2. 2 * (2 ^ n * (2 * 2 ^ n - Suc 0)) = sigma (2 ^ n * (2 * 2 ^ n - Suc 0))", "from assms"], ["proof (chain)\npicking this:\n  prime (2 ^ (n + 1) - 1)", "show \"2 * 2^n > Suc 0\""], ["proof (prove)\nusing this:\n  prime (2 ^ (n + 1) - 1)\n\ngoal (1 subgoal):\n 1. Suc 0 < 2 * 2 ^ n", "by (auto simp add: prime_nat_iff)"], ["proof (state)\nthis:\n  Suc 0 < 2 * 2 ^ n\n\ngoal (1 subgoal):\n 1. 2 * (2 ^ n * (2 * 2 ^ n - Suc 0)) = sigma (2 ^ n * (2 * 2 ^ n - Suc 0))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 * (2 ^ n * (2 * 2 ^ n - Suc 0)) = sigma (2 ^ n * (2 * 2 ^ n - Suc 0))", "have \"2 \\<noteq> ((2::nat)^(n+1) - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<noteq> 2 ^ (n + 1) - 1", "by simp arith"], ["proof (state)\nthis:\n  2 \\<noteq> 2 ^ (n + 1) - 1\n\ngoal (1 subgoal):\n 1. 2 * (2 ^ n * (2 * 2 ^ n - Suc 0)) = sigma (2 ^ n * (2 * 2 ^ n - Suc 0))", "then"], ["proof (chain)\npicking this:\n  2 \\<noteq> 2 ^ (n + 1) - 1", "have \"coprime (2::nat) (2^(n+1) - 1)\""], ["proof (prove)\nusing this:\n  2 \\<noteq> 2 ^ (n + 1) - 1\n\ngoal (1 subgoal):\n 1. coprime 2 (2 ^ (n + 1) - 1)", "by (metis p primes_coprime_nat two_is_prime_nat)"], ["proof (state)\nthis:\n  coprime 2 (2 ^ (n + 1) - 1)\n\ngoal (1 subgoal):\n 1. 2 * (2 ^ n * (2 * 2 ^ n - Suc 0)) = sigma (2 ^ n * (2 * 2 ^ n - Suc 0))", "moreover"], ["proof (state)\nthis:\n  coprime 2 (2 ^ (n + 1) - 1)\n\ngoal (1 subgoal):\n 1. 2 * (2 ^ n * (2 * 2 ^ n - Suc 0)) = sigma (2 ^ n * (2 * 2 ^ n - Suc 0))", "with p"], ["proof (chain)\npicking this:\n  prime (2 ^ (n + 1) - 1)\n  coprime 2 (2 ^ (n + 1) - 1)", "have \"2^(n+1) - 1 > (0::nat)\""], ["proof (prove)\nusing this:\n  prime (2 ^ (n + 1) - 1)\n  coprime 2 (2 ^ (n + 1) - 1)\n\ngoal (1 subgoal):\n 1. 0 < 2 ^ (n + 1) - 1", "by (auto simp add: prime_nat_iff)"], ["proof (state)\nthis:\n  0 < 2 ^ (n + 1) - 1\n\ngoal (1 subgoal):\n 1. 2 * (2 ^ n * (2 * 2 ^ n - Suc 0)) = sigma (2 ^ n * (2 * 2 ^ n - Suc 0))", "ultimately"], ["proof (chain)\npicking this:\n  coprime 2 (2 ^ (n + 1) - 1)\n  0 < 2 ^ (n + 1) - 1", "have  \"sigma (2^n*(2^(n+1) - 1)) = (sigma(2^n))*(sigma(2^(n+1) - 1))\""], ["proof (prove)\nusing this:\n  coprime 2 (2 ^ (n + 1) - 1)\n  0 < 2 ^ (n + 1) - 1\n\ngoal (1 subgoal):\n 1. sigma (2 ^ n * (2 ^ (n + 1) - 1)) =\n    sigma (2 ^ n) * sigma (2 ^ (n + 1) - 1)", "by (metis sigma_semimultiplicative two_is_prime_nat)"], ["proof (state)\nthis:\n  sigma (2 ^ n * (2 ^ (n + 1) - 1)) =\n  sigma (2 ^ n) * sigma (2 ^ (n + 1) - 1)\n\ngoal (1 subgoal):\n 1. 2 * (2 ^ n * (2 * 2 ^ n - Suc 0)) = sigma (2 ^ n * (2 * 2 ^ n - Suc 0))", "also"], ["proof (state)\nthis:\n  sigma (2 ^ n * (2 ^ (n + 1) - 1)) =\n  sigma (2 ^ n) * sigma (2 ^ (n + 1) - 1)\n\ngoal (1 subgoal):\n 1. 2 * (2 ^ n * (2 * 2 ^ n - Suc 0)) = sigma (2 ^ n * (2 * 2 ^ n - Suc 0))", "from assms"], ["proof (chain)\npicking this:\n  prime (2 ^ (n + 1) - 1)", "have \"... = (sigma(2^(n)))*(2^(n+1))\""], ["proof (prove)\nusing this:\n  prime (2 ^ (n + 1) - 1)\n\ngoal (1 subgoal):\n 1. sigma (2 ^ n) * sigma (2 ^ (n + 1) - 1) = sigma (2 ^ n) * 2 ^ (n + 1)", "by (auto simp add: prime_imp_sigma)"], ["proof (state)\nthis:\n  sigma (2 ^ n) * sigma (2 ^ (n + 1) - 1) = sigma (2 ^ n) * 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. 2 * (2 ^ n * (2 * 2 ^ n - Suc 0)) = sigma (2 ^ n * (2 * 2 ^ n - Suc 0))", "also"], ["proof (state)\nthis:\n  sigma (2 ^ n) * sigma (2 ^ (n + 1) - 1) = sigma (2 ^ n) * 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. 2 * (2 ^ n * (2 * 2 ^ n - Suc 0)) = sigma (2 ^ n * (2 * 2 ^ n - Suc 0))", "have \"... = (2^(n+1) - 1)*(2^(n+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma (2 ^ n) * 2 ^ (n + 1) = (2 ^ (n + 1) - 1) * 2 ^ (n + 1)", "by(simp add: sigma_prime_power_two)"], ["proof (state)\nthis:\n  sigma (2 ^ n) * 2 ^ (n + 1) = (2 ^ (n + 1) - 1) * 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. 2 * (2 ^ n * (2 * 2 ^ n - Suc 0)) = sigma (2 ^ n * (2 * 2 ^ n - Suc 0))", "finally"], ["proof (chain)\npicking this:\n  sigma (2 ^ n * (2 ^ (n + 1) - 1)) = (2 ^ (n + 1) - 1) * 2 ^ (n + 1)", "show \"2*(2^n * (2*2^n - Suc 0)) = sigma(2^n*(2*2^n - Suc 0))\""], ["proof (prove)\nusing this:\n  sigma (2 ^ n * (2 ^ (n + 1) - 1)) = (2 ^ (n + 1) - 1) * 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. 2 * (2 ^ n * (2 * 2 ^ n - Suc 0)) = sigma (2 ^ n * (2 * 2 ^ n - Suc 0))", "by auto"], ["proof (state)\nthis:\n  2 * (2 ^ n * (2 * 2 ^ n - Suc 0)) = sigma (2 ^ n * (2 * 2 ^ n - Suc 0))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}