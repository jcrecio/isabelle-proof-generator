{"file_name": "/home/qj213/afp-2021-10-22/thys/Akra_Bazzi/Akra_Bazzi_Library.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Akra_Bazzi", "problem_names": ["lemma ln_mono: \"0 < x \\<Longrightarrow> 0 < y \\<Longrightarrow> x \\<le> y \\<Longrightarrow> ln (x::real) \\<le> ln y\"", "lemma ln_mono_strict: \"0 < x \\<Longrightarrow> 0 < y \\<Longrightarrow> x < y \\<Longrightarrow> ln (x::real) < ln y\"", "lemma sum_pos':\n  assumes \"finite I\"\n  assumes \"\\<exists>x\\<in>I. f x > (0 :: _ :: linordered_ab_group_add)\"\n  assumes \"\\<And>x. x \\<in> I \\<Longrightarrow> f x \\<ge> 0\"\n  shows   \"sum f I > 0\"", "lemma min_mult_left:\n  assumes \"(x::real) > 0\"\n  shows   \"x * min y z = min (x*y) (x*z)\"", "lemma max_mult_left:\n  assumes \"(x::real) > 0\"\n  shows   \"x * max y z = max (x*y) (x*z)\"", "lemma DERIV_nonneg_imp_mono:\n  assumes \"\\<And>t. t\\<in>{x..y} \\<Longrightarrow> (f has_field_derivative f' t) (at t)\"\n  assumes \"\\<And>t. t\\<in>{x..y} \\<Longrightarrow> f' t \\<ge> 0\"\n  assumes \"(x::real) \\<le> y\"\n  shows   \"(f x :: real) \\<le> f y\"", "lemma eventually_conjE: \"eventually (\\<lambda>x. P x \\<and> Q x) F \\<Longrightarrow> (eventually P F \\<Longrightarrow> eventually Q F \\<Longrightarrow> R) \\<Longrightarrow> R\"", "lemma real_natfloor_nat: \"x \\<in> \\<nat> \\<Longrightarrow> real (nat \\<lfloor>x\\<rfloor>) = x\"", "lemma eventually_natfloor:\n  assumes \"eventually P (at_top :: nat filter)\"\n  shows   \"eventually (\\<lambda>x. P (nat \\<lfloor>x\\<rfloor>)) (at_top :: real filter)\"", "lemma tendsto_0_smallo_1: \"f \\<in> o(\\<lambda>x. 1 :: real) \\<Longrightarrow> (f \\<longlongrightarrow> 0) at_top\"", "lemma smallo_1_tendsto_0: \"(f \\<longlongrightarrow> 0) at_top \\<Longrightarrow> f \\<in> o(\\<lambda>x. 1 :: real)\"", "lemma filterlim_at_top_smallomega_1: \n  assumes \"f \\<in> \\<omega>[F](\\<lambda>x. 1 :: real)\" \"eventually (\\<lambda>x. f x > 0) F\"\n  shows   \"filterlim f at_top F\"", "lemma smallo_imp_abs_less_real:\n  assumes \"f \\<in> o[F](g)\" \"eventually (\\<lambda>x. g x > (0::real)) F\"\n  shows   \"eventually (\\<lambda>x. \\<bar>f x\\<bar> < g x) F\"", "lemma smallo_imp_less_real:\n  assumes \"f \\<in> o[F](g)\" \"eventually (\\<lambda>x. g x > (0::real)) F\"\n  shows   \"eventually (\\<lambda>x. f x < g x) F\"", "lemma smallo_imp_le_real: \n  assumes \"f \\<in> o[F](g)\" \"eventually (\\<lambda>x. g x \\<ge> (0::real)) F\"\n  shows   \"eventually (\\<lambda>x. f x \\<le> g x) F\"", "lemma filterlim_at_right: \n  \"filterlim f (at_right a) F \\<longleftrightarrow> eventually (\\<lambda>x. f x > a) F \\<and> filterlim f (nhds a) F\"", "lemma one_plus_x_powr_approx_ex:\n  assumes x: \"abs (x::real) \\<le> 1/2\"\n  obtains t where \"abs t < 1/2\" \"(1 + x) powr p = \n    1 + p * x + p * (p - 1) * (1 + t) powr (p - 2) / 2 * x ^ 2\"", "lemma powr_lower_bound: \"\\<lbrakk>(l::real) > 0; l \\<le> x; x \\<le> u\\<rbrakk> \\<Longrightarrow> min (l powr z) (u powr z) \\<le> x powr z\"", "lemma powr_upper_bound: \"\\<lbrakk>(l::real) > 0; l \\<le> x; x \\<le> u\\<rbrakk> \\<Longrightarrow> max (l powr z) (u powr z) \\<ge> x powr z\"", "lemma one_plus_x_powr_Taylor2:\n  obtains k where \"\\<And>x. abs (x::real) \\<le> 1/2 \\<Longrightarrow> abs ((1 + x) powr p - 1 - p*x) \\<le> k*x^2\"", "lemma one_plus_x_powr_Taylor2_bigo:\n  assumes lim: \"(f \\<longlongrightarrow> 0) F\"\n  shows   \"(\\<lambda>x. (1 + f x) powr (p::real) - 1 - p * f x) \\<in> O[F](\\<lambda>x. f x ^ 2)\"", "lemma one_plus_x_powr_Taylor1_bigo:\n  assumes lim: \"(f \\<longlongrightarrow> 0) F\"\n  shows   \"(\\<lambda>x. (1 + f x) powr (p::real) - 1) \\<in> O[F](\\<lambda>x. f x)\"", "lemma x_times_x_minus_1_nonneg: \"x \\<le> 0 \\<or> x \\<ge> 1 \\<Longrightarrow> (x::_::linordered_idom) * (x - 1) \\<ge> 0\"", "lemma x_times_x_minus_1_nonpos: \"x \\<ge> 0 \\<Longrightarrow> x \\<le> 1 \\<Longrightarrow> (x::_::linordered_idom) * (x - 1) \\<le> 0\"", "lemma powr_mono':\n  assumes \"(x::real) > 0\" \"x \\<le> 1\" \"a \\<le> b\"\n  shows   \"x powr b \\<le> x powr a\"", "lemma powr_less_mono':\n  assumes \"(x::real) > 0\" \"x < 1\" \"a < b\"\n  shows   \"x powr b < x powr a\"", "lemma real_powr_at_bot:\n  assumes \"(a::real) > 1\"\n  shows   \"((\\<lambda>x. a powr x) \\<longlongrightarrow> 0) at_bot\"", "lemma real_powr_at_bot_neg:\n  assumes \"(a::real) > 0\" \"a < 1\"\n  shows   \"filterlim (\\<lambda>x. a powr x) at_top at_bot\"", "lemma real_powr_at_top_neg: \n  assumes \"(a::real) > 0\" \"a < 1\"\n  shows   \"((\\<lambda>x. a powr x) \\<longlongrightarrow> 0) at_top\"", "lemma eventually_nat_real:\n  assumes \"eventually P (at_top :: real filter)\"\n  shows   \"eventually (\\<lambda>x. P (real x)) (at_top :: nat filter)\""], "translations": [["", "lemma ln_mono: \"0 < x \\<Longrightarrow> 0 < y \\<Longrightarrow> x \\<le> y \\<Longrightarrow> ln (x::real) \\<le> ln y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < x; 0 < y; x \\<le> y\\<rbrakk>\n    \\<Longrightarrow> ln x \\<le> ln y", "by (subst ln_le_cancel_iff) simp_all"], ["", "lemma ln_mono_strict: \"0 < x \\<Longrightarrow> 0 < y \\<Longrightarrow> x < y \\<Longrightarrow> ln (x::real) < ln y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < x; 0 < y; x < y\\<rbrakk> \\<Longrightarrow> ln x < ln y", "by (subst ln_less_cancel_iff) simp_all"], ["", "declare DERIV_powr[THEN DERIV_chain2, derivative_intros]"], ["", "lemma sum_pos':\n  assumes \"finite I\"\n  assumes \"\\<exists>x\\<in>I. f x > (0 :: _ :: linordered_ab_group_add)\"\n  assumes \"\\<And>x. x \\<in> I \\<Longrightarrow> f x \\<ge> 0\"\n  shows   \"sum f I > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'b) < sum f I", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (0::'b) < sum f I", "from assms(2)"], ["proof (chain)\npicking this:\n  \\<exists>x\\<in>I. (0::'b) < f x", "guess x"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>I. (0::'b) < f x\n\ngoal (1 subgoal):\n 1. thesis", "by (elim bexE)"], ["proof (state)\nthis:\n  x \\<in> I\n  (0::'b) < f x\n\ngoal (1 subgoal):\n 1. (0::'b) < sum f I", "note x = this"], ["proof (state)\nthis:\n  x \\<in> I\n  (0::'b) < f x\n\ngoal (1 subgoal):\n 1. (0::'b) < sum f I", "from x"], ["proof (chain)\npicking this:\n  x \\<in> I\n  (0::'b) < f x", "have \"I = insert x I\""], ["proof (prove)\nusing this:\n  x \\<in> I\n  (0::'b) < f x\n\ngoal (1 subgoal):\n 1. I = insert x I", "by blast"], ["proof (state)\nthis:\n  I = insert x I\n\ngoal (1 subgoal):\n 1. (0::'b) < sum f I", "also"], ["proof (state)\nthis:\n  I = insert x I\n\ngoal (1 subgoal):\n 1. (0::'b) < sum f I", "from assms(1)"], ["proof (chain)\npicking this:\n  finite I", "have \"sum f ... = f x + sum f (I - {x})\""], ["proof (prove)\nusing this:\n  finite I\n\ngoal (1 subgoal):\n 1. sum f (insert x I) = f x + sum f (I - {x})", "by (rule sum.insert_remove)"], ["proof (state)\nthis:\n  sum f (insert x I) = f x + sum f (I - {x})\n\ngoal (1 subgoal):\n 1. (0::'b) < sum f I", "also"], ["proof (state)\nthis:\n  sum f (insert x I) = f x + sum f (I - {x})\n\ngoal (1 subgoal):\n 1. (0::'b) < sum f I", "from x assms"], ["proof (chain)\npicking this:\n  x \\<in> I\n  (0::'b) < f x\n  finite I\n  \\<exists>x\\<in>I. (0::'b) < f x\n  ?x \\<in> I \\<Longrightarrow> (0::'b) \\<le> f ?x", "have \"... > 0\""], ["proof (prove)\nusing this:\n  x \\<in> I\n  (0::'b) < f x\n  finite I\n  \\<exists>x\\<in>I. (0::'b) < f x\n  ?x \\<in> I \\<Longrightarrow> (0::'b) \\<le> f ?x\n\ngoal (1 subgoal):\n 1. (0::'b) < f x + sum f (I - {x})", "by (intro add_pos_nonneg sum_nonneg) simp_all"], ["proof (state)\nthis:\n  (0::'b) < f x + sum f (I - {x})\n\ngoal (1 subgoal):\n 1. (0::'b) < sum f I", "finally"], ["proof (chain)\npicking this:\n  (0::'b) < sum f I", "show ?thesis"], ["proof (prove)\nusing this:\n  (0::'b) < sum f I\n\ngoal (1 subgoal):\n 1. (0::'b) < sum f I", "."], ["proof (state)\nthis:\n  (0::'b) < sum f I\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma min_mult_left:\n  assumes \"(x::real) > 0\"\n  shows   \"x * min y z = min (x*y) (x*z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * min y z = min (x * y) (x * z)", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. x * min y z = min (x * y) (x * z)", "by (auto simp add: min_def algebra_simps)"], ["", "lemma max_mult_left:\n  assumes \"(x::real) > 0\"\n  shows   \"x * max y z = max (x*y) (x*z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * max y z = max (x * y) (x * z)", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. x * max y z = max (x * y) (x * z)", "by (auto simp add: max_def algebra_simps)"], ["", "lemma DERIV_nonneg_imp_mono:\n  assumes \"\\<And>t. t\\<in>{x..y} \\<Longrightarrow> (f has_field_derivative f' t) (at t)\"\n  assumes \"\\<And>t. t\\<in>{x..y} \\<Longrightarrow> f' t \\<ge> 0\"\n  assumes \"(x::real) \\<le> y\"\n  shows   \"(f x :: real) \\<le> f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<le> f y", "proof (cases x y rule: linorder_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> f x \\<le> f y\n 2. x = y \\<Longrightarrow> f x \\<le> f y\n 3. y < x \\<Longrightarrow> f x \\<le> f y", "assume xy: \"x < y\""], ["proof (state)\nthis:\n  x < y\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> f x \\<le> f y\n 2. x = y \\<Longrightarrow> f x \\<le> f y\n 3. y < x \\<Longrightarrow> f x \\<le> f y", "hence \"\\<exists>z. x < z \\<and> z < y \\<and> f y - f x = (y - x) * f' z\""], ["proof (prove)\nusing this:\n  x < y\n\ngoal (1 subgoal):\n 1. \\<exists>z>x. z < y \\<and> f y - f x = (y - x) * f' z", "by (rule MVT2) (insert assms(1), simp)"], ["proof (state)\nthis:\n  \\<exists>z>x. z < y \\<and> f y - f x = (y - x) * f' z\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> f x \\<le> f y\n 2. x = y \\<Longrightarrow> f x \\<le> f y\n 3. y < x \\<Longrightarrow> f x \\<le> f y", "then"], ["proof (chain)\npicking this:\n  \\<exists>z>x. z < y \\<and> f y - f x = (y - x) * f' z", "guess z"], ["proof (prove)\nusing this:\n  \\<exists>z>x. z < y \\<and> f y - f x = (y - x) * f' z\n\ngoal (1 subgoal):\n 1. thesis", "by (elim exE conjE)"], ["proof (state)\nthis:\n  x < z\n  z < y\n  f y - f x = (y - x) * f' z\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> f x \\<le> f y\n 2. x = y \\<Longrightarrow> f x \\<le> f y\n 3. y < x \\<Longrightarrow> f x \\<le> f y", "note z = this"], ["proof (state)\nthis:\n  x < z\n  z < y\n  f y - f x = (y - x) * f' z\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> f x \\<le> f y\n 2. x = y \\<Longrightarrow> f x \\<le> f y\n 3. y < x \\<Longrightarrow> f x \\<le> f y", "from z(1,2) assms(2) xy"], ["proof (chain)\npicking this:\n  x < z\n  z < y\n  ?t \\<in> {x..y} \\<Longrightarrow> 0 \\<le> f' ?t\n  x < y", "have \"0 \\<le> (y - x) * f' z\""], ["proof (prove)\nusing this:\n  x < z\n  z < y\n  ?t \\<in> {x..y} \\<Longrightarrow> 0 \\<le> f' ?t\n  x < y\n\ngoal (1 subgoal):\n 1. 0 \\<le> (y - x) * f' z", "by (intro mult_nonneg_nonneg) simp_all"], ["proof (state)\nthis:\n  0 \\<le> (y - x) * f' z\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> f x \\<le> f y\n 2. x = y \\<Longrightarrow> f x \\<le> f y\n 3. y < x \\<Longrightarrow> f x \\<le> f y", "also"], ["proof (state)\nthis:\n  0 \\<le> (y - x) * f' z\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> f x \\<le> f y\n 2. x = y \\<Longrightarrow> f x \\<le> f y\n 3. y < x \\<Longrightarrow> f x \\<le> f y", "note z(3)[symmetric]"], ["proof (state)\nthis:\n  (y - x) * f' z = f y - f x\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> f x \\<le> f y\n 2. x = y \\<Longrightarrow> f x \\<le> f y\n 3. y < x \\<Longrightarrow> f x \\<le> f y", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> f y - f x", "show \"f x \\<le> f y\""], ["proof (prove)\nusing this:\n  0 \\<le> f y - f x\n\ngoal (1 subgoal):\n 1. f x \\<le> f y", "by simp"], ["proof (state)\nthis:\n  f x \\<le> f y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> f x \\<le> f y\n 2. y < x \\<Longrightarrow> f x \\<le> f y", "qed (insert assms(3), simp_all)"], ["", "lemma eventually_conjE: \"eventually (\\<lambda>x. P x \\<and> Q x) F \\<Longrightarrow> (eventually P F \\<Longrightarrow> eventually Q F \\<Longrightarrow> R) \\<Longrightarrow> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>\\<^sub>F x in F. P x \\<and> Q x;\n     \\<lbrakk>eventually P F; eventually Q F\\<rbrakk>\n     \\<Longrightarrow> R\\<rbrakk>\n    \\<Longrightarrow> R", "apply (frule eventually_rev_mp[of _ _ P], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>\\<^sub>F x in F. P x \\<and> Q x;\n     \\<lbrakk>eventually P F; eventually Q F\\<rbrakk> \\<Longrightarrow> R;\n     eventually P F\\<rbrakk>\n    \\<Longrightarrow> R", "apply (drule eventually_rev_mp[of _ _ Q], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>eventually P F; eventually Q F\\<rbrakk>\n             \\<Longrightarrow> R;\n     eventually P F; eventually Q F\\<rbrakk>\n    \\<Longrightarrow> R", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma real_natfloor_nat: \"x \\<in> \\<nat> \\<Longrightarrow> real (nat \\<lfloor>x\\<rfloor>) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> \\<nat> \\<Longrightarrow> real (nat \\<lfloor>x\\<rfloor>) = x", "by (elim Nats_cases) simp"], ["", "lemma eventually_natfloor:\n  assumes \"eventually P (at_top :: nat filter)\"\n  shows   \"eventually (\\<lambda>x. P (nat \\<lfloor>x\\<rfloor>)) (at_top :: real filter)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. P (nat \\<lfloor>x\\<rfloor>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. P (nat \\<lfloor>x\\<rfloor>)", "from assms"], ["proof (chain)\npicking this:\n  eventually P sequentially", "obtain N where N: \"\\<And>n. n \\<ge> N \\<Longrightarrow> P n\""], ["proof (prove)\nusing this:\n  eventually P sequentially\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        (\\<And>n. N \\<le> n \\<Longrightarrow> P n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using eventually_at_top_linorder"], ["proof (prove)\nusing this:\n  eventually P sequentially\n  eventually ?P at_top = (\\<exists>N. \\<forall>n\\<ge>N. ?P n)\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        (\\<And>n. N \\<le> n \\<Longrightarrow> P n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  N \\<le> ?n \\<Longrightarrow> P ?n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. P (nat \\<lfloor>x\\<rfloor>)", "have \"\\<forall>n\\<ge>real N. P (nat \\<lfloor>n\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n\\<ge>real N. P (nat \\<lfloor>n\\<rfloor>)", "by (intro allI impI N le_nat_floor) simp_all"], ["proof (state)\nthis:\n  \\<forall>n\\<ge>real N. P (nat \\<lfloor>n\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. P (nat \\<lfloor>x\\<rfloor>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n\\<ge>real N. P (nat \\<lfloor>n\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. P (nat \\<lfloor>x\\<rfloor>)", "using eventually_at_top_linorder"], ["proof (prove)\nusing this:\n  \\<forall>n\\<ge>real N. P (nat \\<lfloor>n\\<rfloor>)\n  eventually ?P at_top = (\\<exists>N. \\<forall>n\\<ge>N. ?P n)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. P (nat \\<lfloor>x\\<rfloor>)", "by blast"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. P (nat \\<lfloor>x\\<rfloor>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tendsto_0_smallo_1: \"f \\<in> o(\\<lambda>x. 1 :: real) \\<Longrightarrow> (f \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> o(\\<lambda>x. 1) \\<Longrightarrow>\n    (f \\<longlongrightarrow> 0) at_top", "by (drule smalloD_tendsto) simp"], ["", "lemma smallo_1_tendsto_0: \"(f \\<longlongrightarrow> 0) at_top \\<Longrightarrow> f \\<in> o(\\<lambda>x. 1 :: real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> 0) at_top \\<Longrightarrow>\n    f \\<in> o(\\<lambda>x. 1)", "by (rule smalloI_tendsto) simp_all"], ["", "lemma filterlim_at_top_smallomega_1: \n  assumes \"f \\<in> \\<omega>[F](\\<lambda>x. 1 :: real)\" \"eventually (\\<lambda>x. f x > 0) F\"\n  shows   \"filterlim f at_top F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim f at_top F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. filterlim f at_top F", "from assms"], ["proof (chain)\npicking this:\n  f \\<in> \\<omega>[F](\\<lambda>x. 1)\n  \\<forall>\\<^sub>F x in F. 0 < f x", "have \"filterlim (\\<lambda>x. norm (f x / 1)) at_top F\""], ["proof (prove)\nusing this:\n  f \\<in> \\<omega>[F](\\<lambda>x. 1)\n  \\<forall>\\<^sub>F x in F. 0 < f x\n\ngoal (1 subgoal):\n 1. LIM x F. norm (f x / 1) :> at_top", "by (intro smallomegaD_filterlim_at_top_norm) (auto elim: eventually_mono)"], ["proof (state)\nthis:\n  LIM x F. norm (f x / 1) :> at_top\n\ngoal (1 subgoal):\n 1. filterlim f at_top F", "also"], ["proof (state)\nthis:\n  LIM x F. norm (f x / 1) :> at_top\n\ngoal (1 subgoal):\n 1. filterlim f at_top F", "have \"?this \\<longleftrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (LIM x F. norm (f x / 1) :> at_top) = filterlim f at_top F", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> \\<omega>[F](\\<lambda>x. 1)\n  \\<forall>\\<^sub>F x in F. 0 < f x\n\ngoal (1 subgoal):\n 1. (LIM x F. norm (f x / 1) :> at_top) = filterlim f at_top F", "by (intro filterlim_cong refl) (auto elim!: eventually_mono)"], ["proof (state)\nthis:\n  (LIM x F. norm (f x / 1) :> at_top) = filterlim f at_top F\n\ngoal (1 subgoal):\n 1. filterlim f at_top F", "finally"], ["proof (chain)\npicking this:\n  filterlim f at_top F", "show ?thesis"], ["proof (prove)\nusing this:\n  filterlim f at_top F\n\ngoal (1 subgoal):\n 1. filterlim f at_top F", "."], ["proof (state)\nthis:\n  filterlim f at_top F\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smallo_imp_abs_less_real:\n  assumes \"f \\<in> o[F](g)\" \"eventually (\\<lambda>x. g x > (0::real)) F\"\n  shows   \"eventually (\\<lambda>x. \\<bar>f x\\<bar> < g x) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. \\<bar>f x\\<bar> < g x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. \\<bar>f x\\<bar> < g x", "have \"1/2 > (0::real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 1 / 2", "by simp"], ["proof (state)\nthis:\n  0 < 1 / 2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. \\<bar>f x\\<bar> < g x", "from landau_o.smallD[OF assms(1) this] assms(2)"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in F. norm (f x) \\<le> 1 / 2 * norm (g x)\n  \\<forall>\\<^sub>F x in F. 0 < g x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in F. norm (f x) \\<le> 1 / 2 * norm (g x)\n  \\<forall>\\<^sub>F x in F. 0 < g x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. \\<bar>f x\\<bar> < g x", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in F. \\<bar>f x\\<bar> < g x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smallo_imp_less_real:\n  assumes \"f \\<in> o[F](g)\" \"eventually (\\<lambda>x. g x > (0::real)) F\"\n  shows   \"eventually (\\<lambda>x. f x < g x) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. f x < g x", "using smallo_imp_abs_less_real[OF assms]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in F. \\<bar>f x\\<bar> < g x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. f x < g x", "by eventually_elim simp"], ["", "lemma smallo_imp_le_real: \n  assumes \"f \\<in> o[F](g)\" \"eventually (\\<lambda>x. g x \\<ge> (0::real)) F\"\n  shows   \"eventually (\\<lambda>x. f x \\<le> g x) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. f x \\<le> g x", "using landau_o.smallD[OF assms(1) zero_less_one] assms(2)"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in F. norm (f x) \\<le> 1 * norm (g x)\n  \\<forall>\\<^sub>F x in F. 0 \\<le> g x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. f x \\<le> g x", "by eventually_elim simp"], ["", "(* TODO MOVE *)"], ["", "lemma filterlim_at_right: \n  \"filterlim f (at_right a) F \\<longleftrightarrow> eventually (\\<lambda>x. f x > a) F \\<and> filterlim f (nhds a) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim f (at_right a) F =\n    ((\\<forall>\\<^sub>F x in F. a < f x) \\<and>\n     (f \\<longlongrightarrow> a) F)", "by (subst filterlim_at) (auto elim!: eventually_mono)"], ["", "(* END TODO *)"], ["", "lemma one_plus_x_powr_approx_ex:\n  assumes x: \"abs (x::real) \\<le> 1/2\"\n  obtains t where \"abs t < 1/2\" \"(1 + x) powr p = \n    1 + p * x + p * (p - 1) * (1 + t) powr (p - 2) / 2 * x ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n         (1 + x) powr p =\n         1 + p * x +\n         p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (cases \"x = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume x': \"x \\<noteq> 0\""], ["proof (state)\nthis:\n  x \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "let ?f = \"\\<lambda>x. (1 + x) powr p\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "let ?f' = \"\\<lambda>x. p * (1 + x) powr (p - 1)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "let ?f'' = \"\\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "let ?fs = \"(!) [?f, ?f', ?f'']\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "have A: \"\\<forall>m t. m < 2 \\<and> t \\<ge> -0.5 \\<and> t \\<le> 0.5 \\<longrightarrow> (?fs m has_real_derivative ?fs (Suc m) t) (at t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m t.\n       m < 2 \\<and>\n       - (5 / 10) \\<le> t \\<and> t \\<le> 5 / 10 \\<longrightarrow>\n       ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n         \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n        m has_real_derivative\n        ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n          \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n         Suc m)\n         t)\n        (at t)", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m t.\n       \\<lbrakk>m < 2; - (5 / 10) \\<le> t; t \\<le> 5 / 10\\<rbrakk>\n       \\<Longrightarrow> ([\\<lambda>x. (1 + x) powr p,\n                           \\<lambda>x. p * (1 + x) powr (p - 1),\n                           \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n                          m has_real_derivative\n                          ([\\<lambda>x. (1 + x) powr p,\n                            \\<lambda>x. p * (1 + x) powr (p - 1),\n                            \\<lambda>x.\n                               p * (p - 1) * (1 + x) powr (p - 2)] !\n                           Suc m)\n                           t)\n                          (at t)", "fix m :: nat and t :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m t.\n       \\<lbrakk>m < 2; - (5 / 10) \\<le> t; t \\<le> 5 / 10\\<rbrakk>\n       \\<Longrightarrow> ([\\<lambda>x. (1 + x) powr p,\n                           \\<lambda>x. p * (1 + x) powr (p - 1),\n                           \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n                          m has_real_derivative\n                          ([\\<lambda>x. (1 + x) powr p,\n                            \\<lambda>x. p * (1 + x) powr (p - 1),\n                            \\<lambda>x.\n                               p * (p - 1) * (1 + x) powr (p - 2)] !\n                           Suc m)\n                           t)\n                          (at t)", "assume m: \"m < 2\" and t: \"t \\<ge> -0.5\" \"t \\<le> 0.5\""], ["proof (state)\nthis:\n  m < 2\n  - (5 / 10) \\<le> t\n  t \\<le> 5 / 10\n\ngoal (1 subgoal):\n 1. \\<And>m t.\n       \\<lbrakk>m < 2; - (5 / 10) \\<le> t; t \\<le> 5 / 10\\<rbrakk>\n       \\<Longrightarrow> ([\\<lambda>x. (1 + x) powr p,\n                           \\<lambda>x. p * (1 + x) powr (p - 1),\n                           \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n                          m has_real_derivative\n                          ([\\<lambda>x. (1 + x) powr p,\n                            \\<lambda>x. p * (1 + x) powr (p - 1),\n                            \\<lambda>x.\n                               p * (p - 1) * (1 + x) powr (p - 2)] !\n                           Suc m)\n                           t)\n                          (at t)", "thus \"(?fs m has_real_derivative ?fs (Suc m) t) (at t)\""], ["proof (prove)\nusing this:\n  m < 2\n  - (5 / 10) \\<le> t\n  t \\<le> 5 / 10\n\ngoal (1 subgoal):\n 1. ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n      \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n     m has_real_derivative\n     ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n       \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n      Suc m)\n      t)\n     (at t)", "using m"], ["proof (prove)\nusing this:\n  m < 2\n  - (5 / 10) \\<le> t\n  t \\<le> 5 / 10\n  m < 2\n\ngoal (1 subgoal):\n 1. ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n      \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n     m has_real_derivative\n     ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n       \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n      Suc m)\n      t)\n     (at t)", "by (cases m) (force intro: derivative_eq_intros algebra_simps)+"], ["proof (state)\nthis:\n  ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n    \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n   m has_real_derivative\n   ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n     \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n    Suc m)\n    t)\n   (at t)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>m t.\n     m < 2 \\<and> - (5 / 10) \\<le> t \\<and> t \\<le> 5 / 10 \\<longrightarrow>\n     ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n       \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n      m has_real_derivative\n      ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n        \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n       Suc m)\n       t)\n      (at t)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"\\<exists>t. (if x < 0 then x < t \\<and> t < 0 else 0 < t \\<and> t < x) \\<and>\n              (1 + x) powr p = (\\<Sum>m<2. ?fs m 0 / (fact m) * (x - 0)^m) + \n              ?fs 2 t / (fact 2) * (x - 0)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       (if x < 0 then x < t \\<and> t < 0 else 0 < t \\<and> t < x) \\<and>\n       (1 + x) powr p =\n       (\\<Sum>m<2.\n           ([\\<lambda>x. (1 + x) powr p,\n             \\<lambda>x. p * (1 + x) powr (p - 1),\n             \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n            m)\n            0 /\n           fact m *\n           (x - 0) ^ m) +\n       ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n         \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n        2)\n        t /\n       fact 2 *\n       (x - 0)\\<^sup>2", "using assms x'"], ["proof (prove)\nusing this:\n  \\<bar>x\\<bar> \\<le> 1 / 2\n  x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       (if x < 0 then x < t \\<and> t < 0 else 0 < t \\<and> t < x) \\<and>\n       (1 + x) powr p =\n       (\\<Sum>m<2.\n           ([\\<lambda>x. (1 + x) powr p,\n             \\<lambda>x. p * (1 + x) powr (p - 1),\n             \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n            m)\n            0 /\n           fact m *\n           (x - 0) ^ m) +\n       ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n         \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n        2)\n        t /\n       fact 2 *\n       (x - 0)\\<^sup>2", "by (intro Taylor[OF _ _ A]) simp_all"], ["proof (state)\nthis:\n  \\<exists>t.\n     (if x < 0 then x < t \\<and> t < 0 else 0 < t \\<and> t < x) \\<and>\n     (1 + x) powr p =\n     (\\<Sum>m<2.\n         ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n           \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n          m)\n          0 /\n         fact m *\n         (x - 0) ^ m) +\n     ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n       \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n      2)\n      t /\n     fact 2 *\n     (x - 0)\\<^sup>2\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>t.\n     (if x < 0 then x < t \\<and> t < 0 else 0 < t \\<and> t < x) \\<and>\n     (1 + x) powr p =\n     (\\<Sum>m<2.\n         ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n           \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n          m)\n          0 /\n         fact m *\n         (x - 0) ^ m) +\n     ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n       \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n      2)\n      t /\n     fact 2 *\n     (x - 0)\\<^sup>2", "guess t"], ["proof (prove)\nusing this:\n  \\<exists>t.\n     (if x < 0 then x < t \\<and> t < 0 else 0 < t \\<and> t < x) \\<and>\n     (1 + x) powr p =\n     (\\<Sum>m<2.\n         ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n           \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n          m)\n          0 /\n         fact m *\n         (x - 0) ^ m) +\n     ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n       \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n      2)\n      t /\n     fact 2 *\n     (x - 0)\\<^sup>2\n\ngoal (1 subgoal):\n 1. thesis", "by (elim exE conjE)"], ["proof (state)\nthis:\n  if x < 0 then x < t \\<and> t < 0 else 0 < t \\<and> t < x\n  (1 + x) powr p =\n  (\\<Sum>m<2.\n      ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n        \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n       m)\n       0 /\n      fact m *\n      (x - 0) ^ m) +\n  ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n    \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n   2)\n   t /\n  fact 2 *\n  (x - 0)\\<^sup>2\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "note t = this"], ["proof (state)\nthis:\n  if x < 0 then x < t \\<and> t < 0 else 0 < t \\<and> t < x\n  (1 + x) powr p =\n  (\\<Sum>m<2.\n      ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n        \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n       m)\n       0 /\n      fact m *\n      (x - 0) ^ m) +\n  ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n    \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n   2)\n   t /\n  fact 2 *\n  (x - 0)\\<^sup>2\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "with assms"], ["proof (chain)\npicking this:\n  \\<bar>x\\<bar> \\<le> 1 / 2\n  if x < 0 then x < t \\<and> t < 0 else 0 < t \\<and> t < x\n  (1 + x) powr p =\n  (\\<Sum>m<2.\n      ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n        \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n       m)\n       0 /\n      fact m *\n      (x - 0) ^ m) +\n  ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n    \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n   2)\n   t /\n  fact 2 *\n  (x - 0)\\<^sup>2", "have \"abs t < 1/2\""], ["proof (prove)\nusing this:\n  \\<bar>x\\<bar> \\<le> 1 / 2\n  if x < 0 then x < t \\<and> t < 0 else 0 < t \\<and> t < x\n  (1 + x) powr p =\n  (\\<Sum>m<2.\n      ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n        \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n       m)\n       0 /\n      fact m *\n      (x - 0) ^ m) +\n  ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n    \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n   2)\n   t /\n  fact 2 *\n  (x - 0)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>t\\<bar> < 1 / 2", "by (auto split: if_split_asm)"], ["proof (state)\nthis:\n  \\<bar>t\\<bar> < 1 / 2\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  \\<bar>t\\<bar> < 1 / 2\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "from t(2)"], ["proof (chain)\npicking this:\n  (1 + x) powr p =\n  (\\<Sum>m<2.\n      ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n        \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n       m)\n       0 /\n      fact m *\n      (x - 0) ^ m) +\n  ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n    \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n   2)\n   t /\n  fact 2 *\n  (x - 0)\\<^sup>2", "have \"(1 + x) powr p = 1 + p * x + p * (p - 1) * (1 + t) powr (p - 2) / 2 * x ^ 2\""], ["proof (prove)\nusing this:\n  (1 + x) powr p =\n  (\\<Sum>m<2.\n      ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n        \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n       m)\n       0 /\n      fact m *\n      (x - 0) ^ m) +\n  ([\\<lambda>x. (1 + x) powr p, \\<lambda>x. p * (1 + x) powr (p - 1),\n    \\<lambda>x. p * (p - 1) * (1 + x) powr (p - 2)] !\n   2)\n   t /\n  fact 2 *\n  (x - 0)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (1 + x) powr p =\n    1 + p * x + p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2", "by (simp add: numeral_2_eq_2 of_nat_Suc)"], ["proof (state)\nthis:\n  (1 + x) powr p =\n  1 + p * x + p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  \\<bar>t\\<bar> < 1 / 2\n  (1 + x) powr p =\n  1 + p * x + p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<bar>t\\<bar> < 1 / 2\n  (1 + x) powr p =\n  1 + p * x + p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\n\ngoal (1 subgoal):\n 1. thesis", "by (rule that)"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume \"x = 0\""], ["proof (state)\nthis:\n  x = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>t.\n                \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n                 (1 + x) powr p =\n                 1 + p * x +\n                 p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "with that[of 0]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<bar>0\\<bar> < 1 / 2;\n   (1 + x) powr p =\n   1 + p * x + p * (p - 1) * (1 + 0) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n  \\<Longrightarrow> thesis\n  x = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<bar>0\\<bar> < 1 / 2;\n   (1 + x) powr p =\n   1 + p * x + p * (p - 1) * (1 + 0) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n  \\<Longrightarrow> thesis\n  x = 0\n\ngoal (1 subgoal):\n 1. thesis", "by simp"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma powr_lower_bound: \"\\<lbrakk>(l::real) > 0; l \\<le> x; x \\<le> u\\<rbrakk> \\<Longrightarrow> min (l powr z) (u powr z) \\<le> x powr z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < l; l \\<le> x; x \\<le> u\\<rbrakk>\n    \\<Longrightarrow> min (l powr z) (u powr z) \\<le> x powr z", "apply (cases \"z \\<ge> 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < l; l \\<le> x; x \\<le> u; 0 \\<le> z\\<rbrakk>\n    \\<Longrightarrow> min (l powr z) (u powr z) \\<le> x powr z\n 2. \\<lbrakk>0 < l; l \\<le> x; x \\<le> u; \\<not> 0 \\<le> z\\<rbrakk>\n    \\<Longrightarrow> min (l powr z) (u powr z) \\<le> x powr z", "apply (rule order.trans[OF min.cobounded1 powr_mono2], simp_all) []"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < l; l \\<le> x; x \\<le> u; \\<not> 0 \\<le> z\\<rbrakk>\n    \\<Longrightarrow> min (l powr z) (u powr z) \\<le> x powr z", "apply (rule order.trans[OF min.cobounded2 powr_mono2'], simp_all) []"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma powr_upper_bound: \"\\<lbrakk>(l::real) > 0; l \\<le> x; x \\<le> u\\<rbrakk> \\<Longrightarrow> max (l powr z) (u powr z) \\<ge> x powr z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < l; l \\<le> x; x \\<le> u\\<rbrakk>\n    \\<Longrightarrow> x powr z \\<le> max (l powr z) (u powr z)", "apply (cases \"z \\<ge> 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < l; l \\<le> x; x \\<le> u; 0 \\<le> z\\<rbrakk>\n    \\<Longrightarrow> x powr z \\<le> max (l powr z) (u powr z)\n 2. \\<lbrakk>0 < l; l \\<le> x; x \\<le> u; \\<not> 0 \\<le> z\\<rbrakk>\n    \\<Longrightarrow> x powr z \\<le> max (l powr z) (u powr z)", "apply (rule order.trans[OF powr_mono2 max.cobounded2], simp_all) []"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < l; l \\<le> x; x \\<le> u; \\<not> 0 \\<le> z\\<rbrakk>\n    \\<Longrightarrow> x powr z \\<le> max (l powr z) (u powr z)", "apply (rule order.trans[OF powr_mono2' max.cobounded1], simp_all) []"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma one_plus_x_powr_Taylor2:\n  obtains k where \"\\<And>x. abs (x::real) \\<le> 1/2 \\<Longrightarrow> abs ((1 + x) powr p - 1 - p*x) \\<le> k*x^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        (\\<And>x.\n            \\<bar>x\\<bar> \\<le> 1 / 2 \\<Longrightarrow>\n            \\<bar>(1 + x) powr p - 1 - p * x\\<bar>\n            \\<le> k * x\\<^sup>2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        (\\<And>x.\n            \\<bar>x\\<bar> \\<le> 1 / 2 \\<Longrightarrow>\n            \\<bar>(1 + x) powr p - 1 - p * x\\<bar>\n            \\<le> k * x\\<^sup>2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "define k where \"k = \\<bar>p*(p - 1)\\<bar> * max ((1/2) powr (p - 2)) ((3/2) powr (p - 2)) / 2\""], ["proof (state)\nthis:\n  k =\n  \\<bar>p * (p - 1)\\<bar> *\n  max ((1 / 2) powr (p - 2)) ((3 / 2) powr (p - 2)) /\n  2\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        (\\<And>x.\n            \\<bar>x\\<bar> \\<le> 1 / 2 \\<Longrightarrow>\n            \\<bar>(1 + x) powr p - 1 - p * x\\<bar>\n            \\<le> k * x\\<^sup>2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (rule that[of k])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<bar>x\\<bar> \\<le> 1 / 2 \\<Longrightarrow>\n       \\<bar>(1 + x) powr p - 1 - p * x\\<bar> \\<le> k * x\\<^sup>2", "fix x :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<bar>x\\<bar> \\<le> 1 / 2 \\<Longrightarrow>\n       \\<bar>(1 + x) powr p - 1 - p * x\\<bar> \\<le> k * x\\<^sup>2", "assume \"abs x \\<le> 1/2\""], ["proof (state)\nthis:\n  \\<bar>x\\<bar> \\<le> 1 / 2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<bar>x\\<bar> \\<le> 1 / 2 \\<Longrightarrow>\n       \\<bar>(1 + x) powr p - 1 - p * x\\<bar> \\<le> k * x\\<^sup>2", "from one_plus_x_powr_approx_ex[OF this, of p]"], ["proof (chain)\npicking this:\n  (\\<And>t.\n      \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n       (1 + x) powr p =\n       1 + p * x +\n       p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "guess t"], ["proof (prove)\nusing this:\n  (\\<And>t.\n      \\<lbrakk>\\<bar>t\\<bar> < 1 / 2;\n       (1 + x) powr p =\n       1 + p * x +\n       p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  \\<bar>t\\<bar> < 1 / 2\n  (1 + x) powr p =\n  1 + p * x + p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<bar>x\\<bar> \\<le> 1 / 2 \\<Longrightarrow>\n       \\<bar>(1 + x) powr p - 1 - p * x\\<bar> \\<le> k * x\\<^sup>2", "note t = this"], ["proof (state)\nthis:\n  \\<bar>t\\<bar> < 1 / 2\n  (1 + x) powr p =\n  1 + p * x + p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<bar>x\\<bar> \\<le> 1 / 2 \\<Longrightarrow>\n       \\<bar>(1 + x) powr p - 1 - p * x\\<bar> \\<le> k * x\\<^sup>2", "from t"], ["proof (chain)\npicking this:\n  \\<bar>t\\<bar> < 1 / 2\n  (1 + x) powr p =\n  1 + p * x + p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2", "have \"abs ((1 + x) powr p - 1 - p*x) = \\<bar>p*(p - 1)\\<bar> * (1 + t) powr (p - 2)/2 * x\\<^sup>2\""], ["proof (prove)\nusing this:\n  \\<bar>t\\<bar> < 1 / 2\n  (1 + x) powr p =\n  1 + p * x + p * (p - 1) * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>(1 + x) powr p - 1 - p * x\\<bar> =\n    \\<bar>p * (p - 1)\\<bar> * (1 + t) powr (p - 2) / 2 * x\\<^sup>2", "by (simp add: abs_mult)"], ["proof (state)\nthis:\n  \\<bar>(1 + x) powr p - 1 - p * x\\<bar> =\n  \\<bar>p * (p - 1)\\<bar> * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<bar>x\\<bar> \\<le> 1 / 2 \\<Longrightarrow>\n       \\<bar>(1 + x) powr p - 1 - p * x\\<bar> \\<le> k * x\\<^sup>2", "also"], ["proof (state)\nthis:\n  \\<bar>(1 + x) powr p - 1 - p * x\\<bar> =\n  \\<bar>p * (p - 1)\\<bar> * (1 + t) powr (p - 2) / 2 * x\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<bar>x\\<bar> \\<le> 1 / 2 \\<Longrightarrow>\n       \\<bar>(1 + x) powr p - 1 - p * x\\<bar> \\<le> k * x\\<^sup>2", "from t(1)"], ["proof (chain)\npicking this:\n  \\<bar>t\\<bar> < 1 / 2", "have \"(1 + t) powr (p - 2) \\<le> max ((1/2) powr (p - 2)) ((3/2) powr (p - 2))\""], ["proof (prove)\nusing this:\n  \\<bar>t\\<bar> < 1 / 2\n\ngoal (1 subgoal):\n 1. (1 + t) powr (p - 2)\n    \\<le> max ((1 / 2) powr (p - 2)) ((3 / 2) powr (p - 2))", "by (intro powr_upper_bound) simp_all"], ["proof (state)\nthis:\n  (1 + t) powr (p - 2)\n  \\<le> max ((1 / 2) powr (p - 2)) ((3 / 2) powr (p - 2))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<bar>x\\<bar> \\<le> 1 / 2 \\<Longrightarrow>\n       \\<bar>(1 + x) powr p - 1 - p * x\\<bar> \\<le> k * x\\<^sup>2", "finally"], ["proof (chain)\npicking this:\n  (\\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      \\<bar>p * (p - 1)\\<bar> * xa / 2 * x\\<^sup>2\n      \\<le> \\<bar>p * (p - 1)\\<bar> * y / 2 * x\\<^sup>2) \\<Longrightarrow>\n  \\<bar>(1 + x) powr p - 1 - p * x\\<bar>\n  \\<le> \\<bar>p * (p - 1)\\<bar> *\n        max ((1 / 2) powr (p - 2)) ((3 / 2) powr (p - 2)) /\n        2 *\n        x\\<^sup>2", "show \"abs ((1 + x) powr p - 1 - p*x) \\<le> k*x^2\""], ["proof (prove)\nusing this:\n  (\\<And>xa y.\n      xa \\<le> y \\<Longrightarrow>\n      \\<bar>p * (p - 1)\\<bar> * xa / 2 * x\\<^sup>2\n      \\<le> \\<bar>p * (p - 1)\\<bar> * y / 2 * x\\<^sup>2) \\<Longrightarrow>\n  \\<bar>(1 + x) powr p - 1 - p * x\\<bar>\n  \\<le> \\<bar>p * (p - 1)\\<bar> *\n        max ((1 / 2) powr (p - 2)) ((3 / 2) powr (p - 2)) /\n        2 *\n        x\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>(1 + x) powr p - 1 - p * x\\<bar> \\<le> k * x\\<^sup>2", "by (simp add: mult_left_mono mult_right_mono k_def)"], ["proof (state)\nthis:\n  \\<bar>(1 + x) powr p - 1 - p * x\\<bar> \\<le> k * x\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma one_plus_x_powr_Taylor2_bigo:\n  assumes lim: \"(f \\<longlongrightarrow> 0) F\"\n  shows   \"(\\<lambda>x. (1 + f x) powr (p::real) - 1 - p * f x) \\<in> O[F](\\<lambda>x. f x ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + f x) powr p - 1 - p * f x)\n    \\<in> O[F](\\<lambda>x. (f x)\\<^sup>2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + f x) powr p - 1 - p * f x)\n    \\<in> O[F](\\<lambda>x. (f x)\\<^sup>2)", "from one_plus_x_powr_Taylor2[of p]"], ["proof (chain)\npicking this:\n  (\\<And>k.\n      (\\<And>x.\n          \\<bar>x\\<bar> \\<le> 1 / 2 \\<Longrightarrow>\n          \\<bar>(1 + x) powr p - 1 - p * x\\<bar>\n          \\<le> k * x\\<^sup>2) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis", "guess k"], ["proof (prove)\nusing this:\n  (\\<And>k.\n      (\\<And>x.\n          \\<bar>x\\<bar> \\<le> 1 / 2 \\<Longrightarrow>\n          \\<bar>(1 + x) powr p - 1 - p * x\\<bar>\n          \\<le> k * x\\<^sup>2) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  \\<bar>?x\\<bar> \\<le> 1 / 2 \\<Longrightarrow>\n  \\<bar>(1 + ?x) powr p - 1 - p * ?x\\<bar> \\<le> k * ?x\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + f x) powr p - 1 - p * f x)\n    \\<in> O[F](\\<lambda>x. (f x)\\<^sup>2)", "moreover"], ["proof (state)\nthis:\n  \\<bar>?x\\<bar> \\<le> 1 / 2 \\<Longrightarrow>\n  \\<bar>(1 + ?x) powr p - 1 - p * ?x\\<bar> \\<le> k * ?x\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + f x) powr p - 1 - p * f x)\n    \\<in> O[F](\\<lambda>x. (f x)\\<^sup>2)", "from tendstoD[OF lim, of \"1/2\"]"], ["proof (chain)\npicking this:\n  0 < 1 / 2 \\<Longrightarrow> \\<forall>\\<^sub>F x in F. dist (f x) 0 < 1 / 2", "have \"eventually (\\<lambda>x. abs (f x) < 1/2) F\""], ["proof (prove)\nusing this:\n  0 < 1 / 2 \\<Longrightarrow> \\<forall>\\<^sub>F x in F. dist (f x) 0 < 1 / 2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. \\<bar>f x\\<bar> < 1 / 2", "by (simp add: dist_real_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in F. \\<bar>f x\\<bar> < 1 / 2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + f x) powr p - 1 - p * f x)\n    \\<in> O[F](\\<lambda>x. (f x)\\<^sup>2)", "ultimately"], ["proof (chain)\npicking this:\n  \\<bar>?x\\<bar> \\<le> 1 / 2 \\<Longrightarrow>\n  \\<bar>(1 + ?x) powr p - 1 - p * ?x\\<bar> \\<le> k * ?x\\<^sup>2\n  \\<forall>\\<^sub>F x in F. \\<bar>f x\\<bar> < 1 / 2", "have \"eventually (\\<lambda>x. norm ((1 + f x) powr p - 1 - p * f x) \\<le> k * norm (f x ^ 2)) F\""], ["proof (prove)\nusing this:\n  \\<bar>?x\\<bar> \\<le> 1 / 2 \\<Longrightarrow>\n  \\<bar>(1 + ?x) powr p - 1 - p * ?x\\<bar> \\<le> k * ?x\\<^sup>2\n  \\<forall>\\<^sub>F x in F. \\<bar>f x\\<bar> < 1 / 2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F.\n       norm ((1 + f x) powr p - 1 - p * f x) \\<le> k * norm ((f x)\\<^sup>2)", "by (auto elim!: eventually_mono)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in F.\n     norm ((1 + f x) powr p - 1 - p * f x) \\<le> k * norm ((f x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + f x) powr p - 1 - p * f x)\n    \\<in> O[F](\\<lambda>x. (f x)\\<^sup>2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in F.\n     norm ((1 + f x) powr p - 1 - p * f x) \\<le> k * norm ((f x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + f x) powr p - 1 - p * f x)\n    \\<in> O[F](\\<lambda>x. (f x)\\<^sup>2)", "by (rule bigoI)"], ["proof (state)\nthis:\n  (\\<lambda>x. (1 + f x) powr p - 1 - p * f x)\n  \\<in> O[F](\\<lambda>x. (f x)\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma one_plus_x_powr_Taylor1_bigo:\n  assumes lim: \"(f \\<longlongrightarrow> 0) F\"\n  shows   \"(\\<lambda>x. (1 + f x) powr (p::real) - 1) \\<in> O[F](\\<lambda>x. f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + f x) powr p - 1) \\<in> O[F](f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + f x) powr p - 1) \\<in> O[F](f)", "from assms"], ["proof (chain)\npicking this:\n  (f \\<longlongrightarrow> 0) F", "have \"(\\<lambda>x. (1 + f x) powr p - 1 - p * f x) \\<in> O[F](\\<lambda>x. (f x)\\<^sup>2)\""], ["proof (prove)\nusing this:\n  (f \\<longlongrightarrow> 0) F\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + f x) powr p - 1 - p * f x)\n    \\<in> O[F](\\<lambda>x. (f x)\\<^sup>2)", "by (rule one_plus_x_powr_Taylor2_bigo)"], ["proof (state)\nthis:\n  (\\<lambda>x. (1 + f x) powr p - 1 - p * f x)\n  \\<in> O[F](\\<lambda>x. (f x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + f x) powr p - 1) \\<in> O[F](f)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. (1 + f x) powr p - 1 - p * f x)\n  \\<in> O[F](\\<lambda>x. (f x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + f x) powr p - 1) \\<in> O[F](f)", "from assms"], ["proof (chain)\npicking this:\n  (f \\<longlongrightarrow> 0) F", "have \"f \\<in> O[F](\\<lambda>_. 1)\""], ["proof (prove)\nusing this:\n  (f \\<longlongrightarrow> 0) F\n\ngoal (1 subgoal):\n 1. f \\<in> O[F](\\<lambda>_. 1)", "by (intro bigoI_tendsto) simp_all"], ["proof (state)\nthis:\n  f \\<in> O[F](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + f x) powr p - 1) \\<in> O[F](f)", "from landau_o.big.mult[of f F f, OF _ this]"], ["proof (chain)\npicking this:\n  f \\<in> O[F](f) \\<Longrightarrow>\n  (\\<lambda>x. f x * f x) \\<in> O[F](\\<lambda>x. f x * 1)", "have \"(\\<lambda>x. (f x)^2) \\<in> O[F](\\<lambda>x. f x)\""], ["proof (prove)\nusing this:\n  f \\<in> O[F](f) \\<Longrightarrow>\n  (\\<lambda>x. f x * f x) \\<in> O[F](\\<lambda>x. f x * 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (f x)\\<^sup>2) \\<in> O[F](f)", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  (\\<lambda>x. (f x)\\<^sup>2) \\<in> O[F](f)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + f x) powr p - 1) \\<in> O[F](f)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. (1 + f x) powr p - 1 - p * f x) \\<in> O[F](f)", "have A: \"(\\<lambda>x. (1 + f x) powr p - 1 - p * f x) \\<in> O[F](f)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. (1 + f x) powr p - 1 - p * f x) \\<in> O[F](f)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + f x) powr p - 1 - p * f x) \\<in> O[F](f)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. (1 + f x) powr p - 1 - p * f x) \\<in> O[F](f)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + f x) powr p - 1) \\<in> O[F](f)", "have B: \"(\\<lambda>x. p * f x) \\<in> O[F](f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. p * f x) \\<in> O[F](f)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. p * f x) \\<in> O[F](f)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + f x) powr p - 1) \\<in> O[F](f)", "from sum_in_bigo(1)[OF A B]"], ["proof (chain)\npicking this:\n  (\\<lambda>x. (1 + f x) powr p - 1 - p * f x + p * f x) \\<in> O[F](f)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. (1 + f x) powr p - 1 - p * f x + p * f x) \\<in> O[F](f)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + f x) powr p - 1) \\<in> O[F](f)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. (1 + f x) powr p - 1) \\<in> O[F](f)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma x_times_x_minus_1_nonneg: \"x \\<le> 0 \\<or> x \\<ge> 1 \\<Longrightarrow> (x::_::linordered_idom) * (x - 1) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> (0::'a) \\<or> (1::'a) \\<le> x \\<Longrightarrow>\n    (0::'a) \\<le> x * (x - (1::'a))", "proof (elim disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<le> (0::'a) \\<Longrightarrow> (0::'a) \\<le> x * (x - (1::'a))\n 2. (1::'a) \\<le> x \\<Longrightarrow> (0::'a) \\<le> x * (x - (1::'a))", "assume x: \"x \\<le> 0\""], ["proof (state)\nthis:\n  x \\<le> (0::'a)\n\ngoal (2 subgoals):\n 1. x \\<le> (0::'a) \\<Longrightarrow> (0::'a) \\<le> x * (x - (1::'a))\n 2. (1::'a) \\<le> x \\<Longrightarrow> (0::'a) \\<le> x * (x - (1::'a))", "also"], ["proof (state)\nthis:\n  x \\<le> (0::'a)\n\ngoal (2 subgoals):\n 1. x \\<le> (0::'a) \\<Longrightarrow> (0::'a) \\<le> x * (x - (1::'a))\n 2. (1::'a) \\<le> x \\<Longrightarrow> (0::'a) \\<le> x * (x - (1::'a))", "have \"0 \\<le> x^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> x\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  (0::'a) \\<le> x\\<^sup>2\n\ngoal (2 subgoals):\n 1. x \\<le> (0::'a) \\<Longrightarrow> (0::'a) \\<le> x * (x - (1::'a))\n 2. (1::'a) \\<le> x \\<Longrightarrow> (0::'a) \\<le> x * (x - (1::'a))", "finally"], ["proof (chain)\npicking this:\n  x \\<le> x\\<^sup>2", "show \"x * (x - 1) \\<ge> 0\""], ["proof (prove)\nusing this:\n  x \\<le> x\\<^sup>2\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> x * (x - (1::'a))", "by (simp add: power2_eq_square algebra_simps)"], ["proof (state)\nthis:\n  (0::'a) \\<le> x * (x - (1::'a))\n\ngoal (1 subgoal):\n 1. (1::'a) \\<le> x \\<Longrightarrow> (0::'a) \\<le> x * (x - (1::'a))", "qed simp"], ["", "lemma x_times_x_minus_1_nonpos: \"x \\<ge> 0 \\<Longrightarrow> x \\<le> 1 \\<Longrightarrow> (x::_::linordered_idom) * (x - 1) \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> x; x \\<le> (1::'a)\\<rbrakk>\n    \\<Longrightarrow> x * (x - (1::'a)) \\<le> (0::'a)", "by (intro mult_nonneg_nonpos) simp_all"], ["", "lemma powr_mono':\n  assumes \"(x::real) > 0\" \"x \\<le> 1\" \"a \\<le> b\"\n  shows   \"x powr b \\<le> x powr a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x powr b \\<le> x powr a", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x powr b \\<le> x powr a", "have \"inverse x powr a \\<le> inverse x powr b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse x powr a \\<le> inverse x powr b", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n  x \\<le> 1\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. inverse x powr a \\<le> inverse x powr b", "by (intro powr_mono) (simp_all add: field_simps)"], ["proof (state)\nthis:\n  inverse x powr a \\<le> inverse x powr b\n\ngoal (1 subgoal):\n 1. x powr b \\<le> x powr a", "hence \"inverse (x powr a) \\<le> inverse (x powr b)\""], ["proof (prove)\nusing this:\n  inverse x powr a \\<le> inverse x powr b\n\ngoal (1 subgoal):\n 1. inverse (x powr a) \\<le> inverse (x powr b)", "using assms"], ["proof (prove)\nusing this:\n  inverse x powr a \\<le> inverse x powr b\n  0 < x\n  x \\<le> 1\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. inverse (x powr a) \\<le> inverse (x powr b)", "by simp"], ["proof (state)\nthis:\n  inverse (x powr a) \\<le> inverse (x powr b)\n\ngoal (1 subgoal):\n 1. x powr b \\<le> x powr a", "with assms"], ["proof (chain)\npicking this:\n  0 < x\n  x \\<le> 1\n  a \\<le> b\n  inverse (x powr a) \\<le> inverse (x powr b)", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < x\n  x \\<le> 1\n  a \\<le> b\n  inverse (x powr a) \\<le> inverse (x powr b)\n\ngoal (1 subgoal):\n 1. x powr b \\<le> x powr a", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  x powr b \\<le> x powr a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma powr_less_mono':\n  assumes \"(x::real) > 0\" \"x < 1\" \"a < b\"\n  shows   \"x powr b < x powr a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x powr b < x powr a", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x powr b < x powr a", "have \"inverse x powr a < inverse x powr b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse x powr a < inverse x powr b", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n  x < 1\n  a < b\n\ngoal (1 subgoal):\n 1. inverse x powr a < inverse x powr b", "by (intro powr_less_mono) (simp_all add: field_simps)"], ["proof (state)\nthis:\n  inverse x powr a < inverse x powr b\n\ngoal (1 subgoal):\n 1. x powr b < x powr a", "hence \"inverse (x powr a) < inverse (x powr b)\""], ["proof (prove)\nusing this:\n  inverse x powr a < inverse x powr b\n\ngoal (1 subgoal):\n 1. inverse (x powr a) < inverse (x powr b)", "using assms"], ["proof (prove)\nusing this:\n  inverse x powr a < inverse x powr b\n  0 < x\n  x < 1\n  a < b\n\ngoal (1 subgoal):\n 1. inverse (x powr a) < inverse (x powr b)", "by simp"], ["proof (state)\nthis:\n  inverse (x powr a) < inverse (x powr b)\n\ngoal (1 subgoal):\n 1. x powr b < x powr a", "with assms"], ["proof (chain)\npicking this:\n  0 < x\n  x < 1\n  a < b\n  inverse (x powr a) < inverse (x powr b)", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < x\n  x < 1\n  a < b\n  inverse (x powr a) < inverse (x powr b)\n\ngoal (1 subgoal):\n 1. x powr b < x powr a", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  x powr b < x powr a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma real_powr_at_bot:\n  assumes \"(a::real) > 1\"\n  shows   \"((\\<lambda>x. a powr x) \\<longlongrightarrow> 0) at_bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((powr) a \\<longlongrightarrow> 0) at_bot", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ((powr) a \\<longlongrightarrow> 0) at_bot", "from assms"], ["proof (chain)\npicking this:\n  1 < a", "have \"filterlim (\\<lambda>x. ln a * x) at_bot at_bot\""], ["proof (prove)\nusing this:\n  1 < a\n\ngoal (1 subgoal):\n 1. filterlim ((*) (ln a)) at_bot at_bot", "by (intro filterlim_tendsto_pos_mult_at_bot[OF tendsto_const _ filterlim_ident]) auto"], ["proof (state)\nthis:\n  filterlim ((*) (ln a)) at_bot at_bot\n\ngoal (1 subgoal):\n 1. ((powr) a \\<longlongrightarrow> 0) at_bot", "hence \"((\\<lambda>x. exp (x * ln a)) \\<longlongrightarrow> 0) at_bot\""], ["proof (prove)\nusing this:\n  filterlim ((*) (ln a)) at_bot at_bot\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. exp (x * ln a)) \\<longlongrightarrow> 0) at_bot", "by (intro filterlim_compose[OF exp_at_bot]) (simp add: algebra_simps)"], ["proof (state)\nthis:\n  ((\\<lambda>x. exp (x * ln a)) \\<longlongrightarrow> 0) at_bot\n\ngoal (1 subgoal):\n 1. ((powr) a \\<longlongrightarrow> 0) at_bot", "thus ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. exp (x * ln a)) \\<longlongrightarrow> 0) at_bot\n\ngoal (1 subgoal):\n 1. ((powr) a \\<longlongrightarrow> 0) at_bot", "using assms"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. exp (x * ln a)) \\<longlongrightarrow> 0) at_bot\n  1 < a\n\ngoal (1 subgoal):\n 1. ((powr) a \\<longlongrightarrow> 0) at_bot", "unfolding powr_def"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. exp (x * ln a)) \\<longlongrightarrow> 0) at_bot\n  1 < a\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. if a = 0 then 0 else exp (x * ln a)) \\<longlongrightarrow>\n     0)\n     at_bot", "by simp"], ["proof (state)\nthis:\n  ((powr) a \\<longlongrightarrow> 0) at_bot\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma real_powr_at_bot_neg:\n  assumes \"(a::real) > 0\" \"a < 1\"\n  shows   \"filterlim (\\<lambda>x. a powr x) at_top at_bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim ((powr) a) at_top at_bot", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. filterlim ((powr) a) at_top at_bot", "from assms"], ["proof (chain)\npicking this:\n  0 < a\n  a < 1", "have \"LIM x at_bot. ln (inverse a) * -x :> at_top\""], ["proof (prove)\nusing this:\n  0 < a\n  a < 1\n\ngoal (1 subgoal):\n 1. LIM x at_bot. ln (inverse a) * - x :> at_top", "by (intro filterlim_tendsto_pos_mult_at_top[OF tendsto_const] filterlim_uminus_at_top_at_bot)\n       (simp_all add: ln_inverse)"], ["proof (state)\nthis:\n  LIM x at_bot. ln (inverse a) * - x :> at_top\n\ngoal (1 subgoal):\n 1. filterlim ((powr) a) at_top at_bot", "with assms"], ["proof (chain)\npicking this:\n  0 < a\n  a < 1\n  LIM x at_bot. ln (inverse a) * - x :> at_top", "have \"LIM x at_bot. x * ln a :> at_top\""], ["proof (prove)\nusing this:\n  0 < a\n  a < 1\n  LIM x at_bot. ln (inverse a) * - x :> at_top\n\ngoal (1 subgoal):\n 1. LIM x at_bot. x * ln a :> at_top", "by (subst (asm) ln_inverse) (simp_all add: mult.commute)"], ["proof (state)\nthis:\n  LIM x at_bot. x * ln a :> at_top\n\ngoal (1 subgoal):\n 1. filterlim ((powr) a) at_top at_bot", "hence \"LIM x at_bot. exp (x * ln a) :> at_top\""], ["proof (prove)\nusing this:\n  LIM x at_bot. x * ln a :> at_top\n\ngoal (1 subgoal):\n 1. LIM x at_bot. exp (x * ln a) :> at_top", "by (intro filterlim_compose[OF exp_at_top]) simp"], ["proof (state)\nthis:\n  LIM x at_bot. exp (x * ln a) :> at_top\n\ngoal (1 subgoal):\n 1. filterlim ((powr) a) at_top at_bot", "thus ?thesis"], ["proof (prove)\nusing this:\n  LIM x at_bot. exp (x * ln a) :> at_top\n\ngoal (1 subgoal):\n 1. filterlim ((powr) a) at_top at_bot", "using assms"], ["proof (prove)\nusing this:\n  LIM x at_bot. exp (x * ln a) :> at_top\n  0 < a\n  a < 1\n\ngoal (1 subgoal):\n 1. filterlim ((powr) a) at_top at_bot", "unfolding powr_def"], ["proof (prove)\nusing this:\n  LIM x at_bot. exp (x * ln a) :> at_top\n  0 < a\n  a < 1\n\ngoal (1 subgoal):\n 1. LIM x at_bot. if a = 0 then 0 else exp (x * ln a) :> at_top", "by simp"], ["proof (state)\nthis:\n  filterlim ((powr) a) at_top at_bot\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma real_powr_at_top_neg: \n  assumes \"(a::real) > 0\" \"a < 1\"\n  shows   \"((\\<lambda>x. a powr x) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((powr) a \\<longlongrightarrow> 0) at_top", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ((powr) a \\<longlongrightarrow> 0) at_top", "from assms"], ["proof (chain)\npicking this:\n  0 < a\n  a < 1", "have \"LIM x at_top. ln (inverse a) * x :> at_top\""], ["proof (prove)\nusing this:\n  0 < a\n  a < 1\n\ngoal (1 subgoal):\n 1. filterlim ((*) (ln (inverse a))) at_top at_top", "by (intro filterlim_tendsto_pos_mult_at_top[OF tendsto_const])\n       (simp_all add: filterlim_ident field_simps)"], ["proof (state)\nthis:\n  filterlim ((*) (ln (inverse a))) at_top at_top\n\ngoal (1 subgoal):\n 1. ((powr) a \\<longlongrightarrow> 0) at_top", "with assms"], ["proof (chain)\npicking this:\n  0 < a\n  a < 1\n  filterlim ((*) (ln (inverse a))) at_top at_top", "have \"LIM x at_top. ln a * x :> at_bot\""], ["proof (prove)\nusing this:\n  0 < a\n  a < 1\n  filterlim ((*) (ln (inverse a))) at_top at_top\n\ngoal (1 subgoal):\n 1. filterlim ((*) (ln a)) at_bot at_top", "by (subst filterlim_uminus_at_bot) (simp add: ln_inverse)"], ["proof (state)\nthis:\n  filterlim ((*) (ln a)) at_bot at_top\n\ngoal (1 subgoal):\n 1. ((powr) a \\<longlongrightarrow> 0) at_top", "hence \"((\\<lambda>x. exp (x * ln a)) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\nusing this:\n  filterlim ((*) (ln a)) at_bot at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. exp (x * ln a)) \\<longlongrightarrow> 0) at_top", "by (intro filterlim_compose[OF exp_at_bot]) (simp_all add: mult.commute)"], ["proof (state)\nthis:\n  ((\\<lambda>x. exp (x * ln a)) \\<longlongrightarrow> 0) at_top\n\ngoal (1 subgoal):\n 1. ((powr) a \\<longlongrightarrow> 0) at_top", "with assms"], ["proof (chain)\npicking this:\n  0 < a\n  a < 1\n  ((\\<lambda>x. exp (x * ln a)) \\<longlongrightarrow> 0) at_top", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < a\n  a < 1\n  ((\\<lambda>x. exp (x * ln a)) \\<longlongrightarrow> 0) at_top\n\ngoal (1 subgoal):\n 1. ((powr) a \\<longlongrightarrow> 0) at_top", "unfolding powr_def"], ["proof (prove)\nusing this:\n  0 < a\n  a < 1\n  ((\\<lambda>x. exp (x * ln a)) \\<longlongrightarrow> 0) at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. if a = 0 then 0 else exp (x * ln a)) \\<longlongrightarrow>\n     0)\n     at_top", "by simp"], ["proof (state)\nthis:\n  ((powr) a \\<longlongrightarrow> 0) at_top\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma eventually_nat_real:\n  assumes \"eventually P (at_top :: real filter)\"\n  shows   \"eventually (\\<lambda>x. P (real x)) (at_top :: nat filter)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially. P (real x)", "using assms filterlim_real_sequentially"], ["proof (prove)\nusing this:\n  eventually P at_top\n  filterlim real at_top sequentially\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially. P (real x)", "unfolding filterlim_def le_filter_def eventually_filtermap"], ["proof (prove)\nusing this:\n  eventually P at_top\n  \\<forall>P.\n     eventually P at_top \\<longrightarrow>\n     (\\<forall>\\<^sub>F x in sequentially. P (real x))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially. P (real x)", "by auto"], ["", "end"]]}