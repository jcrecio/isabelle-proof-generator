{"file_name": "/home/qj213/afp-2021-10-22/thys/Akra_Bazzi/Akra_Bazzi_Asymptotics.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Akra_Bazzi", "problem_names": ["lemma neglD: \"negl f \\<Longrightarrow> c > 0 \\<Longrightarrow> eventually (\\<lambda>x. \\<bar>f x\\<bar> \\<le> c / ln (b*x) powr (e/2+1)) at_top\"", "lemma negl_mult: \"negl f \\<Longrightarrow> negl g \\<Longrightarrow> negl (\\<lambda>x. f x * g x)\"", "lemma ev4:\n  assumes g: \"negl g\"\n  shows   \"eventually (\\<lambda>x. ln (b*x) powr (-e/2) - ln x powr (-e/2) \\<ge> g x) at_top\"", "lemma ev1:\n  \"negl (\\<lambda>x. (1 + c * inverse b * ln x powr (-(1+e))) powr p - 1)\"", "lemma ev2_aux:\n  defines \"f \\<equiv> \\<lambda>x. (1 + 1/ln (b*x) * ln (1 + hb / b * ln x powr (-1-e))) powr (-e/2)\"\n  obtains h where \"eventually (\\<lambda>x. f x \\<ge> 1 + h x) at_top\" \"h \\<in> o(\\<lambda>x. 1 / ln x)\"", "lemma ev2:\n  defines \"f \\<equiv> \\<lambda>x. ln (b * x + hb * x / ln x powr (1 + e)) powr (-e/2)\"\n  obtains h where\n    \"negl h\"\n    \"eventually (\\<lambda>x. f x \\<ge> ln (b * x) powr (-e/2) + h x) at_top\"\n    \"eventually (\\<lambda>x. \\<bar>ln (b * x) powr (-e/2) + h x\\<bar> < 1) at_top\"", "lemma ev21:\n  obtains g where\n    \"negl g\"\n    \"eventually (\\<lambda>x. 1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (-e/2) \\<ge>\n         1 + ln (b * x) powr (-e/2) + g x) at_top\"\n    \"eventually (\\<lambda>x. 1 + ln (b * x) powr (-e/2) + g x > 0) at_top\"", "lemma ev22:\n  obtains g where\n    \"negl g\"\n    \"eventually (\\<lambda>x. 1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (-e/2) \\<le>\n         1 - ln (b * x) powr (-e/2) - g x) at_top\"\n    \"eventually (\\<lambda>x. 1 - ln (b * x) powr (-e/2) - g x > 0) at_top\"", "lemma asymptotics1:\n  shows \"eventually (\\<lambda>x.\n             (1 + c * inverse b * ln x powr -(1+e)) powr p *\n             (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)) \\<ge>\n             1 + (ln x powr (-e/2))) at_top\"", "lemma asymptotics2:\n  shows \"eventually (\\<lambda>x.\n             (1 + c * inverse b * ln x powr -(1+e)) powr p *\n             (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)) \\<le>\n             1 - (ln x powr (-e/2))) at_top\"", "lemma asymptotics3: \"eventually (\\<lambda>x. (1 + (ln x powr (-e/2))) / 2 \\<le> 1) at_top\"\n  (is \"eventually (\\<lambda>x. ?f x \\<le> 1) _\")", "lemma asymptotics4: \"eventually (\\<lambda>x. (1 - (ln x powr (-e/2))) * 2 \\<ge> 1) at_top\"\n  (is \"eventually (\\<lambda>x. ?f x \\<ge> 1) _\")", "lemma asymptotics5: \"eventually (\\<lambda>x. ln (b*x - hb*x*ln x powr -(1+e)) powr (-e/2) < 1) at_top\"", "lemma asymptotics6: \"eventually (\\<lambda>x. hb / ln x powr (1 + e) < b/2) at_top\"\n  and asymptotics7: \"eventually (\\<lambda>x. hb / ln x powr (1 + e) < (1 - b) / 2) at_top\"\n  and asymptotics8: \"eventually (\\<lambda>x. x*(1 - b - hb / ln x powr (1 + e)) > 1) at_top\"", "lemmas akra_bazzi_asymptotic_defs =\n  akra_bazzi_asymptotic1_def akra_bazzi_asymptotic1'_def\n  akra_bazzi_asymptotic2_def akra_bazzi_asymptotic2'_def akra_bazzi_asymptotic3_def\n  akra_bazzi_asymptotic4_def akra_bazzi_asymptotic5_def akra_bazzi_asymptotic6_def\n  akra_bazzi_asymptotic7_def akra_bazzi_asymptotic8_def akra_bazzi_asymptotics_def", "lemma akra_bazzi_asymptotics:\n  assumes \"\\<And>b. b \\<in> set bs \\<Longrightarrow> b \\<in> {0<..<1}\"\n  assumes \"hb > 0\" \"e > 0\"\n  shows \"eventually (\\<lambda>x. \\<forall>b\\<in>set bs. akra_bazzi_asymptotics b hb e p x) at_top\""], "translations": [["", "lemma neglD: \"negl f \\<Longrightarrow> c > 0 \\<Longrightarrow> eventually (\\<lambda>x. \\<bar>f x\\<bar> \\<le> c / ln (b*x) powr (e/2+1)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n     0 < c\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at_top.\n                         \\<bar>f x\\<bar>\n                         \\<le> c / ln (b * x) powr (e / 2 + 1)", "by (drule (1) landau_o.smallD, subst (asm) powr_minus) (simp add: field_simps)"], ["", "private"], ["", "lemma negl_mult: \"negl f \\<Longrightarrow> negl g \\<Longrightarrow> negl (\\<lambda>x. f x * g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n     g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f x * g x)\n                      \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "by (erule landau_o.small_1_mult, rule landau_o.small_imp_big, erule landau_o.small_trans)\n     (insert bep, simp)"], ["", "private"], ["", "lemma ev4:\n  assumes g: \"negl g\"\n  shows   \"eventually (\\<lambda>x. ln (b*x) powr (-e/2) - ln x powr (-e/2) \\<ge> g x) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       g x \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "proof (rule smallo_imp_le_real)"], ["proof (state)\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n 2. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "define h1 where [abs_def]:\n    \"h1 x = (1 + ln b/ln x) powr (-e/2) - 1 + e/2 * (ln b/ln x)\" for x"], ["proof (state)\nthis:\n  h1 \\<equiv>\n  \\<lambda>x. (1 + ln b / ln x) powr (- e / 2) - 1 + e / 2 * (ln b / ln x)\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n 2. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "define h2 where [abs_def]:\n    \"h2 x = ln x powr (- e / 2) * ((1 + ln b / ln x) powr (- e / 2) - 1)\" for x"], ["proof (state)\nthis:\n  h2 \\<equiv>\n  \\<lambda>x. ln x powr (- e / 2) * ((1 + ln b / ln x) powr (- e / 2) - 1)\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n 2. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "from bep"], ["proof (chain)\npicking this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb", "have \"((\\<lambda>x. ln b / ln x) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. ln b / ln x) \\<longlongrightarrow> 0) at_top", "by (simp add: tendsto_0_smallo_1)"], ["proof (state)\nthis:\n  ((\\<lambda>x. ln b / ln x) \\<longlongrightarrow> 0) at_top\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n 2. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "note one_plus_x_powr_Taylor2_bigo[OF this, of \"-e/2\"]"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 + ln b / ln x) powr (- e / 2) - 1 - - e / 2 * (ln b / ln x))\n  \\<in> O(\\<lambda>x. (ln b / ln x)\\<^sup>2)\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n 2. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 + ln b / ln x) powr (- e / 2) - 1 - - e / 2 * (ln b / ln x))\n  \\<in> O(\\<lambda>x. (ln b / ln x)\\<^sup>2)\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n 2. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "have \"(\\<lambda>x. (1 + ln b / ln x) powr (- e / 2) - 1 - - e / 2 * (ln b / ln x)) = h1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 + ln b / ln x) powr (- e / 2) - 1 - - e / 2 * (ln b / ln x)) =\n    h1", "by (simp add: h1_def)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      (1 + ln b / ln x) powr (- e / 2) - 1 - - e / 2 * (ln b / ln x)) =\n  h1\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n 2. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "finally"], ["proof (chain)\npicking this:\n  h1 \\<in> O(\\<lambda>x. (ln b / ln x)\\<^sup>2)", "have \"h1 \\<in> o(\\<lambda>x. 1 / ln x)\""], ["proof (prove)\nusing this:\n  h1 \\<in> O(\\<lambda>x. (ln b / ln x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. h1 \\<in> o(\\<lambda>x. 1 / ln x)", "by (rule landau_o.big_small_trans) (insert bep, simp add: power2_eq_square)"], ["proof (state)\nthis:\n  h1 \\<in> o(\\<lambda>x. 1 / ln x)\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n 2. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "with bep"], ["proof (chain)\npicking this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n  h1 \\<in> o(\\<lambda>x. 1 / ln x)", "have \"(\\<lambda>x. h1 x - e/2 * (ln b / ln x)) \\<in> \\<Theta>(\\<lambda>x. 1 / ln x)\""], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n  h1 \\<in> o(\\<lambda>x. 1 / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. h1 x - e / 2 * (ln b / ln x))\n    \\<in> \\<Theta>(\\<lambda>x. 1 / ln x)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. h1 x - e / 2 * (ln b / ln x))\n  \\<in> \\<Theta>(\\<lambda>x. 1 / ln x)\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n 2. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. h1 x - e / 2 * (ln b / ln x))\n  \\<in> \\<Theta>(\\<lambda>x. 1 / ln x)\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n 2. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "have \"(\\<lambda>x. h1 x - e/2 * (ln b/ln x)) = (\\<lambda>x. (1 + ln b/ ln x) powr (-e/2) - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. h1 x - e / 2 * (ln b / ln x)) =\n    (\\<lambda>x. (1 + ln b / ln x) powr (- e / 2) - 1)", "by (rule ext) (simp add: h1_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. h1 x - e / 2 * (ln b / ln x)) =\n  (\\<lambda>x. (1 + ln b / ln x) powr (- e / 2) - 1)\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n 2. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. (1 + ln b / ln x) powr (- e / 2) - 1)\n  \\<in> \\<Theta>(\\<lambda>x. 1 / ln x)", "have \"h2 \\<in> \\<Theta>(\\<lambda>x. ln x powr (-e/2) * (1 / ln x))\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. (1 + ln b / ln x) powr (- e / 2) - 1)\n  \\<in> \\<Theta>(\\<lambda>x. 1 / ln x)\n\ngoal (1 subgoal):\n 1. h2 \\<in> \\<Theta>(\\<lambda>x. ln x powr (- e / 2) * (1 / ln x))", "unfolding h2_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. (1 + ln b / ln x) powr (- e / 2) - 1)\n  \\<in> \\<Theta>(\\<lambda>x. 1 / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        ln x powr (- e / 2) * ((1 + ln b / ln x) powr (- e / 2) - 1))\n    \\<in> \\<Theta>(\\<lambda>x. ln x powr (- e / 2) * (1 / ln x))", "by (intro landau_theta.mult) simp_all"], ["proof (state)\nthis:\n  h2 \\<in> \\<Theta>(\\<lambda>x. ln x powr (- e / 2) * (1 / ln x))\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n 2. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "also"], ["proof (state)\nthis:\n  h2 \\<in> \\<Theta>(\\<lambda>x. ln x powr (- e / 2) * (1 / ln x))\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n 2. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "have \"(\\<lambda>x. ln x powr (-e/2) * (1 / ln x)) \\<in> \\<Theta>(\\<lambda>x. ln x powr (-(e/2+1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln x powr (- e / 2) * (1 / ln x))\n    \\<in> \\<Theta>(\\<lambda>x. ln x powr - (e / 2 + 1))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. ln x powr (- e / 2) * (1 / ln x))\n  \\<in> \\<Theta>(\\<lambda>x. ln x powr - (e / 2 + 1))\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n 2. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. ln x powr (- e / 2) * (1 / ln x))\n  \\<in> \\<Theta>(\\<lambda>x. ln x powr - (e / 2 + 1))\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n 2. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "from g bep"], ["proof (chain)\npicking this:\n  g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n  0 < b\n  b < 1\n  0 < e\n  0 < hb", "have \"(\\<lambda>x. ln x powr (-(e/2+1))) \\<in> \\<omega>(g)\""], ["proof (prove)\nusing this:\n  g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln x powr - (e / 2 + 1)) \\<in> \\<omega>(g)", "by (simp add: smallomega_iff_smallo)"], ["proof (state)\nthis:\n  (\\<lambda>x. ln x powr - (e / 2 + 1)) \\<in> \\<omega>(g)\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n 2. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "finally"], ["proof (chain)\npicking this:\n  h2 \\<in> \\<omega>(g)", "have \"g \\<in> o(h2)\""], ["proof (prove)\nusing this:\n  h2 \\<in> \\<omega>(g)\n\ngoal (1 subgoal):\n 1. g \\<in> o(h2)", "by (simp add: smallomega_iff_smallo)"], ["proof (state)\nthis:\n  g \\<in> o(h2)\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n 2. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "also"], ["proof (state)\nthis:\n  g \\<in> o(h2)\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n 2. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "have \"eventually (\\<lambda>x. h2 x = ln (b*x) powr (-e/2) - ln x powr (-e/2)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       h2 x = ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "using eventually_gt_at_top[of \"1::real\"] eventually_gt_at_top[of \"1/b\"]"], ["proof (prove)\nusing this:\n  eventually ((<) 1) at_top\n  eventually ((<) (1 / b)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       h2 x = ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "by eventually_elim (insert bep, simp add: field_simps powr_diff [symmetric]  h2_def\n                                      ln_mult [symmetric] powr_divide del: ln_mult)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     h2 x = ln (b * x) powr (- e / 2) - ln x powr (- e / 2)\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n 2. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "hence \"h2 \\<in> \\<Theta>(\\<lambda>x. ln (b*x) powr (-e/2) - ln x powr (-e/2))\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     h2 x = ln (b * x) powr (- e / 2) - ln x powr (- e / 2)\n\ngoal (1 subgoal):\n 1. h2 \\<in> \\<Theta>(\\<lambda>x.\n                         ln (b * x) powr (- e / 2) - ln x powr (- e / 2))", "by (rule bigthetaI_cong)"], ["proof (state)\nthis:\n  h2 \\<in> \\<Theta>(\\<lambda>x.\n                       ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n\ngoal (2 subgoals):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n 2. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "finally"], ["proof (chain)\npicking this:\n  g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))", "show \"g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\""], ["proof (prove)\nusing this:\n  g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n\ngoal (1 subgoal):\n 1. g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))", "."], ["proof (state)\nthis:\n  g \\<in> o(\\<lambda>x. ln (b * x) powr (- e / 2) - ln x powr (- e / 2))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "show \"eventually (\\<lambda>x. ln (b*x) powr (-e/2) - ln x powr (-e/2) \\<ge> 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "using eventually_gt_at_top[of \"1/b\"] eventually_gt_at_top[of \"1::real\"]"], ["proof (prove)\nusing this:\n  eventually ((<) (1 / b)) at_top\n  eventually ((<) 1) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)", "by eventually_elim (insert bep, auto intro!: powr_mono2' simp: field_simps simp del: ln_mult)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     0 \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)\n\ngoal:\nNo subgoals!", "qed"], ["", "private"], ["", "lemma ev1:\n  \"negl (\\<lambda>x. (1 + c * inverse b * ln x powr (-(1+e))) powr p - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + c * inverse b * ln x powr - (1 + e)) powr p - 1)\n    \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + c * inverse b * ln x powr - (1 + e)) powr p - 1)\n    \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "from bep"], ["proof (chain)\npicking this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb", "have \"((\\<lambda>x. c * inverse b * ln x powr (-(1+e))) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c * inverse b * ln x powr - (1 + e)) \\<longlongrightarrow>\n     0)\n     at_top", "by (simp add: tendsto_0_smallo_1)"], ["proof (state)\nthis:\n  ((\\<lambda>x. c * inverse b * ln x powr - (1 + e)) \\<longlongrightarrow>\n   0)\n   at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + c * inverse b * ln x powr - (1 + e)) powr p - 1)\n    \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "have \"(\\<lambda>x. (1 + c * inverse b * ln x powr (-(1+e))) powr p - 1)\n           \\<in> O(\\<lambda>x. c * inverse b * ln x powr - (1 + e))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + c * inverse b * ln x powr - (1 + e)) powr p - 1)\n    \\<in> O(\\<lambda>x. c * inverse b * ln x powr - (1 + e))", "using bep"], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + c * inverse b * ln x powr - (1 + e)) powr p - 1)\n    \\<in> O(\\<lambda>x. c * inverse b * ln x powr - (1 + e))", "by (intro one_plus_x_powr_Taylor1_bigo) (simp add: tendsto_0_smallo_1)"], ["proof (state)\nthis:\n  (\\<lambda>x. (1 + c * inverse b * ln x powr - (1 + e)) powr p - 1)\n  \\<in> O(\\<lambda>x. c * inverse b * ln x powr - (1 + e))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + c * inverse b * ln x powr - (1 + e)) powr p - 1)\n    \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. (1 + c * inverse b * ln x powr - (1 + e)) powr p - 1)\n  \\<in> O(\\<lambda>x. c * inverse b * ln x powr - (1 + e))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + c * inverse b * ln x powr - (1 + e)) powr p - 1)\n    \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "from bep"], ["proof (chain)\npicking this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb", "have \"negl (\\<lambda>x. c * inverse b * ln x powr - (1 + e))\""], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. c * inverse b * ln x powr - (1 + e))\n    \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. c * inverse b * ln x powr - (1 + e))\n  \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + c * inverse b * ln x powr - (1 + e)) powr p - 1)\n    \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. (1 + c * inverse b * ln x powr - (1 + e)) powr p - 1)\n  \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. (1 + c * inverse b * ln x powr - (1 + e)) powr p - 1)\n  \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + c * inverse b * ln x powr - (1 + e)) powr p - 1)\n    \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "."], ["proof (state)\nthis:\n  (\\<lambda>x. (1 + c * inverse b * ln x powr - (1 + e)) powr p - 1)\n  \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "private"], ["", "lemma ev2_aux:\n  defines \"f \\<equiv> \\<lambda>x. (1 + 1/ln (b*x) * ln (1 + hb / b * ln x powr (-1-e))) powr (-e/2)\"\n  obtains h where \"eventually (\\<lambda>x. f x \\<ge> 1 + h x) at_top\" \"h \\<in> o(\\<lambda>x. 1 / ln x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (rule that[of \"\\<lambda>x. f x - 1\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. 1 + (f x - 1) \\<le> f x\n 2. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)", "define g where [abs_def]: \"g x = 1/ln (b*x) * ln (1 + hb / b * ln x powr (-1-e))\" for x"], ["proof (state)\nthis:\n  g \\<equiv>\n  \\<lambda>x. 1 / ln (b * x) * ln (1 + hb / b * ln x powr (- 1 - e))\n\ngoal (2 subgoals):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. 1 + (f x - 1) \\<le> f x\n 2. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)", "have lim: \"((\\<lambda>x. ln (1 + hb / b * ln x powr (- 1 - e))) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         ln (1 + hb / b * ln x powr (- 1 - e))) \\<longlongrightarrow>\n     0)\n     at_top", "by (rule tendsto_eq_rhs[OF tendsto_ln[OF tendsto_add[OF tendsto_const, of _ 0]]])\n       (insert bep, simp_all add: tendsto_0_smallo_1)"], ["proof (state)\nthis:\n  ((\\<lambda>x. ln (1 + hb / b * ln x powr (- 1 - e))) \\<longlongrightarrow>\n   0)\n   at_top\n\ngoal (2 subgoals):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. 1 + (f x - 1) \\<le> f x\n 2. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)", "hence lim': \"(g \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. ln (1 + hb / b * ln x powr (- 1 - e))) \\<longlongrightarrow>\n   0)\n   at_top\n\ngoal (1 subgoal):\n 1. (g \\<longlongrightarrow> 0) at_top", "unfolding g_def"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. ln (1 + hb / b * ln x powr (- 1 - e))) \\<longlongrightarrow>\n   0)\n   at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         1 / ln (b * x) *\n         ln (1 + hb / b * ln x powr (- 1 - e))) \\<longlongrightarrow>\n     0)\n     at_top", "by (intro tendsto_mult_zero) (insert bep, simp add: tendsto_0_smallo_1)"], ["proof (state)\nthis:\n  (g \\<longlongrightarrow> 0) at_top\n\ngoal (2 subgoals):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. 1 + (f x - 1) \\<le> f x\n 2. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)", "from one_plus_x_powr_Taylor2_bigo[OF this, of \"-e/2\"]"], ["proof (chain)\npicking this:\n  (\\<lambda>x. (1 + g x) powr (- e / 2) - 1 - - e / 2 * g x)\n  \\<in> O(\\<lambda>x. (g x)\\<^sup>2)", "have \"(\\<lambda>x. (1 + g x) powr (-e/2) - 1 - - e/2 * g x) \\<in> O(\\<lambda>x. (g x)\\<^sup>2)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. (1 + g x) powr (- e / 2) - 1 - - e / 2 * g x)\n  \\<in> O(\\<lambda>x. (g x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + g x) powr (- e / 2) - 1 - - e / 2 * g x)\n    \\<in> O(\\<lambda>x. (g x)\\<^sup>2)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. (1 + g x) powr (- e / 2) - 1 - - e / 2 * g x)\n  \\<in> O(\\<lambda>x. (g x)\\<^sup>2)\n\ngoal (2 subgoals):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. 1 + (f x - 1) \\<le> f x\n 2. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. (1 + g x) powr (- e / 2) - 1 - - e / 2 * g x)\n  \\<in> O(\\<lambda>x. (g x)\\<^sup>2)\n\ngoal (2 subgoals):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. 1 + (f x - 1) \\<le> f x\n 2. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)", "from lim'"], ["proof (chain)\npicking this:\n  (g \\<longlongrightarrow> 0) at_top", "have \"(\\<lambda>x. g x ^ 2) \\<in> o(\\<lambda>x. g x * 1)\""], ["proof (prove)\nusing this:\n  (g \\<longlongrightarrow> 0) at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (g x)\\<^sup>2) \\<in> o(\\<lambda>x. g x * 1)", "unfolding power2_eq_square"], ["proof (prove)\nusing this:\n  (g \\<longlongrightarrow> 0) at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. g x * g x) \\<in> o(\\<lambda>x. g x * 1)", "by (intro landau_o.big_small_mult smalloI_tendsto) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>x. (g x)\\<^sup>2) \\<in> o(\\<lambda>x. g x * 1)\n\ngoal (2 subgoals):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. 1 + (f x - 1) \\<le> f x\n 2. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. (g x)\\<^sup>2) \\<in> o(\\<lambda>x. g x * 1)\n\ngoal (2 subgoals):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. 1 + (f x - 1) \\<le> f x\n 2. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)", "have \"o(\\<lambda>x. g x * 1) = o(g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. o(\\<lambda>x. g x * 1) = o(g)", "by simp"], ["proof (state)\nthis:\n  o(\\<lambda>x. g x * 1) = o(g)\n\ngoal (2 subgoals):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. 1 + (f x - 1) \\<le> f x\n 2. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)", "also"], ["proof (state)\nthis:\n  o(\\<lambda>x. g x * 1) = o(g)\n\ngoal (2 subgoals):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. 1 + (f x - 1) \\<le> f x\n 2. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)", "have \"(\\<lambda>x. (1 + g x) powr (-e/2) - 1 - - e/2 * g x) = (\\<lambda>x. f x - 1 + e/2 * g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 + g x) powr (- e / 2) - 1 - - e / 2 * g x) =\n    (\\<lambda>x. f x - 1 + e / 2 * g x)", "by (simp add: f_def g_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. (1 + g x) powr (- e / 2) - 1 - - e / 2 * g x) =\n  (\\<lambda>x. f x - 1 + e / 2 * g x)\n\ngoal (2 subgoals):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. 1 + (f x - 1) \\<le> f x\n 2. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. f x - 1 + e / 2 * g x) \\<in> o(g)", "have A: \"(\\<lambda>x. f x - 1 + e / 2 * g x) \\<in> O(g)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. f x - 1 + e / 2 * g x) \\<in> o(g)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x - 1 + e / 2 * g x) \\<in> O(g)", "by (rule landau_o.small_imp_big)"], ["proof (state)\nthis:\n  (\\<lambda>x. f x - 1 + e / 2 * g x) \\<in> O(g)\n\ngoal (2 subgoals):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. 1 + (f x - 1) \\<le> f x\n 2. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)", "hence \"(\\<lambda>x. f x - 1 + e/2 * g x - e/2 * g x) \\<in> O(g)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. f x - 1 + e / 2 * g x) \\<in> O(g)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x - 1 + e / 2 * g x - e / 2 * g x) \\<in> O(g)", "by (rule sum_in_bigo) (insert bep, simp)"], ["proof (state)\nthis:\n  (\\<lambda>x. f x - 1 + e / 2 * g x - e / 2 * g x) \\<in> O(g)\n\ngoal (2 subgoals):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. 1 + (f x - 1) \\<le> f x\n 2. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. f x - 1 + e / 2 * g x - e / 2 * g x) \\<in> O(g)\n\ngoal (2 subgoals):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. 1 + (f x - 1) \\<le> f x\n 2. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)", "have \"(\\<lambda>x. f x - 1 + e/2 * g x - e/2 * g x) = (\\<lambda>x. f x - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x - 1 + e / 2 * g x - e / 2 * g x) =\n    (\\<lambda>x. f x - 1)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. f x - 1 + e / 2 * g x - e / 2 * g x) = (\\<lambda>x. f x - 1)\n\ngoal (2 subgoals):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. 1 + (f x - 1) \\<le> f x\n 2. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. f x - 1) \\<in> O(g)", "have \"(\\<lambda>x. f x - 1) \\<in> O(g)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. f x - 1) \\<in> O(g)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x - 1) \\<in> O(g)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. f x - 1) \\<in> O(g)\n\ngoal (2 subgoals):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. 1 + (f x - 1) \\<le> f x\n 2. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. f x - 1) \\<in> O(g)\n\ngoal (2 subgoals):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. 1 + (f x - 1) \\<le> f x\n 2. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)", "from bep lim"], ["proof (chain)\npicking this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n  ((\\<lambda>x. ln (1 + hb / b * ln x powr (- 1 - e))) \\<longlongrightarrow>\n   0)\n   at_top", "have \"g \\<in> o(\\<lambda>x. 1 / ln x)\""], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n  ((\\<lambda>x. ln (1 + hb / b * ln x powr (- 1 - e))) \\<longlongrightarrow>\n   0)\n   at_top\n\ngoal (1 subgoal):\n 1. g \\<in> o(\\<lambda>x. 1 / ln x)", "unfolding g_def"], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n  ((\\<lambda>x. ln (1 + hb / b * ln x powr (- 1 - e))) \\<longlongrightarrow>\n   0)\n   at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. 1 / ln (b * x) * ln (1 + hb / b * ln x powr (- 1 - e)))\n    \\<in> o(\\<lambda>x. 1 / ln x)", "by (auto intro!: smallo_1_tendsto_0)"], ["proof (state)\nthis:\n  g \\<in> o(\\<lambda>x. 1 / ln x)\n\ngoal (2 subgoals):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. 1 + (f x - 1) \\<le> f x\n 2. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)", "show \"(\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)", "."], ["proof (state)\nthis:\n  (\\<lambda>x. f x - 1) \\<in> o(\\<lambda>x. 1 / ln x)\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + h x \\<le> f x;\n         h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in at_top. 1 + (f x - 1) \\<le> f x", "qed simp_all"], ["", "private"], ["", "lemma ev2:\n  defines \"f \\<equiv> \\<lambda>x. ln (b * x + hb * x / ln x powr (1 + e)) powr (-e/2)\"\n  obtains h where\n    \"negl h\"\n    \"eventually (\\<lambda>x. f x \\<ge> ln (b * x) powr (-e/2) + h x) at_top\"\n    \"eventually (\\<lambda>x. \\<bar>ln (b * x) powr (-e/2) + h x\\<bar> < 1) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n         \\<forall>\\<^sub>F x in at_top.\n            ln (b * x) powr (- e / 2) + h x \\<le> f x;\n         \\<forall>\\<^sub>F x in at_top.\n            \\<bar>ln (b * x) powr (- e / 2) + h x\\<bar> < 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n         \\<forall>\\<^sub>F x in at_top.\n            ln (b * x) powr (- e / 2) + h x \\<le> f x;\n         \\<forall>\\<^sub>F x in at_top.\n            \\<bar>ln (b * x) powr (- e / 2) + h x\\<bar> < 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define f'\n    where \"f' x = (1 + 1 / ln (b*x) * ln (1 + hb / b * ln x powr (-1-e))) powr (-e/2)\" for x"], ["proof (state)\nthis:\n  f' ?x =\n  (1 + 1 / ln (b * ?x) * ln (1 + hb / b * ln ?x powr (- 1 - e))) powr\n  (- e / 2)\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n         \\<forall>\\<^sub>F x in at_top.\n            ln (b * x) powr (- e / 2) + h x \\<le> f x;\n         \\<forall>\\<^sub>F x in at_top.\n            \\<bar>ln (b * x) powr (- e / 2) + h x\\<bar> < 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from ev2_aux"], ["proof (chain)\npicking this:\n  (\\<And>h.\n      \\<lbrakk>\\<forall>\\<^sub>F x in at_top.\n                  1 + h x\n                  \\<le> (1 +\n                         1 / ln (b * x) *\n                         ln (1 + hb / b * ln x powr (- 1 - e))) powr\n                        (- e / 2);\n       h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain g where g: \"eventually (\\<lambda>x. 1 + g x \\<le> f' x) at_top\" \"g \\<in> o(\\<lambda>x. 1 / ln x)\""], ["proof (prove)\nusing this:\n  (\\<And>h.\n      \\<lbrakk>\\<forall>\\<^sub>F x in at_top.\n                  1 + h x\n                  \\<le> (1 +\n                         1 / ln (b * x) *\n                         ln (1 + hb / b * ln x powr (- 1 - e))) powr\n                        (- e / 2);\n       h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top. 1 + g x \\<le> f' x;\n         g \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding f'_def"], ["proof (prove)\nusing this:\n  (\\<And>h.\n      \\<lbrakk>\\<forall>\\<^sub>F x in at_top.\n                  1 + h x\n                  \\<le> (1 +\n                         1 / ln (b * x) *\n                         ln (1 + hb / b * ln x powr (- 1 - e))) powr\n                        (- e / 2);\n       h \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>\\<forall>\\<^sub>F x in at_top.\n                    1 + g x\n                    \\<le> (1 +\n                           1 / ln (b * x) *\n                           ln (1 + hb / b * ln x powr (- 1 - e))) powr\n                          (- e / 2);\n         g \\<in> o(\\<lambda>x. 1 / ln x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 1 + g x \\<le> f' x\n  g \\<in> o(\\<lambda>x. 1 / ln x)\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n         \\<forall>\\<^sub>F x in at_top.\n            ln (b * x) powr (- e / 2) + h x \\<le> f x;\n         \\<forall>\\<^sub>F x in at_top.\n            \\<bar>ln (b * x) powr (- e / 2) + h x\\<bar> < 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define h where [abs_def]: \"h x = ln (b*x) powr (-e/2) * g x\" for x"], ["proof (state)\nthis:\n  h \\<equiv> \\<lambda>x. ln (b * x) powr (- e / 2) * g x\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n         \\<forall>\\<^sub>F x in at_top.\n            ln (b * x) powr (- e / 2) + h x \\<le> f x;\n         \\<forall>\\<^sub>F x in at_top.\n            \\<bar>ln (b * x) powr (- e / 2) + h x\\<bar> < 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (rule that[of h])"], ["proof (state)\ngoal (3 subgoals):\n 1. h \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n 2. \\<forall>\\<^sub>F x in at_top. ln (b * x) powr (- e / 2) + h x \\<le> f x\n 3. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>ln (b * x) powr (- e / 2) + h x\\<bar> < 1", "from bep g"], ["proof (chain)\npicking this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n  \\<forall>\\<^sub>F x in at_top. 1 + g x \\<le> f' x\n  g \\<in> o(\\<lambda>x. 1 / ln x)", "show \"negl h\""], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n  \\<forall>\\<^sub>F x in at_top. 1 + g x \\<le> f' x\n  g \\<in> o(\\<lambda>x. 1 / ln x)\n\ngoal (1 subgoal):\n 1. h \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "unfolding h_def"], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n  \\<forall>\\<^sub>F x in at_top. 1 + g x \\<le> f' x\n  g \\<in> o(\\<lambda>x. 1 / ln x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. ln (b * x) powr (- e / 2) * g x)\n    \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "by (auto simp: powr_diff elim: landau_o.small_big_trans)"], ["proof (state)\nthis:\n  h \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top. ln (b * x) powr (- e / 2) + h x \\<le> f x\n 2. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>ln (b * x) powr (- e / 2) + h x\\<bar> < 1", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top. ln (b * x) powr (- e / 2) + h x \\<le> f x\n 2. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>ln (b * x) powr (- e / 2) + h x\\<bar> < 1", "from g(2)"], ["proof (chain)\npicking this:\n  g \\<in> o(\\<lambda>x. 1 / ln x)", "have \"g \\<in> o(\\<lambda>x. 1)\""], ["proof (prove)\nusing this:\n  g \\<in> o(\\<lambda>x. 1 / ln x)\n\ngoal (1 subgoal):\n 1. g \\<in> o(\\<lambda>x. 1)", "by (rule landau_o.small_big_trans) simp"], ["proof (state)\nthis:\n  g \\<in> o(\\<lambda>x. 1)\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top. ln (b * x) powr (- e / 2) + h x \\<le> f x\n 2. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>ln (b * x) powr (- e / 2) + h x\\<bar> < 1", "with bep"], ["proof (chain)\npicking this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n  g \\<in> o(\\<lambda>x. 1)", "have \"eventually (\\<lambda>x. \\<bar>ln (b*x) powr (-e/2) * (1 + g x)\\<bar> < 1) at_top\""], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n  g \\<in> o(\\<lambda>x. 1)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>ln (b * x) powr (- e / 2) * (1 + g x)\\<bar> < 1", "by (intro smallo_imp_abs_less_real) simp_all"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>ln (b * x) powr (- e / 2) * (1 + g x)\\<bar> < 1\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top. ln (b * x) powr (- e / 2) + h x \\<le> f x\n 2. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>ln (b * x) powr (- e / 2) + h x\\<bar> < 1", "thus \"eventually (\\<lambda>x. \\<bar>ln (b*x) powr (-e/2) + h x\\<bar> < 1) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>ln (b * x) powr (- e / 2) * (1 + g x)\\<bar> < 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>ln (b * x) powr (- e / 2) + h x\\<bar> < 1", "by (simp add: algebra_simps h_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>ln (b * x) powr (- e / 2) + h x\\<bar> < 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. ln (b * x) powr (- e / 2) + h x \\<le> f x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. ln (b * x) powr (- e / 2) + h x \\<le> f x", "from eventually_gt_at_top[of \"1/b\"] and g(1)"], ["proof (chain)\npicking this:\n  eventually ((<) (1 / b)) at_top\n  \\<forall>\\<^sub>F x in at_top. 1 + g x \\<le> f' x", "show \"eventually (\\<lambda>x. f x \\<ge> ln (b*x) powr (-e/2) + h x) at_top\""], ["proof (prove)\nusing this:\n  eventually ((<) (1 / b)) at_top\n  \\<forall>\\<^sub>F x in at_top. 1 + g x \\<le> f' x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. ln (b * x) powr (- e / 2) + h x \\<le> f x", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 / b < x; 1 + g x \\<le> f' x\\<rbrakk>\n       \\<Longrightarrow> ln (b * x) powr (- e / 2) + h x \\<le> f x", "case (elim x)"], ["proof (state)\nthis:\n  1 / b < x\n  1 + g x \\<le> f' x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 / b < x; 1 + g x \\<le> f' x\\<rbrakk>\n       \\<Longrightarrow> ln (b * x) powr (- e / 2) + h x \\<le> f x", "from bep"], ["proof (chain)\npicking this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb", "have \"b * x + hb * x / ln x powr (1 + e) = b*x * (1 + hb / b * ln x powr (-1 - e))\""], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n\ngoal (1 subgoal):\n 1. b * x + hb * x / ln x powr (1 + e) =\n    b * x * (1 + hb / b * ln x powr (- 1 - e))", "by (simp add: field_simps powr_diff powr_add powr_minus)"], ["proof (state)\nthis:\n  b * x + hb * x / ln x powr (1 + e) =\n  b * x * (1 + hb / b * ln x powr (- 1 - e))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 / b < x; 1 + g x \\<le> f' x\\<rbrakk>\n       \\<Longrightarrow> ln (b * x) powr (- e / 2) + h x \\<le> f x", "also"], ["proof (state)\nthis:\n  b * x + hb * x / ln x powr (1 + e) =\n  b * x * (1 + hb / b * ln x powr (- 1 - e))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 / b < x; 1 + g x \\<le> f' x\\<rbrakk>\n       \\<Longrightarrow> ln (b * x) powr (- e / 2) + h x \\<le> f x", "from elim(1) bep"], ["proof (chain)\npicking this:\n  1 / b < x\n  0 < b\n  b < 1\n  0 < e\n  0 < hb", "have \"ln \\<dots> = ln (b*x) * (1 + 1/ln (b*x) * ln (1 + hb / b * ln x powr (-1-e)))\""], ["proof (prove)\nusing this:\n  1 / b < x\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n\ngoal (1 subgoal):\n 1. ln (b * x * (1 + hb / b * ln x powr (- 1 - e))) =\n    ln (b * x) *\n    (1 + 1 / ln (b * x) * ln (1 + hb / b * ln x powr (- 1 - e)))", "by (subst ln_mult) (simp_all add: add_pos_nonneg field_simps)"], ["proof (state)\nthis:\n  ln (b * x * (1 + hb / b * ln x powr (- 1 - e))) =\n  ln (b * x) * (1 + 1 / ln (b * x) * ln (1 + hb / b * ln x powr (- 1 - e)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 / b < x; 1 + g x \\<le> f' x\\<rbrakk>\n       \\<Longrightarrow> ln (b * x) powr (- e / 2) + h x \\<le> f x", "also"], ["proof (state)\nthis:\n  ln (b * x * (1 + hb / b * ln x powr (- 1 - e))) =\n  ln (b * x) * (1 + 1 / ln (b * x) * ln (1 + hb / b * ln x powr (- 1 - e)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 / b < x; 1 + g x \\<le> f' x\\<rbrakk>\n       \\<Longrightarrow> ln (b * x) powr (- e / 2) + h x \\<le> f x", "from elim(1) bep"], ["proof (chain)\npicking this:\n  1 / b < x\n  0 < b\n  b < 1\n  0 < e\n  0 < hb", "have \"\\<dots> powr (-e/2) = ln (b*x) powr (-e/2) * f' x\""], ["proof (prove)\nusing this:\n  1 / b < x\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n\ngoal (1 subgoal):\n 1. (ln (b * x) *\n     (1 + 1 / ln (b * x) * ln (1 + hb / b * ln x powr (- 1 - e)))) powr\n    (- e / 2) =\n    ln (b * x) powr (- e / 2) * f' x", "by (subst powr_mult) (simp_all add: field_simps f'_def)"], ["proof (state)\nthis:\n  (ln (b * x) *\n   (1 + 1 / ln (b * x) * ln (1 + hb / b * ln x powr (- 1 - e)))) powr\n  (- e / 2) =\n  ln (b * x) powr (- e / 2) * f' x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 / b < x; 1 + g x \\<le> f' x\\<rbrakk>\n       \\<Longrightarrow> ln (b * x) powr (- e / 2) + h x \\<le> f x", "also"], ["proof (state)\nthis:\n  (ln (b * x) *\n   (1 + 1 / ln (b * x) * ln (1 + hb / b * ln x powr (- 1 - e)))) powr\n  (- e / 2) =\n  ln (b * x) powr (- e / 2) * f' x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 / b < x; 1 + g x \\<le> f' x\\<rbrakk>\n       \\<Longrightarrow> ln (b * x) powr (- e / 2) + h x \\<le> f x", "from elim"], ["proof (chain)\npicking this:\n  1 / b < x\n  1 + g x \\<le> f' x", "have \"\\<dots> \\<ge> ln (b*x) powr (-e/2) * (1 + g x)\""], ["proof (prove)\nusing this:\n  1 / b < x\n  1 + g x \\<le> f' x\n\ngoal (1 subgoal):\n 1. ln (b * x) powr (- e / 2) * (1 + g x)\n    \\<le> ln (b * x) powr (- e / 2) * f' x", "by (intro mult_left_mono) simp_all"], ["proof (state)\nthis:\n  ln (b * x) powr (- e / 2) * (1 + g x)\n  \\<le> ln (b * x) powr (- e / 2) * f' x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 / b < x; 1 + g x \\<le> f' x\\<rbrakk>\n       \\<Longrightarrow> ln (b * x) powr (- e / 2) + h x \\<le> f x", "finally"], ["proof (chain)\npicking this:\n  ln (b * x) powr (- e / 2) * (1 + g x)\n  \\<le> ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)", "show \"f x \\<ge> ln (b*x) powr (-e/2) + h x\""], ["proof (prove)\nusing this:\n  ln (b * x) powr (- e / 2) * (1 + g x)\n  \\<le> ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n\ngoal (1 subgoal):\n 1. ln (b * x) powr (- e / 2) + h x \\<le> f x", "by (simp add: f_def h_def algebra_simps)"], ["proof (state)\nthis:\n  ln (b * x) powr (- e / 2) + h x \\<le> f x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. ln (b * x) powr (- e / 2) + h x \\<le> f x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "private"], ["", "lemma ev21:\n  obtains g where\n    \"negl g\"\n    \"eventually (\\<lambda>x. 1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (-e/2) \\<ge>\n         1 + ln (b * x) powr (-e/2) + g x) at_top\"\n    \"eventually (\\<lambda>x. 1 + ln (b * x) powr (-e/2) + g x > 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n         \\<forall>\\<^sub>F x in at_top.\n            1 + ln (b * x) powr (- e / 2) + g x\n            \\<le> 1 +\n                  ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2);\n         \\<forall>\\<^sub>F x in at_top.\n            0 < 1 + ln (b * x) powr (- e / 2) + g x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n         \\<forall>\\<^sub>F x in at_top.\n            1 + ln (b * x) powr (- e / 2) + g x\n            \\<le> 1 +\n                  ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2);\n         \\<forall>\\<^sub>F x in at_top.\n            0 < 1 + ln (b * x) powr (- e / 2) + g x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from ev2"], ["proof (chain)\npicking this:\n  (\\<And>h.\n      \\<lbrakk>h \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n       \\<forall>\\<^sub>F x in at_top.\n          ln (b * x) powr (- e / 2) + h x\n          \\<le> ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2);\n       \\<forall>\\<^sub>F x in at_top.\n          \\<bar>ln (b * x) powr (- e / 2) + h x\\<bar> < 1\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "guess g"], ["proof (prove)\nusing this:\n  (\\<And>h.\n      \\<lbrakk>h \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n       \\<forall>\\<^sub>F x in at_top.\n          ln (b * x) powr (- e / 2) + h x\n          \\<le> ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2);\n       \\<forall>\\<^sub>F x in at_top.\n          \\<bar>ln (b * x) powr (- e / 2) + h x\\<bar> < 1\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n  \\<forall>\\<^sub>F x in at_top.\n     ln (b * x) powr (- e / 2) + g x\n     \\<le> ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>ln (b * x) powr (- e / 2) + g x\\<bar> < 1\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n         \\<forall>\\<^sub>F x in at_top.\n            1 + ln (b * x) powr (- e / 2) + g x\n            \\<le> 1 +\n                  ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2);\n         \\<forall>\\<^sub>F x in at_top.\n            0 < 1 + ln (b * x) powr (- e / 2) + g x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note g = this"], ["proof (state)\nthis:\n  g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n  \\<forall>\\<^sub>F x in at_top.\n     ln (b * x) powr (- e / 2) + g x\n     \\<le> ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>ln (b * x) powr (- e / 2) + g x\\<bar> < 1\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n         \\<forall>\\<^sub>F x in at_top.\n            1 + ln (b * x) powr (- e / 2) + g x\n            \\<le> 1 +\n                  ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2);\n         \\<forall>\\<^sub>F x in at_top.\n            0 < 1 + ln (b * x) powr (- e / 2) + g x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from g(3)"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>ln (b * x) powr (- e / 2) + g x\\<bar> < 1", "have \"eventually (\\<lambda>x. 1 + ln (b * x) powr (-e/2) + g x > 0) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>ln (b * x) powr (- e / 2) + g x\\<bar> < 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 0 < 1 + ln (b * x) powr (- e / 2) + g x", "by eventually_elim simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 0 < 1 + ln (b * x) powr (- e / 2) + g x\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n         \\<forall>\\<^sub>F x in at_top.\n            1 + ln (b * x) powr (- e / 2) + g x\n            \\<le> 1 +\n                  ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2);\n         \\<forall>\\<^sub>F x in at_top.\n            0 < 1 + ln (b * x) powr (- e / 2) + g x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with g(1,2)"], ["proof (chain)\npicking this:\n  g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n  \\<forall>\\<^sub>F x in at_top.\n     ln (b * x) powr (- e / 2) + g x\n     \\<le> ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n  \\<forall>\\<^sub>F x in at_top. 0 < 1 + ln (b * x) powr (- e / 2) + g x", "show ?thesis"], ["proof (prove)\nusing this:\n  g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n  \\<forall>\\<^sub>F x in at_top.\n     ln (b * x) powr (- e / 2) + g x\n     \\<le> ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n  \\<forall>\\<^sub>F x in at_top. 0 < 1 + ln (b * x) powr (- e / 2) + g x\n\ngoal (1 subgoal):\n 1. thesis", "by (intro that[of g]) simp_all"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "private"], ["", "lemma ev22:\n  obtains g where\n    \"negl g\"\n    \"eventually (\\<lambda>x. 1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (-e/2) \\<le>\n         1 - ln (b * x) powr (-e/2) - g x) at_top\"\n    \"eventually (\\<lambda>x. 1 - ln (b * x) powr (-e/2) - g x > 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n         \\<forall>\\<^sub>F x in at_top.\n            1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n            \\<le> 1 - ln (b * x) powr (- e / 2) - g x;\n         \\<forall>\\<^sub>F x in at_top.\n            0 < 1 - ln (b * x) powr (- e / 2) - g x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n         \\<forall>\\<^sub>F x in at_top.\n            1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n            \\<le> 1 - ln (b * x) powr (- e / 2) - g x;\n         \\<forall>\\<^sub>F x in at_top.\n            0 < 1 - ln (b * x) powr (- e / 2) - g x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from ev2"], ["proof (chain)\npicking this:\n  (\\<And>h.\n      \\<lbrakk>h \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n       \\<forall>\\<^sub>F x in at_top.\n          ln (b * x) powr (- e / 2) + h x\n          \\<le> ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2);\n       \\<forall>\\<^sub>F x in at_top.\n          \\<bar>ln (b * x) powr (- e / 2) + h x\\<bar> < 1\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "guess g"], ["proof (prove)\nusing this:\n  (\\<And>h.\n      \\<lbrakk>h \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n       \\<forall>\\<^sub>F x in at_top.\n          ln (b * x) powr (- e / 2) + h x\n          \\<le> ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2);\n       \\<forall>\\<^sub>F x in at_top.\n          \\<bar>ln (b * x) powr (- e / 2) + h x\\<bar> < 1\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n  \\<forall>\\<^sub>F x in at_top.\n     ln (b * x) powr (- e / 2) + g x\n     \\<le> ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>ln (b * x) powr (- e / 2) + g x\\<bar> < 1\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n         \\<forall>\\<^sub>F x in at_top.\n            1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n            \\<le> 1 - ln (b * x) powr (- e / 2) - g x;\n         \\<forall>\\<^sub>F x in at_top.\n            0 < 1 - ln (b * x) powr (- e / 2) - g x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note g = this"], ["proof (state)\nthis:\n  g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n  \\<forall>\\<^sub>F x in at_top.\n     ln (b * x) powr (- e / 2) + g x\n     \\<le> ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>ln (b * x) powr (- e / 2) + g x\\<bar> < 1\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n         \\<forall>\\<^sub>F x in at_top.\n            1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n            \\<le> 1 - ln (b * x) powr (- e / 2) - g x;\n         \\<forall>\\<^sub>F x in at_top.\n            0 < 1 - ln (b * x) powr (- e / 2) - g x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from g(2)"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top.\n     ln (b * x) powr (- e / 2) + g x\n     \\<le> ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)", "have \"eventually (\\<lambda>x. 1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (-e/2) \\<le>\n                                      1 - ln (b * x) powr (-e/2) - g x) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     ln (b * x) powr (- e / 2) + g x\n     \\<le> ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n       \\<le> 1 - ln (b * x) powr (- e / 2) - g x", "by eventually_elim simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n     \\<le> 1 - ln (b * x) powr (- e / 2) - g x\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n         \\<forall>\\<^sub>F x in at_top.\n            1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n            \\<le> 1 - ln (b * x) powr (- e / 2) - g x;\n         \\<forall>\\<^sub>F x in at_top.\n            0 < 1 - ln (b * x) powr (- e / 2) - g x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n     \\<le> 1 - ln (b * x) powr (- e / 2) - g x\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n         \\<forall>\\<^sub>F x in at_top.\n            1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n            \\<le> 1 - ln (b * x) powr (- e / 2) - g x;\n         \\<forall>\\<^sub>F x in at_top.\n            0 < 1 - ln (b * x) powr (- e / 2) - g x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from g(3)"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>ln (b * x) powr (- e / 2) + g x\\<bar> < 1", "have \"eventually (\\<lambda>x. 1 - ln (b * x) powr (-e/2) - g x > 0) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>ln (b * x) powr (- e / 2) + g x\\<bar> < 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 0 < 1 - ln (b * x) powr (- e / 2) - g x", "by eventually_elim simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 0 < 1 - ln (b * x) powr (- e / 2) - g x\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n         \\<forall>\\<^sub>F x in at_top.\n            1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n            \\<le> 1 - ln (b * x) powr (- e / 2) - g x;\n         \\<forall>\\<^sub>F x in at_top.\n            0 < 1 - ln (b * x) powr (- e / 2) - g x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top.\n     1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n     \\<le> 1 - ln (b * x) powr (- e / 2) - g x\n  \\<forall>\\<^sub>F x in at_top. 0 < 1 - ln (b * x) powr (- e / 2) - g x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n     \\<le> 1 - ln (b * x) powr (- e / 2) - g x\n  \\<forall>\\<^sub>F x in at_top. 0 < 1 - ln (b * x) powr (- e / 2) - g x\n\ngoal (1 subgoal):\n 1. thesis", "using g(1)"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n     \\<le> 1 - ln (b * x) powr (- e / 2) - g x\n  \\<forall>\\<^sub>F x in at_top. 0 < 1 - ln (b * x) powr (- e / 2) - g x\n  g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n\ngoal (1 subgoal):\n 1. thesis", "by (intro that[of g]) simp_all"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma asymptotics1:\n  shows \"eventually (\\<lambda>x.\n             (1 + c * inverse b * ln x powr -(1+e)) powr p *\n             (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)) \\<ge>\n             1 + (ln x powr (-e/2))) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       1 + ln x powr (- e / 2)\n       \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n             (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       1 + ln x powr (- e / 2)\n       \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n             (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))", "let ?f = \"\\<lambda>x. (1 + c * inverse b * ln x powr -(1+e)) powr p\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       1 + ln x powr (- e / 2)\n       \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n             (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))", "let ?g = \"\\<lambda>x. 1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       1 + ln x powr (- e / 2)\n       \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n             (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))", "define f where [abs_def]: \"f x = 1 - ?f x\" for x"], ["proof (state)\nthis:\n  f \\<equiv>\n  \\<lambda>x. 1 - (1 + c * inverse b * ln x powr - (1 + e)) powr p\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       1 + ln x powr (- e / 2)\n       \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n             (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))", "from ev1[of c]"], ["proof (chain)\npicking this:\n  (\\<lambda>x. (1 + c * inverse b * ln x powr - (1 + e)) powr p - 1)\n  \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "have \"negl f\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. (1 + c * inverse b * ln x powr - (1 + e)) powr p - 1)\n  \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n\ngoal (1 subgoal):\n 1. f \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "unfolding f_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. (1 + c * inverse b * ln x powr - (1 + e)) powr p - 1)\n  \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. 1 - (1 + c * inverse b * ln x powr - (1 + e)) powr p)\n    \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "by (subst landau_o.small.uminus_in_iff [symmetric]) simp"], ["proof (state)\nthis:\n  f \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       1 + ln x powr (- e / 2)\n       \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n             (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))", "from landau_o.smallD[OF this zero_less_one]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top.\n     norm (f x) \\<le> 1 * norm (ln (b * x) powr - (e / 2 + 1))", "have f: \"eventually (\\<lambda>x. f x \\<le> ln (b*x) powr -(e/2+1)) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     norm (f x) \\<le> 1 * norm (ln (b * x) powr - (e / 2 + 1))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. f x \\<le> ln (b * x) powr - (e / 2 + 1)", "by eventually_elim (simp add: f_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. f x \\<le> ln (b * x) powr - (e / 2 + 1)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       1 + ln x powr (- e / 2)\n       \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n             (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))", "from ev21"], ["proof (chain)\npicking this:\n  (\\<And>g.\n      \\<lbrakk>g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n       \\<forall>\\<^sub>F x in at_top.\n          1 + ln (b * x) powr (- e / 2) + g x\n          \\<le> 1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2);\n       \\<forall>\\<^sub>F x in at_top.\n          0 < 1 + ln (b * x) powr (- e / 2) + g x\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "guess g"], ["proof (prove)\nusing this:\n  (\\<And>g.\n      \\<lbrakk>g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n       \\<forall>\\<^sub>F x in at_top.\n          1 + ln (b * x) powr (- e / 2) + g x\n          \\<le> 1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2);\n       \\<forall>\\<^sub>F x in at_top.\n          0 < 1 + ln (b * x) powr (- e / 2) + g x\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n  \\<forall>\\<^sub>F x in at_top.\n     1 + ln (b * x) powr (- e / 2) + g x\n     \\<le> 1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n  \\<forall>\\<^sub>F x in at_top. 0 < 1 + ln (b * x) powr (- e / 2) + g x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       1 + ln x powr (- e / 2)\n       \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n             (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))", "note g = this"], ["proof (state)\nthis:\n  g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n  \\<forall>\\<^sub>F x in at_top.\n     1 + ln (b * x) powr (- e / 2) + g x\n     \\<le> 1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n  \\<forall>\\<^sub>F x in at_top. 0 < 1 + ln (b * x) powr (- e / 2) + g x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       1 + ln x powr (- e / 2)\n       \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n             (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))", "define h where [abs_def]: \"h x = -g x + f x + f x * ln (b*x) powr (-e/2) + f x * g x\" for x"], ["proof (state)\nthis:\n  h \\<equiv>\n  \\<lambda>x. - g x + f x + f x * ln (b * x) powr (- e / 2) + f x * g x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       1 + ln x powr (- e / 2)\n       \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n             (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))", "have A: \"eventually (\\<lambda>x. ?f x * ?g x \\<ge> 1 + ln (b*x) powr (-e/2) - h x) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       1 + ln (b * x) powr (- e / 2) - h x\n       \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n             (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))", "using g(2,3) f"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     1 + ln (b * x) powr (- e / 2) + g x\n     \\<le> 1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n  \\<forall>\\<^sub>F x in at_top. 0 < 1 + ln (b * x) powr (- e / 2) + g x\n  \\<forall>\\<^sub>F x in at_top. f x \\<le> ln (b * x) powr - (e / 2 + 1)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       1 + ln (b * x) powr (- e / 2) - h x\n       \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n             (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 + ln (b * x) powr (- e / 2) + g x\n                \\<le> 1 +\n                      ln (b * x + hb * x / ln x powr (1 + e)) powr\n                      (- e / 2);\n        0 < 1 + ln (b * x) powr (- e / 2) + g x;\n        f x \\<le> ln (b * x) powr - (e / 2 + 1)\\<rbrakk>\n       \\<Longrightarrow> 1 + ln (b * x) powr (- e / 2) - h x\n                         \\<le> (1 +\n                                c * inverse b * ln x powr - (1 + e)) powr\n                               p *\n                               (1 +\n                                ln (b * x + hb * x / ln x powr (1 + e)) powr\n                                (- e / 2))", "case (elim x)"], ["proof (state)\nthis:\n  1 + ln (b * x) powr (- e / 2) + g x\n  \\<le> 1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n  0 < 1 + ln (b * x) powr (- e / 2) + g x\n  f x \\<le> ln (b * x) powr - (e / 2 + 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 + ln (b * x) powr (- e / 2) + g x\n                \\<le> 1 +\n                      ln (b * x + hb * x / ln x powr (1 + e)) powr\n                      (- e / 2);\n        0 < 1 + ln (b * x) powr (- e / 2) + g x;\n        f x \\<le> ln (b * x) powr - (e / 2 + 1)\\<rbrakk>\n       \\<Longrightarrow> 1 + ln (b * x) powr (- e / 2) - h x\n                         \\<le> (1 +\n                                c * inverse b * ln x powr - (1 + e)) powr\n                               p *\n                               (1 +\n                                ln (b * x + hb * x / ln x powr (1 + e)) powr\n                                (- e / 2))", "let ?t = \"ln (b*x) powr (-e/2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 + ln (b * x) powr (- e / 2) + g x\n                \\<le> 1 +\n                      ln (b * x + hb * x / ln x powr (1 + e)) powr\n                      (- e / 2);\n        0 < 1 + ln (b * x) powr (- e / 2) + g x;\n        f x \\<le> ln (b * x) powr - (e / 2 + 1)\\<rbrakk>\n       \\<Longrightarrow> 1 + ln (b * x) powr (- e / 2) - h x\n                         \\<le> (1 +\n                                c * inverse b * ln x powr - (1 + e)) powr\n                               p *\n                               (1 +\n                                ln (b * x + hb * x / ln x powr (1 + e)) powr\n                                (- e / 2))", "have \"1 + ?t - h x = (1 - f x) * (1 + ln (b*x) powr (-e/2) + g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + ln (b * x) powr (- e / 2) - h x =\n    (1 - f x) * (1 + ln (b * x) powr (- e / 2) + g x)", "by (simp add: algebra_simps h_def)"], ["proof (state)\nthis:\n  1 + ln (b * x) powr (- e / 2) - h x =\n  (1 - f x) * (1 + ln (b * x) powr (- e / 2) + g x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 + ln (b * x) powr (- e / 2) + g x\n                \\<le> 1 +\n                      ln (b * x + hb * x / ln x powr (1 + e)) powr\n                      (- e / 2);\n        0 < 1 + ln (b * x) powr (- e / 2) + g x;\n        f x \\<le> ln (b * x) powr - (e / 2 + 1)\\<rbrakk>\n       \\<Longrightarrow> 1 + ln (b * x) powr (- e / 2) - h x\n                         \\<le> (1 +\n                                c * inverse b * ln x powr - (1 + e)) powr\n                               p *\n                               (1 +\n                                ln (b * x + hb * x / ln x powr (1 + e)) powr\n                                (- e / 2))", "also"], ["proof (state)\nthis:\n  1 + ln (b * x) powr (- e / 2) - h x =\n  (1 - f x) * (1 + ln (b * x) powr (- e / 2) + g x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 + ln (b * x) powr (- e / 2) + g x\n                \\<le> 1 +\n                      ln (b * x + hb * x / ln x powr (1 + e)) powr\n                      (- e / 2);\n        0 < 1 + ln (b * x) powr (- e / 2) + g x;\n        f x \\<le> ln (b * x) powr - (e / 2 + 1)\\<rbrakk>\n       \\<Longrightarrow> 1 + ln (b * x) powr (- e / 2) - h x\n                         \\<le> (1 +\n                                c * inverse b * ln x powr - (1 + e)) powr\n                               p *\n                               (1 +\n                                ln (b * x + hb * x / ln x powr (1 + e)) powr\n                                (- e / 2))", "from elim"], ["proof (chain)\npicking this:\n  1 + ln (b * x) powr (- e / 2) + g x\n  \\<le> 1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n  0 < 1 + ln (b * x) powr (- e / 2) + g x\n  f x \\<le> ln (b * x) powr - (e / 2 + 1)", "have \"?f x * ?g x \\<ge> (1 - f x) * (1 + ln (b*x) powr (-e/2) + g x)\""], ["proof (prove)\nusing this:\n  1 + ln (b * x) powr (- e / 2) + g x\n  \\<le> 1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n  0 < 1 + ln (b * x) powr (- e / 2) + g x\n  f x \\<le> ln (b * x) powr - (e / 2 + 1)\n\ngoal (1 subgoal):\n 1. (1 - f x) * (1 + ln (b * x) powr (- e / 2) + g x)\n    \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n          (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))", "by (intro mult_mono[OF _ elim(1)]) (simp_all add: algebra_simps f_def)"], ["proof (state)\nthis:\n  (1 - f x) * (1 + ln (b * x) powr (- e / 2) + g x)\n  \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n        (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 + ln (b * x) powr (- e / 2) + g x\n                \\<le> 1 +\n                      ln (b * x + hb * x / ln x powr (1 + e)) powr\n                      (- e / 2);\n        0 < 1 + ln (b * x) powr (- e / 2) + g x;\n        f x \\<le> ln (b * x) powr - (e / 2 + 1)\\<rbrakk>\n       \\<Longrightarrow> 1 + ln (b * x) powr (- e / 2) - h x\n                         \\<le> (1 +\n                                c * inverse b * ln x powr - (1 + e)) powr\n                               p *\n                               (1 +\n                                ln (b * x + hb * x / ln x powr (1 + e)) powr\n                                (- e / 2))", "finally"], ["proof (chain)\npicking this:\n  1 + ln (b * x) powr (- e / 2) - h x\n  \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n        (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))", "show \"?f x * ?g x \\<ge> 1 + ln (b*x) powr (-e/2) - h x\""], ["proof (prove)\nusing this:\n  1 + ln (b * x) powr (- e / 2) - h x\n  \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n        (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n\ngoal (1 subgoal):\n 1. 1 + ln (b * x) powr (- e / 2) - h x\n    \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n          (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))", "."], ["proof (state)\nthis:\n  1 + ln (b * x) powr (- e / 2) - h x\n  \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n        (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     1 + ln (b * x) powr (- e / 2) - h x\n     \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n           (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       1 + ln x powr (- e / 2)\n       \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n             (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))", "from bep \\<open>negl f\\<close> g(1)"], ["proof (chain)\npicking this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n  f \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n  g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "have \"negl h\""], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n  f \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n  g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n\ngoal (1 subgoal):\n 1. h \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "unfolding h_def"], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n  f \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n  g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. - g x + f x + f x * ln (b * x) powr (- e / 2) + f x * g x)\n    \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "by (fastforce intro!: sum_in_smallo landau_o.small.mult simp: powr_diff\n                  intro: landau_o.small_trans)+"], ["proof (state)\nthis:\n  h \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       1 + ln x powr (- e / 2)\n       \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n             (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))", "from ev4[OF this] A"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top.\n     h x \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)\n  \\<forall>\\<^sub>F x in at_top.\n     1 + ln (b * x) powr (- e / 2) - h x\n     \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n           (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     h x \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)\n  \\<forall>\\<^sub>F x in at_top.\n     1 + ln (b * x) powr (- e / 2) - h x\n     \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n           (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       1 + ln x powr (- e / 2)\n       \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n             (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))", "by eventually_elim simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     1 + ln x powr (- e / 2)\n     \\<le> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n           (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma asymptotics2:\n  shows \"eventually (\\<lambda>x.\n             (1 + c * inverse b * ln x powr -(1+e)) powr p *\n             (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)) \\<le>\n             1 - (ln x powr (-e/2))) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln x powr (- e / 2)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln x powr (- e / 2)", "let ?f = \"\\<lambda>x. (1 + c * inverse b * ln x powr -(1+e)) powr p\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln x powr (- e / 2)", "let ?g = \"\\<lambda>x. 1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln x powr (- e / 2)", "define f where [abs_def]: \"f x = 1 - ?f x\" for x"], ["proof (state)\nthis:\n  f \\<equiv>\n  \\<lambda>x. 1 - (1 + c * inverse b * ln x powr - (1 + e)) powr p\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln x powr (- e / 2)", "from ev1[of c]"], ["proof (chain)\npicking this:\n  (\\<lambda>x. (1 + c * inverse b * ln x powr - (1 + e)) powr p - 1)\n  \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "have \"negl f\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. (1 + c * inverse b * ln x powr - (1 + e)) powr p - 1)\n  \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n\ngoal (1 subgoal):\n 1. f \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "unfolding f_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. (1 + c * inverse b * ln x powr - (1 + e)) powr p - 1)\n  \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. 1 - (1 + c * inverse b * ln x powr - (1 + e)) powr p)\n    \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "by (subst landau_o.small.uminus_in_iff [symmetric]) simp"], ["proof (state)\nthis:\n  f \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln x powr (- e / 2)", "from landau_o.smallD[OF this zero_less_one]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top.\n     norm (f x) \\<le> 1 * norm (ln (b * x) powr - (e / 2 + 1))", "have f: \"eventually (\\<lambda>x. f x \\<le> ln (b*x) powr -(e/2+1)) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     norm (f x) \\<le> 1 * norm (ln (b * x) powr - (e / 2 + 1))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. f x \\<le> ln (b * x) powr - (e / 2 + 1)", "by eventually_elim (simp add: f_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. f x \\<le> ln (b * x) powr - (e / 2 + 1)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln x powr (- e / 2)", "from ev22"], ["proof (chain)\npicking this:\n  (\\<And>g.\n      \\<lbrakk>g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n       \\<forall>\\<^sub>F x in at_top.\n          1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n          \\<le> 1 - ln (b * x) powr (- e / 2) - g x;\n       \\<forall>\\<^sub>F x in at_top.\n          0 < 1 - ln (b * x) powr (- e / 2) - g x\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "guess g"], ["proof (prove)\nusing this:\n  (\\<And>g.\n      \\<lbrakk>g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1));\n       \\<forall>\\<^sub>F x in at_top.\n          1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n          \\<le> 1 - ln (b * x) powr (- e / 2) - g x;\n       \\<forall>\\<^sub>F x in at_top.\n          0 < 1 - ln (b * x) powr (- e / 2) - g x\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n  \\<forall>\\<^sub>F x in at_top.\n     1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n     \\<le> 1 - ln (b * x) powr (- e / 2) - g x\n  \\<forall>\\<^sub>F x in at_top. 0 < 1 - ln (b * x) powr (- e / 2) - g x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln x powr (- e / 2)", "note g = this"], ["proof (state)\nthis:\n  g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n  \\<forall>\\<^sub>F x in at_top.\n     1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n     \\<le> 1 - ln (b * x) powr (- e / 2) - g x\n  \\<forall>\\<^sub>F x in at_top. 0 < 1 - ln (b * x) powr (- e / 2) - g x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln x powr (- e / 2)", "define h where [abs_def]: \"h x = -g x - f x + f x * ln (b*x) powr (-e/2) + f x * g x\" for x"], ["proof (state)\nthis:\n  h \\<equiv>\n  \\<lambda>x. - g x - f x + f x * ln (b * x) powr (- e / 2) + f x * g x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln x powr (- e / 2)", "have \"((\\<lambda>x. ln (b * x + hb * x / ln x powr (1 + e)) powr - (e / 2)) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         ln (b * x + hb * x / ln x powr (1 + e)) powr\n         - (e / 2)) \\<longlongrightarrow>\n     0)\n     at_top", "apply (insert bep, intro tendsto_neg_powr, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < b; b < 1; 0 < e; 0 < hb\\<rbrakk>\n    \\<Longrightarrow> LIM x at_top.\n                         ln (b * x + hb * x / ln x powr (1 + e)) :> at_top", "apply (rule filterlim_compose[OF ln_at_top])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < b; b < 1; 0 < e; 0 < hb\\<rbrakk>\n    \\<Longrightarrow> LIM x at_top.\n                         b * x + hb * x / ln x powr (1 + e) :> at_top", "apply (rule filterlim_at_top_smallomega_1, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < b; b < 1; 0 < e; 0 < hb\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at_top.\n                         0 < b * x + hb * x / ln x powr (1 + e)", "using eventually_gt_at_top[of \"max 1 (1/b)\"]"], ["proof (prove)\nusing this:\n  eventually ((<) (max 1 (1 / b))) at_top\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < b; b < 1; 0 < e; 0 < hb\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in at_top.\n                         0 < b * x + hb * x / ln x powr (1 + e)", "apply (auto elim!: eventually_mono intro!: add_pos_nonneg simp: field_simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       ln (b * x + hb * x / ln x powr (1 + e)) powr\n       - (e / 2)) \\<longlongrightarrow>\n   0)\n   at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln x powr (- e / 2)", "hence ev_g: \"eventually (\\<lambda>x. \\<bar>1 - ?g x\\<bar> < 1) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       ln (b * x + hb * x / ln x powr (1 + e)) powr\n       - (e / 2)) \\<longlongrightarrow>\n   0)\n   at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>1 -\n             (1 -\n              ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\\<bar>\n       < 1", "by (intro smallo_imp_abs_less_real smalloI_tendsto) simp_all"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>1 -\n           (1 -\n            ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\\<bar>\n     < 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln x powr (- e / 2)", "have A: \"eventually (\\<lambda>x. ?f x * ?g x \\<le> 1 - ln (b*x) powr (-e/2) + h x) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln (b * x) powr (- e / 2) + h x", "using g(2,3) ev_g f"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n     \\<le> 1 - ln (b * x) powr (- e / 2) - g x\n  \\<forall>\\<^sub>F x in at_top. 0 < 1 - ln (b * x) powr (- e / 2) - g x\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>1 -\n           (1 -\n            ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\\<bar>\n     < 1\n  \\<forall>\\<^sub>F x in at_top. f x \\<le> ln (b * x) powr - (e / 2 + 1)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln (b * x) powr (- e / 2) + h x", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n                \\<le> 1 - ln (b * x) powr (- e / 2) - g x;\n        0 < 1 - ln (b * x) powr (- e / 2) - g x;\n        \\<bar>1 -\n              (1 -\n               ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\\<bar>\n        < 1;\n        f x \\<le> ln (b * x) powr - (e / 2 + 1)\\<rbrakk>\n       \\<Longrightarrow> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n                         (1 -\n                          ln (b * x + hb * x / ln x powr (1 + e)) powr\n                          (- e / 2))\n                         \\<le> 1 - ln (b * x) powr (- e / 2) + h x", "case (elim x)"], ["proof (state)\nthis:\n  1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n  \\<le> 1 - ln (b * x) powr (- e / 2) - g x\n  0 < 1 - ln (b * x) powr (- e / 2) - g x\n  \\<bar>1 -\n        (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\\<bar>\n  < 1\n  f x \\<le> ln (b * x) powr - (e / 2 + 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n                \\<le> 1 - ln (b * x) powr (- e / 2) - g x;\n        0 < 1 - ln (b * x) powr (- e / 2) - g x;\n        \\<bar>1 -\n              (1 -\n               ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\\<bar>\n        < 1;\n        f x \\<le> ln (b * x) powr - (e / 2 + 1)\\<rbrakk>\n       \\<Longrightarrow> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n                         (1 -\n                          ln (b * x + hb * x / ln x powr (1 + e)) powr\n                          (- e / 2))\n                         \\<le> 1 - ln (b * x) powr (- e / 2) + h x", "let ?t = \"ln (b*x) powr (-e/2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n                \\<le> 1 - ln (b * x) powr (- e / 2) - g x;\n        0 < 1 - ln (b * x) powr (- e / 2) - g x;\n        \\<bar>1 -\n              (1 -\n               ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\\<bar>\n        < 1;\n        f x \\<le> ln (b * x) powr - (e / 2 + 1)\\<rbrakk>\n       \\<Longrightarrow> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n                         (1 -\n                          ln (b * x + hb * x / ln x powr (1 + e)) powr\n                          (- e / 2))\n                         \\<le> 1 - ln (b * x) powr (- e / 2) + h x", "from elim"], ["proof (chain)\npicking this:\n  1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n  \\<le> 1 - ln (b * x) powr (- e / 2) - g x\n  0 < 1 - ln (b * x) powr (- e / 2) - g x\n  \\<bar>1 -\n        (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\\<bar>\n  < 1\n  f x \\<le> ln (b * x) powr - (e / 2 + 1)", "have \"?f x * ?g x \\<le> (1 - f x) * (1 - ln (b*x) powr (-e/2) - g x)\""], ["proof (prove)\nusing this:\n  1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n  \\<le> 1 - ln (b * x) powr (- e / 2) - g x\n  0 < 1 - ln (b * x) powr (- e / 2) - g x\n  \\<bar>1 -\n        (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\\<bar>\n  < 1\n  f x \\<le> ln (b * x) powr - (e / 2 + 1)\n\ngoal (1 subgoal):\n 1. (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n    (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n    \\<le> (1 - f x) * (1 - ln (b * x) powr (- e / 2) - g x)", "by (intro mult_mono) (simp_all add: f_def)"], ["proof (state)\nthis:\n  (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n  (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n  \\<le> (1 - f x) * (1 - ln (b * x) powr (- e / 2) - g x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n                \\<le> 1 - ln (b * x) powr (- e / 2) - g x;\n        0 < 1 - ln (b * x) powr (- e / 2) - g x;\n        \\<bar>1 -\n              (1 -\n               ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\\<bar>\n        < 1;\n        f x \\<le> ln (b * x) powr - (e / 2 + 1)\\<rbrakk>\n       \\<Longrightarrow> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n                         (1 -\n                          ln (b * x + hb * x / ln x powr (1 + e)) powr\n                          (- e / 2))\n                         \\<le> 1 - ln (b * x) powr (- e / 2) + h x", "also"], ["proof (state)\nthis:\n  (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n  (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n  \\<le> (1 - f x) * (1 - ln (b * x) powr (- e / 2) - g x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n                \\<le> 1 - ln (b * x) powr (- e / 2) - g x;\n        0 < 1 - ln (b * x) powr (- e / 2) - g x;\n        \\<bar>1 -\n              (1 -\n               ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\\<bar>\n        < 1;\n        f x \\<le> ln (b * x) powr - (e / 2 + 1)\\<rbrakk>\n       \\<Longrightarrow> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n                         (1 -\n                          ln (b * x + hb * x / ln x powr (1 + e)) powr\n                          (- e / 2))\n                         \\<le> 1 - ln (b * x) powr (- e / 2) + h x", "have \"... = 1 - ?t + h x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - f x) * (1 - ln (b * x) powr (- e / 2) - g x) =\n    1 - ln (b * x) powr (- e / 2) + h x", "by (simp add: algebra_simps h_def)"], ["proof (state)\nthis:\n  (1 - f x) * (1 - ln (b * x) powr (- e / 2) - g x) =\n  1 - ln (b * x) powr (- e / 2) + h x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)\n                \\<le> 1 - ln (b * x) powr (- e / 2) - g x;\n        0 < 1 - ln (b * x) powr (- e / 2) - g x;\n        \\<bar>1 -\n              (1 -\n               ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\\<bar>\n        < 1;\n        f x \\<le> ln (b * x) powr - (e / 2 + 1)\\<rbrakk>\n       \\<Longrightarrow> (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n                         (1 -\n                          ln (b * x + hb * x / ln x powr (1 + e)) powr\n                          (- e / 2))\n                         \\<le> 1 - ln (b * x) powr (- e / 2) + h x", "finally"], ["proof (chain)\npicking this:\n  (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n  (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n  \\<le> 1 - ln (b * x) powr (- e / 2) + h x", "show \"?f x * ?g x \\<le> 1 - ln (b*x) powr (-e/2) + h x\""], ["proof (prove)\nusing this:\n  (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n  (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n  \\<le> 1 - ln (b * x) powr (- e / 2) + h x\n\ngoal (1 subgoal):\n 1. (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n    (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n    \\<le> 1 - ln (b * x) powr (- e / 2) + h x", "."], ["proof (state)\nthis:\n  (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n  (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n  \\<le> 1 - ln (b * x) powr (- e / 2) + h x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n     (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n     \\<le> 1 - ln (b * x) powr (- e / 2) + h x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln x powr (- e / 2)", "from bep \\<open>negl f\\<close> g(1)"], ["proof (chain)\npicking this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n  f \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n  g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "have \"negl h\""], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n  f \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n  g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n\ngoal (1 subgoal):\n 1. h \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "unfolding h_def"], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n  f \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n  g \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. - g x - f x + f x * ln (b * x) powr (- e / 2) + f x * g x)\n    \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))", "by (fastforce intro!: sum_in_smallo landau_o.small.mult simp: powr_diff\n                  intro: landau_o.small_trans)+"], ["proof (state)\nthis:\n  h \\<in> o(\\<lambda>x. ln (b * x) powr - (e / 2 + 1))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln x powr (- e / 2)", "from ev4[OF this] A"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top.\n     h x \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)\n  \\<forall>\\<^sub>F x in at_top.\n     (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n     (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n     \\<le> 1 - ln (b * x) powr (- e / 2) + h x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     h x \\<le> ln (b * x) powr (- e / 2) - ln x powr (- e / 2)\n  \\<forall>\\<^sub>F x in at_top.\n     (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n     (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n     \\<le> 1 - ln (b * x) powr (- e / 2) + h x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln x powr (- e / 2)", "by eventually_elim simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     (1 + c * inverse b * ln x powr - (1 + e)) powr p *\n     (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n     \\<le> 1 - ln x powr (- e / 2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma asymptotics3: \"eventually (\\<lambda>x. (1 + (ln x powr (-e/2))) / 2 \\<le> 1) at_top\"\n  (is \"eventually (\\<lambda>x. ?f x \\<le> 1) _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. (1 + ln x powr (- e / 2)) / 2 \\<le> 1", "proof (rule eventually_mp[OF always_eventually], clarify)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. ?P x \\<Longrightarrow> (1 + ln x powr (- e / 2)) / 2 \\<le> 1\n 2. eventually ?P at_top", "from bep"], ["proof (chain)\npicking this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb", "have \"(?f \\<longlongrightarrow> 1/2) at_top\""], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (1 + ln x powr (- e / 2)) / 2) \\<longlongrightarrow>\n     1 / 2)\n     at_top", "by (force intro: tendsto_eq_intros tendsto_neg_powr ln_at_top)"], ["proof (state)\nthis:\n  ((\\<lambda>x. (1 + ln x powr (- e / 2)) / 2) \\<longlongrightarrow> 1 / 2)\n   at_top\n\ngoal (2 subgoals):\n 1. \\<And>x. ?P x \\<Longrightarrow> (1 + ln x powr (- e / 2)) / 2 \\<le> 1\n 2. eventually ?P at_top", "hence \"\\<And>e. e>0 \\<Longrightarrow> eventually (\\<lambda>x. \\<bar>?f x - 0.5\\<bar> < e) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. (1 + ln x powr (- e / 2)) / 2) \\<longlongrightarrow> 1 / 2)\n   at_top\n\ngoal (1 subgoal):\n 1. \\<And>ea.\n       0 < ea \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in at_top.\n          \\<bar>(1 + ln x powr (- e / 2)) / 2 - 5 / 10\\<bar> < ea", "by (subst (asm) tendsto_iff) (simp add: dist_real_def)"], ["proof (state)\nthis:\n  0 < ?e \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>(1 + ln x powr (- e / 2)) / 2 - 5 / 10\\<bar> < ?e\n\ngoal (2 subgoals):\n 1. \\<And>x. ?P x \\<Longrightarrow> (1 + ln x powr (- e / 2)) / 2 \\<le> 1\n 2. eventually ?P at_top", "from this[of \"0.5\"]"], ["proof (chain)\npicking this:\n  0 < 5 / 10 \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>(1 + ln x powr (- e / 2)) / 2 - 5 / 10\\<bar> < 5 / 10", "show \"eventually (\\<lambda>x. \\<bar>?f x - 0.5\\<bar> < 0.5) at_top\""], ["proof (prove)\nusing this:\n  0 < 5 / 10 \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>(1 + ln x powr (- e / 2)) / 2 - 5 / 10\\<bar> < 5 / 10\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(1 + ln x powr (- e / 2)) / 2 - 5 / 10\\<bar> < 5 / 10", "by simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>(1 + ln x powr (- e / 2)) / 2 - 5 / 10\\<bar> < 5 / 10\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<bar>(1 + ln x powr (- e / 2)) / 2 - 5 / 10\\<bar>\n       < 5 / 10 \\<Longrightarrow>\n       (1 + ln x powr (- e / 2)) / 2 \\<le> 1", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<bar>(1 + ln x powr (- e / 2)) / 2 - 5 / 10\\<bar>\n       < 5 / 10 \\<Longrightarrow>\n       (1 + ln x powr (- e / 2)) / 2 \\<le> 1", "assume \"\\<bar>?f x - 0.5\\<bar> < 0.5\""], ["proof (state)\nthis:\n  \\<bar>(1 + ln x powr (- e / 2)) / 2 - 5 / 10\\<bar> < 5 / 10\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<bar>(1 + ln x powr (- e / 2)) / 2 - 5 / 10\\<bar>\n       < 5 / 10 \\<Longrightarrow>\n       (1 + ln x powr (- e / 2)) / 2 \\<le> 1", "thus \"?f x \\<le> 1\""], ["proof (prove)\nusing this:\n  \\<bar>(1 + ln x powr (- e / 2)) / 2 - 5 / 10\\<bar> < 5 / 10\n\ngoal (1 subgoal):\n 1. (1 + ln x powr (- e / 2)) / 2 \\<le> 1", "by simp"], ["proof (state)\nthis:\n  (1 + ln x powr (- e / 2)) / 2 \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma asymptotics4: \"eventually (\\<lambda>x. (1 - (ln x powr (-e/2))) * 2 \\<ge> 1) at_top\"\n  (is \"eventually (\\<lambda>x. ?f x \\<ge> 1) _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 1 \\<le> (1 - ln x powr (- e / 2)) * 2", "proof (rule eventually_mp[OF always_eventually], clarify)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. ?P x \\<Longrightarrow> 1 \\<le> (1 - ln x powr (- e / 2)) * 2\n 2. eventually ?P at_top", "from bep"], ["proof (chain)\npicking this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb", "have \"(?f \\<longlongrightarrow> 2) at_top\""], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (1 - ln x powr (- e / 2)) * 2) \\<longlongrightarrow> 2)\n     at_top", "by (force intro: tendsto_eq_intros tendsto_neg_powr ln_at_top)"], ["proof (state)\nthis:\n  ((\\<lambda>x. (1 - ln x powr (- e / 2)) * 2) \\<longlongrightarrow> 2)\n   at_top\n\ngoal (2 subgoals):\n 1. \\<And>x. ?P x \\<Longrightarrow> 1 \\<le> (1 - ln x powr (- e / 2)) * 2\n 2. eventually ?P at_top", "hence \"\\<And>e. e>0 \\<Longrightarrow> eventually (\\<lambda>x. \\<bar>?f x - 2\\<bar> < e) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. (1 - ln x powr (- e / 2)) * 2) \\<longlongrightarrow> 2)\n   at_top\n\ngoal (1 subgoal):\n 1. \\<And>ea.\n       0 < ea \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in at_top.\n          \\<bar>(1 - ln x powr (- e / 2)) * 2 - 2\\<bar> < ea", "by (subst (asm) tendsto_iff) (simp add: dist_real_def)"], ["proof (state)\nthis:\n  0 < ?e \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>(1 - ln x powr (- e / 2)) * 2 - 2\\<bar> < ?e\n\ngoal (2 subgoals):\n 1. \\<And>x. ?P x \\<Longrightarrow> 1 \\<le> (1 - ln x powr (- e / 2)) * 2\n 2. eventually ?P at_top", "from this[of 1]"], ["proof (chain)\npicking this:\n  0 < 1 \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>(1 - ln x powr (- e / 2)) * 2 - 2\\<bar> < 1", "show \"eventually (\\<lambda>x. \\<bar>?f x - 2\\<bar> < 1) at_top\""], ["proof (prove)\nusing this:\n  0 < 1 \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>(1 - ln x powr (- e / 2)) * 2 - 2\\<bar> < 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(1 - ln x powr (- e / 2)) * 2 - 2\\<bar> < 1", "by simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>(1 - ln x powr (- e / 2)) * 2 - 2\\<bar> < 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<bar>(1 - ln x powr (- e / 2)) * 2 - 2\\<bar> < 1 \\<Longrightarrow>\n       1 \\<le> (1 - ln x powr (- e / 2)) * 2", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<bar>(1 - ln x powr (- e / 2)) * 2 - 2\\<bar> < 1 \\<Longrightarrow>\n       1 \\<le> (1 - ln x powr (- e / 2)) * 2", "assume \"\\<bar>?f x - 2\\<bar> < 1\""], ["proof (state)\nthis:\n  \\<bar>(1 - ln x powr (- e / 2)) * 2 - 2\\<bar> < 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<bar>(1 - ln x powr (- e / 2)) * 2 - 2\\<bar> < 1 \\<Longrightarrow>\n       1 \\<le> (1 - ln x powr (- e / 2)) * 2", "thus \"?f x \\<ge> 1\""], ["proof (prove)\nusing this:\n  \\<bar>(1 - ln x powr (- e / 2)) * 2 - 2\\<bar> < 1\n\ngoal (1 subgoal):\n 1. 1 \\<le> (1 - ln x powr (- e / 2)) * 2", "by simp"], ["proof (state)\nthis:\n  1 \\<le> (1 - ln x powr (- e / 2)) * 2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma asymptotics5: \"eventually (\\<lambda>x. ln (b*x - hb*x*ln x powr -(1+e)) powr (-e/2) < 1) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln (b * x - hb * x * ln x powr - (1 + e)) powr (- e / 2) < 1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln (b * x - hb * x * ln x powr - (1 + e)) powr (- e / 2) < 1", "from bep"], ["proof (chain)\npicking this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb", "have \"((\\<lambda>x. b - hb * ln x powr -(1+e)) \\<longlongrightarrow> b - 0) at_top\""], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. b - hb * ln x powr - (1 + e)) \\<longlongrightarrow> b - 0)\n     at_top", "by (intro tendsto_intros tendsto_mult_right_zero tendsto_neg_powr ln_at_top) simp_all"], ["proof (state)\nthis:\n  ((\\<lambda>x. b - hb * ln x powr - (1 + e)) \\<longlongrightarrow> b - 0)\n   at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln (b * x - hb * x * ln x powr - (1 + e)) powr (- e / 2) < 1", "hence \"LIM x at_top. (b - hb * ln x powr -(1+e)) * x :> at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. b - hb * ln x powr - (1 + e)) \\<longlongrightarrow> b - 0)\n   at_top\n\ngoal (1 subgoal):\n 1. LIM x at_top. (b - hb * ln x powr - (1 + e)) * x :> at_top", "by (rule filterlim_tendsto_pos_mult_at_top[OF _ _ filterlim_ident], insert bep) simp_all"], ["proof (state)\nthis:\n  LIM x at_top. (b - hb * ln x powr - (1 + e)) * x :> at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln (b * x - hb * x * ln x powr - (1 + e)) powr (- e / 2) < 1", "also"], ["proof (state)\nthis:\n  LIM x at_top. (b - hb * ln x powr - (1 + e)) * x :> at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln (b * x - hb * x * ln x powr - (1 + e)) powr (- e / 2) < 1", "have \"(\\<lambda>x. (b - hb * ln x powr -(1+e)) * x) = (\\<lambda>x. b*x - hb*x*ln x powr -(1+e))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (b - hb * ln x powr - (1 + e)) * x) =\n    (\\<lambda>x. b * x - hb * x * ln x powr - (1 + e))", "by (intro ext) (simp add: algebra_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x. (b - hb * ln x powr - (1 + e)) * x) =\n  (\\<lambda>x. b * x - hb * x * ln x powr - (1 + e))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln (b * x - hb * x * ln x powr - (1 + e)) powr (- e / 2) < 1", "finally"], ["proof (chain)\npicking this:\n  LIM x at_top. b * x - hb * x * ln x powr - (1 + e) :> at_top", "have \"filterlim ... at_top at_top\""], ["proof (prove)\nusing this:\n  LIM x at_top. b * x - hb * x * ln x powr - (1 + e) :> at_top\n\ngoal (1 subgoal):\n 1. LIM x at_top. b * x - hb * x * ln x powr - (1 + e) :> at_top", "."], ["proof (state)\nthis:\n  LIM x at_top. b * x - hb * x * ln x powr - (1 + e) :> at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln (b * x - hb * x * ln x powr - (1 + e)) powr (- e / 2) < 1", "with bep"], ["proof (chain)\npicking this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n  LIM x at_top. b * x - hb * x * ln x powr - (1 + e) :> at_top", "have \"((\\<lambda>x. ln (b*x - hb*x*ln x powr -(1+e)) powr -(e/2)) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n  LIM x at_top. b * x - hb * x * ln x powr - (1 + e) :> at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         ln (b * x - hb * x * ln x powr - (1 + e)) powr\n         - (e / 2)) \\<longlongrightarrow>\n     0)\n     at_top", "by (intro tendsto_neg_powr filterlim_compose[OF ln_at_top]) simp_all"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       ln (b * x - hb * x * ln x powr - (1 + e)) powr\n       - (e / 2)) \\<longlongrightarrow>\n   0)\n   at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln (b * x - hb * x * ln x powr - (1 + e)) powr (- e / 2) < 1", "hence \"eventually (\\<lambda>x. \\<bar>ln (b*x - hb*x*ln x powr -(1+e)) powr (-e/2)\\<bar> < 1) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       ln (b * x - hb * x * ln x powr - (1 + e)) powr\n       - (e / 2)) \\<longlongrightarrow>\n   0)\n   at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>ln (b * x - hb * x * ln x powr - (1 + e)) powr (- e / 2)\\<bar>\n       < 1", "by (subst (asm) tendsto_iff) (simp add: dist_real_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>ln (b * x - hb * x * ln x powr - (1 + e)) powr (- e / 2)\\<bar>\n     < 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln (b * x - hb * x * ln x powr - (1 + e)) powr (- e / 2) < 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>ln (b * x - hb * x * ln x powr - (1 + e)) powr (- e / 2)\\<bar>\n     < 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln (b * x - hb * x * ln x powr - (1 + e)) powr (- e / 2) < 1", "by simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     ln (b * x - hb * x * ln x powr - (1 + e)) powr (- e / 2) < 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma asymptotics6: \"eventually (\\<lambda>x. hb / ln x powr (1 + e) < b/2) at_top\"\n  and asymptotics7: \"eventually (\\<lambda>x. hb / ln x powr (1 + e) < (1 - b) / 2) at_top\"\n  and asymptotics8: \"eventually (\\<lambda>x. x*(1 - b - hb / ln x powr (1 + e)) > 1) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. hb / ln x powr (1 + e) < b / 2 &&&\n    \\<forall>\\<^sub>F x in at_top. hb / ln x powr (1 + e) < (1 - b) / 2 &&&\n    \\<forall>\\<^sub>F x in at_top. 1 < x * (1 - b - hb / ln x powr (1 + e))", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top. hb / ln x powr (1 + e) < b / 2\n 2. \\<forall>\\<^sub>F x in at_top. hb / ln x powr (1 + e) < (1 - b) / 2\n 3. \\<forall>\\<^sub>F x in at_top. 1 < x * (1 - b - hb / ln x powr (1 + e))", "from bep"], ["proof (chain)\npicking this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb", "have A: \"(\\<lambda>x. hb / ln x powr (1 + e)) \\<in> o(\\<lambda>_. 1)\""], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. hb / ln x powr (1 + e)) \\<in> o(\\<lambda>_. 1)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. hb / ln x powr (1 + e)) \\<in> o(\\<lambda>_. 1)\n\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top. hb / ln x powr (1 + e) < b / 2\n 2. \\<forall>\\<^sub>F x in at_top. hb / ln x powr (1 + e) < (1 - b) / 2\n 3. \\<forall>\\<^sub>F x in at_top. 1 < x * (1 - b - hb / ln x powr (1 + e))", "from bep"], ["proof (chain)\npicking this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb", "have B: \"b/3 > 0\" and C: \"(1 - b)/3 > 0\""], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n\ngoal (1 subgoal):\n 1. 0 < b / 3 &&& 0 < (1 - b) / 3", "by simp_all"], ["proof (state)\nthis:\n  0 < b / 3\n  0 < (1 - b) / 3\n\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top. hb / ln x powr (1 + e) < b / 2\n 2. \\<forall>\\<^sub>F x in at_top. hb / ln x powr (1 + e) < (1 - b) / 2\n 3. \\<forall>\\<^sub>F x in at_top. 1 < x * (1 - b - hb / ln x powr (1 + e))", "from landau_o.smallD[OF A B]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top.\n     norm (hb / ln x powr (1 + e)) \\<le> b / 3 * norm 1", "show \"eventually (\\<lambda>x. hb / ln x powr (1+e) < b/2) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     norm (hb / ln x powr (1 + e)) \\<le> b / 3 * norm 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. hb / ln x powr (1 + e) < b / 2", "by eventually_elim (insert bep, simp)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. hb / ln x powr (1 + e) < b / 2\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_top. hb / ln x powr (1 + e) < (1 - b) / 2\n 2. \\<forall>\\<^sub>F x in at_top. 1 < x * (1 - b - hb / ln x powr (1 + e))", "from landau_o.smallD[OF A C]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top.\n     norm (hb / ln x powr (1 + e)) \\<le> (1 - b) / 3 * norm 1", "show \"eventually (\\<lambda>x. hb / ln x powr (1 + e) < (1 - b)/2) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     norm (hb / ln x powr (1 + e)) \\<le> (1 - b) / 3 * norm 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. hb / ln x powr (1 + e) < (1 - b) / 2", "by eventually_elim (insert bep, simp)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. hb / ln x powr (1 + e) < (1 - b) / 2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 1 < x * (1 - b - hb / ln x powr (1 + e))", "from bep"], ["proof (chain)\npicking this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb", "have \"(\\<lambda>x. hb / ln x powr (1 + e)) \\<in> o(\\<lambda>_. 1)\" \"(1 - b) / 2 > 0\""], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. hb / ln x powr (1 + e)) \\<in> o(\\<lambda>_. 1) &&&\n    0 < (1 - b) / 2", "by simp_all"], ["proof (state)\nthis:\n  (\\<lambda>x. hb / ln x powr (1 + e)) \\<in> o(\\<lambda>_. 1)\n  0 < (1 - b) / 2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 1 < x * (1 - b - hb / ln x powr (1 + e))", "from landau_o.smallD[OF this] eventually_gt_at_top[of \"1::real\"]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top.\n     norm (hb / ln x powr (1 + e)) \\<le> (1 - b) / 2 * norm 1\n  eventually ((<) 1) at_top", "have A: \"eventually (\\<lambda>x. 1 - b - hb / ln x powr (1 + e) > 0) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     norm (hb / ln x powr (1 + e)) \\<le> (1 - b) / 2 * norm 1\n  eventually ((<) 1) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 0 < 1 - b - hb / ln x powr (1 + e)", "by eventually_elim (insert bep, simp add: field_simps)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 0 < 1 - b - hb / ln x powr (1 + e)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 1 < x * (1 - b - hb / ln x powr (1 + e))", "from bep"], ["proof (chain)\npicking this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb", "have \"(\\<lambda>x. x * (1 - b - hb / ln x powr (1+e))) \\<in> \\<omega>(\\<lambda>_. 1)\" \"(0::real) < 2\""], ["proof (prove)\nusing this:\n  0 < b\n  b < 1\n  0 < e\n  0 < hb\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x * (1 - b - hb / ln x powr (1 + e)))\n    \\<in> \\<omega>(\\<lambda>_. 1) &&&\n    0 < 2", "by simp_all"], ["proof (state)\nthis:\n  (\\<lambda>x. x * (1 - b - hb / ln x powr (1 + e)))\n  \\<in> \\<omega>(\\<lambda>_. 1)\n  0 < 2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 1 < x * (1 - b - hb / ln x powr (1 + e))", "from landau_omega.smallD[OF this] A eventually_gt_at_top[of \"0::real\"]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top.\n     2 * norm 1 \\<le> norm (x * (1 - b - hb / ln x powr (1 + e)))\n  \\<forall>\\<^sub>F x in at_top. 0 < 1 - b - hb / ln x powr (1 + e)\n  eventually ((<) 0) at_top", "show \"eventually (\\<lambda>x. x*(1 - b - hb / ln x powr (1 + e)) > 1) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     2 * norm 1 \\<le> norm (x * (1 - b - hb / ln x powr (1 + e)))\n  \\<forall>\\<^sub>F x in at_top. 0 < 1 - b - hb / ln x powr (1 + e)\n  eventually ((<) 0) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. 1 < x * (1 - b - hb / ln x powr (1 + e))", "by eventually_elim (simp_all add: abs_mult)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. 1 < x * (1 - b - hb / ln x powr (1 + e))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"], ["", "definition \"akra_bazzi_asymptotic1 b hb e p x \\<longleftrightarrow>\n  (1 - hb * inverse b * ln x powr -(1+e)) powr p * (1 + ln (b*x + hb*x/ln x powr (1+e)) powr (-e/2))\n  \\<ge> 1 + (ln x powr (-e/2) :: real)\""], ["", "definition \"akra_bazzi_asymptotic1' b hb e p x \\<longleftrightarrow>\n  (1 + hb * inverse b * ln x powr -(1+e)) powr p * (1 + ln (b*x + hb*x/ln x powr (1+e)) powr (-e/2))\n  \\<ge> 1 + (ln x powr (-e/2) :: real)\""], ["", "definition \"akra_bazzi_asymptotic2 b hb e p x \\<longleftrightarrow>\n  (1 + hb * inverse b * ln x powr -(1+e)) powr p * (1 - ln (b*x + hb*x/ln x powr (1+e)) powr (-e/2))\n      \\<le> 1 - ln x powr (-e/2 :: real)\""], ["", "definition \"akra_bazzi_asymptotic2' b hb e p x \\<longleftrightarrow>\n  (1 - hb * inverse b * ln x powr -(1+e)) powr p * (1 - ln (b*x + hb*x/ln x powr (1+e)) powr (-e/2))\n      \\<le> 1 - ln x powr (-e/2 :: real)\""], ["", "definition \"akra_bazzi_asymptotic3 e x \\<longleftrightarrow> (1 + (ln x powr (-e/2))) / 2 \\<le> (1::real)\""], ["", "definition \"akra_bazzi_asymptotic4 e x \\<longleftrightarrow> (1 - (ln x powr (-e/2))) * 2 \\<ge> (1::real)\""], ["", "definition \"akra_bazzi_asymptotic5 b hb e x \\<longleftrightarrow>\n  ln (b*x - hb*x*ln x powr -(1+e)) powr (-e/2::real) < 1\""], ["", "definition \"akra_bazzi_asymptotic6 b hb e x \\<longleftrightarrow> hb / ln x powr (1 + e :: real) < b/2\""], ["", "definition \"akra_bazzi_asymptotic7 b hb e x \\<longleftrightarrow> hb / ln x powr (1 + e :: real) < (1 - b) / 2\""], ["", "definition \"akra_bazzi_asymptotic8 b hb e x \\<longleftrightarrow> x*(1 - b - hb / ln x powr (1 + e :: real)) > 1\""], ["", "definition \"akra_bazzi_asymptotics b hb e p x \\<longleftrightarrow>\n  akra_bazzi_asymptotic1 b hb e p x \\<and> akra_bazzi_asymptotic1' b hb e p x \\<and>\n  akra_bazzi_asymptotic2 b hb e p x \\<and> akra_bazzi_asymptotic2' b hb e p x \\<and>\n  akra_bazzi_asymptotic3 e x \\<and> akra_bazzi_asymptotic4 e x \\<and> akra_bazzi_asymptotic5 b hb e x \\<and>\n  akra_bazzi_asymptotic6 b hb e x \\<and> akra_bazzi_asymptotic7 b hb e x \\<and>\n  akra_bazzi_asymptotic8 b hb e x\""], ["", "lemmas akra_bazzi_asymptotic_defs =\n  akra_bazzi_asymptotic1_def akra_bazzi_asymptotic1'_def\n  akra_bazzi_asymptotic2_def akra_bazzi_asymptotic2'_def akra_bazzi_asymptotic3_def\n  akra_bazzi_asymptotic4_def akra_bazzi_asymptotic5_def akra_bazzi_asymptotic6_def\n  akra_bazzi_asymptotic7_def akra_bazzi_asymptotic8_def akra_bazzi_asymptotics_def"], ["", "lemma akra_bazzi_asymptotics:\n  assumes \"\\<And>b. b \\<in> set bs \\<Longrightarrow> b \\<in> {0<..<1}\"\n  assumes \"hb > 0\" \"e > 0\"\n  shows \"eventually (\\<lambda>x. \\<forall>b\\<in>set bs. akra_bazzi_asymptotics b hb e p x) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>b\\<in>set bs. akra_bazzi_asymptotics b hb e p x", "proof (intro eventually_ball_finite ballI)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (set bs)\n 2. \\<And>b.\n       b \\<in> set bs \\<Longrightarrow>\n       eventually (akra_bazzi_asymptotics b hb e p) at_top", "fix b"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (set bs)\n 2. \\<And>b.\n       b \\<in> set bs \\<Longrightarrow>\n       eventually (akra_bazzi_asymptotics b hb e p) at_top", "assume \"b \\<in> set bs\""], ["proof (state)\nthis:\n  b \\<in> set bs\n\ngoal (2 subgoals):\n 1. finite (set bs)\n 2. \\<And>b.\n       b \\<in> set bs \\<Longrightarrow>\n       eventually (akra_bazzi_asymptotics b hb e p) at_top", "with assms"], ["proof (chain)\npicking this:\n  ?b \\<in> set bs \\<Longrightarrow> ?b \\<in> {0<..<1}\n  0 < hb\n  0 < e\n  b \\<in> set bs", "interpret akra_bazzi_asymptotics_bep b e p hb"], ["proof (prove)\nusing this:\n  ?b \\<in> set bs \\<Longrightarrow> ?b \\<in> {0<..<1}\n  0 < hb\n  0 < e\n  b \\<in> set bs\n\ngoal (1 subgoal):\n 1. akra_bazzi_asymptotics_bep b e hb", "by unfold_locales auto"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (set bs)\n 2. \\<And>b.\n       b \\<in> set bs \\<Longrightarrow>\n       eventually (akra_bazzi_asymptotics b hb e p) at_top", "show \"eventually (\\<lambda>x. akra_bazzi_asymptotics b hb e p x) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually (akra_bazzi_asymptotics b hb e p) at_top", "unfolding akra_bazzi_asymptotic_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       1 + ln x powr (- e / 2)\n       \\<le> (1 - hb * inverse b * ln x powr - (1 + e)) powr p *\n             (1 +\n              ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)) \\<and>\n       1 + ln x powr (- e / 2)\n       \\<le> (1 + hb * inverse b * ln x powr - (1 + e)) powr p *\n             (1 +\n              ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)) \\<and>\n       (1 + hb * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln x powr (- e / 2) \\<and>\n       (1 - hb * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln x powr (- e / 2) \\<and>\n       (1 + ln x powr (- e / 2)) / 2 \\<le> 1 \\<and>\n       1 \\<le> (1 - ln x powr (- e / 2)) * 2 \\<and>\n       ln (b * x - hb * x * ln x powr - (1 + e)) powr (- e / 2) < 1 \\<and>\n       hb / ln x powr (1 + e) < b / 2 \\<and>\n       hb / ln x powr (1 + e) < (1 - b) / 2 \\<and>\n       1 < x * (1 - b - hb / ln x powr (1 + e))", "using asymptotics1[of \"-c\" for c] asymptotics2[of \"-c\" for c]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     1 + ln x powr (- e / 2)\n     \\<le> (1 + - ?c2 * inverse b * ln x powr - (1 + e)) powr p *\n           (1 + ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n  \\<forall>\\<^sub>F x in at_top.\n     (1 + - ?c2 * inverse b * ln x powr - (1 + e)) powr p *\n     (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n     \\<le> 1 - ln x powr (- e / 2)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       1 + ln x powr (- e / 2)\n       \\<le> (1 - hb * inverse b * ln x powr - (1 + e)) powr p *\n             (1 +\n              ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)) \\<and>\n       1 + ln x powr (- e / 2)\n       \\<le> (1 + hb * inverse b * ln x powr - (1 + e)) powr p *\n             (1 +\n              ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2)) \\<and>\n       (1 + hb * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln x powr (- e / 2) \\<and>\n       (1 - hb * inverse b * ln x powr - (1 + e)) powr p *\n       (1 - ln (b * x + hb * x / ln x powr (1 + e)) powr (- e / 2))\n       \\<le> 1 - ln x powr (- e / 2) \\<and>\n       (1 + ln x powr (- e / 2)) / 2 \\<le> 1 \\<and>\n       1 \\<le> (1 - ln x powr (- e / 2)) * 2 \\<and>\n       ln (b * x - hb * x * ln x powr - (1 + e)) powr (- e / 2) < 1 \\<and>\n       hb / ln x powr (1 + e) < b / 2 \\<and>\n       hb / ln x powr (1 + e) < (1 - b) / 2 \\<and>\n       1 < x * (1 - b - hb / ln x powr (1 + e))", "by (intro eventually_conj asymptotics1 asymptotics2 asymptotics3\n              asymptotics4 asymptotics5 asymptotics6 asymptotics7 asymptotics8) simp_all"], ["proof (state)\nthis:\n  eventually (akra_bazzi_asymptotics b hb e p) at_top\n\ngoal (1 subgoal):\n 1. finite (set bs)", "qed simp"], ["", "end"]]}