{"file_name": "/home/qj213/afp-2021-10-22/thys/AWN/AWN_Labels.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/AWN", "problem_names": ["lemma labels_dom_basic [simp]:\n  assumes \"not_call p\"\n      and \"not_choice p\"\n  shows \"labels_dom (\\<Gamma>, p)\"", "lemma labels_termination:\n    fixes \\<Gamma> p\n  assumes \"wellformed(\\<Gamma>)\"\n    shows \"labels_dom (\\<Gamma>, p)\"", "lemmas labels_pinduct = labels.pinduct [OF labels_termination]\n   and labels_psimps[simp] = labels.psimps [OF labels_termination]", "lemma labels_not_empty:\n    fixes \\<Gamma> p\n  assumes \"wellformed \\<Gamma>\"\n    shows \"labels \\<Gamma> p \\<noteq> {}\"", "lemma has_label [dest]:\n    fixes \\<Gamma> p\n  assumes \"wellformed \\<Gamma>\"\n    shows \"\\<exists>l. l \\<in> labels \\<Gamma> p\"", "lemma singleton_labels [simp]:\n  \"\\<And>\\<Gamma> l l' f p.          l \\<in> labels \\<Gamma> ({l'}\\<langle>f\\<rangle> p)                       = (l = l')\"\n  \"\\<And>\\<Gamma> l l' f p.          l \\<in> labels \\<Gamma> ({l'}\\<lbrakk>f\\<rbrakk> p)                      = (l = l')\"\n  \"\\<And>\\<Gamma> l l' fip fmsg p q. l \\<in> labels \\<Gamma> ({l'}unicast(fip, fmsg).p \\<triangleright> q)  = (l = l')\"\n  \"\\<And>\\<Gamma> l l' fmsg p.       l \\<in> labels \\<Gamma> ({l'}broadcast(fmsg). p)         = (l = l')\"\n  \"\\<And>\\<Gamma> l l' fips fmsg p.  l \\<in> labels \\<Gamma> ({l'}groupcast(fips, fmsg). p)   = (l = l')\"\n  \"\\<And>\\<Gamma> l l' fmsg p.       l \\<in> labels \\<Gamma> ({l'}send(fmsg).p)               = (l = l')\"\n  \"\\<And>\\<Gamma> l l' fdata p.      l \\<in> labels \\<Gamma> ({l'}deliver(fdata).p)           = (l = l')\"\n  \"\\<And>\\<Gamma> l l' fmsg p.       l \\<in> labels \\<Gamma> ({l'}receive(fmsg).p)            = (l = l')\"", "lemma in_labels_singletons [dest!]:\n  \"\\<And>\\<Gamma> l l' f p.          l \\<in> labels \\<Gamma> ({l'}\\<langle>f\\<rangle> p)                       \\<Longrightarrow> l = l'\"\n  \"\\<And>\\<Gamma> l l' f p.          l \\<in> labels \\<Gamma> ({l'}\\<lbrakk>f\\<rbrakk> p)                      \\<Longrightarrow> l = l'\"\n  \"\\<And>\\<Gamma> l l' fip fmsg p q. l \\<in> labels \\<Gamma> ({l'}unicast(fip, fmsg).p \\<triangleright> q)  \\<Longrightarrow> l = l'\"\n  \"\\<And>\\<Gamma> l l' fmsg p.       l \\<in> labels \\<Gamma> ({l'}broadcast(fmsg). p)         \\<Longrightarrow> l = l'\"\n  \"\\<And>\\<Gamma> l l' fips fmsg p.  l \\<in> labels \\<Gamma> ({l'}groupcast(fips, fmsg). p)   \\<Longrightarrow> l = l'\"\n  \"\\<And>\\<Gamma> l l' fmsg p.       l \\<in> labels \\<Gamma> ({l'}send(fmsg).p)               \\<Longrightarrow> l = l'\"\n  \"\\<And>\\<Gamma> l l' fdata p.      l \\<in> labels \\<Gamma> ({l'}deliver(fdata).p)           \\<Longrightarrow> l = l'\"\n  \"\\<And>\\<Gamma> l l' fmsg p.       l \\<in> labels \\<Gamma> ({l'}receive(fmsg).p)            \\<Longrightarrow> l = l'\"", "lemma simple_labelsI [intro]:\n  assumes \"\\<And>pn p. p\\<in>subterms (\\<Gamma> pn) \\<Longrightarrow> \\<exists>!l. labels \\<Gamma> p = {l}\"\n  shows \"simple_labels \\<Gamma>\"", "lemma simple_labels_in_sterms:\n    fixes \\<Gamma> l p\n  assumes \"simple_labels \\<Gamma>\"\n      and \"wellformed \\<Gamma>\"\n      and \"\\<exists>pn. p\\<in>subterms (\\<Gamma> pn)\"\n      and \"l\\<in>labels \\<Gamma> p\"\n    shows \"\\<forall>p'\\<in>sterms \\<Gamma> p. l\\<in>labels \\<Gamma> p'\"", "lemma labels_in_sterms:\n    fixes \\<Gamma> l p\n  assumes \"wellformed \\<Gamma>\"\n      and \"l\\<in>labels \\<Gamma> p\"\n    shows \"\\<exists>p'\\<in>sterms \\<Gamma> p. l\\<in>labels \\<Gamma> p'\"", "lemma labels_sterms_labels:\n    fixes \\<Gamma> p p' l\n  assumes \"wellformed \\<Gamma>\"\n      and \"p' \\<in> sterms \\<Gamma> p\"\n      and \"l \\<in> labels \\<Gamma> p'\"\n    shows \"l \\<in> labels \\<Gamma> p\""], "translations": [["", "lemma labels_dom_basic [simp]:\n  assumes \"not_call p\"\n      and \"not_choice p\"\n  shows \"labels_dom (\\<Gamma>, p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. labels_dom (\\<Gamma>, p)", "proof (rule accpI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. labels_rel y (\\<Gamma>, p) \\<Longrightarrow> labels_dom y", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. labels_rel y (\\<Gamma>, p) \\<Longrightarrow> labels_dom y", "assume \"labels_rel y (\\<Gamma>, p)\""], ["proof (state)\nthis:\n  labels_rel y (\\<Gamma>, p)\n\ngoal (1 subgoal):\n 1. \\<And>y. labels_rel y (\\<Gamma>, p) \\<Longrightarrow> labels_dom y", "with assms"], ["proof (chain)\npicking this:\n  not_call p\n  not_choice p\n  labels_rel y (\\<Gamma>, p)", "show \"labels_dom y\""], ["proof (prove)\nusing this:\n  not_call p\n  not_choice p\n  labels_rel y (\\<Gamma>, p)\n\ngoal (1 subgoal):\n 1. labels_dom y", "by (cases p) (auto simp: labels_rel.simps)"], ["proof (state)\nthis:\n  labels_dom y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma labels_termination:\n    fixes \\<Gamma> p\n  assumes \"wellformed(\\<Gamma>)\"\n    shows \"labels_dom (\\<Gamma>, p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. labels_dom (\\<Gamma>, p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. labels_dom (\\<Gamma>, p)", "have labels_rel': \"labels_rel = (\\<lambda>gq gp. (gq, gp) \\<in> {((\\<Gamma>, q), (\\<Gamma>', p)). \\<Gamma> = \\<Gamma>' \\<and> p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. labels_rel =\n    (\\<lambda>gq gp.\n        (gq, gp)\n        \\<in> {((\\<Gamma>, q), \\<Gamma>', p).\n               \\<Gamma> = \\<Gamma>' \\<and>\n               p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q})", "by (rule ext)+ (auto simp: labels_rel.simps intro: microstep.intros elim: microstep.cases)"], ["proof (state)\nthis:\n  labels_rel =\n  (\\<lambda>gq gp.\n      (gq, gp)\n      \\<in> {((\\<Gamma>, q), \\<Gamma>', p).\n             \\<Gamma> = \\<Gamma>' \\<and>\n             p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q})\n\ngoal (1 subgoal):\n 1. labels_dom (\\<Gamma>, p)", "from \\<open>wellformed(\\<Gamma>)\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>", "have \"\\<forall>x. x \\<in> Wellfounded.acc {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<in> Wellfounded.acc\n                {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}", "unfolding wellformed_def"], ["proof (prove)\nusing this:\n  wf {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<in> Wellfounded.acc\n                {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}", "by (simp add: wf_acc_iff)"], ["proof (state)\nthis:\n  \\<forall>x.\n     x \\<in> Wellfounded.acc\n              {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. labels_dom (\\<Gamma>, p)", "hence \"p \\<in> Wellfounded.acc {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     x \\<in> Wellfounded.acc\n              {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. p \\<in> Wellfounded.acc {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}", ".."], ["proof (state)\nthis:\n  p \\<in> Wellfounded.acc {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. labels_dom (\\<Gamma>, p)", "hence \"(\\<Gamma>, p) \\<in> Wellfounded.acc {((\\<Gamma>, q), \\<Gamma>', p). \\<Gamma> = \\<Gamma>' \\<and> p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\""], ["proof (prove)\nusing this:\n  p \\<in> Wellfounded.acc {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. (\\<Gamma>, p)\n    \\<in> Wellfounded.acc\n           {((\\<Gamma>, q), \\<Gamma>', p).\n            \\<Gamma> = \\<Gamma>' \\<and>\n            p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}", "by (rule acc_induct) (auto intro: accI)"], ["proof (state)\nthis:\n  (\\<Gamma>, p)\n  \\<in> Wellfounded.acc\n         {((\\<Gamma>, q), \\<Gamma>', p).\n          \\<Gamma> = \\<Gamma>' \\<and>\n          p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. labels_dom (\\<Gamma>, p)", "thus \"labels_dom (\\<Gamma>, p)\""], ["proof (prove)\nusing this:\n  (\\<Gamma>, p)\n  \\<in> Wellfounded.acc\n         {((\\<Gamma>, q), \\<Gamma>', p).\n          \\<Gamma> = \\<Gamma>' \\<and>\n          p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. labels_dom (\\<Gamma>, p)", "unfolding labels_rel'"], ["proof (prove)\nusing this:\n  (\\<Gamma>, p)\n  \\<in> Wellfounded.acc\n         {((\\<Gamma>, q), \\<Gamma>', p).\n          \\<Gamma> = \\<Gamma>' \\<and>\n          p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. Wellfounded.accp\n     (\\<lambda>gq gp.\n         (gq, gp)\n         \\<in> {((\\<Gamma>, q), \\<Gamma>', p).\n                \\<Gamma> = \\<Gamma>' \\<and>\n                p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q})\n     (\\<Gamma>, p)", "by (subst accp_acc_eq)"], ["proof (state)\nthis:\n  labels_dom (\\<Gamma>, p)\n\ngoal:\nNo subgoals!", "qed"], ["", "declare labels.psimps[simp]"], ["", "lemmas labels_pinduct = labels.pinduct [OF labels_termination]\n   and labels_psimps[simp] = labels.psimps [OF labels_termination]"], ["", "lemma labels_not_empty:\n    fixes \\<Gamma> p\n  assumes \"wellformed \\<Gamma>\"\n    shows \"labels \\<Gamma> p \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. labels \\<Gamma> p \\<noteq> {}", "by (induct p rule: labels_pinduct [OF \\<open>wellformed \\<Gamma>\\<close>]) simp_all"], ["", "lemma has_label [dest]:\n    fixes \\<Gamma> p\n  assumes \"wellformed \\<Gamma>\"\n    shows \"\\<exists>l. l \\<in> labels \\<Gamma> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l. l \\<in> labels \\<Gamma> p", "using labels_not_empty [OF assms]"], ["proof (prove)\nusing this:\n  labels \\<Gamma> ?p \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>l. l \\<in> labels \\<Gamma> p", "by auto"], ["", "lemma singleton_labels [simp]:\n  \"\\<And>\\<Gamma> l l' f p.          l \\<in> labels \\<Gamma> ({l'}\\<langle>f\\<rangle> p)                       = (l = l')\"\n  \"\\<And>\\<Gamma> l l' f p.          l \\<in> labels \\<Gamma> ({l'}\\<lbrakk>f\\<rbrakk> p)                      = (l = l')\"\n  \"\\<And>\\<Gamma> l l' fip fmsg p q. l \\<in> labels \\<Gamma> ({l'}unicast(fip, fmsg).p \\<triangleright> q)  = (l = l')\"\n  \"\\<And>\\<Gamma> l l' fmsg p.       l \\<in> labels \\<Gamma> ({l'}broadcast(fmsg). p)         = (l = l')\"\n  \"\\<And>\\<Gamma> l l' fips fmsg p.  l \\<in> labels \\<Gamma> ({l'}groupcast(fips, fmsg). p)   = (l = l')\"\n  \"\\<And>\\<Gamma> l l' fmsg p.       l \\<in> labels \\<Gamma> ({l'}send(fmsg).p)               = (l = l')\"\n  \"\\<And>\\<Gamma> l l' fdata p.      l \\<in> labels \\<Gamma> ({l'}deliver(fdata).p)           = (l = l')\"\n  \"\\<And>\\<Gamma> l l' fmsg p.       l \\<in> labels \\<Gamma> ({l'}receive(fmsg).p)            = (l = l')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (((\\<And>\\<Gamma> l l' f p.\n          (l \\<in> labels \\<Gamma> ({l'}\\<langle>f\\<rangle>\n                                    p)) =\n          (l = l')) &&&\n      (\\<And>\\<Gamma> l l' f p.\n          (l \\<in> labels \\<Gamma> ({l'}\\<lbrakk>f\\<rbrakk>\n                                    p)) =\n          (l = l'))) &&&\n     (\\<And>\\<Gamma> l l' fip fmsg p q.\n         (l \\<in> labels \\<Gamma> ({l'}unicast(fip, fmsg) .\np \\<triangleright> q)) =\n         (l = l')) &&&\n     (\\<And>\\<Gamma> l l' fmsg p.\n         (l \\<in> labels \\<Gamma> ({l'}broadcast(fmsg) .\n                                   p)) =\n         (l = l'))) &&&\n    ((\\<And>\\<Gamma> l l' fips fmsg p.\n         (l \\<in> labels \\<Gamma> ({l'}groupcast(fips, fmsg) .\n                                   p)) =\n         (l = l')) &&&\n     (\\<And>\\<Gamma> l l' fmsg p.\n         (l \\<in> labels \\<Gamma> ({l'}send(fmsg) .\n                                   p)) =\n         (l = l'))) &&&\n    (\\<And>\\<Gamma> l l' fdata p.\n        (l \\<in> labels \\<Gamma> ({l'}deliver(fdata) .\n                                  p)) =\n        (l = l')) &&&\n    (\\<And>\\<Gamma> l l' fmsg p.\n        (l \\<in> labels \\<Gamma> ({l'}receive(fmsg) .\n                                  p)) =\n        (l = l'))", "by auto"], ["", "lemma in_labels_singletons [dest!]:\n  \"\\<And>\\<Gamma> l l' f p.          l \\<in> labels \\<Gamma> ({l'}\\<langle>f\\<rangle> p)                       \\<Longrightarrow> l = l'\"\n  \"\\<And>\\<Gamma> l l' f p.          l \\<in> labels \\<Gamma> ({l'}\\<lbrakk>f\\<rbrakk> p)                      \\<Longrightarrow> l = l'\"\n  \"\\<And>\\<Gamma> l l' fip fmsg p q. l \\<in> labels \\<Gamma> ({l'}unicast(fip, fmsg).p \\<triangleright> q)  \\<Longrightarrow> l = l'\"\n  \"\\<And>\\<Gamma> l l' fmsg p.       l \\<in> labels \\<Gamma> ({l'}broadcast(fmsg). p)         \\<Longrightarrow> l = l'\"\n  \"\\<And>\\<Gamma> l l' fips fmsg p.  l \\<in> labels \\<Gamma> ({l'}groupcast(fips, fmsg). p)   \\<Longrightarrow> l = l'\"\n  \"\\<And>\\<Gamma> l l' fmsg p.       l \\<in> labels \\<Gamma> ({l'}send(fmsg).p)               \\<Longrightarrow> l = l'\"\n  \"\\<And>\\<Gamma> l l' fdata p.      l \\<in> labels \\<Gamma> ({l'}deliver(fdata).p)           \\<Longrightarrow> l = l'\"\n  \"\\<And>\\<Gamma> l l' fmsg p.       l \\<in> labels \\<Gamma> ({l'}receive(fmsg).p)            \\<Longrightarrow> l = l'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (((\\<And>\\<Gamma> l l' f p.\n          l \\<in> labels \\<Gamma> ({l'}\\<langle>f\\<rangle>\n                                   p) \\<Longrightarrow>\n          l = l') &&&\n      (\\<And>\\<Gamma> l l' f p.\n          l \\<in> labels \\<Gamma> ({l'}\\<lbrakk>f\\<rbrakk>\n                                   p) \\<Longrightarrow>\n          l = l')) &&&\n     (\\<And>\\<Gamma> l l' fip fmsg p q.\n         l \\<in> labels \\<Gamma>\n                  ({l'}unicast(fip, fmsg) .\n                      p \\<triangleright> q) \\<Longrightarrow>\n         l = l') &&&\n     (\\<And>\\<Gamma> l l' fmsg p.\n         l \\<in> labels \\<Gamma> ({l'}broadcast(fmsg) .\n                                  p) \\<Longrightarrow>\n         l = l')) &&&\n    ((\\<And>\\<Gamma> l l' fips fmsg p.\n         l \\<in> labels \\<Gamma>\n                  ({l'}groupcast(fips, fmsg) .\n                   p) \\<Longrightarrow>\n         l = l') &&&\n     (\\<And>\\<Gamma> l l' fmsg p.\n         l \\<in> labels \\<Gamma> ({l'}send(fmsg) .\n                                  p) \\<Longrightarrow>\n         l = l')) &&&\n    (\\<And>\\<Gamma> l l' fdata p.\n        l \\<in> labels \\<Gamma> ({l'}deliver(fdata) .\n                                 p) \\<Longrightarrow>\n        l = l') &&&\n    (\\<And>\\<Gamma> l l' fmsg p.\n        l \\<in> labels \\<Gamma> ({l'}receive(fmsg) .\n                                 p) \\<Longrightarrow>\n        l = l')", "by auto"], ["", "definition\n  simple_labels :: \"('s, 'm, 'p, 'l) seqp_env \\<Rightarrow> bool\"\nwhere\n  \"simple_labels \\<Gamma> \\<equiv> \\<forall>pn. \\<forall>p\\<in>subterms (\\<Gamma> pn). (\\<exists>!l. labels \\<Gamma> p = {l})\""], ["", "lemma simple_labelsI [intro]:\n  assumes \"\\<And>pn p. p\\<in>subterms (\\<Gamma> pn) \\<Longrightarrow> \\<exists>!l. labels \\<Gamma> p = {l}\"\n  shows \"simple_labels \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. simple_labels \\<Gamma>", "using assms"], ["proof (prove)\nusing this:\n  ?p \\<in> subterms (\\<Gamma> ?pn) \\<Longrightarrow>\n  \\<exists>!l. labels \\<Gamma> ?p = {l}\n\ngoal (1 subgoal):\n 1. simple_labels \\<Gamma>", "unfolding simple_labels_def"], ["proof (prove)\nusing this:\n  ?p \\<in> subterms (\\<Gamma> ?pn) \\<Longrightarrow>\n  \\<exists>!l. labels \\<Gamma> ?p = {l}\n\ngoal (1 subgoal):\n 1. \\<forall>pn.\n       \\<forall>p\\<in>subterms (\\<Gamma> pn).\n          \\<exists>!l. labels \\<Gamma> p = {l}", "by auto"], ["", "text \\<open>\n  The @{term \"simple_labels \\<Gamma>\"} property is necessary to transfer results shown over the\n  @{term \"cterms\"} of a process specification @{term \"\\<Gamma>\"} to the reachable actions of\n  that process.\n\n  Consider the process @{term \"{l\\<^sub>1}send(m1). p1 \\<oplus> {l\\<^sub>2}send(m2). p2\"}. The iteration over @{term\n  \"cterms \\<Gamma>\"} will cover the two transitions\n    @{term \"(l\\<^sub>1, send m1, p1)\"} and\n    @{term \"(l\\<^sub>2, send m2, p2)\"},\n  but reachability requires the four transitions\n    @{term \"(l\\<^sub>1, send m1, p1)\"},\n    @{term \"(l\\<^sub>1, send m2, p2)\"},\n    @{term \"(l\\<^sub>2, send m1, p1)\"}, and\n    @{term \"(l\\<^sub>2, send m2, p2)\"}.\n\n  In a simply labelled process, the former is sufficient to show the latter, since\n  @{term \"l\\<^sub>1 = l\\<^sub>2\"}.\n\n  This requirement seems really only to be restrictive for processes where a @{term \"call(pn)\"}\n  occurs as a direct subterm of a choice operator. Consider, for instance, @{term \"({l\\<^sub>1}\\<lbrakk>e\\<rbrakk> p) \\<oplus>\n  call(pn)\"}. Here @{term \"l\\<^sub>1\"} must equal the label of @{term \"\\<Gamma>(pn)\"}, which can then not be\n  distinguished from any other subterm that calls @{term \"pn\"} in any other process.\n\n  This limitation stems from the fact that the \"call points\" of a process are effectively treated as\n  the root of the called process. This is by design; we try to treat call sites as \"syntactic\n  pastings\" of process terms, giving rise, conceptually, to an infinite tree structure. But this\n  prejudices the alternative view that process calls are used as \"join points\" of \"process threads\",\n  in complement to the \"fork points\" of the @{term \"p1 \\<oplus> p2\"} operator.\n\\<close>"], ["", "lemma simple_labels_in_sterms:\n    fixes \\<Gamma> l p\n  assumes \"simple_labels \\<Gamma>\"\n      and \"wellformed \\<Gamma>\"\n      and \"\\<exists>pn. p\\<in>subterms (\\<Gamma> pn)\"\n      and \"l\\<in>labels \\<Gamma> p\"\n    shows \"\\<forall>p'\\<in>sterms \\<Gamma> p. l\\<in>labels \\<Gamma> p'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p'\\<in>sterms \\<Gamma> p. l \\<in> labels \\<Gamma> p'", "using assms"], ["proof (prove)\nusing this:\n  simple_labels \\<Gamma>\n  wellformed \\<Gamma>\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. \\<forall>p'\\<in>sterms \\<Gamma> p. l \\<in> labels \\<Gamma> p'", "proof (induct p rule: labels_pinduct [OF \\<open>wellformed \\<Gamma>\\<close>])"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> la fg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<langle>fg\\<rangle>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<langle>fg\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<langle>fg\\<rangle>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<langle>fg\\<rangle>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 2. \\<And>\\<Gamma> la fa p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<lbrakk>fa\\<rbrakk>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<lbrakk>fa\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<lbrakk>fa\\<rbrakk>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<lbrakk>fa\\<rbrakk>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 3. \\<And>\\<Gamma> p1 p2.\n       \\<lbrakk>labels_dom (\\<Gamma>, p1\n\\<oplus>\np2);\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         l \\<in> labels \\<Gamma> p1\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p1.\n                             l \\<in> labels \\<Gamma> p';\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         l \\<in> labels \\<Gamma> p2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p2.\n                             l \\<in> labels \\<Gamma> p';\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (p1\n                    \\<oplus>\n                    p2).\n                            l \\<in> labels \\<Gamma> p'\n 4. \\<And>\\<Gamma> la fip fmsg p q.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}unicast(fip, fmsg) .\n   p \\<triangleright> q);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}unicast(fip, fmsg) .\n                                    p \\<triangleright> q)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}unicast(fip, fmsg) .\n        p \\<triangleright> q).\n                            l \\<in> labels \\<Gamma> p'\n 5. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}broadcast(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}broadcast(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}broadcast(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 6. \\<And>\\<Gamma> la fips fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}groupcast(fips, fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}groupcast(fips, fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}groupcast(fips, fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 7. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}send(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}send(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> ({la}send(fmsg) .\n                    p).\n                            l \\<in> labels \\<Gamma> p'\n 8. \\<And>\\<Gamma> la fdata p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}deliver(fdata) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}deliver(fdata) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}deliver(fdata) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 9. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}receive(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}receive(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}receive(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 10. \\<And>\\<Gamma> pn.\n        \\<lbrakk>labels_dom (\\<Gamma>, call(pn));\n         \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n          \\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          l \\<in> labels \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n         \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (\\<Gamma> pn).\n                              l \\<in> labels \\<Gamma> p';\n         simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         l \\<in> labels \\<Gamma> (call(pn))\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (call(pn)).\n                             l \\<in> labels \\<Gamma> p'", "fix \\<Gamma> p1 p2"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> la fg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<langle>fg\\<rangle>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<langle>fg\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<langle>fg\\<rangle>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<langle>fg\\<rangle>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 2. \\<And>\\<Gamma> la fa p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<lbrakk>fa\\<rbrakk>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<lbrakk>fa\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<lbrakk>fa\\<rbrakk>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<lbrakk>fa\\<rbrakk>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 3. \\<And>\\<Gamma> p1 p2.\n       \\<lbrakk>labels_dom (\\<Gamma>, p1\n\\<oplus>\np2);\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         l \\<in> labels \\<Gamma> p1\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p1.\n                             l \\<in> labels \\<Gamma> p';\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         l \\<in> labels \\<Gamma> p2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p2.\n                             l \\<in> labels \\<Gamma> p';\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (p1\n                    \\<oplus>\n                    p2).\n                            l \\<in> labels \\<Gamma> p'\n 4. \\<And>\\<Gamma> la fip fmsg p q.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}unicast(fip, fmsg) .\n   p \\<triangleright> q);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}unicast(fip, fmsg) .\n                                    p \\<triangleright> q)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}unicast(fip, fmsg) .\n        p \\<triangleright> q).\n                            l \\<in> labels \\<Gamma> p'\n 5. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}broadcast(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}broadcast(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}broadcast(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 6. \\<And>\\<Gamma> la fips fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}groupcast(fips, fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}groupcast(fips, fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}groupcast(fips, fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 7. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}send(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}send(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> ({la}send(fmsg) .\n                    p).\n                            l \\<in> labels \\<Gamma> p'\n 8. \\<And>\\<Gamma> la fdata p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}deliver(fdata) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}deliver(fdata) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}deliver(fdata) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 9. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}receive(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}receive(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}receive(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 10. \\<And>\\<Gamma> pn.\n        \\<lbrakk>labels_dom (\\<Gamma>, call(pn));\n         \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n          \\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          l \\<in> labels \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n         \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (\\<Gamma> pn).\n                              l \\<in> labels \\<Gamma> p';\n         simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         l \\<in> labels \\<Gamma> (call(pn))\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (call(pn)).\n                             l \\<in> labels \\<Gamma> p'", "assume sl: \"simple_labels \\<Gamma>\"\n       and wf: \"wellformed \\<Gamma>\"\n       and IH1: \"\\<lbrakk> simple_labels \\<Gamma>; wellformed \\<Gamma>;\n                   \\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn); l \\<in> labels \\<Gamma> p1 \\<rbrakk>\n                 \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p1. l \\<in> labels \\<Gamma> p'\"\n       and IH2: \"\\<lbrakk> simple_labels \\<Gamma>; wellformed \\<Gamma>;\n                   \\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn); l \\<in> labels \\<Gamma> p2 \\<rbrakk>\n                 \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p2. l \\<in> labels \\<Gamma> p'\"\n       and ein: \"\\<exists>pn. p1 \\<oplus> p2 \\<in> subterms (\\<Gamma> pn)\"\n       and l12: \"l \\<in> labels \\<Gamma> (p1 \\<oplus> p2)\""], ["proof (state)\nthis:\n  simple_labels \\<Gamma>\n  wellformed \\<Gamma>\n  \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n   \\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n   l \\<in> labels \\<Gamma> p1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p1.\n                       l \\<in> labels \\<Gamma> p'\n  \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n   \\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n   l \\<in> labels \\<Gamma> p2\\<rbrakk>\n  \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p2.\n                       l \\<in> labels \\<Gamma> p'\n  \\<exists>pn. p1\n               \\<oplus>\n               p2\n               \\<in> subterms (\\<Gamma> pn)\n  l \\<in> labels \\<Gamma> (p1\n                           \\<oplus>\n                           p2)\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> la fg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<langle>fg\\<rangle>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<langle>fg\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<langle>fg\\<rangle>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<langle>fg\\<rangle>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 2. \\<And>\\<Gamma> la fa p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<lbrakk>fa\\<rbrakk>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<lbrakk>fa\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<lbrakk>fa\\<rbrakk>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<lbrakk>fa\\<rbrakk>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 3. \\<And>\\<Gamma> p1 p2.\n       \\<lbrakk>labels_dom (\\<Gamma>, p1\n\\<oplus>\np2);\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         l \\<in> labels \\<Gamma> p1\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p1.\n                             l \\<in> labels \\<Gamma> p';\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         l \\<in> labels \\<Gamma> p2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p2.\n                             l \\<in> labels \\<Gamma> p';\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (p1\n                    \\<oplus>\n                    p2).\n                            l \\<in> labels \\<Gamma> p'\n 4. \\<And>\\<Gamma> la fip fmsg p q.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}unicast(fip, fmsg) .\n   p \\<triangleright> q);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}unicast(fip, fmsg) .\n                                    p \\<triangleright> q)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}unicast(fip, fmsg) .\n        p \\<triangleright> q).\n                            l \\<in> labels \\<Gamma> p'\n 5. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}broadcast(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}broadcast(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}broadcast(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 6. \\<And>\\<Gamma> la fips fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}groupcast(fips, fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}groupcast(fips, fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}groupcast(fips, fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 7. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}send(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}send(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> ({la}send(fmsg) .\n                    p).\n                            l \\<in> labels \\<Gamma> p'\n 8. \\<And>\\<Gamma> la fdata p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}deliver(fdata) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}deliver(fdata) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}deliver(fdata) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 9. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}receive(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}receive(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}receive(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 10. \\<And>\\<Gamma> pn.\n        \\<lbrakk>labels_dom (\\<Gamma>, call(pn));\n         \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n          \\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          l \\<in> labels \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n         \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (\\<Gamma> pn).\n                              l \\<in> labels \\<Gamma> p';\n         simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         l \\<in> labels \\<Gamma> (call(pn))\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (call(pn)).\n                             l \\<in> labels \\<Gamma> p'", "from sl ein l12"], ["proof (chain)\npicking this:\n  simple_labels \\<Gamma>\n  \\<exists>pn. p1\n               \\<oplus>\n               p2\n               \\<in> subterms (\\<Gamma> pn)\n  l \\<in> labels \\<Gamma> (p1\n                           \\<oplus>\n                           p2)", "have \"labels \\<Gamma> (p1 \\<oplus> p2) = {l}\""], ["proof (prove)\nusing this:\n  simple_labels \\<Gamma>\n  \\<exists>pn. p1\n               \\<oplus>\n               p2\n               \\<in> subterms (\\<Gamma> pn)\n  l \\<in> labels \\<Gamma> (p1\n                           \\<oplus>\n                           p2)\n\ngoal (1 subgoal):\n 1. labels \\<Gamma> (p1\n                     \\<oplus>\n                     p2) =\n    {l}", "unfolding simple_labels_def"], ["proof (prove)\nusing this:\n  \\<forall>pn.\n     \\<forall>p\\<in>subterms (\\<Gamma> pn).\n        \\<exists>!l. labels \\<Gamma> p = {l}\n  \\<exists>pn. p1\n               \\<oplus>\n               p2\n               \\<in> subterms (\\<Gamma> pn)\n  l \\<in> labels \\<Gamma> (p1\n                           \\<oplus>\n                           p2)\n\ngoal (1 subgoal):\n 1. labels \\<Gamma> (p1\n                     \\<oplus>\n                     p2) =\n    {l}", "by (metis empty_iff insert_iff)"], ["proof (state)\nthis:\n  labels \\<Gamma> (p1\n                   \\<oplus>\n                   p2) =\n  {l}\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> la fg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<langle>fg\\<rangle>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<langle>fg\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<langle>fg\\<rangle>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<langle>fg\\<rangle>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 2. \\<And>\\<Gamma> la fa p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<lbrakk>fa\\<rbrakk>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<lbrakk>fa\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<lbrakk>fa\\<rbrakk>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<lbrakk>fa\\<rbrakk>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 3. \\<And>\\<Gamma> p1 p2.\n       \\<lbrakk>labels_dom (\\<Gamma>, p1\n\\<oplus>\np2);\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         l \\<in> labels \\<Gamma> p1\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p1.\n                             l \\<in> labels \\<Gamma> p';\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         l \\<in> labels \\<Gamma> p2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p2.\n                             l \\<in> labels \\<Gamma> p';\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (p1\n                    \\<oplus>\n                    p2).\n                            l \\<in> labels \\<Gamma> p'\n 4. \\<And>\\<Gamma> la fip fmsg p q.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}unicast(fip, fmsg) .\n   p \\<triangleright> q);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}unicast(fip, fmsg) .\n                                    p \\<triangleright> q)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}unicast(fip, fmsg) .\n        p \\<triangleright> q).\n                            l \\<in> labels \\<Gamma> p'\n 5. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}broadcast(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}broadcast(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}broadcast(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 6. \\<And>\\<Gamma> la fips fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}groupcast(fips, fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}groupcast(fips, fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}groupcast(fips, fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 7. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}send(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}send(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> ({la}send(fmsg) .\n                    p).\n                            l \\<in> labels \\<Gamma> p'\n 8. \\<And>\\<Gamma> la fdata p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}deliver(fdata) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}deliver(fdata) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}deliver(fdata) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 9. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}receive(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}receive(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}receive(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 10. \\<And>\\<Gamma> pn.\n        \\<lbrakk>labels_dom (\\<Gamma>, call(pn));\n         \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n          \\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          l \\<in> labels \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n         \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (\\<Gamma> pn).\n                              l \\<in> labels \\<Gamma> p';\n         simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         l \\<in> labels \\<Gamma> (call(pn))\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (call(pn)).\n                             l \\<in> labels \\<Gamma> p'", "with wf"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  labels \\<Gamma> (p1\n                   \\<oplus>\n                   p2) =\n  {l}", "have \"labels \\<Gamma> p1 \\<union> labels \\<Gamma> p2 = {l}\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  labels \\<Gamma> (p1\n                   \\<oplus>\n                   p2) =\n  {l}\n\ngoal (1 subgoal):\n 1. labels \\<Gamma> p1 \\<union> labels \\<Gamma> p2 = {l}", "by simp"], ["proof (state)\nthis:\n  labels \\<Gamma> p1 \\<union> labels \\<Gamma> p2 = {l}\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> la fg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<langle>fg\\<rangle>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<langle>fg\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<langle>fg\\<rangle>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<langle>fg\\<rangle>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 2. \\<And>\\<Gamma> la fa p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<lbrakk>fa\\<rbrakk>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<lbrakk>fa\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<lbrakk>fa\\<rbrakk>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<lbrakk>fa\\<rbrakk>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 3. \\<And>\\<Gamma> p1 p2.\n       \\<lbrakk>labels_dom (\\<Gamma>, p1\n\\<oplus>\np2);\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         l \\<in> labels \\<Gamma> p1\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p1.\n                             l \\<in> labels \\<Gamma> p';\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         l \\<in> labels \\<Gamma> p2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p2.\n                             l \\<in> labels \\<Gamma> p';\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (p1\n                    \\<oplus>\n                    p2).\n                            l \\<in> labels \\<Gamma> p'\n 4. \\<And>\\<Gamma> la fip fmsg p q.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}unicast(fip, fmsg) .\n   p \\<triangleright> q);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}unicast(fip, fmsg) .\n                                    p \\<triangleright> q)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}unicast(fip, fmsg) .\n        p \\<triangleright> q).\n                            l \\<in> labels \\<Gamma> p'\n 5. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}broadcast(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}broadcast(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}broadcast(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 6. \\<And>\\<Gamma> la fips fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}groupcast(fips, fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}groupcast(fips, fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}groupcast(fips, fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 7. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}send(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}send(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> ({la}send(fmsg) .\n                    p).\n                            l \\<in> labels \\<Gamma> p'\n 8. \\<And>\\<Gamma> la fdata p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}deliver(fdata) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}deliver(fdata) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}deliver(fdata) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 9. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}receive(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}receive(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}receive(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 10. \\<And>\\<Gamma> pn.\n        \\<lbrakk>labels_dom (\\<Gamma>, call(pn));\n         \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n          \\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          l \\<in> labels \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n         \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (\\<Gamma> pn).\n                              l \\<in> labels \\<Gamma> p';\n         simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         l \\<in> labels \\<Gamma> (call(pn))\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (call(pn)).\n                             l \\<in> labels \\<Gamma> p'", "moreover"], ["proof (state)\nthis:\n  labels \\<Gamma> p1 \\<union> labels \\<Gamma> p2 = {l}\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> la fg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<langle>fg\\<rangle>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<langle>fg\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<langle>fg\\<rangle>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<langle>fg\\<rangle>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 2. \\<And>\\<Gamma> la fa p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<lbrakk>fa\\<rbrakk>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<lbrakk>fa\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<lbrakk>fa\\<rbrakk>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<lbrakk>fa\\<rbrakk>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 3. \\<And>\\<Gamma> p1 p2.\n       \\<lbrakk>labels_dom (\\<Gamma>, p1\n\\<oplus>\np2);\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         l \\<in> labels \\<Gamma> p1\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p1.\n                             l \\<in> labels \\<Gamma> p';\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         l \\<in> labels \\<Gamma> p2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p2.\n                             l \\<in> labels \\<Gamma> p';\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (p1\n                    \\<oplus>\n                    p2).\n                            l \\<in> labels \\<Gamma> p'\n 4. \\<And>\\<Gamma> la fip fmsg p q.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}unicast(fip, fmsg) .\n   p \\<triangleright> q);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}unicast(fip, fmsg) .\n                                    p \\<triangleright> q)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}unicast(fip, fmsg) .\n        p \\<triangleright> q).\n                            l \\<in> labels \\<Gamma> p'\n 5. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}broadcast(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}broadcast(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}broadcast(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 6. \\<And>\\<Gamma> la fips fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}groupcast(fips, fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}groupcast(fips, fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}groupcast(fips, fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 7. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}send(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}send(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> ({la}send(fmsg) .\n                    p).\n                            l \\<in> labels \\<Gamma> p'\n 8. \\<And>\\<Gamma> la fdata p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}deliver(fdata) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}deliver(fdata) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}deliver(fdata) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 9. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}receive(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}receive(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}receive(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 10. \\<And>\\<Gamma> pn.\n        \\<lbrakk>labels_dom (\\<Gamma>, call(pn));\n         \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n          \\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          l \\<in> labels \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n         \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (\\<Gamma> pn).\n                              l \\<in> labels \\<Gamma> p';\n         simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         l \\<in> labels \\<Gamma> (call(pn))\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (call(pn)).\n                             l \\<in> labels \\<Gamma> p'", "have \"labels \\<Gamma> p1 \\<noteq> {}\" and \"labels \\<Gamma> p2 \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. labels \\<Gamma> p1 \\<noteq> {} &&& labels \\<Gamma> p2 \\<noteq> {}", "using wf"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. labels \\<Gamma> p1 \\<noteq> {} &&& labels \\<Gamma> p2 \\<noteq> {}", "by (metis labels_not_empty)+"], ["proof (state)\nthis:\n  labels \\<Gamma> p1 \\<noteq> {}\n  labels \\<Gamma> p2 \\<noteq> {}\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> la fg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<langle>fg\\<rangle>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<langle>fg\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<langle>fg\\<rangle>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<langle>fg\\<rangle>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 2. \\<And>\\<Gamma> la fa p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<lbrakk>fa\\<rbrakk>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<lbrakk>fa\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<lbrakk>fa\\<rbrakk>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<lbrakk>fa\\<rbrakk>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 3. \\<And>\\<Gamma> p1 p2.\n       \\<lbrakk>labels_dom (\\<Gamma>, p1\n\\<oplus>\np2);\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         l \\<in> labels \\<Gamma> p1\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p1.\n                             l \\<in> labels \\<Gamma> p';\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         l \\<in> labels \\<Gamma> p2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p2.\n                             l \\<in> labels \\<Gamma> p';\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (p1\n                    \\<oplus>\n                    p2).\n                            l \\<in> labels \\<Gamma> p'\n 4. \\<And>\\<Gamma> la fip fmsg p q.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}unicast(fip, fmsg) .\n   p \\<triangleright> q);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}unicast(fip, fmsg) .\n                                    p \\<triangleright> q)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}unicast(fip, fmsg) .\n        p \\<triangleright> q).\n                            l \\<in> labels \\<Gamma> p'\n 5. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}broadcast(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}broadcast(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}broadcast(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 6. \\<And>\\<Gamma> la fips fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}groupcast(fips, fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}groupcast(fips, fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}groupcast(fips, fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 7. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}send(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}send(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> ({la}send(fmsg) .\n                    p).\n                            l \\<in> labels \\<Gamma> p'\n 8. \\<And>\\<Gamma> la fdata p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}deliver(fdata) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}deliver(fdata) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}deliver(fdata) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 9. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}receive(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}receive(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}receive(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 10. \\<And>\\<Gamma> pn.\n        \\<lbrakk>labels_dom (\\<Gamma>, call(pn));\n         \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n          \\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          l \\<in> labels \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n         \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (\\<Gamma> pn).\n                              l \\<in> labels \\<Gamma> p';\n         simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         l \\<in> labels \\<Gamma> (call(pn))\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (call(pn)).\n                             l \\<in> labels \\<Gamma> p'", "ultimately"], ["proof (chain)\npicking this:\n  labels \\<Gamma> p1 \\<union> labels \\<Gamma> p2 = {l}\n  labels \\<Gamma> p1 \\<noteq> {}\n  labels \\<Gamma> p2 \\<noteq> {}", "have \"l \\<in> labels \\<Gamma> p1\" and \"l \\<in> labels \\<Gamma> p2\""], ["proof (prove)\nusing this:\n  labels \\<Gamma> p1 \\<union> labels \\<Gamma> p2 = {l}\n  labels \\<Gamma> p1 \\<noteq> {}\n  labels \\<Gamma> p2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. l \\<in> labels \\<Gamma> p1 &&& l \\<in> labels \\<Gamma> p2", "by (metis Un_iff empty_iff insert_iff set_eqI)+"], ["proof (state)\nthis:\n  l \\<in> labels \\<Gamma> p1\n  l \\<in> labels \\<Gamma> p2\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> la fg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<langle>fg\\<rangle>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<langle>fg\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<langle>fg\\<rangle>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<langle>fg\\<rangle>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 2. \\<And>\\<Gamma> la fa p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<lbrakk>fa\\<rbrakk>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<lbrakk>fa\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<lbrakk>fa\\<rbrakk>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<lbrakk>fa\\<rbrakk>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 3. \\<And>\\<Gamma> p1 p2.\n       \\<lbrakk>labels_dom (\\<Gamma>, p1\n\\<oplus>\np2);\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         l \\<in> labels \\<Gamma> p1\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p1.\n                             l \\<in> labels \\<Gamma> p';\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         l \\<in> labels \\<Gamma> p2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p2.\n                             l \\<in> labels \\<Gamma> p';\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (p1\n                    \\<oplus>\n                    p2).\n                            l \\<in> labels \\<Gamma> p'\n 4. \\<And>\\<Gamma> la fip fmsg p q.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}unicast(fip, fmsg) .\n   p \\<triangleright> q);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}unicast(fip, fmsg) .\n                                    p \\<triangleright> q)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}unicast(fip, fmsg) .\n        p \\<triangleright> q).\n                            l \\<in> labels \\<Gamma> p'\n 5. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}broadcast(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}broadcast(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}broadcast(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 6. \\<And>\\<Gamma> la fips fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}groupcast(fips, fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}groupcast(fips, fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}groupcast(fips, fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 7. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}send(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}send(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> ({la}send(fmsg) .\n                    p).\n                            l \\<in> labels \\<Gamma> p'\n 8. \\<And>\\<Gamma> la fdata p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}deliver(fdata) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}deliver(fdata) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}deliver(fdata) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 9. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}receive(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}receive(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}receive(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 10. \\<And>\\<Gamma> pn.\n        \\<lbrakk>labels_dom (\\<Gamma>, call(pn));\n         \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n          \\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          l \\<in> labels \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n         \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (\\<Gamma> pn).\n                              l \\<in> labels \\<Gamma> p';\n         simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         l \\<in> labels \\<Gamma> (call(pn))\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (call(pn)).\n                             l \\<in> labels \\<Gamma> p'", "moreover"], ["proof (state)\nthis:\n  l \\<in> labels \\<Gamma> p1\n  l \\<in> labels \\<Gamma> p2\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> la fg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<langle>fg\\<rangle>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<langle>fg\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<langle>fg\\<rangle>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<langle>fg\\<rangle>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 2. \\<And>\\<Gamma> la fa p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<lbrakk>fa\\<rbrakk>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<lbrakk>fa\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<lbrakk>fa\\<rbrakk>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<lbrakk>fa\\<rbrakk>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 3. \\<And>\\<Gamma> p1 p2.\n       \\<lbrakk>labels_dom (\\<Gamma>, p1\n\\<oplus>\np2);\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         l \\<in> labels \\<Gamma> p1\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p1.\n                             l \\<in> labels \\<Gamma> p';\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         l \\<in> labels \\<Gamma> p2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p2.\n                             l \\<in> labels \\<Gamma> p';\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (p1\n                    \\<oplus>\n                    p2).\n                            l \\<in> labels \\<Gamma> p'\n 4. \\<And>\\<Gamma> la fip fmsg p q.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}unicast(fip, fmsg) .\n   p \\<triangleright> q);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}unicast(fip, fmsg) .\n                                    p \\<triangleright> q)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}unicast(fip, fmsg) .\n        p \\<triangleright> q).\n                            l \\<in> labels \\<Gamma> p'\n 5. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}broadcast(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}broadcast(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}broadcast(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 6. \\<And>\\<Gamma> la fips fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}groupcast(fips, fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}groupcast(fips, fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}groupcast(fips, fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 7. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}send(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}send(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> ({la}send(fmsg) .\n                    p).\n                            l \\<in> labels \\<Gamma> p'\n 8. \\<And>\\<Gamma> la fdata p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}deliver(fdata) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}deliver(fdata) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}deliver(fdata) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 9. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}receive(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}receive(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}receive(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 10. \\<And>\\<Gamma> pn.\n        \\<lbrakk>labels_dom (\\<Gamma>, call(pn));\n         \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n          \\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          l \\<in> labels \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n         \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (\\<Gamma> pn).\n                              l \\<in> labels \\<Gamma> p';\n         simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         l \\<in> labels \\<Gamma> (call(pn))\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (call(pn)).\n                             l \\<in> labels \\<Gamma> p'", "from ein"], ["proof (chain)\npicking this:\n  \\<exists>pn. p1\n               \\<oplus>\n               p2\n               \\<in> subterms (\\<Gamma> pn)", "have \"\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn)\"\n                       and \"\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  \\<exists>pn. p1\n               \\<oplus>\n               p2\n               \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn) &&&\n    \\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn)", "by auto"], ["proof (state)\nthis:\n  \\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn)\n  \\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn)\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> la fg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<langle>fg\\<rangle>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<langle>fg\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<langle>fg\\<rangle>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<langle>fg\\<rangle>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 2. \\<And>\\<Gamma> la fa p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<lbrakk>fa\\<rbrakk>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<lbrakk>fa\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<lbrakk>fa\\<rbrakk>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<lbrakk>fa\\<rbrakk>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 3. \\<And>\\<Gamma> p1 p2.\n       \\<lbrakk>labels_dom (\\<Gamma>, p1\n\\<oplus>\np2);\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         l \\<in> labels \\<Gamma> p1\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p1.\n                             l \\<in> labels \\<Gamma> p';\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         l \\<in> labels \\<Gamma> p2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p2.\n                             l \\<in> labels \\<Gamma> p';\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (p1\n                    \\<oplus>\n                    p2).\n                            l \\<in> labels \\<Gamma> p'\n 4. \\<And>\\<Gamma> la fip fmsg p q.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}unicast(fip, fmsg) .\n   p \\<triangleright> q);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}unicast(fip, fmsg) .\n                                    p \\<triangleright> q)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}unicast(fip, fmsg) .\n        p \\<triangleright> q).\n                            l \\<in> labels \\<Gamma> p'\n 5. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}broadcast(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}broadcast(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}broadcast(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 6. \\<And>\\<Gamma> la fips fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}groupcast(fips, fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}groupcast(fips, fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}groupcast(fips, fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 7. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}send(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}send(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> ({la}send(fmsg) .\n                    p).\n                            l \\<in> labels \\<Gamma> p'\n 8. \\<And>\\<Gamma> la fdata p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}deliver(fdata) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}deliver(fdata) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}deliver(fdata) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 9. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}receive(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}receive(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}receive(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 10. \\<And>\\<Gamma> pn.\n        \\<lbrakk>labels_dom (\\<Gamma>, call(pn));\n         \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n          \\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          l \\<in> labels \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n         \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (\\<Gamma> pn).\n                              l \\<in> labels \\<Gamma> p';\n         simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         l \\<in> labels \\<Gamma> (call(pn))\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (call(pn)).\n                             l \\<in> labels \\<Gamma> p'", "ultimately"], ["proof (chain)\npicking this:\n  l \\<in> labels \\<Gamma> p1\n  l \\<in> labels \\<Gamma> p2\n  \\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn)\n  \\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn)", "show \"\\<forall>p'\\<in>sterms \\<Gamma> (p1 \\<oplus> p2). l\\<in>labels \\<Gamma> p'\""], ["proof (prove)\nusing this:\n  l \\<in> labels \\<Gamma> p1\n  l \\<in> labels \\<Gamma> p2\n  \\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn)\n  \\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<forall>p'\\<in>sterms \\<Gamma> (p1\n                                     \\<oplus>\n                                     p2).\n       l \\<in> labels \\<Gamma> p'", "using wf IH1 [OF sl wf] IH2 [OF sl wf]"], ["proof (prove)\nusing this:\n  l \\<in> labels \\<Gamma> p1\n  l \\<in> labels \\<Gamma> p2\n  \\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn)\n  \\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn)\n  wellformed \\<Gamma>\n  \\<lbrakk>\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n   l \\<in> labels \\<Gamma> p1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p1.\n                       l \\<in> labels \\<Gamma> p'\n  \\<lbrakk>\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n   l \\<in> labels \\<Gamma> p2\\<rbrakk>\n  \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> p2.\n                       l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. \\<forall>p'\\<in>sterms \\<Gamma> (p1\n                                     \\<oplus>\n                                     p2).\n       l \\<in> labels \\<Gamma> p'", "by auto"], ["proof (state)\nthis:\n  \\<forall>p'\\<in>sterms \\<Gamma> (p1\n                                   \\<oplus>\n                                   p2).\n     l \\<in> labels \\<Gamma> p'\n\ngoal (9 subgoals):\n 1. \\<And>\\<Gamma> la fg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<langle>fg\\<rangle>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<langle>fg\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<langle>fg\\<rangle>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<langle>fg\\<rangle>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 2. \\<And>\\<Gamma> la fa p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}\\<lbrakk>fa\\<rbrakk>\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}\\<lbrakk>fa\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}\\<lbrakk>fa\\<rbrakk>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}\\<lbrakk>fa\\<rbrakk>\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 3. \\<And>\\<Gamma> la fip fmsg p q.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}unicast(fip, fmsg) .\n   p \\<triangleright> q);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}unicast(fip, fmsg) .\n                                    p \\<triangleright> q)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}unicast(fip, fmsg) .\n        p \\<triangleright> q).\n                            l \\<in> labels \\<Gamma> p'\n 4. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}broadcast(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}broadcast(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}broadcast(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 5. \\<And>\\<Gamma> la fips fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}groupcast(fips, fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}groupcast(fips, fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}groupcast(fips, fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 6. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}send(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}send(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> ({la}send(fmsg) .\n                    p).\n                            l \\<in> labels \\<Gamma> p'\n 7. \\<And>\\<Gamma> la fdata p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}deliver(fdata) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}deliver(fdata) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}deliver(fdata) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 8. \\<And>\\<Gamma> la fmsg p.\n       \\<lbrakk>labels_dom (\\<Gamma>, {la}receive(fmsg) .\n                            p);\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pn. {la}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        l \\<in> labels \\<Gamma> ({la}receive(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma>\n    ({la}receive(fmsg) .\n     p).\n                            l \\<in> labels \\<Gamma> p'\n 9. \\<And>\\<Gamma> pn.\n       \\<lbrakk>labels_dom (\\<Gamma>, call(pn));\n        \\<lbrakk>simple_labels \\<Gamma>; wellformed \\<Gamma>;\n         \\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n         l \\<in> labels \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n        \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (\\<Gamma> pn).\n                             l \\<in> labels \\<Gamma> p';\n        simple_labels \\<Gamma>; wellformed \\<Gamma>;\n        \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n        l \\<in> labels \\<Gamma> (call(pn))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p'\\<in>sterms \\<Gamma> (call(pn)).\n                            l \\<in> labels \\<Gamma> p'", "qed auto"], ["", "lemma labels_in_sterms:\n    fixes \\<Gamma> l p\n  assumes \"wellformed \\<Gamma>\"\n      and \"l\\<in>labels \\<Gamma> p\"\n    shows \"\\<exists>p'\\<in>sterms \\<Gamma> p. l\\<in>labels \\<Gamma> p'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p'\\<in>sterms \\<Gamma> p. l \\<in> labels \\<Gamma> p'", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. \\<exists>p'\\<in>sterms \\<Gamma> p. l \\<in> labels \\<Gamma> p'", "by (induct p rule: labels_pinduct [OF \\<open>wellformed \\<Gamma>\\<close>]) (auto intro: Un_iff)"], ["", "lemma labels_sterms_labels:\n    fixes \\<Gamma> p p' l\n  assumes \"wellformed \\<Gamma>\"\n      and \"p' \\<in> sterms \\<Gamma> p\"\n      and \"l \\<in> labels \\<Gamma> p'\"\n    shows \"l \\<in> labels \\<Gamma> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l \\<in> labels \\<Gamma> p", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p' \\<in> sterms \\<Gamma> p\n  l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. l \\<in> labels \\<Gamma> p", "by (induct p rule: labels_pinduct [OF \\<open>wellformed \\<Gamma>\\<close>]) auto"], ["", "primrec labelfrom :: \"int \\<Rightarrow> int \\<Rightarrow> ('s, 'm, 'p, 'a) seqp \\<Rightarrow> int \\<times> ('s, 'm, 'p, int) seqp\"\nwhere\n   \"labelfrom n nn ({_}\\<langle>f\\<rangle> p)  =\n      (let (nn', p') = labelfrom nn (nn + 1) p in\n       (nn', {n}\\<langle>f\\<rangle> p'))\"\n | \"labelfrom n nn ({_}\\<lbrakk>f\\<rbrakk> p) =\n      (let (nn', p') = labelfrom nn (nn + 1) p in\n       (nn', {n}\\<lbrakk>f\\<rbrakk> p'))\"\n | \"labelfrom n nn (p \\<oplus> q) =\n      (let (nn', p') = labelfrom n nn p in\n       let (nn'', q') = labelfrom n nn' q in\n       (nn'', p' \\<oplus> q'))\"\n | \"labelfrom n nn ({_}unicast(fip, fmsg). p \\<triangleright> q) =\n      (let (nn', p')  = labelfrom nn (nn + 1) p in\n       let (nn'', q') = labelfrom nn' (nn' + 1) q in\n       (nn'', {n}unicast(fip, fmsg). p' \\<triangleright> q'))\"\n | \"labelfrom n nn ({_}broadcast(fmsg). p) =\n      (let (nn', p') = labelfrom nn (nn + 1) p in\n       (nn', {n}broadcast(fmsg). p'))\"\n | \"labelfrom n nn ({_}groupcast(fipset, fmsg). p) =\n      (let (nn', p') = labelfrom nn (nn + 1) p in\n       (nn', {n}groupcast(fipset, fmsg). p'))\"\n | \"labelfrom n nn ({_}send(fmsg). p) =\n      (let (nn', p') = labelfrom nn (nn + 1) p in\n       (nn', {n}send(fmsg). p'))\"\n | \"labelfrom n nn ({_}deliver(fdata). p) =\n      (let (nn', p') = labelfrom nn (nn + 1) p in\n       (nn', {n}deliver(fdata). p'))\"\n | \"labelfrom n nn ({_}receive(fmsg). p) =\n      (let (nn', p') = labelfrom nn (nn + 1) p in\n       (nn', {n}receive(fmsg). p'))\"\n | \"labelfrom n nn (call(fargs)) = (nn - 1, call(fargs))\""], ["", "datatype 'pn label =\n    LABEL 'pn int  (\"_-:_\" [1000, 1000] 999)"], ["", "instantiation \"label\" :: (ord) ord\nbegin"], ["", "fun less_eq_label :: \"'a label \\<Rightarrow> 'a label \\<Rightarrow> bool\"\nwhere \"(l1-:n1) \\<le> (l2-:n2) = (l1 = l2 \\<and> n1 \\<le> n2)\""], ["", "definition less_label: \"(l1::'a label) < l2 \\<longleftrightarrow> l1 \\<le> l2 \\<and> \\<not> (l1 \\<le> l2)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a label, ord_class)", ".."], ["", "end"], ["", "abbreviation labelled :: \"'p \\<Rightarrow> ('s, 'm, 'p, 'a) seqp \\<Rightarrow> ('s, 'm, 'p, 'p label) seqp\"\nwhere \"labelled pn p \\<equiv> labelmap (\\<lambda>l. LABEL pn l) (snd (labelfrom 0 1 p))\""], ["", "end"]]}