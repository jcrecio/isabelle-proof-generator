{"file_name": "/home/qj213/afp-2021-10-22/thys/AWN/Invariants.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/AWN", "problem_names": ["lemma reachable_pair_induct [consumes, case_names init step]:\n  assumes \"(\\<xi>, p) \\<in> reachable A I\"\n      and \"\\<And>\\<xi> p. (\\<xi>, p) \\<in> init A \\<Longrightarrow> P \\<xi> p\"\n      and \"(\\<And>\\<xi> p \\<xi>' p' a. \\<lbrakk> (\\<xi>, p) \\<in> reachable A I; P \\<xi> p;\n                            ((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A; I a \\<rbrakk> \\<Longrightarrow> P \\<xi>' p')\"\n    shows \"P \\<xi> p\"", "lemma reachable_weakenE [elim]:\n  assumes \"s \\<in> reachable A P\"\n      and PQ: \"\\<And>a. P a \\<Longrightarrow> Q a\"\n    shows \"s \\<in> reachable A Q\"", "lemma reachable_weaken_TT [elim]:\n  assumes \"s \\<in> reachable A I\"\n    shows \"s \\<in> reachable A TT\"", "lemma init_empty_reachable_empty:\n  assumes \"init A = {}\"\n    shows \"reachable A I = {}\"", "lemma invariantI [intro]:\n  assumes init: \"\\<And>s. s \\<in> init A \\<Longrightarrow> P s\"\n      and step: \"\\<And>s a s'. \\<lbrakk> s \\<in> reachable A I; P s; (s, a, s') \\<in> trans A; I a \\<rbrakk> \\<Longrightarrow> P s'\"\n    shows \"A \\<TTurnstile> (I \\<rightarrow>) P\"", "lemma invariant_pairI [intro]:\n  assumes init: \"\\<And>\\<xi> p. (\\<xi>, p) \\<in> init A \\<Longrightarrow> P (\\<xi>, p)\"\n      and step: \"\\<And>\\<xi> p \\<xi>' p' a.\n                   \\<lbrakk> (\\<xi>, p) \\<in> reachable A I; P (\\<xi>, p); ((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A; I a \\<rbrakk>\n                   \\<Longrightarrow> P (\\<xi>', p')\"\n    shows \"A \\<TTurnstile> (I \\<rightarrow>) P\"", "lemma invariant_arbitraryI:\n  assumes \"\\<And>s. s \\<in> reachable A I \\<Longrightarrow> P s\"\n    shows \"A \\<TTurnstile> (I \\<rightarrow>) P\"", "lemma invariantD [dest]:\n  assumes \"A \\<TTurnstile> (I \\<rightarrow>) P\"\n      and \"s \\<in> reachable A I\"\n    shows \"P s\"", "lemma invariant_initE [elim]:\n  assumes invP: \"A \\<TTurnstile> (I \\<rightarrow>) P\"\n      and init: \"s \\<in> init A\"\n    shows \"P s\"", "lemma invariant_weakenE [elim]:\n  fixes T \\<sigma> P Q\n  assumes invP: \"A \\<TTurnstile> (PI \\<rightarrow>) P\"\n      and PQ:   \"\\<And>s. P s \\<Longrightarrow> Q s\"\n      and QIPI: \"\\<And>a. QI a \\<Longrightarrow> PI a\"\n    shows       \"A \\<TTurnstile> (QI \\<rightarrow>) Q\"", "lemma invariant_restrict_inD [dest]:\n  assumes \"A \\<TTurnstile> (TT \\<rightarrow>) P\"\n    shows \"A \\<TTurnstile> (QI \\<rightarrow>) P\"", "lemma step_invariant_true:\n  \"p \\<TTurnstile>\\<^sub>A (\\<lambda>(s, a, s'). True)\"", "lemma step_invariantI [intro]:\n  assumes *: \"\\<And>s a s'. \\<lbrakk> s\\<in>reachable A I; (s, a, s')\\<in>trans A; I a \\<rbrakk> \\<Longrightarrow> P (s, a, s')\"\n    shows \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P\"", "lemma step_invariantD [dest]:\n  assumes \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P\"\n      and \"s\\<in>reachable A I\"\n      and \"(s, a, s') \\<in> trans A\"\n      and \"I a\"\n    shows \"P (s, a, s')\"", "lemma step_invariantE [elim]:\n    fixes T \\<sigma> P I s a s'\n  assumes \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P\"\n      and \"s\\<in>reachable A I\"\n      and \"(s, a, s') \\<in> trans A\"\n      and \"I a\"\n      and \"P (s, a, s') \\<Longrightarrow> Q\"\n    shows \"Q\"", "lemma step_invariant_pairI [intro]:\n  assumes *: \"\\<And>\\<xi> p \\<xi>' p' a.\n              \\<lbrakk> (\\<xi>, p) \\<in> reachable A I; ((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A; I a \\<rbrakk>\n                                                       \\<Longrightarrow> P ((\\<xi>, p), a, (\\<xi>', p'))\"\n    shows \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P\"", "lemma step_invariant_arbitraryI:\n  assumes \"\\<And>\\<xi> p a \\<xi>' p'. \\<lbrakk> (\\<xi>, p) \\<in> reachable A I; ((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A; I a \\<rbrakk>\n           \\<Longrightarrow> P ((\\<xi>, p), a, (\\<xi>', p'))\"\n    shows \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P\"", "lemma step_invariant_weakenE [elim!]:\n  fixes T \\<sigma> P Q\n  assumes invP: \"A \\<TTurnstile>\\<^sub>A (PI \\<rightarrow>) P\"\n      and PQ:   \"\\<And>t. P t \\<Longrightarrow> Q t\"\n      and QIPI: \"\\<And>a. QI a \\<Longrightarrow> PI a\"\n    shows       \"A \\<TTurnstile>\\<^sub>A (QI \\<rightarrow>) Q\"", "lemma step_invariant_weaken_with_invariantE [elim]:\n  assumes pinv: \"A \\<TTurnstile> (I \\<rightarrow>) P\"\n      and qinv: \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) Q\"\n      and wr: \"\\<And>s a s'. \\<lbrakk> P s; P s'; Q (s, a, s'); I a \\<rbrakk> \\<Longrightarrow> R (s, a, s')\"\n    shows \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) R\"", "lemma step_to_invariantI:\n  assumes sinv: \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) Q\"\n      and init: \"\\<And>s. s \\<in> init A \\<Longrightarrow> P s\"\n      and step: \"\\<And>s s' a.\n                   \\<lbrakk> s \\<in> reachable A I;\n                     P s;\n                     Q (s, a, s');\n                     I a \\<rbrakk> \\<Longrightarrow> P s'\"\n    shows \"A \\<TTurnstile> (I \\<rightarrow>) P\""], "translations": [["", "lemma reachable_pair_induct [consumes, case_names init step]:\n  assumes \"(\\<xi>, p) \\<in> reachable A I\"\n      and \"\\<And>\\<xi> p. (\\<xi>, p) \\<in> init A \\<Longrightarrow> P \\<xi> p\"\n      and \"(\\<And>\\<xi> p \\<xi>' p' a. \\<lbrakk> (\\<xi>, p) \\<in> reachable A I; P \\<xi> p;\n                            ((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A; I a \\<rbrakk> \\<Longrightarrow> P \\<xi>' p')\"\n    shows \"P \\<xi> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<xi> p", "using assms(1)"], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. P \\<xi> p", "proof (induction \"(\\<xi>, p)\" arbitrary: \\<xi> p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p. (\\<xi>, p) \\<in> init A \\<Longrightarrow> P \\<xi> p\n 2. \\<And>s a \\<xi> p.\n       \\<lbrakk>s \\<in> reachable A I;\n        \\<And>\\<xi> p. s = (\\<xi>, p) \\<Longrightarrow> P \\<xi> p;\n        (s, a, \\<xi>, p) \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P \\<xi> p", "fix \\<xi> p"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p. (\\<xi>, p) \\<in> init A \\<Longrightarrow> P \\<xi> p\n 2. \\<And>s a \\<xi> p.\n       \\<lbrakk>s \\<in> reachable A I;\n        \\<And>\\<xi> p. s = (\\<xi>, p) \\<Longrightarrow> P \\<xi> p;\n        (s, a, \\<xi>, p) \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P \\<xi> p", "assume \"(\\<xi>, p) \\<in> init A\""], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> init A\n\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p. (\\<xi>, p) \\<in> init A \\<Longrightarrow> P \\<xi> p\n 2. \\<And>s a \\<xi> p.\n       \\<lbrakk>s \\<in> reachable A I;\n        \\<And>\\<xi> p. s = (\\<xi>, p) \\<Longrightarrow> P \\<xi> p;\n        (s, a, \\<xi>, p) \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P \\<xi> p", "with assms(2)"], ["proof (chain)\npicking this:\n  (?\\<xi>, ?p) \\<in> init A \\<Longrightarrow> P ?\\<xi> ?p\n  (\\<xi>, p) \\<in> init A", "show \"P \\<xi> p\""], ["proof (prove)\nusing this:\n  (?\\<xi>, ?p) \\<in> init A \\<Longrightarrow> P ?\\<xi> ?p\n  (\\<xi>, p) \\<in> init A\n\ngoal (1 subgoal):\n 1. P \\<xi> p", "."], ["proof (state)\nthis:\n  P \\<xi> p\n\ngoal (1 subgoal):\n 1. \\<And>s a \\<xi> p.\n       \\<lbrakk>s \\<in> reachable A I;\n        \\<And>\\<xi> p. s = (\\<xi>, p) \\<Longrightarrow> P \\<xi> p;\n        (s, a, \\<xi>, p) \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P \\<xi> p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s a \\<xi> p.\n       \\<lbrakk>s \\<in> reachable A I;\n        \\<And>\\<xi> p. s = (\\<xi>, p) \\<Longrightarrow> P \\<xi> p;\n        (s, a, \\<xi>, p) \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P \\<xi> p", "fix s a \\<xi>' p'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s a \\<xi> p.\n       \\<lbrakk>s \\<in> reachable A I;\n        \\<And>\\<xi> p. s = (\\<xi>, p) \\<Longrightarrow> P \\<xi> p;\n        (s, a, \\<xi>, p) \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P \\<xi> p", "assume \"s \\<in> reachable A I\"\n       and tr: \"(s, a, (\\<xi>', p')) \\<in> trans A\"\n       and \"I a\"\n       and IH: \"\\<And>\\<xi> p. s = (\\<xi>, p) \\<Longrightarrow> P \\<xi> p\""], ["proof (state)\nthis:\n  s \\<in> reachable A I\n  (s, a, \\<xi>', p') \\<in> automaton.trans A\n  I a\n  s = (?\\<xi>, ?p) \\<Longrightarrow> P ?\\<xi> ?p\n\ngoal (1 subgoal):\n 1. \\<And>s a \\<xi> p.\n       \\<lbrakk>s \\<in> reachable A I;\n        \\<And>\\<xi> p. s = (\\<xi>, p) \\<Longrightarrow> P \\<xi> p;\n        (s, a, \\<xi>, p) \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P \\<xi> p", "from this(1)"], ["proof (chain)\npicking this:\n  s \\<in> reachable A I", "obtain \\<xi> p where \"s = (\\<xi>, p)\"\n                              and \"(\\<xi>, p) \\<in> reachable A I\""], ["proof (prove)\nusing this:\n  s \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. (\\<And>\\<xi> p.\n        \\<lbrakk>s = (\\<xi>, p); (\\<xi>, p) \\<in> reachable A I\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis prod.collapse)"], ["proof (state)\nthis:\n  s = (\\<xi>, p)\n  (\\<xi>, p) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. \\<And>s a \\<xi> p.\n       \\<lbrakk>s \\<in> reachable A I;\n        \\<And>\\<xi> p. s = (\\<xi>, p) \\<Longrightarrow> P \\<xi> p;\n        (s, a, \\<xi>, p) \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P \\<xi> p", "note this(2)"], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. \\<And>s a \\<xi> p.\n       \\<lbrakk>s \\<in> reachable A I;\n        \\<And>\\<xi> p. s = (\\<xi>, p) \\<Longrightarrow> P \\<xi> p;\n        (s, a, \\<xi>, p) \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P \\<xi> p", "moreover"], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. \\<And>s a \\<xi> p.\n       \\<lbrakk>s \\<in> reachable A I;\n        \\<And>\\<xi> p. s = (\\<xi>, p) \\<Longrightarrow> P \\<xi> p;\n        (s, a, \\<xi>, p) \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P \\<xi> p", "from IH and \\<open>s = (\\<xi>, p)\\<close>"], ["proof (chain)\npicking this:\n  s = (?\\<xi>, ?p) \\<Longrightarrow> P ?\\<xi> ?p\n  s = (\\<xi>, p)", "have \"P \\<xi> p\""], ["proof (prove)\nusing this:\n  s = (?\\<xi>, ?p) \\<Longrightarrow> P ?\\<xi> ?p\n  s = (\\<xi>, p)\n\ngoal (1 subgoal):\n 1. P \\<xi> p", "."], ["proof (state)\nthis:\n  P \\<xi> p\n\ngoal (1 subgoal):\n 1. \\<And>s a \\<xi> p.\n       \\<lbrakk>s \\<in> reachable A I;\n        \\<And>\\<xi> p. s = (\\<xi>, p) \\<Longrightarrow> P \\<xi> p;\n        (s, a, \\<xi>, p) \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P \\<xi> p", "moreover"], ["proof (state)\nthis:\n  P \\<xi> p\n\ngoal (1 subgoal):\n 1. \\<And>s a \\<xi> p.\n       \\<lbrakk>s \\<in> reachable A I;\n        \\<And>\\<xi> p. s = (\\<xi>, p) \\<Longrightarrow> P \\<xi> p;\n        (s, a, \\<xi>, p) \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P \\<xi> p", "from tr and \\<open>s = (\\<xi>, p)\\<close>"], ["proof (chain)\npicking this:\n  (s, a, \\<xi>', p') \\<in> automaton.trans A\n  s = (\\<xi>, p)", "have \"((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A\""], ["proof (prove)\nusing this:\n  (s, a, \\<xi>', p') \\<in> automaton.trans A\n  s = (\\<xi>, p)\n\ngoal (1 subgoal):\n 1. ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A", "by simp"], ["proof (state)\nthis:\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n\ngoal (1 subgoal):\n 1. \\<And>s a \\<xi> p.\n       \\<lbrakk>s \\<in> reachable A I;\n        \\<And>\\<xi> p. s = (\\<xi>, p) \\<Longrightarrow> P \\<xi> p;\n        (s, a, \\<xi>, p) \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P \\<xi> p", "ultimately"], ["proof (chain)\npicking this:\n  (\\<xi>, p) \\<in> reachable A I\n  P \\<xi> p\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A", "show \"P \\<xi>' p'\""], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> reachable A I\n  P \\<xi> p\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n\ngoal (1 subgoal):\n 1. P \\<xi>' p'", "using \\<open>I a\\<close>"], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> reachable A I\n  P \\<xi> p\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. P \\<xi>' p'", "by (rule assms(3))"], ["proof (state)\nthis:\n  P \\<xi>' p'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reachable_weakenE [elim]:\n  assumes \"s \\<in> reachable A P\"\n      and PQ: \"\\<And>a. P a \\<Longrightarrow> Q a\"\n    shows \"s \\<in> reachable A Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> reachable A Q", "using assms(1)"], ["proof (prove)\nusing this:\n  s \\<in> reachable A P\n\ngoal (1 subgoal):\n 1. s \\<in> reachable A Q", "proof (induction)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s. s \\<in> init A \\<Longrightarrow> s \\<in> reachable A Q\n 2. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A P; s \\<in> reachable A Q;\n        (s, a, s') \\<in> automaton.trans A; P a\\<rbrakk>\n       \\<Longrightarrow> s' \\<in> reachable A Q", "fix s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s. s \\<in> init A \\<Longrightarrow> s \\<in> reachable A Q\n 2. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A P; s \\<in> reachable A Q;\n        (s, a, s') \\<in> automaton.trans A; P a\\<rbrakk>\n       \\<Longrightarrow> s' \\<in> reachable A Q", "assume \"s \\<in> init A\""], ["proof (state)\nthis:\n  s \\<in> init A\n\ngoal (2 subgoals):\n 1. \\<And>s. s \\<in> init A \\<Longrightarrow> s \\<in> reachable A Q\n 2. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A P; s \\<in> reachable A Q;\n        (s, a, s') \\<in> automaton.trans A; P a\\<rbrakk>\n       \\<Longrightarrow> s' \\<in> reachable A Q", "thus \"s \\<in> reachable A Q\""], ["proof (prove)\nusing this:\n  s \\<in> init A\n\ngoal (1 subgoal):\n 1. s \\<in> reachable A Q", ".."], ["proof (state)\nthis:\n  s \\<in> reachable A Q\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A P; s \\<in> reachable A Q;\n        (s, a, s') \\<in> automaton.trans A; P a\\<rbrakk>\n       \\<Longrightarrow> s' \\<in> reachable A Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A P; s \\<in> reachable A Q;\n        (s, a, s') \\<in> automaton.trans A; P a\\<rbrakk>\n       \\<Longrightarrow> s' \\<in> reachable A Q", "fix s a s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A P; s \\<in> reachable A Q;\n        (s, a, s') \\<in> automaton.trans A; P a\\<rbrakk>\n       \\<Longrightarrow> s' \\<in> reachable A Q", "assume \"s \\<in> reachable A P\"\n       and \"s \\<in> reachable A Q\"\n       and \"(s, a, s') \\<in> trans A\"\n       and \"P a\""], ["proof (state)\nthis:\n  s \\<in> reachable A P\n  s \\<in> reachable A Q\n  (s, a, s') \\<in> automaton.trans A\n  P a\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A P; s \\<in> reachable A Q;\n        (s, a, s') \\<in> automaton.trans A; P a\\<rbrakk>\n       \\<Longrightarrow> s' \\<in> reachable A Q", "from \\<open>P a\\<close>"], ["proof (chain)\npicking this:\n  P a", "have \"Q a\""], ["proof (prove)\nusing this:\n  P a\n\ngoal (1 subgoal):\n 1. Q a", "by (rule PQ)"], ["proof (state)\nthis:\n  Q a\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A P; s \\<in> reachable A Q;\n        (s, a, s') \\<in> automaton.trans A; P a\\<rbrakk>\n       \\<Longrightarrow> s' \\<in> reachable A Q", "with \\<open>s \\<in> reachable A Q\\<close> and \\<open>(s, a, s') \\<in> trans A\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> reachable A Q\n  (s, a, s') \\<in> automaton.trans A\n  Q a", "show \"s' \\<in> reachable A Q\""], ["proof (prove)\nusing this:\n  s \\<in> reachable A Q\n  (s, a, s') \\<in> automaton.trans A\n  Q a\n\ngoal (1 subgoal):\n 1. s' \\<in> reachable A Q", ".."], ["proof (state)\nthis:\n  s' \\<in> reachable A Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reachable_weaken_TT [elim]:\n  assumes \"s \\<in> reachable A I\"\n    shows \"s \\<in> reachable A TT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> reachable A TT", "using assms"], ["proof (prove)\nusing this:\n  s \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. s \\<in> reachable A TT", "by rule simp"], ["", "lemma init_empty_reachable_empty:\n  assumes \"init A = {}\"\n    shows \"reachable A I = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reachable A I = {}", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. reachable A I \\<noteq> {} \\<Longrightarrow> False", "assume \"reachable A I \\<noteq> {}\""], ["proof (state)\nthis:\n  reachable A I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. reachable A I \\<noteq> {} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  reachable A I \\<noteq> {}", "obtain s where \"s \\<in> reachable A I\""], ["proof (prove)\nusing this:\n  reachable A I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        s \\<in> reachable A I \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. reachable A I \\<noteq> {} \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  s \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. False", "proof (induction rule: reachable.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s. s \\<in> init A \\<Longrightarrow> False\n 2. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; False;\n        (s, a, s') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> False", "fix s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s. s \\<in> init A \\<Longrightarrow> False\n 2. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; False;\n        (s, a, s') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"s \\<in> init A\""], ["proof (state)\nthis:\n  s \\<in> init A\n\ngoal (2 subgoals):\n 1. \\<And>s. s \\<in> init A \\<Longrightarrow> False\n 2. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; False;\n        (s, a, s') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> False", "with \\<open>init A = {}\\<close>"], ["proof (chain)\npicking this:\n  init A = {}\n  s \\<in> init A", "show False"], ["proof (prove)\nusing this:\n  init A = {}\n  s \\<in> init A\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; False;\n        (s, a, s') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> False", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection Invariance"], ["", "definition invariant\n  :: \"('s, 'a) automaton \\<Rightarrow> ('a \\<Rightarrow> bool) \\<Rightarrow> ('s \\<Rightarrow> bool) \\<Rightarrow> bool\"\n  (\"_ \\<TTurnstile> (1'(_ \\<rightarrow>')/ _)\" [100, 0, 9] 8)\nwhere\n  \"(A \\<TTurnstile> (I \\<rightarrow>) P) = (\\<forall>s\\<in>reachable A I. P s)\""], ["", "abbreviation\n  any_invariant\n  :: \"('s, 'a) automaton \\<Rightarrow> ('s \\<Rightarrow> bool) \\<Rightarrow> bool\"\n  (\"_ \\<TTurnstile> _\" [100, 9] 8)\nwhere\n  \"(A \\<TTurnstile> P) \\<equiv> (A \\<TTurnstile> (TT \\<rightarrow>) P)\""], ["", "lemma invariantI [intro]:\n  assumes init: \"\\<And>s. s \\<in> init A \\<Longrightarrow> P s\"\n      and step: \"\\<And>s a s'. \\<lbrakk> s \\<in> reachable A I; P s; (s, a, s') \\<in> trans A; I a \\<rbrakk> \\<Longrightarrow> P s'\"\n    shows \"A \\<TTurnstile> (I \\<rightarrow>) P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<TTurnstile> (I \\<rightarrow>) P", "unfolding invariant_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ball (reachable A I) P", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> reachable A I \\<Longrightarrow> P x", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> reachable A I \\<Longrightarrow> P x", "assume \"s \\<in> reachable A I\""], ["proof (state)\nthis:\n  s \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> reachable A I \\<Longrightarrow> P x", "thus \"P s\""], ["proof (prove)\nusing this:\n  s \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. P s", "proof induction"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s. s \\<in> init A \\<Longrightarrow> P s\n 2. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; P s;\n        (s, a, s') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P s'", "fix s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s. s \\<in> init A \\<Longrightarrow> P s\n 2. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; P s;\n        (s, a, s') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P s'", "assume \"s \\<in> init A\""], ["proof (state)\nthis:\n  s \\<in> init A\n\ngoal (2 subgoals):\n 1. \\<And>s. s \\<in> init A \\<Longrightarrow> P s\n 2. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; P s;\n        (s, a, s') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P s'", "thus \"P s\""], ["proof (prove)\nusing this:\n  s \\<in> init A\n\ngoal (1 subgoal):\n 1. P s", "by (rule init)"], ["proof (state)\nthis:\n  P s\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; P s;\n        (s, a, s') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; P s;\n        (s, a, s') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P s'", "fix s a s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; P s;\n        (s, a, s') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P s'", "assume \"s \\<in> reachable A I\"\n         and \"P s\"\n         and \"(s, a, s') \\<in> trans A\"\n         and \"I a\""], ["proof (state)\nthis:\n  s \\<in> reachable A I\n  P s\n  (s, a, s') \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; P s;\n        (s, a, s') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P s'", "thus \"P s'\""], ["proof (prove)\nusing this:\n  s \\<in> reachable A I\n  P s\n  (s, a, s') \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. P s'", "by (rule step)"], ["proof (state)\nthis:\n  P s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma invariant_pairI [intro]:\n  assumes init: \"\\<And>\\<xi> p. (\\<xi>, p) \\<in> init A \\<Longrightarrow> P (\\<xi>, p)\"\n      and step: \"\\<And>\\<xi> p \\<xi>' p' a.\n                   \\<lbrakk> (\\<xi>, p) \\<in> reachable A I; P (\\<xi>, p); ((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A; I a \\<rbrakk>\n                   \\<Longrightarrow> P (\\<xi>', p')\"\n    shows \"A \\<TTurnstile> (I \\<rightarrow>) P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<TTurnstile> (I \\<rightarrow>) P", "using assms"], ["proof (prove)\nusing this:\n  (?\\<xi>, ?p) \\<in> init A \\<Longrightarrow> P (?\\<xi>, ?p)\n  \\<lbrakk>(?\\<xi>, ?p) \\<in> reachable A I; P (?\\<xi>, ?p);\n   ((?\\<xi>, ?p), ?a, ?\\<xi>', ?p') \\<in> automaton.trans A; I ?a\\<rbrakk>\n  \\<Longrightarrow> P (?\\<xi>', ?p')\n\ngoal (1 subgoal):\n 1. A \\<TTurnstile> (I \\<rightarrow>) P", "by auto"], ["", "lemma invariant_arbitraryI:\n  assumes \"\\<And>s. s \\<in> reachable A I \\<Longrightarrow> P s\"\n    shows \"A \\<TTurnstile> (I \\<rightarrow>) P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<TTurnstile> (I \\<rightarrow>) P", "using assms"], ["proof (prove)\nusing this:\n  ?s \\<in> reachable A I \\<Longrightarrow> P ?s\n\ngoal (1 subgoal):\n 1. A \\<TTurnstile> (I \\<rightarrow>) P", "unfolding invariant_def"], ["proof (prove)\nusing this:\n  ?s \\<in> reachable A I \\<Longrightarrow> P ?s\n\ngoal (1 subgoal):\n 1. Ball (reachable A I) P", "by simp"], ["", "lemma invariantD [dest]:\n  assumes \"A \\<TTurnstile> (I \\<rightarrow>) P\"\n      and \"s \\<in> reachable A I\"\n    shows \"P s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P s", "using assms"], ["proof (prove)\nusing this:\n  A \\<TTurnstile> (I \\<rightarrow>) P\n  s \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. P s", "unfolding invariant_def"], ["proof (prove)\nusing this:\n  Ball (reachable A I) P\n  s \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. P s", "by blast"], ["", "lemma invariant_initE [elim]:\n  assumes invP: \"A \\<TTurnstile> (I \\<rightarrow>) P\"\n      and init: \"s \\<in> init A\"\n    shows \"P s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P s", "from init"], ["proof (chain)\npicking this:\n  s \\<in> init A", "have \"s \\<in> reachable A I\""], ["proof (prove)\nusing this:\n  s \\<in> init A\n\ngoal (1 subgoal):\n 1. s \\<in> reachable A I", ".."], ["proof (state)\nthis:\n  s \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. P s", "with invP"], ["proof (chain)\npicking this:\n  A \\<TTurnstile> (I \\<rightarrow>) P\n  s \\<in> reachable A I", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<TTurnstile> (I \\<rightarrow>) P\n  s \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. P s", ".."], ["proof (state)\nthis:\n  P s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma invariant_weakenE [elim]:\n  fixes T \\<sigma> P Q\n  assumes invP: \"A \\<TTurnstile> (PI \\<rightarrow>) P\"\n      and PQ:   \"\\<And>s. P s \\<Longrightarrow> Q s\"\n      and QIPI: \"\\<And>a. QI a \\<Longrightarrow> PI a\"\n    shows       \"A \\<TTurnstile> (QI \\<rightarrow>) Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<TTurnstile> (QI \\<rightarrow>) Q", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s. s \\<in> init A \\<Longrightarrow> Q s\n 2. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A QI; Q s;\n        (s, a, s') \\<in> automaton.trans A; QI a\\<rbrakk>\n       \\<Longrightarrow> Q s'", "fix s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s. s \\<in> init A \\<Longrightarrow> Q s\n 2. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A QI; Q s;\n        (s, a, s') \\<in> automaton.trans A; QI a\\<rbrakk>\n       \\<Longrightarrow> Q s'", "assume \"s \\<in> init A\""], ["proof (state)\nthis:\n  s \\<in> init A\n\ngoal (2 subgoals):\n 1. \\<And>s. s \\<in> init A \\<Longrightarrow> Q s\n 2. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A QI; Q s;\n        (s, a, s') \\<in> automaton.trans A; QI a\\<rbrakk>\n       \\<Longrightarrow> Q s'", "with invP"], ["proof (chain)\npicking this:\n  A \\<TTurnstile> (PI \\<rightarrow>) P\n  s \\<in> init A", "have \"P s\""], ["proof (prove)\nusing this:\n  A \\<TTurnstile> (PI \\<rightarrow>) P\n  s \\<in> init A\n\ngoal (1 subgoal):\n 1. P s", ".."], ["proof (state)\nthis:\n  P s\n\ngoal (2 subgoals):\n 1. \\<And>s. s \\<in> init A \\<Longrightarrow> Q s\n 2. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A QI; Q s;\n        (s, a, s') \\<in> automaton.trans A; QI a\\<rbrakk>\n       \\<Longrightarrow> Q s'", "thus \"Q s\""], ["proof (prove)\nusing this:\n  P s\n\ngoal (1 subgoal):\n 1. Q s", "by (rule PQ)"], ["proof (state)\nthis:\n  Q s\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A QI; Q s;\n        (s, a, s') \\<in> automaton.trans A; QI a\\<rbrakk>\n       \\<Longrightarrow> Q s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A QI; Q s;\n        (s, a, s') \\<in> automaton.trans A; QI a\\<rbrakk>\n       \\<Longrightarrow> Q s'", "fix s a s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A QI; Q s;\n        (s, a, s') \\<in> automaton.trans A; QI a\\<rbrakk>\n       \\<Longrightarrow> Q s'", "assume \"s \\<in> reachable A QI\"\n       and \"(s, a, s') \\<in> trans A\"\n       and \"QI a\""], ["proof (state)\nthis:\n  s \\<in> reachable A QI\n  (s, a, s') \\<in> automaton.trans A\n  QI a\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A QI; Q s;\n        (s, a, s') \\<in> automaton.trans A; QI a\\<rbrakk>\n       \\<Longrightarrow> Q s'", "from \\<open>QI a\\<close>"], ["proof (chain)\npicking this:\n  QI a", "have \"PI a\""], ["proof (prove)\nusing this:\n  QI a\n\ngoal (1 subgoal):\n 1. PI a", "by (rule QIPI)"], ["proof (state)\nthis:\n  PI a\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A QI; Q s;\n        (s, a, s') \\<in> automaton.trans A; QI a\\<rbrakk>\n       \\<Longrightarrow> Q s'", "from \\<open>s \\<in> reachable A QI\\<close> and QIPI"], ["proof (chain)\npicking this:\n  s \\<in> reachable A QI\n  QI ?a \\<Longrightarrow> PI ?a", "have \"s \\<in> reachable A PI\""], ["proof (prove)\nusing this:\n  s \\<in> reachable A QI\n  QI ?a \\<Longrightarrow> PI ?a\n\ngoal (1 subgoal):\n 1. s \\<in> reachable A PI", ".."], ["proof (state)\nthis:\n  s \\<in> reachable A PI\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A QI; Q s;\n        (s, a, s') \\<in> automaton.trans A; QI a\\<rbrakk>\n       \\<Longrightarrow> Q s'", "hence \"s' \\<in> reachable A PI\""], ["proof (prove)\nusing this:\n  s \\<in> reachable A PI\n\ngoal (1 subgoal):\n 1. s' \\<in> reachable A PI", "using \\<open>(s, a, s') \\<in> trans A\\<close> and \\<open>PI a\\<close>"], ["proof (prove)\nusing this:\n  s \\<in> reachable A PI\n  (s, a, s') \\<in> automaton.trans A\n  PI a\n\ngoal (1 subgoal):\n 1. s' \\<in> reachable A PI", ".."], ["proof (state)\nthis:\n  s' \\<in> reachable A PI\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A QI; Q s;\n        (s, a, s') \\<in> automaton.trans A; QI a\\<rbrakk>\n       \\<Longrightarrow> Q s'", "with invP"], ["proof (chain)\npicking this:\n  A \\<TTurnstile> (PI \\<rightarrow>) P\n  s' \\<in> reachable A PI", "have \"P s'\""], ["proof (prove)\nusing this:\n  A \\<TTurnstile> (PI \\<rightarrow>) P\n  s' \\<in> reachable A PI\n\ngoal (1 subgoal):\n 1. P s'", ".."], ["proof (state)\nthis:\n  P s'\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A QI; Q s;\n        (s, a, s') \\<in> automaton.trans A; QI a\\<rbrakk>\n       \\<Longrightarrow> Q s'", "thus \"Q s'\""], ["proof (prove)\nusing this:\n  P s'\n\ngoal (1 subgoal):\n 1. Q s'", "by (rule PQ)"], ["proof (state)\nthis:\n  Q s'\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  step_invariant\n  :: \"('s, 'a) automaton \\<Rightarrow> ('a \\<Rightarrow> bool) \\<Rightarrow> (('s, 'a) transition \\<Rightarrow> bool) \\<Rightarrow> bool\"\n  (\"_ \\<TTurnstile>\\<^sub>A (1'(_ \\<rightarrow>')/ _)\" [100, 0, 0] 8)\nwhere\n  \"(A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P) = (\\<forall>a. I a \\<longrightarrow> (\\<forall>s\\<in>reachable A I. (\\<forall>s'.(s, a, s') \\<in> trans A \\<longrightarrow> P (s, a, s'))))\""], ["", "lemma invariant_restrict_inD [dest]:\n  assumes \"A \\<TTurnstile> (TT \\<rightarrow>) P\"\n    shows \"A \\<TTurnstile> (QI \\<rightarrow>) P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<TTurnstile> (QI \\<rightarrow>) P", "using assms"], ["proof (prove)\nusing this:\n  A \\<TTurnstile> P\n\ngoal (1 subgoal):\n 1. A \\<TTurnstile> (QI \\<rightarrow>) P", "by auto"], ["", "abbreviation\n  any_step_invariant\n  :: \"('s, 'a) automaton \\<Rightarrow> (('s, 'a) transition \\<Rightarrow> bool) \\<Rightarrow> bool\"\n  (\"_ \\<TTurnstile>\\<^sub>A _\" [100, 9] 8)\nwhere\n  \"(A \\<TTurnstile>\\<^sub>A P) \\<equiv> (A \\<TTurnstile>\\<^sub>A (TT \\<rightarrow>) P)\""], ["", "lemma step_invariant_true:\n  \"p \\<TTurnstile>\\<^sub>A (\\<lambda>(s, a, s'). True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<TTurnstile>\\<^sub>A (\\<lambda>(s, a, s'). True)", "unfolding step_invariant_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a.\n       TT a \\<longrightarrow>\n       (\\<forall>s\\<in>reachable p TT.\n           \\<forall>s'.\n              (s, a, s') \\<in> automaton.trans p \\<longrightarrow>\n              (case (s, a, s') of (s, a, s') \\<Rightarrow> True))", "by simp"], ["", "lemma step_invariantI [intro]:\n  assumes *: \"\\<And>s a s'. \\<lbrakk> s\\<in>reachable A I; (s, a, s')\\<in>trans A; I a \\<rbrakk> \\<Longrightarrow> P (s, a, s')\"\n    shows \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P", "unfolding step_invariant_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a.\n       I a \\<longrightarrow>\n       (\\<forall>s\\<in>reachable A I.\n           \\<forall>s'.\n              (s, a, s') \\<in> automaton.trans A \\<longrightarrow>\n              P (s, a, s'))", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s \\<in> reachable A I; (?s, ?a, ?s') \\<in> automaton.trans A;\n   I ?a\\<rbrakk>\n  \\<Longrightarrow> P (?s, ?a, ?s')\n\ngoal (1 subgoal):\n 1. \\<forall>a.\n       I a \\<longrightarrow>\n       (\\<forall>s\\<in>reachable A I.\n           \\<forall>s'.\n              (s, a, s') \\<in> automaton.trans A \\<longrightarrow>\n              P (s, a, s'))", "by auto"], ["", "lemma step_invariantD [dest]:\n  assumes \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P\"\n      and \"s\\<in>reachable A I\"\n      and \"(s, a, s') \\<in> trans A\"\n      and \"I a\"\n    shows \"P (s, a, s')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (s, a, s')", "using assms"], ["proof (prove)\nusing this:\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P\n  s \\<in> reachable A I\n  (s, a, s') \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. P (s, a, s')", "unfolding step_invariant_def"], ["proof (prove)\nusing this:\n  \\<forall>a.\n     I a \\<longrightarrow>\n     (\\<forall>s\\<in>reachable A I.\n         \\<forall>s'.\n            (s, a, s') \\<in> automaton.trans A \\<longrightarrow>\n            P (s, a, s'))\n  s \\<in> reachable A I\n  (s, a, s') \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. P (s, a, s')", "by blast"], ["", "lemma step_invariantE [elim]:\n    fixes T \\<sigma> P I s a s'\n  assumes \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P\"\n      and \"s\\<in>reachable A I\"\n      and \"(s, a, s') \\<in> trans A\"\n      and \"I a\"\n      and \"P (s, a, s') \\<Longrightarrow> Q\"\n    shows \"Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q", "using assms"], ["proof (prove)\nusing this:\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P\n  s \\<in> reachable A I\n  (s, a, s') \\<in> automaton.trans A\n  I a\n  P (s, a, s') \\<Longrightarrow> Q\n\ngoal (1 subgoal):\n 1. Q", "by auto"], ["", "lemma step_invariant_pairI [intro]:\n  assumes *: \"\\<And>\\<xi> p \\<xi>' p' a.\n              \\<lbrakk> (\\<xi>, p) \\<in> reachable A I; ((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A; I a \\<rbrakk>\n                                                       \\<Longrightarrow> P ((\\<xi>, p), a, (\\<xi>', p'))\"\n    shows \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?\\<xi>, ?p) \\<in> reachable A I;\n   ((?\\<xi>, ?p), ?a, ?\\<xi>', ?p') \\<in> automaton.trans A; I ?a\\<rbrakk>\n  \\<Longrightarrow> P ((?\\<xi>, ?p), ?a, ?\\<xi>', ?p')\n\ngoal (1 subgoal):\n 1. A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P", "by auto"], ["", "lemma step_invariant_arbitraryI:\n  assumes \"\\<And>\\<xi> p a \\<xi>' p'. \\<lbrakk> (\\<xi>, p) \\<in> reachable A I; ((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A; I a \\<rbrakk>\n           \\<Longrightarrow> P ((\\<xi>, p), a, (\\<xi>', p'))\"\n    shows \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?\\<xi>, ?p) \\<in> reachable A I;\n   ((?\\<xi>, ?p), ?a, ?\\<xi>', ?p') \\<in> automaton.trans A; I ?a\\<rbrakk>\n  \\<Longrightarrow> P ((?\\<xi>, ?p), ?a, ?\\<xi>', ?p')\n\ngoal (1 subgoal):\n 1. A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P", "by auto"], ["", "lemma step_invariant_weakenE [elim!]:\n  fixes T \\<sigma> P Q\n  assumes invP: \"A \\<TTurnstile>\\<^sub>A (PI \\<rightarrow>) P\"\n      and PQ:   \"\\<And>t. P t \\<Longrightarrow> Q t\"\n      and QIPI: \"\\<And>a. QI a \\<Longrightarrow> PI a\"\n    shows       \"A \\<TTurnstile>\\<^sub>A (QI \\<rightarrow>) Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<TTurnstile>\\<^sub>A (QI \\<rightarrow>) Q", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A QI; (s, a, s') \\<in> automaton.trans A;\n        QI a\\<rbrakk>\n       \\<Longrightarrow> Q (s, a, s')", "fix s a s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A QI; (s, a, s') \\<in> automaton.trans A;\n        QI a\\<rbrakk>\n       \\<Longrightarrow> Q (s, a, s')", "assume \"s \\<in> reachable A QI\"\n       and \"(s, a, s') \\<in> trans A\"\n       and \"QI a\""], ["proof (state)\nthis:\n  s \\<in> reachable A QI\n  (s, a, s') \\<in> automaton.trans A\n  QI a\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A QI; (s, a, s') \\<in> automaton.trans A;\n        QI a\\<rbrakk>\n       \\<Longrightarrow> Q (s, a, s')", "from \\<open>QI a\\<close>"], ["proof (chain)\npicking this:\n  QI a", "have \"PI a\""], ["proof (prove)\nusing this:\n  QI a\n\ngoal (1 subgoal):\n 1. PI a", "by (rule QIPI)"], ["proof (state)\nthis:\n  PI a\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A QI; (s, a, s') \\<in> automaton.trans A;\n        QI a\\<rbrakk>\n       \\<Longrightarrow> Q (s, a, s')", "from \\<open>s \\<in> reachable A QI\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> reachable A QI", "have \"s \\<in> reachable A PI\""], ["proof (prove)\nusing this:\n  s \\<in> reachable A QI\n\ngoal (1 subgoal):\n 1. s \\<in> reachable A PI", "using QIPI"], ["proof (prove)\nusing this:\n  s \\<in> reachable A QI\n  QI ?a \\<Longrightarrow> PI ?a\n\ngoal (1 subgoal):\n 1. s \\<in> reachable A PI", ".."], ["proof (state)\nthis:\n  s \\<in> reachable A PI\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A QI; (s, a, s') \\<in> automaton.trans A;\n        QI a\\<rbrakk>\n       \\<Longrightarrow> Q (s, a, s')", "with invP"], ["proof (chain)\npicking this:\n  A \\<TTurnstile>\\<^sub>A (PI \\<rightarrow>) P\n  s \\<in> reachable A PI", "have \"P (s, a, s')\""], ["proof (prove)\nusing this:\n  A \\<TTurnstile>\\<^sub>A (PI \\<rightarrow>) P\n  s \\<in> reachable A PI\n\ngoal (1 subgoal):\n 1. P (s, a, s')", "using \\<open>(s, a, s') \\<in> trans A\\<close> \\<open>PI a\\<close>"], ["proof (prove)\nusing this:\n  A \\<TTurnstile>\\<^sub>A (PI \\<rightarrow>) P\n  s \\<in> reachable A PI\n  (s, a, s') \\<in> automaton.trans A\n  PI a\n\ngoal (1 subgoal):\n 1. P (s, a, s')", ".."], ["proof (state)\nthis:\n  P (s, a, s')\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A QI; (s, a, s') \\<in> automaton.trans A;\n        QI a\\<rbrakk>\n       \\<Longrightarrow> Q (s, a, s')", "thus \"Q (s, a, s')\""], ["proof (prove)\nusing this:\n  P (s, a, s')\n\ngoal (1 subgoal):\n 1. Q (s, a, s')", "by (rule PQ)"], ["proof (state)\nthis:\n  Q (s, a, s')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma step_invariant_weaken_with_invariantE [elim]:\n  assumes pinv: \"A \\<TTurnstile> (I \\<rightarrow>) P\"\n      and qinv: \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) Q\"\n      and wr: \"\\<And>s a s'. \\<lbrakk> P s; P s'; Q (s, a, s'); I a \\<rbrakk> \\<Longrightarrow> R (s, a, s')\"\n    shows \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) R", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; (s, a, s') \\<in> automaton.trans A;\n        I a\\<rbrakk>\n       \\<Longrightarrow> R (s, a, s')", "fix s a s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; (s, a, s') \\<in> automaton.trans A;\n        I a\\<rbrakk>\n       \\<Longrightarrow> R (s, a, s')", "assume sr: \"s \\<in> reachable A I\"\n       and tr: \"(s, a, s') \\<in> trans A\"\n       and \"I a\""], ["proof (state)\nthis:\n  s \\<in> reachable A I\n  (s, a, s') \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; (s, a, s') \\<in> automaton.trans A;\n        I a\\<rbrakk>\n       \\<Longrightarrow> R (s, a, s')", "hence \"s' \\<in> reachable A I\""], ["proof (prove)\nusing this:\n  s \\<in> reachable A I\n  (s, a, s') \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. s' \\<in> reachable A I", ".."], ["proof (state)\nthis:\n  s' \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; (s, a, s') \\<in> automaton.trans A;\n        I a\\<rbrakk>\n       \\<Longrightarrow> R (s, a, s')", "with pinv"], ["proof (chain)\npicking this:\n  A \\<TTurnstile> (I \\<rightarrow>) P\n  s' \\<in> reachable A I", "have \"P s'\""], ["proof (prove)\nusing this:\n  A \\<TTurnstile> (I \\<rightarrow>) P\n  s' \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. P s'", ".."], ["proof (state)\nthis:\n  P s'\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; (s, a, s') \\<in> automaton.trans A;\n        I a\\<rbrakk>\n       \\<Longrightarrow> R (s, a, s')", "from pinv and sr"], ["proof (chain)\npicking this:\n  A \\<TTurnstile> (I \\<rightarrow>) P\n  s \\<in> reachable A I", "have \"P s\""], ["proof (prove)\nusing this:\n  A \\<TTurnstile> (I \\<rightarrow>) P\n  s \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. P s", ".."], ["proof (state)\nthis:\n  P s\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; (s, a, s') \\<in> automaton.trans A;\n        I a\\<rbrakk>\n       \\<Longrightarrow> R (s, a, s')", "from qinv sr tr \\<open>I a\\<close>"], ["proof (chain)\npicking this:\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) Q\n  s \\<in> reachable A I\n  (s, a, s') \\<in> automaton.trans A\n  I a", "have \"Q (s, a, s')\""], ["proof (prove)\nusing this:\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) Q\n  s \\<in> reachable A I\n  (s, a, s') \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. Q (s, a, s')", ".."], ["proof (state)\nthis:\n  Q (s, a, s')\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; (s, a, s') \\<in> automaton.trans A;\n        I a\\<rbrakk>\n       \\<Longrightarrow> R (s, a, s')", "with \\<open>P s\\<close> and \\<open>P s'\\<close>"], ["proof (chain)\npicking this:\n  P s\n  P s'\n  Q (s, a, s')", "show \"R (s, a, s')\""], ["proof (prove)\nusing this:\n  P s\n  P s'\n  Q (s, a, s')\n\ngoal (1 subgoal):\n 1. R (s, a, s')", "using \\<open>I a\\<close>"], ["proof (prove)\nusing this:\n  P s\n  P s'\n  Q (s, a, s')\n  I a\n\ngoal (1 subgoal):\n 1. R (s, a, s')", "by (rule wr)"], ["proof (state)\nthis:\n  R (s, a, s')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma step_to_invariantI:\n  assumes sinv: \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) Q\"\n      and init: \"\\<And>s. s \\<in> init A \\<Longrightarrow> P s\"\n      and step: \"\\<And>s s' a.\n                   \\<lbrakk> s \\<in> reachable A I;\n                     P s;\n                     Q (s, a, s');\n                     I a \\<rbrakk> \\<Longrightarrow> P s'\"\n    shows \"A \\<TTurnstile> (I \\<rightarrow>) P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<TTurnstile> (I \\<rightarrow>) P", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s. s \\<in> init A \\<Longrightarrow> P s\n 2. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; P s;\n        (s, a, s') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P s'", "fix s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s. s \\<in> init A \\<Longrightarrow> P s\n 2. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; P s;\n        (s, a, s') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P s'", "assume \"s \\<in> init A\""], ["proof (state)\nthis:\n  s \\<in> init A\n\ngoal (2 subgoals):\n 1. \\<And>s. s \\<in> init A \\<Longrightarrow> P s\n 2. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; P s;\n        (s, a, s') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P s'", "thus \"P s\""], ["proof (prove)\nusing this:\n  s \\<in> init A\n\ngoal (1 subgoal):\n 1. P s", "by (rule init)"], ["proof (state)\nthis:\n  P s\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; P s;\n        (s, a, s') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; P s;\n        (s, a, s') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P s'", "fix s s' a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; P s;\n        (s, a, s') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P s'", "assume \"s \\<in> reachable A I\"\n       and \"P s\"\n       and \"(s, a, s') \\<in> trans A\"\n       and \"I a\""], ["proof (state)\nthis:\n  s \\<in> reachable A I\n  P s\n  (s, a, s') \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. \\<And>s a s'.\n       \\<lbrakk>s \\<in> reachable A I; P s;\n        (s, a, s') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> P s'", "show \"P s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P s'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P s'", "from sinv and \\<open>s\\<in>reachable A I\\<close> and \\<open>(s, a, s')\\<in>trans A\\<close> and \\<open>I a\\<close>"], ["proof (chain)\npicking this:\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) Q\n  s \\<in> reachable A I\n  (s, a, s') \\<in> automaton.trans A\n  I a", "have \"Q (s, a, s')\""], ["proof (prove)\nusing this:\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) Q\n  s \\<in> reachable A I\n  (s, a, s') \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. Q (s, a, s')", ".."], ["proof (state)\nthis:\n  Q (s, a, s')\n\ngoal (1 subgoal):\n 1. P s'", "with \\<open>s\\<in>reachable A I\\<close> and \\<open>P s\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> reachable A I\n  P s\n  Q (s, a, s')", "show \"P s'\""], ["proof (prove)\nusing this:\n  s \\<in> reachable A I\n  P s\n  Q (s, a, s')\n\ngoal (1 subgoal):\n 1. P s'", "using \\<open>I a\\<close>"], ["proof (prove)\nusing this:\n  s \\<in> reachable A I\n  P s\n  Q (s, a, s')\n  I a\n\ngoal (1 subgoal):\n 1. P s'", "by (rule step)"], ["proof (state)\nthis:\n  P s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P s'\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}