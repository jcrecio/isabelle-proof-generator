{"file_name": "/home/qj213/afp-2021-10-22/thys/AWN/AWN_Cterms.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/AWN", "problem_names": ["lemma microstep_choiceD [dest]:\n  \"(p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p \\<Longrightarrow> p = p1 \\<or> p = p2\"", "lemma microstep_choiceE [elim]:\n  \"\\<lbrakk> (p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p;\n     (p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p1 \\<Longrightarrow> P;\n     (p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p2 \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\"", "lemma microstep_callD [dest]:\n  \"(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p \\<Longrightarrow> p = \\<Gamma> pn\"", "lemma microstep_callE [elim]:\n  \"\\<lbrakk> (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p;  p = \\<Gamma>(pn) \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\"", "lemma no_microstep_guard: \"\\<not> (({l}\\<langle>g\\<rangle> p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\"", "lemma no_microstep_assign: \"\\<not> ({l}\\<lbrakk>f\\<rbrakk> p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\"", "lemma no_microstep_unicast: \"\\<not> (({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g).p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> r)\"", "lemma no_microstep_broadcast: \"\\<not> (({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g).p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\"", "lemma no_microstep_groupcast: \"\\<not> (({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s, s\\<^sub>m\\<^sub>s\\<^sub>g).p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\"", "lemma no_microstep_send: \"\\<not> (({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g).p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\"", "lemma no_microstep_deliver: \"\\<not> (({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a).p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\"", "lemma no_microstep_receive: \"\\<not> (({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g).p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\"", "lemma microstep_call_or_choice [dest]:\n  assumes \"p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\"\n    shows \"(\\<exists>pn. p = call(pn)) \\<or> (\\<exists>p1 p2. p = p1 \\<oplus> p2)\"", "lemmas no_microstep [intro,simp] =\n  no_microstep_guard\n  no_microstep_assign\n  no_microstep_unicast\n  no_microstep_broadcast\n  no_microstep_groupcast\n  no_microstep_send\n  no_microstep_deliver\n  no_microstep_receive", "lemma wellformed_defP: \"wellformed \\<Gamma> = wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\"", "lemma wellformed_induct\n  [consumes 1, case_names ASSIGN CHOICE CALL GUARD UCAST BCAST GCAST SEND DELIVER RECEIVE,\n   induct set: wellformed]:\n  assumes \"wellformed \\<Gamma>\"\n      and ASSIGN:  \"\\<And>l f p.          wellformed \\<Gamma> \\<Longrightarrow> P ({l}\\<lbrakk>f\\<rbrakk> p)\"\n      and GUARD:   \"\\<And>l f p.          wellformed \\<Gamma> \\<Longrightarrow> P ({l}\\<langle>f\\<rangle> p)\"\n      and UCAST:   \"\\<And>l fip fmsg p q. wellformed \\<Gamma> \\<Longrightarrow> P ({l}unicast(fip, fmsg). p \\<triangleright> q)\"\n      and BCAST:   \"\\<And>l fmsg p.       wellformed \\<Gamma> \\<Longrightarrow> P ({l}broadcast(fmsg). p)\"\n      and GCAST:   \"\\<And>l fips fmsg p.  wellformed \\<Gamma> \\<Longrightarrow> P ({l}groupcast(fips, fmsg). p)\"\n      and SEND:    \"\\<And>l fmsg p.       wellformed \\<Gamma> \\<Longrightarrow> P ({l}send(fmsg). p)\"\n      and DELIVER: \"\\<And>l fdata p.      wellformed \\<Gamma> \\<Longrightarrow> P ({l}deliver(fdata). p)\"\n      and RECEIVE: \"\\<And>l fmsg p.       wellformed \\<Gamma> \\<Longrightarrow> P ({l}receive(fmsg). p)\"\n      and CHOICE:  \"\\<And>p1 p2.        \\<lbrakk> wellformed \\<Gamma>; P p1; P p2 \\<rbrakk> \\<Longrightarrow> P (p1 \\<oplus> p2)\"\n      and CALL:    \"\\<And>pn.           \\<lbrakk> wellformed \\<Gamma>; P (\\<Gamma> pn) \\<rbrakk> \\<Longrightarrow> P (call(pn))\"\n    shows \"P a\"", "lemma stermsl_nobigger: \"q \\<in> stermsl p \\<Longrightarrow> size q \\<le> size p\"", "lemma stermsl_no_choice[simp]: \"p1 \\<oplus> p2 \\<notin> stermsl p\"", "lemma stermsl_choice_disj[simp]:\n  \"p \\<in> stermsl (p1 \\<oplus> p2) = (p \\<in> stermsl p1 \\<or> p \\<in> stermsl p2)\"", "lemma stermsl_in_branch[elim]:\n  \"\\<lbrakk>p \\<in> stermsl (p1 \\<oplus> p2); p \\<in> stermsl p1 \\<Longrightarrow> P; p \\<in> stermsl p2 \\<Longrightarrow> P\\<rbrakk> \\<Longrightarrow> P\"", "lemma stermsl_commute:\n  \"stermsl (p1 \\<oplus> p2) = stermsl (p2 \\<oplus> p1)\"", "lemma stermsl_not_empty:\n  \"stermsl p \\<noteq> {}\"", "lemma stermsl_idem [simp]:\n  \"(\\<Union>q\\<in>stermsl p. stermsl q) = stermsl p\"", "lemma stermsl_in_wfpf:\n  assumes AA: \"A \\<subseteq> {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q} `` A\"\n      and *: \"p \\<in> A\"\n    shows \"\\<exists>r\\<in>stermsl p. r \\<in> A\"", "lemma nocall_stermsl_max:\n  assumes \"r \\<in> stermsl p\"\n      and \"not_call r\"\n    shows \"\\<not> (r \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\"", "theorem wf_no_direct_calls[intro]:\n    fixes \\<Gamma> :: \"('s, 'm, 'p, 'l) seqp_env\"\n  assumes no_calls: \"\\<And>pn. \\<forall>pn'. call(pn') \\<notin> stermsl(\\<Gamma>(pn))\"\n    shows \"wellformed \\<Gamma>\"", "lemma sterms_dom_basic[simp]:\n  assumes \"not_call p\"\n      and \"not_choice p\"\n    shows \"sterms_dom (\\<Gamma>, p)\"", "lemma sterms_termination:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"sterms_dom (\\<Gamma>, p)\"", "lemmas sterms_psimps[simp] = sterms.psimps [OF sterms_termination]\n   and sterms_pinduct = sterms.pinduct [OF sterms_termination]", "lemma sterms_reflD [dest]:\n  assumes \"q \\<in> sterms \\<Gamma> p\"\n      and \"not_choice p\" \"not_call p\"\n    shows \"q = p\"", "lemma sterms_choice_disj [simp]:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"p \\<in> sterms \\<Gamma> (p1 \\<oplus> p2) = (p \\<in> sterms \\<Gamma> p1 \\<or> p \\<in> sterms \\<Gamma> p2)\"", "lemma sterms_no_choice [simp]:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"p1 \\<oplus> p2 \\<notin> sterms \\<Gamma> p\"", "lemma sterms_not_choice [simp]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"q \\<in> sterms \\<Gamma> p\"\n    shows \"not_choice q\"", "lemma sterms_no_call [simp]:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"call(pn) \\<notin> sterms \\<Gamma> p\"", "lemma sterms_not_call [simp]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"q \\<in> sterms \\<Gamma> p\"\n    shows \"not_call q\"", "lemma sterms_in_branch:\n  assumes \"wellformed \\<Gamma>\"\n      and \"p \\<in> sterms \\<Gamma> (p1 \\<oplus> p2)\"\n      and \"p \\<in> sterms \\<Gamma> p1 \\<Longrightarrow> P\"\n      and \"p \\<in> sterms \\<Gamma> p2 \\<Longrightarrow> P\"\n  shows \"P\"", "lemma sterms_commute:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"sterms \\<Gamma> (p1 \\<oplus> p2) = sterms \\<Gamma> (p2 \\<oplus> p1)\"", "lemma sterms_not_empty:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"sterms \\<Gamma> p \\<noteq> {}\"", "lemma sterms_sterms [simp]:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"(\\<Union>x\\<in>sterms \\<Gamma> p. sterms \\<Gamma> x) = sterms \\<Gamma> p\"", "lemma sterms_stermsl:\n  assumes \"ps \\<in> sterms \\<Gamma> p\"\n      and \"wellformed \\<Gamma>\"\n    shows \"ps \\<in> stermsl p \\<or> (\\<exists>pn. ps \\<in> stermsl (\\<Gamma> pn))\"", "lemma stermsl_sterms [elim]:\n  assumes \"q \\<in> stermsl p\"\n      and \"not_call q\"\n      and \"wellformed \\<Gamma>\"\n    shows \"q \\<in> sterms \\<Gamma> p\"", "lemma sterms_stermsl_heads:\n  assumes \"ps \\<in> sterms \\<Gamma> (\\<Gamma> pn)\"\n      and \"wellformed \\<Gamma>\"\n    shows \"\\<exists>pn. ps \\<in> stermsl (\\<Gamma> pn)\"", "lemma sterms_subterms [dest]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"\\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\"\n      and \"q \\<in> sterms \\<Gamma> p\"\n    shows \"\\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\"", "lemma no_microsteps_sterms_refl:\n  assumes \"wellformed \\<Gamma>\"\n  shows \"(\\<not>(\\<exists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)) = (sterms \\<Gamma> p = {p})\"", "lemma sterms_maximal [elim]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"q \\<in> sterms \\<Gamma> p\"\n    shows \"sterms \\<Gamma> q = {q}\"", "lemma microstep_rtranscl_equal:\n  assumes \"not_call p\"\n      and \"not_choice p\"\n      and \"p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q\"\n    shows \"q = p\"", "lemma microstep_rtranscl_singleton [simp]:\n  assumes \"not_call p\"\n      and \"not_choice p\"\n    shows \"{q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}} = {p}\"", "theorem sterms_maximal_microstep:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"sterms \\<Gamma> p = {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> \\<not>(\\<exists>q'. q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q')}\"", "lemma dterms_dom_basic [simp]:\n  assumes \"not_call p\"\n      and \"not_choice p\"\n    shows \"dterms_dom (\\<Gamma>, p)\"", "lemma dterms_termination:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"dterms_dom (\\<Gamma>, p)\"", "lemmas dterms_psimps [simp] = dterms.psimps [OF dterms_termination]\n   and dterms_pinduct = dterms.pinduct [OF dterms_termination]", "lemma sterms_after_dterms [simp]:\n  assumes \"wellformed \\<Gamma>\"\n  shows \"(\\<Union>x\\<in>dterms \\<Gamma> p. sterms \\<Gamma> x) = dterms \\<Gamma> p\"", "lemma sterms_before_dterms [simp]:\n  assumes \"wellformed \\<Gamma>\"\n  shows \"(\\<Union>x\\<in>sterms \\<Gamma> p. dterms \\<Gamma> x) = dterms \\<Gamma> p\"", "lemma dterms_choice_disj [simp]:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"p \\<in> dterms \\<Gamma> (p1 \\<oplus> p2) = (p \\<in> dterms \\<Gamma> p1 \\<or> p \\<in> dterms \\<Gamma> p2)\"", "lemma dterms_in_branch:\n  assumes \"wellformed \\<Gamma>\"\n      and \"p \\<in> dterms \\<Gamma> (p1 \\<oplus> p2)\"\n      and \"p \\<in> dterms \\<Gamma> p1 \\<Longrightarrow> P\"\n      and \"p \\<in> dterms \\<Gamma> p2 \\<Longrightarrow> P\"\n  shows \"P\"", "lemma dterms_no_choice:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"p1 \\<oplus> p2 \\<notin> dterms \\<Gamma> p\"", "lemma dterms_not_choice [simp]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"q \\<in> dterms \\<Gamma> p\"\n    shows \"not_choice q\"", "lemma dterms_no_call:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"call(pn) \\<notin> dterms \\<Gamma> p\"", "lemma dterms_not_call [simp]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"q \\<in> dterms \\<Gamma> p\"\n    shows \"not_call q\"", "lemma dterms_subterms:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and \"\\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\"\n      and \"q \\<in> dterms \\<Gamma> p\"\n    shows \"\\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\"", "lemma cterms_not_choice [simp]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"p \\<in> cterms \\<Gamma>\"\n    shows \"not_choice p\"", "lemma cterms_no_choice [simp]:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"p1 \\<oplus> p2 \\<notin> cterms \\<Gamma>\"", "lemma cterms_not_call [simp]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"p \\<in> cterms \\<Gamma>\"\n    shows \"not_call p\"", "lemma cterms_no_call [simp]:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"call(pn) \\<notin> cterms \\<Gamma>\"", "lemma sterms_cterms [elim]:\n  assumes \"p \\<in> cterms \\<Gamma>\"\n      and \"q \\<in> sterms \\<Gamma> p\"\n      and \"wellformed \\<Gamma>\"\n    shows \"q \\<in> cterms \\<Gamma>\"", "lemma dterms_cterms [elim]:\n  assumes \"p \\<in> cterms \\<Gamma>\"\n      and \"q \\<in> dterms \\<Gamma> p\"\n      and \"wellformed \\<Gamma>\"\n    shows \"q \\<in> cterms \\<Gamma>\"", "lemma derivs_in_cterms [simp]:\n  \"\\<And>l f p. {l}\\<langle>f\\<rangle> p \\<in> cterms \\<Gamma>                            \\<Longrightarrow> sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>\"\n  \"\\<And>l f p. {l}\\<lbrakk>f\\<rbrakk> p \\<in> cterms \\<Gamma>                           \\<Longrightarrow> sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>\"\n  \"\\<And>l fip fmsg q p. {l}unicast(fip, fmsg). p \\<triangleright> q \\<in> cterms \\<Gamma>\n                            \\<Longrightarrow> sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma> \\<and> sterms \\<Gamma> q \\<subseteq> cterms \\<Gamma>\"\n  \"\\<And>l fmsg p.      {l}broadcast(fmsg).p \\<in> cterms \\<Gamma>       \\<Longrightarrow> sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>\"\n  \"\\<And>l fips fmsg p. {l}groupcast(fips, fmsg).p \\<in> cterms \\<Gamma> \\<Longrightarrow> sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>\"\n  \"\\<And>l fmsg p.      {l}send(fmsg).p \\<in> cterms \\<Gamma>            \\<Longrightarrow> sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>\"\n  \"\\<And>l fdata p.     {l}deliver(fdata).p \\<in> cterms \\<Gamma>        \\<Longrightarrow> sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>\"\n  \"\\<And>l fmsg p.      {l}receive(fmsg).p \\<in> cterms \\<Gamma>         \\<Longrightarrow> sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>\"", "lemmas ctermsl_induct =\n  ctermsl.induct [case_names GUARD ASSIGN UCAST BCAST GCAST\n                             SEND DELIVER RECEIVE CHOICE CALL]", "lemma ctermsl_refl [intro]: \"not_choice p \\<Longrightarrow> p \\<in> ctermsl p\"", "lemma ctermsl_subterms:\n  \"ctermsl p = {q. q \\<in> subterms p \\<and> not_choice q }\" (is \"?lhs = ?rhs\")", "lemma ctermsl_trans [elim]:\n  assumes \"q \\<in> ctermsl p\"\n      and \"r \\<in> ctermsl q\"\n    shows \"r \\<in> ctermsl p\"", "lemma ctermsl_ex_trans [elim]:\n  assumes \"\\<exists>q \\<in> ctermsl p. r \\<in> ctermsl q\"\n    shows \"r \\<in> ctermsl p\"", "lemma call_ctermsl_empty [elim]:\n  \"\\<lbrakk> p \\<in> ctermsl p'; not_call p \\<rbrakk> \\<Longrightarrow> not_call p'\"", "lemma stermsl_ctermsl_choice1 [simp]:\n  assumes \"q \\<in> stermsl p1\"\n    shows \"q \\<in> ctermsl (p1 \\<oplus> p2)\"", "lemma stermsl_ctermsl_choice2 [simp]:\n  assumes \"q \\<in> stermsl p2\"\n    shows \"q \\<in> ctermsl (p1 \\<oplus> p2)\"", "lemma stermsl_ctermsl [elim]:\n  assumes \"q \\<in> stermsl p\"\n    shows \"q \\<in> ctermsl p\"", "lemma stermsl_after_ctermsl [simp]:\n  \"(\\<Union>x\\<in>ctermsl p. stermsl x) = ctermsl p\"", "lemma stermsl_before_ctermsl [simp]:\n  \"(\\<Union>x\\<in>stermsl p. ctermsl x) = ctermsl p\"", "lemma ctermsl_no_choice: \"p1 \\<oplus> p2 \\<notin> ctermsl p\"", "lemma ctermsl_ex_stermsl: \"q \\<in> ctermsl p \\<Longrightarrow> \\<exists>ps\\<in>stermsl p. q \\<in> ctermsl ps\"", "lemma dterms_ctermsl [intro]:\n  assumes \"q \\<in> dterms \\<Gamma> p\"\n      and \"wellformed \\<Gamma>\"\n    shows \"q \\<in> ctermsl p \\<or> (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\"", "lemma ctermsl_cterms [elim]:\n  assumes \"q \\<in> ctermsl p\"\n      and \"not_call q\"\n      and \"sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>\"\n      and \"wellformed \\<Gamma>\"\n    shows \"q \\<in> cterms \\<Gamma>\"", "lemma stermsl_after_dtermsl [simp]:\n  shows \"(\\<Union>x\\<in>dtermsl p. stermsl x) = dtermsl p\"", "lemma stermsl_before_dtermsl [simp]:\n  \"(\\<Union>x\\<in>stermsl p. dtermsl x) = dtermsl p\"", "lemma dtermsl_no_choice [simp]: \"p1 \\<oplus> p2 \\<notin> dtermsl p\"", "lemma dtermsl_choice_disj [simp]:\n  \"p \\<in> dtermsl (p1 \\<oplus> p2) = (p \\<in> dtermsl p1 \\<or> p \\<in> dtermsl p2)\"", "lemma dtermsl_in_branch [elim]:\n  \"\\<lbrakk>p \\<in> dtermsl (p1 \\<oplus> p2); p \\<in> dtermsl p1 \\<Longrightarrow> P; p \\<in> dtermsl p2 \\<Longrightarrow> P\\<rbrakk> \\<Longrightarrow> P\"", "lemma ctermsl_dtermsl [elim]:\n  assumes \"q \\<in> dtermsl p\"\n    shows \"q \\<in> ctermsl p\"", "lemma dtermsl_dterms [elim]:\n  assumes \"q \\<in> dtermsl p\"\n      and \"not_call q\"\n      and \"wellformed \\<Gamma>\"\n    shows \"q \\<in> dterms \\<Gamma> p\"", "lemma ctermsl_stermsl_or_dtermsl:\n  assumes \"q \\<in> ctermsl p\"\n    shows \"q \\<in> stermsl p \\<or> (\\<exists>p'\\<in>dtermsl p. q \\<in> ctermsl p')\"", "lemma dtermsl_add_stermsl_beforeD:\n  assumes \"q \\<in> dtermsl p\"\n    shows \"\\<exists>ps\\<in>stermsl p. q \\<in> dtermsl ps\"", "lemma call_dtermsl_empty [elim]:\n \"q \\<in> dtermsl p \\<Longrightarrow> not_call p\"", "theorem cterms_def':\n  assumes wfg: \"wellformed \\<Gamma>\"\n    shows \"cterms \\<Gamma> = { p |p pn. p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p }\"\n          (is \"_ = ?ctermsl_set\")", "lemma ctermsE [elim]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"p \\<in> cterms \\<Gamma>\"\n  obtains pn where \"p \\<in> ctermsl (\\<Gamma> pn)\"\n               and \"not_call p\"", "lemma subterms_in_cterms [elim]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"p\\<in>subterms (\\<Gamma> pn)\"\n      and \"not_call p\"\n      and \"not_choice p\"\n    shows \"p \\<in> cterms \\<Gamma>\"", "lemma subterms_stermsl_ctermsl:\n  assumes \"q \\<in> subterms p\"\n      and \"r \\<in> stermsl q\"\n    shows \"r \\<in> ctermsl p\"", "lemma subterms_sterms_cterms:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and \"p \\<in> subterms (\\<Gamma> pn)\"\n    shows \"sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>\"", "lemma subterms_sterms_in_cterms:\n  assumes \"wellformed \\<Gamma>\"\n      and \"p \\<in> subterms (\\<Gamma> pn)\"\n      and \"q \\<in> sterms \\<Gamma> p\"\n    shows \"q \\<in> cterms \\<Gamma>\""], "translations": [["", "lemma microstep_choiceD [dest]:\n  \"(p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p \\<Longrightarrow> p = p1 \\<or> p = p2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p1\n     \\<oplus>\n     p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p \\<Longrightarrow>\n    p = p1 \\<or> p = p2", "by (ind_cases \"(p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p\") auto"], ["", "lemma microstep_choiceE [elim]:\n  \"\\<lbrakk> (p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p;\n     (p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p1 \\<Longrightarrow> P;\n     (p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p2 \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(p1\n              \\<oplus>\n              p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p;\n     (p1\n      \\<oplus>\n      p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p1 \\<Longrightarrow>\n     P;\n     (p1\n      \\<oplus>\n      p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p2 \\<Longrightarrow>\n     P\\<rbrakk>\n    \\<Longrightarrow> P", "by (blast)"], ["", "lemma microstep_callD [dest]:\n  \"(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p \\<Longrightarrow> p = \\<Gamma> pn\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p \\<Longrightarrow>\n    p = \\<Gamma> pn", "by (ind_cases \"(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p\")"], ["", "lemma microstep_callE [elim]:\n  \"\\<lbrakk> (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p;  p = \\<Gamma>(pn) \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p;\n     p = \\<Gamma> pn \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by auto"], ["", "lemma no_microstep_guard: \"\\<not> (({l}\\<langle>g\\<rangle> p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> ({l}\\<langle>g\\<rangle>\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q", "by (rule notI) (ind_cases \"({l}\\<langle>g\\<rangle> p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\")"], ["", "lemma no_microstep_assign: \"\\<not> ({l}\\<lbrakk>f\\<rbrakk> p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> ({l}\\<lbrakk>f\\<rbrakk>\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q", "by (rule notI) (ind_cases \"({l}\\<lbrakk>f\\<rbrakk> p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\")"], ["", "lemma no_microstep_unicast: \"\\<not> (({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g).p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n               p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> r", "by (rule notI) (ind_cases \"({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g).p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> r\")"], ["", "lemma no_microstep_broadcast: \"\\<not> (({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g).p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q", "by (rule notI) (ind_cases \"({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g).p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\")"], ["", "lemma no_microstep_groupcast: \"\\<not> (({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s, s\\<^sub>m\\<^sub>s\\<^sub>g).p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                          s\\<^sub>m\\<^sub>s\\<^sub>g) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q", "by (rule notI) (ind_cases \"({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s, s\\<^sub>m\\<^sub>s\\<^sub>g).p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\")"], ["", "lemma no_microstep_send: \"\\<not> (({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g).p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q", "by (rule notI) (ind_cases \"({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g).p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\")"], ["", "lemma no_microstep_deliver: \"\\<not> (({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a).p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q", "by (rule notI) (ind_cases \"({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a).p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\")"], ["", "lemma no_microstep_receive: \"\\<not> (({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g).p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q", "by (rule notI) (ind_cases \"({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g).p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\")"], ["", "lemma microstep_call_or_choice [dest]:\n  assumes \"p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\"\n    shows \"(\\<exists>pn. p = call(pn)) \\<or> (\\<exists>p1 p2. p = p1 \\<oplus> p2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>pn. p = call(pn)) \\<or> (\\<exists>p1 p2. p = p1\n                     \\<oplus>\n                     p2)", "using assms"], ["proof (prove)\nusing this:\n  p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\n\ngoal (1 subgoal):\n 1. (\\<exists>pn. p = call(pn)) \\<or> (\\<exists>p1 p2. p = p1\n                     \\<oplus>\n                     p2)", "by clarsimp (metis microstep.simps)"], ["", "lemmas no_microstep [intro,simp] =\n  no_microstep_guard\n  no_microstep_assign\n  no_microstep_unicast\n  no_microstep_broadcast\n  no_microstep_groupcast\n  no_microstep_send\n  no_microstep_deliver\n  no_microstep_receive"], ["", "subsection \"Wellformed process specifications \""], ["", "text \\<open>\n  A process specification \\<open>\\<Gamma>\\<close> is wellformed if its @{term \"microstep \\<Gamma>\"} relation is\n  free of loops and infinite chains.\n\n  For example, these specifications are not wellformed:\n    @{term \"\\<Gamma>\\<^sub>1(p1) = call(p1)\"}\n\n    @{term \"\\<Gamma>\\<^sub>2(p1) = send(msg).call(p1) \\<oplus> call(p1)\"}\n\n    @{term \"\\<Gamma>\\<^sub>3(p1) = send(msg).call(p2)\"}\n    @{term \"\\<Gamma>\\<^sub>3(p2) = call(p3)\"}\n    @{term \"\\<Gamma>\\<^sub>3(p3) = call(p4)\"}\n    @{term \"\\<Gamma>\\<^sub>3(p4) = call(p5)\"}\n    \\ldots\n\\<close>"], ["", "definition\n  wellformed :: \"('s, 'm, 'p, 'l) seqp_env \\<Rightarrow> bool\"\nwhere\n  \"wellformed \\<Gamma> = wf {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\""], ["", "lemma wellformed_defP: \"wellformed \\<Gamma> = wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wellformed \\<Gamma> =\n    wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)", "unfolding wellformed_def wfP_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q} =\n    wf {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}", "by simp"], ["", "text \\<open>\n  The induction rule for @{term \"wellformed \\<Gamma>\"} is stronger than @{thm seqp.induct} because\n  the case for @{term \"call(pn)\"} can be shown with the assumption on @{term \"\\<Gamma> pn\"}.\n\\<close>"], ["", "lemma wellformed_induct\n  [consumes 1, case_names ASSIGN CHOICE CALL GUARD UCAST BCAST GCAST SEND DELIVER RECEIVE,\n   induct set: wellformed]:\n  assumes \"wellformed \\<Gamma>\"\n      and ASSIGN:  \"\\<And>l f p.          wellformed \\<Gamma> \\<Longrightarrow> P ({l}\\<lbrakk>f\\<rbrakk> p)\"\n      and GUARD:   \"\\<And>l f p.          wellformed \\<Gamma> \\<Longrightarrow> P ({l}\\<langle>f\\<rangle> p)\"\n      and UCAST:   \"\\<And>l fip fmsg p q. wellformed \\<Gamma> \\<Longrightarrow> P ({l}unicast(fip, fmsg). p \\<triangleright> q)\"\n      and BCAST:   \"\\<And>l fmsg p.       wellformed \\<Gamma> \\<Longrightarrow> P ({l}broadcast(fmsg). p)\"\n      and GCAST:   \"\\<And>l fips fmsg p.  wellformed \\<Gamma> \\<Longrightarrow> P ({l}groupcast(fips, fmsg). p)\"\n      and SEND:    \"\\<And>l fmsg p.       wellformed \\<Gamma> \\<Longrightarrow> P ({l}send(fmsg). p)\"\n      and DELIVER: \"\\<And>l fdata p.      wellformed \\<Gamma> \\<Longrightarrow> P ({l}deliver(fdata). p)\"\n      and RECEIVE: \"\\<And>l fmsg p.       wellformed \\<Gamma> \\<Longrightarrow> P ({l}receive(fmsg). p)\"\n      and CHOICE:  \"\\<And>p1 p2.        \\<lbrakk> wellformed \\<Gamma>; P p1; P p2 \\<rbrakk> \\<Longrightarrow> P (p1 \\<oplus> p2)\"\n      and CALL:    \"\\<And>pn.           \\<lbrakk> wellformed \\<Gamma>; P (\\<Gamma> pn) \\<rbrakk> \\<Longrightarrow> P (call(pn))\"\n    shows \"P a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P a", "using assms(1)"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. P a", "unfolding wellformed_defP"], ["proof (prove)\nusing this:\n  wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\n\ngoal (1 subgoal):\n 1. P a", "proof (rule wfP_induct_rule, case_tac x, simp_all)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x x11 x12 x13.\n       \\<lbrakk>x = {x11}\\<langle>x12\\<rangle>\n                x13;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x11}\\<langle>x12\\<rangle>\n                            x13)\n 2. \\<And>x x21 x22 x23.\n       \\<lbrakk>x = {x21}\\<lbrakk>x22\\<rbrakk>\n                x23;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x21}\\<lbrakk>x22\\<rbrakk>\n                            x23)\n 3. \\<And>x x31 x32.\n       \\<lbrakk>\\<And>y.\n                   (x31\n                    \\<oplus>\n                    x32) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> y \\<Longrightarrow>\n                   P y;\n        x = x31\n            \\<oplus>\n            x32;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P (x31\n                            \\<oplus>\n                            x32)\n 4. \\<And>x x41 x42 x43 x44 x45.\n       \\<lbrakk>x = {x41}unicast(x42, x43) .\n                       x44 \\<triangleright> x45;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x41}unicast(x42, x43) .\n                               x44 \\<triangleright> x45)\n 5. \\<And>x x51 x52 x53.\n       \\<lbrakk>x = {x51}broadcast(x52) .\n                x53;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x51}broadcast(x52) .\n                            x53)\n 6. \\<And>x x61 x62 x63 x64.\n       \\<lbrakk>x = {x61}groupcast(x62, x63) .\n                x64;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x61}groupcast(x62, x63) .\n                            x64)\n 7. \\<And>x x71 x72 x73.\n       \\<lbrakk>x = {x71}send(x72) .\n                x73;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x71}send(x72) .\n                            x73)\n 8. \\<And>x x81 x82 x83.\n       \\<lbrakk>x = {x81}deliver(x82) .\n                x83;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x81}deliver(x82) .\n                            x83)\n 9. \\<And>x x91 x92 x93.\n       \\<lbrakk>x = {x91}receive(x92) .\n                x93;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x91}receive(x92) .\n                            x93)\n 10. \\<And>x x10.\n        \\<lbrakk>\\<And>y.\n                    (call(x10)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> y \\<Longrightarrow>\n                    P y;\n         x = call(x10);\n         wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n        \\<Longrightarrow> P (call(x10))", "fix p1 p2"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x x11 x12 x13.\n       \\<lbrakk>x = {x11}\\<langle>x12\\<rangle>\n                x13;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x11}\\<langle>x12\\<rangle>\n                            x13)\n 2. \\<And>x x21 x22 x23.\n       \\<lbrakk>x = {x21}\\<lbrakk>x22\\<rbrakk>\n                x23;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x21}\\<lbrakk>x22\\<rbrakk>\n                            x23)\n 3. \\<And>x x31 x32.\n       \\<lbrakk>\\<And>y.\n                   (x31\n                    \\<oplus>\n                    x32) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> y \\<Longrightarrow>\n                   P y;\n        x = x31\n            \\<oplus>\n            x32;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P (x31\n                            \\<oplus>\n                            x32)\n 4. \\<And>x x41 x42 x43 x44 x45.\n       \\<lbrakk>x = {x41}unicast(x42, x43) .\n                       x44 \\<triangleright> x45;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x41}unicast(x42, x43) .\n                               x44 \\<triangleright> x45)\n 5. \\<And>x x51 x52 x53.\n       \\<lbrakk>x = {x51}broadcast(x52) .\n                x53;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x51}broadcast(x52) .\n                            x53)\n 6. \\<And>x x61 x62 x63 x64.\n       \\<lbrakk>x = {x61}groupcast(x62, x63) .\n                x64;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x61}groupcast(x62, x63) .\n                            x64)\n 7. \\<And>x x71 x72 x73.\n       \\<lbrakk>x = {x71}send(x72) .\n                x73;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x71}send(x72) .\n                            x73)\n 8. \\<And>x x81 x82 x83.\n       \\<lbrakk>x = {x81}deliver(x82) .\n                x83;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x81}deliver(x82) .\n                            x83)\n 9. \\<And>x x91 x92 x93.\n       \\<lbrakk>x = {x91}receive(x92) .\n                x93;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x91}receive(x92) .\n                            x93)\n 10. \\<And>x x10.\n        \\<lbrakk>\\<And>y.\n                    (call(x10)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> y \\<Longrightarrow>\n                    P y;\n         x = call(x10);\n         wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n        \\<Longrightarrow> P (call(x10))", "assume \"\\<And>q. (p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q \\<Longrightarrow> P q\""], ["proof (state)\nthis:\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> ?q \\<Longrightarrow>\n  P ?q\n\ngoal (10 subgoals):\n 1. \\<And>x x11 x12 x13.\n       \\<lbrakk>x = {x11}\\<langle>x12\\<rangle>\n                x13;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x11}\\<langle>x12\\<rangle>\n                            x13)\n 2. \\<And>x x21 x22 x23.\n       \\<lbrakk>x = {x21}\\<lbrakk>x22\\<rbrakk>\n                x23;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x21}\\<lbrakk>x22\\<rbrakk>\n                            x23)\n 3. \\<And>x x31 x32.\n       \\<lbrakk>\\<And>y.\n                   (x31\n                    \\<oplus>\n                    x32) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> y \\<Longrightarrow>\n                   P y;\n        x = x31\n            \\<oplus>\n            x32;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P (x31\n                            \\<oplus>\n                            x32)\n 4. \\<And>x x41 x42 x43 x44 x45.\n       \\<lbrakk>x = {x41}unicast(x42, x43) .\n                       x44 \\<triangleright> x45;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x41}unicast(x42, x43) .\n                               x44 \\<triangleright> x45)\n 5. \\<And>x x51 x52 x53.\n       \\<lbrakk>x = {x51}broadcast(x52) .\n                x53;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x51}broadcast(x52) .\n                            x53)\n 6. \\<And>x x61 x62 x63 x64.\n       \\<lbrakk>x = {x61}groupcast(x62, x63) .\n                x64;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x61}groupcast(x62, x63) .\n                            x64)\n 7. \\<And>x x71 x72 x73.\n       \\<lbrakk>x = {x71}send(x72) .\n                x73;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x71}send(x72) .\n                            x73)\n 8. \\<And>x x81 x82 x83.\n       \\<lbrakk>x = {x81}deliver(x82) .\n                x83;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x81}deliver(x82) .\n                            x83)\n 9. \\<And>x x91 x92 x93.\n       \\<lbrakk>x = {x91}receive(x92) .\n                x93;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x91}receive(x92) .\n                            x93)\n 10. \\<And>x x10.\n        \\<lbrakk>\\<And>y.\n                    (call(x10)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> y \\<Longrightarrow>\n                    P y;\n         x = call(x10);\n         wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n        \\<Longrightarrow> P (call(x10))", "then"], ["proof (chain)\npicking this:\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> ?q \\<Longrightarrow>\n  P ?q", "obtain \"P p1\" and \"P p2\""], ["proof (prove)\nusing this:\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> ?q \\<Longrightarrow>\n  P ?q\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>P p1; P p2\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto intro!: microstep.intros)"], ["proof (state)\nthis:\n  P p1\n  P p2\n\ngoal (10 subgoals):\n 1. \\<And>x x11 x12 x13.\n       \\<lbrakk>x = {x11}\\<langle>x12\\<rangle>\n                x13;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x11}\\<langle>x12\\<rangle>\n                            x13)\n 2. \\<And>x x21 x22 x23.\n       \\<lbrakk>x = {x21}\\<lbrakk>x22\\<rbrakk>\n                x23;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x21}\\<lbrakk>x22\\<rbrakk>\n                            x23)\n 3. \\<And>x x31 x32.\n       \\<lbrakk>\\<And>y.\n                   (x31\n                    \\<oplus>\n                    x32) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> y \\<Longrightarrow>\n                   P y;\n        x = x31\n            \\<oplus>\n            x32;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P (x31\n                            \\<oplus>\n                            x32)\n 4. \\<And>x x41 x42 x43 x44 x45.\n       \\<lbrakk>x = {x41}unicast(x42, x43) .\n                       x44 \\<triangleright> x45;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x41}unicast(x42, x43) .\n                               x44 \\<triangleright> x45)\n 5. \\<And>x x51 x52 x53.\n       \\<lbrakk>x = {x51}broadcast(x52) .\n                x53;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x51}broadcast(x52) .\n                            x53)\n 6. \\<And>x x61 x62 x63 x64.\n       \\<lbrakk>x = {x61}groupcast(x62, x63) .\n                x64;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x61}groupcast(x62, x63) .\n                            x64)\n 7. \\<And>x x71 x72 x73.\n       \\<lbrakk>x = {x71}send(x72) .\n                x73;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x71}send(x72) .\n                            x73)\n 8. \\<And>x x81 x82 x83.\n       \\<lbrakk>x = {x81}deliver(x82) .\n                x83;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x81}deliver(x82) .\n                            x83)\n 9. \\<And>x x91 x92 x93.\n       \\<lbrakk>x = {x91}receive(x92) .\n                x93;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x91}receive(x92) .\n                            x93)\n 10. \\<And>x x10.\n        \\<lbrakk>\\<And>y.\n                    (call(x10)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> y \\<Longrightarrow>\n                    P y;\n         x = call(x10);\n         wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n        \\<Longrightarrow> P (call(x10))", "thus \"P (p1 \\<oplus> p2)\""], ["proof (prove)\nusing this:\n  P p1\n  P p2\n\ngoal (1 subgoal):\n 1. P (p1\n       \\<oplus>\n       p2)", "by (rule CHOICE [OF \\<open>wellformed \\<Gamma>\\<close>])"], ["proof (state)\nthis:\n  P (p1\n     \\<oplus>\n     p2)\n\ngoal (9 subgoals):\n 1. \\<And>x x11 x12 x13.\n       \\<lbrakk>x = {x11}\\<langle>x12\\<rangle>\n                x13;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x11}\\<langle>x12\\<rangle>\n                            x13)\n 2. \\<And>x x21 x22 x23.\n       \\<lbrakk>x = {x21}\\<lbrakk>x22\\<rbrakk>\n                x23;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x21}\\<lbrakk>x22\\<rbrakk>\n                            x23)\n 3. \\<And>x x41 x42 x43 x44 x45.\n       \\<lbrakk>x = {x41}unicast(x42, x43) .\n                       x44 \\<triangleright> x45;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x41}unicast(x42, x43) .\n                               x44 \\<triangleright> x45)\n 4. \\<And>x x51 x52 x53.\n       \\<lbrakk>x = {x51}broadcast(x52) .\n                x53;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x51}broadcast(x52) .\n                            x53)\n 5. \\<And>x x61 x62 x63 x64.\n       \\<lbrakk>x = {x61}groupcast(x62, x63) .\n                x64;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x61}groupcast(x62, x63) .\n                            x64)\n 6. \\<And>x x71 x72 x73.\n       \\<lbrakk>x = {x71}send(x72) .\n                x73;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x71}send(x72) .\n                            x73)\n 7. \\<And>x x81 x82 x83.\n       \\<lbrakk>x = {x81}deliver(x82) .\n                x83;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x81}deliver(x82) .\n                            x83)\n 8. \\<And>x x91 x92 x93.\n       \\<lbrakk>x = {x91}receive(x92) .\n                x93;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x91}receive(x92) .\n                            x93)\n 9. \\<And>x x10.\n       \\<lbrakk>\\<And>y.\n                   (call(x10)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> y \\<Longrightarrow>\n                   P y;\n        x = call(x10);\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P (call(x10))", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x x11 x12 x13.\n       \\<lbrakk>x = {x11}\\<langle>x12\\<rangle>\n                x13;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x11}\\<langle>x12\\<rangle>\n                            x13)\n 2. \\<And>x x21 x22 x23.\n       \\<lbrakk>x = {x21}\\<lbrakk>x22\\<rbrakk>\n                x23;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x21}\\<lbrakk>x22\\<rbrakk>\n                            x23)\n 3. \\<And>x x41 x42 x43 x44 x45.\n       \\<lbrakk>x = {x41}unicast(x42, x43) .\n                       x44 \\<triangleright> x45;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x41}unicast(x42, x43) .\n                               x44 \\<triangleright> x45)\n 4. \\<And>x x51 x52 x53.\n       \\<lbrakk>x = {x51}broadcast(x52) .\n                x53;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x51}broadcast(x52) .\n                            x53)\n 5. \\<And>x x61 x62 x63 x64.\n       \\<lbrakk>x = {x61}groupcast(x62, x63) .\n                x64;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x61}groupcast(x62, x63) .\n                            x64)\n 6. \\<And>x x71 x72 x73.\n       \\<lbrakk>x = {x71}send(x72) .\n                x73;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x71}send(x72) .\n                            x73)\n 7. \\<And>x x81 x82 x83.\n       \\<lbrakk>x = {x81}deliver(x82) .\n                x83;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x81}deliver(x82) .\n                            x83)\n 8. \\<And>x x91 x92 x93.\n       \\<lbrakk>x = {x91}receive(x92) .\n                x93;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x91}receive(x92) .\n                            x93)\n 9. \\<And>x x10.\n       \\<lbrakk>\\<And>y.\n                   (call(x10)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> y \\<Longrightarrow>\n                   P y;\n        x = call(x10);\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P (call(x10))", "fix pn"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x x11 x12 x13.\n       \\<lbrakk>x = {x11}\\<langle>x12\\<rangle>\n                x13;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x11}\\<langle>x12\\<rangle>\n                            x13)\n 2. \\<And>x x21 x22 x23.\n       \\<lbrakk>x = {x21}\\<lbrakk>x22\\<rbrakk>\n                x23;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x21}\\<lbrakk>x22\\<rbrakk>\n                            x23)\n 3. \\<And>x x41 x42 x43 x44 x45.\n       \\<lbrakk>x = {x41}unicast(x42, x43) .\n                       x44 \\<triangleright> x45;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x41}unicast(x42, x43) .\n                               x44 \\<triangleright> x45)\n 4. \\<And>x x51 x52 x53.\n       \\<lbrakk>x = {x51}broadcast(x52) .\n                x53;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x51}broadcast(x52) .\n                            x53)\n 5. \\<And>x x61 x62 x63 x64.\n       \\<lbrakk>x = {x61}groupcast(x62, x63) .\n                x64;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x61}groupcast(x62, x63) .\n                            x64)\n 6. \\<And>x x71 x72 x73.\n       \\<lbrakk>x = {x71}send(x72) .\n                x73;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x71}send(x72) .\n                            x73)\n 7. \\<And>x x81 x82 x83.\n       \\<lbrakk>x = {x81}deliver(x82) .\n                x83;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x81}deliver(x82) .\n                            x83)\n 8. \\<And>x x91 x92 x93.\n       \\<lbrakk>x = {x91}receive(x92) .\n                x93;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x91}receive(x92) .\n                            x93)\n 9. \\<And>x x10.\n       \\<lbrakk>\\<And>y.\n                   (call(x10)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> y \\<Longrightarrow>\n                   P y;\n        x = call(x10);\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P (call(x10))", "assume \"\\<And>q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q \\<Longrightarrow> P q\""], ["proof (state)\nthis:\n  (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> ?q \\<Longrightarrow> P ?q\n\ngoal (9 subgoals):\n 1. \\<And>x x11 x12 x13.\n       \\<lbrakk>x = {x11}\\<langle>x12\\<rangle>\n                x13;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x11}\\<langle>x12\\<rangle>\n                            x13)\n 2. \\<And>x x21 x22 x23.\n       \\<lbrakk>x = {x21}\\<lbrakk>x22\\<rbrakk>\n                x23;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x21}\\<lbrakk>x22\\<rbrakk>\n                            x23)\n 3. \\<And>x x41 x42 x43 x44 x45.\n       \\<lbrakk>x = {x41}unicast(x42, x43) .\n                       x44 \\<triangleright> x45;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x41}unicast(x42, x43) .\n                               x44 \\<triangleright> x45)\n 4. \\<And>x x51 x52 x53.\n       \\<lbrakk>x = {x51}broadcast(x52) .\n                x53;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x51}broadcast(x52) .\n                            x53)\n 5. \\<And>x x61 x62 x63 x64.\n       \\<lbrakk>x = {x61}groupcast(x62, x63) .\n                x64;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x61}groupcast(x62, x63) .\n                            x64)\n 6. \\<And>x x71 x72 x73.\n       \\<lbrakk>x = {x71}send(x72) .\n                x73;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x71}send(x72) .\n                            x73)\n 7. \\<And>x x81 x82 x83.\n       \\<lbrakk>x = {x81}deliver(x82) .\n                x83;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x81}deliver(x82) .\n                            x83)\n 8. \\<And>x x91 x92 x93.\n       \\<lbrakk>x = {x91}receive(x92) .\n                x93;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x91}receive(x92) .\n                            x93)\n 9. \\<And>x x10.\n       \\<lbrakk>\\<And>y.\n                   (call(x10)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> y \\<Longrightarrow>\n                   P y;\n        x = call(x10);\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P (call(x10))", "hence \"P (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> ?q \\<Longrightarrow> P ?q\n\ngoal (1 subgoal):\n 1. P (\\<Gamma> pn)", "by (auto intro!: microstep.intros)"], ["proof (state)\nthis:\n  P (\\<Gamma> pn)\n\ngoal (9 subgoals):\n 1. \\<And>x x11 x12 x13.\n       \\<lbrakk>x = {x11}\\<langle>x12\\<rangle>\n                x13;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x11}\\<langle>x12\\<rangle>\n                            x13)\n 2. \\<And>x x21 x22 x23.\n       \\<lbrakk>x = {x21}\\<lbrakk>x22\\<rbrakk>\n                x23;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x21}\\<lbrakk>x22\\<rbrakk>\n                            x23)\n 3. \\<And>x x41 x42 x43 x44 x45.\n       \\<lbrakk>x = {x41}unicast(x42, x43) .\n                       x44 \\<triangleright> x45;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x41}unicast(x42, x43) .\n                               x44 \\<triangleright> x45)\n 4. \\<And>x x51 x52 x53.\n       \\<lbrakk>x = {x51}broadcast(x52) .\n                x53;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x51}broadcast(x52) .\n                            x53)\n 5. \\<And>x x61 x62 x63 x64.\n       \\<lbrakk>x = {x61}groupcast(x62, x63) .\n                x64;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x61}groupcast(x62, x63) .\n                            x64)\n 6. \\<And>x x71 x72 x73.\n       \\<lbrakk>x = {x71}send(x72) .\n                x73;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x71}send(x72) .\n                            x73)\n 7. \\<And>x x81 x82 x83.\n       \\<lbrakk>x = {x81}deliver(x82) .\n                x83;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x81}deliver(x82) .\n                            x83)\n 8. \\<And>x x91 x92 x93.\n       \\<lbrakk>x = {x91}receive(x92) .\n                x93;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x91}receive(x92) .\n                            x93)\n 9. \\<And>x x10.\n       \\<lbrakk>\\<And>y.\n                   (call(x10)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> y \\<Longrightarrow>\n                   P y;\n        x = call(x10);\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P (call(x10))", "thus \"P (call(pn))\""], ["proof (prove)\nusing this:\n  P (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. P (call(pn))", "by (rule CALL [OF \\<open>wellformed \\<Gamma>\\<close>])"], ["proof (state)\nthis:\n  P (call(pn))\n\ngoal (8 subgoals):\n 1. \\<And>x x11 x12 x13.\n       \\<lbrakk>x = {x11}\\<langle>x12\\<rangle>\n                x13;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x11}\\<langle>x12\\<rangle>\n                            x13)\n 2. \\<And>x x21 x22 x23.\n       \\<lbrakk>x = {x21}\\<lbrakk>x22\\<rbrakk>\n                x23;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x21}\\<lbrakk>x22\\<rbrakk>\n                            x23)\n 3. \\<And>x x41 x42 x43 x44 x45.\n       \\<lbrakk>x = {x41}unicast(x42, x43) .\n                       x44 \\<triangleright> x45;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x41}unicast(x42, x43) .\n                               x44 \\<triangleright> x45)\n 4. \\<And>x x51 x52 x53.\n       \\<lbrakk>x = {x51}broadcast(x52) .\n                x53;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x51}broadcast(x52) .\n                            x53)\n 5. \\<And>x x61 x62 x63 x64.\n       \\<lbrakk>x = {x61}groupcast(x62, x63) .\n                x64;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x61}groupcast(x62, x63) .\n                            x64)\n 6. \\<And>x x71 x72 x73.\n       \\<lbrakk>x = {x71}send(x72) .\n                x73;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x71}send(x72) .\n                            x73)\n 7. \\<And>x x81 x82 x83.\n       \\<lbrakk>x = {x81}deliver(x82) .\n                x83;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x81}deliver(x82) .\n                            x83)\n 8. \\<And>x x91 x92 x93.\n       \\<lbrakk>x = {x91}receive(x92) .\n                x93;\n        wfP (\\<lambda>q p. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\\<rbrakk>\n       \\<Longrightarrow> P ({x91}receive(x92) .\n                            x93)", "qed (auto intro: assms)"], ["", "subsection \"Start terms (sterms) \""], ["", "text \\<open>\n  Formulate sets of local subterms from which an action is directly possible. Since the\n  process specification @{term \"\\<Gamma>\"} is not considered, only choice terms @{term \"p1 \\<oplus> p2\"}\n  are traversed, and not @{term \"call(p)\"} terms.\n\\<close>"], ["", "fun stermsl :: \"('s, 'm, 'p, 'l) seqp \\<Rightarrow> ('s, 'm, 'p , 'l) seqp set\"\nwhere\n    \"stermsl (p1 \\<oplus> p2) = stermsl p1 \\<union> stermsl p2\"\n  | \"stermsl p          = {p}\""], ["", "lemma stermsl_nobigger: \"q \\<in> stermsl p \\<Longrightarrow> size q \\<le> size p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> stermsl p \\<Longrightarrow> size q \\<le> size p", "by (induct p) auto"], ["", "lemma stermsl_no_choice[simp]: \"p1 \\<oplus> p2 \\<notin> stermsl p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p1\n    \\<oplus>\n    p2\n    \\<notin> stermsl p", "by (induct p) simp_all"], ["", "lemma stermsl_choice_disj[simp]:\n  \"p \\<in> stermsl (p1 \\<oplus> p2) = (p \\<in> stermsl p1 \\<or> p \\<in> stermsl p2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p \\<in> stermsl (p1\n                      \\<oplus>\n                      p2)) =\n    (p \\<in> stermsl p1 \\<or> p \\<in> stermsl p2)", "by simp"], ["", "lemma stermsl_in_branch[elim]:\n  \"\\<lbrakk>p \\<in> stermsl (p1 \\<oplus> p2); p \\<in> stermsl p1 \\<Longrightarrow> P; p \\<in> stermsl p2 \\<Longrightarrow> P\\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> stermsl (p1\n                              \\<oplus>\n                              p2);\n     p \\<in> stermsl p1 \\<Longrightarrow> P;\n     p \\<in> stermsl p2 \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by auto"], ["", "lemma stermsl_commute:\n  \"stermsl (p1 \\<oplus> p2) = stermsl (p2 \\<oplus> p1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stermsl (p1\n             \\<oplus>\n             p2) =\n    stermsl (p2\n             \\<oplus>\n             p1)", "by simp (rule Un_commute)"], ["", "lemma stermsl_not_empty:\n  \"stermsl p \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stermsl p \\<noteq> {}", "by (induct p) auto"], ["", "lemma stermsl_idem [simp]:\n  \"(\\<Union>q\\<in>stermsl p. stermsl q) = stermsl p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (stermsl ` stermsl p) = stermsl p", "by (induct p) simp_all"], ["", "lemma stermsl_in_wfpf:\n  assumes AA: \"A \\<subseteq> {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q} `` A\"\n      and *: \"p \\<in> A\"\n    shows \"\\<exists>r\\<in>stermsl p. r \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r\\<in>stermsl p. r \\<in> A", "using *"], ["proof (prove)\nusing this:\n  p \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>r\\<in>stermsl p. r \\<in> A", "proof (induction p)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<langle>x2\\<rangle>\n           p).\n                            r \\<in> A\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<lbrakk>x2\\<rbrakk>\n           p).\n                            r \\<in> A\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p1. r \\<in> A;\n        p2 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p2. r \\<in> A;\n        p1\n        \\<oplus>\n        p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl (p1\n           \\<oplus>\n           p2).\n                            r \\<in> A\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p1. r \\<in> A;\n        p2 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p2. r \\<in> A;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}unicast(x2, x3) .\n              p1 \\<triangleright> p2).\n                            r \\<in> A\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}broadcast(x2) .\n           p).\n                            r \\<in> A\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}groupcast(x2, x3) .\n           p).\n                            r \\<in> A\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}send(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}send(x2) .\n           p).\n                            r \\<in> A\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}deliver(x2) .\n           p).\n                            r \\<in> A\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}receive(x2) .\n           p).\n                            r \\<in> A\n 10. \\<And>x.\n        call(x) \\<in> A \\<Longrightarrow>\n        \\<exists>r\\<in>stermsl (call(x)). r \\<in> A", "fix p1 p2"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<langle>x2\\<rangle>\n           p).\n                            r \\<in> A\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<lbrakk>x2\\<rbrakk>\n           p).\n                            r \\<in> A\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p1. r \\<in> A;\n        p2 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p2. r \\<in> A;\n        p1\n        \\<oplus>\n        p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl (p1\n           \\<oplus>\n           p2).\n                            r \\<in> A\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p1. r \\<in> A;\n        p2 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p2. r \\<in> A;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}unicast(x2, x3) .\n              p1 \\<triangleright> p2).\n                            r \\<in> A\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}broadcast(x2) .\n           p).\n                            r \\<in> A\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}groupcast(x2, x3) .\n           p).\n                            r \\<in> A\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}send(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}send(x2) .\n           p).\n                            r \\<in> A\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}deliver(x2) .\n           p).\n                            r \\<in> A\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}receive(x2) .\n           p).\n                            r \\<in> A\n 10. \\<And>x.\n        call(x) \\<in> A \\<Longrightarrow>\n        \\<exists>r\\<in>stermsl (call(x)). r \\<in> A", "assume IH1: \"p1 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p1. r \\<in> A\"\n       and IH2: \"p2 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p2. r \\<in> A\"\n       and *: \"p1 \\<oplus> p2 \\<in> A\""], ["proof (state)\nthis:\n  p1 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p1. r \\<in> A\n  p2 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p2. r \\<in> A\n  p1\n  \\<oplus>\n  p2\n  \\<in> A\n\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<langle>x2\\<rangle>\n           p).\n                            r \\<in> A\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<lbrakk>x2\\<rbrakk>\n           p).\n                            r \\<in> A\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p1. r \\<in> A;\n        p2 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p2. r \\<in> A;\n        p1\n        \\<oplus>\n        p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl (p1\n           \\<oplus>\n           p2).\n                            r \\<in> A\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p1. r \\<in> A;\n        p2 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p2. r \\<in> A;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}unicast(x2, x3) .\n              p1 \\<triangleright> p2).\n                            r \\<in> A\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}broadcast(x2) .\n           p).\n                            r \\<in> A\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}groupcast(x2, x3) .\n           p).\n                            r \\<in> A\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}send(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}send(x2) .\n           p).\n                            r \\<in> A\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}deliver(x2) .\n           p).\n                            r \\<in> A\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}receive(x2) .\n           p).\n                            r \\<in> A\n 10. \\<And>x.\n        call(x) \\<in> A \\<Longrightarrow>\n        \\<exists>r\\<in>stermsl (call(x)). r \\<in> A", "from * and AA"], ["proof (chain)\npicking this:\n  p1\n  \\<oplus>\n  p2\n  \\<in> A\n  A \\<subseteq> {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q} `` A", "have \"p1 \\<oplus> p2 \\<in> {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q} `` A\""], ["proof (prove)\nusing this:\n  p1\n  \\<oplus>\n  p2\n  \\<in> A\n  A \\<subseteq> {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q} `` A\n\ngoal (1 subgoal):\n 1. p1\n    \\<oplus>\n    p2\n    \\<in> {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q} `` A", "by auto"], ["proof (state)\nthis:\n  p1\n  \\<oplus>\n  p2\n  \\<in> {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q} `` A\n\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<langle>x2\\<rangle>\n           p).\n                            r \\<in> A\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<lbrakk>x2\\<rbrakk>\n           p).\n                            r \\<in> A\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p1. r \\<in> A;\n        p2 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p2. r \\<in> A;\n        p1\n        \\<oplus>\n        p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl (p1\n           \\<oplus>\n           p2).\n                            r \\<in> A\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p1. r \\<in> A;\n        p2 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p2. r \\<in> A;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}unicast(x2, x3) .\n              p1 \\<triangleright> p2).\n                            r \\<in> A\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}broadcast(x2) .\n           p).\n                            r \\<in> A\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}groupcast(x2, x3) .\n           p).\n                            r \\<in> A\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}send(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}send(x2) .\n           p).\n                            r \\<in> A\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}deliver(x2) .\n           p).\n                            r \\<in> A\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}receive(x2) .\n           p).\n                            r \\<in> A\n 10. \\<And>x.\n        call(x) \\<in> A \\<Longrightarrow>\n        \\<exists>r\\<in>stermsl (call(x)). r \\<in> A", "hence \"p1 \\<in> A \\<or> p2 \\<in> A\""], ["proof (prove)\nusing this:\n  p1\n  \\<oplus>\n  p2\n  \\<in> {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q} `` A\n\ngoal (1 subgoal):\n 1. p1 \\<in> A \\<or> p2 \\<in> A", "by auto"], ["proof (state)\nthis:\n  p1 \\<in> A \\<or> p2 \\<in> A\n\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<langle>x2\\<rangle>\n           p).\n                            r \\<in> A\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<lbrakk>x2\\<rbrakk>\n           p).\n                            r \\<in> A\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p1. r \\<in> A;\n        p2 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p2. r \\<in> A;\n        p1\n        \\<oplus>\n        p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl (p1\n           \\<oplus>\n           p2).\n                            r \\<in> A\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p1. r \\<in> A;\n        p2 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p2. r \\<in> A;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}unicast(x2, x3) .\n              p1 \\<triangleright> p2).\n                            r \\<in> A\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}broadcast(x2) .\n           p).\n                            r \\<in> A\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}groupcast(x2, x3) .\n           p).\n                            r \\<in> A\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}send(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}send(x2) .\n           p).\n                            r \\<in> A\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}deliver(x2) .\n           p).\n                            r \\<in> A\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}receive(x2) .\n           p).\n                            r \\<in> A\n 10. \\<And>x.\n        call(x) \\<in> A \\<Longrightarrow>\n        \\<exists>r\\<in>stermsl (call(x)). r \\<in> A", "hence \"(\\<exists>r\\<in>stermsl p1. r \\<in> A) \\<or> (\\<exists>r\\<in>stermsl p2. r \\<in> A)\""], ["proof (prove)\nusing this:\n  p1 \\<in> A \\<or> p2 \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<exists>r\\<in>stermsl p1. r \\<in> A) \\<or>\n    (\\<exists>r\\<in>stermsl p2. r \\<in> A)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. p1 \\<in> A \\<Longrightarrow>\n    (\\<exists>r\\<in>stermsl p1. r \\<in> A) \\<or>\n    (\\<exists>r\\<in>stermsl p2. r \\<in> A)\n 2. p2 \\<in> A \\<Longrightarrow>\n    (\\<exists>r\\<in>stermsl p1. r \\<in> A) \\<or>\n    (\\<exists>r\\<in>stermsl p2. r \\<in> A)", "assume \"p1 \\<in> A\""], ["proof (state)\nthis:\n  p1 \\<in> A\n\ngoal (2 subgoals):\n 1. p1 \\<in> A \\<Longrightarrow>\n    (\\<exists>r\\<in>stermsl p1. r \\<in> A) \\<or>\n    (\\<exists>r\\<in>stermsl p2. r \\<in> A)\n 2. p2 \\<in> A \\<Longrightarrow>\n    (\\<exists>r\\<in>stermsl p1. r \\<in> A) \\<or>\n    (\\<exists>r\\<in>stermsl p2. r \\<in> A)", "hence \"\\<exists>r\\<in>stermsl p1. r \\<in> A\""], ["proof (prove)\nusing this:\n  p1 \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>r\\<in>stermsl p1. r \\<in> A", "by (rule IH1)"], ["proof (state)\nthis:\n  \\<exists>r\\<in>stermsl p1. r \\<in> A\n\ngoal (2 subgoals):\n 1. p1 \\<in> A \\<Longrightarrow>\n    (\\<exists>r\\<in>stermsl p1. r \\<in> A) \\<or>\n    (\\<exists>r\\<in>stermsl p2. r \\<in> A)\n 2. p2 \\<in> A \\<Longrightarrow>\n    (\\<exists>r\\<in>stermsl p1. r \\<in> A) \\<or>\n    (\\<exists>r\\<in>stermsl p2. r \\<in> A)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>r\\<in>stermsl p1. r \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<exists>r\\<in>stermsl p1. r \\<in> A) \\<or>\n    (\\<exists>r\\<in>stermsl p2. r \\<in> A)", ".."], ["proof (state)\nthis:\n  (\\<exists>r\\<in>stermsl p1. r \\<in> A) \\<or>\n  (\\<exists>r\\<in>stermsl p2. r \\<in> A)\n\ngoal (1 subgoal):\n 1. p2 \\<in> A \\<Longrightarrow>\n    (\\<exists>r\\<in>stermsl p1. r \\<in> A) \\<or>\n    (\\<exists>r\\<in>stermsl p2. r \\<in> A)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p2 \\<in> A \\<Longrightarrow>\n    (\\<exists>r\\<in>stermsl p1. r \\<in> A) \\<or>\n    (\\<exists>r\\<in>stermsl p2. r \\<in> A)", "assume \"p2 \\<in> A\""], ["proof (state)\nthis:\n  p2 \\<in> A\n\ngoal (1 subgoal):\n 1. p2 \\<in> A \\<Longrightarrow>\n    (\\<exists>r\\<in>stermsl p1. r \\<in> A) \\<or>\n    (\\<exists>r\\<in>stermsl p2. r \\<in> A)", "hence \"\\<exists>r\\<in>stermsl p2. r \\<in> A\""], ["proof (prove)\nusing this:\n  p2 \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>r\\<in>stermsl p2. r \\<in> A", "by (rule IH2)"], ["proof (state)\nthis:\n  \\<exists>r\\<in>stermsl p2. r \\<in> A\n\ngoal (1 subgoal):\n 1. p2 \\<in> A \\<Longrightarrow>\n    (\\<exists>r\\<in>stermsl p1. r \\<in> A) \\<or>\n    (\\<exists>r\\<in>stermsl p2. r \\<in> A)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>r\\<in>stermsl p2. r \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<exists>r\\<in>stermsl p1. r \\<in> A) \\<or>\n    (\\<exists>r\\<in>stermsl p2. r \\<in> A)", ".."], ["proof (state)\nthis:\n  (\\<exists>r\\<in>stermsl p1. r \\<in> A) \\<or>\n  (\\<exists>r\\<in>stermsl p2. r \\<in> A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>r\\<in>stermsl p1. r \\<in> A) \\<or>\n  (\\<exists>r\\<in>stermsl p2. r \\<in> A)\n\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<langle>x2\\<rangle>\n           p).\n                            r \\<in> A\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<lbrakk>x2\\<rbrakk>\n           p).\n                            r \\<in> A\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p1. r \\<in> A;\n        p2 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p2. r \\<in> A;\n        p1\n        \\<oplus>\n        p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl (p1\n           \\<oplus>\n           p2).\n                            r \\<in> A\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p1. r \\<in> A;\n        p2 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p2. r \\<in> A;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}unicast(x2, x3) .\n              p1 \\<triangleright> p2).\n                            r \\<in> A\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}broadcast(x2) .\n           p).\n                            r \\<in> A\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}groupcast(x2, x3) .\n           p).\n                            r \\<in> A\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}send(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}send(x2) .\n           p).\n                            r \\<in> A\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}deliver(x2) .\n           p).\n                            r \\<in> A\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}receive(x2) .\n           p).\n                            r \\<in> A\n 10. \\<And>x.\n        call(x) \\<in> A \\<Longrightarrow>\n        \\<exists>r\\<in>stermsl (call(x)). r \\<in> A", "hence \"\\<exists>r\\<in>stermsl p1 \\<union> stermsl p2. r \\<in> A\""], ["proof (prove)\nusing this:\n  (\\<exists>r\\<in>stermsl p1. r \\<in> A) \\<or>\n  (\\<exists>r\\<in>stermsl p2. r \\<in> A)\n\ngoal (1 subgoal):\n 1. \\<exists>r\\<in>stermsl p1 \\<union> stermsl p2. r \\<in> A", "by blast"], ["proof (state)\nthis:\n  \\<exists>r\\<in>stermsl p1 \\<union> stermsl p2. r \\<in> A\n\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<langle>x2\\<rangle>\n           p).\n                            r \\<in> A\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<lbrakk>x2\\<rbrakk>\n           p).\n                            r \\<in> A\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p1. r \\<in> A;\n        p2 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p2. r \\<in> A;\n        p1\n        \\<oplus>\n        p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl (p1\n           \\<oplus>\n           p2).\n                            r \\<in> A\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p1. r \\<in> A;\n        p2 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p2. r \\<in> A;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}unicast(x2, x3) .\n              p1 \\<triangleright> p2).\n                            r \\<in> A\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}broadcast(x2) .\n           p).\n                            r \\<in> A\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}groupcast(x2, x3) .\n           p).\n                            r \\<in> A\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}send(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}send(x2) .\n           p).\n                            r \\<in> A\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}deliver(x2) .\n           p).\n                            r \\<in> A\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}receive(x2) .\n           p).\n                            r \\<in> A\n 10. \\<And>x.\n        call(x) \\<in> A \\<Longrightarrow>\n        \\<exists>r\\<in>stermsl (call(x)). r \\<in> A", "thus \"\\<exists>r\\<in>stermsl (p1 \\<oplus> p2). r \\<in> A\""], ["proof (prove)\nusing this:\n  \\<exists>r\\<in>stermsl p1 \\<union> stermsl p2. r \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>r\\<in>stermsl (p1\n                            \\<oplus>\n                            p2).\n       r \\<in> A", "by simp"], ["proof (state)\nthis:\n  \\<exists>r\\<in>stermsl (p1\n                          \\<oplus>\n                          p2).\n     r \\<in> A\n\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<langle>x2\\<rangle>\n           p).\n                            r \\<in> A\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<lbrakk>x2\\<rbrakk>\n           p).\n                            r \\<in> A\n 3. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p1. r \\<in> A;\n        p2 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p2. r \\<in> A;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}unicast(x2, x3) .\n              p1 \\<triangleright> p2).\n                            r \\<in> A\n 4. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}broadcast(x2) .\n           p).\n                            r \\<in> A\n 5. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}groupcast(x2, x3) .\n           p).\n                            r \\<in> A\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}send(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}send(x2) .\n           p).\n                            r \\<in> A\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}deliver(x2) .\n           p).\n                            r \\<in> A\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}receive(x2) .\n           p).\n                            r \\<in> A\n 9. \\<And>x.\n       call(x) \\<in> A \\<Longrightarrow>\n       \\<exists>r\\<in>stermsl (call(x)). r \\<in> A", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<langle>x2\\<rangle>\n           p).\n                            r \\<in> A\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<lbrakk>x2\\<rbrakk>\n           p).\n                            r \\<in> A\n 3. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p1. r \\<in> A;\n        p2 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p2. r \\<in> A;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}unicast(x2, x3) .\n              p1 \\<triangleright> p2).\n                            r \\<in> A\n 4. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}broadcast(x2) .\n           p).\n                            r \\<in> A\n 5. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}groupcast(x2, x3) .\n           p).\n                            r \\<in> A\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}send(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}send(x2) .\n           p).\n                            r \\<in> A\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}deliver(x2) .\n           p).\n                            r \\<in> A\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}receive(x2) .\n           p).\n                            r \\<in> A\n 9. \\<And>x.\n       call(x) \\<in> A \\<Longrightarrow>\n       \\<exists>r\\<in>stermsl (call(x)). r \\<in> A", "case UCAST"], ["proof (state)\nthis:\n  p1_ \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p1_. r \\<in> A\n  p2_ \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p2_. r \\<in> A\n  {x1_}unicast(x2_, x3_) .\n     p1_ \\<triangleright> p2_\n  \\<in> A\n\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<langle>x2\\<rangle>\n           p).\n                            r \\<in> A\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<lbrakk>x2\\<rbrakk>\n           p).\n                            r \\<in> A\n 3. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p1. r \\<in> A;\n        p2 \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl p2. r \\<in> A;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}unicast(x2, x3) .\n              p1 \\<triangleright> p2).\n                            r \\<in> A\n 4. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}broadcast(x2) .\n           p).\n                            r \\<in> A\n 5. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}groupcast(x2, x3) .\n           p).\n                            r \\<in> A\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}send(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}send(x2) .\n           p).\n                            r \\<in> A\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}deliver(x2) .\n           p).\n                            r \\<in> A\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}receive(x2) .\n           p).\n                            r \\<in> A\n 9. \\<And>x.\n       call(x) \\<in> A \\<Longrightarrow>\n       \\<exists>r\\<in>stermsl (call(x)). r \\<in> A", "from UCAST.prems"], ["proof (chain)\npicking this:\n  {x1_}unicast(x2_, x3_) .\n     p1_ \\<triangleright> p2_\n  \\<in> A", "show ?case"], ["proof (prove)\nusing this:\n  {x1_}unicast(x2_, x3_) .\n     p1_ \\<triangleright> p2_\n  \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>r\\<in>stermsl ({x1_}unicast(x2_, x3_) .\n                               p1_ \\<triangleright> p2_).\n       r \\<in> A", "by auto"], ["proof (state)\nthis:\n  \\<exists>r\\<in>stermsl ({x1_}unicast(x2_, x3_) .\n                             p1_ \\<triangleright> p2_).\n     r \\<in> A\n\ngoal (8 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<langle>x2\\<rangle>\n           p).\n                            r \\<in> A\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}\\<lbrakk>x2\\<rbrakk>\n           p).\n                            r \\<in> A\n 3. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}broadcast(x2) .\n           p).\n                            r \\<in> A\n 4. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}groupcast(x2, x3) .\n           p).\n                            r \\<in> A\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}send(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}send(x2) .\n           p).\n                            r \\<in> A\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}deliver(x2) .\n           p).\n                            r \\<in> A\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow>\n                \\<exists>r\\<in>stermsl p. r \\<in> A;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r\\<in>stermsl ({x1}receive(x2) .\n           p).\n                            r \\<in> A\n 8. \\<And>x.\n       call(x) \\<in> A \\<Longrightarrow>\n       \\<exists>r\\<in>stermsl (call(x)). r \\<in> A", "qed auto"], ["", "lemma nocall_stermsl_max:\n  assumes \"r \\<in> stermsl p\"\n      and \"not_call r\"\n    shows \"\\<not> (r \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> r \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q", "using assms"], ["proof (prove)\nusing this:\n  r \\<in> stermsl p\n  not_call r\n\ngoal (1 subgoal):\n 1. \\<not> r \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q", "by (induction p) auto"], ["", "theorem wf_no_direct_calls[intro]:\n    fixes \\<Gamma> :: \"('s, 'm, 'p, 'l) seqp_env\"\n  assumes no_calls: \"\\<And>pn. \\<forall>pn'. call(pn') \\<notin> stermsl(\\<Gamma>(pn))\"\n    shows \"wellformed \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wellformed \\<Gamma>", "unfolding wellformed_def wfP_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}", "proof (rule wfI_pf)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<subseteq> {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q} ``\n                     A \\<Longrightarrow>\n       A = {}", "fix A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<subseteq> {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q} ``\n                     A \\<Longrightarrow>\n       A = {}", "assume ARA: \"A \\<subseteq> {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q} `` A\""], ["proof (state)\nthis:\n  A \\<subseteq> {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q} `` A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<subseteq> {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q} ``\n                     A \\<Longrightarrow>\n       A = {}", "hence hasnext: \"\\<And>p. p \\<in> A \\<Longrightarrow> \\<exists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q \\<and> q \\<in> A\""], ["proof (prove)\nusing this:\n  A \\<subseteq> {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q} `` A\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> A \\<Longrightarrow>\n       \\<exists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q \\<and> q \\<in> A", "by auto"], ["proof (state)\nthis:\n  ?p \\<in> A \\<Longrightarrow>\n  \\<exists>q. ?p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q \\<and> q \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<subseteq> {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q} ``\n                     A \\<Longrightarrow>\n       A = {}", "show \"A = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = {}", "proof (rule Set.equals0I)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> A \\<Longrightarrow> False", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> A \\<Longrightarrow> False", "assume \"p \\<in> A\""], ["proof (state)\nthis:\n  p \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> A \\<Longrightarrow> False", "thus \"False\""], ["proof (prove)\nusing this:\n  p \\<in> A\n\ngoal (1 subgoal):\n 1. False", "proof (induction p)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False; p1\n      \\<oplus>\n      p2\n      \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 10. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "fix l f p'"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False; p1\n      \\<oplus>\n      p2\n      \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 10. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "assume *: \"{l}\\<langle>f\\<rangle> p' \\<in> A\""], ["proof (state)\nthis:\n  {l}\\<langle>f\\<rangle>\n  p' \\<in> A\n\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False; p1\n      \\<oplus>\n      p2\n      \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 10. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "from hasnext [OF *]"], ["proof (chain)\npicking this:\n  \\<exists>q.\n     ({l}\\<langle>f\\<rangle>\n      p') \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q \\<and>\n     q \\<in> A", "have \"\\<exists>q. ({l}\\<langle>f\\<rangle> p') \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\""], ["proof (prove)\nusing this:\n  \\<exists>q.\n     ({l}\\<langle>f\\<rangle>\n      p') \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q \\<and>\n     q \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>q. ({l}\\<langle>f\\<rangle>\n                 p') \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q", "by simp"], ["proof (state)\nthis:\n  \\<exists>q. ({l}\\<langle>f\\<rangle>\n               p') \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\n\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False; p1\n      \\<oplus>\n      p2\n      \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 10. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "thus \"False\""], ["proof (prove)\nusing this:\n  \\<exists>q. ({l}\\<langle>f\\<rangle>\n               p') \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False; p1\n      \\<oplus>\n      p2\n      \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False; p1\n      \\<oplus>\n      p2\n      \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "fix p1 p2"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False; p1\n      \\<oplus>\n      p2\n      \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "assume *: \"p1 \\<oplus> p2 \\<in> A\"\n         and IH1: \"p1 \\<in> A \\<Longrightarrow> False\"\n         and IH2: \"p2 \\<in> A \\<Longrightarrow> False\""], ["proof (state)\nthis:\n  p1\n  \\<oplus>\n  p2\n  \\<in> A\n  p1 \\<in> A \\<Longrightarrow> False\n  p2 \\<in> A \\<Longrightarrow> False\n\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False; p1\n      \\<oplus>\n      p2\n      \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "have \"\\<exists>q. (p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q \\<and> q \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>q.\n       (p1\n        \\<oplus>\n        p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q \\<and>\n       q \\<in> A", "by (rule hasnext [OF *])"], ["proof (state)\nthis:\n  \\<exists>q.\n     (p1\n      \\<oplus>\n      p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q \\<and>\n     q \\<in> A\n\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False; p1\n      \\<oplus>\n      p2\n      \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "hence \"p1 \\<in> A \\<or> p2 \\<in> A\""], ["proof (prove)\nusing this:\n  \\<exists>q.\n     (p1\n      \\<oplus>\n      p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q \\<and>\n     q \\<in> A\n\ngoal (1 subgoal):\n 1. p1 \\<in> A \\<or> p2 \\<in> A", "by auto"], ["proof (state)\nthis:\n  p1 \\<in> A \\<or> p2 \\<in> A\n\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False; p1\n      \\<oplus>\n      p2\n      \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "thus \"False\""], ["proof (prove)\nusing this:\n  p1 \\<in> A \\<or> p2 \\<in> A\n\ngoal (1 subgoal):\n 1. False", "by (auto dest: IH1 IH2)"], ["proof (state)\nthis:\n  False\n\ngoal (8 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "fix pn"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "assume \"call(pn) \\<in> A\""], ["proof (state)\nthis:\n  call(pn) \\<in> A\n\ngoal (8 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "hence \"\\<exists>q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q \\<and> q \\<in> A\""], ["proof (prove)\nusing this:\n  call(pn) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>q.\n       (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q \\<and> q \\<in> A", "by (rule hasnext)"], ["proof (state)\nthis:\n  \\<exists>q.\n     (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q \\<and> q \\<in> A\n\ngoal (8 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "hence \"\\<Gamma>(pn) \\<in> A\""], ["proof (prove)\nusing this:\n  \\<exists>q.\n     (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q \\<and> q \\<in> A\n\ngoal (1 subgoal):\n 1. \\<Gamma> pn \\<in> A", "by auto"], ["proof (state)\nthis:\n  \\<Gamma> pn \\<in> A\n\ngoal (8 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "with ARA [THEN stermsl_in_wfpf]"], ["proof (chain)\npicking this:\n  ?p \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl ?p. r \\<in> A\n  \\<Gamma> pn \\<in> A", "obtain q where \"q\\<in>stermsl (\\<Gamma> pn)\" and \"q \\<in> A\""], ["proof (prove)\nusing this:\n  ?p \\<in> A \\<Longrightarrow> \\<exists>r\\<in>stermsl ?p. r \\<in> A\n  \\<Gamma> pn \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<in> stermsl (\\<Gamma> pn); q \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  q \\<in> stermsl (\\<Gamma> pn)\n  q \\<in> A\n\ngoal (8 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "hence \"not_call q\""], ["proof (prove)\nusing this:\n  q \\<in> stermsl (\\<Gamma> pn)\n  q \\<in> A\n\ngoal (1 subgoal):\n 1. not_call q", "using no_calls [of pn]"], ["proof (prove)\nusing this:\n  q \\<in> stermsl (\\<Gamma> pn)\n  q \\<in> A\n  \\<forall>pn'. call(pn') \\<notin> stermsl (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. not_call q", "unfolding not_call_def"], ["proof (prove)\nusing this:\n  q \\<in> stermsl (\\<Gamma> pn)\n  q \\<in> A\n  \\<forall>pn'. call(pn') \\<notin> stermsl (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<forall>pn. q \\<noteq> call(pn)", "by auto"], ["proof (state)\nthis:\n  not_call q\n\ngoal (8 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "from hasnext [OF \\<open>q \\<in> A\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>qa. q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> qa \\<and> qa \\<in> A", "obtain q' where \"q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q'\""], ["proof (prove)\nusing this:\n  \\<exists>qa. q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> qa \\<and> qa \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>q'.\n        q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q'\n\ngoal (8 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q'\n\ngoal (8 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "from  \\<open>q \\<in> stermsl (\\<Gamma> pn)\\<close> \\<open>not_call q\\<close>"], ["proof (chain)\npicking this:\n  q \\<in> stermsl (\\<Gamma> pn)\n  not_call q", "have \"\\<not> (q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q')\""], ["proof (prove)\nusing this:\n  q \\<in> stermsl (\\<Gamma> pn)\n  not_call q\n\ngoal (1 subgoal):\n 1. \\<not> q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q'", "by (rule nocall_stermsl_max)"], ["proof (state)\nthis:\n  \\<not> q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q'\n\ngoal (8 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>x. call(x) \\<in> A \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q'\n  \\<not> q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q'", "show \"False\""], ["proof (prove)\nusing this:\n  q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q'\n  \\<not> q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q'\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (7 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> A \\<Longrightarrow> False;\n        p2 \\<in> A \\<Longrightarrow> False;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}broadcast(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}groupcast(x2, x3) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False; {x1}send(x2) .\n             p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}deliver(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> A \\<Longrightarrow> False;\n        {x1}receive(x2) .\n        p \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False", "qed (auto dest: hasnext)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Start terms\""], ["", "text \\<open>\n  The start terms are those terms, relative to a wellformed process specification \\<open>\\<Gamma>\\<close>,\n  from which transitions can occur directly.\n\\<close>"], ["", "function (domintros, sequential) sterms\n  :: \"('s, 'm, 'p, 'l) seqp_env \\<Rightarrow> ('s, 'm, 'p, 'l) seqp \\<Rightarrow> ('s, 'm, 'p, 'l) seqp set\"\n  where\n    sterms_choice: \"sterms \\<Gamma> (p1 \\<oplus> p2)  = sterms \\<Gamma> p1 \\<union> sterms \\<Gamma> p2\"\n  | sterms_call:   \"sterms \\<Gamma> (call(pn))  = sterms \\<Gamma> (\\<Gamma> pn)\"\n  | sterms_other:  \"sterms \\<Gamma> p           = {p}\""], ["proof (prove)\ngoal (56 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>\\<Gamma> p1 p2.\n                   x = (\\<Gamma>, p1\n                                  \\<oplus>\n                                  p2) \\<Longrightarrow>\n                   P;\n        \\<And>\\<Gamma> pn. x = (\\<Gamma>, call(pn)) \\<Longrightarrow> P;\n        \\<And>\\<Gamma> v va vb.\n           x = (\\<Gamma>, {v}\\<langle>va\\<rangle>\n                vb) \\<Longrightarrow>\n           P;\n        \\<And>\\<Gamma> v va vb.\n           x = (\\<Gamma>, {v}\\<lbrakk>va\\<rbrakk>\n                vb) \\<Longrightarrow>\n           P;\n        \\<And>\\<Gamma> v va vb vc vd.\n           x = (\\<Gamma>, {v}unicast(va, vb) .\n                             vc \\<triangleright> vd) \\<Longrightarrow>\n           P;\n        \\<And>\\<Gamma> v va vb.\n           x = (\\<Gamma>, {v}broadcast(va) .\n                vb) \\<Longrightarrow>\n           P;\n        \\<And>\\<Gamma> v va vb vc.\n           x = (\\<Gamma>, {v}groupcast(va, vb) .\n                vc) \\<Longrightarrow>\n           P;\n        \\<And>\\<Gamma> v va vb.\n           x = (\\<Gamma>, {v}send(va) .\n                vb) \\<Longrightarrow>\n           P;\n        \\<And>\\<Gamma> v va vb.\n           x = (\\<Gamma>, {v}deliver(va) .\n                vb) \\<Longrightarrow>\n           P;\n        \\<And>\\<Gamma> v va vb.\n           x = (\\<Gamma>, {v}receive(va) .\n                vb) \\<Longrightarrow>\n           P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>\\<Gamma> p1 p2 \\<Gamma>' p1a p2a.\n       (\\<Gamma>, p1\n                  \\<oplus>\n                  p2) =\n       (\\<Gamma>', p1a\n                   \\<oplus>\n                   p2a) \\<Longrightarrow>\n       sterms_sumC (\\<Gamma>, p1) \\<union> sterms_sumC (\\<Gamma>, p2) =\n       sterms_sumC (\\<Gamma>', p1a) \\<union> sterms_sumC (\\<Gamma>', p2a)\n 3. \\<And>\\<Gamma> p1 p2 \\<Gamma>' pn.\n       (\\<Gamma>, p1\n                  \\<oplus>\n                  p2) =\n       (\\<Gamma>', call(pn)) \\<Longrightarrow>\n       sterms_sumC (\\<Gamma>, p1) \\<union> sterms_sumC (\\<Gamma>, p2) =\n       sterms_sumC (\\<Gamma>', \\<Gamma>' pn)\n 4. \\<And>\\<Gamma> p1 p2 \\<Gamma>' v va vb.\n       (\\<Gamma>, p1\n                  \\<oplus>\n                  p2) =\n       (\\<Gamma>', {v}\\<langle>va\\<rangle>\n        vb) \\<Longrightarrow>\n       sterms_sumC (\\<Gamma>, p1) \\<union> sterms_sumC (\\<Gamma>, p2) =\n       {{v}\\<langle>va\\<rangle>\n        vb}\n 5. \\<And>\\<Gamma> p1 p2 \\<Gamma>' v va vb.\n       (\\<Gamma>, p1\n                  \\<oplus>\n                  p2) =\n       (\\<Gamma>', {v}\\<lbrakk>va\\<rbrakk>\n        vb) \\<Longrightarrow>\n       sterms_sumC (\\<Gamma>, p1) \\<union> sterms_sumC (\\<Gamma>, p2) =\n       {{v}\\<lbrakk>va\\<rbrakk>\n        vb}\n 6. \\<And>\\<Gamma> p1 p2 \\<Gamma>' v va vb vc vd.\n       (\\<Gamma>, p1\n                  \\<oplus>\n                  p2) =\n       (\\<Gamma>', {v}unicast(va, vb) .\n                      vc \\<triangleright> vd) \\<Longrightarrow>\n       sterms_sumC (\\<Gamma>, p1) \\<union> sterms_sumC (\\<Gamma>, p2) =\n       {{v}unicast(va, vb) .\n           vc \\<triangleright> vd}\n 7. \\<And>\\<Gamma> p1 p2 \\<Gamma>' v va vb.\n       (\\<Gamma>, p1\n                  \\<oplus>\n                  p2) =\n       (\\<Gamma>', {v}broadcast(va) .\n        vb) \\<Longrightarrow>\n       sterms_sumC (\\<Gamma>, p1) \\<union> sterms_sumC (\\<Gamma>, p2) =\n       {{v}broadcast(va) .\n        vb}\n 8. \\<And>\\<Gamma> p1 p2 \\<Gamma>' v va vb vc.\n       (\\<Gamma>, p1\n                  \\<oplus>\n                  p2) =\n       (\\<Gamma>', {v}groupcast(va, vb) .\n        vc) \\<Longrightarrow>\n       sterms_sumC (\\<Gamma>, p1) \\<union> sterms_sumC (\\<Gamma>, p2) =\n       {{v}groupcast(va, vb) .\n        vc}\n 9. \\<And>\\<Gamma> p1 p2 \\<Gamma>' v va vb.\n       (\\<Gamma>, p1\n                  \\<oplus>\n                  p2) =\n       (\\<Gamma>', {v}send(va) .\n        vb) \\<Longrightarrow>\n       sterms_sumC (\\<Gamma>, p1) \\<union> sterms_sumC (\\<Gamma>, p2) =\n       {{v}send(va) .\n        vb}\n 10. \\<And>\\<Gamma> p1 p2 \\<Gamma>' v va vb.\n        (\\<Gamma>, p1\n                   \\<oplus>\n                   p2) =\n        (\\<Gamma>', {v}deliver(va) .\n         vb) \\<Longrightarrow>\n        sterms_sumC (\\<Gamma>, p1) \\<union> sterms_sumC (\\<Gamma>, p2) =\n        {{v}deliver(va) .\n         vb}\nA total of 56 subgoals...", "by pat_completeness auto"], ["", "lemma sterms_dom_basic[simp]:\n  assumes \"not_call p\"\n      and \"not_choice p\"\n    shows \"sterms_dom (\\<Gamma>, p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sterms_dom (\\<Gamma>, p)", "proof (rule accpI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. sterms_rel y (\\<Gamma>, p) \\<Longrightarrow> sterms_dom y", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. sterms_rel y (\\<Gamma>, p) \\<Longrightarrow> sterms_dom y", "assume \"sterms_rel y (\\<Gamma>, p)\""], ["proof (state)\nthis:\n  sterms_rel y (\\<Gamma>, p)\n\ngoal (1 subgoal):\n 1. \\<And>y. sterms_rel y (\\<Gamma>, p) \\<Longrightarrow> sterms_dom y", "with assms"], ["proof (chain)\npicking this:\n  not_call p\n  not_choice p\n  sterms_rel y (\\<Gamma>, p)", "show \"sterms_dom y\""], ["proof (prove)\nusing this:\n  not_call p\n  not_choice p\n  sterms_rel y (\\<Gamma>, p)\n\ngoal (1 subgoal):\n 1. sterms_dom y", "by (cases p) (auto simp: sterms_rel.simps)"], ["proof (state)\nthis:\n  sterms_dom y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sterms_termination:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"sterms_dom (\\<Gamma>, p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sterms_dom (\\<Gamma>, p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sterms_dom (\\<Gamma>, p)", "have sterms_rel':\n      \"sterms_rel = (\\<lambda>gq gp. (gq, gp) \\<in> {((\\<Gamma>, q), (\\<Gamma>', p)). \\<Gamma> = \\<Gamma>' \\<and> p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sterms_rel =\n    (\\<lambda>gq gp.\n        (gq, gp)\n        \\<in> {((\\<Gamma>, q), \\<Gamma>', p).\n               \\<Gamma> = \\<Gamma>' \\<and>\n               p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q})", "by (rule ext)+ (auto simp: sterms_rel.simps elim: microstep.cases)"], ["proof (state)\nthis:\n  sterms_rel =\n  (\\<lambda>gq gp.\n      (gq, gp)\n      \\<in> {((\\<Gamma>, q), \\<Gamma>', p).\n             \\<Gamma> = \\<Gamma>' \\<and>\n             p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q})\n\ngoal (1 subgoal):\n 1. sterms_dom (\\<Gamma>, p)", "from assms"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>", "have \"\\<forall>x. x \\<in> Wellfounded.acc {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<in> Wellfounded.acc\n                {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}", "unfolding wellformed_def"], ["proof (prove)\nusing this:\n  wf {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<in> Wellfounded.acc\n                {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}", "by (simp add: wf_acc_iff)"], ["proof (state)\nthis:\n  \\<forall>x.\n     x \\<in> Wellfounded.acc\n              {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. sterms_dom (\\<Gamma>, p)", "hence \"p \\<in> Wellfounded.acc {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     x \\<in> Wellfounded.acc\n              {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. p \\<in> Wellfounded.acc {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}", ".."], ["proof (state)\nthis:\n  p \\<in> Wellfounded.acc {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. sterms_dom (\\<Gamma>, p)", "hence \"(\\<Gamma>, p) \\<in> Wellfounded.acc {((\\<Gamma>, q), (\\<Gamma>', p)). \\<Gamma> = \\<Gamma>' \\<and> p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\""], ["proof (prove)\nusing this:\n  p \\<in> Wellfounded.acc {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. (\\<Gamma>, p)\n    \\<in> Wellfounded.acc\n           {((\\<Gamma>, q), \\<Gamma>', p).\n            \\<Gamma> = \\<Gamma>' \\<and>\n            p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}", "by (rule acc_induct) (auto intro: accI)"], ["proof (state)\nthis:\n  (\\<Gamma>, p)\n  \\<in> Wellfounded.acc\n         {((\\<Gamma>, q), \\<Gamma>', p).\n          \\<Gamma> = \\<Gamma>' \\<and>\n          p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. sterms_dom (\\<Gamma>, p)", "thus \"sterms_dom (\\<Gamma>, p)\""], ["proof (prove)\nusing this:\n  (\\<Gamma>, p)\n  \\<in> Wellfounded.acc\n         {((\\<Gamma>, q), \\<Gamma>', p).\n          \\<Gamma> = \\<Gamma>' \\<and>\n          p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. sterms_dom (\\<Gamma>, p)", "unfolding sterms_rel' accp_acc_eq"], ["proof (prove)\nusing this:\n  (\\<Gamma>, p)\n  \\<in> Wellfounded.acc\n         {((\\<Gamma>, q), \\<Gamma>', p).\n          \\<Gamma> = \\<Gamma>' \\<and>\n          p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. (\\<Gamma>, p)\n    \\<in> Wellfounded.acc\n           {((\\<Gamma>, q), \\<Gamma>', p).\n            \\<Gamma> = \\<Gamma>' \\<and>\n            p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}", "."], ["proof (state)\nthis:\n  sterms_dom (\\<Gamma>, p)\n\ngoal:\nNo subgoals!", "qed"], ["", "declare sterms.psimps [simp]"], ["", "lemmas sterms_psimps[simp] = sterms.psimps [OF sterms_termination]\n   and sterms_pinduct = sterms.pinduct [OF sterms_termination]"], ["", "lemma sterms_reflD [dest]:\n  assumes \"q \\<in> sterms \\<Gamma> p\"\n      and \"not_choice p\" \"not_call p\"\n    shows \"q = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q = p", "using assms"], ["proof (prove)\nusing this:\n  q \\<in> sterms \\<Gamma> p\n  not_choice p\n  not_call p\n\ngoal (1 subgoal):\n 1. q = p", "by (cases p) auto"], ["", "lemma sterms_choice_disj [simp]:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"p \\<in> sterms \\<Gamma> (p1 \\<oplus> p2) = (p \\<in> sterms \\<Gamma> p1 \\<or> p \\<in> sterms \\<Gamma> p2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p \\<in> sterms \\<Gamma> (p1\n                              \\<oplus>\n                              p2)) =\n    (p \\<in> sterms \\<Gamma> p1 \\<or> p \\<in> sterms \\<Gamma> p2)", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. (p \\<in> sterms \\<Gamma> (p1\n                              \\<oplus>\n                              p2)) =\n    (p \\<in> sterms \\<Gamma> p1 \\<or> p \\<in> sterms \\<Gamma> p2)", "by (simp)"], ["", "lemma sterms_no_choice [simp]:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"p1 \\<oplus> p2 \\<notin> sterms \\<Gamma> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p1\n    \\<oplus>\n    p2\n    \\<notin> sterms \\<Gamma> p", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. p1\n    \\<oplus>\n    p2\n    \\<notin> sterms \\<Gamma> p", "by induction auto"], ["", "lemma sterms_not_choice [simp]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"q \\<in> sterms \\<Gamma> p\"\n    shows \"not_choice q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. not_choice q", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  q \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. not_choice q", "unfolding not_choice_def"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  q \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. \\<forall>p1 p2. q \\<noteq> p1\n                               \\<oplus>\n                               p2", "by (auto dest: sterms_no_choice)"], ["", "lemma sterms_no_call [simp]:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"call(pn) \\<notin> sterms \\<Gamma> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. call(pn) \\<notin> sterms \\<Gamma> p", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. call(pn) \\<notin> sterms \\<Gamma> p", "by induction auto"], ["", "lemma sterms_not_call [simp]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"q \\<in> sterms \\<Gamma> p\"\n    shows \"not_call q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. not_call q", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  q \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. not_call q", "unfolding not_call_def"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  q \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. \\<forall>pn. q \\<noteq> call(pn)", "by (auto dest: sterms_no_call)"], ["", "lemma sterms_in_branch:\n  assumes \"wellformed \\<Gamma>\"\n      and \"p \\<in> sterms \\<Gamma> (p1 \\<oplus> p2)\"\n      and \"p \\<in> sterms \\<Gamma> p1 \\<Longrightarrow> P\"\n      and \"p \\<in> sterms \\<Gamma> p2 \\<Longrightarrow> P\"\n  shows \"P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p \\<in> sterms \\<Gamma> (p1\n                           \\<oplus>\n                           p2)\n  p \\<in> sterms \\<Gamma> p1 \\<Longrightarrow> P\n  p \\<in> sterms \\<Gamma> p2 \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "by auto"], ["", "lemma sterms_commute:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"sterms \\<Gamma> (p1 \\<oplus> p2) = sterms \\<Gamma> (p2 \\<oplus> p1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sterms \\<Gamma> (p1\n                     \\<oplus>\n                     p2) =\n    sterms \\<Gamma> (p2\n                     \\<oplus>\n                     p1)", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. sterms \\<Gamma> (p1\n                     \\<oplus>\n                     p2) =\n    sterms \\<Gamma> (p2\n                     \\<oplus>\n                     p1)", "by simp (rule Un_commute)"], ["", "lemma sterms_not_empty:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"sterms \\<Gamma> p \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sterms \\<Gamma> p \\<noteq> {}", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. sterms \\<Gamma> p \\<noteq> {}", "by (induct p rule: sterms_pinduct [OF \\<open>wellformed \\<Gamma>\\<close>]) simp_all"], ["", "lemma sterms_sterms [simp]:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"(\\<Union>x\\<in>sterms \\<Gamma> p. sterms \\<Gamma> x) = sterms \\<Gamma> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (sterms \\<Gamma> ` sterms \\<Gamma> p) = sterms \\<Gamma> p", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<Union> (sterms \\<Gamma> ` sterms \\<Gamma> p) = sterms \\<Gamma> p", "by induction simp_all"], ["", "lemma sterms_stermsl:\n  assumes \"ps \\<in> sterms \\<Gamma> p\"\n      and \"wellformed \\<Gamma>\"\n    shows \"ps \\<in> stermsl p \\<or> (\\<exists>pn. ps \\<in> stermsl (\\<Gamma> pn))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ps \\<in> stermsl p \\<or> (\\<exists>pn. ps \\<in> stermsl (\\<Gamma> pn))", "using assms"], ["proof (prove)\nusing this:\n  ps \\<in> sterms \\<Gamma> p\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. ps \\<in> stermsl p \\<or> (\\<exists>pn. ps \\<in> stermsl (\\<Gamma> pn))", "by (induction p rule: sterms_pinduct [OF \\<open>wellformed \\<Gamma>\\<close>]) auto"], ["", "lemma stermsl_sterms [elim]:\n  assumes \"q \\<in> stermsl p\"\n      and \"not_call q\"\n      and \"wellformed \\<Gamma>\"\n    shows \"q \\<in> sterms \\<Gamma> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> sterms \\<Gamma> p", "using assms"], ["proof (prove)\nusing this:\n  q \\<in> stermsl p\n  not_call q\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. q \\<in> sterms \\<Gamma> p", "by (induct p) auto"], ["", "lemma sterms_stermsl_heads:\n  assumes \"ps \\<in> sterms \\<Gamma> (\\<Gamma> pn)\"\n      and \"wellformed \\<Gamma>\"\n    shows \"\\<exists>pn. ps \\<in> stermsl (\\<Gamma> pn)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>pn. ps \\<in> stermsl (\\<Gamma> pn)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>pn. ps \\<in> stermsl (\\<Gamma> pn)", "from assms"], ["proof (chain)\npicking this:\n  ps \\<in> sterms \\<Gamma> (\\<Gamma> pn)\n  wellformed \\<Gamma>", "have \"ps \\<in> stermsl (\\<Gamma> pn) \\<or> (\\<exists>pn'. ps \\<in> stermsl (\\<Gamma> pn'))\""], ["proof (prove)\nusing this:\n  ps \\<in> sterms \\<Gamma> (\\<Gamma> pn)\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. ps \\<in> stermsl (\\<Gamma> pn) \\<or>\n    (\\<exists>pn'. ps \\<in> stermsl (\\<Gamma> pn'))", "by (rule sterms_stermsl)"], ["proof (state)\nthis:\n  ps \\<in> stermsl (\\<Gamma> pn) \\<or>\n  (\\<exists>pn'. ps \\<in> stermsl (\\<Gamma> pn'))\n\ngoal (1 subgoal):\n 1. \\<exists>pn. ps \\<in> stermsl (\\<Gamma> pn)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ps \\<in> stermsl (\\<Gamma> pn) \\<or>\n  (\\<exists>pn'. ps \\<in> stermsl (\\<Gamma> pn'))\n\ngoal (1 subgoal):\n 1. \\<exists>pn. ps \\<in> stermsl (\\<Gamma> pn)", "by auto"], ["proof (state)\nthis:\n  \\<exists>pn. ps \\<in> stermsl (\\<Gamma> pn)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sterms_subterms [dest]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"\\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\"\n      and \"q \\<in> sterms \\<Gamma> p\"\n    shows \"\\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n  q \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)", "by (induct p) auto"], ["", "lemma no_microsteps_sterms_refl:\n  assumes \"wellformed \\<Gamma>\"\n  shows \"(\\<not>(\\<exists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q)) = (sterms \\<Gamma> p = {p})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n    (sterms \\<Gamma> p = {p})", "proof (cases p)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x11 x12 x13.\n       p = {x11}\\<langle>x12\\<rangle>\n       x13 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 2. \\<And>x21 x22 x23.\n       p = {x21}\\<lbrakk>x22\\<rbrakk>\n       x23 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 3. \\<And>x31 x32.\n       p = x31\n           \\<oplus>\n           x32 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 4. \\<And>x41 x42 x43 x44 x45.\n       p = {x41}unicast(x42, x43) .\n              x44 \\<triangleright> x45 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 5. \\<And>x51 x52 x53.\n       p = {x51}broadcast(x52) .\n       x53 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 6. \\<And>x61 x62 x63 x64.\n       p = {x61}groupcast(x62, x63) .\n       x64 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 7. \\<And>x71 x72 x73.\n       p = {x71}send(x72) .\n       x73 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 8. \\<And>x81 x82 x83.\n       p = {x81}deliver(x82) .\n       x83 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 9. \\<And>x91 x92 x93.\n       p = {x91}receive(x92) .\n       x93 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 10. \\<And>x10.\n        p = call(x10) \\<Longrightarrow>\n        (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n        (sterms \\<Gamma> p = {p})", "fix p1 p2"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x11 x12 x13.\n       p = {x11}\\<langle>x12\\<rangle>\n       x13 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 2. \\<And>x21 x22 x23.\n       p = {x21}\\<lbrakk>x22\\<rbrakk>\n       x23 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 3. \\<And>x31 x32.\n       p = x31\n           \\<oplus>\n           x32 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 4. \\<And>x41 x42 x43 x44 x45.\n       p = {x41}unicast(x42, x43) .\n              x44 \\<triangleright> x45 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 5. \\<And>x51 x52 x53.\n       p = {x51}broadcast(x52) .\n       x53 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 6. \\<And>x61 x62 x63 x64.\n       p = {x61}groupcast(x62, x63) .\n       x64 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 7. \\<And>x71 x72 x73.\n       p = {x71}send(x72) .\n       x73 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 8. \\<And>x81 x82 x83.\n       p = {x81}deliver(x82) .\n       x83 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 9. \\<And>x91 x92 x93.\n       p = {x91}receive(x92) .\n       x93 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 10. \\<And>x10.\n        p = call(x10) \\<Longrightarrow>\n        (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n        (sterms \\<Gamma> p = {p})", "assume \"p = p1 \\<oplus> p2\""], ["proof (state)\nthis:\n  p = p1\n      \\<oplus>\n      p2\n\ngoal (10 subgoals):\n 1. \\<And>x11 x12 x13.\n       p = {x11}\\<langle>x12\\<rangle>\n       x13 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 2. \\<And>x21 x22 x23.\n       p = {x21}\\<lbrakk>x22\\<rbrakk>\n       x23 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 3. \\<And>x31 x32.\n       p = x31\n           \\<oplus>\n           x32 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 4. \\<And>x41 x42 x43 x44 x45.\n       p = {x41}unicast(x42, x43) .\n              x44 \\<triangleright> x45 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 5. \\<And>x51 x52 x53.\n       p = {x51}broadcast(x52) .\n       x53 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 6. \\<And>x61 x62 x63 x64.\n       p = {x61}groupcast(x62, x63) .\n       x64 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 7. \\<And>x71 x72 x73.\n       p = {x71}send(x72) .\n       x73 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 8. \\<And>x81 x82 x83.\n       p = {x81}deliver(x82) .\n       x83 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 9. \\<And>x91 x92 x93.\n       p = {x91}receive(x92) .\n       x93 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 10. \\<And>x10.\n        p = call(x10) \\<Longrightarrow>\n        (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n        (sterms \\<Gamma> p = {p})", "from \\<open>wellformed \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>", "have \"p1 \\<oplus> p2 \\<notin> sterms \\<Gamma> (p1 \\<oplus> p2)\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. p1\n    \\<oplus>\n    p2\n    \\<notin> sterms \\<Gamma> (p1\n                              \\<oplus>\n                              p2)", "by simp"], ["proof (state)\nthis:\n  p1\n  \\<oplus>\n  p2\n  \\<notin> sterms \\<Gamma> (p1\n                            \\<oplus>\n                            p2)\n\ngoal (10 subgoals):\n 1. \\<And>x11 x12 x13.\n       p = {x11}\\<langle>x12\\<rangle>\n       x13 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 2. \\<And>x21 x22 x23.\n       p = {x21}\\<lbrakk>x22\\<rbrakk>\n       x23 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 3. \\<And>x31 x32.\n       p = x31\n           \\<oplus>\n           x32 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 4. \\<And>x41 x42 x43 x44 x45.\n       p = {x41}unicast(x42, x43) .\n              x44 \\<triangleright> x45 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 5. \\<And>x51 x52 x53.\n       p = {x51}broadcast(x52) .\n       x53 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 6. \\<And>x61 x62 x63 x64.\n       p = {x61}groupcast(x62, x63) .\n       x64 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 7. \\<And>x71 x72 x73.\n       p = {x71}send(x72) .\n       x73 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 8. \\<And>x81 x82 x83.\n       p = {x81}deliver(x82) .\n       x83 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 9. \\<And>x91 x92 x93.\n       p = {x91}receive(x92) .\n       x93 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 10. \\<And>x10.\n        p = call(x10) \\<Longrightarrow>\n        (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n        (sterms \\<Gamma> p = {p})", "hence \"sterms \\<Gamma> (p1 \\<oplus> p2) \\<noteq> {p1 \\<oplus> p2}\""], ["proof (prove)\nusing this:\n  p1\n  \\<oplus>\n  p2\n  \\<notin> sterms \\<Gamma> (p1\n                            \\<oplus>\n                            p2)\n\ngoal (1 subgoal):\n 1. sterms \\<Gamma> (p1\n                     \\<oplus>\n                     p2) \\<noteq>\n    {p1\n     \\<oplus>\n     p2}", "by auto"], ["proof (state)\nthis:\n  sterms \\<Gamma> (p1\n                   \\<oplus>\n                   p2) \\<noteq>\n  {p1\n   \\<oplus>\n   p2}\n\ngoal (10 subgoals):\n 1. \\<And>x11 x12 x13.\n       p = {x11}\\<langle>x12\\<rangle>\n       x13 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 2. \\<And>x21 x22 x23.\n       p = {x21}\\<lbrakk>x22\\<rbrakk>\n       x23 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 3. \\<And>x31 x32.\n       p = x31\n           \\<oplus>\n           x32 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 4. \\<And>x41 x42 x43 x44 x45.\n       p = {x41}unicast(x42, x43) .\n              x44 \\<triangleright> x45 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 5. \\<And>x51 x52 x53.\n       p = {x51}broadcast(x52) .\n       x53 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 6. \\<And>x61 x62 x63 x64.\n       p = {x61}groupcast(x62, x63) .\n       x64 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 7. \\<And>x71 x72 x73.\n       p = {x71}send(x72) .\n       x73 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 8. \\<And>x81 x82 x83.\n       p = {x81}deliver(x82) .\n       x83 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 9. \\<And>x91 x92 x93.\n       p = {x91}receive(x92) .\n       x93 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 10. \\<And>x10.\n        p = call(x10) \\<Longrightarrow>\n        (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n        (sterms \\<Gamma> p = {p})", "moreover"], ["proof (state)\nthis:\n  sterms \\<Gamma> (p1\n                   \\<oplus>\n                   p2) \\<noteq>\n  {p1\n   \\<oplus>\n   p2}\n\ngoal (10 subgoals):\n 1. \\<And>x11 x12 x13.\n       p = {x11}\\<langle>x12\\<rangle>\n       x13 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 2. \\<And>x21 x22 x23.\n       p = {x21}\\<lbrakk>x22\\<rbrakk>\n       x23 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 3. \\<And>x31 x32.\n       p = x31\n           \\<oplus>\n           x32 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 4. \\<And>x41 x42 x43 x44 x45.\n       p = {x41}unicast(x42, x43) .\n              x44 \\<triangleright> x45 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 5. \\<And>x51 x52 x53.\n       p = {x51}broadcast(x52) .\n       x53 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 6. \\<And>x61 x62 x63 x64.\n       p = {x61}groupcast(x62, x63) .\n       x64 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 7. \\<And>x71 x72 x73.\n       p = {x71}send(x72) .\n       x73 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 8. \\<And>x81 x82 x83.\n       p = {x81}deliver(x82) .\n       x83 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 9. \\<And>x91 x92 x93.\n       p = {x91}receive(x92) .\n       x93 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 10. \\<And>x10.\n        p = call(x10) \\<Longrightarrow>\n        (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n        (sterms \\<Gamma> p = {p})", "have \"\\<exists>q. (p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>q. (p1\n                 \\<oplus>\n                 p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q", "by auto"], ["proof (state)\nthis:\n  \\<exists>q. (p1\n               \\<oplus>\n               p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\n\ngoal (10 subgoals):\n 1. \\<And>x11 x12 x13.\n       p = {x11}\\<langle>x12\\<rangle>\n       x13 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 2. \\<And>x21 x22 x23.\n       p = {x21}\\<lbrakk>x22\\<rbrakk>\n       x23 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 3. \\<And>x31 x32.\n       p = x31\n           \\<oplus>\n           x32 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 4. \\<And>x41 x42 x43 x44 x45.\n       p = {x41}unicast(x42, x43) .\n              x44 \\<triangleright> x45 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 5. \\<And>x51 x52 x53.\n       p = {x51}broadcast(x52) .\n       x53 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 6. \\<And>x61 x62 x63 x64.\n       p = {x61}groupcast(x62, x63) .\n       x64 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 7. \\<And>x71 x72 x73.\n       p = {x71}send(x72) .\n       x73 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 8. \\<And>x81 x82 x83.\n       p = {x81}deliver(x82) .\n       x83 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 9. \\<And>x91 x92 x93.\n       p = {x91}receive(x92) .\n       x93 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 10. \\<And>x10.\n        p = call(x10) \\<Longrightarrow>\n        (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n        (sterms \\<Gamma> p = {p})", "ultimately"], ["proof (chain)\npicking this:\n  sterms \\<Gamma> (p1\n                   \\<oplus>\n                   p2) \\<noteq>\n  {p1\n   \\<oplus>\n   p2}\n  \\<exists>q. (p1\n               \\<oplus>\n               p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q", "show ?thesis"], ["proof (prove)\nusing this:\n  sterms \\<Gamma> (p1\n                   \\<oplus>\n                   p2) \\<noteq>\n  {p1\n   \\<oplus>\n   p2}\n  \\<exists>q. (p1\n               \\<oplus>\n               p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\n\ngoal (1 subgoal):\n 1. (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n    (sterms \\<Gamma> p = {p})", "using \\<open>p = p1 \\<oplus> p2\\<close>"], ["proof (prove)\nusing this:\n  sterms \\<Gamma> (p1\n                   \\<oplus>\n                   p2) \\<noteq>\n  {p1\n   \\<oplus>\n   p2}\n  \\<exists>q. (p1\n               \\<oplus>\n               p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\n  p = p1\n      \\<oplus>\n      p2\n\ngoal (1 subgoal):\n 1. (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n    (sterms \\<Gamma> p = {p})", "by simp"], ["proof (state)\nthis:\n  (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n  (sterms \\<Gamma> p = {p})\n\ngoal (9 subgoals):\n 1. \\<And>x11 x12 x13.\n       p = {x11}\\<langle>x12\\<rangle>\n       x13 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 2. \\<And>x21 x22 x23.\n       p = {x21}\\<lbrakk>x22\\<rbrakk>\n       x23 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 3. \\<And>x41 x42 x43 x44 x45.\n       p = {x41}unicast(x42, x43) .\n              x44 \\<triangleright> x45 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 4. \\<And>x51 x52 x53.\n       p = {x51}broadcast(x52) .\n       x53 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 5. \\<And>x61 x62 x63 x64.\n       p = {x61}groupcast(x62, x63) .\n       x64 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 6. \\<And>x71 x72 x73.\n       p = {x71}send(x72) .\n       x73 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 7. \\<And>x81 x82 x83.\n       p = {x81}deliver(x82) .\n       x83 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 8. \\<And>x91 x92 x93.\n       p = {x91}receive(x92) .\n       x93 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 9. \\<And>x10.\n       p = call(x10) \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x11 x12 x13.\n       p = {x11}\\<langle>x12\\<rangle>\n       x13 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 2. \\<And>x21 x22 x23.\n       p = {x21}\\<lbrakk>x22\\<rbrakk>\n       x23 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 3. \\<And>x41 x42 x43 x44 x45.\n       p = {x41}unicast(x42, x43) .\n              x44 \\<triangleright> x45 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 4. \\<And>x51 x52 x53.\n       p = {x51}broadcast(x52) .\n       x53 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 5. \\<And>x61 x62 x63 x64.\n       p = {x61}groupcast(x62, x63) .\n       x64 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 6. \\<And>x71 x72 x73.\n       p = {x71}send(x72) .\n       x73 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 7. \\<And>x81 x82 x83.\n       p = {x81}deliver(x82) .\n       x83 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 8. \\<And>x91 x92 x93.\n       p = {x91}receive(x92) .\n       x93 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 9. \\<And>x10.\n       p = call(x10) \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})", "fix pn"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x11 x12 x13.\n       p = {x11}\\<langle>x12\\<rangle>\n       x13 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 2. \\<And>x21 x22 x23.\n       p = {x21}\\<lbrakk>x22\\<rbrakk>\n       x23 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 3. \\<And>x41 x42 x43 x44 x45.\n       p = {x41}unicast(x42, x43) .\n              x44 \\<triangleright> x45 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 4. \\<And>x51 x52 x53.\n       p = {x51}broadcast(x52) .\n       x53 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 5. \\<And>x61 x62 x63 x64.\n       p = {x61}groupcast(x62, x63) .\n       x64 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 6. \\<And>x71 x72 x73.\n       p = {x71}send(x72) .\n       x73 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 7. \\<And>x81 x82 x83.\n       p = {x81}deliver(x82) .\n       x83 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 8. \\<And>x91 x92 x93.\n       p = {x91}receive(x92) .\n       x93 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 9. \\<And>x10.\n       p = call(x10) \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})", "assume \"p = call(pn)\""], ["proof (state)\nthis:\n  p = call(pn)\n\ngoal (9 subgoals):\n 1. \\<And>x11 x12 x13.\n       p = {x11}\\<langle>x12\\<rangle>\n       x13 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 2. \\<And>x21 x22 x23.\n       p = {x21}\\<lbrakk>x22\\<rbrakk>\n       x23 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 3. \\<And>x41 x42 x43 x44 x45.\n       p = {x41}unicast(x42, x43) .\n              x44 \\<triangleright> x45 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 4. \\<And>x51 x52 x53.\n       p = {x51}broadcast(x52) .\n       x53 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 5. \\<And>x61 x62 x63 x64.\n       p = {x61}groupcast(x62, x63) .\n       x64 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 6. \\<And>x71 x72 x73.\n       p = {x71}send(x72) .\n       x73 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 7. \\<And>x81 x82 x83.\n       p = {x81}deliver(x82) .\n       x83 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 8. \\<And>x91 x92 x93.\n       p = {x91}receive(x92) .\n       x93 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 9. \\<And>x10.\n       p = call(x10) \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})", "from \\<open>wellformed \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>", "have \"call(pn) \\<notin> sterms \\<Gamma> (call(pn))\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. call(pn) \\<notin> sterms \\<Gamma> (call(pn))", "by simp"], ["proof (state)\nthis:\n  call(pn) \\<notin> sterms \\<Gamma> (call(pn))\n\ngoal (9 subgoals):\n 1. \\<And>x11 x12 x13.\n       p = {x11}\\<langle>x12\\<rangle>\n       x13 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 2. \\<And>x21 x22 x23.\n       p = {x21}\\<lbrakk>x22\\<rbrakk>\n       x23 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 3. \\<And>x41 x42 x43 x44 x45.\n       p = {x41}unicast(x42, x43) .\n              x44 \\<triangleright> x45 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 4. \\<And>x51 x52 x53.\n       p = {x51}broadcast(x52) .\n       x53 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 5. \\<And>x61 x62 x63 x64.\n       p = {x61}groupcast(x62, x63) .\n       x64 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 6. \\<And>x71 x72 x73.\n       p = {x71}send(x72) .\n       x73 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 7. \\<And>x81 x82 x83.\n       p = {x81}deliver(x82) .\n       x83 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 8. \\<And>x91 x92 x93.\n       p = {x91}receive(x92) .\n       x93 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 9. \\<And>x10.\n       p = call(x10) \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})", "hence \"sterms \\<Gamma> (call(pn)) \\<noteq> {call(pn)}\""], ["proof (prove)\nusing this:\n  call(pn) \\<notin> sterms \\<Gamma> (call(pn))\n\ngoal (1 subgoal):\n 1. sterms \\<Gamma> (call(pn)) \\<noteq> {call(pn)}", "by auto"], ["proof (state)\nthis:\n  sterms \\<Gamma> (call(pn)) \\<noteq> {call(pn)}\n\ngoal (9 subgoals):\n 1. \\<And>x11 x12 x13.\n       p = {x11}\\<langle>x12\\<rangle>\n       x13 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 2. \\<And>x21 x22 x23.\n       p = {x21}\\<lbrakk>x22\\<rbrakk>\n       x23 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 3. \\<And>x41 x42 x43 x44 x45.\n       p = {x41}unicast(x42, x43) .\n              x44 \\<triangleright> x45 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 4. \\<And>x51 x52 x53.\n       p = {x51}broadcast(x52) .\n       x53 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 5. \\<And>x61 x62 x63 x64.\n       p = {x61}groupcast(x62, x63) .\n       x64 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 6. \\<And>x71 x72 x73.\n       p = {x71}send(x72) .\n       x73 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 7. \\<And>x81 x82 x83.\n       p = {x81}deliver(x82) .\n       x83 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 8. \\<And>x91 x92 x93.\n       p = {x91}receive(x92) .\n       x93 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 9. \\<And>x10.\n       p = call(x10) \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})", "moreover"], ["proof (state)\nthis:\n  sterms \\<Gamma> (call(pn)) \\<noteq> {call(pn)}\n\ngoal (9 subgoals):\n 1. \\<And>x11 x12 x13.\n       p = {x11}\\<langle>x12\\<rangle>\n       x13 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 2. \\<And>x21 x22 x23.\n       p = {x21}\\<lbrakk>x22\\<rbrakk>\n       x23 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 3. \\<And>x41 x42 x43 x44 x45.\n       p = {x41}unicast(x42, x43) .\n              x44 \\<triangleright> x45 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 4. \\<And>x51 x52 x53.\n       p = {x51}broadcast(x52) .\n       x53 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 5. \\<And>x61 x62 x63 x64.\n       p = {x61}groupcast(x62, x63) .\n       x64 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 6. \\<And>x71 x72 x73.\n       p = {x71}send(x72) .\n       x73 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 7. \\<And>x81 x82 x83.\n       p = {x81}deliver(x82) .\n       x83 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 8. \\<And>x91 x92 x93.\n       p = {x91}receive(x92) .\n       x93 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 9. \\<And>x10.\n       p = call(x10) \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})", "have \"\\<exists>q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q", "by auto"], ["proof (state)\nthis:\n  \\<exists>q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\n\ngoal (9 subgoals):\n 1. \\<And>x11 x12 x13.\n       p = {x11}\\<langle>x12\\<rangle>\n       x13 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 2. \\<And>x21 x22 x23.\n       p = {x21}\\<lbrakk>x22\\<rbrakk>\n       x23 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 3. \\<And>x41 x42 x43 x44 x45.\n       p = {x41}unicast(x42, x43) .\n              x44 \\<triangleright> x45 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 4. \\<And>x51 x52 x53.\n       p = {x51}broadcast(x52) .\n       x53 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 5. \\<And>x61 x62 x63 x64.\n       p = {x61}groupcast(x62, x63) .\n       x64 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 6. \\<And>x71 x72 x73.\n       p = {x71}send(x72) .\n       x73 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 7. \\<And>x81 x82 x83.\n       p = {x81}deliver(x82) .\n       x83 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 8. \\<And>x91 x92 x93.\n       p = {x91}receive(x92) .\n       x93 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 9. \\<And>x10.\n       p = call(x10) \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})", "ultimately"], ["proof (chain)\npicking this:\n  sterms \\<Gamma> (call(pn)) \\<noteq> {call(pn)}\n  \\<exists>q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q", "show ?thesis"], ["proof (prove)\nusing this:\n  sterms \\<Gamma> (call(pn)) \\<noteq> {call(pn)}\n  \\<exists>q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\n\ngoal (1 subgoal):\n 1. (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n    (sterms \\<Gamma> p = {p})", "using \\<open>p = call(pn)\\<close>"], ["proof (prove)\nusing this:\n  sterms \\<Gamma> (call(pn)) \\<noteq> {call(pn)}\n  \\<exists>q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\n  p = call(pn)\n\ngoal (1 subgoal):\n 1. (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n    (sterms \\<Gamma> p = {p})", "by simp"], ["proof (state)\nthis:\n  (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n  (sterms \\<Gamma> p = {p})\n\ngoal (8 subgoals):\n 1. \\<And>x11 x12 x13.\n       p = {x11}\\<langle>x12\\<rangle>\n       x13 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 2. \\<And>x21 x22 x23.\n       p = {x21}\\<lbrakk>x22\\<rbrakk>\n       x23 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 3. \\<And>x41 x42 x43 x44 x45.\n       p = {x41}unicast(x42, x43) .\n              x44 \\<triangleright> x45 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 4. \\<And>x51 x52 x53.\n       p = {x51}broadcast(x52) .\n       x53 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 5. \\<And>x61 x62 x63 x64.\n       p = {x61}groupcast(x62, x63) .\n       x64 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 6. \\<And>x71 x72 x73.\n       p = {x71}send(x72) .\n       x73 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 7. \\<And>x81 x82 x83.\n       p = {x81}deliver(x82) .\n       x83 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})\n 8. \\<And>x91 x92 x93.\n       p = {x91}receive(x92) .\n       x93 \\<Longrightarrow>\n       (\\<nexists>q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q) =\n       (sterms \\<Gamma> p = {p})", "qed simp_all"], ["", "lemma sterms_maximal [elim]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"q \\<in> sterms \\<Gamma> p\"\n    shows \"sterms \\<Gamma> q = {q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sterms \\<Gamma> q = {q}", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  q \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. sterms \\<Gamma> q = {q}", "by (cases q) auto"], ["", "lemma microstep_rtranscl_equal:\n  assumes \"not_call p\"\n      and \"not_choice p\"\n      and \"p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q\"\n    shows \"q = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q = p", "using assms(3)"], ["proof (prove)\nusing this:\n  p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q\n\ngoal (1 subgoal):\n 1. q = p", "proof (rule converse_rtranclpE)"], ["proof (state)\ngoal (2 subgoals):\n 1. p = q \\<Longrightarrow> q = p\n 2. \\<And>y.\n       \\<lbrakk>p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> y;\n        y \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q\\<rbrakk>\n       \\<Longrightarrow> q = p", "fix p'"], ["proof (state)\ngoal (2 subgoals):\n 1. p = q \\<Longrightarrow> q = p\n 2. \\<And>y.\n       \\<lbrakk>p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> y;\n        y \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q\\<rbrakk>\n       \\<Longrightarrow> q = p", "assume \"p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p'\""], ["proof (state)\nthis:\n  p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p'\n\ngoal (2 subgoals):\n 1. p = q \\<Longrightarrow> q = p\n 2. \\<And>y.\n       \\<lbrakk>p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> y;\n        y \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q\\<rbrakk>\n       \\<Longrightarrow> q = p", "with assms(1-2)"], ["proof (chain)\npicking this:\n  not_call p\n  not_choice p\n  p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p'", "show \"q = p\""], ["proof (prove)\nusing this:\n  not_call p\n  not_choice p\n  p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p'\n\ngoal (1 subgoal):\n 1. q = p", "by (cases p) simp_all"], ["proof (state)\nthis:\n  q = p\n\ngoal (1 subgoal):\n 1. p = q \\<Longrightarrow> q = p", "qed simp"], ["", "lemma microstep_rtranscl_singleton [simp]:\n  assumes \"not_call p\"\n      and \"not_choice p\"\n    shows \"{q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}} = {p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n        sterms \\<Gamma> q = {q}} =\n    {p}", "proof (rule set_eqI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                    sterms \\<Gamma> q = {q}}) =\n       (x \\<in> {p})", "fix p'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                    sterms \\<Gamma> q = {q}}) =\n       (x \\<in> {p})", "show \"(p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}}) = (p' \\<in> {p})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}) =\n    (p' \\<in> {p})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                 sterms \\<Gamma> q = {q}} \\<Longrightarrow>\n    p' \\<in> {p}\n 2. p' \\<in> {p} \\<Longrightarrow>\n    p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                 sterms \\<Gamma> q = {q}}", "assume \"p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}}\""], ["proof (state)\nthis:\n  p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n               sterms \\<Gamma> q = {q}}\n\ngoal (2 subgoals):\n 1. p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                 sterms \\<Gamma> q = {q}} \\<Longrightarrow>\n    p' \\<in> {p}\n 2. p' \\<in> {p} \\<Longrightarrow>\n    p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                 sterms \\<Gamma> q = {q}}", "hence \"(microstep \\<Gamma>)\\<^sup>*\\<^sup>* p p'\" and \"sterms \\<Gamma> p' = {p'}\""], ["proof (prove)\nusing this:\n  p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n               sterms \\<Gamma> q = {q}}\n\ngoal (1 subgoal):\n 1. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p' &&&\n    sterms \\<Gamma> p' = {p'}", "by auto"], ["proof (state)\nthis:\n  p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n  sterms \\<Gamma> p' = {p'}\n\ngoal (2 subgoals):\n 1. p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                 sterms \\<Gamma> q = {q}} \\<Longrightarrow>\n    p' \\<in> {p}\n 2. p' \\<in> {p} \\<Longrightarrow>\n    p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                 sterms \\<Gamma> q = {q}}", "from this(1)"], ["proof (chain)\npicking this:\n  p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'", "have \"p' = p\""], ["proof (prove)\nusing this:\n  p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n\ngoal (1 subgoal):\n 1. p' = p", "proof (rule converse_rtranclpE)"], ["proof (state)\ngoal (2 subgoals):\n 1. p = p' \\<Longrightarrow> p' = p\n 2. \\<And>y.\n       \\<lbrakk>p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> y;\n        y \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\\<rbrakk>\n       \\<Longrightarrow> p' = p", "fix q"], ["proof (state)\ngoal (2 subgoals):\n 1. p = p' \\<Longrightarrow> p' = p\n 2. \\<And>y.\n       \\<lbrakk>p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> y;\n        y \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\\<rbrakk>\n       \\<Longrightarrow> p' = p", "assume \"p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\""], ["proof (state)\nthis:\n  p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\n\ngoal (2 subgoals):\n 1. p = p' \\<Longrightarrow> p' = p\n 2. \\<And>y.\n       \\<lbrakk>p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> y;\n        y \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\\<rbrakk>\n       \\<Longrightarrow> p' = p", "with \\<open>not_call p\\<close> and \\<open>not_choice p\\<close>"], ["proof (chain)\npicking this:\n  not_call p\n  not_choice p\n  p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q", "have False"], ["proof (prove)\nusing this:\n  not_call p\n  not_choice p\n  p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q\n\ngoal (1 subgoal):\n 1. False", "by (cases p) auto"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. p = p' \\<Longrightarrow> p' = p\n 2. \\<And>y.\n       \\<lbrakk>p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> y;\n        y \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\\<rbrakk>\n       \\<Longrightarrow> p' = p", "thus \"p' = p\""], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. p' = p", ".."], ["proof (state)\nthis:\n  p' = p\n\ngoal (1 subgoal):\n 1. p = p' \\<Longrightarrow> p' = p", "qed simp"], ["proof (state)\nthis:\n  p' = p\n\ngoal (2 subgoals):\n 1. p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                 sterms \\<Gamma> q = {q}} \\<Longrightarrow>\n    p' \\<in> {p}\n 2. p' \\<in> {p} \\<Longrightarrow>\n    p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                 sterms \\<Gamma> q = {q}}", "thus \"p' \\<in> {p}\""], ["proof (prove)\nusing this:\n  p' = p\n\ngoal (1 subgoal):\n 1. p' \\<in> {p}", "by simp"], ["proof (state)\nthis:\n  p' \\<in> {p}\n\ngoal (1 subgoal):\n 1. p' \\<in> {p} \\<Longrightarrow>\n    p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                 sterms \\<Gamma> q = {q}}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p' \\<in> {p} \\<Longrightarrow>\n    p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                 sterms \\<Gamma> q = {q}}", "assume \"p' \\<in> {p}\""], ["proof (state)\nthis:\n  p' \\<in> {p}\n\ngoal (1 subgoal):\n 1. p' \\<in> {p} \\<Longrightarrow>\n    p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                 sterms \\<Gamma> q = {q}}", "hence \"p' = p\""], ["proof (prove)\nusing this:\n  p' \\<in> {p}\n\ngoal (1 subgoal):\n 1. p' = p", ".."], ["proof (state)\nthis:\n  p' = p\n\ngoal (1 subgoal):\n 1. p' \\<in> {p} \\<Longrightarrow>\n    p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                 sterms \\<Gamma> q = {q}}", "with \\<open>not_call p\\<close> and \\<open>not_choice p\\<close>"], ["proof (chain)\npicking this:\n  not_call p\n  not_choice p\n  p' = p", "show \"p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}}\""], ["proof (prove)\nusing this:\n  not_call p\n  not_choice p\n  p' = p\n\ngoal (1 subgoal):\n 1. p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                 sterms \\<Gamma> q = {q}}", "by (cases p) simp_all"], ["proof (state)\nthis:\n  p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n               sterms \\<Gamma> q = {q}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (p' \\<in> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                sterms \\<Gamma> q = {q}}) =\n  (p' \\<in> {p})\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem sterms_maximal_microstep:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"sterms \\<Gamma> p = {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> \\<not>(\\<exists>q'. q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q')}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sterms \\<Gamma> p =\n    {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n        (\\<nexists>q'. q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q')}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. sterms \\<Gamma> p\n    \\<subseteq> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                    (\\<nexists>q'. q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q')}\n 2. {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n        (\\<nexists>q'. q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q')}\n    \\<subseteq> sterms \\<Gamma> p", "from \\<open>wellformed \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>", "have \"sterms \\<Gamma> p \\<subseteq> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}}\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. sterms \\<Gamma> p\n    \\<subseteq> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                    sterms \\<Gamma> q = {q}}", "proof induction"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                        p)\n       \\<subseteq> {q. ({l}\\<lbrakk>f\\<rbrakk>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 2. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                        p)\n       \\<subseteq> {q. ({l}\\<langle>f\\<rangle>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 3. \\<And>l fip fmsg p q.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                           p \\<triangleright> q)\n       \\<subseteq> {qa.\n                    ({l}unicast(fip, fmsg) .\n                        p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* qa \\<and>\n                    sterms \\<Gamma> qa = {qa}}\n 4. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}broadcast(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}broadcast(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 5. \\<And>l fips fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}groupcast(fips, fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 6. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}send(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}send(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 7. \\<And>l fdata p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}deliver(fdata) .\n                        p)\n       \\<subseteq> {q. ({l}deliver(fdata) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 8. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}receive(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}receive(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        sterms \\<Gamma> p1\n        \\<subseteq> {q. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                        sterms \\<Gamma> q = {q}};\n        sterms \\<Gamma> p2\n        \\<subseteq> {q. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                        sterms \\<Gamma> q = {q}}\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (p1\n    \\<oplus>\n    p2)\n                         \\<subseteq> {q.\n(p1\n \\<oplus>\n p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\nsterms \\<Gamma> q = {q}}\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         sterms \\<Gamma> (\\<Gamma> pn)\n         \\<subseteq> {q. \\<Gamma>\n                          pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                         sterms \\<Gamma> q = {q}}\\<rbrakk>\n        \\<Longrightarrow> sterms \\<Gamma> (call(pn))\n                          \\<subseteq> {q.\n (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n sterms \\<Gamma> q = {q}}", "fix p1 p2"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                        p)\n       \\<subseteq> {q. ({l}\\<lbrakk>f\\<rbrakk>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 2. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                        p)\n       \\<subseteq> {q. ({l}\\<langle>f\\<rangle>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 3. \\<And>l fip fmsg p q.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                           p \\<triangleright> q)\n       \\<subseteq> {qa.\n                    ({l}unicast(fip, fmsg) .\n                        p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* qa \\<and>\n                    sterms \\<Gamma> qa = {qa}}\n 4. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}broadcast(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}broadcast(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 5. \\<And>l fips fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}groupcast(fips, fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 6. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}send(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}send(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 7. \\<And>l fdata p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}deliver(fdata) .\n                        p)\n       \\<subseteq> {q. ({l}deliver(fdata) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 8. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}receive(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}receive(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        sterms \\<Gamma> p1\n        \\<subseteq> {q. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                        sterms \\<Gamma> q = {q}};\n        sterms \\<Gamma> p2\n        \\<subseteq> {q. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                        sterms \\<Gamma> q = {q}}\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (p1\n    \\<oplus>\n    p2)\n                         \\<subseteq> {q.\n(p1\n \\<oplus>\n p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\nsterms \\<Gamma> q = {q}}\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         sterms \\<Gamma> (\\<Gamma> pn)\n         \\<subseteq> {q. \\<Gamma>\n                          pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                         sterms \\<Gamma> q = {q}}\\<rbrakk>\n        \\<Longrightarrow> sterms \\<Gamma> (call(pn))\n                          \\<subseteq> {q.\n (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n sterms \\<Gamma> q = {q}}", "assume IH1: \"sterms \\<Gamma> p1 \\<subseteq> {q. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}}\"\n        and IH2: \"sterms \\<Gamma> p2 \\<subseteq> {q. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}}\""], ["proof (state)\nthis:\n  sterms \\<Gamma> p1\n  \\<subseteq> {q. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n  sterms \\<Gamma> p2\n  \\<subseteq> {q. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                        p)\n       \\<subseteq> {q. ({l}\\<lbrakk>f\\<rbrakk>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 2. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                        p)\n       \\<subseteq> {q. ({l}\\<langle>f\\<rangle>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 3. \\<And>l fip fmsg p q.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                           p \\<triangleright> q)\n       \\<subseteq> {qa.\n                    ({l}unicast(fip, fmsg) .\n                        p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* qa \\<and>\n                    sterms \\<Gamma> qa = {qa}}\n 4. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}broadcast(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}broadcast(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 5. \\<And>l fips fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}groupcast(fips, fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 6. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}send(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}send(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 7. \\<And>l fdata p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}deliver(fdata) .\n                        p)\n       \\<subseteq> {q. ({l}deliver(fdata) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 8. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}receive(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}receive(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        sterms \\<Gamma> p1\n        \\<subseteq> {q. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                        sterms \\<Gamma> q = {q}};\n        sterms \\<Gamma> p2\n        \\<subseteq> {q. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                        sterms \\<Gamma> q = {q}}\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (p1\n    \\<oplus>\n    p2)\n                         \\<subseteq> {q.\n(p1\n \\<oplus>\n p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\nsterms \\<Gamma> q = {q}}\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         sterms \\<Gamma> (\\<Gamma> pn)\n         \\<subseteq> {q. \\<Gamma>\n                          pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                         sterms \\<Gamma> q = {q}}\\<rbrakk>\n        \\<Longrightarrow> sterms \\<Gamma> (call(pn))\n                          \\<subseteq> {q.\n (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n sterms \\<Gamma> q = {q}}", "have \"sterms \\<Gamma> p1 \\<subseteq> {q. (p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sterms \\<Gamma> p1\n    \\<subseteq> {q. (p1\n                     \\<oplus>\n                     p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                    sterms \\<Gamma> q = {q}}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> p1 \\<Longrightarrow>\n       x \\<in> {q. (p1\n                    \\<oplus>\n                    p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "fix p'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> p1 \\<Longrightarrow>\n       x \\<in> {q. (p1\n                    \\<oplus>\n                    p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "assume \"p' \\<in> sterms \\<Gamma> p1\""], ["proof (state)\nthis:\n  p' \\<in> sterms \\<Gamma> p1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> p1 \\<Longrightarrow>\n       x \\<in> {q. (p1\n                    \\<oplus>\n                    p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "with IH1"], ["proof (chain)\npicking this:\n  sterms \\<Gamma> p1\n  \\<subseteq> {q. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n  p' \\<in> sterms \\<Gamma> p1", "have \"p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\""], ["proof (prove)\nusing this:\n  sterms \\<Gamma> p1\n  \\<subseteq> {q. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n  p' \\<in> sterms \\<Gamma> p1\n\ngoal (1 subgoal):\n 1. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'", "by auto"], ["proof (state)\nthis:\n  p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> p1 \\<Longrightarrow>\n       x \\<in> {q. (p1\n                    \\<oplus>\n                    p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "moreover"], ["proof (state)\nthis:\n  p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> p1 \\<Longrightarrow>\n       x \\<in> {q. (p1\n                    \\<oplus>\n                    p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "have \"(p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p1\n     \\<oplus>\n     p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p1", ".."], ["proof (state)\nthis:\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> p1 \\<Longrightarrow>\n       x \\<in> {q. (p1\n                    \\<oplus>\n                    p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "ultimately"], ["proof (chain)\npicking this:\n  p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p1", "have \"(p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\""], ["proof (prove)\nusing this:\n  p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p1\n\ngoal (1 subgoal):\n 1. (p1\n     \\<oplus>\n     p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'", "by - (rule converse_rtranclp_into_rtranclp)"], ["proof (state)\nthis:\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> p1 \\<Longrightarrow>\n       x \\<in> {q. (p1\n                    \\<oplus>\n                    p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "moreover"], ["proof (state)\nthis:\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> p1 \\<Longrightarrow>\n       x \\<in> {q. (p1\n                    \\<oplus>\n                    p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "from \\<open>wellformed \\<Gamma>\\<close> and \\<open>p' \\<in> sterms \\<Gamma> p1\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  p' \\<in> sterms \\<Gamma> p1", "have \"sterms \\<Gamma> p' = {p'}\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p' \\<in> sterms \\<Gamma> p1\n\ngoal (1 subgoal):\n 1. sterms \\<Gamma> p' = {p'}", ".."], ["proof (state)\nthis:\n  sterms \\<Gamma> p' = {p'}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> p1 \\<Longrightarrow>\n       x \\<in> {q. (p1\n                    \\<oplus>\n                    p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "ultimately"], ["proof (chain)\npicking this:\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n  sterms \\<Gamma> p' = {p'}", "show \"p' \\<in> {q. (p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}}\""], ["proof (prove)\nusing this:\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n  sterms \\<Gamma> p' = {p'}\n\ngoal (1 subgoal):\n 1. p' \\<in> {q. (p1\n                  \\<oplus>\n                  p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                 sterms \\<Gamma> q = {q}}", "by simp"], ["proof (state)\nthis:\n  p' \\<in> {q. (p1\n                \\<oplus>\n                p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n               sterms \\<Gamma> q = {q}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sterms \\<Gamma> p1\n  \\<subseteq> {q. (p1\n                   \\<oplus>\n                   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                        p)\n       \\<subseteq> {q. ({l}\\<lbrakk>f\\<rbrakk>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 2. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                        p)\n       \\<subseteq> {q. ({l}\\<langle>f\\<rangle>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 3. \\<And>l fip fmsg p q.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                           p \\<triangleright> q)\n       \\<subseteq> {qa.\n                    ({l}unicast(fip, fmsg) .\n                        p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* qa \\<and>\n                    sterms \\<Gamma> qa = {qa}}\n 4. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}broadcast(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}broadcast(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 5. \\<And>l fips fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}groupcast(fips, fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 6. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}send(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}send(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 7. \\<And>l fdata p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}deliver(fdata) .\n                        p)\n       \\<subseteq> {q. ({l}deliver(fdata) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 8. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}receive(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}receive(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        sterms \\<Gamma> p1\n        \\<subseteq> {q. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                        sterms \\<Gamma> q = {q}};\n        sterms \\<Gamma> p2\n        \\<subseteq> {q. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                        sterms \\<Gamma> q = {q}}\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (p1\n    \\<oplus>\n    p2)\n                         \\<subseteq> {q.\n(p1\n \\<oplus>\n p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\nsterms \\<Gamma> q = {q}}\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         sterms \\<Gamma> (\\<Gamma> pn)\n         \\<subseteq> {q. \\<Gamma>\n                          pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                         sterms \\<Gamma> q = {q}}\\<rbrakk>\n        \\<Longrightarrow> sterms \\<Gamma> (call(pn))\n                          \\<subseteq> {q.\n (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n sterms \\<Gamma> q = {q}}", "moreover"], ["proof (state)\nthis:\n  sterms \\<Gamma> p1\n  \\<subseteq> {q. (p1\n                   \\<oplus>\n                   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                        p)\n       \\<subseteq> {q. ({l}\\<lbrakk>f\\<rbrakk>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 2. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                        p)\n       \\<subseteq> {q. ({l}\\<langle>f\\<rangle>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 3. \\<And>l fip fmsg p q.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                           p \\<triangleright> q)\n       \\<subseteq> {qa.\n                    ({l}unicast(fip, fmsg) .\n                        p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* qa \\<and>\n                    sterms \\<Gamma> qa = {qa}}\n 4. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}broadcast(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}broadcast(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 5. \\<And>l fips fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}groupcast(fips, fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 6. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}send(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}send(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 7. \\<And>l fdata p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}deliver(fdata) .\n                        p)\n       \\<subseteq> {q. ({l}deliver(fdata) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 8. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}receive(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}receive(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        sterms \\<Gamma> p1\n        \\<subseteq> {q. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                        sterms \\<Gamma> q = {q}};\n        sterms \\<Gamma> p2\n        \\<subseteq> {q. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                        sterms \\<Gamma> q = {q}}\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (p1\n    \\<oplus>\n    p2)\n                         \\<subseteq> {q.\n(p1\n \\<oplus>\n p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\nsterms \\<Gamma> q = {q}}\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         sterms \\<Gamma> (\\<Gamma> pn)\n         \\<subseteq> {q. \\<Gamma>\n                          pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                         sterms \\<Gamma> q = {q}}\\<rbrakk>\n        \\<Longrightarrow> sterms \\<Gamma> (call(pn))\n                          \\<subseteq> {q.\n (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n sterms \\<Gamma> q = {q}}", "have \"sterms \\<Gamma> p2 \\<subseteq> {q. (p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sterms \\<Gamma> p2\n    \\<subseteq> {q. (p1\n                     \\<oplus>\n                     p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                    sterms \\<Gamma> q = {q}}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> p2 \\<Longrightarrow>\n       x \\<in> {q. (p1\n                    \\<oplus>\n                    p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "fix p'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> p2 \\<Longrightarrow>\n       x \\<in> {q. (p1\n                    \\<oplus>\n                    p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "assume \"p' \\<in> sterms \\<Gamma> p2\""], ["proof (state)\nthis:\n  p' \\<in> sterms \\<Gamma> p2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> p2 \\<Longrightarrow>\n       x \\<in> {q. (p1\n                    \\<oplus>\n                    p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "with IH2"], ["proof (chain)\npicking this:\n  sterms \\<Gamma> p2\n  \\<subseteq> {q. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n  p' \\<in> sterms \\<Gamma> p2", "have \"p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\" and \"sterms \\<Gamma> p' = {p'}\""], ["proof (prove)\nusing this:\n  sterms \\<Gamma> p2\n  \\<subseteq> {q. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n  p' \\<in> sterms \\<Gamma> p2\n\ngoal (1 subgoal):\n 1. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p' &&&\n    sterms \\<Gamma> p' = {p'}", "by auto"], ["proof (state)\nthis:\n  p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n  sterms \\<Gamma> p' = {p'}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> p2 \\<Longrightarrow>\n       x \\<in> {q. (p1\n                    \\<oplus>\n                    p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "moreover"], ["proof (state)\nthis:\n  p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n  sterms \\<Gamma> p' = {p'}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> p2 \\<Longrightarrow>\n       x \\<in> {q. (p1\n                    \\<oplus>\n                    p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "have \"(p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p1\n     \\<oplus>\n     p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p2", ".."], ["proof (state)\nthis:\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> p2 \\<Longrightarrow>\n       x \\<in> {q. (p1\n                    \\<oplus>\n                    p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "ultimately"], ["proof (chain)\npicking this:\n  p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n  sterms \\<Gamma> p' = {p'}\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p2", "have \"(p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\""], ["proof (prove)\nusing this:\n  p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n  sterms \\<Gamma> p' = {p'}\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> p2\n\ngoal (1 subgoal):\n 1. (p1\n     \\<oplus>\n     p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'", "by - (rule converse_rtranclp_into_rtranclp)"], ["proof (state)\nthis:\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> p2 \\<Longrightarrow>\n       x \\<in> {q. (p1\n                    \\<oplus>\n                    p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "with \\<open>sterms \\<Gamma> p' = {p'}\\<close>"], ["proof (chain)\npicking this:\n  sterms \\<Gamma> p' = {p'}\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'", "show \"p' \\<in> {q. (p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}}\""], ["proof (prove)\nusing this:\n  sterms \\<Gamma> p' = {p'}\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n\ngoal (1 subgoal):\n 1. p' \\<in> {q. (p1\n                  \\<oplus>\n                  p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                 sterms \\<Gamma> q = {q}}", "by simp"], ["proof (state)\nthis:\n  p' \\<in> {q. (p1\n                \\<oplus>\n                p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n               sterms \\<Gamma> q = {q}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sterms \\<Gamma> p2\n  \\<subseteq> {q. (p1\n                   \\<oplus>\n                   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                        p)\n       \\<subseteq> {q. ({l}\\<lbrakk>f\\<rbrakk>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 2. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                        p)\n       \\<subseteq> {q. ({l}\\<langle>f\\<rangle>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 3. \\<And>l fip fmsg p q.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                           p \\<triangleright> q)\n       \\<subseteq> {qa.\n                    ({l}unicast(fip, fmsg) .\n                        p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* qa \\<and>\n                    sterms \\<Gamma> qa = {qa}}\n 4. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}broadcast(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}broadcast(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 5. \\<And>l fips fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}groupcast(fips, fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 6. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}send(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}send(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 7. \\<And>l fdata p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}deliver(fdata) .\n                        p)\n       \\<subseteq> {q. ({l}deliver(fdata) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 8. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}receive(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}receive(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        sterms \\<Gamma> p1\n        \\<subseteq> {q. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                        sterms \\<Gamma> q = {q}};\n        sterms \\<Gamma> p2\n        \\<subseteq> {q. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                        sterms \\<Gamma> q = {q}}\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (p1\n    \\<oplus>\n    p2)\n                         \\<subseteq> {q.\n(p1\n \\<oplus>\n p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\nsterms \\<Gamma> q = {q}}\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         sterms \\<Gamma> (\\<Gamma> pn)\n         \\<subseteq> {q. \\<Gamma>\n                          pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                         sterms \\<Gamma> q = {q}}\\<rbrakk>\n        \\<Longrightarrow> sterms \\<Gamma> (call(pn))\n                          \\<subseteq> {q.\n (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n sterms \\<Gamma> q = {q}}", "ultimately"], ["proof (chain)\npicking this:\n  sterms \\<Gamma> p1\n  \\<subseteq> {q. (p1\n                   \\<oplus>\n                   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n  sterms \\<Gamma> p2\n  \\<subseteq> {q. (p1\n                   \\<oplus>\n                   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}", "show \"sterms \\<Gamma> (p1 \\<oplus> p2) \\<subseteq> {q. (p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}}\""], ["proof (prove)\nusing this:\n  sterms \\<Gamma> p1\n  \\<subseteq> {q. (p1\n                   \\<oplus>\n                   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n  sterms \\<Gamma> p2\n  \\<subseteq> {q. (p1\n                   \\<oplus>\n                   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n\ngoal (1 subgoal):\n 1. sterms \\<Gamma> (p1\n                     \\<oplus>\n                     p2)\n    \\<subseteq> {q. (p1\n                     \\<oplus>\n                     p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                    sterms \\<Gamma> q = {q}}", "using \\<open>wellformed \\<Gamma>\\<close>"], ["proof (prove)\nusing this:\n  sterms \\<Gamma> p1\n  \\<subseteq> {q. (p1\n                   \\<oplus>\n                   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n  sterms \\<Gamma> p2\n  \\<subseteq> {q. (p1\n                   \\<oplus>\n                   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. sterms \\<Gamma> (p1\n                     \\<oplus>\n                     p2)\n    \\<subseteq> {q. (p1\n                     \\<oplus>\n                     p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                    sterms \\<Gamma> q = {q}}", "by simp"], ["proof (state)\nthis:\n  sterms \\<Gamma> (p1\n                   \\<oplus>\n                   p2)\n  \\<subseteq> {q. (p1\n                   \\<oplus>\n                   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n\ngoal (9 subgoals):\n 1. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                        p)\n       \\<subseteq> {q. ({l}\\<lbrakk>f\\<rbrakk>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 2. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                        p)\n       \\<subseteq> {q. ({l}\\<langle>f\\<rangle>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 3. \\<And>l fip fmsg p q.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                           p \\<triangleright> q)\n       \\<subseteq> {qa.\n                    ({l}unicast(fip, fmsg) .\n                        p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* qa \\<and>\n                    sterms \\<Gamma> qa = {qa}}\n 4. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}broadcast(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}broadcast(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 5. \\<And>l fips fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}groupcast(fips, fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 6. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}send(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}send(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 7. \\<And>l fdata p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}deliver(fdata) .\n                        p)\n       \\<subseteq> {q. ({l}deliver(fdata) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 8. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}receive(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}receive(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 9. \\<And>pn.\n       \\<lbrakk>wellformed \\<Gamma>;\n        sterms \\<Gamma> (\\<Gamma> pn)\n        \\<subseteq> {q. \\<Gamma>\n                         pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                        sterms \\<Gamma> q = {q}}\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (call(pn))\n                         \\<subseteq> {q.\n(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\nsterms \\<Gamma> q = {q}}", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                        p)\n       \\<subseteq> {q. ({l}\\<lbrakk>f\\<rbrakk>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 2. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                        p)\n       \\<subseteq> {q. ({l}\\<langle>f\\<rangle>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 3. \\<And>l fip fmsg p q.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                           p \\<triangleright> q)\n       \\<subseteq> {qa.\n                    ({l}unicast(fip, fmsg) .\n                        p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* qa \\<and>\n                    sterms \\<Gamma> qa = {qa}}\n 4. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}broadcast(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}broadcast(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 5. \\<And>l fips fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}groupcast(fips, fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 6. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}send(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}send(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 7. \\<And>l fdata p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}deliver(fdata) .\n                        p)\n       \\<subseteq> {q. ({l}deliver(fdata) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 8. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}receive(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}receive(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 9. \\<And>pn.\n       \\<lbrakk>wellformed \\<Gamma>;\n        sterms \\<Gamma> (\\<Gamma> pn)\n        \\<subseteq> {q. \\<Gamma>\n                         pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                        sterms \\<Gamma> q = {q}}\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (call(pn))\n                         \\<subseteq> {q.\n(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\nsterms \\<Gamma> q = {q}}", "fix pn"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                        p)\n       \\<subseteq> {q. ({l}\\<lbrakk>f\\<rbrakk>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 2. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                        p)\n       \\<subseteq> {q. ({l}\\<langle>f\\<rangle>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 3. \\<And>l fip fmsg p q.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                           p \\<triangleright> q)\n       \\<subseteq> {qa.\n                    ({l}unicast(fip, fmsg) .\n                        p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* qa \\<and>\n                    sterms \\<Gamma> qa = {qa}}\n 4. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}broadcast(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}broadcast(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 5. \\<And>l fips fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}groupcast(fips, fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 6. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}send(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}send(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 7. \\<And>l fdata p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}deliver(fdata) .\n                        p)\n       \\<subseteq> {q. ({l}deliver(fdata) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 8. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}receive(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}receive(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 9. \\<And>pn.\n       \\<lbrakk>wellformed \\<Gamma>;\n        sterms \\<Gamma> (\\<Gamma> pn)\n        \\<subseteq> {q. \\<Gamma>\n                         pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                        sterms \\<Gamma> q = {q}}\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (call(pn))\n                         \\<subseteq> {q.\n(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\nsterms \\<Gamma> q = {q}}", "assume IH: \"sterms \\<Gamma> (\\<Gamma> pn) \\<subseteq> {q. \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}}\""], ["proof (state)\nthis:\n  sterms \\<Gamma> (\\<Gamma> pn)\n  \\<subseteq> {q. \\<Gamma>\n                   pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n\ngoal (9 subgoals):\n 1. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                        p)\n       \\<subseteq> {q. ({l}\\<lbrakk>f\\<rbrakk>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 2. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                        p)\n       \\<subseteq> {q. ({l}\\<langle>f\\<rangle>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 3. \\<And>l fip fmsg p q.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                           p \\<triangleright> q)\n       \\<subseteq> {qa.\n                    ({l}unicast(fip, fmsg) .\n                        p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* qa \\<and>\n                    sterms \\<Gamma> qa = {qa}}\n 4. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}broadcast(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}broadcast(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 5. \\<And>l fips fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}groupcast(fips, fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 6. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}send(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}send(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 7. \\<And>l fdata p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}deliver(fdata) .\n                        p)\n       \\<subseteq> {q. ({l}deliver(fdata) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 8. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}receive(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}receive(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 9. \\<And>pn.\n       \\<lbrakk>wellformed \\<Gamma>;\n        sterms \\<Gamma> (\\<Gamma> pn)\n        \\<subseteq> {q. \\<Gamma>\n                         pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                        sterms \\<Gamma> q = {q}}\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (call(pn))\n                         \\<subseteq> {q.\n(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\nsterms \\<Gamma> q = {q}}", "show \"sterms \\<Gamma> (call(pn)) \\<subseteq> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sterms \\<Gamma> (call(pn))\n    \\<subseteq> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                    sterms \\<Gamma> q = {q}}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> (call(pn)) \\<Longrightarrow>\n       x \\<in> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "fix p'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> (call(pn)) \\<Longrightarrow>\n       x \\<in> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "assume \"p' \\<in> sterms \\<Gamma> (call(pn))\""], ["proof (state)\nthis:\n  p' \\<in> sterms \\<Gamma> (call(pn))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> (call(pn)) \\<Longrightarrow>\n       x \\<in> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "with \\<open>wellformed \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  p' \\<in> sterms \\<Gamma> (call(pn))", "have \"p' \\<in> sterms \\<Gamma> (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p' \\<in> sterms \\<Gamma> (call(pn))\n\ngoal (1 subgoal):\n 1. p' \\<in> sterms \\<Gamma> (\\<Gamma> pn)", "by simp"], ["proof (state)\nthis:\n  p' \\<in> sterms \\<Gamma> (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> (call(pn)) \\<Longrightarrow>\n       x \\<in> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "with IH"], ["proof (chain)\npicking this:\n  sterms \\<Gamma> (\\<Gamma> pn)\n  \\<subseteq> {q. \\<Gamma>\n                   pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n  p' \\<in> sterms \\<Gamma> (\\<Gamma> pn)", "have \"\\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\" and \"sterms \\<Gamma> p' = {p'}\""], ["proof (prove)\nusing this:\n  sterms \\<Gamma> (\\<Gamma> pn)\n  \\<subseteq> {q. \\<Gamma>\n                   pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n  p' \\<in> sterms \\<Gamma> (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p' &&&\n    sterms \\<Gamma> p' = {p'}", "by auto"], ["proof (state)\nthis:\n  \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n  sterms \\<Gamma> p' = {p'}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> (call(pn)) \\<Longrightarrow>\n       x \\<in> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "note this(1)"], ["proof (state)\nthis:\n  \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> (call(pn)) \\<Longrightarrow>\n       x \\<in> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "moreover"], ["proof (state)\nthis:\n  \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> (call(pn)) \\<Longrightarrow>\n       x \\<in> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "have \"(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> \\<Gamma> pn\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> \\<Gamma> pn", "by simp"], ["proof (state)\nthis:\n  (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> \\<Gamma> pn\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> (call(pn)) \\<Longrightarrow>\n       x \\<in> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n  (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> \\<Gamma> pn", "have \"(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\""], ["proof (prove)\nusing this:\n  \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n  (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> \\<Gamma> pn\n\ngoal (1 subgoal):\n 1. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'", "by - (rule converse_rtranclp_into_rtranclp)"], ["proof (state)\nthis:\n  (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> (call(pn)) \\<Longrightarrow>\n       x \\<in> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                   sterms \\<Gamma> q = {q}}", "with \\<open>sterms \\<Gamma> p' = {p'}\\<close>"], ["proof (chain)\npicking this:\n  sterms \\<Gamma> p' = {p'}\n  (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'", "show \"p' \\<in> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}}\""], ["proof (prove)\nusing this:\n  sterms \\<Gamma> p' = {p'}\n  (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* p'\n\ngoal (1 subgoal):\n 1. p' \\<in> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                 sterms \\<Gamma> q = {q}}", "by simp"], ["proof (state)\nthis:\n  p' \\<in> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n               sterms \\<Gamma> q = {q}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sterms \\<Gamma> (call(pn))\n  \\<subseteq> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n\ngoal (8 subgoals):\n 1. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                        p)\n       \\<subseteq> {q. ({l}\\<lbrakk>f\\<rbrakk>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 2. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                        p)\n       \\<subseteq> {q. ({l}\\<langle>f\\<rangle>\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 3. \\<And>l fip fmsg p q.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                           p \\<triangleright> q)\n       \\<subseteq> {qa.\n                    ({l}unicast(fip, fmsg) .\n                        p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* qa \\<and>\n                    sterms \\<Gamma> qa = {qa}}\n 4. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}broadcast(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}broadcast(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 5. \\<And>l fips fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}groupcast(fips, fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 6. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}send(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}send(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 7. \\<And>l fdata p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}deliver(fdata) .\n                        p)\n       \\<subseteq> {q. ({l}deliver(fdata) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}\n 8. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       sterms \\<Gamma> ({l}receive(fmsg) .\n                        p)\n       \\<subseteq> {q. ({l}receive(fmsg) .\n                        p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                       sterms \\<Gamma> q = {q}}", "qed simp_all"], ["proof (state)\nthis:\n  sterms \\<Gamma> p\n  \\<subseteq> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n\ngoal (2 subgoals):\n 1. sterms \\<Gamma> p\n    \\<subseteq> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                    (\\<nexists>q'. q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q')}\n 2. {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n        (\\<nexists>q'. q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q')}\n    \\<subseteq> sterms \\<Gamma> p", "with \\<open>wellformed \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  sterms \\<Gamma> p\n  \\<subseteq> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}", "show \"sterms \\<Gamma> p \\<subseteq> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> \\<not>(\\<exists>q'. q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q')}\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  sterms \\<Gamma> p\n  \\<subseteq> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  sterms \\<Gamma> q = {q}}\n\ngoal (1 subgoal):\n 1. sterms \\<Gamma> p\n    \\<subseteq> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                    (\\<nexists>q'. q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q')}", "by (simp only: no_microsteps_sterms_refl)"], ["proof (state)\nthis:\n  sterms \\<Gamma> p\n  \\<subseteq> {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                  (\\<nexists>q'. q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q')}\n\ngoal (1 subgoal):\n 1. {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n        (\\<nexists>q'. q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q')}\n    \\<subseteq> sterms \\<Gamma> p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n        (\\<nexists>q'. q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q')}\n    \\<subseteq> sterms \\<Gamma> p", "from \\<open>wellformed \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>", "have \"{q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}} \\<subseteq> sterms \\<Gamma> p\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n        sterms \\<Gamma> q = {q}}\n    \\<subseteq> sterms \\<Gamma> p", "proof (induction)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}\\<lbrakk>f\\<rbrakk>\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                                    p)\n 2. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}\\<langle>f\\<rangle>\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                                    p)\n 3. \\<And>l fip fmsg p q.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {qa.\n        ({l}unicast(fip, fmsg) .\n            p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* qa \\<and>\n        sterms \\<Gamma> qa = {qa}}\n       \\<subseteq> sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n p \\<triangleright> q)\n 4. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}broadcast(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}broadcast(fmsg) .\n                                    p)\n 5. \\<And>l fips fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}groupcast(fips, fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                                    p)\n 6. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}send(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}send(fmsg) .\n                                    p)\n 7. \\<And>l fdata p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}deliver(fdata) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}deliver(fdata) .\n                                    p)\n 8. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}receive(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}receive(fmsg) .\n                                    p)\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        {q. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n            sterms \\<Gamma> q = {q}}\n        \\<subseteq> sterms \\<Gamma> p1;\n        {q. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n            sterms \\<Gamma> q = {q}}\n        \\<subseteq> sterms \\<Gamma> p2\\<rbrakk>\n       \\<Longrightarrow> {q. (p1\n                              \\<oplus>\n                              p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                             sterms \\<Gamma> q = {q}}\n                         \\<subseteq> sterms \\<Gamma> (p1\n                \\<oplus>\n                p2)\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         {q. \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n             sterms \\<Gamma> q = {q}}\n         \\<subseteq> sterms \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n        \\<Longrightarrow> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                              sterms \\<Gamma> q = {q}}\n                          \\<subseteq> sterms \\<Gamma> (call(pn))", "fix p1 p2"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}\\<lbrakk>f\\<rbrakk>\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                                    p)\n 2. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}\\<langle>f\\<rangle>\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                                    p)\n 3. \\<And>l fip fmsg p q.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {qa.\n        ({l}unicast(fip, fmsg) .\n            p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* qa \\<and>\n        sterms \\<Gamma> qa = {qa}}\n       \\<subseteq> sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n p \\<triangleright> q)\n 4. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}broadcast(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}broadcast(fmsg) .\n                                    p)\n 5. \\<And>l fips fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}groupcast(fips, fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                                    p)\n 6. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}send(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}send(fmsg) .\n                                    p)\n 7. \\<And>l fdata p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}deliver(fdata) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}deliver(fdata) .\n                                    p)\n 8. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}receive(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}receive(fmsg) .\n                                    p)\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        {q. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n            sterms \\<Gamma> q = {q}}\n        \\<subseteq> sterms \\<Gamma> p1;\n        {q. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n            sterms \\<Gamma> q = {q}}\n        \\<subseteq> sterms \\<Gamma> p2\\<rbrakk>\n       \\<Longrightarrow> {q. (p1\n                              \\<oplus>\n                              p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                             sterms \\<Gamma> q = {q}}\n                         \\<subseteq> sterms \\<Gamma> (p1\n                \\<oplus>\n                p2)\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         {q. \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n             sterms \\<Gamma> q = {q}}\n         \\<subseteq> sterms \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n        \\<Longrightarrow> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                              sterms \\<Gamma> q = {q}}\n                          \\<subseteq> sterms \\<Gamma> (call(pn))", "assume IH1: \"{q. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}} \\<subseteq> sterms \\<Gamma> p1\"\n         and IH2: \"{q. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}} \\<subseteq> sterms \\<Gamma> p2\""], ["proof (state)\nthis:\n  {q. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n      sterms \\<Gamma> q = {q}}\n  \\<subseteq> sterms \\<Gamma> p1\n  {q. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n      sterms \\<Gamma> q = {q}}\n  \\<subseteq> sterms \\<Gamma> p2\n\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}\\<lbrakk>f\\<rbrakk>\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                                    p)\n 2. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}\\<langle>f\\<rangle>\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                                    p)\n 3. \\<And>l fip fmsg p q.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {qa.\n        ({l}unicast(fip, fmsg) .\n            p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* qa \\<and>\n        sterms \\<Gamma> qa = {qa}}\n       \\<subseteq> sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n p \\<triangleright> q)\n 4. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}broadcast(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}broadcast(fmsg) .\n                                    p)\n 5. \\<And>l fips fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}groupcast(fips, fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                                    p)\n 6. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}send(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}send(fmsg) .\n                                    p)\n 7. \\<And>l fdata p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}deliver(fdata) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}deliver(fdata) .\n                                    p)\n 8. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}receive(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}receive(fmsg) .\n                                    p)\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        {q. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n            sterms \\<Gamma> q = {q}}\n        \\<subseteq> sterms \\<Gamma> p1;\n        {q. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n            sterms \\<Gamma> q = {q}}\n        \\<subseteq> sterms \\<Gamma> p2\\<rbrakk>\n       \\<Longrightarrow> {q. (p1\n                              \\<oplus>\n                              p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                             sterms \\<Gamma> q = {q}}\n                         \\<subseteq> sterms \\<Gamma> (p1\n                \\<oplus>\n                p2)\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         {q. \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n             sterms \\<Gamma> q = {q}}\n         \\<subseteq> sterms \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n        \\<Longrightarrow> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                              sterms \\<Gamma> q = {q}}\n                          \\<subseteq> sterms \\<Gamma> (call(pn))", "show \"{q. (p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}} \\<subseteq> sterms \\<Gamma> (p1 \\<oplus> p2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {q. (p1\n         \\<oplus>\n         p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n        sterms \\<Gamma> q = {q}}\n    \\<subseteq> sterms \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2)", "proof (rule, drule CollectD, erule conjE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>(p1\n                 \\<oplus>\n                 p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* x;\n        sterms \\<Gamma> x = {x}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sterms \\<Gamma> (p1\n            \\<oplus>\n            p2)", "fix q'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>(p1\n                 \\<oplus>\n                 p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* x;\n        sterms \\<Gamma> x = {x}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sterms \\<Gamma> (p1\n            \\<oplus>\n            p2)", "assume \"(p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'\"\n           and \"sterms \\<Gamma> q' = {q'}\""], ["proof (state)\nthis:\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'\n  sterms \\<Gamma> q' = {q'}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>(p1\n                 \\<oplus>\n                 p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* x;\n        sterms \\<Gamma> x = {x}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sterms \\<Gamma> (p1\n            \\<oplus>\n            p2)", "with \\<open>wellformed \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'\n  sterms \\<Gamma> q' = {q'}", "have \"(p1 \\<oplus> p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>+ q'\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'\n  sterms \\<Gamma> q' = {q'}\n\ngoal (1 subgoal):\n 1. (p1\n     \\<oplus>\n     p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>+ q'", "by (auto dest!: rtranclpD sterms_no_choice)"], ["proof (state)\nthis:\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>+ q'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>(p1\n                 \\<oplus>\n                 p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* x;\n        sterms \\<Gamma> x = {x}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sterms \\<Gamma> (p1\n            \\<oplus>\n            p2)", "hence \"p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q' \\<or> p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'\""], ["proof (prove)\nusing this:\n  (p1\n   \\<oplus>\n   p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>+ q'\n\ngoal (1 subgoal):\n 1. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q' \\<or>\n    p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'", "by (auto dest: tranclpD)"], ["proof (state)\nthis:\n  p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q' \\<or>\n  p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>(p1\n                 \\<oplus>\n                 p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* x;\n        sterms \\<Gamma> x = {x}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sterms \\<Gamma> (p1\n            \\<oplus>\n            p2)", "thus \"q' \\<in> sterms \\<Gamma> (p1 \\<oplus> p2)\""], ["proof (prove)\nusing this:\n  p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q' \\<or>\n  p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'\n\ngoal (1 subgoal):\n 1. q' \\<in> sterms \\<Gamma> (p1\n                              \\<oplus>\n                              p2)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q' \\<Longrightarrow>\n    q' \\<in> sterms \\<Gamma> (p1\n                              \\<oplus>\n                              p2)\n 2. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q' \\<Longrightarrow>\n    q' \\<in> sterms \\<Gamma> (p1\n                              \\<oplus>\n                              p2)", "assume \"p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'\""], ["proof (state)\nthis:\n  p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'\n\ngoal (2 subgoals):\n 1. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q' \\<Longrightarrow>\n    q' \\<in> sterms \\<Gamma> (p1\n                              \\<oplus>\n                              p2)\n 2. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q' \\<Longrightarrow>\n    q' \\<in> sterms \\<Gamma> (p1\n                              \\<oplus>\n                              p2)", "with IH1 and \\<open>sterms \\<Gamma> q' = {q'}\\<close>"], ["proof (chain)\npicking this:\n  {q. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n      sterms \\<Gamma> q = {q}}\n  \\<subseteq> sterms \\<Gamma> p1\n  sterms \\<Gamma> q' = {q'}\n  p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'", "have \"q' \\<in> sterms \\<Gamma> p1\""], ["proof (prove)\nusing this:\n  {q. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n      sterms \\<Gamma> q = {q}}\n  \\<subseteq> sterms \\<Gamma> p1\n  sterms \\<Gamma> q' = {q'}\n  p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'\n\ngoal (1 subgoal):\n 1. q' \\<in> sterms \\<Gamma> p1", "by auto"], ["proof (state)\nthis:\n  q' \\<in> sterms \\<Gamma> p1\n\ngoal (2 subgoals):\n 1. p1 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q' \\<Longrightarrow>\n    q' \\<in> sterms \\<Gamma> (p1\n                              \\<oplus>\n                              p2)\n 2. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q' \\<Longrightarrow>\n    q' \\<in> sterms \\<Gamma> (p1\n                              \\<oplus>\n                              p2)", "with \\<open>wellformed \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  q' \\<in> sterms \\<Gamma> p1", "show ?thesis"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  q' \\<in> sterms \\<Gamma> p1\n\ngoal (1 subgoal):\n 1. q' \\<in> sterms \\<Gamma> (p1\n                              \\<oplus>\n                              p2)", "by auto"], ["proof (state)\nthis:\n  q' \\<in> sterms \\<Gamma> (p1\n                            \\<oplus>\n                            p2)\n\ngoal (1 subgoal):\n 1. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q' \\<Longrightarrow>\n    q' \\<in> sterms \\<Gamma> (p1\n                              \\<oplus>\n                              p2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q' \\<Longrightarrow>\n    q' \\<in> sterms \\<Gamma> (p1\n                              \\<oplus>\n                              p2)", "assume \"p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'\""], ["proof (state)\nthis:\n  p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'\n\ngoal (1 subgoal):\n 1. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q' \\<Longrightarrow>\n    q' \\<in> sterms \\<Gamma> (p1\n                              \\<oplus>\n                              p2)", "with IH2 and \\<open>sterms \\<Gamma> q' = {q'}\\<close>"], ["proof (chain)\npicking this:\n  {q. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n      sterms \\<Gamma> q = {q}}\n  \\<subseteq> sterms \\<Gamma> p2\n  sterms \\<Gamma> q' = {q'}\n  p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'", "have \"q' \\<in> sterms \\<Gamma> p2\""], ["proof (prove)\nusing this:\n  {q. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n      sterms \\<Gamma> q = {q}}\n  \\<subseteq> sterms \\<Gamma> p2\n  sterms \\<Gamma> q' = {q'}\n  p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'\n\ngoal (1 subgoal):\n 1. q' \\<in> sterms \\<Gamma> p2", "by auto"], ["proof (state)\nthis:\n  q' \\<in> sterms \\<Gamma> p2\n\ngoal (1 subgoal):\n 1. p2 \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q' \\<Longrightarrow>\n    q' \\<in> sterms \\<Gamma> (p1\n                              \\<oplus>\n                              p2)", "with \\<open>wellformed \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  q' \\<in> sterms \\<Gamma> p2", "show ?thesis"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  q' \\<in> sterms \\<Gamma> p2\n\ngoal (1 subgoal):\n 1. q' \\<in> sterms \\<Gamma> (p1\n                              \\<oplus>\n                              p2)", "by auto"], ["proof (state)\nthis:\n  q' \\<in> sterms \\<Gamma> (p1\n                            \\<oplus>\n                            p2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  q' \\<in> sterms \\<Gamma> (p1\n                            \\<oplus>\n                            p2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {q. (p1\n       \\<oplus>\n       p2) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n      sterms \\<Gamma> q = {q}}\n  \\<subseteq> sterms \\<Gamma> (p1\n                               \\<oplus>\n                               p2)\n\ngoal (9 subgoals):\n 1. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}\\<lbrakk>f\\<rbrakk>\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                                    p)\n 2. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}\\<langle>f\\<rangle>\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                                    p)\n 3. \\<And>l fip fmsg p q.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {qa.\n        ({l}unicast(fip, fmsg) .\n            p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* qa \\<and>\n        sterms \\<Gamma> qa = {qa}}\n       \\<subseteq> sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n p \\<triangleright> q)\n 4. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}broadcast(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}broadcast(fmsg) .\n                                    p)\n 5. \\<And>l fips fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}groupcast(fips, fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                                    p)\n 6. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}send(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}send(fmsg) .\n                                    p)\n 7. \\<And>l fdata p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}deliver(fdata) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}deliver(fdata) .\n                                    p)\n 8. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}receive(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}receive(fmsg) .\n                                    p)\n 9. \\<And>pn.\n       \\<lbrakk>wellformed \\<Gamma>;\n        {q. \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n            sterms \\<Gamma> q = {q}}\n        \\<subseteq> sterms \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                             sterms \\<Gamma> q = {q}}\n                         \\<subseteq> sterms \\<Gamma> (call(pn))", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}\\<lbrakk>f\\<rbrakk>\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                                    p)\n 2. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}\\<langle>f\\<rangle>\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                                    p)\n 3. \\<And>l fip fmsg p q.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {qa.\n        ({l}unicast(fip, fmsg) .\n            p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* qa \\<and>\n        sterms \\<Gamma> qa = {qa}}\n       \\<subseteq> sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n p \\<triangleright> q)\n 4. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}broadcast(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}broadcast(fmsg) .\n                                    p)\n 5. \\<And>l fips fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}groupcast(fips, fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                                    p)\n 6. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}send(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}send(fmsg) .\n                                    p)\n 7. \\<And>l fdata p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}deliver(fdata) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}deliver(fdata) .\n                                    p)\n 8. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}receive(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}receive(fmsg) .\n                                    p)\n 9. \\<And>pn.\n       \\<lbrakk>wellformed \\<Gamma>;\n        {q. \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n            sterms \\<Gamma> q = {q}}\n        \\<subseteq> sterms \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                             sterms \\<Gamma> q = {q}}\n                         \\<subseteq> sterms \\<Gamma> (call(pn))", "fix pn"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}\\<lbrakk>f\\<rbrakk>\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                                    p)\n 2. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}\\<langle>f\\<rangle>\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                                    p)\n 3. \\<And>l fip fmsg p q.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {qa.\n        ({l}unicast(fip, fmsg) .\n            p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* qa \\<and>\n        sterms \\<Gamma> qa = {qa}}\n       \\<subseteq> sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n p \\<triangleright> q)\n 4. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}broadcast(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}broadcast(fmsg) .\n                                    p)\n 5. \\<And>l fips fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}groupcast(fips, fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                                    p)\n 6. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}send(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}send(fmsg) .\n                                    p)\n 7. \\<And>l fdata p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}deliver(fdata) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}deliver(fdata) .\n                                    p)\n 8. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}receive(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}receive(fmsg) .\n                                    p)\n 9. \\<And>pn.\n       \\<lbrakk>wellformed \\<Gamma>;\n        {q. \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n            sterms \\<Gamma> q = {q}}\n        \\<subseteq> sterms \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                             sterms \\<Gamma> q = {q}}\n                         \\<subseteq> sterms \\<Gamma> (call(pn))", "assume IH: \"{q. \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}} \\<subseteq> sterms \\<Gamma> (\\<Gamma> pn)\""], ["proof (state)\nthis:\n  {q. \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n      sterms \\<Gamma> q = {q}}\n  \\<subseteq> sterms \\<Gamma> (\\<Gamma> pn)\n\ngoal (9 subgoals):\n 1. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}\\<lbrakk>f\\<rbrakk>\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                                    p)\n 2. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}\\<langle>f\\<rangle>\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                                    p)\n 3. \\<And>l fip fmsg p q.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {qa.\n        ({l}unicast(fip, fmsg) .\n            p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* qa \\<and>\n        sterms \\<Gamma> qa = {qa}}\n       \\<subseteq> sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n p \\<triangleright> q)\n 4. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}broadcast(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}broadcast(fmsg) .\n                                    p)\n 5. \\<And>l fips fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}groupcast(fips, fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                                    p)\n 6. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}send(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}send(fmsg) .\n                                    p)\n 7. \\<And>l fdata p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}deliver(fdata) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}deliver(fdata) .\n                                    p)\n 8. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}receive(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}receive(fmsg) .\n                                    p)\n 9. \\<And>pn.\n       \\<lbrakk>wellformed \\<Gamma>;\n        {q. \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n            sterms \\<Gamma> q = {q}}\n        \\<subseteq> sterms \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n                             sterms \\<Gamma> q = {q}}\n                         \\<subseteq> sterms \\<Gamma> (call(pn))", "show   \"{q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> sterms \\<Gamma> q = {q}} \\<subseteq> sterms \\<Gamma> (call(pn))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n        sterms \\<Gamma> q = {q}}\n    \\<subseteq> sterms \\<Gamma> (call(pn))", "proof (rule, drule CollectD, erule conjE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* x;\n        sterms \\<Gamma> x = {x}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sterms \\<Gamma> (call(pn))", "fix q'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* x;\n        sterms \\<Gamma> x = {x}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sterms \\<Gamma> (call(pn))", "assume \"(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'\"\n           and \"sterms \\<Gamma> q' = {q'}\""], ["proof (state)\nthis:\n  (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'\n  sterms \\<Gamma> q' = {q'}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* x;\n        sterms \\<Gamma> x = {x}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sterms \\<Gamma> (call(pn))", "with \\<open>wellformed \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'\n  sterms \\<Gamma> q' = {q'}", "have \"(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>+ q'\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'\n  sterms \\<Gamma> q' = {q'}\n\ngoal (1 subgoal):\n 1. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>+ q'", "by (auto dest!: rtranclpD sterms_no_call)"], ["proof (state)\nthis:\n  (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>+ q'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* x;\n        sterms \\<Gamma> x = {x}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sterms \\<Gamma> (call(pn))", "moreover"], ["proof (state)\nthis:\n  (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>+ q'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* x;\n        sterms \\<Gamma> x = {x}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sterms \\<Gamma> (call(pn))", "have \"(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> \\<Gamma> pn\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> \\<Gamma> pn", ".."], ["proof (state)\nthis:\n  (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> \\<Gamma> pn\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* x;\n        sterms \\<Gamma> x = {x}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sterms \\<Gamma> (call(pn))", "ultimately"], ["proof (chain)\npicking this:\n  (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>+ q'\n  (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> \\<Gamma> pn", "have \"\\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'\""], ["proof (prove)\nusing this:\n  (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>+ q'\n  (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> \\<Gamma> pn\n\ngoal (1 subgoal):\n 1. \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'", "by (auto dest!: tranclpD)"], ["proof (state)\nthis:\n  \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* x;\n        sterms \\<Gamma> x = {x}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sterms \\<Gamma> (call(pn))", "with \\<open>sterms \\<Gamma> q' = {q'}\\<close> and IH"], ["proof (chain)\npicking this:\n  sterms \\<Gamma> q' = {q'}\n  {q. \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n      sterms \\<Gamma> q = {q}}\n  \\<subseteq> sterms \\<Gamma> (\\<Gamma> pn)\n  \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'", "have \"q' \\<in> sterms \\<Gamma> (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  sterms \\<Gamma> q' = {q'}\n  {q. \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n      sterms \\<Gamma> q = {q}}\n  \\<subseteq> sterms \\<Gamma> (\\<Gamma> pn)\n  \\<Gamma> pn \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q'\n\ngoal (1 subgoal):\n 1. q' \\<in> sterms \\<Gamma> (\\<Gamma> pn)", "by auto"], ["proof (state)\nthis:\n  q' \\<in> sterms \\<Gamma> (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>(call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* x;\n        sterms \\<Gamma> x = {x}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sterms \\<Gamma> (call(pn))", "with \\<open>wellformed \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  q' \\<in> sterms \\<Gamma> (\\<Gamma> pn)", "show \"q' \\<in> sterms \\<Gamma> (call(pn))\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  q' \\<in> sterms \\<Gamma> (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. q' \\<in> sterms \\<Gamma> (call(pn))", "by simp"], ["proof (state)\nthis:\n  q' \\<in> sterms \\<Gamma> (call(pn))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {q. (call(pn)) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n      sterms \\<Gamma> q = {q}}\n  \\<subseteq> sterms \\<Gamma> (call(pn))\n\ngoal (8 subgoals):\n 1. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}\\<lbrakk>f\\<rbrakk>\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                                    p)\n 2. \\<And>l f p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}\\<langle>f\\<rangle>\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                                    p)\n 3. \\<And>l fip fmsg p q.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {qa.\n        ({l}unicast(fip, fmsg) .\n            p \\<triangleright> q) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* qa \\<and>\n        sterms \\<Gamma> qa = {qa}}\n       \\<subseteq> sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n p \\<triangleright> q)\n 4. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}broadcast(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}broadcast(fmsg) .\n                                    p)\n 5. \\<And>l fips fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}groupcast(fips, fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                                    p)\n 6. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}send(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}send(fmsg) .\n                                    p)\n 7. \\<And>l fdata p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}deliver(fdata) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}deliver(fdata) .\n                                    p)\n 8. \\<And>l fmsg p.\n       wellformed \\<Gamma> \\<Longrightarrow>\n       {q. ({l}receive(fmsg) .\n            p) \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n           sterms \\<Gamma> q = {q}}\n       \\<subseteq> sterms \\<Gamma> ({l}receive(fmsg) .\n                                    p)", "qed simp_all"], ["proof (state)\nthis:\n  {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n      sterms \\<Gamma> q = {q}}\n  \\<subseteq> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n        (\\<nexists>q'. q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q')}\n    \\<subseteq> sterms \\<Gamma> p", "with \\<open>wellformed \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n      sterms \\<Gamma> q = {q}}\n  \\<subseteq> sterms \\<Gamma> p", "show \"{q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and> \\<not>(\\<exists>q'. q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q')} \\<subseteq> sterms \\<Gamma> p\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n      sterms \\<Gamma> q = {q}}\n  \\<subseteq> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n        (\\<nexists>q'. q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q')}\n    \\<subseteq> sterms \\<Gamma> p", "by (simp only: no_microsteps_sterms_refl)"], ["proof (state)\nthis:\n  {q. p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub>\\<^sup>* q \\<and>\n      (\\<nexists>q'. q \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q')}\n  \\<subseteq> sterms \\<Gamma> p\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Derivative terms \""], ["", "text \\<open>\n  The derivatives of a term are those @{term sterm}s potentially reachable by taking a\n  transition, relative to a wellformed process specification \\<open>\\<Gamma>\\<close>. These terms\n  overapproximate the reachable sterms, since the truth of guards is not considered.\n\\<close>"], ["", "function (domintros) dterms\n  :: \"('s, 'm, 'p, 'l) seqp_env \\<Rightarrow> ('s, 'm, 'p, 'l) seqp \\<Rightarrow> ('s, 'm, 'p, 'l) seqp set\"\n  where\n    \"dterms \\<Gamma> ({l}\\<langle>g\\<rangle> p)                     = sterms \\<Gamma> p\"\n  | \"dterms \\<Gamma> ({l}\\<lbrakk>u\\<rbrakk> p)                     = sterms \\<Gamma> p\"\n  | \"dterms \\<Gamma> (p1 \\<oplus> p2)                     = dterms \\<Gamma> p1 \\<union> dterms \\<Gamma> p2\"\n  | \"dterms \\<Gamma> ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g).p \\<triangleright> q)  = sterms \\<Gamma> p \\<union> sterms \\<Gamma> q\"\n  | \"dterms \\<Gamma> ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g). p)        = sterms \\<Gamma> p\"\n  | \"dterms \\<Gamma> ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s, s\\<^sub>m\\<^sub>s\\<^sub>g). p)  = sterms \\<Gamma> p\"\n  | \"dterms \\<Gamma> ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g).p)              = sterms \\<Gamma> p\"\n  | \"dterms \\<Gamma> ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a).p)          = sterms \\<Gamma> p\"\n  | \"dterms \\<Gamma> ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g).p)           = sterms \\<Gamma> p\"\n  | \"dterms \\<Gamma> (call(pn))                     = dterms \\<Gamma> (\\<Gamma> pn)\""], ["proof (prove)\ngoal (56 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>\\<Gamma> l g p.\n                   x = (\\<Gamma>, {l}\\<langle>g\\<rangle>\n                        p) \\<Longrightarrow>\n                   P;\n        \\<And>\\<Gamma> l u p.\n           x = (\\<Gamma>, {l}\\<lbrakk>u\\<rbrakk>\n                p) \\<Longrightarrow>\n           P;\n        \\<And>\\<Gamma> p1 p2. x = (\\<Gamma>, p1\n       \\<oplus>\n       p2) \\<Longrightarrow>\n                              P;\n        \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p q.\n           x =\n           (\\<Gamma>,\n            {l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n               p \\<triangleright> q) \\<Longrightarrow>\n           P;\n        \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n           x =\n           (\\<Gamma>, {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n            p) \\<Longrightarrow>\n           P;\n        \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g\n           p. x =\n              (\\<Gamma>,\n               {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                             s\\<^sub>m\\<^sub>s\\<^sub>g) .\n               p) \\<Longrightarrow>\n              P;\n        \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n           x =\n           (\\<Gamma>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n            p) \\<Longrightarrow>\n           P;\n        \\<And>\\<Gamma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n           x =\n           (\\<Gamma>, {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n            p) \\<Longrightarrow>\n           P;\n        \\<And>\\<Gamma> l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n           x =\n           (\\<Gamma>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n            p) \\<Longrightarrow>\n           P;\n        \\<And>\\<Gamma> pn.\n           x = (\\<Gamma>, call(pn)) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>\\<Gamma> l g p \\<Gamma>' la ga pa.\n       (\\<Gamma>, {l}\\<langle>g\\<rangle>\n        p) =\n       (\\<Gamma>', {la}\\<langle>ga\\<rangle>\n        pa) \\<Longrightarrow>\n       sterms \\<Gamma> p = sterms \\<Gamma>' pa\n 3. \\<And>\\<Gamma> l g p \\<Gamma>' la u pa.\n       (\\<Gamma>, {l}\\<langle>g\\<rangle>\n        p) =\n       (\\<Gamma>', {la}\\<lbrakk>u\\<rbrakk>\n        pa) \\<Longrightarrow>\n       sterms \\<Gamma> p = sterms \\<Gamma>' pa\n 4. \\<And>\\<Gamma> l g p \\<Gamma>' p1 p2.\n       (\\<Gamma>, {l}\\<langle>g\\<rangle>\n        p) =\n       (\\<Gamma>', p1\n                   \\<oplus>\n                   p2) \\<Longrightarrow>\n       sterms \\<Gamma> p =\n       dterms_sumC (\\<Gamma>', p1) \\<union> dterms_sumC (\\<Gamma>', p2)\n 5. \\<And>\\<Gamma> l g p \\<Gamma>' la s\\<^sub>i\\<^sub>p\n       s\\<^sub>m\\<^sub>s\\<^sub>g pa q.\n       (\\<Gamma>, {l}\\<langle>g\\<rangle>\n        p) =\n       (\\<Gamma>',\n        {la}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n           pa \\<triangleright> q) \\<Longrightarrow>\n       sterms \\<Gamma> p = sterms \\<Gamma>' pa \\<union> sterms \\<Gamma>' q\n 6. \\<And>\\<Gamma> l g p \\<Gamma>' la s\\<^sub>m\\<^sub>s\\<^sub>g pa.\n       (\\<Gamma>, {l}\\<langle>g\\<rangle>\n        p) =\n       (\\<Gamma>', {la}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n        pa) \\<Longrightarrow>\n       sterms \\<Gamma> p = sterms \\<Gamma>' pa\n 7. \\<And>\\<Gamma> l g p \\<Gamma>' la s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g pa.\n       (\\<Gamma>, {l}\\<langle>g\\<rangle>\n        p) =\n       (\\<Gamma>',\n        {la}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n        pa) \\<Longrightarrow>\n       sterms \\<Gamma> p = sterms \\<Gamma>' pa\n 8. \\<And>\\<Gamma> l g p \\<Gamma>' la s\\<^sub>m\\<^sub>s\\<^sub>g pa.\n       (\\<Gamma>, {l}\\<langle>g\\<rangle>\n        p) =\n       (\\<Gamma>', {la}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n        pa) \\<Longrightarrow>\n       sterms \\<Gamma> p = sterms \\<Gamma>' pa\n 9. \\<And>\\<Gamma> l g p \\<Gamma>' la s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a pa.\n       (\\<Gamma>, {l}\\<langle>g\\<rangle>\n        p) =\n       (\\<Gamma>', {la}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n        pa) \\<Longrightarrow>\n       sterms \\<Gamma> p = sterms \\<Gamma>' pa\n 10. \\<And>\\<Gamma> l g p \\<Gamma>' la u\\<^sub>m\\<^sub>s\\<^sub>g pa.\n        (\\<Gamma>, {l}\\<langle>g\\<rangle>\n         p) =\n        (\\<Gamma>', {la}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n         pa) \\<Longrightarrow>\n        sterms \\<Gamma> p = sterms \\<Gamma>' pa\nA total of 56 subgoals...", "by pat_completeness auto"], ["", "lemma dterms_dom_basic [simp]:\n  assumes \"not_call p\"\n      and \"not_choice p\"\n    shows \"dterms_dom (\\<Gamma>, p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dterms_dom (\\<Gamma>, p)", "proof (rule accpI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. dterms_rel y (\\<Gamma>, p) \\<Longrightarrow> dterms_dom y", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. dterms_rel y (\\<Gamma>, p) \\<Longrightarrow> dterms_dom y", "assume \"dterms_rel y (\\<Gamma>, p)\""], ["proof (state)\nthis:\n  dterms_rel y (\\<Gamma>, p)\n\ngoal (1 subgoal):\n 1. \\<And>y. dterms_rel y (\\<Gamma>, p) \\<Longrightarrow> dterms_dom y", "with assms"], ["proof (chain)\npicking this:\n  not_call p\n  not_choice p\n  dterms_rel y (\\<Gamma>, p)", "show \"dterms_dom y\""], ["proof (prove)\nusing this:\n  not_call p\n  not_choice p\n  dterms_rel y (\\<Gamma>, p)\n\ngoal (1 subgoal):\n 1. dterms_dom y", "by (cases p) (auto simp: dterms_rel.simps)"], ["proof (state)\nthis:\n  dterms_dom y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dterms_termination:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"dterms_dom (\\<Gamma>, p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dterms_dom (\\<Gamma>, p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dterms_dom (\\<Gamma>, p)", "have dterms_rel': \"dterms_rel = (\\<lambda>gq gp. (gq, gp) \\<in> {((\\<Gamma>, q), (\\<Gamma>', p)). \\<Gamma> = \\<Gamma>' \\<and> p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dterms_rel =\n    (\\<lambda>gq gp.\n        (gq, gp)\n        \\<in> {((\\<Gamma>, q), \\<Gamma>', p).\n               \\<Gamma> = \\<Gamma>' \\<and>\n               p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q})", "by (rule ext)+ (auto simp: dterms_rel.simps elim: microstep.cases)"], ["proof (state)\nthis:\n  dterms_rel =\n  (\\<lambda>gq gp.\n      (gq, gp)\n      \\<in> {((\\<Gamma>, q), \\<Gamma>', p).\n             \\<Gamma> = \\<Gamma>' \\<and>\n             p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q})\n\ngoal (1 subgoal):\n 1. dterms_dom (\\<Gamma>, p)", "from \\<open>wellformed(\\<Gamma>)\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>", "have \"\\<forall>x. x \\<in> Wellfounded.acc {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<in> Wellfounded.acc\n                {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}", "unfolding wellformed_def"], ["proof (prove)\nusing this:\n  wf {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<in> Wellfounded.acc\n                {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}", "by (simp add: wf_acc_iff)"], ["proof (state)\nthis:\n  \\<forall>x.\n     x \\<in> Wellfounded.acc\n              {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. dterms_dom (\\<Gamma>, p)", "hence \"p \\<in> Wellfounded.acc {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     x \\<in> Wellfounded.acc\n              {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. p \\<in> Wellfounded.acc {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}", ".."], ["proof (state)\nthis:\n  p \\<in> Wellfounded.acc {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. dterms_dom (\\<Gamma>, p)", "hence \"(\\<Gamma>, p) \\<in> Wellfounded.acc {((\\<Gamma>, q), \\<Gamma>', p). \\<Gamma> = \\<Gamma>' \\<and> p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\""], ["proof (prove)\nusing this:\n  p \\<in> Wellfounded.acc {(q, p). p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. (\\<Gamma>, p)\n    \\<in> Wellfounded.acc\n           {((\\<Gamma>, q), \\<Gamma>', p).\n            \\<Gamma> = \\<Gamma>' \\<and>\n            p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}", "by (rule acc_induct) (auto intro: accI)"], ["proof (state)\nthis:\n  (\\<Gamma>, p)\n  \\<in> Wellfounded.acc\n         {((\\<Gamma>, q), \\<Gamma>', p).\n          \\<Gamma> = \\<Gamma>' \\<and>\n          p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. dterms_dom (\\<Gamma>, p)", "thus \"dterms_dom (\\<Gamma>, p)\""], ["proof (prove)\nusing this:\n  (\\<Gamma>, p)\n  \\<in> Wellfounded.acc\n         {((\\<Gamma>, q), \\<Gamma>', p).\n          \\<Gamma> = \\<Gamma>' \\<and>\n          p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. dterms_dom (\\<Gamma>, p)", "unfolding dterms_rel'"], ["proof (prove)\nusing this:\n  (\\<Gamma>, p)\n  \\<in> Wellfounded.acc\n         {((\\<Gamma>, q), \\<Gamma>', p).\n          \\<Gamma> = \\<Gamma>' \\<and>\n          p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q}\n\ngoal (1 subgoal):\n 1. Wellfounded.accp\n     (\\<lambda>gq gp.\n         (gq, gp)\n         \\<in> {((\\<Gamma>, q), \\<Gamma>', p).\n                \\<Gamma> = \\<Gamma>' \\<and>\n                p \\<leadsto>\\<^bsub>\\<Gamma>\\<^esub> q})\n     (\\<Gamma>, p)", "by (subst accp_acc_eq)"], ["proof (state)\nthis:\n  dterms_dom (\\<Gamma>, p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas dterms_psimps [simp] = dterms.psimps [OF dterms_termination]\n   and dterms_pinduct = dterms.pinduct [OF dterms_termination]"], ["", "lemma sterms_after_dterms [simp]:\n  assumes \"wellformed \\<Gamma>\"\n  shows \"(\\<Union>x\\<in>dterms \\<Gamma> p. sterms \\<Gamma> x) = dterms \\<Gamma> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (sterms \\<Gamma> ` dterms \\<Gamma> p) = dterms \\<Gamma> p", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<Union> (sterms \\<Gamma> ` dterms \\<Gamma> p) = dterms \\<Gamma> p", "by (induction p) simp_all"], ["", "lemma sterms_before_dterms [simp]:\n  assumes \"wellformed \\<Gamma>\"\n  shows \"(\\<Union>x\\<in>sterms \\<Gamma> p. dterms \\<Gamma> x) = dterms \\<Gamma> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (dterms \\<Gamma> ` sterms \\<Gamma> p) = dterms \\<Gamma> p", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<Union> (dterms \\<Gamma> ` sterms \\<Gamma> p) = dterms \\<Gamma> p", "by (induction p) simp_all"], ["", "lemma dterms_choice_disj [simp]:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"p \\<in> dterms \\<Gamma> (p1 \\<oplus> p2) = (p \\<in> dterms \\<Gamma> p1 \\<or> p \\<in> dterms \\<Gamma> p2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p \\<in> dterms \\<Gamma> (p1\n                              \\<oplus>\n                              p2)) =\n    (p \\<in> dterms \\<Gamma> p1 \\<or> p \\<in> dterms \\<Gamma> p2)", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. (p \\<in> dterms \\<Gamma> (p1\n                              \\<oplus>\n                              p2)) =\n    (p \\<in> dterms \\<Gamma> p1 \\<or> p \\<in> dterms \\<Gamma> p2)", "by (simp)"], ["", "lemma dterms_in_branch:\n  assumes \"wellformed \\<Gamma>\"\n      and \"p \\<in> dterms \\<Gamma> (p1 \\<oplus> p2)\"\n      and \"p \\<in> dterms \\<Gamma> p1 \\<Longrightarrow> P\"\n      and \"p \\<in> dterms \\<Gamma> p2 \\<Longrightarrow> P\"\n  shows \"P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p \\<in> dterms \\<Gamma> (p1\n                           \\<oplus>\n                           p2)\n  p \\<in> dterms \\<Gamma> p1 \\<Longrightarrow> P\n  p \\<in> dterms \\<Gamma> p2 \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "by auto"], ["", "lemma dterms_no_choice:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"p1 \\<oplus> p2 \\<notin> dterms \\<Gamma> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p1\n    \\<oplus>\n    p2\n    \\<notin> dterms \\<Gamma> p", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. p1\n    \\<oplus>\n    p2\n    \\<notin> dterms \\<Gamma> p", "by induction simp_all"], ["", "lemma dterms_not_choice [simp]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"q \\<in> dterms \\<Gamma> p\"\n    shows \"not_choice q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. not_choice q", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  q \\<in> dterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. not_choice q", "unfolding not_choice_def"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  q \\<in> dterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. \\<forall>p1 p2. q \\<noteq> p1\n                               \\<oplus>\n                               p2", "by (auto dest: dterms_no_choice)"], ["", "lemma dterms_no_call:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"call(pn) \\<notin> dterms \\<Gamma> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. call(pn) \\<notin> dterms \\<Gamma> p", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. call(pn) \\<notin> dterms \\<Gamma> p", "by induction simp_all"], ["", "lemma dterms_not_call [simp]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"q \\<in> dterms \\<Gamma> p\"\n    shows \"not_call q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. not_call q", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  q \\<in> dterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. not_call q", "unfolding not_call_def"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  q \\<in> dterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. \\<forall>pn. q \\<noteq> call(pn)", "by (auto dest: dterms_no_call)"], ["", "lemma dterms_subterms:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and \"\\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\"\n      and \"q \\<in> dterms \\<Gamma> p\"\n    shows \"\\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n  q \\<in> dterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)", "proof (induct p)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<lbrakk>f\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<langle>f\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>l fip fmsg p qa.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}unicast(fip, fmsg) .\n                        p \\<triangleright> qa\n                     \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                                    p \\<triangleright> qa)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 4. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 5. \\<And>l fips fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 6. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}send(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 7. \\<And>l fdata p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}deliver(fdata) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 8. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}receive(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<lbrakk>\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         q \\<in> dterms \\<Gamma> p1\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn);\n        \\<lbrakk>\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         q \\<in> dterms \\<Gamma> p2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn);\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         \\<lbrakk>\\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          q \\<in> dterms \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n         \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn);\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         q \\<in> dterms \\<Gamma> (call(pn))\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)", "fix p1 p2"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<lbrakk>f\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<langle>f\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>l fip fmsg p qa.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}unicast(fip, fmsg) .\n                        p \\<triangleright> qa\n                     \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                                    p \\<triangleright> qa)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 4. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 5. \\<And>l fips fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 6. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}send(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 7. \\<And>l fdata p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}deliver(fdata) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 8. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}receive(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<lbrakk>\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         q \\<in> dterms \\<Gamma> p1\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn);\n        \\<lbrakk>\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         q \\<in> dterms \\<Gamma> p2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn);\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         \\<lbrakk>\\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          q \\<in> dterms \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n         \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn);\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         q \\<in> dterms \\<Gamma> (call(pn))\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)", "assume IH1: \"\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow> q \\<in> dterms \\<Gamma> p1 \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\"\n       and IH2: \"\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow> q \\<in> dterms \\<Gamma> p2 \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\"\n       and *: \"\\<exists>pn. p1 \\<oplus> p2 \\<in> subterms (\\<Gamma> pn)\"\n       and \"q \\<in> dterms \\<Gamma> (p1 \\<oplus> p2)\""], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n   q \\<in> dterms \\<Gamma> p1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n  \\<lbrakk>\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n   q \\<in> dterms \\<Gamma> p2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n  \\<exists>pn. p1\n               \\<oplus>\n               p2\n               \\<in> subterms (\\<Gamma> pn)\n  q \\<in> dterms \\<Gamma> (p1\n                           \\<oplus>\n                           p2)\n\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<lbrakk>f\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<langle>f\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>l fip fmsg p qa.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}unicast(fip, fmsg) .\n                        p \\<triangleright> qa\n                     \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                                    p \\<triangleright> qa)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 4. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 5. \\<And>l fips fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 6. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}send(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 7. \\<And>l fdata p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}deliver(fdata) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 8. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}receive(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<lbrakk>\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         q \\<in> dterms \\<Gamma> p1\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn);\n        \\<lbrakk>\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         q \\<in> dterms \\<Gamma> p2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn);\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         \\<lbrakk>\\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          q \\<in> dterms \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n         \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn);\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         q \\<in> dterms \\<Gamma> (call(pn))\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)", "from *"], ["proof (chain)\npicking this:\n  \\<exists>pn. p1\n               \\<oplus>\n               p2\n               \\<in> subterms (\\<Gamma> pn)", "obtain pn where \"p1 \\<oplus> p2 \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  \\<exists>pn. p1\n               \\<oplus>\n               p2\n               \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. (\\<And>pn.\n        p1\n        \\<oplus>\n        p2\n        \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p1\n  \\<oplus>\n  p2\n  \\<in> subterms (\\<Gamma> pn)\n\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<lbrakk>f\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<langle>f\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>l fip fmsg p qa.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}unicast(fip, fmsg) .\n                        p \\<triangleright> qa\n                     \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                                    p \\<triangleright> qa)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 4. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 5. \\<And>l fips fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 6. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}send(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 7. \\<And>l fdata p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}deliver(fdata) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 8. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}receive(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<lbrakk>\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         q \\<in> dterms \\<Gamma> p1\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn);\n        \\<lbrakk>\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         q \\<in> dterms \\<Gamma> p2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn);\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         \\<lbrakk>\\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          q \\<in> dterms \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n         \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn);\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         q \\<in> dterms \\<Gamma> (call(pn))\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)", "hence \"p1 \\<in> subterms (\\<Gamma> pn)\" and \"p2 \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  p1\n  \\<oplus>\n  p2\n  \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. p1 \\<in> subterms (\\<Gamma> pn) &&& p2 \\<in> subterms (\\<Gamma> pn)", "by auto"], ["proof (state)\nthis:\n  p1 \\<in> subterms (\\<Gamma> pn)\n  p2 \\<in> subterms (\\<Gamma> pn)\n\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<lbrakk>f\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<langle>f\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>l fip fmsg p qa.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}unicast(fip, fmsg) .\n                        p \\<triangleright> qa\n                     \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                                    p \\<triangleright> qa)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 4. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 5. \\<And>l fips fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 6. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}send(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 7. \\<And>l fdata p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}deliver(fdata) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 8. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}receive(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<lbrakk>\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         q \\<in> dterms \\<Gamma> p1\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn);\n        \\<lbrakk>\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         q \\<in> dterms \\<Gamma> p2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn);\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         \\<lbrakk>\\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          q \\<in> dterms \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n         \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn);\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         q \\<in> dterms \\<Gamma> (call(pn))\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)", "from \\<open>q \\<in> dterms \\<Gamma> (p1 \\<oplus> p2)\\<close> wf"], ["proof (chain)\npicking this:\n  q \\<in> dterms \\<Gamma> (p1\n                           \\<oplus>\n                           p2)\n  wellformed \\<Gamma>", "have \"q \\<in> dterms \\<Gamma> p1 \\<or> q \\<in> dterms \\<Gamma> p2\""], ["proof (prove)\nusing this:\n  q \\<in> dterms \\<Gamma> (p1\n                           \\<oplus>\n                           p2)\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. q \\<in> dterms \\<Gamma> p1 \\<or> q \\<in> dterms \\<Gamma> p2", "by auto"], ["proof (state)\nthis:\n  q \\<in> dterms \\<Gamma> p1 \\<or> q \\<in> dterms \\<Gamma> p2\n\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<lbrakk>f\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<langle>f\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>l fip fmsg p qa.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}unicast(fip, fmsg) .\n                        p \\<triangleright> qa\n                     \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                                    p \\<triangleright> qa)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 4. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 5. \\<And>l fips fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 6. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}send(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 7. \\<And>l fdata p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}deliver(fdata) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 8. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}receive(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<lbrakk>\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         q \\<in> dterms \\<Gamma> p1\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn);\n        \\<lbrakk>\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         q \\<in> dterms \\<Gamma> p2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn);\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         \\<lbrakk>\\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          q \\<in> dterms \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n         \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn);\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         q \\<in> dterms \\<Gamma> (call(pn))\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)", "thus \"\\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  q \\<in> dterms \\<Gamma> p1 \\<or> q \\<in> dterms \\<Gamma> p2\n\ngoal (1 subgoal):\n 1. \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. q \\<in> dterms \\<Gamma> p1 \\<Longrightarrow>\n    \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 2. q \\<in> dterms \\<Gamma> p2 \\<Longrightarrow>\n    \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)", "assume \"q \\<in> dterms \\<Gamma> p1\""], ["proof (state)\nthis:\n  q \\<in> dterms \\<Gamma> p1\n\ngoal (2 subgoals):\n 1. q \\<in> dterms \\<Gamma> p1 \\<Longrightarrow>\n    \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 2. q \\<in> dterms \\<Gamma> p2 \\<Longrightarrow>\n    \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)", "with \\<open>p1 \\<in> subterms (\\<Gamma> pn)\\<close>"], ["proof (chain)\npicking this:\n  p1 \\<in> subterms (\\<Gamma> pn)\n  q \\<in> dterms \\<Gamma> p1", "show ?thesis"], ["proof (prove)\nusing this:\n  p1 \\<in> subterms (\\<Gamma> pn)\n  q \\<in> dterms \\<Gamma> p1\n\ngoal (1 subgoal):\n 1. \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)", "by (auto intro: IH1)"], ["proof (state)\nthis:\n  \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. q \\<in> dterms \\<Gamma> p2 \\<Longrightarrow>\n    \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. q \\<in> dterms \\<Gamma> p2 \\<Longrightarrow>\n    \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)", "assume \"q \\<in> dterms \\<Gamma> p2\""], ["proof (state)\nthis:\n  q \\<in> dterms \\<Gamma> p2\n\ngoal (1 subgoal):\n 1. q \\<in> dterms \\<Gamma> p2 \\<Longrightarrow>\n    \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)", "with \\<open>p2 \\<in> subterms (\\<Gamma> pn)\\<close>"], ["proof (chain)\npicking this:\n  p2 \\<in> subterms (\\<Gamma> pn)\n  q \\<in> dterms \\<Gamma> p2", "show ?thesis"], ["proof (prove)\nusing this:\n  p2 \\<in> subterms (\\<Gamma> pn)\n  q \\<in> dterms \\<Gamma> p2\n\ngoal (1 subgoal):\n 1. \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)", "by (auto intro: IH2)"], ["proof (state)\nthis:\n  \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n\ngoal (9 subgoals):\n 1. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<lbrakk>f\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>f\\<rbrakk>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<langle>f\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}\\<langle>f\\<rangle>\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>l fip fmsg p qa.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}unicast(fip, fmsg) .\n                        p \\<triangleright> qa\n                     \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                                    p \\<triangleright> qa)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 4. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 5. \\<And>l fips fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}groupcast(fips, fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 6. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}send(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 7. \\<And>l fdata p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}deliver(fdata) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 8. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        q \\<in> dterms \\<Gamma> ({l}receive(fmsg) .\n                                 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)\n 9. \\<And>pn.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<lbrakk>\\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n         q \\<in> dterms \\<Gamma> (\\<Gamma> pn)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn);\n        \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n        q \\<in> dterms \\<Gamma> (call(pn))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. q \\<in> subterms (\\<Gamma> pn)", "qed auto"], ["", "text \\<open>\n  Note that the converse of @{thm dterms_subterms} is not true because @{term dterm}s are an\n  over-approximation; i.e., we cannot show, in general, that guards return a non-empty set\n  of post-states.\n\\<close>"], ["", "subsection \"Control terms \""], ["", "text \\<open>\n  The control terms of a process specification @{term \\<Gamma>} are those subterms from which\n  transitions are directly possible. We can omit @{term \"call(pn)\"} terms, since\n  the root terms of all processes are considered, and also @{term \"p1 \\<oplus> p2\"} terms\n  since they effectively combine the transitions of the subterms @{term p1} and\n  @{term p2}.\n\n  It will be shown that only the control terms, rather than all subterms, need be\n  considered in invariant proofs.\n\\<close>"], ["", "inductive_set\n  cterms :: \"('s, 'm, 'p, 'l) seqp_env \\<Rightarrow> ('s, 'm, 'p, 'l) seqp set\"\n  for \\<Gamma> :: \"('s, 'm, 'p, 'l) seqp_env\"\nwhere\n    ctermsSI[intro]: \"p \\<in> sterms \\<Gamma> (\\<Gamma> pn) \\<Longrightarrow> p \\<in> cterms \\<Gamma>\"\n  | ctermsDI[intro]: \"\\<lbrakk> pp \\<in> cterms \\<Gamma>; p \\<in> dterms \\<Gamma> pp \\<rbrakk> \\<Longrightarrow> p \\<in> cterms \\<Gamma>\""], ["", "lemma cterms_not_choice [simp]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"p \\<in> cterms \\<Gamma>\"\n    shows \"not_choice p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. not_choice p", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. not_choice p", "proof (cases p)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x11 x12 x13.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x11}\\<langle>x12\\<rangle>\n        x13\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x21}\\<lbrakk>x22\\<rbrakk>\n        x23\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 3. \\<And>x31 x32.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = x31\n            \\<oplus>\n            x32\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 4. \\<And>x41 x42 x43 x44 x45.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x41}unicast(x42, x43) .\n               x44 \\<triangleright> x45\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 5. \\<And>x51 x52 x53.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x51}broadcast(x52) .\n        x53\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 6. \\<And>x61 x62 x63 x64.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x61}groupcast(x62, x63) .\n        x64\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 7. \\<And>x71 x72 x73.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x71}send(x72) .\n        x73\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 8. \\<And>x81 x82 x83.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x81}deliver(x82) .\n        x83\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 9. \\<And>x91 x92 x93.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x91}receive(x92) .\n        x93\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 10. \\<And>x10.\n        \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n         p = call(x10)\\<rbrakk>\n        \\<Longrightarrow> not_choice p", "case CHOICE"], ["proof (state)\nthis:\n  p = x31_\n      \\<oplus>\n      x32_\n\ngoal (10 subgoals):\n 1. \\<And>x11 x12 x13.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x11}\\<langle>x12\\<rangle>\n        x13\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x21}\\<lbrakk>x22\\<rbrakk>\n        x23\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 3. \\<And>x31 x32.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = x31\n            \\<oplus>\n            x32\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 4. \\<And>x41 x42 x43 x44 x45.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x41}unicast(x42, x43) .\n               x44 \\<triangleright> x45\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 5. \\<And>x51 x52 x53.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x51}broadcast(x52) .\n        x53\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 6. \\<And>x61 x62 x63 x64.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x61}groupcast(x62, x63) .\n        x64\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 7. \\<And>x71 x72 x73.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x71}send(x72) .\n        x73\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 8. \\<And>x81 x82 x83.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x81}deliver(x82) .\n        x83\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 9. \\<And>x91 x92 x93.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x91}receive(x92) .\n        x93\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 10. \\<And>x10.\n        \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n         p = call(x10)\\<rbrakk>\n        \\<Longrightarrow> not_choice p", "from \\<open>p \\<in> cterms \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> cterms \\<Gamma>", "show ?thesis"], ["proof (prove)\nusing this:\n  p \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. not_choice p", "using \\<open>wellformed \\<Gamma>\\<close>"], ["proof (prove)\nusing this:\n  p \\<in> cterms \\<Gamma>\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. not_choice p", "by cases simp_all"], ["proof (state)\nthis:\n  not_choice p\n\ngoal (9 subgoals):\n 1. \\<And>x11 x12 x13.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x11}\\<langle>x12\\<rangle>\n        x13\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x21}\\<lbrakk>x22\\<rbrakk>\n        x23\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 3. \\<And>x41 x42 x43 x44 x45.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x41}unicast(x42, x43) .\n               x44 \\<triangleright> x45\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 4. \\<And>x51 x52 x53.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x51}broadcast(x52) .\n        x53\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 5. \\<And>x61 x62 x63 x64.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x61}groupcast(x62, x63) .\n        x64\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 6. \\<And>x71 x72 x73.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x71}send(x72) .\n        x73\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 7. \\<And>x81 x82 x83.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x81}deliver(x82) .\n        x83\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 8. \\<And>x91 x92 x93.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x91}receive(x92) .\n        x93\\<rbrakk>\n       \\<Longrightarrow> not_choice p\n 9. \\<And>x10.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = call(x10)\\<rbrakk>\n       \\<Longrightarrow> not_choice p", "qed simp_all"], ["", "lemma cterms_no_choice [simp]:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"p1 \\<oplus> p2 \\<notin> cterms \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p1\n    \\<oplus>\n    p2\n    \\<notin> cterms \\<Gamma>", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. p1\n    \\<oplus>\n    p2\n    \\<notin> cterms \\<Gamma>", "by (auto dest: cterms_not_choice)"], ["", "lemma cterms_not_call [simp]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"p \\<in> cterms \\<Gamma>\"\n    shows \"not_call p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. not_call p", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. not_call p", "proof (cases p)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x11 x12 x13.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x11}\\<langle>x12\\<rangle>\n        x13\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x21}\\<lbrakk>x22\\<rbrakk>\n        x23\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 3. \\<And>x31 x32.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = x31\n            \\<oplus>\n            x32\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 4. \\<And>x41 x42 x43 x44 x45.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x41}unicast(x42, x43) .\n               x44 \\<triangleright> x45\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 5. \\<And>x51 x52 x53.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x51}broadcast(x52) .\n        x53\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 6. \\<And>x61 x62 x63 x64.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x61}groupcast(x62, x63) .\n        x64\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 7. \\<And>x71 x72 x73.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x71}send(x72) .\n        x73\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 8. \\<And>x81 x82 x83.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x81}deliver(x82) .\n        x83\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 9. \\<And>x91 x92 x93.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x91}receive(x92) .\n        x93\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 10. \\<And>x10.\n        \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n         p = call(x10)\\<rbrakk>\n        \\<Longrightarrow> not_call p", "case CALL"], ["proof (state)\nthis:\n  p = call(x10_)\n\ngoal (10 subgoals):\n 1. \\<And>x11 x12 x13.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x11}\\<langle>x12\\<rangle>\n        x13\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x21}\\<lbrakk>x22\\<rbrakk>\n        x23\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 3. \\<And>x31 x32.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = x31\n            \\<oplus>\n            x32\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 4. \\<And>x41 x42 x43 x44 x45.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x41}unicast(x42, x43) .\n               x44 \\<triangleright> x45\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 5. \\<And>x51 x52 x53.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x51}broadcast(x52) .\n        x53\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 6. \\<And>x61 x62 x63 x64.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x61}groupcast(x62, x63) .\n        x64\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 7. \\<And>x71 x72 x73.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x71}send(x72) .\n        x73\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 8. \\<And>x81 x82 x83.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x81}deliver(x82) .\n        x83\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 9. \\<And>x91 x92 x93.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x91}receive(x92) .\n        x93\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 10. \\<And>x10.\n        \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n         p = call(x10)\\<rbrakk>\n        \\<Longrightarrow> not_call p", "from \\<open>p \\<in> cterms \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> cterms \\<Gamma>", "show ?thesis"], ["proof (prove)\nusing this:\n  p \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. not_call p", "using \\<open>wellformed \\<Gamma>\\<close>"], ["proof (prove)\nusing this:\n  p \\<in> cterms \\<Gamma>\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. not_call p", "by cases simp_all"], ["proof (state)\nthis:\n  not_call p\n\ngoal (9 subgoals):\n 1. \\<And>x11 x12 x13.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x11}\\<langle>x12\\<rangle>\n        x13\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x21}\\<lbrakk>x22\\<rbrakk>\n        x23\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 3. \\<And>x31 x32.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = x31\n            \\<oplus>\n            x32\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 4. \\<And>x41 x42 x43 x44 x45.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x41}unicast(x42, x43) .\n               x44 \\<triangleright> x45\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 5. \\<And>x51 x52 x53.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x51}broadcast(x52) .\n        x53\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 6. \\<And>x61 x62 x63 x64.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x61}groupcast(x62, x63) .\n        x64\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 7. \\<And>x71 x72 x73.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x71}send(x72) .\n        x73\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 8. \\<And>x81 x82 x83.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x81}deliver(x82) .\n        x83\\<rbrakk>\n       \\<Longrightarrow> not_call p\n 9. \\<And>x91 x92 x93.\n       \\<lbrakk>wellformed \\<Gamma>; p \\<in> cterms \\<Gamma>;\n        p = {x91}receive(x92) .\n        x93\\<rbrakk>\n       \\<Longrightarrow> not_call p", "qed simp_all"], ["", "lemma cterms_no_call [simp]:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"call(pn) \\<notin> cterms \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. call(pn) \\<notin> cterms \\<Gamma>", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. call(pn) \\<notin> cterms \\<Gamma>", "by (auto dest: cterms_not_call)"], ["", "lemma sterms_cterms [elim]:\n  assumes \"p \\<in> cterms \\<Gamma>\"\n      and \"q \\<in> sterms \\<Gamma> p\"\n      and \"wellformed \\<Gamma>\"\n    shows \"q \\<in> cterms \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> cterms \\<Gamma>", "using assms"], ["proof (prove)\nusing this:\n  p \\<in> cterms \\<Gamma>\n  q \\<in> sterms \\<Gamma> p\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. q \\<in> cterms \\<Gamma>", "by - (cases p, auto)"], ["", "lemma dterms_cterms [elim]:\n  assumes \"p \\<in> cterms \\<Gamma>\"\n      and \"q \\<in> dterms \\<Gamma> p\"\n      and \"wellformed \\<Gamma>\"\n    shows \"q \\<in> cterms \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> cterms \\<Gamma>", "using assms"], ["proof (prove)\nusing this:\n  p \\<in> cterms \\<Gamma>\n  q \\<in> dterms \\<Gamma> p\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. q \\<in> cterms \\<Gamma>", "by (cases p) auto"], ["", "lemma derivs_in_cterms [simp]:\n  \"\\<And>l f p. {l}\\<langle>f\\<rangle> p \\<in> cterms \\<Gamma>                            \\<Longrightarrow> sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>\"\n  \"\\<And>l f p. {l}\\<lbrakk>f\\<rbrakk> p \\<in> cterms \\<Gamma>                           \\<Longrightarrow> sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>\"\n  \"\\<And>l fip fmsg q p. {l}unicast(fip, fmsg). p \\<triangleright> q \\<in> cterms \\<Gamma>\n                            \\<Longrightarrow> sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma> \\<and> sterms \\<Gamma> q \\<subseteq> cterms \\<Gamma>\"\n  \"\\<And>l fmsg p.      {l}broadcast(fmsg).p \\<in> cterms \\<Gamma>       \\<Longrightarrow> sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>\"\n  \"\\<And>l fips fmsg p. {l}groupcast(fips, fmsg).p \\<in> cterms \\<Gamma> \\<Longrightarrow> sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>\"\n  \"\\<And>l fmsg p.      {l}send(fmsg).p \\<in> cterms \\<Gamma>            \\<Longrightarrow> sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>\"\n  \"\\<And>l fdata p.     {l}deliver(fdata).p \\<in> cterms \\<Gamma>        \\<Longrightarrow> sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>\"\n  \"\\<And>l fmsg p.      {l}receive(fmsg).p \\<in> cterms \\<Gamma>         \\<Longrightarrow> sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (((\\<And>l f p.\n          {l}\\<langle>f\\<rangle>\n          p \\<in> cterms \\<Gamma> \\<Longrightarrow>\n          sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>) &&&\n      (\\<And>l f p.\n          {l}\\<lbrakk>f\\<rbrakk>\n          p \\<in> cterms \\<Gamma> \\<Longrightarrow>\n          sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>)) &&&\n     (\\<And>l fip fmsg q p.\n         {l}unicast(fip, fmsg) .\n            p \\<triangleright> q\n         \\<in> cterms \\<Gamma> \\<Longrightarrow>\n         sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma> \\<and>\n         sterms \\<Gamma> q \\<subseteq> cterms \\<Gamma>) &&&\n     (\\<And>l fmsg p.\n         {l}broadcast(fmsg) .\n         p \\<in> cterms \\<Gamma> \\<Longrightarrow>\n         sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>)) &&&\n    ((\\<And>l fips fmsg p.\n         {l}groupcast(fips, fmsg) .\n         p \\<in> cterms \\<Gamma> \\<Longrightarrow>\n         sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>) &&&\n     (\\<And>l fmsg p.\n         {l}send(fmsg) .\n         p \\<in> cterms \\<Gamma> \\<Longrightarrow>\n         sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>)) &&&\n    (\\<And>l fdata p.\n        {l}deliver(fdata) .\n        p \\<in> cterms \\<Gamma> \\<Longrightarrow>\n        sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>) &&&\n    (\\<And>l fmsg p.\n        {l}receive(fmsg) .\n        p \\<in> cterms \\<Gamma> \\<Longrightarrow>\n        sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>)", "by (auto simp: dterms.psimps)"], ["", "subsection \"Local control terms\""], ["", "text \\<open>\n  We introduce a `local' version of @{term cterms} that does not step through calls and,\n  thus, that is defined independently of a process specification @{term \\<Gamma>}.\n  This allows an alternative, terminating characterisation of cterms as a set of\n  subterms. Including @{term \"call(pn)\"}s in the set makes for a simpler relation with\n  @{term \"stermsl\"}, even if they must be filtered out for the desired characterisation.\n\\<close>"], ["", "function\n  ctermsl :: \"('s, 'm, 'p, 'l) seqp \\<Rightarrow> ('s, 'm, 'p , 'l) seqp set\"\nwhere\n    \"ctermsl ({l}\\<langle>g\\<rangle> p)                     = insert ({l}\\<langle>g\\<rangle> p)  (ctermsl p)\"\n  | \"ctermsl ({l}\\<lbrakk>u\\<rbrakk> p)                     = insert ({l}\\<lbrakk>u\\<rbrakk> p)  (ctermsl p)\"\n  | \"ctermsl ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g). p \\<triangleright> q) = insert ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g). p \\<triangleright> q)\n                                                                      (ctermsl p \\<union> ctermsl q)\"\n  | \"ctermsl ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g). p)       = insert ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g). p)       (ctermsl p)\"\n  | \"ctermsl ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s, s\\<^sub>m\\<^sub>s\\<^sub>g). p)  = insert ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s, s\\<^sub>m\\<^sub>s\\<^sub>g). p) (ctermsl p)\"\n  | \"ctermsl ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g). p)            = insert ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g). p)            (ctermsl p)\"\n  | \"ctermsl ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a). p)        = insert ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a). p)        (ctermsl p)\"\n  | \"ctermsl ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g). p)         = insert ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g). p)         (ctermsl p)\"\n  | \"ctermsl (p1 \\<oplus> p2)                    = ctermsl p1 \\<union> ctermsl p2\"\n  | \"ctermsl (call(pn))                   = {call(pn)}\""], ["proof (prove)\ngoal (56 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>l g p. x = {l}\\<langle>g\\<rangle>\n                             p \\<Longrightarrow>\n                             P;\n        \\<And>l u p. x = {l}\\<lbrakk>u\\<rbrakk>\n                     p \\<Longrightarrow>\n                     P;\n        \\<And>l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p q.\n           x =\n           {l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n              p \\<triangleright> q \\<Longrightarrow>\n           P;\n        \\<And>l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n           x = {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n           p \\<Longrightarrow>\n           P;\n        \\<And>l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g p.\n           x =\n           {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                         s\\<^sub>m\\<^sub>s\\<^sub>g) .\n           p \\<Longrightarrow>\n           P;\n        \\<And>l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n           x = {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n           p \\<Longrightarrow>\n           P;\n        \\<And>l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n           x = {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n           p \\<Longrightarrow>\n           P;\n        \\<And>l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n           x = {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n           p \\<Longrightarrow>\n           P;\n        \\<And>p1 p2. x = p1\n                         \\<oplus>\n                         p2 \\<Longrightarrow>\n                     P;\n        \\<And>pn. x = call(pn) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>l g p la ga pa.\n       {l}\\<langle>g\\<rangle>\n       p = {la}\\<langle>ga\\<rangle>\n       pa \\<Longrightarrow>\n       insert ({l}\\<langle>g\\<rangle>\n               p)\n        (ctermsl_sumC p) =\n       insert ({la}\\<langle>ga\\<rangle>\n               pa)\n        (ctermsl_sumC pa)\n 3. \\<And>l g p la u pa.\n       {l}\\<langle>g\\<rangle>\n       p = {la}\\<lbrakk>u\\<rbrakk>\n       pa \\<Longrightarrow>\n       insert ({l}\\<langle>g\\<rangle>\n               p)\n        (ctermsl_sumC p) =\n       insert ({la}\\<lbrakk>u\\<rbrakk>\n               pa)\n        (ctermsl_sumC pa)\n 4. \\<And>l g p la s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g pa q.\n       {l}\\<langle>g\\<rangle>\n       p =\n       {la}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n          pa \\<triangleright> q \\<Longrightarrow>\n       insert ({l}\\<langle>g\\<rangle>\n               p)\n        (ctermsl_sumC p) =\n       insert ({la}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  pa \\<triangleright> q)\n        (ctermsl_sumC pa \\<union> ctermsl_sumC q)\n 5. \\<And>l g p la s\\<^sub>m\\<^sub>s\\<^sub>g pa.\n       {l}\\<langle>g\\<rangle>\n       p = {la}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n       pa \\<Longrightarrow>\n       insert ({l}\\<langle>g\\<rangle>\n               p)\n        (ctermsl_sumC p) =\n       insert ({la}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n               pa)\n        (ctermsl_sumC pa)\n 6. \\<And>l g p la s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g pa.\n       {l}\\<langle>g\\<rangle>\n       p =\n       {la}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n       pa \\<Longrightarrow>\n       insert ({l}\\<langle>g\\<rangle>\n               p)\n        (ctermsl_sumC p) =\n       insert\n        ({la}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                        s\\<^sub>m\\<^sub>s\\<^sub>g) .\n         pa)\n        (ctermsl_sumC pa)\n 7. \\<And>l g p la s\\<^sub>m\\<^sub>s\\<^sub>g pa.\n       {l}\\<langle>g\\<rangle>\n       p = {la}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n       pa \\<Longrightarrow>\n       insert ({l}\\<langle>g\\<rangle>\n               p)\n        (ctermsl_sumC p) =\n       insert ({la}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n               pa)\n        (ctermsl_sumC pa)\n 8. \\<And>l g p la s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a pa.\n       {l}\\<langle>g\\<rangle>\n       p = {la}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n       pa \\<Longrightarrow>\n       insert ({l}\\<langle>g\\<rangle>\n               p)\n        (ctermsl_sumC p) =\n       insert ({la}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n               pa)\n        (ctermsl_sumC pa)\n 9. \\<And>l g p la u\\<^sub>m\\<^sub>s\\<^sub>g pa.\n       {l}\\<langle>g\\<rangle>\n       p = {la}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n       pa \\<Longrightarrow>\n       insert ({l}\\<langle>g\\<rangle>\n               p)\n        (ctermsl_sumC p) =\n       insert ({la}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n               pa)\n        (ctermsl_sumC pa)\n 10. \\<And>l g p p1 p2.\n        {l}\\<langle>g\\<rangle>\n        p = p1\n            \\<oplus>\n            p2 \\<Longrightarrow>\n        insert ({l}\\<langle>g\\<rangle>\n                p)\n         (ctermsl_sumC p) =\n        ctermsl_sumC p1 \\<union> ctermsl_sumC p2\nA total of 56 subgoals...", "by pat_completeness auto"], ["", "termination"], ["proof (prove)\ngoal (1 subgoal):\n 1. All ctermsl_dom", "by (relation \"measure(size)\") (auto dest: stermsl_nobigger)"], ["", "lemmas ctermsl_induct =\n  ctermsl.induct [case_names GUARD ASSIGN UCAST BCAST GCAST\n                             SEND DELIVER RECEIVE CHOICE CALL]"], ["", "lemma ctermsl_refl [intro]: \"not_choice p \\<Longrightarrow> p \\<in> ctermsl p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. not_choice p \\<Longrightarrow> p \\<in> ctermsl p", "by (cases p) auto"], ["", "lemma ctermsl_subterms:\n  \"ctermsl p = {q. q \\<in> subterms p \\<and> not_choice q }\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ctermsl p = {q \\<in> subterms p. not_choice q}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ctermsl p \\<subseteq> {q \\<in> subterms p. not_choice q}\n 2. {q \\<in> subterms p. not_choice q} \\<subseteq> ctermsl p", "show \"?lhs \\<subseteq> ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ctermsl p \\<subseteq> {q \\<in> subterms p. not_choice q}", "by (induct p, auto)"], ["proof (state)\nthis:\n  ctermsl p \\<subseteq> {q \\<in> subterms p. not_choice q}\n\ngoal (1 subgoal):\n 1. {q \\<in> subterms p. not_choice q} \\<subseteq> ctermsl p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {q \\<in> subterms p. not_choice q} \\<subseteq> ctermsl p", "show \"?rhs \\<subseteq> ?lhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {q \\<in> subterms p. not_choice q} \\<subseteq> ctermsl p", "by (induct p, auto)"], ["proof (state)\nthis:\n  {q \\<in> subterms p. not_choice q} \\<subseteq> ctermsl p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ctermsl_trans [elim]:\n  assumes \"q \\<in> ctermsl p\"\n      and \"r \\<in> ctermsl q\"\n    shows \"r \\<in> ctermsl p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> ctermsl p", "using assms"], ["proof (prove)\nusing this:\n  q \\<in> ctermsl p\n  r \\<in> ctermsl q\n\ngoal (1 subgoal):\n 1. r \\<in> ctermsl p", "proof (induction p rule: ctermsl_induct)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>l g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}\\<langle>g\\<rangle>\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({l}\\<langle>g\\<rangle>\n    p)\n 2. \\<And>l u p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n    p)\n 3. \\<And>l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p qa.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        \\<lbrakk>q \\<in> ctermsl qa; r \\<in> ctermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl qa;\n        q \\<in> ctermsl\n                 ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}unicast(s\\<^sub>i\\<^sub>p,\n         s\\<^sub>m\\<^sub>s\\<^sub>g) .\np \\<triangleright> qa)\n 4. \\<And>l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p)\n 5. \\<And>l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl\n                 ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n           s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p)\n 6. \\<And>l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p)\n 7. \\<And>l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                                   p)\n 8. \\<And>l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p)\n 9. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p1; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p1;\n        \\<lbrakk>q \\<in> ctermsl p2; r \\<in> ctermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl p2;\n        q \\<in> ctermsl (p1\n                         \\<oplus>\n                         p2);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl (p1\n    \\<oplus>\n    p2)\n 10. \\<And>pn.\n        \\<lbrakk>q \\<in> ctermsl (call(pn)); r \\<in> ctermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl (call(pn))", "case (CHOICE p1 p2)"], ["proof (state)\nthis:\n  \\<lbrakk>q \\<in> ctermsl p1; r \\<in> ctermsl q\\<rbrakk>\n  \\<Longrightarrow> r \\<in> ctermsl p1\n  \\<lbrakk>q \\<in> ctermsl p2; r \\<in> ctermsl q\\<rbrakk>\n  \\<Longrightarrow> r \\<in> ctermsl p2\n  q \\<in> ctermsl (p1\n                   \\<oplus>\n                   p2)\n  r \\<in> ctermsl q\n\ngoal (10 subgoals):\n 1. \\<And>l g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}\\<langle>g\\<rangle>\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({l}\\<langle>g\\<rangle>\n    p)\n 2. \\<And>l u p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n    p)\n 3. \\<And>l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p qa.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        \\<lbrakk>q \\<in> ctermsl qa; r \\<in> ctermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl qa;\n        q \\<in> ctermsl\n                 ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}unicast(s\\<^sub>i\\<^sub>p,\n         s\\<^sub>m\\<^sub>s\\<^sub>g) .\np \\<triangleright> qa)\n 4. \\<And>l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p)\n 5. \\<And>l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl\n                 ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n           s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p)\n 6. \\<And>l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p)\n 7. \\<And>l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                                   p)\n 8. \\<And>l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p)\n 9. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p1; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p1;\n        \\<lbrakk>q \\<in> ctermsl p2; r \\<in> ctermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl p2;\n        q \\<in> ctermsl (p1\n                         \\<oplus>\n                         p2);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl (p1\n    \\<oplus>\n    p2)\n 10. \\<And>pn.\n        \\<lbrakk>q \\<in> ctermsl (call(pn)); r \\<in> ctermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl (call(pn))", "have \"(q \\<in> ctermsl p1) \\<or> (q \\<in> ctermsl p2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> ctermsl p1 \\<or> q \\<in> ctermsl p2", "using CHOICE.prems(1)"], ["proof (prove)\nusing this:\n  q \\<in> ctermsl (p1\n                   \\<oplus>\n                   p2)\n\ngoal (1 subgoal):\n 1. q \\<in> ctermsl p1 \\<or> q \\<in> ctermsl p2", "by simp"], ["proof (state)\nthis:\n  q \\<in> ctermsl p1 \\<or> q \\<in> ctermsl p2\n\ngoal (10 subgoals):\n 1. \\<And>l g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}\\<langle>g\\<rangle>\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({l}\\<langle>g\\<rangle>\n    p)\n 2. \\<And>l u p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n    p)\n 3. \\<And>l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p qa.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        \\<lbrakk>q \\<in> ctermsl qa; r \\<in> ctermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl qa;\n        q \\<in> ctermsl\n                 ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}unicast(s\\<^sub>i\\<^sub>p,\n         s\\<^sub>m\\<^sub>s\\<^sub>g) .\np \\<triangleright> qa)\n 4. \\<And>l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p)\n 5. \\<And>l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl\n                 ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n           s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p)\n 6. \\<And>l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p)\n 7. \\<And>l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                                   p)\n 8. \\<And>l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p)\n 9. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p1; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p1;\n        \\<lbrakk>q \\<in> ctermsl p2; r \\<in> ctermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl p2;\n        q \\<in> ctermsl (p1\n                         \\<oplus>\n                         p2);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl (p1\n    \\<oplus>\n    p2)\n 10. \\<And>pn.\n        \\<lbrakk>q \\<in> ctermsl (call(pn)); r \\<in> ctermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl (call(pn))", "hence \"r \\<in> ctermsl p1 \\<or> r \\<in> ctermsl p2\""], ["proof (prove)\nusing this:\n  q \\<in> ctermsl p1 \\<or> q \\<in> ctermsl p2\n\ngoal (1 subgoal):\n 1. r \\<in> ctermsl p1 \\<or> r \\<in> ctermsl p2", "proof (rule disj_forward)"], ["proof (state)\ngoal (2 subgoals):\n 1. q \\<in> ctermsl p1 \\<Longrightarrow> r \\<in> ctermsl p1\n 2. q \\<in> ctermsl p2 \\<Longrightarrow> r \\<in> ctermsl p2", "assume \"q \\<in> ctermsl p1\""], ["proof (state)\nthis:\n  q \\<in> ctermsl p1\n\ngoal (2 subgoals):\n 1. q \\<in> ctermsl p1 \\<Longrightarrow> r \\<in> ctermsl p1\n 2. q \\<in> ctermsl p2 \\<Longrightarrow> r \\<in> ctermsl p2", "thus \"r \\<in> ctermsl p1\""], ["proof (prove)\nusing this:\n  q \\<in> ctermsl p1\n\ngoal (1 subgoal):\n 1. r \\<in> ctermsl p1", "using \\<open>r \\<in> ctermsl q\\<close>"], ["proof (prove)\nusing this:\n  q \\<in> ctermsl p1\n  r \\<in> ctermsl q\n\ngoal (1 subgoal):\n 1. r \\<in> ctermsl p1", "by (rule CHOICE.IH)"], ["proof (state)\nthis:\n  r \\<in> ctermsl p1\n\ngoal (1 subgoal):\n 1. q \\<in> ctermsl p2 \\<Longrightarrow> r \\<in> ctermsl p2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. q \\<in> ctermsl p2 \\<Longrightarrow> r \\<in> ctermsl p2", "assume \"q \\<in> ctermsl p2\""], ["proof (state)\nthis:\n  q \\<in> ctermsl p2\n\ngoal (1 subgoal):\n 1. q \\<in> ctermsl p2 \\<Longrightarrow> r \\<in> ctermsl p2", "thus \"r \\<in> ctermsl p2\""], ["proof (prove)\nusing this:\n  q \\<in> ctermsl p2\n\ngoal (1 subgoal):\n 1. r \\<in> ctermsl p2", "using \\<open>r \\<in> ctermsl q\\<close>"], ["proof (prove)\nusing this:\n  q \\<in> ctermsl p2\n  r \\<in> ctermsl q\n\ngoal (1 subgoal):\n 1. r \\<in> ctermsl p2", "by (rule CHOICE.IH)"], ["proof (state)\nthis:\n  r \\<in> ctermsl p2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r \\<in> ctermsl p1 \\<or> r \\<in> ctermsl p2\n\ngoal (10 subgoals):\n 1. \\<And>l g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}\\<langle>g\\<rangle>\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({l}\\<langle>g\\<rangle>\n    p)\n 2. \\<And>l u p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n    p)\n 3. \\<And>l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p qa.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        \\<lbrakk>q \\<in> ctermsl qa; r \\<in> ctermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl qa;\n        q \\<in> ctermsl\n                 ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}unicast(s\\<^sub>i\\<^sub>p,\n         s\\<^sub>m\\<^sub>s\\<^sub>g) .\np \\<triangleright> qa)\n 4. \\<And>l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p)\n 5. \\<And>l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl\n                 ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n           s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p)\n 6. \\<And>l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p)\n 7. \\<And>l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                                   p)\n 8. \\<And>l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p)\n 9. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p1; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p1;\n        \\<lbrakk>q \\<in> ctermsl p2; r \\<in> ctermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl p2;\n        q \\<in> ctermsl (p1\n                         \\<oplus>\n                         p2);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl (p1\n    \\<oplus>\n    p2)\n 10. \\<And>pn.\n        \\<lbrakk>q \\<in> ctermsl (call(pn)); r \\<in> ctermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl (call(pn))", "thus \"r \\<in> ctermsl (p1 \\<oplus> p2)\""], ["proof (prove)\nusing this:\n  r \\<in> ctermsl p1 \\<or> r \\<in> ctermsl p2\n\ngoal (1 subgoal):\n 1. r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)", "by simp"], ["proof (state)\nthis:\n  r \\<in> ctermsl (p1\n                   \\<oplus>\n                   p2)\n\ngoal (9 subgoals):\n 1. \\<And>l g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}\\<langle>g\\<rangle>\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({l}\\<langle>g\\<rangle>\n    p)\n 2. \\<And>l u p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n    p)\n 3. \\<And>l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p qa.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        \\<lbrakk>q \\<in> ctermsl qa; r \\<in> ctermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl qa;\n        q \\<in> ctermsl\n                 ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}unicast(s\\<^sub>i\\<^sub>p,\n         s\\<^sub>m\\<^sub>s\\<^sub>g) .\np \\<triangleright> qa)\n 4. \\<And>l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p)\n 5. \\<And>l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl\n                 ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n           s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p)\n 6. \\<And>l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p)\n 7. \\<And>l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                                   p)\n 8. \\<And>l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<lbrakk>q \\<in> ctermsl p; r \\<in> ctermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> ctermsl ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                         p);\n        r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl\n                                  ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p)\n 9. \\<And>pn.\n       \\<lbrakk>q \\<in> ctermsl (call(pn)); r \\<in> ctermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl (call(pn))", "qed auto"], ["", "lemma ctermsl_ex_trans [elim]:\n  assumes \"\\<exists>q \\<in> ctermsl p. r \\<in> ctermsl q\"\n    shows \"r \\<in> ctermsl p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> ctermsl p", "using assms"], ["proof (prove)\nusing this:\n  \\<exists>q\\<in>ctermsl p. r \\<in> ctermsl q\n\ngoal (1 subgoal):\n 1. r \\<in> ctermsl p", "by auto"], ["", "lemma call_ctermsl_empty [elim]:\n  \"\\<lbrakk> p \\<in> ctermsl p'; not_call p \\<rbrakk> \\<Longrightarrow> not_call p'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> ctermsl p'; not_call p\\<rbrakk>\n    \\<Longrightarrow> not_call p'", "unfolding not_call_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> ctermsl p'; \\<forall>pn. p \\<noteq> call(pn)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>pn. p' \\<noteq> call(pn)", "by (cases p) auto"], ["", "lemma stermsl_ctermsl_choice1 [simp]:\n  assumes \"q \\<in> stermsl p1\"\n    shows \"q \\<in> ctermsl (p1 \\<oplus> p2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)", "using assms"], ["proof (prove)\nusing this:\n  q \\<in> stermsl p1\n\ngoal (1 subgoal):\n 1. q \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)", "by (induction p1) auto"], ["", "lemma stermsl_ctermsl_choice2 [simp]:\n  assumes \"q \\<in> stermsl p2\"\n    shows \"q \\<in> ctermsl (p1 \\<oplus> p2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)", "using assms"], ["proof (prove)\nusing this:\n  q \\<in> stermsl p2\n\ngoal (1 subgoal):\n 1. q \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)", "by (induction p2) auto"], ["", "lemma stermsl_ctermsl [elim]:\n  assumes \"q \\<in> stermsl p\"\n    shows \"q \\<in> ctermsl p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> ctermsl p", "using assms"], ["proof (prove)\nusing this:\n  q \\<in> stermsl p\n\ngoal (1 subgoal):\n 1. q \\<in> ctermsl p", "proof (cases p)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x11 x12 x13.\n       \\<lbrakk>q \\<in> stermsl p; p = {x11}\\<langle>x12\\<rangle>\n                                   x13\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>q \\<in> stermsl p; p = {x21}\\<lbrakk>x22\\<rbrakk>\n                                   x23\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 3. \\<And>x31 x32.\n       \\<lbrakk>q \\<in> stermsl p; p = x31\n \\<oplus>\n x32\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 4. \\<And>x41 x42 x43 x44 x45.\n       \\<lbrakk>q \\<in> stermsl p; p = {x41}unicast(x42, x43) .\n    x44 \\<triangleright> x45\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 5. \\<And>x51 x52 x53.\n       \\<lbrakk>q \\<in> stermsl p; p = {x51}broadcast(x52) .\n                                   x53\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 6. \\<And>x61 x62 x63 x64.\n       \\<lbrakk>q \\<in> stermsl p; p = {x61}groupcast(x62, x63) .\n                                   x64\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 7. \\<And>x71 x72 x73.\n       \\<lbrakk>q \\<in> stermsl p; p = {x71}send(x72) .\n                                   x73\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 8. \\<And>x81 x82 x83.\n       \\<lbrakk>q \\<in> stermsl p; p = {x81}deliver(x82) .\n                                   x83\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 9. \\<And>x91 x92 x93.\n       \\<lbrakk>q \\<in> stermsl p; p = {x91}receive(x92) .\n                                   x93\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 10. \\<And>x10.\n        \\<lbrakk>q \\<in> stermsl p; p = call(x10)\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p", "case (CHOICE p1 p2)"], ["proof (state)\nthis:\n  p = p1\n      \\<oplus>\n      p2\n\ngoal (10 subgoals):\n 1. \\<And>x11 x12 x13.\n       \\<lbrakk>q \\<in> stermsl p; p = {x11}\\<langle>x12\\<rangle>\n                                   x13\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>q \\<in> stermsl p; p = {x21}\\<lbrakk>x22\\<rbrakk>\n                                   x23\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 3. \\<And>x31 x32.\n       \\<lbrakk>q \\<in> stermsl p; p = x31\n \\<oplus>\n x32\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 4. \\<And>x41 x42 x43 x44 x45.\n       \\<lbrakk>q \\<in> stermsl p; p = {x41}unicast(x42, x43) .\n    x44 \\<triangleright> x45\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 5. \\<And>x51 x52 x53.\n       \\<lbrakk>q \\<in> stermsl p; p = {x51}broadcast(x52) .\n                                   x53\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 6. \\<And>x61 x62 x63 x64.\n       \\<lbrakk>q \\<in> stermsl p; p = {x61}groupcast(x62, x63) .\n                                   x64\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 7. \\<And>x71 x72 x73.\n       \\<lbrakk>q \\<in> stermsl p; p = {x71}send(x72) .\n                                   x73\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 8. \\<And>x81 x82 x83.\n       \\<lbrakk>q \\<in> stermsl p; p = {x81}deliver(x82) .\n                                   x83\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 9. \\<And>x91 x92 x93.\n       \\<lbrakk>q \\<in> stermsl p; p = {x91}receive(x92) .\n                                   x93\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 10. \\<And>x10.\n        \\<lbrakk>q \\<in> stermsl p; p = call(x10)\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p", "hence \"q \\<in> stermsl (p1 \\<oplus> p2)\""], ["proof (prove)\nusing this:\n  p = p1\n      \\<oplus>\n      p2\n\ngoal (1 subgoal):\n 1. q \\<in> stermsl (p1\n                     \\<oplus>\n                     p2)", "using assms"], ["proof (prove)\nusing this:\n  p = p1\n      \\<oplus>\n      p2\n  q \\<in> stermsl p\n\ngoal (1 subgoal):\n 1. q \\<in> stermsl (p1\n                     \\<oplus>\n                     p2)", "by simp"], ["proof (state)\nthis:\n  q \\<in> stermsl (p1\n                   \\<oplus>\n                   p2)\n\ngoal (10 subgoals):\n 1. \\<And>x11 x12 x13.\n       \\<lbrakk>q \\<in> stermsl p; p = {x11}\\<langle>x12\\<rangle>\n                                   x13\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>q \\<in> stermsl p; p = {x21}\\<lbrakk>x22\\<rbrakk>\n                                   x23\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 3. \\<And>x31 x32.\n       \\<lbrakk>q \\<in> stermsl p; p = x31\n \\<oplus>\n x32\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 4. \\<And>x41 x42 x43 x44 x45.\n       \\<lbrakk>q \\<in> stermsl p; p = {x41}unicast(x42, x43) .\n    x44 \\<triangleright> x45\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 5. \\<And>x51 x52 x53.\n       \\<lbrakk>q \\<in> stermsl p; p = {x51}broadcast(x52) .\n                                   x53\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 6. \\<And>x61 x62 x63 x64.\n       \\<lbrakk>q \\<in> stermsl p; p = {x61}groupcast(x62, x63) .\n                                   x64\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 7. \\<And>x71 x72 x73.\n       \\<lbrakk>q \\<in> stermsl p; p = {x71}send(x72) .\n                                   x73\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 8. \\<And>x81 x82 x83.\n       \\<lbrakk>q \\<in> stermsl p; p = {x81}deliver(x82) .\n                                   x83\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 9. \\<And>x91 x92 x93.\n       \\<lbrakk>q \\<in> stermsl p; p = {x91}receive(x92) .\n                                   x93\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 10. \\<And>x10.\n        \\<lbrakk>q \\<in> stermsl p; p = call(x10)\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p", "hence \"q \\<in> stermsl p1 \\<or> q \\<in> stermsl p2\""], ["proof (prove)\nusing this:\n  q \\<in> stermsl (p1\n                   \\<oplus>\n                   p2)\n\ngoal (1 subgoal):\n 1. q \\<in> stermsl p1 \\<or> q \\<in> stermsl p2", "by simp"], ["proof (state)\nthis:\n  q \\<in> stermsl p1 \\<or> q \\<in> stermsl p2\n\ngoal (10 subgoals):\n 1. \\<And>x11 x12 x13.\n       \\<lbrakk>q \\<in> stermsl p; p = {x11}\\<langle>x12\\<rangle>\n                                   x13\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>q \\<in> stermsl p; p = {x21}\\<lbrakk>x22\\<rbrakk>\n                                   x23\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 3. \\<And>x31 x32.\n       \\<lbrakk>q \\<in> stermsl p; p = x31\n \\<oplus>\n x32\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 4. \\<And>x41 x42 x43 x44 x45.\n       \\<lbrakk>q \\<in> stermsl p; p = {x41}unicast(x42, x43) .\n    x44 \\<triangleright> x45\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 5. \\<And>x51 x52 x53.\n       \\<lbrakk>q \\<in> stermsl p; p = {x51}broadcast(x52) .\n                                   x53\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 6. \\<And>x61 x62 x63 x64.\n       \\<lbrakk>q \\<in> stermsl p; p = {x61}groupcast(x62, x63) .\n                                   x64\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 7. \\<And>x71 x72 x73.\n       \\<lbrakk>q \\<in> stermsl p; p = {x71}send(x72) .\n                                   x73\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 8. \\<And>x81 x82 x83.\n       \\<lbrakk>q \\<in> stermsl p; p = {x81}deliver(x82) .\n                                   x83\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 9. \\<And>x91 x92 x93.\n       \\<lbrakk>q \\<in> stermsl p; p = {x91}receive(x92) .\n                                   x93\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 10. \\<And>x10.\n        \\<lbrakk>q \\<in> stermsl p; p = call(x10)\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p", "hence \"q \\<in> ctermsl (p1 \\<oplus> p2)\""], ["proof (prove)\nusing this:\n  q \\<in> stermsl p1 \\<or> q \\<in> stermsl p2\n\ngoal (1 subgoal):\n 1. q \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)", "by (rule) (simp_all del: ctermsl.simps)"], ["proof (state)\nthis:\n  q \\<in> ctermsl (p1\n                   \\<oplus>\n                   p2)\n\ngoal (10 subgoals):\n 1. \\<And>x11 x12 x13.\n       \\<lbrakk>q \\<in> stermsl p; p = {x11}\\<langle>x12\\<rangle>\n                                   x13\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>q \\<in> stermsl p; p = {x21}\\<lbrakk>x22\\<rbrakk>\n                                   x23\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 3. \\<And>x31 x32.\n       \\<lbrakk>q \\<in> stermsl p; p = x31\n \\<oplus>\n x32\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 4. \\<And>x41 x42 x43 x44 x45.\n       \\<lbrakk>q \\<in> stermsl p; p = {x41}unicast(x42, x43) .\n    x44 \\<triangleright> x45\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 5. \\<And>x51 x52 x53.\n       \\<lbrakk>q \\<in> stermsl p; p = {x51}broadcast(x52) .\n                                   x53\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 6. \\<And>x61 x62 x63 x64.\n       \\<lbrakk>q \\<in> stermsl p; p = {x61}groupcast(x62, x63) .\n                                   x64\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 7. \\<And>x71 x72 x73.\n       \\<lbrakk>q \\<in> stermsl p; p = {x71}send(x72) .\n                                   x73\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 8. \\<And>x81 x82 x83.\n       \\<lbrakk>q \\<in> stermsl p; p = {x81}deliver(x82) .\n                                   x83\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 9. \\<And>x91 x92 x93.\n       \\<lbrakk>q \\<in> stermsl p; p = {x91}receive(x92) .\n                                   x93\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 10. \\<And>x10.\n        \\<lbrakk>q \\<in> stermsl p; p = call(x10)\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p", "thus  \"q \\<in> ctermsl p\""], ["proof (prove)\nusing this:\n  q \\<in> ctermsl (p1\n                   \\<oplus>\n                   p2)\n\ngoal (1 subgoal):\n 1. q \\<in> ctermsl p", "using CHOICE"], ["proof (prove)\nusing this:\n  q \\<in> ctermsl (p1\n                   \\<oplus>\n                   p2)\n  p = p1\n      \\<oplus>\n      p2\n\ngoal (1 subgoal):\n 1. q \\<in> ctermsl p", "by simp"], ["proof (state)\nthis:\n  q \\<in> ctermsl p\n\ngoal (9 subgoals):\n 1. \\<And>x11 x12 x13.\n       \\<lbrakk>q \\<in> stermsl p; p = {x11}\\<langle>x12\\<rangle>\n                                   x13\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>q \\<in> stermsl p; p = {x21}\\<lbrakk>x22\\<rbrakk>\n                                   x23\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 3. \\<And>x41 x42 x43 x44 x45.\n       \\<lbrakk>q \\<in> stermsl p; p = {x41}unicast(x42, x43) .\n    x44 \\<triangleright> x45\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 4. \\<And>x51 x52 x53.\n       \\<lbrakk>q \\<in> stermsl p; p = {x51}broadcast(x52) .\n                                   x53\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 5. \\<And>x61 x62 x63 x64.\n       \\<lbrakk>q \\<in> stermsl p; p = {x61}groupcast(x62, x63) .\n                                   x64\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 6. \\<And>x71 x72 x73.\n       \\<lbrakk>q \\<in> stermsl p; p = {x71}send(x72) .\n                                   x73\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 7. \\<And>x81 x82 x83.\n       \\<lbrakk>q \\<in> stermsl p; p = {x81}deliver(x82) .\n                                   x83\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 8. \\<And>x91 x92 x93.\n       \\<lbrakk>q \\<in> stermsl p; p = {x91}receive(x92) .\n                                   x93\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p\n 9. \\<And>x10.\n       \\<lbrakk>q \\<in> stermsl p; p = call(x10)\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl p", "qed simp_all"], ["", "lemma stermsl_after_ctermsl [simp]:\n  \"(\\<Union>x\\<in>ctermsl p. stermsl x) = ctermsl p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (stermsl ` ctermsl p) = ctermsl p", "by (induct p) auto"], ["", "lemma stermsl_before_ctermsl [simp]:\n  \"(\\<Union>x\\<in>stermsl p. ctermsl x) = ctermsl p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (ctermsl ` stermsl p) = ctermsl p", "by (induct p) simp_all"], ["", "lemma ctermsl_no_choice: \"p1 \\<oplus> p2 \\<notin> ctermsl p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p1\n    \\<oplus>\n    p2\n    \\<notin> ctermsl p", "by (induct p) simp_all"], ["", "lemma ctermsl_ex_stermsl: \"q \\<in> ctermsl p \\<Longrightarrow> \\<exists>ps\\<in>stermsl p. q \\<in> ctermsl ps\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> ctermsl p \\<Longrightarrow>\n    \\<exists>ps\\<in>stermsl p. q \\<in> ctermsl ps", "by (induct p) auto"], ["", "lemma dterms_ctermsl [intro]:\n  assumes \"q \\<in> dterms \\<Gamma> p\"\n      and \"wellformed \\<Gamma>\"\n    shows \"q \\<in> ctermsl p \\<or> (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> ctermsl p \\<or> (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "using assms(1-2)"], ["proof (prove)\nusing this:\n  q \\<in> dterms \\<Gamma> p\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. q \\<in> ctermsl p \\<or> (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "proof (induction p rule: dterms_pinduct [OF \\<open>wellformed \\<Gamma>\\<close>])"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> l g p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}\\<langle>g\\<rangle>\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}\\<langle>g\\<rangle>\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl ({l}\\<langle>g\\<rangle>\n    p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 2. \\<And>\\<Gamma> l u p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}\\<lbrakk>u\\<rbrakk>\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>u\\<rbrakk>\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n    p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 3. \\<And>\\<Gamma> p1 p2.\n       \\<lbrakk>dterms_dom (\\<Gamma>, p1\n\\<oplus>\np2);\n        \\<lbrakk>q \\<in> dterms \\<Gamma> p1; wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p1 \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        \\<lbrakk>q \\<in> dterms \\<Gamma> p2; wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p2 \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        q \\<in> dterms \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl (p1\n    \\<oplus>\n    p2) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 4. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p qa.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        q \\<in> dterms \\<Gamma>\n                 ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}unicast(s\\<^sub>i\\<^sub>p,\n         s\\<^sub>m\\<^sub>s\\<^sub>g) .\np \\<triangleright> qa) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 5. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 6. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n           s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 7. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 8. \\<And>\\<Gamma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 9. \\<And>\\<Gamma> l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 10. \\<And>\\<Gamma> pn.\n        \\<lbrakk>dterms_dom (\\<Gamma>, call(pn));\n         \\<lbrakk>q \\<in> dterms \\<Gamma> (\\<Gamma> pn);\n          wellformed \\<Gamma>\\<rbrakk>\n         \\<Longrightarrow> q \\<in> ctermsl (\\<Gamma> pn) \\<or>\n                           (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n         q \\<in> dterms \\<Gamma> (call(pn)); wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl (call(pn)) \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "fix \\<Gamma> l fg p"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> l g p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}\\<langle>g\\<rangle>\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}\\<langle>g\\<rangle>\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl ({l}\\<langle>g\\<rangle>\n    p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 2. \\<And>\\<Gamma> l u p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}\\<lbrakk>u\\<rbrakk>\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>u\\<rbrakk>\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n    p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 3. \\<And>\\<Gamma> p1 p2.\n       \\<lbrakk>dterms_dom (\\<Gamma>, p1\n\\<oplus>\np2);\n        \\<lbrakk>q \\<in> dterms \\<Gamma> p1; wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p1 \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        \\<lbrakk>q \\<in> dterms \\<Gamma> p2; wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p2 \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        q \\<in> dterms \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl (p1\n    \\<oplus>\n    p2) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 4. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p qa.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        q \\<in> dterms \\<Gamma>\n                 ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}unicast(s\\<^sub>i\\<^sub>p,\n         s\\<^sub>m\\<^sub>s\\<^sub>g) .\np \\<triangleright> qa) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 5. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 6. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n           s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 7. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 8. \\<And>\\<Gamma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 9. \\<And>\\<Gamma> l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 10. \\<And>\\<Gamma> pn.\n        \\<lbrakk>dterms_dom (\\<Gamma>, call(pn));\n         \\<lbrakk>q \\<in> dterms \\<Gamma> (\\<Gamma> pn);\n          wellformed \\<Gamma>\\<rbrakk>\n         \\<Longrightarrow> q \\<in> ctermsl (\\<Gamma> pn) \\<or>\n                           (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n         q \\<in> dterms \\<Gamma> (call(pn)); wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl (call(pn)) \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "assume \"q \\<in> dterms \\<Gamma> ({l}\\<langle>fg\\<rangle> p)\"\n       and \"wellformed \\<Gamma>\""], ["proof (state)\nthis:\n  q \\<in> dterms \\<Gamma> ({l}\\<langle>fg\\<rangle>\n                           p)\n  wellformed \\<Gamma>\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> l g p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}\\<langle>g\\<rangle>\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}\\<langle>g\\<rangle>\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl ({l}\\<langle>g\\<rangle>\n    p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 2. \\<And>\\<Gamma> l u p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}\\<lbrakk>u\\<rbrakk>\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>u\\<rbrakk>\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n    p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 3. \\<And>\\<Gamma> p1 p2.\n       \\<lbrakk>dterms_dom (\\<Gamma>, p1\n\\<oplus>\np2);\n        \\<lbrakk>q \\<in> dterms \\<Gamma> p1; wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p1 \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        \\<lbrakk>q \\<in> dterms \\<Gamma> p2; wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p2 \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        q \\<in> dterms \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl (p1\n    \\<oplus>\n    p2) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 4. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p qa.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        q \\<in> dterms \\<Gamma>\n                 ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}unicast(s\\<^sub>i\\<^sub>p,\n         s\\<^sub>m\\<^sub>s\\<^sub>g) .\np \\<triangleright> qa) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 5. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 6. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n           s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 7. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 8. \\<And>\\<Gamma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 9. \\<And>\\<Gamma> l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 10. \\<And>\\<Gamma> pn.\n        \\<lbrakk>dterms_dom (\\<Gamma>, call(pn));\n         \\<lbrakk>q \\<in> dterms \\<Gamma> (\\<Gamma> pn);\n          wellformed \\<Gamma>\\<rbrakk>\n         \\<Longrightarrow> q \\<in> ctermsl (\\<Gamma> pn) \\<or>\n                           (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n         q \\<in> dterms \\<Gamma> (call(pn)); wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl (call(pn)) \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "hence \"q \\<in> sterms \\<Gamma> p\""], ["proof (prove)\nusing this:\n  q \\<in> dterms \\<Gamma> ({l}\\<langle>fg\\<rangle>\n                           p)\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. q \\<in> sterms \\<Gamma> p", "by simp"], ["proof (state)\nthis:\n  q \\<in> sterms \\<Gamma> p\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> l g p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}\\<langle>g\\<rangle>\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}\\<langle>g\\<rangle>\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl ({l}\\<langle>g\\<rangle>\n    p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 2. \\<And>\\<Gamma> l u p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}\\<lbrakk>u\\<rbrakk>\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>u\\<rbrakk>\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n    p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 3. \\<And>\\<Gamma> p1 p2.\n       \\<lbrakk>dterms_dom (\\<Gamma>, p1\n\\<oplus>\np2);\n        \\<lbrakk>q \\<in> dterms \\<Gamma> p1; wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p1 \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        \\<lbrakk>q \\<in> dterms \\<Gamma> p2; wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p2 \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        q \\<in> dterms \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl (p1\n    \\<oplus>\n    p2) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 4. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p qa.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        q \\<in> dterms \\<Gamma>\n                 ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}unicast(s\\<^sub>i\\<^sub>p,\n         s\\<^sub>m\\<^sub>s\\<^sub>g) .\np \\<triangleright> qa) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 5. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 6. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n           s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 7. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 8. \\<And>\\<Gamma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 9. \\<And>\\<Gamma> l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 10. \\<And>\\<Gamma> pn.\n        \\<lbrakk>dterms_dom (\\<Gamma>, call(pn));\n         \\<lbrakk>q \\<in> dterms \\<Gamma> (\\<Gamma> pn);\n          wellformed \\<Gamma>\\<rbrakk>\n         \\<Longrightarrow> q \\<in> ctermsl (\\<Gamma> pn) \\<or>\n                           (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n         q \\<in> dterms \\<Gamma> (call(pn)); wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl (call(pn)) \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "hence \"q \\<in> stermsl p \\<or> (\\<exists>pn. q \\<in> stermsl (\\<Gamma> pn))\""], ["proof (prove)\nusing this:\n  q \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. q \\<in> stermsl p \\<or> (\\<exists>pn. q \\<in> stermsl (\\<Gamma> pn))", "using \\<open>wellformed \\<Gamma>\\<close>"], ["proof (prove)\nusing this:\n  q \\<in> sterms \\<Gamma> p\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. q \\<in> stermsl p \\<or> (\\<exists>pn. q \\<in> stermsl (\\<Gamma> pn))", "by (rule sterms_stermsl)"], ["proof (state)\nthis:\n  q \\<in> stermsl p \\<or> (\\<exists>pn. q \\<in> stermsl (\\<Gamma> pn))\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> l g p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}\\<langle>g\\<rangle>\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}\\<langle>g\\<rangle>\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl ({l}\\<langle>g\\<rangle>\n    p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 2. \\<And>\\<Gamma> l u p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}\\<lbrakk>u\\<rbrakk>\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>u\\<rbrakk>\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n    p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 3. \\<And>\\<Gamma> p1 p2.\n       \\<lbrakk>dterms_dom (\\<Gamma>, p1\n\\<oplus>\np2);\n        \\<lbrakk>q \\<in> dterms \\<Gamma> p1; wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p1 \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        \\<lbrakk>q \\<in> dterms \\<Gamma> p2; wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p2 \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        q \\<in> dterms \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl (p1\n    \\<oplus>\n    p2) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 4. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p qa.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        q \\<in> dterms \\<Gamma>\n                 ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}unicast(s\\<^sub>i\\<^sub>p,\n         s\\<^sub>m\\<^sub>s\\<^sub>g) .\np \\<triangleright> qa) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 5. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 6. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n           s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 7. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 8. \\<And>\\<Gamma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 9. \\<And>\\<Gamma> l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 10. \\<And>\\<Gamma> pn.\n        \\<lbrakk>dterms_dom (\\<Gamma>, call(pn));\n         \\<lbrakk>q \\<in> dterms \\<Gamma> (\\<Gamma> pn);\n          wellformed \\<Gamma>\\<rbrakk>\n         \\<Longrightarrow> q \\<in> ctermsl (\\<Gamma> pn) \\<or>\n                           (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n         q \\<in> dterms \\<Gamma> (call(pn)); wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl (call(pn)) \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "thus \"q \\<in> ctermsl ({l}\\<langle>fg\\<rangle> p) \\<or> (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\""], ["proof (prove)\nusing this:\n  q \\<in> stermsl p \\<or> (\\<exists>pn. q \\<in> stermsl (\\<Gamma> pn))\n\ngoal (1 subgoal):\n 1. q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                     p) \\<or>\n    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. q \\<in> stermsl p \\<Longrightarrow>\n    q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                     p) \\<or>\n    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 2. \\<exists>pn. q \\<in> stermsl (\\<Gamma> pn) \\<Longrightarrow>\n    q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                     p) \\<or>\n    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "assume \"q \\<in> stermsl p\""], ["proof (state)\nthis:\n  q \\<in> stermsl p\n\ngoal (2 subgoals):\n 1. q \\<in> stermsl p \\<Longrightarrow>\n    q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                     p) \\<or>\n    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 2. \\<exists>pn. q \\<in> stermsl (\\<Gamma> pn) \\<Longrightarrow>\n    q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                     p) \\<or>\n    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "hence \"q \\<in> ctermsl p\""], ["proof (prove)\nusing this:\n  q \\<in> stermsl p\n\ngoal (1 subgoal):\n 1. q \\<in> ctermsl p", "by (rule stermsl_ctermsl)"], ["proof (state)\nthis:\n  q \\<in> ctermsl p\n\ngoal (2 subgoals):\n 1. q \\<in> stermsl p \\<Longrightarrow>\n    q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                     p) \\<or>\n    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 2. \\<exists>pn. q \\<in> stermsl (\\<Gamma> pn) \\<Longrightarrow>\n    q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                     p) \\<or>\n    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "hence \"q \\<in> ctermsl ({l}\\<langle>fg\\<rangle> p)\""], ["proof (prove)\nusing this:\n  q \\<in> ctermsl p\n\ngoal (1 subgoal):\n 1. q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                     p)", "by simp"], ["proof (state)\nthis:\n  q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                   p)\n\ngoal (2 subgoals):\n 1. q \\<in> stermsl p \\<Longrightarrow>\n    q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                     p) \\<or>\n    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 2. \\<exists>pn. q \\<in> stermsl (\\<Gamma> pn) \\<Longrightarrow>\n    q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                     p) \\<or>\n    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "thus ?thesis"], ["proof (prove)\nusing this:\n  q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                   p)\n\ngoal (1 subgoal):\n 1. q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                     p) \\<or>\n    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", ".."], ["proof (state)\nthis:\n  q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                   p) \\<or>\n  (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n\ngoal (1 subgoal):\n 1. \\<exists>pn. q \\<in> stermsl (\\<Gamma> pn) \\<Longrightarrow>\n    q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                     p) \\<or>\n    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>pn. q \\<in> stermsl (\\<Gamma> pn) \\<Longrightarrow>\n    q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                     p) \\<or>\n    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "assume \"\\<exists>pn. q \\<in> stermsl (\\<Gamma> pn)\""], ["proof (state)\nthis:\n  \\<exists>pn. q \\<in> stermsl (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<exists>pn. q \\<in> stermsl (\\<Gamma> pn) \\<Longrightarrow>\n    q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                     p) \\<or>\n    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "then"], ["proof (chain)\npicking this:\n  \\<exists>pn. q \\<in> stermsl (\\<Gamma> pn)", "obtain pn where \"q \\<in> stermsl (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  \\<exists>pn. q \\<in> stermsl (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. (\\<And>pn.\n        q \\<in> stermsl (\\<Gamma> pn) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  q \\<in> stermsl (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<exists>pn. q \\<in> stermsl (\\<Gamma> pn) \\<Longrightarrow>\n    q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                     p) \\<or>\n    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "hence \"q \\<in> ctermsl (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  q \\<in> stermsl (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. q \\<in> ctermsl (\\<Gamma> pn)", "by (rule stermsl_ctermsl)"], ["proof (state)\nthis:\n  q \\<in> ctermsl (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<exists>pn. q \\<in> stermsl (\\<Gamma> pn) \\<Longrightarrow>\n    q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                     p) \\<or>\n    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "hence \"\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  q \\<in> ctermsl (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn)", ".."], ["proof (state)\nthis:\n  \\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<exists>pn. q \\<in> stermsl (\\<Gamma> pn) \\<Longrightarrow>\n    q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                     p) \\<or>\n    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                     p) \\<or>\n    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", ".."], ["proof (state)\nthis:\n  q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                   p) \\<or>\n  (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  q \\<in> ctermsl ({l}\\<langle>fg\\<rangle>\n                   p) \\<or>\n  (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n\ngoal (9 subgoals):\n 1. \\<And>\\<Gamma> l u p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}\\<lbrakk>u\\<rbrakk>\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>u\\<rbrakk>\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n    p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 2. \\<And>\\<Gamma> p1 p2.\n       \\<lbrakk>dterms_dom (\\<Gamma>, p1\n\\<oplus>\np2);\n        \\<lbrakk>q \\<in> dterms \\<Gamma> p1; wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p1 \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        \\<lbrakk>q \\<in> dterms \\<Gamma> p2; wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p2 \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        q \\<in> dterms \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl (p1\n    \\<oplus>\n    p2) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 3. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p qa.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        q \\<in> dterms \\<Gamma>\n                 ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}unicast(s\\<^sub>i\\<^sub>p,\n         s\\<^sub>m\\<^sub>s\\<^sub>g) .\np \\<triangleright> qa) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 4. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 5. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n           s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 6. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 7. \\<And>\\<Gamma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 8. \\<And>\\<Gamma> l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 9. \\<And>\\<Gamma> pn.\n       \\<lbrakk>dterms_dom (\\<Gamma>, call(pn));\n        \\<lbrakk>q \\<in> dterms \\<Gamma> (\\<Gamma> pn);\n         wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl (\\<Gamma> pn) \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        q \\<in> dterms \\<Gamma> (call(pn)); wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl (call(pn)) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>\\<Gamma> l u p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}\\<lbrakk>u\\<rbrakk>\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>u\\<rbrakk>\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n    p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 2. \\<And>\\<Gamma> p1 p2.\n       \\<lbrakk>dterms_dom (\\<Gamma>, p1\n\\<oplus>\np2);\n        \\<lbrakk>q \\<in> dterms \\<Gamma> p1; wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p1 \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        \\<lbrakk>q \\<in> dterms \\<Gamma> p2; wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p2 \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        q \\<in> dterms \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl (p1\n    \\<oplus>\n    p2) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 3. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p qa.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        q \\<in> dterms \\<Gamma>\n                 ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}unicast(s\\<^sub>i\\<^sub>p,\n         s\\<^sub>m\\<^sub>s\\<^sub>g) .\np \\<triangleright> qa) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 4. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 5. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n           s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 6. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 7. \\<And>\\<Gamma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 8. \\<And>\\<Gamma> l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 9. \\<And>\\<Gamma> pn.\n       \\<lbrakk>dterms_dom (\\<Gamma>, call(pn));\n        \\<lbrakk>q \\<in> dterms \\<Gamma> (\\<Gamma> pn);\n         wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl (\\<Gamma> pn) \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        q \\<in> dterms \\<Gamma> (call(pn)); wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl (call(pn)) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "fix \\<Gamma> p1 p2"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>\\<Gamma> l u p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}\\<lbrakk>u\\<rbrakk>\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>u\\<rbrakk>\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n    p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 2. \\<And>\\<Gamma> p1 p2.\n       \\<lbrakk>dterms_dom (\\<Gamma>, p1\n\\<oplus>\np2);\n        \\<lbrakk>q \\<in> dterms \\<Gamma> p1; wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p1 \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        \\<lbrakk>q \\<in> dterms \\<Gamma> p2; wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p2 \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        q \\<in> dterms \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl (p1\n    \\<oplus>\n    p2) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 3. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p qa.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        q \\<in> dterms \\<Gamma>\n                 ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}unicast(s\\<^sub>i\\<^sub>p,\n         s\\<^sub>m\\<^sub>s\\<^sub>g) .\np \\<triangleright> qa) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 4. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 5. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n           s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 6. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 7. \\<And>\\<Gamma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 8. \\<And>\\<Gamma> l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 9. \\<And>\\<Gamma> pn.\n       \\<lbrakk>dterms_dom (\\<Gamma>, call(pn));\n        \\<lbrakk>q \\<in> dterms \\<Gamma> (\\<Gamma> pn);\n         wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl (\\<Gamma> pn) \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        q \\<in> dterms \\<Gamma> (call(pn)); wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl (call(pn)) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "assume \"q \\<in> dterms \\<Gamma> (p1 \\<oplus> p2)\"\n       and IH1: \"\\<lbrakk> q \\<in> dterms \\<Gamma> p1; wellformed \\<Gamma> \\<rbrakk> \\<Longrightarrow> q \\<in> ctermsl p1 \\<or> (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\"\n       and IH2: \"\\<lbrakk> q \\<in> dterms \\<Gamma> p2; wellformed \\<Gamma> \\<rbrakk> \\<Longrightarrow> q \\<in> ctermsl p2 \\<or> (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\"\n       and \"wellformed \\<Gamma>\""], ["proof (state)\nthis:\n  q \\<in> dterms \\<Gamma> (p1\n                           \\<oplus>\n                           p2)\n  \\<lbrakk>q \\<in> dterms \\<Gamma> p1; wellformed \\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> q \\<in> ctermsl p1 \\<or>\n                    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n  \\<lbrakk>q \\<in> dterms \\<Gamma> p2; wellformed \\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> q \\<in> ctermsl p2 \\<or>\n                    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n  wellformed \\<Gamma>\n\ngoal (9 subgoals):\n 1. \\<And>\\<Gamma> l u p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}\\<lbrakk>u\\<rbrakk>\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>u\\<rbrakk>\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n    p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 2. \\<And>\\<Gamma> p1 p2.\n       \\<lbrakk>dterms_dom (\\<Gamma>, p1\n\\<oplus>\np2);\n        \\<lbrakk>q \\<in> dterms \\<Gamma> p1; wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p1 \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        \\<lbrakk>q \\<in> dterms \\<Gamma> p2; wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl p2 \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        q \\<in> dterms \\<Gamma> (p1\n                                 \\<oplus>\n                                 p2);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl (p1\n    \\<oplus>\n    p2) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 3. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p qa.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        q \\<in> dterms \\<Gamma>\n                 ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}unicast(s\\<^sub>i\\<^sub>p,\n         s\\<^sub>m\\<^sub>s\\<^sub>g) .\np \\<triangleright> qa) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 4. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 5. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n           s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 6. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 7. \\<And>\\<Gamma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 8. \\<And>\\<Gamma> l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 9. \\<And>\\<Gamma> pn.\n       \\<lbrakk>dterms_dom (\\<Gamma>, call(pn));\n        \\<lbrakk>q \\<in> dterms \\<Gamma> (\\<Gamma> pn);\n         wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl (\\<Gamma> pn) \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        q \\<in> dterms \\<Gamma> (call(pn)); wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl (call(pn)) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "thus \"q \\<in> ctermsl (p1 \\<oplus> p2) \\<or> (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\""], ["proof (prove)\nusing this:\n  q \\<in> dterms \\<Gamma> (p1\n                           \\<oplus>\n                           p2)\n  \\<lbrakk>q \\<in> dterms \\<Gamma> p1; wellformed \\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> q \\<in> ctermsl p1 \\<or>\n                    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n  \\<lbrakk>q \\<in> dterms \\<Gamma> p2; wellformed \\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> q \\<in> ctermsl p2 \\<or>\n                    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. q \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2) \\<or>\n    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "by auto"], ["proof (state)\nthis:\n  q \\<in> ctermsl (p1\n                   \\<oplus>\n                   p2) \\<or>\n  (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> l u p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}\\<lbrakk>u\\<rbrakk>\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>u\\<rbrakk>\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n    p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 2. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p qa.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        q \\<in> dterms \\<Gamma>\n                 ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}unicast(s\\<^sub>i\\<^sub>p,\n         s\\<^sub>m\\<^sub>s\\<^sub>g) .\np \\<triangleright> qa) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 3. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 4. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n           s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 5. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 6. \\<And>\\<Gamma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 7. \\<And>\\<Gamma> l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 8. \\<And>\\<Gamma> pn.\n       \\<lbrakk>dterms_dom (\\<Gamma>, call(pn));\n        \\<lbrakk>q \\<in> dterms \\<Gamma> (\\<Gamma> pn);\n         wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl (\\<Gamma> pn) \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        q \\<in> dterms \\<Gamma> (call(pn)); wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl (call(pn)) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> l u p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}\\<lbrakk>u\\<rbrakk>\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>u\\<rbrakk>\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n    p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 2. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p qa.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        q \\<in> dterms \\<Gamma>\n                 ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}unicast(s\\<^sub>i\\<^sub>p,\n         s\\<^sub>m\\<^sub>s\\<^sub>g) .\np \\<triangleright> qa) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 3. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 4. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n           s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 5. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 6. \\<And>\\<Gamma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 7. \\<And>\\<Gamma> l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 8. \\<And>\\<Gamma> pn.\n       \\<lbrakk>dterms_dom (\\<Gamma>, call(pn));\n        \\<lbrakk>q \\<in> dterms \\<Gamma> (\\<Gamma> pn);\n         wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl (\\<Gamma> pn) \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        q \\<in> dterms \\<Gamma> (call(pn)); wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl (call(pn)) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "fix \\<Gamma> pn"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> l u p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}\\<lbrakk>u\\<rbrakk>\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>u\\<rbrakk>\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n    p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 2. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p qa.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        q \\<in> dterms \\<Gamma>\n                 ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}unicast(s\\<^sub>i\\<^sub>p,\n         s\\<^sub>m\\<^sub>s\\<^sub>g) .\np \\<triangleright> qa) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 3. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 4. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n           s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 5. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 6. \\<And>\\<Gamma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 7. \\<And>\\<Gamma> l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 8. \\<And>\\<Gamma> pn.\n       \\<lbrakk>dterms_dom (\\<Gamma>, call(pn));\n        \\<lbrakk>q \\<in> dterms \\<Gamma> (\\<Gamma> pn);\n         wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl (\\<Gamma> pn) \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        q \\<in> dterms \\<Gamma> (call(pn)); wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl (call(pn)) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "assume \"q \\<in> dterms \\<Gamma> (call(pn))\"\n       and \"wellformed \\<Gamma>\"\n       and \"\\<lbrakk> q \\<in> dterms \\<Gamma> (\\<Gamma> pn); wellformed \\<Gamma> \\<rbrakk> \\<Longrightarrow> q \\<in> ctermsl (\\<Gamma> pn) \\<or> (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\""], ["proof (state)\nthis:\n  q \\<in> dterms \\<Gamma> (call(pn))\n  wellformed \\<Gamma>\n  \\<lbrakk>q \\<in> dterms \\<Gamma> (\\<Gamma> pn);\n   wellformed \\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> q \\<in> ctermsl (\\<Gamma> pn) \\<or>\n                    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> l u p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}\\<lbrakk>u\\<rbrakk>\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>u\\<rbrakk>\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n    p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 2. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p qa.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        q \\<in> dterms \\<Gamma>\n                 ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}unicast(s\\<^sub>i\\<^sub>p,\n         s\\<^sub>m\\<^sub>s\\<^sub>g) .\np \\<triangleright> qa) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 3. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 4. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n           s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 5. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 6. \\<And>\\<Gamma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 7. \\<And>\\<Gamma> l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 8. \\<And>\\<Gamma> pn.\n       \\<lbrakk>dterms_dom (\\<Gamma>, call(pn));\n        \\<lbrakk>q \\<in> dterms \\<Gamma> (\\<Gamma> pn);\n         wellformed \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> q \\<in> ctermsl (\\<Gamma> pn) \\<or>\n                          (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn));\n        q \\<in> dterms \\<Gamma> (call(pn)); wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl (call(pn)) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "thus \"q \\<in> ctermsl (call(pn)) \\<or> (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\""], ["proof (prove)\nusing this:\n  q \\<in> dterms \\<Gamma> (call(pn))\n  wellformed \\<Gamma>\n  \\<lbrakk>q \\<in> dterms \\<Gamma> (\\<Gamma> pn);\n   wellformed \\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> q \\<in> ctermsl (\\<Gamma> pn) \\<or>\n                    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n\ngoal (1 subgoal):\n 1. q \\<in> ctermsl (call(pn)) \\<or>\n    (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "by auto"], ["proof (state)\nthis:\n  q \\<in> ctermsl (call(pn)) \\<or>\n  (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> l u p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}\\<lbrakk>u\\<rbrakk>\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}\\<lbrakk>u\\<rbrakk>\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl ({l}\\<lbrakk>u\\<rbrakk>\n    p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 2. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p qa.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        q \\<in> dterms \\<Gamma>\n                 ({l}unicast(s\\<^sub>i\\<^sub>p, s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                     p \\<triangleright> qa);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}unicast(s\\<^sub>i\\<^sub>p,\n         s\\<^sub>m\\<^sub>s\\<^sub>g) .\np \\<triangleright> qa) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 3. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 4. \\<And>\\<Gamma> l s\\<^sub>i\\<^sub>p\\<^sub>s s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>,\n                  {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n                                s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n           s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 5. \\<And>\\<Gamma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom (\\<Gamma>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                            p);\n        q \\<in> dterms \\<Gamma> ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 6. \\<And>\\<Gamma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        q \\<in> dterms \\<Gamma>\n                 ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                  p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))\n 7. \\<And>\\<Gamma> l u\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>dterms_dom\n                 (\\<Gamma>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                  p);\n        q \\<in> dterms \\<Gamma> ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                 p);\n        wellformed \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> q \\<in> ctermsl\n                                  ({l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                   p) \\<or>\n                         (\\<exists>pn. q \\<in> ctermsl (\\<Gamma> pn))", "qed (simp_all, (metis sterms_stermsl stermsl_ctermsl)+)"], ["", "lemma ctermsl_cterms [elim]:\n  assumes \"q \\<in> ctermsl p\"\n      and \"not_call q\"\n      and \"sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>\"\n      and \"wellformed \\<Gamma>\"\n    shows \"q \\<in> cterms \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> cterms \\<Gamma>", "using assms"], ["proof (prove)\nusing this:\n  q \\<in> ctermsl p\n  not_call q\n  sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. q \\<in> cterms \\<Gamma>", "by (induct p rule: ctermsl.induct) auto"], ["", "subsection \"Local deriviative terms\""], ["", "text \\<open>\n  We define local @{term \"dterm\"}s for use in the theorem that relates @{term \"cterms\"}\n  and sets of @{term \"ctermsl\"}.\n\\<close>"], ["", "function dtermsl\n  :: \"('s, 'm, 'p, 'l) seqp \\<Rightarrow> ('s, 'm, 'p, 'l) seqp set\"\n  where\n    \"dtermsl ({l}\\<langle>fg\\<rangle> p)                     = stermsl p\"\n  | \"dtermsl ({l}\\<lbrakk>fa\\<rbrakk> p)                     = stermsl p\"\n  | \"dtermsl (p1 \\<oplus> p2)                      = dtermsl p1 \\<union> dtermsl p2\"\n  | \"dtermsl ({l}unicast(fip, fmsg).p \\<triangleright> q)  = stermsl p \\<union> stermsl q\"\n  | \"dtermsl ({l}broadcast(fmsg). p)         = stermsl p\"\n  | \"dtermsl ({l}groupcast(fips, fmsg). p)   = stermsl p\"\n  | \"dtermsl ({l}send(fmsg).p)               = stermsl p\"\n  | \"dtermsl ({l}deliver(fdata).p)           = stermsl p\"\n  | \"dtermsl ({l}receive(fmsg).p)            = stermsl p\"\n  | \"dtermsl (call(pn))                      = {}\""], ["proof (prove)\ngoal (56 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>l fg p.\n                   x = {l}\\<langle>fg\\<rangle>\n                   p \\<Longrightarrow>\n                   P;\n        \\<And>l fa p. x = {l}\\<lbrakk>fa\\<rbrakk>\n                      p \\<Longrightarrow>\n                      P;\n        \\<And>p1 p2. x = p1\n                         \\<oplus>\n                         p2 \\<Longrightarrow>\n                     P;\n        \\<And>l fip fmsg p q.\n           x = {l}unicast(fip, fmsg) .\n                  p \\<triangleright> q \\<Longrightarrow>\n           P;\n        \\<And>l fmsg p. x = {l}broadcast(fmsg) .\n                        p \\<Longrightarrow>\n                        P;\n        \\<And>l fips fmsg p.\n           x = {l}groupcast(fips, fmsg) .\n           p \\<Longrightarrow>\n           P;\n        \\<And>l fmsg p. x = {l}send(fmsg) .\n                        p \\<Longrightarrow>\n                        P;\n        \\<And>l fdata p. x = {l}deliver(fdata) .\n                         p \\<Longrightarrow>\n                         P;\n        \\<And>l fmsg p. x = {l}receive(fmsg) .\n                        p \\<Longrightarrow>\n                        P;\n        \\<And>pn. x = call(pn) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>l fg p la fga pa.\n       {l}\\<langle>fg\\<rangle>\n       p = {la}\\<langle>fga\\<rangle>\n       pa \\<Longrightarrow>\n       stermsl p = stermsl pa\n 3. \\<And>l fg p la fa pa.\n       {l}\\<langle>fg\\<rangle>\n       p = {la}\\<lbrakk>fa\\<rbrakk>\n       pa \\<Longrightarrow>\n       stermsl p = stermsl pa\n 4. \\<And>l fg p p1 p2.\n       {l}\\<langle>fg\\<rangle>\n       p = p1\n           \\<oplus>\n           p2 \\<Longrightarrow>\n       stermsl p = dtermsl_sumC p1 \\<union> dtermsl_sumC p2\n 5. \\<And>l fg p la fip fmsg pa q.\n       {l}\\<langle>fg\\<rangle>\n       p = {la}unicast(fip, fmsg) .\n              pa \\<triangleright> q \\<Longrightarrow>\n       stermsl p = stermsl pa \\<union> stermsl q\n 6. \\<And>l fg p la fmsg pa.\n       {l}\\<langle>fg\\<rangle>\n       p = {la}broadcast(fmsg) .\n       pa \\<Longrightarrow>\n       stermsl p = stermsl pa\n 7. \\<And>l fg p la fips fmsg pa.\n       {l}\\<langle>fg\\<rangle>\n       p = {la}groupcast(fips, fmsg) .\n       pa \\<Longrightarrow>\n       stermsl p = stermsl pa\n 8. \\<And>l fg p la fmsg pa.\n       {l}\\<langle>fg\\<rangle>\n       p = {la}send(fmsg) .\n       pa \\<Longrightarrow>\n       stermsl p = stermsl pa\n 9. \\<And>l fg p la fdata pa.\n       {l}\\<langle>fg\\<rangle>\n       p = {la}deliver(fdata) .\n       pa \\<Longrightarrow>\n       stermsl p = stermsl pa\n 10. \\<And>l fg p la fmsg pa.\n        {l}\\<langle>fg\\<rangle>\n        p = {la}receive(fmsg) .\n        pa \\<Longrightarrow>\n        stermsl p = stermsl pa\nA total of 56 subgoals...", "by pat_completeness auto"], ["", "termination"], ["proof (prove)\ngoal (1 subgoal):\n 1. All dtermsl_dom", "by (relation \"measure(size)\") (auto dest: stermsl_nobigger)"], ["", "lemma stermsl_after_dtermsl [simp]:\n  shows \"(\\<Union>x\\<in>dtermsl p. stermsl x) = dtermsl p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (stermsl ` dtermsl p) = dtermsl p", "by (induct p) simp_all"], ["", "lemma stermsl_before_dtermsl [simp]:\n  \"(\\<Union>x\\<in>stermsl p. dtermsl x) = dtermsl p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (dtermsl ` stermsl p) = dtermsl p", "by (induct p) simp_all"], ["", "lemma dtermsl_no_choice [simp]: \"p1 \\<oplus> p2 \\<notin> dtermsl p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p1\n    \\<oplus>\n    p2\n    \\<notin> dtermsl p", "by (induct p) simp_all"], ["", "lemma dtermsl_choice_disj [simp]:\n  \"p \\<in> dtermsl (p1 \\<oplus> p2) = (p \\<in> dtermsl p1 \\<or> p \\<in> dtermsl p2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p \\<in> dtermsl (p1\n                      \\<oplus>\n                      p2)) =\n    (p \\<in> dtermsl p1 \\<or> p \\<in> dtermsl p2)", "by simp"], ["", "lemma dtermsl_in_branch [elim]:\n  \"\\<lbrakk>p \\<in> dtermsl (p1 \\<oplus> p2); p \\<in> dtermsl p1 \\<Longrightarrow> P; p \\<in> dtermsl p2 \\<Longrightarrow> P\\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> dtermsl (p1\n                              \\<oplus>\n                              p2);\n     p \\<in> dtermsl p1 \\<Longrightarrow> P;\n     p \\<in> dtermsl p2 \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by auto"], ["", "lemma ctermsl_dtermsl [elim]:\n  assumes \"q \\<in> dtermsl p\"\n    shows \"q \\<in> ctermsl p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> ctermsl p", "using assms"], ["proof (prove)\nusing this:\n  q \\<in> dtermsl p\n\ngoal (1 subgoal):\n 1. q \\<in> ctermsl p", "by (induct p) (simp_all, (metis stermsl_ctermsl)+)"], ["", "lemma dtermsl_dterms [elim]:\n  assumes \"q \\<in> dtermsl p\"\n      and \"not_call q\"\n      and \"wellformed \\<Gamma>\"\n    shows \"q \\<in> dterms \\<Gamma> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> dterms \\<Gamma> p", "using assms"], ["proof (prove)\nusing this:\n  q \\<in> dtermsl p\n  not_call q\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. q \\<in> dterms \\<Gamma> p", "using assms"], ["proof (prove)\nusing this:\n  q \\<in> dtermsl p\n  not_call q\n  wellformed \\<Gamma>\n  q \\<in> dtermsl p\n  not_call q\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. q \\<in> dterms \\<Gamma> p", "by (induct p) (simp_all, (metis stermsl_sterms)+)"], ["", "lemma ctermsl_stermsl_or_dtermsl:\n  assumes \"q \\<in> ctermsl p\"\n    shows \"q \\<in> stermsl p \\<or> (\\<exists>p'\\<in>dtermsl p. q \\<in> ctermsl p')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> stermsl p \\<or> (\\<exists>p'\\<in>dtermsl p. q \\<in> ctermsl p')", "using assms"], ["proof (prove)\nusing this:\n  q \\<in> ctermsl p\n\ngoal (1 subgoal):\n 1. q \\<in> stermsl p \\<or> (\\<exists>p'\\<in>dtermsl p. q \\<in> ctermsl p')", "by (induct p) (auto dest: ctermsl_ex_stermsl)"], ["", "lemma dtermsl_add_stermsl_beforeD:\n  assumes \"q \\<in> dtermsl p\"\n    shows \"\\<exists>ps\\<in>stermsl p. q \\<in> dtermsl ps\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ps\\<in>stermsl p. q \\<in> dtermsl ps", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ps\\<in>stermsl p. q \\<in> dtermsl ps", "from assms"], ["proof (chain)\npicking this:\n  q \\<in> dtermsl p", "have \"q \\<in> (\\<Union>x\\<in>stermsl p. dtermsl x)\""], ["proof (prove)\nusing this:\n  q \\<in> dtermsl p\n\ngoal (1 subgoal):\n 1. q \\<in> \\<Union> (dtermsl ` stermsl p)", "by auto"], ["proof (state)\nthis:\n  q \\<in> \\<Union> (dtermsl ` stermsl p)\n\ngoal (1 subgoal):\n 1. \\<exists>ps\\<in>stermsl p. q \\<in> dtermsl ps", "thus ?thesis"], ["proof (prove)\nusing this:\n  q \\<in> \\<Union> (dtermsl ` stermsl p)\n\ngoal (1 subgoal):\n 1. \\<exists>ps\\<in>stermsl p. q \\<in> dtermsl ps", "by (rule UN_E) auto"], ["proof (state)\nthis:\n  \\<exists>ps\\<in>stermsl p. q \\<in> dtermsl ps\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma call_dtermsl_empty [elim]:\n \"q \\<in> dtermsl p \\<Longrightarrow> not_call p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> dtermsl p \\<Longrightarrow> not_call p", "by (cases p) simp_all"], ["", "subsection \"More properties of control terms\""], ["", "text \\<open>\n  We now show an alternative definition of @{term \"cterms\"} based on sets of local control\n  terms. While the original definition has convenient induction and simplification rules,\n  useful for proving properties like cterms\\_includes\\_sterms\\_of\\_seq\\_reachable, this\n  definition makes it easier to systematically generate the set of control terms of a\n  process specification.\n\\<close>"], ["", "theorem cterms_def':\n  assumes wfg: \"wellformed \\<Gamma>\"\n    shows \"cterms \\<Gamma> = { p |p pn. p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p }\"\n          (is \"_ = ?ctermsl_set\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. cterms \\<Gamma> =\n    {uu_.\n     \\<exists>p pn.\n        uu_ = p \\<and> p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}", "proof (rule iffI [THEN set_eqI])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> cterms \\<Gamma> \\<Longrightarrow>\n       x \\<in> {uu_.\n                \\<exists>p pn.\n                   uu_ = p \\<and>\n                   p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n 2. \\<And>x.\n       x \\<in> {uu_.\n                \\<exists>p pn.\n                   uu_ = p \\<and>\n                   p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                   not_call p} \\<Longrightarrow>\n       x \\<in> cterms \\<Gamma>", "fix p"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> cterms \\<Gamma> \\<Longrightarrow>\n       x \\<in> {uu_.\n                \\<exists>p pn.\n                   uu_ = p \\<and>\n                   p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n 2. \\<And>x.\n       x \\<in> {uu_.\n                \\<exists>p pn.\n                   uu_ = p \\<and>\n                   p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                   not_call p} \\<Longrightarrow>\n       x \\<in> cterms \\<Gamma>", "assume \"p \\<in> cterms \\<Gamma>\""], ["proof (state)\nthis:\n  p \\<in> cterms \\<Gamma>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> cterms \\<Gamma> \\<Longrightarrow>\n       x \\<in> {uu_.\n                \\<exists>p pn.\n                   uu_ = p \\<and>\n                   p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n 2. \\<And>x.\n       x \\<in> {uu_.\n                \\<exists>p pn.\n                   uu_ = p \\<and>\n                   p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                   not_call p} \\<Longrightarrow>\n       x \\<in> cterms \\<Gamma>", "thus \"p \\<in> ?ctermsl_set\""], ["proof (prove)\nusing this:\n  p \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. p \\<in> {uu_.\n             \\<exists>p pn.\n                uu_ = p \\<and>\n                p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}", "proof (induction p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p pn.\n       p \\<in> sterms \\<Gamma> (\\<Gamma> pn) \\<Longrightarrow>\n       p \\<in> {uu_.\n                \\<exists>p pn.\n                   uu_ = p \\<and>\n                   p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n 2. \\<And>pp p.\n       \\<lbrakk>pp \\<in> cterms \\<Gamma>;\n        pp \\<in> {uu_.\n                  \\<exists>p pn.\n                     uu_ = p \\<and>\n                     p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p};\n        p \\<in> dterms \\<Gamma> pp\\<rbrakk>\n       \\<Longrightarrow> p \\<in> {uu_.\n                                  \\<exists>p pn.\n                                     uu_ = p \\<and>\n                                     p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                                     not_call p}", "fix p pn"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p pn.\n       p \\<in> sterms \\<Gamma> (\\<Gamma> pn) \\<Longrightarrow>\n       p \\<in> {uu_.\n                \\<exists>p pn.\n                   uu_ = p \\<and>\n                   p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n 2. \\<And>pp p.\n       \\<lbrakk>pp \\<in> cterms \\<Gamma>;\n        pp \\<in> {uu_.\n                  \\<exists>p pn.\n                     uu_ = p \\<and>\n                     p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p};\n        p \\<in> dterms \\<Gamma> pp\\<rbrakk>\n       \\<Longrightarrow> p \\<in> {uu_.\n                                  \\<exists>p pn.\n                                     uu_ = p \\<and>\n                                     p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                                     not_call p}", "assume \"p \\<in> sterms \\<Gamma> (\\<Gamma> pn)\""], ["proof (state)\nthis:\n  p \\<in> sterms \\<Gamma> (\\<Gamma> pn)\n\ngoal (2 subgoals):\n 1. \\<And>p pn.\n       p \\<in> sterms \\<Gamma> (\\<Gamma> pn) \\<Longrightarrow>\n       p \\<in> {uu_.\n                \\<exists>p pn.\n                   uu_ = p \\<and>\n                   p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n 2. \\<And>pp p.\n       \\<lbrakk>pp \\<in> cterms \\<Gamma>;\n        pp \\<in> {uu_.\n                  \\<exists>p pn.\n                     uu_ = p \\<and>\n                     p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p};\n        p \\<in> dterms \\<Gamma> pp\\<rbrakk>\n       \\<Longrightarrow> p \\<in> {uu_.\n                                  \\<exists>p pn.\n                                     uu_ = p \\<and>\n                                     p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                                     not_call p}", "then"], ["proof (chain)\npicking this:\n  p \\<in> sterms \\<Gamma> (\\<Gamma> pn)", "obtain pn' where \"p \\<in> stermsl (\\<Gamma> pn')\""], ["proof (prove)\nusing this:\n  p \\<in> sterms \\<Gamma> (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. (\\<And>pn'.\n        p \\<in> stermsl (\\<Gamma> pn') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using wfg"], ["proof (prove)\nusing this:\n  p \\<in> sterms \\<Gamma> (\\<Gamma> pn)\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. (\\<And>pn'.\n        p \\<in> stermsl (\\<Gamma> pn') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (blast dest: sterms_stermsl_heads)"], ["proof (state)\nthis:\n  p \\<in> stermsl (\\<Gamma> pn')\n\ngoal (2 subgoals):\n 1. \\<And>p pn.\n       p \\<in> sterms \\<Gamma> (\\<Gamma> pn) \\<Longrightarrow>\n       p \\<in> {uu_.\n                \\<exists>p pn.\n                   uu_ = p \\<and>\n                   p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n 2. \\<And>pp p.\n       \\<lbrakk>pp \\<in> cterms \\<Gamma>;\n        pp \\<in> {uu_.\n                  \\<exists>p pn.\n                     uu_ = p \\<and>\n                     p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p};\n        p \\<in> dterms \\<Gamma> pp\\<rbrakk>\n       \\<Longrightarrow> p \\<in> {uu_.\n                                  \\<exists>p pn.\n                                     uu_ = p \\<and>\n                                     p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                                     not_call p}", "hence \"p \\<in> ctermsl (\\<Gamma> pn')\""], ["proof (prove)\nusing this:\n  p \\<in> stermsl (\\<Gamma> pn')\n\ngoal (1 subgoal):\n 1. p \\<in> ctermsl (\\<Gamma> pn')", ".."], ["proof (state)\nthis:\n  p \\<in> ctermsl (\\<Gamma> pn')\n\ngoal (2 subgoals):\n 1. \\<And>p pn.\n       p \\<in> sterms \\<Gamma> (\\<Gamma> pn) \\<Longrightarrow>\n       p \\<in> {uu_.\n                \\<exists>p pn.\n                   uu_ = p \\<and>\n                   p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n 2. \\<And>pp p.\n       \\<lbrakk>pp \\<in> cterms \\<Gamma>;\n        pp \\<in> {uu_.\n                  \\<exists>p pn.\n                     uu_ = p \\<and>\n                     p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p};\n        p \\<in> dterms \\<Gamma> pp\\<rbrakk>\n       \\<Longrightarrow> p \\<in> {uu_.\n                                  \\<exists>p pn.\n                                     uu_ = p \\<and>\n                                     p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                                     not_call p}", "moreover"], ["proof (state)\nthis:\n  p \\<in> ctermsl (\\<Gamma> pn')\n\ngoal (2 subgoals):\n 1. \\<And>p pn.\n       p \\<in> sterms \\<Gamma> (\\<Gamma> pn) \\<Longrightarrow>\n       p \\<in> {uu_.\n                \\<exists>p pn.\n                   uu_ = p \\<and>\n                   p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n 2. \\<And>pp p.\n       \\<lbrakk>pp \\<in> cterms \\<Gamma>;\n        pp \\<in> {uu_.\n                  \\<exists>p pn.\n                     uu_ = p \\<and>\n                     p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p};\n        p \\<in> dterms \\<Gamma> pp\\<rbrakk>\n       \\<Longrightarrow> p \\<in> {uu_.\n                                  \\<exists>p pn.\n                                     uu_ = p \\<and>\n                                     p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                                     not_call p}", "from \\<open>p \\<in> sterms \\<Gamma> (\\<Gamma> pn)\\<close> wfg"], ["proof (chain)\npicking this:\n  p \\<in> sterms \\<Gamma> (\\<Gamma> pn)\n  wellformed \\<Gamma>", "have \"not_call p\""], ["proof (prove)\nusing this:\n  p \\<in> sterms \\<Gamma> (\\<Gamma> pn)\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. not_call p", "by simp"], ["proof (state)\nthis:\n  not_call p\n\ngoal (2 subgoals):\n 1. \\<And>p pn.\n       p \\<in> sterms \\<Gamma> (\\<Gamma> pn) \\<Longrightarrow>\n       p \\<in> {uu_.\n                \\<exists>p pn.\n                   uu_ = p \\<and>\n                   p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n 2. \\<And>pp p.\n       \\<lbrakk>pp \\<in> cterms \\<Gamma>;\n        pp \\<in> {uu_.\n                  \\<exists>p pn.\n                     uu_ = p \\<and>\n                     p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p};\n        p \\<in> dterms \\<Gamma> pp\\<rbrakk>\n       \\<Longrightarrow> p \\<in> {uu_.\n                                  \\<exists>p pn.\n                                     uu_ = p \\<and>\n                                     p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                                     not_call p}", "ultimately"], ["proof (chain)\npicking this:\n  p \\<in> ctermsl (\\<Gamma> pn')\n  not_call p", "show \"p \\<in> ?ctermsl_set\""], ["proof (prove)\nusing this:\n  p \\<in> ctermsl (\\<Gamma> pn')\n  not_call p\n\ngoal (1 subgoal):\n 1. p \\<in> {uu_.\n             \\<exists>p pn.\n                uu_ = p \\<and>\n                p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}", "by auto"], ["proof (state)\nthis:\n  p \\<in> {uu_.\n           \\<exists>p pn.\n              uu_ = p \\<and>\n              p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n\ngoal (1 subgoal):\n 1. \\<And>pp p.\n       \\<lbrakk>pp \\<in> cterms \\<Gamma>;\n        pp \\<in> {uu_.\n                  \\<exists>p pn.\n                     uu_ = p \\<and>\n                     p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p};\n        p \\<in> dterms \\<Gamma> pp\\<rbrakk>\n       \\<Longrightarrow> p \\<in> {uu_.\n                                  \\<exists>p pn.\n                                     uu_ = p \\<and>\n                                     p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                                     not_call p}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pp p.\n       \\<lbrakk>pp \\<in> cterms \\<Gamma>;\n        pp \\<in> {uu_.\n                  \\<exists>p pn.\n                     uu_ = p \\<and>\n                     p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p};\n        p \\<in> dterms \\<Gamma> pp\\<rbrakk>\n       \\<Longrightarrow> p \\<in> {uu_.\n                                  \\<exists>p pn.\n                                     uu_ = p \\<and>\n                                     p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                                     not_call p}", "fix pp p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pp p.\n       \\<lbrakk>pp \\<in> cterms \\<Gamma>;\n        pp \\<in> {uu_.\n                  \\<exists>p pn.\n                     uu_ = p \\<and>\n                     p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p};\n        p \\<in> dterms \\<Gamma> pp\\<rbrakk>\n       \\<Longrightarrow> p \\<in> {uu_.\n                                  \\<exists>p pn.\n                                     uu_ = p \\<and>\n                                     p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                                     not_call p}", "assume \"pp \\<in> cterms \\<Gamma>\"\n         and IH: \"pp \\<in> ?ctermsl_set\"\n         and *: \"p \\<in> dterms \\<Gamma> pp\""], ["proof (state)\nthis:\n  pp \\<in> cterms \\<Gamma>\n  pp \\<in> {uu_.\n            \\<exists>p pn.\n               uu_ = p \\<and>\n               p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n  p \\<in> dterms \\<Gamma> pp\n\ngoal (1 subgoal):\n 1. \\<And>pp p.\n       \\<lbrakk>pp \\<in> cterms \\<Gamma>;\n        pp \\<in> {uu_.\n                  \\<exists>p pn.\n                     uu_ = p \\<and>\n                     p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p};\n        p \\<in> dterms \\<Gamma> pp\\<rbrakk>\n       \\<Longrightarrow> p \\<in> {uu_.\n                                  \\<exists>p pn.\n                                     uu_ = p \\<and>\n                                     p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                                     not_call p}", "from *"], ["proof (chain)\npicking this:\n  p \\<in> dterms \\<Gamma> pp", "have \"p \\<in> ctermsl pp \\<or> (\\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn))\""], ["proof (prove)\nusing this:\n  p \\<in> dterms \\<Gamma> pp\n\ngoal (1 subgoal):\n 1. p \\<in> ctermsl pp \\<or> (\\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn))", "using wfg"], ["proof (prove)\nusing this:\n  p \\<in> dterms \\<Gamma> pp\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. p \\<in> ctermsl pp \\<or> (\\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn))", "by (rule dterms_ctermsl)"], ["proof (state)\nthis:\n  p \\<in> ctermsl pp \\<or> (\\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn))\n\ngoal (1 subgoal):\n 1. \\<And>pp p.\n       \\<lbrakk>pp \\<in> cterms \\<Gamma>;\n        pp \\<in> {uu_.\n                  \\<exists>p pn.\n                     uu_ = p \\<and>\n                     p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p};\n        p \\<in> dterms \\<Gamma> pp\\<rbrakk>\n       \\<Longrightarrow> p \\<in> {uu_.\n                                  \\<exists>p pn.\n                                     uu_ = p \\<and>\n                                     p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                                     not_call p}", "hence \"\\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  p \\<in> ctermsl pp \\<or> (\\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn))\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. p \\<in> ctermsl pp \\<Longrightarrow>\n    \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn)\n 2. \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn) \\<Longrightarrow>\n    \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn)", "assume \"p \\<in> ctermsl pp\""], ["proof (state)\nthis:\n  p \\<in> ctermsl pp\n\ngoal (2 subgoals):\n 1. p \\<in> ctermsl pp \\<Longrightarrow>\n    \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn)\n 2. \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn) \\<Longrightarrow>\n    \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn)", "from \\<open>pp \\<in> cterms \\<Gamma>\\<close> and IH"], ["proof (chain)\npicking this:\n  pp \\<in> cterms \\<Gamma>\n  pp \\<in> {uu_.\n            \\<exists>p pn.\n               uu_ = p \\<and>\n               p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}", "obtain pn' where \"pp \\<in> ctermsl (\\<Gamma> pn')\""], ["proof (prove)\nusing this:\n  pp \\<in> cterms \\<Gamma>\n  pp \\<in> {uu_.\n            \\<exists>p pn.\n               uu_ = p \\<and>\n               p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n\ngoal (1 subgoal):\n 1. (\\<And>pn'.\n        pp \\<in> ctermsl (\\<Gamma> pn') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  pp \\<in> ctermsl (\\<Gamma> pn')\n\ngoal (2 subgoals):\n 1. p \\<in> ctermsl pp \\<Longrightarrow>\n    \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn)\n 2. \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn) \\<Longrightarrow>\n    \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn)", "with \\<open>p \\<in> ctermsl pp\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> ctermsl pp\n  pp \\<in> ctermsl (\\<Gamma> pn')", "have \"p \\<in> ctermsl (\\<Gamma> pn')\""], ["proof (prove)\nusing this:\n  p \\<in> ctermsl pp\n  pp \\<in> ctermsl (\\<Gamma> pn')\n\ngoal (1 subgoal):\n 1. p \\<in> ctermsl (\\<Gamma> pn')", "by auto"], ["proof (state)\nthis:\n  p \\<in> ctermsl (\\<Gamma> pn')\n\ngoal (2 subgoals):\n 1. p \\<in> ctermsl pp \\<Longrightarrow>\n    \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn)\n 2. \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn) \\<Longrightarrow>\n    \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn)", "thus \"\\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  p \\<in> ctermsl (\\<Gamma> pn')\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn)", ".."], ["proof (state)\nthis:\n  \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn) \\<Longrightarrow>\n    \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn)", "qed -"], ["proof (state)\nthis:\n  \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<And>pp p.\n       \\<lbrakk>pp \\<in> cterms \\<Gamma>;\n        pp \\<in> {uu_.\n                  \\<exists>p pn.\n                     uu_ = p \\<and>\n                     p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p};\n        p \\<in> dterms \\<Gamma> pp\\<rbrakk>\n       \\<Longrightarrow> p \\<in> {uu_.\n                                  \\<exists>p pn.\n                                     uu_ = p \\<and>\n                                     p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                                     not_call p}", "moreover"], ["proof (state)\nthis:\n  \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<And>pp p.\n       \\<lbrakk>pp \\<in> cterms \\<Gamma>;\n        pp \\<in> {uu_.\n                  \\<exists>p pn.\n                     uu_ = p \\<and>\n                     p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p};\n        p \\<in> dterms \\<Gamma> pp\\<rbrakk>\n       \\<Longrightarrow> p \\<in> {uu_.\n                                  \\<exists>p pn.\n                                     uu_ = p \\<and>\n                                     p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                                     not_call p}", "from \\<open>p \\<in> dterms \\<Gamma> pp\\<close> wfg"], ["proof (chain)\npicking this:\n  p \\<in> dterms \\<Gamma> pp\n  wellformed \\<Gamma>", "have \"not_call p\""], ["proof (prove)\nusing this:\n  p \\<in> dterms \\<Gamma> pp\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. not_call p", "by simp"], ["proof (state)\nthis:\n  not_call p\n\ngoal (1 subgoal):\n 1. \\<And>pp p.\n       \\<lbrakk>pp \\<in> cterms \\<Gamma>;\n        pp \\<in> {uu_.\n                  \\<exists>p pn.\n                     uu_ = p \\<and>\n                     p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p};\n        p \\<in> dterms \\<Gamma> pp\\<rbrakk>\n       \\<Longrightarrow> p \\<in> {uu_.\n                                  \\<exists>p pn.\n                                     uu_ = p \\<and>\n                                     p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                                     not_call p}", "ultimately"], ["proof (chain)\npicking this:\n  \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn)\n  not_call p", "show \"p \\<in> ?ctermsl_set\""], ["proof (prove)\nusing this:\n  \\<exists>pn. p \\<in> ctermsl (\\<Gamma> pn)\n  not_call p\n\ngoal (1 subgoal):\n 1. p \\<in> {uu_.\n             \\<exists>p pn.\n                uu_ = p \\<and>\n                p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}", "by auto"], ["proof (state)\nthis:\n  p \\<in> {uu_.\n           \\<exists>p pn.\n              uu_ = p \\<and>\n              p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<in> {uu_.\n           \\<exists>p pn.\n              uu_ = p \\<and>\n              p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {uu_.\n                \\<exists>p pn.\n                   uu_ = p \\<and>\n                   p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                   not_call p} \\<Longrightarrow>\n       x \\<in> cterms \\<Gamma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {uu_.\n                \\<exists>p pn.\n                   uu_ = p \\<and>\n                   p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                   not_call p} \\<Longrightarrow>\n       x \\<in> cterms \\<Gamma>", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {uu_.\n                \\<exists>p pn.\n                   uu_ = p \\<and>\n                   p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                   not_call p} \\<Longrightarrow>\n       x \\<in> cterms \\<Gamma>", "assume \"p \\<in> ?ctermsl_set\""], ["proof (state)\nthis:\n  p \\<in> {uu_.\n           \\<exists>p pn.\n              uu_ = p \\<and>\n              p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {uu_.\n                \\<exists>p pn.\n                   uu_ = p \\<and>\n                   p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                   not_call p} \\<Longrightarrow>\n       x \\<in> cterms \\<Gamma>", "then"], ["proof (chain)\npicking this:\n  p \\<in> {uu_.\n           \\<exists>p pn.\n              uu_ = p \\<and>\n              p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}", "obtain pn where *: \"p \\<in> ctermsl (\\<Gamma> pn)\" and \"not_call p\""], ["proof (prove)\nusing this:\n  p \\<in> {uu_.\n           \\<exists>p pn.\n              uu_ = p \\<and>\n              p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n\ngoal (1 subgoal):\n 1. (\\<And>pn.\n        \\<lbrakk>p \\<in> ctermsl (\\<Gamma> pn); not_call p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p \\<in> ctermsl (\\<Gamma> pn)\n  not_call p\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {uu_.\n                \\<exists>p pn.\n                   uu_ = p \\<and>\n                   p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                   not_call p} \\<Longrightarrow>\n       x \\<in> cterms \\<Gamma>", "from *"], ["proof (chain)\npicking this:\n  p \\<in> ctermsl (\\<Gamma> pn)", "have \"p \\<in> stermsl (\\<Gamma> pn) \\<or> (\\<exists>p'\\<in>dtermsl (\\<Gamma> pn). p \\<in> ctermsl p')\""], ["proof (prove)\nusing this:\n  p \\<in> ctermsl (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. p \\<in> stermsl (\\<Gamma> pn) \\<or>\n    (\\<exists>p'\\<in>dtermsl (\\<Gamma> pn). p \\<in> ctermsl p')", "by (rule ctermsl_stermsl_or_dtermsl)"], ["proof (state)\nthis:\n  p \\<in> stermsl (\\<Gamma> pn) \\<or>\n  (\\<exists>p'\\<in>dtermsl (\\<Gamma> pn). p \\<in> ctermsl p')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {uu_.\n                \\<exists>p pn.\n                   uu_ = p \\<and>\n                   p \\<in> ctermsl (\\<Gamma> pn) \\<and>\n                   not_call p} \\<Longrightarrow>\n       x \\<in> cterms \\<Gamma>", "thus \"p \\<in> cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  p \\<in> stermsl (\\<Gamma> pn) \\<or>\n  (\\<exists>p'\\<in>dtermsl (\\<Gamma> pn). p \\<in> ctermsl p')\n\ngoal (1 subgoal):\n 1. p \\<in> cterms \\<Gamma>", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. p \\<in> stermsl (\\<Gamma> pn) \\<Longrightarrow> p \\<in> cterms \\<Gamma>\n 2. \\<exists>p'\\<in>dtermsl (\\<Gamma> pn).\n       p \\<in> ctermsl p' \\<Longrightarrow>\n    p \\<in> cterms \\<Gamma>", "assume \"p \\<in> stermsl (\\<Gamma> pn)\""], ["proof (state)\nthis:\n  p \\<in> stermsl (\\<Gamma> pn)\n\ngoal (2 subgoals):\n 1. p \\<in> stermsl (\\<Gamma> pn) \\<Longrightarrow> p \\<in> cterms \\<Gamma>\n 2. \\<exists>p'\\<in>dtermsl (\\<Gamma> pn).\n       p \\<in> ctermsl p' \\<Longrightarrow>\n    p \\<in> cterms \\<Gamma>", "hence \"p \\<in> sterms \\<Gamma> (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  p \\<in> stermsl (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. p \\<in> sterms \\<Gamma> (\\<Gamma> pn)", "using \\<open>not_call p\\<close> wfg"], ["proof (prove)\nusing this:\n  p \\<in> stermsl (\\<Gamma> pn)\n  not_call p\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. p \\<in> sterms \\<Gamma> (\\<Gamma> pn)", ".."], ["proof (state)\nthis:\n  p \\<in> sterms \\<Gamma> (\\<Gamma> pn)\n\ngoal (2 subgoals):\n 1. p \\<in> stermsl (\\<Gamma> pn) \\<Longrightarrow> p \\<in> cterms \\<Gamma>\n 2. \\<exists>p'\\<in>dtermsl (\\<Gamma> pn).\n       p \\<in> ctermsl p' \\<Longrightarrow>\n    p \\<in> cterms \\<Gamma>", "thus \"p \\<in> cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  p \\<in> sterms \\<Gamma> (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. p \\<in> cterms \\<Gamma>", ".."], ["proof (state)\nthis:\n  p \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<exists>p'\\<in>dtermsl (\\<Gamma> pn).\n       p \\<in> ctermsl p' \\<Longrightarrow>\n    p \\<in> cterms \\<Gamma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p'\\<in>dtermsl (\\<Gamma> pn).\n       p \\<in> ctermsl p' \\<Longrightarrow>\n    p \\<in> cterms \\<Gamma>", "assume \"\\<exists>p'\\<in>dtermsl (\\<Gamma> pn). p \\<in> ctermsl p'\""], ["proof (state)\nthis:\n  \\<exists>p'\\<in>dtermsl (\\<Gamma> pn). p \\<in> ctermsl p'\n\ngoal (1 subgoal):\n 1. \\<exists>p'\\<in>dtermsl (\\<Gamma> pn).\n       p \\<in> ctermsl p' \\<Longrightarrow>\n    p \\<in> cterms \\<Gamma>", "then"], ["proof (chain)\npicking this:\n  \\<exists>p'\\<in>dtermsl (\\<Gamma> pn). p \\<in> ctermsl p'", "obtain p' where p'1: \"p' \\<in> dtermsl (\\<Gamma> pn)\"\n                       and p'2: \"p \\<in> ctermsl p'\""], ["proof (prove)\nusing this:\n  \\<exists>p'\\<in>dtermsl (\\<Gamma> pn). p \\<in> ctermsl p'\n\ngoal (1 subgoal):\n 1. (\\<And>p'.\n        \\<lbrakk>p' \\<in> dtermsl (\\<Gamma> pn); p \\<in> ctermsl p'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  p' \\<in> dtermsl (\\<Gamma> pn)\n  p \\<in> ctermsl p'\n\ngoal (1 subgoal):\n 1. \\<exists>p'\\<in>dtermsl (\\<Gamma> pn).\n       p \\<in> ctermsl p' \\<Longrightarrow>\n    p \\<in> cterms \\<Gamma>", "from p'2 and \\<open>not_call p\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> ctermsl p'\n  not_call p", "have \"not_call p'\""], ["proof (prove)\nusing this:\n  p \\<in> ctermsl p'\n  not_call p\n\ngoal (1 subgoal):\n 1. not_call p'", ".."], ["proof (state)\nthis:\n  not_call p'\n\ngoal (1 subgoal):\n 1. \\<exists>p'\\<in>dtermsl (\\<Gamma> pn).\n       p \\<in> ctermsl p' \\<Longrightarrow>\n    p \\<in> cterms \\<Gamma>", "from p'1"], ["proof (chain)\npicking this:\n  p' \\<in> dtermsl (\\<Gamma> pn)", "obtain ps where ps1: \"ps \\<in> stermsl (\\<Gamma> pn)\"\n                           and ps2: \"p' \\<in> dtermsl ps\""], ["proof (prove)\nusing this:\n  p' \\<in> dtermsl (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. (\\<And>ps.\n        \\<lbrakk>ps \\<in> stermsl (\\<Gamma> pn);\n         p' \\<in> dtermsl ps\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast dest: dtermsl_add_stermsl_beforeD)"], ["proof (state)\nthis:\n  ps \\<in> stermsl (\\<Gamma> pn)\n  p' \\<in> dtermsl ps\n\ngoal (1 subgoal):\n 1. \\<exists>p'\\<in>dtermsl (\\<Gamma> pn).\n       p \\<in> ctermsl p' \\<Longrightarrow>\n    p \\<in> cterms \\<Gamma>", "from ps2"], ["proof (chain)\npicking this:\n  p' \\<in> dtermsl ps", "have \"not_call ps\""], ["proof (prove)\nusing this:\n  p' \\<in> dtermsl ps\n\ngoal (1 subgoal):\n 1. not_call ps", ".."], ["proof (state)\nthis:\n  not_call ps\n\ngoal (1 subgoal):\n 1. \\<exists>p'\\<in>dtermsl (\\<Gamma> pn).\n       p \\<in> ctermsl p' \\<Longrightarrow>\n    p \\<in> cterms \\<Gamma>", "with ps1"], ["proof (chain)\npicking this:\n  ps \\<in> stermsl (\\<Gamma> pn)\n  not_call ps", "have \"ps \\<in> cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  ps \\<in> stermsl (\\<Gamma> pn)\n  not_call ps\n\ngoal (1 subgoal):\n 1. ps \\<in> cterms \\<Gamma>", "using wfg"], ["proof (prove)\nusing this:\n  ps \\<in> stermsl (\\<Gamma> pn)\n  not_call ps\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. ps \\<in> cterms \\<Gamma>", "by auto"], ["proof (state)\nthis:\n  ps \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<exists>p'\\<in>dtermsl (\\<Gamma> pn).\n       p \\<in> ctermsl p' \\<Longrightarrow>\n    p \\<in> cterms \\<Gamma>", "with \\<open>p' \\<in> dtermsl ps\\<close> and \\<open>not_call p'\\<close>"], ["proof (chain)\npicking this:\n  p' \\<in> dtermsl ps\n  not_call p'\n  ps \\<in> cterms \\<Gamma>", "have \"p' \\<in> cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  p' \\<in> dtermsl ps\n  not_call p'\n  ps \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. p' \\<in> cterms \\<Gamma>", "using wfg"], ["proof (prove)\nusing this:\n  p' \\<in> dtermsl ps\n  not_call p'\n  ps \\<in> cterms \\<Gamma>\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. p' \\<in> cterms \\<Gamma>", "by auto"], ["proof (state)\nthis:\n  p' \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<exists>p'\\<in>dtermsl (\\<Gamma> pn).\n       p \\<in> ctermsl p' \\<Longrightarrow>\n    p \\<in> cterms \\<Gamma>", "hence \"sterms \\<Gamma> p' \\<subseteq> cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  p' \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. sterms \\<Gamma> p' \\<subseteq> cterms \\<Gamma>", "using wfg"], ["proof (prove)\nusing this:\n  p' \\<in> cterms \\<Gamma>\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. sterms \\<Gamma> p' \\<subseteq> cterms \\<Gamma>", "by auto"], ["proof (state)\nthis:\n  sterms \\<Gamma> p' \\<subseteq> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<exists>p'\\<in>dtermsl (\\<Gamma> pn).\n       p \\<in> ctermsl p' \\<Longrightarrow>\n    p \\<in> cterms \\<Gamma>", "with \\<open>p \\<in> ctermsl p'\\<close> \\<open>not_call p\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> ctermsl p'\n  not_call p\n  sterms \\<Gamma> p' \\<subseteq> cterms \\<Gamma>", "show \"p \\<in> cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  p \\<in> ctermsl p'\n  not_call p\n  sterms \\<Gamma> p' \\<subseteq> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. p \\<in> cterms \\<Gamma>", "using wfg"], ["proof (prove)\nusing this:\n  p \\<in> ctermsl p'\n  not_call p\n  sterms \\<Gamma> p' \\<subseteq> cterms \\<Gamma>\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. p \\<in> cterms \\<Gamma>", ".."], ["proof (state)\nthis:\n  p \\<in> cterms \\<Gamma>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<in> cterms \\<Gamma>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ctermsE [elim]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"p \\<in> cterms \\<Gamma>\"\n  obtains pn where \"p \\<in> ctermsl (\\<Gamma> pn)\"\n               and \"not_call p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pn.\n        \\<lbrakk>p \\<in> ctermsl (\\<Gamma> pn); not_call p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(2)"], ["proof (prove)\nusing this:\n  p \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. (\\<And>pn.\n        \\<lbrakk>p \\<in> ctermsl (\\<Gamma> pn); not_call p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding cterms_def' [OF assms(1)]"], ["proof (prove)\nusing this:\n  p \\<in> {uu_.\n           \\<exists>p pn.\n              uu_ = p \\<and>\n              p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n\ngoal (1 subgoal):\n 1. (\\<And>pn.\n        \\<lbrakk>p \\<in> ctermsl (\\<Gamma> pn); not_call p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "corollary cterms_subterms:\n  assumes \"wellformed \\<Gamma>\"\n    shows \"cterms \\<Gamma> = {p|p pn. p\\<in>subterms (\\<Gamma> pn) \\<and> not_call p \\<and> not_choice p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cterms \\<Gamma> =\n    {uu_.\n     \\<exists>p pn.\n        uu_ = p \\<and>\n        p \\<in> subterms (\\<Gamma> pn) \\<and>\n        not_call p \\<and> not_choice p}", "by (subst cterms_def' [OF assms(1)], subst ctermsl_subterms) auto"], ["", "lemma subterms_in_cterms [elim]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"p\\<in>subterms (\\<Gamma> pn)\"\n      and \"not_call p\"\n      and \"not_choice p\"\n    shows \"p \\<in> cterms \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> cterms \\<Gamma>", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p \\<in> subterms (\\<Gamma> pn)\n  not_call p\n  not_choice p\n\ngoal (1 subgoal):\n 1. p \\<in> cterms \\<Gamma>", "unfolding cterms_subterms [OF \\<open>wellformed \\<Gamma>\\<close>]"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p \\<in> subterms (\\<Gamma> pn)\n  not_call p\n  not_choice p\n\ngoal (1 subgoal):\n 1. p \\<in> {uu_.\n             \\<exists>p pn.\n                uu_ = p \\<and>\n                p \\<in> subterms (\\<Gamma> pn) \\<and>\n                not_call p \\<and> not_choice p}", "by auto"], ["", "lemma subterms_stermsl_ctermsl:\n  assumes \"q \\<in> subterms p\"\n      and \"r \\<in> stermsl q\"\n    shows \"r \\<in> ctermsl p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> ctermsl p", "using assms"], ["proof (prove)\nusing this:\n  q \\<in> subterms p\n  r \\<in> stermsl q\n\ngoal (1 subgoal):\n 1. r \\<in> ctermsl p", "proof (induct p)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}\\<langle>x2\\<rangle>\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}\\<langle>x2\\<rangle>\n    p)\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}\\<lbrakk>x2\\<rbrakk>\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}\\<lbrakk>x2\\<rbrakk>\n    p)\n 3. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p1; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p1;\n        \\<lbrakk>q \\<in> subterms p2; r \\<in> stermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl p2;\n        q \\<in> subterms (p1\n                          \\<oplus>\n                          p2);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl (p1\n    \\<oplus>\n    p2)\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p1; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p1;\n        \\<lbrakk>q \\<in> subterms p2; r \\<in> stermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl p2;\n        q \\<in> subterms ({x1}unicast(x2, x3) .\n                             p1 \\<triangleright> p2);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}unicast(x2, x3) .\n       p1 \\<triangleright> p2)\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}broadcast(x2) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}broadcast(x2) .\n    p)\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}groupcast(x2, x3) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}groupcast(x2, x3) .\n    p)\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}send(x2) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}send(x2) .\n    p)\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}deliver(x2) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}deliver(x2) .\n    p)\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}receive(x2) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}receive(x2) .\n    p)\n 10. \\<And>x.\n        \\<lbrakk>q \\<in> subterms (call(x)); r \\<in> stermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl (call(x))", "fix p1 p2"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}\\<langle>x2\\<rangle>\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}\\<langle>x2\\<rangle>\n    p)\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}\\<lbrakk>x2\\<rbrakk>\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}\\<lbrakk>x2\\<rbrakk>\n    p)\n 3. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p1; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p1;\n        \\<lbrakk>q \\<in> subterms p2; r \\<in> stermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl p2;\n        q \\<in> subterms (p1\n                          \\<oplus>\n                          p2);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl (p1\n    \\<oplus>\n    p2)\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p1; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p1;\n        \\<lbrakk>q \\<in> subterms p2; r \\<in> stermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl p2;\n        q \\<in> subterms ({x1}unicast(x2, x3) .\n                             p1 \\<triangleright> p2);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}unicast(x2, x3) .\n       p1 \\<triangleright> p2)\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}broadcast(x2) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}broadcast(x2) .\n    p)\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}groupcast(x2, x3) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}groupcast(x2, x3) .\n    p)\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}send(x2) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}send(x2) .\n    p)\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}deliver(x2) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}deliver(x2) .\n    p)\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}receive(x2) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}receive(x2) .\n    p)\n 10. \\<And>x.\n        \\<lbrakk>q \\<in> subterms (call(x)); r \\<in> stermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl (call(x))", "assume IH1: \"q \\<in> subterms p1 \\<Longrightarrow> r \\<in> stermsl q \\<Longrightarrow> r \\<in> ctermsl p1\"\n       and IH2: \"q \\<in> subterms p2 \\<Longrightarrow> r \\<in> stermsl q \\<Longrightarrow> r \\<in> ctermsl p2\"\n       and *: \"q \\<in> subterms (p1 \\<oplus> p2)\"\n       and \"r \\<in> stermsl q\""], ["proof (state)\nthis:\n  \\<lbrakk>q \\<in> subterms p1; r \\<in> stermsl q\\<rbrakk>\n  \\<Longrightarrow> r \\<in> ctermsl p1\n  \\<lbrakk>q \\<in> subterms p2; r \\<in> stermsl q\\<rbrakk>\n  \\<Longrightarrow> r \\<in> ctermsl p2\n  q \\<in> subterms (p1\n                    \\<oplus>\n                    p2)\n  r \\<in> stermsl q\n\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}\\<langle>x2\\<rangle>\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}\\<langle>x2\\<rangle>\n    p)\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}\\<lbrakk>x2\\<rbrakk>\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}\\<lbrakk>x2\\<rbrakk>\n    p)\n 3. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p1; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p1;\n        \\<lbrakk>q \\<in> subterms p2; r \\<in> stermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl p2;\n        q \\<in> subterms (p1\n                          \\<oplus>\n                          p2);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl (p1\n    \\<oplus>\n    p2)\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p1; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p1;\n        \\<lbrakk>q \\<in> subterms p2; r \\<in> stermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl p2;\n        q \\<in> subterms ({x1}unicast(x2, x3) .\n                             p1 \\<triangleright> p2);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}unicast(x2, x3) .\n       p1 \\<triangleright> p2)\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}broadcast(x2) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}broadcast(x2) .\n    p)\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}groupcast(x2, x3) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}groupcast(x2, x3) .\n    p)\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}send(x2) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}send(x2) .\n    p)\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}deliver(x2) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}deliver(x2) .\n    p)\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}receive(x2) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}receive(x2) .\n    p)\n 10. \\<And>x.\n        \\<lbrakk>q \\<in> subterms (call(x)); r \\<in> stermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl (call(x))", "from *"], ["proof (chain)\npicking this:\n  q \\<in> subterms (p1\n                    \\<oplus>\n                    p2)", "have \"q \\<in> {p1 \\<oplus> p2} \\<union> subterms p1 \\<union> subterms p2\""], ["proof (prove)\nusing this:\n  q \\<in> subterms (p1\n                    \\<oplus>\n                    p2)\n\ngoal (1 subgoal):\n 1. q \\<in> {p1\n             \\<oplus>\n             p2} \\<union>\n            subterms p1 \\<union>\n            subterms p2", "by simp"], ["proof (state)\nthis:\n  q \\<in> {p1\n           \\<oplus>\n           p2} \\<union>\n          subterms p1 \\<union>\n          subterms p2\n\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}\\<langle>x2\\<rangle>\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}\\<langle>x2\\<rangle>\n    p)\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}\\<lbrakk>x2\\<rbrakk>\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}\\<lbrakk>x2\\<rbrakk>\n    p)\n 3. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p1; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p1;\n        \\<lbrakk>q \\<in> subterms p2; r \\<in> stermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl p2;\n        q \\<in> subterms (p1\n                          \\<oplus>\n                          p2);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl (p1\n    \\<oplus>\n    p2)\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p1; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p1;\n        \\<lbrakk>q \\<in> subterms p2; r \\<in> stermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl p2;\n        q \\<in> subterms ({x1}unicast(x2, x3) .\n                             p1 \\<triangleright> p2);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}unicast(x2, x3) .\n       p1 \\<triangleright> p2)\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}broadcast(x2) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}broadcast(x2) .\n    p)\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}groupcast(x2, x3) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}groupcast(x2, x3) .\n    p)\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}send(x2) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}send(x2) .\n    p)\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}deliver(x2) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}deliver(x2) .\n    p)\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}receive(x2) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}receive(x2) .\n    p)\n 10. \\<And>x.\n        \\<lbrakk>q \\<in> subterms (call(x)); r \\<in> stermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl (call(x))", "thus \"r \\<in> ctermsl (p1 \\<oplus> p2)\""], ["proof (prove)\nusing this:\n  q \\<in> {p1\n           \\<oplus>\n           p2} \\<union>\n          subterms p1 \\<union>\n          subterms p2\n\ngoal (1 subgoal):\n 1. r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)", "proof (elim UnE)"], ["proof (state)\ngoal (3 subgoals):\n 1. q \\<in> {p1\n             \\<oplus>\n             p2} \\<Longrightarrow>\n    r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)\n 2. q \\<in> subterms p1 \\<Longrightarrow> r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)\n 3. q \\<in> subterms p2 \\<Longrightarrow> r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)", "assume \"q \\<in> {p1 \\<oplus> p2}\""], ["proof (state)\nthis:\n  q \\<in> {p1\n           \\<oplus>\n           p2}\n\ngoal (3 subgoals):\n 1. q \\<in> {p1\n             \\<oplus>\n             p2} \\<Longrightarrow>\n    r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)\n 2. q \\<in> subterms p1 \\<Longrightarrow> r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)\n 3. q \\<in> subterms p2 \\<Longrightarrow> r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)", "with \\<open>r \\<in> stermsl q\\<close>"], ["proof (chain)\npicking this:\n  r \\<in> stermsl q\n  q \\<in> {p1\n           \\<oplus>\n           p2}", "show ?thesis"], ["proof (prove)\nusing this:\n  r \\<in> stermsl q\n  q \\<in> {p1\n           \\<oplus>\n           p2}\n\ngoal (1 subgoal):\n 1. r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)", "by simp (metis stermsl_ctermsl)"], ["proof (state)\nthis:\n  r \\<in> ctermsl (p1\n                   \\<oplus>\n                   p2)\n\ngoal (2 subgoals):\n 1. q \\<in> subterms p1 \\<Longrightarrow> r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)\n 2. q \\<in> subterms p2 \\<Longrightarrow> r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. q \\<in> subterms p1 \\<Longrightarrow> r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)\n 2. q \\<in> subterms p2 \\<Longrightarrow> r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)", "assume \"q \\<in> subterms p1\""], ["proof (state)\nthis:\n  q \\<in> subterms p1\n\ngoal (2 subgoals):\n 1. q \\<in> subterms p1 \\<Longrightarrow> r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)\n 2. q \\<in> subterms p2 \\<Longrightarrow> r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)", "hence \"r \\<in> ctermsl p1\""], ["proof (prove)\nusing this:\n  q \\<in> subterms p1\n\ngoal (1 subgoal):\n 1. r \\<in> ctermsl p1", "using \\<open>r \\<in> stermsl q\\<close>"], ["proof (prove)\nusing this:\n  q \\<in> subterms p1\n  r \\<in> stermsl q\n\ngoal (1 subgoal):\n 1. r \\<in> ctermsl p1", "by (rule IH1)"], ["proof (state)\nthis:\n  r \\<in> ctermsl p1\n\ngoal (2 subgoals):\n 1. q \\<in> subterms p1 \\<Longrightarrow> r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)\n 2. q \\<in> subterms p2 \\<Longrightarrow> r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  r \\<in> ctermsl p1\n\ngoal (1 subgoal):\n 1. r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)", "by simp"], ["proof (state)\nthis:\n  r \\<in> ctermsl (p1\n                   \\<oplus>\n                   p2)\n\ngoal (1 subgoal):\n 1. q \\<in> subterms p2 \\<Longrightarrow> r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. q \\<in> subterms p2 \\<Longrightarrow> r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)", "assume \"q \\<in> subterms p2\""], ["proof (state)\nthis:\n  q \\<in> subterms p2\n\ngoal (1 subgoal):\n 1. q \\<in> subterms p2 \\<Longrightarrow> r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)", "hence \"r \\<in> ctermsl p2\""], ["proof (prove)\nusing this:\n  q \\<in> subterms p2\n\ngoal (1 subgoal):\n 1. r \\<in> ctermsl p2", "using \\<open>r \\<in> stermsl q\\<close>"], ["proof (prove)\nusing this:\n  q \\<in> subterms p2\n  r \\<in> stermsl q\n\ngoal (1 subgoal):\n 1. r \\<in> ctermsl p2", "by (rule IH2)"], ["proof (state)\nthis:\n  r \\<in> ctermsl p2\n\ngoal (1 subgoal):\n 1. q \\<in> subterms p2 \\<Longrightarrow> r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  r \\<in> ctermsl p2\n\ngoal (1 subgoal):\n 1. r \\<in> ctermsl (p1\n                     \\<oplus>\n                     p2)", "by simp"], ["proof (state)\nthis:\n  r \\<in> ctermsl (p1\n                   \\<oplus>\n                   p2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r \\<in> ctermsl (p1\n                   \\<oplus>\n                   p2)\n\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}\\<langle>x2\\<rangle>\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}\\<langle>x2\\<rangle>\n    p)\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}\\<lbrakk>x2\\<rbrakk>\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}\\<lbrakk>x2\\<rbrakk>\n    p)\n 3. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p1; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p1;\n        \\<lbrakk>q \\<in> subterms p2; r \\<in> stermsl q\\<rbrakk>\n        \\<Longrightarrow> r \\<in> ctermsl p2;\n        q \\<in> subterms ({x1}unicast(x2, x3) .\n                             p1 \\<triangleright> p2);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}unicast(x2, x3) .\n       p1 \\<triangleright> p2)\n 4. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}broadcast(x2) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}broadcast(x2) .\n    p)\n 5. \\<And>x1 x2 x3 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}groupcast(x2, x3) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}groupcast(x2, x3) .\n    p)\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}send(x2) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}send(x2) .\n    p)\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}deliver(x2) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}deliver(x2) .\n    p)\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>q \\<in> subterms p; r \\<in> stermsl q\\<rbrakk>\n                \\<Longrightarrow> r \\<in> ctermsl p;\n        q \\<in> subterms ({x1}receive(x2) .\n                          p);\n        r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl ({x1}receive(x2) .\n    p)\n 9. \\<And>x.\n       \\<lbrakk>q \\<in> subterms (call(x)); r \\<in> stermsl q\\<rbrakk>\n       \\<Longrightarrow> r \\<in> ctermsl (call(x))", "qed auto"], ["", "lemma subterms_sterms_cterms:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and \"p \\<in> subterms (\\<Gamma> pn)\"\n    shows \"sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>", "using assms(2)"], ["proof (prove)\nusing this:\n  p \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>", "proof (induct p)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        p1\n        \\<oplus>\n        p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (p1\n    \\<oplus>\n    p2)\n                         \\<subseteq> cterms \\<Gamma>\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n       p1 \\<triangleright> p2)\n                         \\<subseteq> cterms \\<Gamma>\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}broadcast(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}broadcast(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}groupcast(x2, x3) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}send(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}send(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}deliver(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}deliver(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}receive(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}receive(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 10. \\<And>x.\n        call(x) \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> (call(x)) \\<subseteq> cterms \\<Gamma>", "fix p"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        p1\n        \\<oplus>\n        p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (p1\n    \\<oplus>\n    p2)\n                         \\<subseteq> cterms \\<Gamma>\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n       p1 \\<triangleright> p2)\n                         \\<subseteq> cterms \\<Gamma>\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}broadcast(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}broadcast(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}groupcast(x2, x3) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}send(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}send(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}deliver(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}deliver(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}receive(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}receive(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 10. \\<And>x.\n        call(x) \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> (call(x)) \\<subseteq> cterms \\<Gamma>", "assume \"call(p) \\<in> subterms (\\<Gamma> pn)\""], ["proof (state)\nthis:\n  call(p) \\<in> subterms (\\<Gamma> pn)\n\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        p1\n        \\<oplus>\n        p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (p1\n    \\<oplus>\n    p2)\n                         \\<subseteq> cterms \\<Gamma>\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n       p1 \\<triangleright> p2)\n                         \\<subseteq> cterms \\<Gamma>\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}broadcast(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}broadcast(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}groupcast(x2, x3) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}send(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}send(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}deliver(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}deliver(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}receive(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}receive(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 10. \\<And>x.\n        call(x) \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> (call(x)) \\<subseteq> cterms \\<Gamma>", "from wf"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>", "have \"sterms \\<Gamma> (call(p)) = sterms \\<Gamma> (\\<Gamma> p)\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. sterms \\<Gamma> (call(p)) = sterms \\<Gamma> (\\<Gamma> p)", "by simp"], ["proof (state)\nthis:\n  sterms \\<Gamma> (call(p)) = sterms \\<Gamma> (\\<Gamma> p)\n\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        p1\n        \\<oplus>\n        p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (p1\n    \\<oplus>\n    p2)\n                         \\<subseteq> cterms \\<Gamma>\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n       p1 \\<triangleright> p2)\n                         \\<subseteq> cterms \\<Gamma>\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}broadcast(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}broadcast(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}groupcast(x2, x3) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}send(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}send(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}deliver(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}deliver(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}receive(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}receive(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 10. \\<And>x.\n        call(x) \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> (call(x)) \\<subseteq> cterms \\<Gamma>", "thus \"sterms \\<Gamma> (call(p)) \\<subseteq> cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  sterms \\<Gamma> (call(p)) = sterms \\<Gamma> (\\<Gamma> p)\n\ngoal (1 subgoal):\n 1. sterms \\<Gamma> (call(p)) \\<subseteq> cterms \\<Gamma>", "by auto"], ["proof (state)\nthis:\n  sterms \\<Gamma> (call(p)) \\<subseteq> cterms \\<Gamma>\n\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        p1\n        \\<oplus>\n        p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (p1\n    \\<oplus>\n    p2)\n                         \\<subseteq> cterms \\<Gamma>\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n       p1 \\<triangleright> p2)\n                         \\<subseteq> cterms \\<Gamma>\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}broadcast(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}broadcast(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}groupcast(x2, x3) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}send(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}send(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}deliver(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}deliver(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}receive(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}receive(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        p1\n        \\<oplus>\n        p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (p1\n    \\<oplus>\n    p2)\n                         \\<subseteq> cterms \\<Gamma>\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n       p1 \\<triangleright> p2)\n                         \\<subseteq> cterms \\<Gamma>\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}broadcast(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}broadcast(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}groupcast(x2, x3) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}send(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}send(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}deliver(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}deliver(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}receive(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}receive(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>", "fix p1 p2"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        p1\n        \\<oplus>\n        p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (p1\n    \\<oplus>\n    p2)\n                         \\<subseteq> cterms \\<Gamma>\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n       p1 \\<triangleright> p2)\n                         \\<subseteq> cterms \\<Gamma>\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}broadcast(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}broadcast(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}groupcast(x2, x3) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}send(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}send(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}deliver(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}deliver(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}receive(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}receive(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>", "assume IH1: \"p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow> sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>\"\n       and IH2: \"p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow> sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>\"\n       and *: \"p1 \\<oplus> p2 \\<in> subterms (\\<Gamma> pn)\""], ["proof (state)\nthis:\n  p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n  sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>\n  p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n  sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>\n  p1\n  \\<oplus>\n  p2\n  \\<in> subterms (\\<Gamma> pn)\n\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        p1\n        \\<oplus>\n        p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (p1\n    \\<oplus>\n    p2)\n                         \\<subseteq> cterms \\<Gamma>\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n       p1 \\<triangleright> p2)\n                         \\<subseteq> cterms \\<Gamma>\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}broadcast(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}broadcast(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}groupcast(x2, x3) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}send(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}send(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}deliver(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}deliver(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}receive(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}receive(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>", "from *"], ["proof (chain)\npicking this:\n  p1\n  \\<oplus>\n  p2\n  \\<in> subterms (\\<Gamma> pn)", "have \"p1 \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  p1\n  \\<oplus>\n  p2\n  \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. p1 \\<in> subterms (\\<Gamma> pn)", "by auto"], ["proof (state)\nthis:\n  p1 \\<in> subterms (\\<Gamma> pn)\n\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        p1\n        \\<oplus>\n        p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (p1\n    \\<oplus>\n    p2)\n                         \\<subseteq> cterms \\<Gamma>\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n       p1 \\<triangleright> p2)\n                         \\<subseteq> cterms \\<Gamma>\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}broadcast(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}broadcast(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}groupcast(x2, x3) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}send(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}send(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}deliver(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}deliver(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}receive(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}receive(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>", "hence \"sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  p1 \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>", "by (rule IH1)"], ["proof (state)\nthis:\n  sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>\n\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        p1\n        \\<oplus>\n        p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (p1\n    \\<oplus>\n    p2)\n                         \\<subseteq> cterms \\<Gamma>\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n       p1 \\<triangleright> p2)\n                         \\<subseteq> cterms \\<Gamma>\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}broadcast(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}broadcast(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}groupcast(x2, x3) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}send(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}send(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}deliver(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}deliver(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}receive(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}receive(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>", "moreover"], ["proof (state)\nthis:\n  sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>\n\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        p1\n        \\<oplus>\n        p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (p1\n    \\<oplus>\n    p2)\n                         \\<subseteq> cterms \\<Gamma>\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n       p1 \\<triangleright> p2)\n                         \\<subseteq> cterms \\<Gamma>\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}broadcast(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}broadcast(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}groupcast(x2, x3) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}send(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}send(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}deliver(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}deliver(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}receive(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}receive(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>", "from *"], ["proof (chain)\npicking this:\n  p1\n  \\<oplus>\n  p2\n  \\<in> subterms (\\<Gamma> pn)", "have \"p2 \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  p1\n  \\<oplus>\n  p2\n  \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. p2 \\<in> subterms (\\<Gamma> pn)", "by auto"], ["proof (state)\nthis:\n  p2 \\<in> subterms (\\<Gamma> pn)\n\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        p1\n        \\<oplus>\n        p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (p1\n    \\<oplus>\n    p2)\n                         \\<subseteq> cterms \\<Gamma>\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n       p1 \\<triangleright> p2)\n                         \\<subseteq> cterms \\<Gamma>\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}broadcast(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}broadcast(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}groupcast(x2, x3) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}send(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}send(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}deliver(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}deliver(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}receive(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}receive(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>", "hence \"sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  p2 \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>", "by (rule IH2)"], ["proof (state)\nthis:\n  sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>\n\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 3. \\<And>p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        p1\n        \\<oplus>\n        p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> (p1\n    \\<oplus>\n    p2)\n                         \\<subseteq> cterms \\<Gamma>\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n       p1 \\<triangleright> p2)\n                         \\<subseteq> cterms \\<Gamma>\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}broadcast(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}broadcast(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}groupcast(x2, x3) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}send(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}send(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}deliver(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}deliver(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}receive(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}receive(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>", "ultimately"], ["proof (chain)\npicking this:\n  sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>\n  sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>", "show \"sterms \\<Gamma> (p1 \\<oplus> p2 ) \\<subseteq> cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>\n  sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. sterms \\<Gamma> (p1\n                     \\<oplus>\n                     p2)\n    \\<subseteq> cterms \\<Gamma>", "using wf"], ["proof (prove)\nusing this:\n  sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>\n  sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. sterms \\<Gamma> (p1\n                     \\<oplus>\n                     p2)\n    \\<subseteq> cterms \\<Gamma>", "by simp"], ["proof (state)\nthis:\n  sterms \\<Gamma> (p1\n                   \\<oplus>\n                   p2)\n  \\<subseteq> cterms \\<Gamma>\n\ngoal (8 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<langle>x2\\<rangle>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}\\<lbrakk>x2\\<rbrakk>\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 3. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p1 \\<subseteq> cterms \\<Gamma>;\n        p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        sterms \\<Gamma> p2 \\<subseteq> cterms \\<Gamma>;\n        {x1}unicast(x2, x3) .\n           p1 \\<triangleright> p2\n        \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n       p1 \\<triangleright> p2)\n                         \\<subseteq> cterms \\<Gamma>\n 4. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}broadcast(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}broadcast(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 5. \\<And>x1 x2 x3 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}groupcast(x2, x3) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}send(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}send(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}deliver(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}deliver(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                sterms \\<Gamma> p \\<subseteq> cterms \\<Gamma>;\n        {x1}receive(x2) .\n        p \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n       \\<Longrightarrow> sterms \\<Gamma> ({x1}receive(x2) .\n    p)\n                         \\<subseteq> cterms \\<Gamma>", "qed (auto elim!: subterms_in_cterms [OF \\<open>wellformed \\<Gamma>\\<close>])"], ["", "lemma subterms_sterms_in_cterms:\n  assumes \"wellformed \\<Gamma>\"\n      and \"p \\<in> subterms (\\<Gamma> pn)\"\n      and \"q \\<in> sterms \\<Gamma> p\"\n    shows \"q \\<in> cterms \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> cterms \\<Gamma>", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p \\<in> subterms (\\<Gamma> pn)\n  q \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. q \\<in> cterms \\<Gamma>", "by (auto dest!: subterms_sterms_cterms [OF \\<open>wellformed \\<Gamma>\\<close>])"], ["", "end"]]}