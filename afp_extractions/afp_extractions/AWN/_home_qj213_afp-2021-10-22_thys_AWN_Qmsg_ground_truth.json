{"file_name": "/home/qj213/afp-2021-10-22/thys/AWN/Qmsg.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/AWN", "problem_names": ["lemmas \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G_simps [simp, code] = \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G.simps [simplified]", "lemma \\<sigma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G_not_empty [simp, intro]: \"\\<sigma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G \\<noteq> {}\"", "lemma \\<sigma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G_exists [simp]: \"\\<exists>qmsg q. (qmsg, q) \\<in> \\<sigma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G\"", "lemma qmsg_wf [simp]: \"wellformed \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G\"", "lemmas qmsg_labels_not_empty [simp] = labels_not_empty [OF qmsg_wf]", "lemma qmsg_control_within [simp]: \"control_within \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G (init qmsg)\"", "lemma qmsg_simple_labels [simp]: \"simple_labels \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G\"", "lemma qmsg_trans: \"trans qmsg = seqp_sos \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G\"", "lemma \\<sigma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G_labels [simp]: \"(\\<xi>, q) \\<in> \\<sigma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G \\<Longrightarrow>  labels \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G q = {()-:0}\"", "lemma qmsg_proc_cases [dest]:\n  fixes p pn\n  shows \"p \\<in> ctermsl (\\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G pn) \\<Longrightarrow> p \\<in> ctermsl (\\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G ())\""], "translations": [["", "lemmas \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G_simps [simp, code] = \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G.simps [simplified]"], ["", "lemma \\<sigma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G_not_empty [simp, intro]: \"\\<sigma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G \\<noteq> {}", "unfolding \\<sigma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {([], \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G ())} \\<noteq> {}", "by simp"], ["", "lemma \\<sigma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G_exists [simp]: \"\\<exists>qmsg q. (qmsg, q) \\<in> \\<sigma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>qmsg q.\n       (qmsg, q) \\<in> \\<sigma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G", "unfolding \\<sigma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>qmsg q.\n       (qmsg, q) \\<in> {([], \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G ())}", "by simp"], ["", "lemma qmsg_wf [simp]: \"wellformed \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wellformed \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G", "by (rule wf_no_direct_calls) auto"], ["", "lemmas qmsg_labels_not_empty [simp] = labels_not_empty [OF qmsg_wf]"], ["", "lemma qmsg_control_within [simp]: \"control_within \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G (init qmsg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. control_within \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G (init qmsg)", "unfolding \\<sigma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. control_within \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G\n     (init\n       \\<lparr>init = {([], \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G ())},\n          trans = seqp_sos \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G\\<rparr>)", "by (rule control_withinI) (auto simp del: \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G_simps)"], ["", "lemma qmsg_simple_labels [simp]: \"simple_labels \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. simple_labels \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G", "unfolding simple_labels_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>pn.\n       \\<forall>p\\<in>subterms\n                       (\\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G pn).\n          \\<exists>!l.\n             labels \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G p = {l}", "by auto"], ["", "lemma qmsg_trans: \"trans qmsg = seqp_sos \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. automaton.trans qmsg = seqp_sos \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G", "by simp"], ["", "lemma \\<sigma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G_labels [simp]: \"(\\<xi>, q) \\<in> \\<sigma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G \\<Longrightarrow>  labels \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G q = {()-:0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<xi>, q)\n    \\<in> \\<sigma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G \\<Longrightarrow>\n    labels \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G q = {()-:0}", "unfolding \\<sigma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<xi>, q)\n    \\<in> {([],\n            \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G ())} \\<Longrightarrow>\n    labels \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G q = {()-:0}", "by simp"], ["", "lemma qmsg_proc_cases [dest]:\n  fixes p pn\n  shows \"p \\<in> ctermsl (\\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G pn) \\<Longrightarrow> p \\<in> ctermsl (\\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G ())\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> ctermsl\n             (\\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G pn) \\<Longrightarrow>\n    p \\<in> ctermsl (\\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G ())", "by simp"], ["", "declare\n  \\<Gamma>\\<^sub>Q\\<^sub>M\\<^sub>S\\<^sub>G_simps [cterms_env]\n  qmsg_proc_cases [ctermsl_cases]\n  seq_invariant_ctermsI [OF qmsg_wf qmsg_control_within qmsg_simple_labels qmsg_trans, cterms_intros]\n  seq_step_invariant_ctermsI [OF qmsg_wf qmsg_control_within qmsg_simple_labels qmsg_trans, cterms_intros]"], ["", "end"]]}