{"file_name": "/home/qj213/afp-2021-10-22/thys/AWN/OAWN_Invariants.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/AWN", "problem_names": ["lemma oseqp_sos_subterms:\n  assumes \"wellformed \\<Gamma>\"\n      and \"\\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\"\n      and \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\"\n    shows \"\\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\"", "lemma oreachable_subterms:\n  assumes \"wellformed \\<Gamma>\"\n      and \"control_within \\<Gamma> (init A)\"\n      and \"trans A = oseqp_sos \\<Gamma> i\"\n      and \"(\\<sigma>, p) \\<in> oreachable A S U\"\n    shows \"\\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\"", "lemma onl_oinvariantI [intro]:\n  assumes init: \"\\<And>\\<sigma> p l. \\<lbrakk> (\\<sigma>, p) \\<in> init A; l \\<in> labels \\<Gamma> p \\<rbrakk> \\<Longrightarrow> P (\\<sigma>, l)\"\n      and other: \"\\<And>\\<sigma> \\<sigma>' p l. \\<lbrakk> (\\<sigma>, p) \\<in> oreachable A S U;\n                                \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n                                U \\<sigma> \\<sigma>' \\<rbrakk> \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\"\n      and step: \"\\<And>\\<sigma> p a \\<sigma>' p' l'.\n                   \\<lbrakk> (\\<sigma>, p) \\<in> oreachable A S U;\n                     \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n                     ((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> trans A;\n                     l' \\<in> labels \\<Gamma> p';\n                     S \\<sigma> \\<sigma>' a \\<rbrakk> \\<Longrightarrow> P (\\<sigma>', l')\"\n    shows \"A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P\"", "lemma global_oinvariantI [intro]:\n  assumes init: \"\\<And>\\<sigma> p. (\\<sigma>, p) \\<in> init A \\<Longrightarrow> P \\<sigma>\"\n      and other: \"\\<And>\\<sigma> \\<sigma>' p l. \\<lbrakk> (\\<sigma>, p) \\<in> oreachable A S U; P \\<sigma>; U \\<sigma> \\<sigma>' \\<rbrakk> \\<Longrightarrow> P \\<sigma>'\"\n      and step: \"\\<And>\\<sigma> p a \\<sigma>' p'.\n                   \\<lbrakk> (\\<sigma>, p) \\<in> oreachable A S U;\n                     P \\<sigma>;\n                     ((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> trans A;\n                     S \\<sigma> \\<sigma>' a \\<rbrakk> \\<Longrightarrow> P \\<sigma>'\"\n    shows \"A \\<Turnstile> (S, U \\<rightarrow>) (\\<lambda>(\\<sigma>, _). P \\<sigma>)\"", "lemma onl_oinvariantD [dest]:\n  assumes \"A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P\"\n      and \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and \"l \\<in> labels \\<Gamma> p\"\n    shows \"P (\\<sigma>, l)\"", "lemma onl_oinvariant_weakenD [dest]:\n  assumes \"A \\<Turnstile> (S', U' \\<rightarrow>) onl \\<Gamma> P\"\n      and \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and \"l \\<in> labels \\<Gamma> p\"\n      and weakenS: \"\\<And>s s' a. S s s' a \\<Longrightarrow> S' s s' a\"\n      and weakenU: \"\\<And>s s'. U s s' \\<Longrightarrow> U' s s'\"\n    shows \"P (\\<sigma>, l)\"", "lemma onl_oinvariant_initD [dest]:\n  assumes invP: \"A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P\"\n      and init: \"(\\<sigma>, p) \\<in> init A\"\n      and pnl:  \"l \\<in> labels \\<Gamma> p\"\n    shows \"P (\\<sigma>, l)\"", "lemma onl_oinvariant_sterms:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and il: \"A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P\"\n      and rp: \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n      and \"l\\<in>labels \\<Gamma> p'\"\n    shows \"P (\\<sigma>, l)\"", "lemma onl_oinvariant_sterms_weaken:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and il: \"A \\<Turnstile> (S', U' \\<rightarrow>) onl \\<Gamma> P\"\n      and rp: \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n      and \"l\\<in>labels \\<Gamma> p'\"\n      and weakenS: \"\\<And>\\<sigma> \\<sigma>' a. S \\<sigma> \\<sigma>' a \\<Longrightarrow> S' \\<sigma> \\<sigma>' a\"\n      and weakenU: \"\\<And>\\<sigma> \\<sigma>'. U \\<sigma> \\<sigma>' \\<Longrightarrow> U' \\<sigma> \\<sigma>'\"\n    shows \"P (\\<sigma>, l)\"", "lemma otrans_from_sterms:\n  assumes \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\"\n      and \"wellformed \\<Gamma>\"\n    shows \"\\<exists>p'\\<in>sterms \\<Gamma> p. ((\\<sigma>, p'), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\"", "lemma otrans_from_sterms':\n  assumes \"((\\<sigma>, p'), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\"\n      and \"wellformed \\<Gamma>\"\n      and \"p' \\<in> sterms \\<Gamma> p\"\n    shows \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\"", "lemma otrans_to_dterms:\n  assumes \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\"\n      and \"wellformed \\<Gamma>\"\n   shows \"\\<forall>r\\<in>sterms \\<Gamma> q. r \\<in> dterms \\<Gamma> p\"", "theorem cterms_includes_sterms_of_oseq_reachable:\n  assumes \"wellformed \\<Gamma>\"\n      and \"control_within \\<Gamma> (init A)\"\n      and \"trans A = oseqp_sos \\<Gamma> i\"\n    shows \"\\<Union>(sterms \\<Gamma> ` snd ` oreachable A S U) \\<subseteq> cterms \\<Gamma>\"", "lemma oseq_invariant_ctermI:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and cw: \"control_within \\<Gamma> (init A)\"\n      and sl: \"simple_labels \\<Gamma>\"\n      and sp: \"trans A = oseqp_sos \\<Gamma> i\"\n      and init: \"\\<And>\\<sigma> p l. \\<lbrakk>\n                   (\\<sigma>, p) \\<in> init A;\n                   l\\<in>labels \\<Gamma> p\n                 \\<rbrakk> \\<Longrightarrow> P (\\<sigma>, l)\"\n      and other: \"\\<And>\\<sigma> \\<sigma>' p l. \\<lbrakk>\n                   (\\<sigma>, p) \\<in> oreachable A S U;\n                   l\\<in>labels \\<Gamma> p;\n                   P (\\<sigma>, l);\n                   U \\<sigma> \\<sigma>' \\<rbrakk> \\<Longrightarrow> P (\\<sigma>', l)\"\n      and local: \"\\<And>p l \\<sigma> a q l' \\<sigma>' pp. \\<lbrakk>\n                 p\\<in>cterms \\<Gamma>;\n                 l\\<in>labels \\<Gamma> p;\n                 P (\\<sigma>, l);\n                 ((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i;\n                 ((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> trans A;\n                 l'\\<in>labels \\<Gamma> q;\n                 (\\<sigma>, pp)\\<in>oreachable A S U;\n                 p\\<in>sterms \\<Gamma> pp;\n                 (\\<sigma>', q)\\<in>oreachable A S U;\n                 S \\<sigma> \\<sigma>' a\n               \\<rbrakk> \\<Longrightarrow> P (\\<sigma>', l')\"\n    shows \"A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P\"", "lemma oseq_invariant_ctermsI:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and cw: \"control_within \\<Gamma> (init A)\"\n      and sl: \"simple_labels \\<Gamma>\"\n      and sp: \"trans A = oseqp_sos \\<Gamma> i\"\n      and init: \"\\<And>\\<sigma> p l. \\<lbrakk>\n                   (\\<sigma>, p) \\<in> init A;\n                   l\\<in>labels \\<Gamma> p\n                 \\<rbrakk> \\<Longrightarrow> P (\\<sigma>, l)\"\n      and other: \"\\<And>\\<sigma> \\<sigma>' p l. \\<lbrakk>\n                   wellformed \\<Gamma>;\n                   (\\<sigma>, p) \\<in> oreachable A S U;\n                   l\\<in>labels \\<Gamma> p;\n                   P (\\<sigma>, l);\n                   U \\<sigma> \\<sigma>' \\<rbrakk> \\<Longrightarrow> P (\\<sigma>', l)\"\n      and local: \"\\<And>p l \\<sigma> a q l' \\<sigma>' pp pn. \\<lbrakk>\n                 wellformed \\<Gamma>;\n                 p\\<in>ctermsl (\\<Gamma> pn);\n                 not_call p;\n                 l\\<in>labels \\<Gamma> p;\n                 P (\\<sigma>, l);\n                 ((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i;\n                 ((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> trans A;\n                 l'\\<in>labels \\<Gamma> q;\n                 (\\<sigma>, pp)\\<in>oreachable A S U;\n                 p\\<in>sterms \\<Gamma> pp;\n                 (\\<sigma>', q)\\<in>oreachable A S U;\n                 S \\<sigma> \\<sigma>' a\n               \\<rbrakk> \\<Longrightarrow> P (\\<sigma>', l')\"\n    shows \"A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P\"", "lemma onll_ostep_invariantI [intro]:\n  assumes *: \"\\<And>\\<sigma> p l a \\<sigma>' p' l'. \\<lbrakk> (\\<sigma>, p)\\<in>oreachable A S U;\n                                   ((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> trans A;\n                                   S \\<sigma> \\<sigma>' a;\n                                   l \\<in>labels \\<Gamma> p;\n                                   l'\\<in>labels \\<Gamma> p' \\<rbrakk>\n                                 \\<Longrightarrow> P ((\\<sigma>, l), a, (\\<sigma>', l'))\"\n    shows \"A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\"", "lemma onll_ostep_invariantE [elim]:\n  assumes \"A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\"\n      and \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> trans A\"\n      and \"S \\<sigma> \\<sigma>' a\"\n      and lp:  \"l \\<in>labels \\<Gamma> p\"\n      and lp': \"l'\\<in>labels \\<Gamma> p'\"\n    shows \"P ((\\<sigma>, l), a, (\\<sigma>', l'))\"", "lemma onll_ostep_invariantD [dest]:\n  assumes \"A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\"\n      and \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> trans A\"\n      and \"S \\<sigma> \\<sigma>' a\"\n    shows \"\\<forall>l\\<in>labels \\<Gamma> p. \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, (\\<sigma>', l'))\"", "lemma onll_ostep_invariant_weakenD [dest]:\n  assumes \"A \\<Turnstile>\\<^sub>A (S', U' \\<rightarrow>) onll \\<Gamma> P\"\n      and \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> trans A\"\n      and \"S' \\<sigma> \\<sigma>' a\"\n      and weakenS: \"\\<And>s s' a. S s s' a \\<Longrightarrow> S' s s' a\"\n      and weakenU: \"\\<And>s s'. U s s' \\<Longrightarrow> U' s s'\"\n    shows \"\\<forall>l\\<in>labels \\<Gamma> p. \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, (\\<sigma>', l'))\"", "lemma onll_ostep_to_invariantI [intro]:\n  assumes sinv: \"A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> Q\"\n      and wf: \"wellformed \\<Gamma>\"\n      and init: \"\\<And>\\<sigma> l p. \\<lbrakk> (\\<sigma>, p) \\<in> init A; l\\<in>labels \\<Gamma> p \\<rbrakk> \\<Longrightarrow> P (\\<sigma>, l)\"\n      and other: \"\\<And>\\<sigma> \\<sigma>' p l.\n                    \\<lbrakk> (\\<sigma>, p) \\<in> oreachable A S U;\n                      l\\<in>labels \\<Gamma> p;\n                      P (\\<sigma>, l);\n                      U \\<sigma> \\<sigma>' \\<rbrakk> \\<Longrightarrow> P (\\<sigma>', l)\"\n      and local: \"\\<And>\\<sigma> p l \\<sigma>' l' a.\n                    \\<lbrakk> (\\<sigma>, p) \\<in> oreachable A S U;\n                      l\\<in>labels \\<Gamma> p;\n                      P (\\<sigma>, l);\n                      Q ((\\<sigma>, l), a, (\\<sigma>', l'));\n                      S \\<sigma> \\<sigma>' a\\<rbrakk> \\<Longrightarrow> P (\\<sigma>', l')\"\n    shows \"A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P\"", "lemma onll_ostep_invariant_sterms:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and si: \"A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\"\n      and sr: \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and sos: \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> trans A\"\n      and \"S \\<sigma> \\<sigma>' a\"\n      and \"l'\\<in>labels \\<Gamma> q\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n      and \"l\\<in>labels \\<Gamma> p'\"\n    shows \"P ((\\<sigma>, l), a, (\\<sigma>', l'))\"", "lemma oseq_step_invariant_sterms:\n  assumes inv: \"A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\"\n      and wf: \"wellformed \\<Gamma>\"\n      and sp: \"trans A = oseqp_sos \\<Gamma> i\"\n      and \"l'\\<in>labels \\<Gamma> q\"\n      and sr: \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and tr: \"((\\<sigma>, p'), a, (\\<sigma>', q)) \\<in> trans A\"\n      and \"S \\<sigma> \\<sigma>' a\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n    shows \"\\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, (\\<sigma>', l'))\"", "lemma oseq_step_invariant_sterms_weaken:\n  assumes inv: \"A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\"\n      and wf: \"wellformed \\<Gamma>\"\n      and sp: \"trans A = oseqp_sos \\<Gamma> i\"\n      and \"l'\\<in>labels \\<Gamma> q\"\n      and sr: \"(\\<sigma>, p) \\<in> oreachable A S' U'\"\n      and tr: \"((\\<sigma>, p'), a, (\\<sigma>', q)) \\<in> trans A\"\n      and \"S' \\<sigma> \\<sigma>' a\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n      and weakenS: \"\\<And>\\<sigma> \\<sigma>' a. S' \\<sigma> \\<sigma>' a \\<Longrightarrow> S \\<sigma> \\<sigma>' a\"\n      and weakenU: \"\\<And>\\<sigma> \\<sigma>'. U' \\<sigma> \\<sigma>' \\<Longrightarrow> U \\<sigma> \\<sigma>'\"\n    shows \"\\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, (\\<sigma>', l'))\"", "lemma onll_ostep_invariant_any_sterms:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and si: \"A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\"\n      and sr: \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and sos: \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> trans A\"\n      and \"S \\<sigma> \\<sigma>' a\"\n      and \"l'\\<in>labels \\<Gamma> q\"\n    shows \"\\<forall>p'\\<in>sterms \\<Gamma> p. \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, (\\<sigma>', l'))\"", "lemma oseq_step_invariant_ctermI [intro]:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and cw: \"control_within \\<Gamma> (init A)\"\n      and sl: \"simple_labels \\<Gamma>\"\n      and sp: \"trans A = oseqp_sos \\<Gamma> i\"\n      and local: \"\\<And>p l \\<sigma> a q l' \\<sigma>' pp. \\<lbrakk>\n                   p\\<in>cterms \\<Gamma>;\n                   l\\<in>labels \\<Gamma> p;\n                   ((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i;\n                   ((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> trans A;\n                   l'\\<in>labels \\<Gamma> q;\n                   (\\<sigma>, pp) \\<in> oreachable A S U;\n                   p\\<in>sterms \\<Gamma> pp;\n                   (\\<sigma>', q) \\<in> oreachable A S U;\n                   S \\<sigma> \\<sigma>' a\n                 \\<rbrakk> \\<Longrightarrow> P ((\\<sigma>, l), a, (\\<sigma>', l'))\"\n    shows \"A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\"", "lemma oseq_step_invariant_ctermsI [intro]:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and \"control_within \\<Gamma> (init A)\"\n      and \"simple_labels \\<Gamma>\"\n      and \"trans A = oseqp_sos \\<Gamma> i\"\n      and local: \"\\<And>p l \\<sigma> a q l' \\<sigma>' pp pn. \\<lbrakk>\n                   wellformed \\<Gamma>;\n                   p\\<in>ctermsl (\\<Gamma> pn);\n                   not_call p;\n                   l\\<in>labels \\<Gamma> p;\n                   ((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i;\n                   ((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> trans A;\n                   l'\\<in>labels \\<Gamma> q;\n                   (\\<sigma>, pp) \\<in> oreachable A S U;\n                   p\\<in>sterms \\<Gamma> pp;\n                   (\\<sigma>', q) \\<in> oreachable A S U;\n                   S \\<sigma> \\<sigma>' a\n                 \\<rbrakk> \\<Longrightarrow> P ((\\<sigma>, l), a, (\\<sigma>', l'))\"\n    shows \"A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\"", "lemma open_seqp_action [elim]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"((\\<sigma> i, p), a, (\\<sigma>' i, p')) \\<in> seqp_sos \\<Gamma>\"\n    shows \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\""], "translations": [["", "lemma oseqp_sos_subterms:\n  assumes \"wellformed \\<Gamma>\"\n      and \"\\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\"\n      and \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\"\n    shows \"\\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "proof (induct p)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<lbrakk>f\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}\\<lbrakk>f\\<rbrakk>\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<langle>f\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}\\<langle>f\\<rangle>\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>l fip fmsg p q.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}unicast(fip, fmsg) .\n                       p \\<triangleright> q),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 4. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}broadcast(fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 5. \\<And>l fips fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}groupcast(fips, fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 6. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}send(fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 7. \\<And>l fdata p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}deliver(fdata) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 8. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}receive(fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<lbrakk>\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         ((\\<sigma>, p1), a, \\<sigma>', p')\n         \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<lbrakk>\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         ((\\<sigma>, p2), a, \\<sigma>', p')\n         \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, p1\n                    \\<oplus>\n                    p2),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         \\<lbrakk>\\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          ((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n          \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n         \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         ((\\<sigma>, call(pn)), a, \\<sigma>', p')\n         \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "fix p1 p2"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<lbrakk>f\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}\\<lbrakk>f\\<rbrakk>\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<langle>f\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}\\<langle>f\\<rangle>\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>l fip fmsg p q.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}unicast(fip, fmsg) .\n                       p \\<triangleright> q),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 4. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}broadcast(fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 5. \\<And>l fips fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}groupcast(fips, fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 6. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}send(fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 7. \\<And>l fdata p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}deliver(fdata) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 8. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}receive(fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<lbrakk>\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         ((\\<sigma>, p1), a, \\<sigma>', p')\n         \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<lbrakk>\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         ((\\<sigma>, p2), a, \\<sigma>', p')\n         \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, p1\n                    \\<oplus>\n                    p2),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         \\<lbrakk>\\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          ((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n          \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n         \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         ((\\<sigma>, call(pn)), a, \\<sigma>', p')\n         \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "assume IH1: \"\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                      ((\\<sigma>, p1), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i \\<Longrightarrow>\n                      \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\"\n       and IH2: \"\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                      ((\\<sigma>, p2), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i \\<Longrightarrow>\n                      \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\"\n       and \"\\<exists>pn. p1 \\<oplus> p2 \\<in> subterms (\\<Gamma> pn)\"\n       and \"((\\<sigma>, p1 \\<oplus> p2), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n   ((\\<sigma>, p1), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n  \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n  \\<lbrakk>\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n   ((\\<sigma>, p2), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n  \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n  \\<exists>pn. p1\n               \\<oplus>\n               p2\n               \\<in> subterms (\\<Gamma> pn)\n  ((\\<sigma>, p1\n              \\<oplus>\n              p2),\n   a, \\<sigma>', p')\n  \\<in> oseqp_sos \\<Gamma> i\n\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<lbrakk>f\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}\\<lbrakk>f\\<rbrakk>\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<langle>f\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}\\<langle>f\\<rangle>\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>l fip fmsg p q.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}unicast(fip, fmsg) .\n                       p \\<triangleright> q),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 4. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}broadcast(fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 5. \\<And>l fips fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}groupcast(fips, fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 6. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}send(fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 7. \\<And>l fdata p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}deliver(fdata) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 8. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}receive(fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<lbrakk>\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         ((\\<sigma>, p1), a, \\<sigma>', p')\n         \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<lbrakk>\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         ((\\<sigma>, p2), a, \\<sigma>', p')\n         \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, p1\n                    \\<oplus>\n                    p2),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         \\<lbrakk>\\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          ((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n          \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n         \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         ((\\<sigma>, call(pn)), a, \\<sigma>', p')\n         \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "from \\<open>\\<exists>pn. p1 \\<oplus> p2 \\<in> subterms (\\<Gamma> pn)\\<close>"], ["proof (chain)\npicking this:\n  \\<exists>pn. p1\n               \\<oplus>\n               p2\n               \\<in> subterms (\\<Gamma> pn)", "obtain pn\n                                            where \"p1 \\<in> subterms (\\<Gamma> pn)\"\n                                              and \"p2 \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  \\<exists>pn. p1\n               \\<oplus>\n               p2\n               \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. (\\<And>pn.\n        \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn);\n         p2 \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p1 \\<in> subterms (\\<Gamma> pn)\n  p2 \\<in> subterms (\\<Gamma> pn)\n\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<lbrakk>f\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}\\<lbrakk>f\\<rbrakk>\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<langle>f\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}\\<langle>f\\<rangle>\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>l fip fmsg p q.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}unicast(fip, fmsg) .\n                       p \\<triangleright> q),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 4. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}broadcast(fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 5. \\<And>l fips fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}groupcast(fips, fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 6. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}send(fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 7. \\<And>l fdata p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}deliver(fdata) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 8. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}receive(fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<lbrakk>\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         ((\\<sigma>, p1), a, \\<sigma>', p')\n         \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<lbrakk>\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         ((\\<sigma>, p2), a, \\<sigma>', p')\n         \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, p1\n                    \\<oplus>\n                    p2),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         \\<lbrakk>\\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          ((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n          \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n         \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         ((\\<sigma>, call(pn)), a, \\<sigma>', p')\n         \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "from \\<open>((\\<sigma>, p1 \\<oplus> p2), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\\<close>"], ["proof (chain)\npicking this:\n  ((\\<sigma>, p1\n              \\<oplus>\n              p2),\n   a, \\<sigma>', p')\n  \\<in> oseqp_sos \\<Gamma> i", "have \"((\\<sigma>, p1), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\n            \\<or> ((\\<sigma>, p2), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  ((\\<sigma>, p1\n              \\<oplus>\n              p2),\n   a, \\<sigma>', p')\n  \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, p1), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i \\<or>\n    ((\\<sigma>, p2), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i", "by auto"], ["proof (state)\nthis:\n  ((\\<sigma>, p1), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i \\<or>\n  ((\\<sigma>, p2), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<lbrakk>f\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}\\<lbrakk>f\\<rbrakk>\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<langle>f\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}\\<langle>f\\<rangle>\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>l fip fmsg p q.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}unicast(fip, fmsg) .\n                       p \\<triangleright> q),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 4. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}broadcast(fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 5. \\<And>l fips fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}groupcast(fips, fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 6. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}send(fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 7. \\<And>l fdata p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}deliver(fdata) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 8. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}receive(fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<lbrakk>\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         ((\\<sigma>, p1), a, \\<sigma>', p')\n         \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<lbrakk>\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         ((\\<sigma>, p2), a, \\<sigma>', p')\n         \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, p1\n                    \\<oplus>\n                    p2),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         \\<lbrakk>\\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          ((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n          \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n         \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         ((\\<sigma>, call(pn)), a, \\<sigma>', p')\n         \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "thus \"\\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  ((\\<sigma>, p1), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i \\<or>\n  ((\\<sigma>, p2), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ((\\<sigma>, p1), a, \\<sigma>', p')\n    \\<in> oseqp_sos \\<Gamma> i \\<Longrightarrow>\n    \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 2. ((\\<sigma>, p2), a, \\<sigma>', p')\n    \\<in> oseqp_sos \\<Gamma> i \\<Longrightarrow>\n    \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "assume \"((\\<sigma>, p1), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (state)\nthis:\n  ((\\<sigma>, p1), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (2 subgoals):\n 1. ((\\<sigma>, p1), a, \\<sigma>', p')\n    \\<in> oseqp_sos \\<Gamma> i \\<Longrightarrow>\n    \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 2. ((\\<sigma>, p2), a, \\<sigma>', p')\n    \\<in> oseqp_sos \\<Gamma> i \\<Longrightarrow>\n    \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "with \\<open>p1 \\<in> subterms (\\<Gamma> pn)\\<close>"], ["proof (chain)\npicking this:\n  p1 \\<in> subterms (\\<Gamma> pn)\n  ((\\<sigma>, p1), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i", "show ?thesis"], ["proof (prove)\nusing this:\n  p1 \\<in> subterms (\\<Gamma> pn)\n  ((\\<sigma>, p1), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "by (auto intro: IH1)"], ["proof (state)\nthis:\n  \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, p2), a, \\<sigma>', p')\n    \\<in> oseqp_sos \\<Gamma> i \\<Longrightarrow>\n    \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<sigma>, p2), a, \\<sigma>', p')\n    \\<in> oseqp_sos \\<Gamma> i \\<Longrightarrow>\n    \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "assume \"((\\<sigma>, p2), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (state)\nthis:\n  ((\\<sigma>, p2), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, p2), a, \\<sigma>', p')\n    \\<in> oseqp_sos \\<Gamma> i \\<Longrightarrow>\n    \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "with \\<open>p2 \\<in> subterms (\\<Gamma> pn)\\<close>"], ["proof (chain)\npicking this:\n  p2 \\<in> subterms (\\<Gamma> pn)\n  ((\\<sigma>, p2), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i", "show ?thesis"], ["proof (prove)\nusing this:\n  p2 \\<in> subterms (\\<Gamma> pn)\n  ((\\<sigma>, p2), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "by (auto intro: IH2)"], ["proof (state)\nthis:\n  \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n\ngoal (9 subgoals):\n 1. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<lbrakk>f\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}\\<lbrakk>f\\<rbrakk>\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<langle>f\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}\\<langle>f\\<rangle>\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>l fip fmsg p q.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}unicast(fip, fmsg) .\n                       p \\<triangleright> q),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 4. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}broadcast(fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 5. \\<And>l fips fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}groupcast(fips, fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 6. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}send(fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 7. \\<And>l fdata p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}deliver(fdata) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 8. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, {l}receive(fmsg) .\n          p),\n         a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 9. \\<And>pn.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<lbrakk>\\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n         ((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n         \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n        ((\\<sigma>, call(pn)), a, \\<sigma>', p')\n        \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "qed auto"], ["", "lemma oreachable_subterms:\n  assumes \"wellformed \\<Gamma>\"\n      and \"control_within \\<Gamma> (init A)\"\n      and \"trans A = oseqp_sos \\<Gamma> i\"\n      and \"(\\<sigma>, p) \\<in> oreachable A S U\"\n    shows \"\\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)", "using assms(4)"], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)", "proof (induct rule: oreachable_pair_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p.\n       (\\<sigma>, p) \\<in> init A \\<Longrightarrow>\n       \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>\\<sigma> p \\<sigma>'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "fix \\<sigma> p"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p.\n       (\\<sigma>, p) \\<in> init A \\<Longrightarrow>\n       \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>\\<sigma> p \\<sigma>'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "assume \"(\\<sigma>, p) \\<in> init A\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> init A\n\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p.\n       (\\<sigma>, p) \\<in> init A \\<Longrightarrow>\n       \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>\\<sigma> p \\<sigma>'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "with \\<open>control_within \\<Gamma> (init A)\\<close>"], ["proof (chain)\npicking this:\n  control_within \\<Gamma> (init A)\n  (\\<sigma>, p) \\<in> init A", "show \"\\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  control_within \\<Gamma> (init A)\n  (\\<sigma>, p) \\<in> init A\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)", ".."], ["proof (state)\nthis:\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "fix \\<sigma> p a \\<sigma>' p'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "assume \"(\\<sigma>, p) \\<in> oreachable A S U\"\n       and \"\\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\"\n       and 3: \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> trans A\"\n       and \"S \\<sigma> \\<sigma>' a\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "moreover"], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "from 3 and \\<open>trans A = oseqp_sos \\<Gamma> i\\<close>"], ["proof (chain)\npicking this:\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  automaton.trans A = oseqp_sos \\<Gamma> i", "have \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  automaton.trans A = oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i", "by simp"], ["proof (state)\nthis:\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i", "show \"\\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "using \\<open>wellformed \\<Gamma>\\<close>"], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "by (auto elim: oseqp_sos_subterms)"], ["proof (state)\nthis:\n  \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> p \\<sigma>'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)", "qed"], ["", "lemma onl_oinvariantI [intro]:\n  assumes init: \"\\<And>\\<sigma> p l. \\<lbrakk> (\\<sigma>, p) \\<in> init A; l \\<in> labels \\<Gamma> p \\<rbrakk> \\<Longrightarrow> P (\\<sigma>, l)\"\n      and other: \"\\<And>\\<sigma> \\<sigma>' p l. \\<lbrakk> (\\<sigma>, p) \\<in> oreachable A S U;\n                                \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n                                U \\<sigma> \\<sigma>' \\<rbrakk> \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\"\n      and step: \"\\<And>\\<sigma> p a \\<sigma>' p' l'.\n                   \\<lbrakk> (\\<sigma>, p) \\<in> oreachable A S U;\n                     \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n                     ((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> trans A;\n                     l' \\<in> labels \\<Gamma> p';\n                     S \\<sigma> \\<sigma>' a \\<rbrakk> \\<Longrightarrow> P (\\<sigma>', l')\"\n    shows \"A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p.\n       (\\<sigma>, p) \\<in> init A \\<Longrightarrow>\n       onl \\<Gamma> P (\\<sigma>, p)\n 2. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p')\n 3. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p); U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p)", "fix \\<sigma> p"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p.\n       (\\<sigma>, p) \\<in> init A \\<Longrightarrow>\n       onl \\<Gamma> P (\\<sigma>, p)\n 2. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p')\n 3. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p); U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p)", "assume \"(\\<sigma>, p) \\<in> init A\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> init A\n\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p.\n       (\\<sigma>, p) \\<in> init A \\<Longrightarrow>\n       onl \\<Gamma> P (\\<sigma>, p)\n 2. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p')\n 3. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p); U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p)", "hence \"\\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> init A\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)", "using init"], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> init A\n  \\<lbrakk>(?\\<sigma>, ?p) \\<in> init A;\n   ?l \\<in> labels \\<Gamma> ?p\\<rbrakk>\n  \\<Longrightarrow> P (?\\<sigma>, ?l)\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)", "by simp"], ["proof (state)\nthis:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\n\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p.\n       (\\<sigma>, p) \\<in> init A \\<Longrightarrow>\n       onl \\<Gamma> P (\\<sigma>, p)\n 2. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p')\n 3. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p); U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p)", "thus \"onl \\<Gamma> P (\\<sigma>, p)\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\n\ngoal (1 subgoal):\n 1. onl \\<Gamma> P (\\<sigma>, p)", ".."], ["proof (state)\nthis:\n  onl \\<Gamma> P (\\<sigma>, p)\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p')\n 2. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p); U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p')\n 2. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p); U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p)", "fix \\<sigma> p a \\<sigma>' p'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p')\n 2. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p); U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p)", "assume rp: \"(\\<sigma>, p) \\<in> oreachable A S U\"\n       and \"onl \\<Gamma> P (\\<sigma>, p)\"\n       and tr: \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> trans A\"\n       and \"S \\<sigma> \\<sigma>' a\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  onl \\<Gamma> P (\\<sigma>, p)\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p')\n 2. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p); U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p)", "from \\<open>onl \\<Gamma> P (\\<sigma>, p)\\<close>"], ["proof (chain)\npicking this:\n  onl \\<Gamma> P (\\<sigma>, p)", "have \"\\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\""], ["proof (prove)\nusing this:\n  onl \\<Gamma> P (\\<sigma>, p)\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)", ".."], ["proof (state)\nthis:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p')\n 2. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p); U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p)", "with rp tr \\<open>S \\<sigma> \\<sigma>' a\\<close>"], ["proof (chain)\npicking this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)", "have \"\\<forall>l'\\<in>labels \\<Gamma> p'. P (\\<sigma>', l')\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\n\ngoal (1 subgoal):\n 1. \\<forall>l'\\<in>labels \\<Gamma> p'. P (\\<sigma>', l')", "by (auto elim: step)"], ["proof (state)\nthis:\n  \\<forall>l'\\<in>labels \\<Gamma> p'. P (\\<sigma>', l')\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p')\n 2. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p); U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p)", "thus \"onl \\<Gamma> P (\\<sigma>', p')\""], ["proof (prove)\nusing this:\n  \\<forall>l'\\<in>labels \\<Gamma> p'. P (\\<sigma>', l')\n\ngoal (1 subgoal):\n 1. onl \\<Gamma> P (\\<sigma>', p')", ".."], ["proof (state)\nthis:\n  onl \\<Gamma> P (\\<sigma>', p')\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p); U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p); U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p)", "fix \\<sigma> \\<sigma>' p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p); U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p)", "assume \"(\\<sigma>, p) \\<in> oreachable A S U\"\n       and \"onl \\<Gamma> P (\\<sigma>, p)\"\n       and \"U \\<sigma> \\<sigma>'\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  onl \\<Gamma> P (\\<sigma>, p)\n  U \\<sigma> \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p); U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p)", "from \\<open>onl \\<Gamma> P (\\<sigma>, p)\\<close>"], ["proof (chain)\npicking this:\n  onl \\<Gamma> P (\\<sigma>, p)", "have \"\\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\""], ["proof (prove)\nusing this:\n  onl \\<Gamma> P (\\<sigma>, p)\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)", "by auto"], ["proof (state)\nthis:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p); U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p)", "with \\<open>(\\<sigma>, p) \\<in> oreachable A S U\\<close>"], ["proof (chain)\npicking this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)", "have \"\\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)", "using \\<open>U \\<sigma> \\<sigma>'\\<close>"], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\n  U \\<sigma> \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)", "by (rule other)"], ["proof (state)\nthis:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        onl \\<Gamma> P (\\<sigma>, p); U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<sigma>', p)", "thus \"onl \\<Gamma> P (\\<sigma>', p)\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\n\ngoal (1 subgoal):\n 1. onl \\<Gamma> P (\\<sigma>', p)", "by auto"], ["proof (state)\nthis:\n  onl \\<Gamma> P (\\<sigma>', p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma global_oinvariantI [intro]:\n  assumes init: \"\\<And>\\<sigma> p. (\\<sigma>, p) \\<in> init A \\<Longrightarrow> P \\<sigma>\"\n      and other: \"\\<And>\\<sigma> \\<sigma>' p l. \\<lbrakk> (\\<sigma>, p) \\<in> oreachable A S U; P \\<sigma>; U \\<sigma> \\<sigma>' \\<rbrakk> \\<Longrightarrow> P \\<sigma>'\"\n      and step: \"\\<And>\\<sigma> p a \\<sigma>' p'.\n                   \\<lbrakk> (\\<sigma>, p) \\<in> oreachable A S U;\n                     P \\<sigma>;\n                     ((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> trans A;\n                     S \\<sigma> \\<sigma>' a \\<rbrakk> \\<Longrightarrow> P \\<sigma>'\"\n    shows \"A \\<Turnstile> (S, U \\<rightarrow>) (\\<lambda>(\\<sigma>, _). P \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<Turnstile> (S, U \\<rightarrow>)\n                    (\\<lambda>(\\<sigma>, uu_). P \\<sigma>)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p.\n       (\\<sigma>, p) \\<in> init A \\<Longrightarrow>\n       case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>\n 2. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p') of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>\n 3. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p) of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>", "fix \\<sigma> p"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p.\n       (\\<sigma>, p) \\<in> init A \\<Longrightarrow>\n       case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>\n 2. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p') of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>\n 3. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p) of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>", "assume \"(\\<sigma>, p) \\<in> init A\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> init A\n\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p.\n       (\\<sigma>, p) \\<in> init A \\<Longrightarrow>\n       case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>\n 2. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p') of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>\n 3. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p) of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>", "thus \"(\\<lambda>(\\<sigma>, _). P \\<sigma>) (\\<sigma>, p)\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> init A\n\ngoal (1 subgoal):\n 1. case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>", "by simp (erule init)"], ["proof (state)\nthis:\n  case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p') of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>\n 2. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p) of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p') of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>\n 2. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p) of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>", "fix \\<sigma> p a \\<sigma>' p'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p') of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>\n 2. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p) of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>", "assume rp: \"(\\<sigma>, p) \\<in> oreachable A S U\"\n       and \"(\\<lambda>(\\<sigma>, _). P \\<sigma>) (\\<sigma>, p)\"\n       and tr: \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> trans A\"\n       and \"S \\<sigma> \\<sigma>' a\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p') of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>\n 2. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p) of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>", "from \\<open>(\\<lambda>(\\<sigma>, _). P \\<sigma>) (\\<sigma>, p)\\<close>"], ["proof (chain)\npicking this:\n  case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>", "have \"P \\<sigma>\""], ["proof (prove)\nusing this:\n  case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>\n\ngoal (1 subgoal):\n 1. P \\<sigma>", "by simp"], ["proof (state)\nthis:\n  P \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p') of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>\n 2. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p) of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>", "with rp"], ["proof (chain)\npicking this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  P \\<sigma>", "have \"P \\<sigma>'\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  P \\<sigma>\n\ngoal (1 subgoal):\n 1. P \\<sigma>'", "using tr \\<open>S \\<sigma> \\<sigma>' a\\<close>"], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  P \\<sigma>\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n\ngoal (1 subgoal):\n 1. P \\<sigma>'", "by (rule step)"], ["proof (state)\nthis:\n  P \\<sigma>'\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' p' a.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p') of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>\n 2. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p) of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>", "thus \"(\\<lambda>(\\<sigma>, _). P \\<sigma>) (\\<sigma>', p')\""], ["proof (prove)\nusing this:\n  P \\<sigma>'\n\ngoal (1 subgoal):\n 1. case (\\<sigma>', p') of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>", "by simp"], ["proof (state)\nthis:\n  case (\\<sigma>', p') of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p) of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p) of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>", "fix \\<sigma> \\<sigma>' p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p) of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>", "assume \"(\\<sigma>, p) \\<in> oreachable A S U\"\n       and \"(\\<lambda>(\\<sigma>, _). P \\<sigma>) (\\<sigma>, p)\"\n       and \"U \\<sigma> \\<sigma>'\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>\n  U \\<sigma> \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p) of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>", "hence \"P \\<sigma>'\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>\n  U \\<sigma> \\<sigma>'\n\ngoal (1 subgoal):\n 1. P \\<sigma>'", "by simp (erule other)"], ["proof (state)\nthis:\n  P \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' p.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        case (\\<sigma>, p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>;\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> case (\\<sigma>', p) of\n                         (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>", "thus \"(\\<lambda>(\\<sigma>, _). P \\<sigma>) (\\<sigma>', p)\""], ["proof (prove)\nusing this:\n  P \\<sigma>'\n\ngoal (1 subgoal):\n 1. case (\\<sigma>', p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>", "by simp"], ["proof (state)\nthis:\n  case (\\<sigma>', p) of (\\<sigma>, uu_) \\<Rightarrow> P \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma onl_oinvariantD [dest]:\n  assumes \"A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P\"\n      and \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and \"l \\<in> labels \\<Gamma> p\"\n    shows \"P (\\<sigma>, l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "using assms"], ["proof (prove)\nusing this:\n  A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S U\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "unfolding onl_def"], ["proof (prove)\nusing this:\n  A \\<Turnstile> (S, U \\<rightarrow>)\n                  (\\<lambda>(\\<xi>, p).\n                      \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l))\n  (\\<sigma>, p) \\<in> oreachable A S U\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "by auto"], ["", "lemma onl_oinvariant_weakenD [dest]:\n  assumes \"A \\<Turnstile> (S', U' \\<rightarrow>) onl \\<Gamma> P\"\n      and \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and \"l \\<in> labels \\<Gamma> p\"\n      and weakenS: \"\\<And>s s' a. S s s' a \\<Longrightarrow> S' s s' a\"\n      and weakenU: \"\\<And>s s'. U s s' \\<Longrightarrow> U' s s'\"\n    shows \"P (\\<sigma>, l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "from \\<open>(\\<sigma>, p) \\<in> oreachable A S U\\<close>"], ["proof (chain)\npicking this:\n  (\\<sigma>, p) \\<in> oreachable A S U", "have \"(\\<sigma>, p) \\<in> oreachable A S' U'\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n\ngoal (1 subgoal):\n 1. (\\<sigma>, p) \\<in> oreachable A S' U'", "by (rule oreachable_weakenE)\n         (erule weakenS, erule weakenU)"], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> oreachable A S' U'\n\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "with \\<open>A \\<Turnstile> (S', U' \\<rightarrow>) onl \\<Gamma> P\\<close>"], ["proof (chain)\npicking this:\n  A \\<Turnstile> (S', U' \\<rightarrow>) onl \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S' U'", "show \"P (\\<sigma>, l)\""], ["proof (prove)\nusing this:\n  A \\<Turnstile> (S', U' \\<rightarrow>) onl \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S' U'\n\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "using \\<open>l \\<in> labels \\<Gamma> p\\<close>"], ["proof (prove)\nusing this:\n  A \\<Turnstile> (S', U' \\<rightarrow>) onl \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S' U'\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", ".."], ["proof (state)\nthis:\n  P (\\<sigma>, l)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma onl_oinvariant_initD [dest]:\n  assumes invP: \"A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P\"\n      and init: \"(\\<sigma>, p) \\<in> init A\"\n      and pnl:  \"l \\<in> labels \\<Gamma> p\"\n    shows \"P (\\<sigma>, l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "from init"], ["proof (chain)\npicking this:\n  (\\<sigma>, p) \\<in> init A", "have \"(\\<sigma>, p) \\<in> oreachable A S U\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> init A\n\ngoal (1 subgoal):\n 1. (\\<sigma>, p) \\<in> oreachable A S U", ".."], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> oreachable A S U\n\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "with invP"], ["proof (chain)\npicking this:\n  A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S U", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S U\n\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "using pnl"], ["proof (prove)\nusing this:\n  A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S U\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", ".."], ["proof (state)\nthis:\n  P (\\<sigma>, l)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma onl_oinvariant_sterms:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and il: \"A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P\"\n      and rp: \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n      and \"l\\<in>labels \\<Gamma> p'\"\n    shows \"P (\\<sigma>, l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "from wf \\<open>p'\\<in>sterms \\<Gamma> p\\<close> \\<open>l\\<in>labels \\<Gamma> p'\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  p' \\<in> sterms \\<Gamma> p\n  l \\<in> labels \\<Gamma> p'", "have \"l\\<in>labels \\<Gamma> p\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p' \\<in> sterms \\<Gamma> p\n  l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. l \\<in> labels \\<Gamma> p", "by (rule labels_sterms_labels)"], ["proof (state)\nthis:\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "with il rp"], ["proof (chain)\npicking this:\n  A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S U\n  l \\<in> labels \\<Gamma> p", "show \"P (\\<sigma>, l)\""], ["proof (prove)\nusing this:\n  A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S U\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", ".."], ["proof (state)\nthis:\n  P (\\<sigma>, l)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma onl_oinvariant_sterms_weaken:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and il: \"A \\<Turnstile> (S', U' \\<rightarrow>) onl \\<Gamma> P\"\n      and rp: \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n      and \"l\\<in>labels \\<Gamma> p'\"\n      and weakenS: \"\\<And>\\<sigma> \\<sigma>' a. S \\<sigma> \\<sigma>' a \\<Longrightarrow> S' \\<sigma> \\<sigma>' a\"\n      and weakenU: \"\\<And>\\<sigma> \\<sigma>'. U \\<sigma> \\<sigma>' \\<Longrightarrow> U' \\<sigma> \\<sigma>'\"\n    shows \"P (\\<sigma>, l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "from \\<open>(\\<sigma>, p) \\<in> oreachable A S U\\<close>"], ["proof (chain)\npicking this:\n  (\\<sigma>, p) \\<in> oreachable A S U", "have \"(\\<sigma>, p) \\<in> oreachable A S' U'\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n\ngoal (1 subgoal):\n 1. (\\<sigma>, p) \\<in> oreachable A S' U'", "by (rule oreachable_weakenE)\n         (erule weakenS, erule weakenU)"], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> oreachable A S' U'\n\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "with assms(1-2)"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  A \\<Turnstile> (S', U' \\<rightarrow>) onl \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S' U'", "show ?thesis"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  A \\<Turnstile> (S', U' \\<rightarrow>) onl \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S' U'\n\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "using assms(4-5)"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  A \\<Turnstile> (S', U' \\<rightarrow>) onl \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S' U'\n  p' \\<in> sterms \\<Gamma> p\n  l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "by (rule onl_oinvariant_sterms)"], ["proof (state)\nthis:\n  P (\\<sigma>, l)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma otrans_from_sterms:\n  assumes \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\"\n      and \"wellformed \\<Gamma>\"\n    shows \"\\<exists>p'\\<in>sterms \\<Gamma> p. ((\\<sigma>, p'), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p'\\<in>sterms \\<Gamma> p.\n       ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i", "using assms"], ["proof (prove)\nusing this:\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<exists>p'\\<in>sterms \\<Gamma> p.\n       ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i", "by (induction p rule: sterms_pinduct [OF \\<open>wellformed \\<Gamma>\\<close>]) auto"], ["", "lemma otrans_from_sterms':\n  assumes \"((\\<sigma>, p'), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\"\n      and \"wellformed \\<Gamma>\"\n      and \"p' \\<in> sterms \\<Gamma> p\"\n    shows \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i", "using assms"], ["proof (prove)\nusing this:\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n  wellformed \\<Gamma>\n  p' \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i", "by (induction p rule: sterms_pinduct [OF \\<open>wellformed \\<Gamma>\\<close>]) auto"], ["", "lemma otrans_to_dterms:\n  assumes \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\"\n      and \"wellformed \\<Gamma>\"\n   shows \"\\<forall>r\\<in>sterms \\<Gamma> q. r \\<in> dterms \\<Gamma> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>sterms \\<Gamma> q. r \\<in> dterms \\<Gamma> p", "using assms"], ["proof (prove)\nusing this:\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>sterms \\<Gamma> q. r \\<in> dterms \\<Gamma> p", "by (induction q) auto"], ["", "theorem cterms_includes_sterms_of_oseq_reachable:\n  assumes \"wellformed \\<Gamma>\"\n      and \"control_within \\<Gamma> (init A)\"\n      and \"trans A = oseqp_sos \\<Gamma> i\"\n    shows \"\\<Union>(sterms \\<Gamma> ` snd ` oreachable A S U) \\<subseteq> cterms \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (sterms \\<Gamma> ` snd ` oreachable A S U)\n    \\<subseteq> cterms \\<Gamma>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union>\n                (sterms \\<Gamma> ` snd ` oreachable A S U) \\<Longrightarrow>\n       x \\<in> cterms \\<Gamma>", "fix qs"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union>\n                (sterms \\<Gamma> ` snd ` oreachable A S U) \\<Longrightarrow>\n       x \\<in> cterms \\<Gamma>", "assume \"qs \\<in> \\<Union>(sterms \\<Gamma> ` snd ` oreachable A S U)\""], ["proof (state)\nthis:\n  qs \\<in> \\<Union> (sterms \\<Gamma> ` snd ` oreachable A S U)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union>\n                (sterms \\<Gamma> ` snd ` oreachable A S U) \\<Longrightarrow>\n       x \\<in> cterms \\<Gamma>", "then"], ["proof (chain)\npicking this:\n  qs \\<in> \\<Union> (sterms \\<Gamma> ` snd ` oreachable A S U)", "obtain \\<xi> and q where  *: \"(\\<xi>, q) \\<in> oreachable A S U\"\n                          and **: \"qs \\<in> sterms \\<Gamma> q\""], ["proof (prove)\nusing this:\n  qs \\<in> \\<Union> (sterms \\<Gamma> ` snd ` oreachable A S U)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<xi> q.\n        \\<lbrakk>(\\<xi>, q) \\<in> oreachable A S U;\n         qs \\<in> sterms \\<Gamma> q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<xi>, q) \\<in> oreachable A S U\n  qs \\<in> sterms \\<Gamma> q\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union>\n                (sterms \\<Gamma> ` snd ` oreachable A S U) \\<Longrightarrow>\n       x \\<in> cterms \\<Gamma>", "from *"], ["proof (chain)\npicking this:\n  (\\<xi>, q) \\<in> oreachable A S U", "have \"\\<And>x. x \\<in> sterms \\<Gamma> q \\<Longrightarrow> x \\<in> cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  (\\<xi>, q) \\<in> oreachable A S U\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> q \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "proof (induction rule: oreachable_pair_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> init A;\n        x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 2. \\<And>\\<sigma> p \\<sigma>' x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        U \\<sigma> \\<sigma>'; x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 3. \\<And>\\<sigma> p \\<sigma>' p' a x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "fix \\<sigma> p q"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> init A;\n        x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 2. \\<And>\\<sigma> p \\<sigma>' x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        U \\<sigma> \\<sigma>'; x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 3. \\<And>\\<sigma> p \\<sigma>' p' a x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "assume \"(\\<sigma>, p) \\<in> init A\"\n         and \"q \\<in> sterms \\<Gamma> p\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> init A\n  q \\<in> sterms \\<Gamma> p\n\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> init A;\n        x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 2. \\<And>\\<sigma> p \\<sigma>' x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        U \\<sigma> \\<sigma>'; x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 3. \\<And>\\<sigma> p \\<sigma>' p' a x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "from \\<open>control_within \\<Gamma> (init A)\\<close> and \\<open>(\\<sigma>, p) \\<in> init A\\<close>"], ["proof (chain)\npicking this:\n  control_within \\<Gamma> (init A)\n  (\\<sigma>, p) \\<in> init A", "obtain pn where \"p \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  control_within \\<Gamma> (init A)\n  (\\<sigma>, p) \\<in> init A\n\ngoal (1 subgoal):\n 1. (\\<And>pn.\n        p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p \\<in> subterms (\\<Gamma> pn)\n\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> init A;\n        x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 2. \\<And>\\<sigma> p \\<sigma>' x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        U \\<sigma> \\<sigma>'; x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 3. \\<And>\\<sigma> p \\<sigma>' p' a x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "with \\<open>wellformed \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  p \\<in> subterms (\\<Gamma> pn)", "show \"q \\<in> cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. q \\<in> cterms \\<Gamma>", "using \\<open>q\\<in>sterms \\<Gamma> p\\<close>"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p \\<in> subterms (\\<Gamma> pn)\n  q \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. q \\<in> cterms \\<Gamma>", "by (rule subterms_sterms_in_cterms)"], ["proof (state)\nthis:\n  q \\<in> cterms \\<Gamma>\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        U \\<sigma> \\<sigma>'; x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 2. \\<And>\\<sigma> p \\<sigma>' p' a x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        U \\<sigma> \\<sigma>'; x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 2. \\<And>\\<sigma> p \\<sigma>' p' a x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "fix p \\<sigma> a \\<sigma>' q x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        U \\<sigma> \\<sigma>'; x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 2. \\<And>\\<sigma> p \\<sigma>' p' a x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "assume \"(\\<sigma>, p) \\<in> oreachable A S U\"\n         and IH: \"\\<And>x. x \\<in> sterms \\<Gamma> p \\<Longrightarrow> x \\<in> cterms \\<Gamma>\"\n         and \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> trans A\"\n         and \"x \\<in> sterms \\<Gamma> q\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ?x \\<in> sterms \\<Gamma> p \\<Longrightarrow> ?x \\<in> cterms \\<Gamma>\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  x \\<in> sterms \\<Gamma> q\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        U \\<sigma> \\<sigma>'; x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 2. \\<And>\\<sigma> p \\<sigma>' p' a x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "from this(3) and \\<open>trans A = oseqp_sos \\<Gamma> i\\<close>"], ["proof (chain)\npicking this:\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  automaton.trans A = oseqp_sos \\<Gamma> i", "have step: \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  automaton.trans A = oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i", "by simp"], ["proof (state)\nthis:\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        U \\<sigma> \\<sigma>'; x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 2. \\<And>\\<sigma> p \\<sigma>' p' a x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "from step \\<open>wellformed \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n  wellformed \\<Gamma>", "obtain ps\n        where ps: \"ps \\<in> sterms \\<Gamma> p\"\n          and step': \"((\\<sigma>, ps), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. (\\<And>ps.\n        \\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n         ((\\<sigma>, ps), a, \\<sigma>', q)\n         \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule otrans_from_sterms [THEN bexE])"], ["proof (state)\nthis:\n  ps \\<in> sterms \\<Gamma> p\n  ((\\<sigma>, ps), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        U \\<sigma> \\<sigma>'; x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 2. \\<And>\\<sigma> p \\<sigma>' p' a x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "from ps"], ["proof (chain)\npicking this:\n  ps \\<in> sterms \\<Gamma> p", "have \"ps \\<in> cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  ps \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. ps \\<in> cterms \\<Gamma>", "by (rule IH)"], ["proof (state)\nthis:\n  ps \\<in> cterms \\<Gamma>\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        U \\<sigma> \\<sigma>'; x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 2. \\<And>\\<sigma> p \\<sigma>' p' a x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "moreover"], ["proof (state)\nthis:\n  ps \\<in> cterms \\<Gamma>\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        U \\<sigma> \\<sigma>'; x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 2. \\<And>\\<sigma> p \\<sigma>' p' a x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "from step' \\<open>wellformed \\<Gamma>\\<close> \\<open>x \\<in> sterms \\<Gamma> q\\<close>"], ["proof (chain)\npicking this:\n  ((\\<sigma>, ps), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n  wellformed \\<Gamma>\n  x \\<in> sterms \\<Gamma> q", "have \"x \\<in> dterms \\<Gamma> ps\""], ["proof (prove)\nusing this:\n  ((\\<sigma>, ps), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n  wellformed \\<Gamma>\n  x \\<in> sterms \\<Gamma> q\n\ngoal (1 subgoal):\n 1. x \\<in> dterms \\<Gamma> ps", "by (rule otrans_to_dterms [rule_format])"], ["proof (state)\nthis:\n  x \\<in> dterms \\<Gamma> ps\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> p \\<sigma>' x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        U \\<sigma> \\<sigma>'; x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 2. \\<And>\\<sigma> p \\<sigma>' p' a x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "ultimately"], ["proof (chain)\npicking this:\n  ps \\<in> cterms \\<Gamma>\n  x \\<in> dterms \\<Gamma> ps", "show \"x \\<in> cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  ps \\<in> cterms \\<Gamma>\n  x \\<in> dterms \\<Gamma> ps\n\ngoal (1 subgoal):\n 1. x \\<in> cterms \\<Gamma>", "by (rule ctermsDI)"], ["proof (state)\nthis:\n  x \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> p \\<sigma>' x.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        U \\<sigma> \\<sigma>'; x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "qed"], ["proof (state)\nthis:\n  ?x \\<in> sterms \\<Gamma> q \\<Longrightarrow> ?x \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union>\n                (sterms \\<Gamma> ` snd ` oreachable A S U) \\<Longrightarrow>\n       x \\<in> cterms \\<Gamma>", "thus \"qs \\<in> cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  ?x \\<in> sterms \\<Gamma> q \\<Longrightarrow> ?x \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. qs \\<in> cterms \\<Gamma>", "using **"], ["proof (prove)\nusing this:\n  ?x \\<in> sterms \\<Gamma> q \\<Longrightarrow> ?x \\<in> cterms \\<Gamma>\n  qs \\<in> sterms \\<Gamma> q\n\ngoal (1 subgoal):\n 1. qs \\<in> cterms \\<Gamma>", "."], ["proof (state)\nthis:\n  qs \\<in> cterms \\<Gamma>\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary oseq_reachable_in_cterms:\n  assumes \"wellformed \\<Gamma>\"\n      and \"control_within \\<Gamma> (init A)\"\n      and \"trans A = oseqp_sos \\<Gamma> i\"\n      and \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and \"p' \\<in> sterms \\<Gamma> p\"\n    shows \"p' \\<in> cterms \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p' \\<in> cterms \\<Gamma>", "using assms(1-3)"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  control_within \\<Gamma> (init A)\n  automaton.trans A = oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. p' \\<in> cterms \\<Gamma>", "proof (rule cterms_includes_sterms_of_oseq_reachable [THEN subsetD])"], ["proof (state)\ngoal (1 subgoal):\n 1. p' \\<in> \\<Union> (sterms \\<Gamma> ` snd ` oreachable A ?S1 ?U1)", "from assms(4-5)"], ["proof (chain)\npicking this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  p' \\<in> sterms \\<Gamma> p", "show \"p' \\<in> \\<Union>(sterms \\<Gamma> ` snd ` oreachable A S U)\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  p' \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. p' \\<in> \\<Union> (sterms \\<Gamma> ` snd ` oreachable A S U)", "by (auto elim!: rev_bexI)"], ["proof (state)\nthis:\n  p' \\<in> \\<Union> (sterms \\<Gamma> ` snd ` oreachable A S U)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma oseq_invariant_ctermI:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and cw: \"control_within \\<Gamma> (init A)\"\n      and sl: \"simple_labels \\<Gamma>\"\n      and sp: \"trans A = oseqp_sos \\<Gamma> i\"\n      and init: \"\\<And>\\<sigma> p l. \\<lbrakk>\n                   (\\<sigma>, p) \\<in> init A;\n                   l\\<in>labels \\<Gamma> p\n                 \\<rbrakk> \\<Longrightarrow> P (\\<sigma>, l)\"\n      and other: \"\\<And>\\<sigma> \\<sigma>' p l. \\<lbrakk>\n                   (\\<sigma>, p) \\<in> oreachable A S U;\n                   l\\<in>labels \\<Gamma> p;\n                   P (\\<sigma>, l);\n                   U \\<sigma> \\<sigma>' \\<rbrakk> \\<Longrightarrow> P (\\<sigma>', l)\"\n      and local: \"\\<And>p l \\<sigma> a q l' \\<sigma>' pp. \\<lbrakk>\n                 p\\<in>cterms \\<Gamma>;\n                 l\\<in>labels \\<Gamma> p;\n                 P (\\<sigma>, l);\n                 ((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i;\n                 ((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> trans A;\n                 l'\\<in>labels \\<Gamma> q;\n                 (\\<sigma>, pp)\\<in>oreachable A S U;\n                 p\\<in>sterms \\<Gamma> pp;\n                 (\\<sigma>', q)\\<in>oreachable A S U;\n                 S \\<sigma> \\<sigma>' a\n               \\<rbrakk> \\<Longrightarrow> P (\\<sigma>', l')\"\n    shows \"A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> init A;\n        l \\<in> labels \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>, l)\n 2. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\n 3. \\<And>\\<sigma> p a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "fix \\<sigma> p l"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> init A;\n        l \\<in> labels \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>, l)\n 2. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\n 3. \\<And>\\<sigma> p a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "assume \"(\\<sigma>, p) \\<in> init A\"\n       and *: \"l \\<in> labels \\<Gamma> p\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> init A\n  l \\<in> labels \\<Gamma> p\n\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> init A;\n        l \\<in> labels \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>, l)\n 2. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\n 3. \\<And>\\<sigma> p a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "with init"], ["proof (chain)\npicking this:\n  \\<lbrakk>(?\\<sigma>, ?p) \\<in> init A;\n   ?l \\<in> labels \\<Gamma> ?p\\<rbrakk>\n  \\<Longrightarrow> P (?\\<sigma>, ?l)\n  (\\<sigma>, p) \\<in> init A\n  l \\<in> labels \\<Gamma> p", "show \"P (\\<sigma>, l)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>(?\\<sigma>, ?p) \\<in> init A;\n   ?l \\<in> labels \\<Gamma> ?p\\<rbrakk>\n  \\<Longrightarrow> P (?\\<sigma>, ?l)\n  (\\<sigma>, p) \\<in> init A\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "by auto"], ["proof (state)\nthis:\n  P (\\<sigma>, l)\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\n 2. \\<And>\\<sigma> p a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\n 2. \\<And>\\<sigma> p a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "fix \\<sigma> p a \\<sigma>' q l'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\n 2. \\<And>\\<sigma> p a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "assume sr: \"(\\<sigma>, p) \\<in> oreachable A S U\"\n       and pl: \"\\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\"\n       and tr: \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> trans A\"\n       and A6: \"l' \\<in> labels \\<Gamma> q\"\n       and \"S \\<sigma> \\<sigma>' a\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  l' \\<in> labels \\<Gamma> q\n  S \\<sigma> \\<sigma>' a\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\n 2. \\<And>\\<sigma> p a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "thus \"P (\\<sigma>', l')\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  l' \\<in> labels \\<Gamma> q\n  S \\<sigma> \\<sigma>' a\n\ngoal (1 subgoal):\n 1. P (\\<sigma>', l')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n     \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n     ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n     l' \\<in> labels \\<Gamma> q; S \\<sigma> \\<sigma>' a\\<rbrakk>\n    \\<Longrightarrow> P (\\<sigma>', l')", "from sr and tr and \\<open>S \\<sigma> \\<sigma>' a\\<close>"], ["proof (chain)\npicking this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a", "have A7: \"(\\<sigma>', q) \\<in> oreachable A S U\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n\ngoal (1 subgoal):\n 1. (\\<sigma>', q) \\<in> oreachable A S U", "by - (rule oreachable_local')"], ["proof (state)\nthis:\n  (\\<sigma>', q) \\<in> oreachable A S U\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n     \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n     ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n     l' \\<in> labels \\<Gamma> q; S \\<sigma> \\<sigma>' a\\<rbrakk>\n    \\<Longrightarrow> P (\\<sigma>', l')", "from tr and sp"], ["proof (chain)\npicking this:\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  automaton.trans A = oseqp_sos \\<Gamma> i", "have tr': \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  automaton.trans A = oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i", "by simp"], ["proof (state)\nthis:\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n     \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n     ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n     l' \\<in> labels \\<Gamma> q; S \\<sigma> \\<sigma>' a\\<rbrakk>\n    \\<Longrightarrow> P (\\<sigma>', l')", "then"], ["proof (chain)\npicking this:\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i", "obtain p' where \"p' \\<in> sterms \\<Gamma> p\"\n                       and A4: \"((\\<sigma>, p'), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. (\\<And>p'.\n        \\<lbrakk>p' \\<in> sterms \\<Gamma> p;\n         ((\\<sigma>, p'), a, \\<sigma>', q)\n         \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast dest: otrans_from_sterms [OF _ wf])"], ["proof (state)\nthis:\n  p' \\<in> sterms \\<Gamma> p\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n     \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n     ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n     l' \\<in> labels \\<Gamma> q; S \\<sigma> \\<sigma>' a\\<rbrakk>\n    \\<Longrightarrow> P (\\<sigma>', l')", "from wf cw sp sr this(1)"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  control_within \\<Gamma> (init A)\n  automaton.trans A = oseqp_sos \\<Gamma> i\n  (\\<sigma>, p) \\<in> oreachable A S U\n  p' \\<in> sterms \\<Gamma> p", "have A1: \"p'\\<in>cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  control_within \\<Gamma> (init A)\n  automaton.trans A = oseqp_sos \\<Gamma> i\n  (\\<sigma>, p) \\<in> oreachable A S U\n  p' \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. p' \\<in> cterms \\<Gamma>", "by (rule oseq_reachable_in_cterms)"], ["proof (state)\nthis:\n  p' \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n     \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n     ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n     l' \\<in> labels \\<Gamma> q; S \\<sigma> \\<sigma>' a\\<rbrakk>\n    \\<Longrightarrow> P (\\<sigma>', l')", "from labels_not_empty [OF wf]"], ["proof (chain)\npicking this:\n  labels \\<Gamma> ?p \\<noteq> {}", "obtain ll where A2: \"ll\\<in>labels \\<Gamma> p'\""], ["proof (prove)\nusing this:\n  labels \\<Gamma> ?p \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>ll.\n        ll \\<in> labels \\<Gamma> p' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ll \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n     \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n     ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n     l' \\<in> labels \\<Gamma> q; S \\<sigma> \\<sigma>' a\\<rbrakk>\n    \\<Longrightarrow> P (\\<sigma>', l')", "with \\<open>p'\\<in>sterms \\<Gamma> p\\<close>"], ["proof (chain)\npicking this:\n  p' \\<in> sterms \\<Gamma> p\n  ll \\<in> labels \\<Gamma> p'", "have \"ll\\<in>labels \\<Gamma> p\""], ["proof (prove)\nusing this:\n  p' \\<in> sterms \\<Gamma> p\n  ll \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. ll \\<in> labels \\<Gamma> p", "by (rule labels_sterms_labels [OF wf])"], ["proof (state)\nthis:\n  ll \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n     \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n     ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n     l' \\<in> labels \\<Gamma> q; S \\<sigma> \\<sigma>' a\\<rbrakk>\n    \\<Longrightarrow> P (\\<sigma>', l')", "with pl"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\n  ll \\<in> labels \\<Gamma> p", "have A3: \"P (\\<sigma>, ll)\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\n  ll \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<sigma>, ll)", "by simp"], ["proof (state)\nthis:\n  P (\\<sigma>, ll)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n     \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n     ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n     l' \\<in> labels \\<Gamma> q; S \\<sigma> \\<sigma>' a\\<rbrakk>\n    \\<Longrightarrow> P (\\<sigma>', l')", "from sr \\<open>p'\\<in>sterms \\<Gamma> p\\<close>"], ["proof (chain)\npicking this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  p' \\<in> sterms \\<Gamma> p", "obtain pp where A7: \"(\\<sigma>, pp)\\<in>oreachable A S U\"\n                    and A8: \"p'\\<in>sterms \\<Gamma> pp\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  p' \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. (\\<And>pp.\n        \\<lbrakk>(\\<sigma>, pp) \\<in> oreachable A S U;\n         p' \\<in> sterms \\<Gamma> pp\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<sigma>, pp) \\<in> oreachable A S U\n  p' \\<in> sterms \\<Gamma> pp\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n     \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n     ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n     l' \\<in> labels \\<Gamma> q; S \\<sigma> \\<sigma>' a\\<rbrakk>\n    \\<Longrightarrow> P (\\<sigma>', l')", "from sr tr \\<open>S \\<sigma> \\<sigma>' a\\<close>"], ["proof (chain)\npicking this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a", "have A9: \"(\\<sigma>', q)\\<in>oreachable A S U\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n\ngoal (1 subgoal):\n 1. (\\<sigma>', q) \\<in> oreachable A S U", "by - (rule oreachable_local')"], ["proof (state)\nthis:\n  (\\<sigma>', q) \\<in> oreachable A S U\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n     \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n     ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n     l' \\<in> labels \\<Gamma> q; S \\<sigma> \\<sigma>' a\\<rbrakk>\n    \\<Longrightarrow> P (\\<sigma>', l')", "from sp and \\<open>((\\<sigma>, p'), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\\<close>"], ["proof (chain)\npicking this:\n  automaton.trans A = oseqp_sos \\<Gamma> i\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i", "have A5: \"((\\<sigma>, p'), a, (\\<sigma>', q)) \\<in> trans A\""], ["proof (prove)\nusing this:\n  automaton.trans A = oseqp_sos \\<Gamma> i\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> automaton.trans A", "by simp"], ["proof (state)\nthis:\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> automaton.trans A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n     \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n     ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n     l' \\<in> labels \\<Gamma> q; S \\<sigma> \\<sigma>' a\\<rbrakk>\n    \\<Longrightarrow> P (\\<sigma>', l')", "from A1 A2 A3 A4 A5 A6 A7 A8 A9 \\<open>S \\<sigma> \\<sigma>' a\\<close>"], ["proof (chain)\npicking this:\n  p' \\<in> cterms \\<Gamma>\n  ll \\<in> labels \\<Gamma> p'\n  P (\\<sigma>, ll)\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> automaton.trans A\n  l' \\<in> labels \\<Gamma> q\n  (\\<sigma>, pp) \\<in> oreachable A S U\n  p' \\<in> sterms \\<Gamma> pp\n  (\\<sigma>', q) \\<in> oreachable A S U\n  S \\<sigma> \\<sigma>' a", "show ?thesis"], ["proof (prove)\nusing this:\n  p' \\<in> cterms \\<Gamma>\n  ll \\<in> labels \\<Gamma> p'\n  P (\\<sigma>, ll)\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> automaton.trans A\n  l' \\<in> labels \\<Gamma> q\n  (\\<sigma>, pp) \\<in> oreachable A S U\n  p' \\<in> sterms \\<Gamma> pp\n  (\\<sigma>', q) \\<in> oreachable A S U\n  S \\<sigma> \\<sigma>' a\n\ngoal (1 subgoal):\n 1. P (\\<sigma>', l')", "by (rule local)"], ["proof (state)\nthis:\n  P (\\<sigma>', l')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P (\\<sigma>', l')\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)", "fix \\<sigma> \\<sigma>' p l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)", "assume sr: \"(\\<sigma>, p) \\<in> oreachable A S U\"\n       and \"\\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\"\n       and \"U \\<sigma> \\<sigma>'\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\n  U \\<sigma> \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)", "show \"\\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> labels \\<Gamma> p \\<Longrightarrow> P (\\<sigma>', l)", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> labels \\<Gamma> p \\<Longrightarrow> P (\\<sigma>', l)", "assume \"l\\<in>labels \\<Gamma> p\""], ["proof (state)\nthis:\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> labels \\<Gamma> p \\<Longrightarrow> P (\\<sigma>', l)", "with \\<open>\\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\n  l \\<in> labels \\<Gamma> p", "have \"P (\\<sigma>, l)\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", ".."], ["proof (state)\nthis:\n  P (\\<sigma>, l)\n\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> labels \\<Gamma> p \\<Longrightarrow> P (\\<sigma>', l)", "with sr and \\<open>l\\<in>labels \\<Gamma> p\\<close>"], ["proof (chain)\npicking this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  l \\<in> labels \\<Gamma> p\n  P (\\<sigma>, l)", "show \"P (\\<sigma>', l)\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  l \\<in> labels \\<Gamma> p\n  P (\\<sigma>, l)\n\ngoal (1 subgoal):\n 1. P (\\<sigma>', l)", "using \\<open>U \\<sigma> \\<sigma>'\\<close>"], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  l \\<in> labels \\<Gamma> p\n  P (\\<sigma>, l)\n  U \\<sigma> \\<sigma>'\n\ngoal (1 subgoal):\n 1. P (\\<sigma>', l)", "by (rule other)"], ["proof (state)\nthis:\n  P (\\<sigma>', l)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma oseq_invariant_ctermsI:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and cw: \"control_within \\<Gamma> (init A)\"\n      and sl: \"simple_labels \\<Gamma>\"\n      and sp: \"trans A = oseqp_sos \\<Gamma> i\"\n      and init: \"\\<And>\\<sigma> p l. \\<lbrakk>\n                   (\\<sigma>, p) \\<in> init A;\n                   l\\<in>labels \\<Gamma> p\n                 \\<rbrakk> \\<Longrightarrow> P (\\<sigma>, l)\"\n      and other: \"\\<And>\\<sigma> \\<sigma>' p l. \\<lbrakk>\n                   wellformed \\<Gamma>;\n                   (\\<sigma>, p) \\<in> oreachable A S U;\n                   l\\<in>labels \\<Gamma> p;\n                   P (\\<sigma>, l);\n                   U \\<sigma> \\<sigma>' \\<rbrakk> \\<Longrightarrow> P (\\<sigma>', l)\"\n      and local: \"\\<And>p l \\<sigma> a q l' \\<sigma>' pp pn. \\<lbrakk>\n                 wellformed \\<Gamma>;\n                 p\\<in>ctermsl (\\<Gamma> pn);\n                 not_call p;\n                 l\\<in>labels \\<Gamma> p;\n                 P (\\<sigma>, l);\n                 ((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i;\n                 ((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> trans A;\n                 l'\\<in>labels \\<Gamma> q;\n                 (\\<sigma>, pp)\\<in>oreachable A S U;\n                 p\\<in>sterms \\<Gamma> pp;\n                 (\\<sigma>', q)\\<in>oreachable A S U;\n                 S \\<sigma> \\<sigma>' a\n               \\<rbrakk> \\<Longrightarrow> P (\\<sigma>', l')\"\n    shows \"A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P", "proof (rule oseq_invariant_ctermI [OF wf cw sl sp])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> init A;\n        l \\<in> labels \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>, l)\n 2. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        l \\<in> labels \\<Gamma> p; P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l)\n 3. \\<And>p l \\<sigma> a q l' \\<sigma>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i;\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<sigma>, pp) \\<in> oreachable A S U;\n        p \\<in> sterms \\<Gamma> pp; (\\<sigma>', q) \\<in> oreachable A S U;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "fix \\<sigma> p l"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> init A;\n        l \\<in> labels \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>, l)\n 2. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        l \\<in> labels \\<Gamma> p; P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l)\n 3. \\<And>p l \\<sigma> a q l' \\<sigma>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i;\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<sigma>, pp) \\<in> oreachable A S U;\n        p \\<in> sterms \\<Gamma> pp; (\\<sigma>', q) \\<in> oreachable A S U;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "assume \"(\\<sigma>, p) \\<in> init A\"\n       and \"l \\<in> labels \\<Gamma> p\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> init A\n  l \\<in> labels \\<Gamma> p\n\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> init A;\n        l \\<in> labels \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>, l)\n 2. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        l \\<in> labels \\<Gamma> p; P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l)\n 3. \\<And>p l \\<sigma> a q l' \\<sigma>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i;\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<sigma>, pp) \\<in> oreachable A S U;\n        p \\<in> sterms \\<Gamma> pp; (\\<sigma>', q) \\<in> oreachable A S U;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "thus \"P (\\<sigma>, l)\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> init A\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "by (rule init)"], ["proof (state)\nthis:\n  P (\\<sigma>, l)\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        l \\<in> labels \\<Gamma> p; P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l)\n 2. \\<And>p l \\<sigma> a q l' \\<sigma>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i;\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<sigma>, pp) \\<in> oreachable A S U;\n        p \\<in> sterms \\<Gamma> pp; (\\<sigma>', q) \\<in> oreachable A S U;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        l \\<in> labels \\<Gamma> p; P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l)\n 2. \\<And>p l \\<sigma> a q l' \\<sigma>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i;\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<sigma>, pp) \\<in> oreachable A S U;\n        p \\<in> sterms \\<Gamma> pp; (\\<sigma>', q) \\<in> oreachable A S U;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "fix \\<sigma> \\<sigma>' p l"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        l \\<in> labels \\<Gamma> p; P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l)\n 2. \\<And>p l \\<sigma> a q l' \\<sigma>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i;\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<sigma>, pp) \\<in> oreachable A S U;\n        p \\<in> sterms \\<Gamma> pp; (\\<sigma>', q) \\<in> oreachable A S U;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "assume \"(\\<sigma>, p) \\<in> oreachable A S U\"\n       and \"l \\<in> labels \\<Gamma> p\"\n       and \"P (\\<sigma>, l)\"\n       and \"U \\<sigma> \\<sigma>'\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  l \\<in> labels \\<Gamma> p\n  P (\\<sigma>, l)\n  U \\<sigma> \\<sigma>'\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        l \\<in> labels \\<Gamma> p; P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l)\n 2. \\<And>p l \\<sigma> a q l' \\<sigma>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i;\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<sigma>, pp) \\<in> oreachable A S U;\n        p \\<in> sterms \\<Gamma> pp; (\\<sigma>', q) \\<in> oreachable A S U;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "with wf"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  (\\<sigma>, p) \\<in> oreachable A S U\n  l \\<in> labels \\<Gamma> p\n  P (\\<sigma>, l)\n  U \\<sigma> \\<sigma>'", "show \"P (\\<sigma>', l)\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  (\\<sigma>, p) \\<in> oreachable A S U\n  l \\<in> labels \\<Gamma> p\n  P (\\<sigma>, l)\n  U \\<sigma> \\<sigma>'\n\ngoal (1 subgoal):\n 1. P (\\<sigma>', l)", "by (rule other)"], ["proof (state)\nthis:\n  P (\\<sigma>', l)\n\ngoal (1 subgoal):\n 1. \\<And>p l \\<sigma> a q l' \\<sigma>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i;\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<sigma>, pp) \\<in> oreachable A S U;\n        p \\<in> sterms \\<Gamma> pp; (\\<sigma>', q) \\<in> oreachable A S U;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p l \\<sigma> a q l' \\<sigma>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i;\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<sigma>, pp) \\<in> oreachable A S U;\n        p \\<in> sterms \\<Gamma> pp; (\\<sigma>', q) \\<in> oreachable A S U;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "fix p l \\<sigma> a q l' \\<sigma>' pp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p l \\<sigma> a q l' \\<sigma>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i;\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<sigma>, pp) \\<in> oreachable A S U;\n        p \\<in> sterms \\<Gamma> pp; (\\<sigma>', q) \\<in> oreachable A S U;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "assume \"p \\<in> cterms \\<Gamma>\"\n       and otherassms: \"l \\<in> labels \\<Gamma> p\"\n           \"P (\\<sigma>, l)\"\n           \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\"\n           \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> trans A\"\n           \"l' \\<in> labels \\<Gamma> q\"\n           \"(\\<sigma>, pp) \\<in> oreachable A S U\"\n           \"p \\<in> sterms \\<Gamma> pp\"\n           \"(\\<sigma>', q) \\<in> oreachable A S U\"\n           \"S \\<sigma> \\<sigma>' a\""], ["proof (state)\nthis:\n  p \\<in> cterms \\<Gamma>\n  l \\<in> labels \\<Gamma> p\n  P (\\<sigma>, l)\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  l' \\<in> labels \\<Gamma> q\n  (\\<sigma>, pp) \\<in> oreachable A S U\n  p \\<in> sterms \\<Gamma> pp\n  (\\<sigma>', q) \\<in> oreachable A S U\n  S \\<sigma> \\<sigma>' a\n\ngoal (1 subgoal):\n 1. \\<And>p l \\<sigma> a q l' \\<sigma>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i;\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<sigma>, pp) \\<in> oreachable A S U;\n        p \\<in> sterms \\<Gamma> pp; (\\<sigma>', q) \\<in> oreachable A S U;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "from this(1)"], ["proof (chain)\npicking this:\n  p \\<in> cterms \\<Gamma>", "obtain pn where \"p \\<in> ctermsl(\\<Gamma> pn)\"\n                             and \"not_call p\""], ["proof (prove)\nusing this:\n  p \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. (\\<And>pn.\n        \\<lbrakk>p \\<in> ctermsl (\\<Gamma> pn); not_call p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding cterms_def' [OF wf]"], ["proof (prove)\nusing this:\n  p \\<in> {uu_.\n           \\<exists>p pn.\n              uu_ = p \\<and>\n              p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n\ngoal (1 subgoal):\n 1. (\\<And>pn.\n        \\<lbrakk>p \\<in> ctermsl (\\<Gamma> pn); not_call p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p \\<in> ctermsl (\\<Gamma> pn)\n  not_call p\n\ngoal (1 subgoal):\n 1. \\<And>p l \\<sigma> a q l' \\<sigma>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i;\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<sigma>, pp) \\<in> oreachable A S U;\n        p \\<in> sterms \\<Gamma> pp; (\\<sigma>', q) \\<in> oreachable A S U;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "with wf"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  p \\<in> ctermsl (\\<Gamma> pn)\n  not_call p", "show \"P (\\<sigma>', l')\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p \\<in> ctermsl (\\<Gamma> pn)\n  not_call p\n\ngoal (1 subgoal):\n 1. P (\\<sigma>', l')", "using otherassms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p \\<in> ctermsl (\\<Gamma> pn)\n  not_call p\n  l \\<in> labels \\<Gamma> p\n  P (\\<sigma>, l)\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  l' \\<in> labels \\<Gamma> q\n  (\\<sigma>, pp) \\<in> oreachable A S U\n  p \\<in> sterms \\<Gamma> pp\n  (\\<sigma>', q) \\<in> oreachable A S U\n  S \\<sigma> \\<sigma>' a\n\ngoal (1 subgoal):\n 1. P (\\<sigma>', l')", "by (rule local)"], ["proof (state)\nthis:\n  P (\\<sigma>', l')\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Open step invariants via labelled control terms\""], ["", "lemma onll_ostep_invariantI [intro]:\n  assumes *: \"\\<And>\\<sigma> p l a \\<sigma>' p' l'. \\<lbrakk> (\\<sigma>, p)\\<in>oreachable A S U;\n                                   ((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> trans A;\n                                   S \\<sigma> \\<sigma>' a;\n                                   l \\<in>labels \\<Gamma> p;\n                                   l'\\<in>labels \\<Gamma> p' \\<rbrakk>\n                                 \\<Longrightarrow> P ((\\<sigma>, l), a, (\\<sigma>', l'))\"\n    shows \"A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> s a \\<sigma>' s'.\n       \\<lbrakk>(\\<sigma>, s) \\<in> oreachable A S U;\n        ((\\<sigma>, s), a, \\<sigma>', s') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> onll \\<Gamma> P ((\\<sigma>, s), a, \\<sigma>', s')", "fix \\<sigma> p \\<sigma>' p' a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> s a \\<sigma>' s'.\n       \\<lbrakk>(\\<sigma>, s) \\<in> oreachable A S U;\n        ((\\<sigma>, s), a, \\<sigma>', s') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> onll \\<Gamma> P ((\\<sigma>, s), a, \\<sigma>', s')", "assume \"(\\<sigma>, p) \\<in> oreachable A S U\"\n       and \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> trans A\"\n       and \"S \\<sigma> \\<sigma>' a\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> s a \\<sigma>' s'.\n       \\<lbrakk>(\\<sigma>, s) \\<in> oreachable A S U;\n        ((\\<sigma>, s), a, \\<sigma>', s') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> onll \\<Gamma> P ((\\<sigma>, s), a, \\<sigma>', s')", "hence \"\\<forall>l\\<in>labels \\<Gamma> p. \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, (\\<sigma>', l'))\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p.\n       \\<forall>l'\\<in>labels \\<Gamma> p'.\n          P ((\\<sigma>, l), a, \\<sigma>', l')", "by (auto elim!: *)"], ["proof (state)\nthis:\n  \\<forall>l\\<in>labels \\<Gamma> p.\n     \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, \\<sigma>', l')\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> s a \\<sigma>' s'.\n       \\<lbrakk>(\\<sigma>, s) \\<in> oreachable A S U;\n        ((\\<sigma>, s), a, \\<sigma>', s') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> onll \\<Gamma> P ((\\<sigma>, s), a, \\<sigma>', s')", "thus \"onll \\<Gamma> P ((\\<sigma>, p), a, (\\<sigma>', p'))\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>labels \\<Gamma> p.\n     \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, \\<sigma>', l')\n\ngoal (1 subgoal):\n 1. onll \\<Gamma> P ((\\<sigma>, p), a, \\<sigma>', p')", ".."], ["proof (state)\nthis:\n  onll \\<Gamma> P ((\\<sigma>, p), a, \\<sigma>', p')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma onll_ostep_invariantE [elim]:\n  assumes \"A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\"\n      and \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> trans A\"\n      and \"S \\<sigma> \\<sigma>' a\"\n      and lp:  \"l \\<in>labels \\<Gamma> p\"\n      and lp': \"l'\\<in>labels \\<Gamma> p'\"\n    shows \"P ((\\<sigma>, l), a, (\\<sigma>', l'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P ((\\<sigma>, l), a, \\<sigma>', l')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P ((\\<sigma>, l), a, \\<sigma>', l')", "from assms(1-4)"], ["proof (chain)\npicking this:\n  A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a", "have \"onll \\<Gamma> P ((\\<sigma>, p), a, (\\<sigma>', p'))\""], ["proof (prove)\nusing this:\n  A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n\ngoal (1 subgoal):\n 1. onll \\<Gamma> P ((\\<sigma>, p), a, \\<sigma>', p')", ".."], ["proof (state)\nthis:\n  onll \\<Gamma> P ((\\<sigma>, p), a, \\<sigma>', p')\n\ngoal (1 subgoal):\n 1. P ((\\<sigma>, l), a, \\<sigma>', l')", "with lp lp'"], ["proof (chain)\npicking this:\n  l \\<in> labels \\<Gamma> p\n  l' \\<in> labels \\<Gamma> p'\n  onll \\<Gamma> P ((\\<sigma>, p), a, \\<sigma>', p')", "show \"P ((\\<sigma>, l), a, (\\<sigma>', l'))\""], ["proof (prove)\nusing this:\n  l \\<in> labels \\<Gamma> p\n  l' \\<in> labels \\<Gamma> p'\n  onll \\<Gamma> P ((\\<sigma>, p), a, \\<sigma>', p')\n\ngoal (1 subgoal):\n 1. P ((\\<sigma>, l), a, \\<sigma>', l')", "by auto"], ["proof (state)\nthis:\n  P ((\\<sigma>, l), a, \\<sigma>', l')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma onll_ostep_invariantD [dest]:\n  assumes \"A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\"\n      and \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> trans A\"\n      and \"S \\<sigma> \\<sigma>' a\"\n    shows \"\\<forall>l\\<in>labels \\<Gamma> p. \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, (\\<sigma>', l'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p.\n       \\<forall>l'\\<in>labels \\<Gamma> p'.\n          P ((\\<sigma>, l), a, \\<sigma>', l')", "using assms"], ["proof (prove)\nusing this:\n  A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p.\n       \\<forall>l'\\<in>labels \\<Gamma> p'.\n          P ((\\<sigma>, l), a, \\<sigma>', l')", "by auto"], ["", "lemma onll_ostep_invariant_weakenD [dest]:\n  assumes \"A \\<Turnstile>\\<^sub>A (S', U' \\<rightarrow>) onll \\<Gamma> P\"\n      and \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> trans A\"\n      and \"S' \\<sigma> \\<sigma>' a\"\n      and weakenS: \"\\<And>s s' a. S s s' a \\<Longrightarrow> S' s s' a\"\n      and weakenU: \"\\<And>s s'. U s s' \\<Longrightarrow> U' s s'\"\n    shows \"\\<forall>l\\<in>labels \\<Gamma> p. \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, (\\<sigma>', l'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p.\n       \\<forall>l'\\<in>labels \\<Gamma> p'.\n          P ((\\<sigma>, l), a, \\<sigma>', l')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p.\n       \\<forall>l'\\<in>labels \\<Gamma> p'.\n          P ((\\<sigma>, l), a, \\<sigma>', l')", "from \\<open>(\\<sigma>, p) \\<in> oreachable A S U\\<close>"], ["proof (chain)\npicking this:\n  (\\<sigma>, p) \\<in> oreachable A S U", "have \"(\\<sigma>, p) \\<in> oreachable A S' U'\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n\ngoal (1 subgoal):\n 1. (\\<sigma>, p) \\<in> oreachable A S' U'", "by (rule oreachable_weakenE)\n         (erule weakenS, erule weakenU)"], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> oreachable A S' U'\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p.\n       \\<forall>l'\\<in>labels \\<Gamma> p'.\n          P ((\\<sigma>, l), a, \\<sigma>', l')", "with \\<open>A \\<Turnstile>\\<^sub>A (S', U' \\<rightarrow>) onll \\<Gamma> P\\<close>"], ["proof (chain)\npicking this:\n  A \\<Turnstile>\\<^sub>A (S', U' \\<rightarrow>) onll \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S' U'", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<Turnstile>\\<^sub>A (S', U' \\<rightarrow>) onll \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S' U'\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p.\n       \\<forall>l'\\<in>labels \\<Gamma> p'.\n          P ((\\<sigma>, l), a, \\<sigma>', l')", "using \\<open>((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> trans A\\<close> and \\<open>S' \\<sigma> \\<sigma>' a\\<close>"], ["proof (prove)\nusing this:\n  A \\<Turnstile>\\<^sub>A (S', U' \\<rightarrow>) onll \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S' U'\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  S' \\<sigma> \\<sigma>' a\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p.\n       \\<forall>l'\\<in>labels \\<Gamma> p'.\n          P ((\\<sigma>, l), a, \\<sigma>', l')", ".."], ["proof (state)\nthis:\n  \\<forall>l\\<in>labels \\<Gamma> p.\n     \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, \\<sigma>', l')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma onll_ostep_to_invariantI [intro]:\n  assumes sinv: \"A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> Q\"\n      and wf: \"wellformed \\<Gamma>\"\n      and init: \"\\<And>\\<sigma> l p. \\<lbrakk> (\\<sigma>, p) \\<in> init A; l\\<in>labels \\<Gamma> p \\<rbrakk> \\<Longrightarrow> P (\\<sigma>, l)\"\n      and other: \"\\<And>\\<sigma> \\<sigma>' p l.\n                    \\<lbrakk> (\\<sigma>, p) \\<in> oreachable A S U;\n                      l\\<in>labels \\<Gamma> p;\n                      P (\\<sigma>, l);\n                      U \\<sigma> \\<sigma>' \\<rbrakk> \\<Longrightarrow> P (\\<sigma>', l)\"\n      and local: \"\\<And>\\<sigma> p l \\<sigma>' l' a.\n                    \\<lbrakk> (\\<sigma>, p) \\<in> oreachable A S U;\n                      l\\<in>labels \\<Gamma> p;\n                      P (\\<sigma>, l);\n                      Q ((\\<sigma>, l), a, (\\<sigma>', l'));\n                      S \\<sigma> \\<sigma>' a\\<rbrakk> \\<Longrightarrow> P (\\<sigma>', l')\"\n    shows \"A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<Turnstile> (S, U \\<rightarrow>) onl \\<Gamma> P", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> init A;\n        l \\<in> labels \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>, l)\n 2. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\n 3. \\<And>\\<sigma> p a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "fix \\<sigma> p l"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> init A;\n        l \\<in> labels \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>, l)\n 2. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\n 3. \\<And>\\<sigma> p a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "assume \"(\\<sigma>, p) \\<in> init A\" and \"l\\<in>labels \\<Gamma> p\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> init A\n  l \\<in> labels \\<Gamma> p\n\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> init A;\n        l \\<in> labels \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>, l)\n 2. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\n 3. \\<And>\\<sigma> p a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "thus \"P (\\<sigma>, l)\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> init A\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", "by (rule init)"], ["proof (state)\nthis:\n  P (\\<sigma>, l)\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\n 2. \\<And>\\<sigma> p a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\n 2. \\<And>\\<sigma> p a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "fix \\<sigma> p a \\<sigma>' p' l'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\n 2. \\<And>\\<sigma> p a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "assume sr: \"(\\<sigma>, p) \\<in> oreachable A S U\"\n       and lp: \"\\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\"\n       and tr: \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> trans A\"\n       and \"S \\<sigma> \\<sigma>' a\"\n       and lp': \"l' \\<in> labels \\<Gamma> p'\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n  l' \\<in> labels \\<Gamma> p'\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\n 2. \\<And>\\<sigma> p a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P (\\<sigma>', l')", "show \"P (\\<sigma>', l')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (\\<sigma>', l')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P (\\<sigma>', l')", "from lp"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)", "obtain l where \"l\\<in>labels \\<Gamma> p\" and \"P (\\<sigma>, l)\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>l \\<in> labels \\<Gamma> p; P (\\<sigma>, l)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using labels_not_empty [OF wf]"], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\n  labels \\<Gamma> ?p \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>l \\<in> labels \\<Gamma> p; P (\\<sigma>, l)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  l \\<in> labels \\<Gamma> p\n  P (\\<sigma>, l)\n\ngoal (1 subgoal):\n 1. P (\\<sigma>', l')", "from sinv sr tr \\<open>S \\<sigma> \\<sigma>' a\\<close> this(1) lp'"], ["proof (chain)\npicking this:\n  A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> Q\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n  l \\<in> labels \\<Gamma> p\n  l' \\<in> labels \\<Gamma> p'", "have \"Q ((\\<sigma>, l), a, (\\<sigma>', l'))\""], ["proof (prove)\nusing this:\n  A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> Q\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n  l \\<in> labels \\<Gamma> p\n  l' \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. Q ((\\<sigma>, l), a, \\<sigma>', l')", ".."], ["proof (state)\nthis:\n  Q ((\\<sigma>, l), a, \\<sigma>', l')\n\ngoal (1 subgoal):\n 1. P (\\<sigma>', l')", "with sr \\<open>l\\<in>labels \\<Gamma> p\\<close> \\<open>P (\\<sigma>, l)\\<close>"], ["proof (chain)\npicking this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  l \\<in> labels \\<Gamma> p\n  P (\\<sigma>, l)\n  Q ((\\<sigma>, l), a, \\<sigma>', l')", "show \"P (\\<sigma>', l')\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  l \\<in> labels \\<Gamma> p\n  P (\\<sigma>, l)\n  Q ((\\<sigma>, l), a, \\<sigma>', l')\n\ngoal (1 subgoal):\n 1. P (\\<sigma>', l')", "using \\<open>S \\<sigma> \\<sigma>' a\\<close>"], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  l \\<in> labels \\<Gamma> p\n  P (\\<sigma>, l)\n  Q ((\\<sigma>, l), a, \\<sigma>', l')\n  S \\<sigma> \\<sigma>' a\n\ngoal (1 subgoal):\n 1. P (\\<sigma>', l')", "by (rule local)"], ["proof (state)\nthis:\n  P (\\<sigma>', l')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P (\\<sigma>', l')\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)", "fix \\<sigma> \\<sigma>' p l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)", "assume \"(\\<sigma>, p) \\<in> oreachable A S U\"\n       and \"\\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\"\n       and \"U \\<sigma> \\<sigma>'\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\n  U \\<sigma> \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' p l.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l);\n        U \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)", "show \"\\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> labels \\<Gamma> p \\<Longrightarrow> P (\\<sigma>', l)", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> labels \\<Gamma> p \\<Longrightarrow> P (\\<sigma>', l)", "assume \"l\\<in>labels \\<Gamma> p\""], ["proof (state)\nthis:\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> labels \\<Gamma> p \\<Longrightarrow> P (\\<sigma>', l)", "with \\<open>\\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\n  l \\<in> labels \\<Gamma> p", "have \"P (\\<sigma>, l)\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>, l)\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<sigma>, l)", ".."], ["proof (state)\nthis:\n  P (\\<sigma>, l)\n\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> labels \\<Gamma> p \\<Longrightarrow> P (\\<sigma>', l)", "with \\<open>(\\<sigma>, p) \\<in> oreachable A S U\\<close> and \\<open>l\\<in>labels \\<Gamma> p\\<close>"], ["proof (chain)\npicking this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  l \\<in> labels \\<Gamma> p\n  P (\\<sigma>, l)", "show \"P (\\<sigma>', l)\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  l \\<in> labels \\<Gamma> p\n  P (\\<sigma>, l)\n\ngoal (1 subgoal):\n 1. P (\\<sigma>', l)", "using \\<open>U \\<sigma> \\<sigma>'\\<close>"], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  l \\<in> labels \\<Gamma> p\n  P (\\<sigma>, l)\n  U \\<sigma> \\<sigma>'\n\ngoal (1 subgoal):\n 1. P (\\<sigma>', l)", "by (rule other)"], ["proof (state)\nthis:\n  P (\\<sigma>', l)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<sigma>', l)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma onll_ostep_invariant_sterms:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and si: \"A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\"\n      and sr: \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and sos: \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> trans A\"\n      and \"S \\<sigma> \\<sigma>' a\"\n      and \"l'\\<in>labels \\<Gamma> q\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n      and \"l\\<in>labels \\<Gamma> p'\"\n    shows \"P ((\\<sigma>, l), a, (\\<sigma>', l'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P ((\\<sigma>, l), a, \\<sigma>', l')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P ((\\<sigma>, l), a, \\<sigma>', l')", "from wf \\<open>p'\\<in>sterms \\<Gamma> p\\<close> \\<open>l\\<in>labels \\<Gamma> p'\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  p' \\<in> sterms \\<Gamma> p\n  l \\<in> labels \\<Gamma> p'", "have \"l\\<in>labels \\<Gamma> p\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p' \\<in> sterms \\<Gamma> p\n  l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. l \\<in> labels \\<Gamma> p", "by (rule labels_sterms_labels)"], ["proof (state)\nthis:\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P ((\\<sigma>, l), a, \\<sigma>', l')", "with si sr sos \\<open>S \\<sigma> \\<sigma>' a\\<close>"], ["proof (chain)\npicking this:\n  A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n  l \\<in> labels \\<Gamma> p", "show \"P ((\\<sigma>, l), a, (\\<sigma>', l'))\""], ["proof (prove)\nusing this:\n  A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P ((\\<sigma>, l), a, \\<sigma>', l')", "using \\<open>l'\\<in>labels \\<Gamma> q\\<close>"], ["proof (prove)\nusing this:\n  A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n  l \\<in> labels \\<Gamma> p\n  l' \\<in> labels \\<Gamma> q\n\ngoal (1 subgoal):\n 1. P ((\\<sigma>, l), a, \\<sigma>', l')", ".."], ["proof (state)\nthis:\n  P ((\\<sigma>, l), a, \\<sigma>', l')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma oseq_step_invariant_sterms:\n  assumes inv: \"A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\"\n      and wf: \"wellformed \\<Gamma>\"\n      and sp: \"trans A = oseqp_sos \\<Gamma> i\"\n      and \"l'\\<in>labels \\<Gamma> q\"\n      and sr: \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and tr: \"((\\<sigma>, p'), a, (\\<sigma>', q)) \\<in> trans A\"\n      and \"S \\<sigma> \\<sigma>' a\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n    shows \"\\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, (\\<sigma>', l'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, \\<sigma>', l')", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> labels \\<Gamma> p' \\<Longrightarrow>\n       P ((\\<sigma>, l), a, \\<sigma>', l')", "from assms(3, 6)"], ["proof (chain)\npicking this:\n  automaton.trans A = oseqp_sos \\<Gamma> i\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> automaton.trans A", "have \"((\\<sigma>, p'), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  automaton.trans A = oseqp_sos \\<Gamma> i\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> automaton.trans A\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i", "by simp"], ["proof (state)\nthis:\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> labels \\<Gamma> p' \\<Longrightarrow>\n       P ((\\<sigma>, l), a, \\<sigma>', l')", "hence \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i", "using wf \\<open>p'\\<in>sterms \\<Gamma> p\\<close>"], ["proof (prove)\nusing this:\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n  wellformed \\<Gamma>\n  p' \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i", "by (rule otrans_from_sterms')"], ["proof (state)\nthis:\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> labels \\<Gamma> p' \\<Longrightarrow>\n       P ((\\<sigma>, l), a, \\<sigma>', l')", "with assms(3)"], ["proof (chain)\npicking this:\n  automaton.trans A = oseqp_sos \\<Gamma> i\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i", "have trp: \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> trans A\""], ["proof (prove)\nusing this:\n  automaton.trans A = oseqp_sos \\<Gamma> i\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A", "by simp"], ["proof (state)\nthis:\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> labels \\<Gamma> p' \\<Longrightarrow>\n       P ((\\<sigma>, l), a, \\<sigma>', l')", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> labels \\<Gamma> p' \\<Longrightarrow>\n       P ((\\<sigma>, l), a, \\<sigma>', l')", "assume \"l \\<in> labels \\<Gamma> p'\""], ["proof (state)\nthis:\n  l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> labels \\<Gamma> p' \\<Longrightarrow>\n       P ((\\<sigma>, l), a, \\<sigma>', l')", "with wf inv sr trp \\<open>S \\<sigma> \\<sigma>' a\\<close> \\<open>l'\\<in>labels \\<Gamma> q\\<close> \\<open>p'\\<in>sterms \\<Gamma> p\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n  l' \\<in> labels \\<Gamma> q\n  p' \\<in> sterms \\<Gamma> p\n  l \\<in> labels \\<Gamma> p'", "show \"P ((\\<sigma>, l), a, (\\<sigma>', l'))\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n  l' \\<in> labels \\<Gamma> q\n  p' \\<in> sterms \\<Gamma> p\n  l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. P ((\\<sigma>, l), a, \\<sigma>', l')", "by - (erule(7) onll_ostep_invariant_sterms)"], ["proof (state)\nthis:\n  P ((\\<sigma>, l), a, \\<sigma>', l')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma oseq_step_invariant_sterms_weaken:\n  assumes inv: \"A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\"\n      and wf: \"wellformed \\<Gamma>\"\n      and sp: \"trans A = oseqp_sos \\<Gamma> i\"\n      and \"l'\\<in>labels \\<Gamma> q\"\n      and sr: \"(\\<sigma>, p) \\<in> oreachable A S' U'\"\n      and tr: \"((\\<sigma>, p'), a, (\\<sigma>', q)) \\<in> trans A\"\n      and \"S' \\<sigma> \\<sigma>' a\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n      and weakenS: \"\\<And>\\<sigma> \\<sigma>' a. S' \\<sigma> \\<sigma>' a \\<Longrightarrow> S \\<sigma> \\<sigma>' a\"\n      and weakenU: \"\\<And>\\<sigma> \\<sigma>'. U' \\<sigma> \\<sigma>' \\<Longrightarrow> U \\<sigma> \\<sigma>'\"\n    shows \"\\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, (\\<sigma>', l'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, \\<sigma>', l')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, \\<sigma>', l')", "from \\<open>S' \\<sigma> \\<sigma>' a\\<close>"], ["proof (chain)\npicking this:\n  S' \\<sigma> \\<sigma>' a", "have \"S \\<sigma> \\<sigma>' a\""], ["proof (prove)\nusing this:\n  S' \\<sigma> \\<sigma>' a\n\ngoal (1 subgoal):\n 1. S \\<sigma> \\<sigma>' a", "by (rule weakenS)"], ["proof (state)\nthis:\n  S \\<sigma> \\<sigma>' a\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, \\<sigma>', l')", "from \\<open>(\\<sigma>, p) \\<in> oreachable A S' U'\\<close>"], ["proof (chain)\npicking this:\n  (\\<sigma>, p) \\<in> oreachable A S' U'", "have Ir: \"(\\<sigma>, p) \\<in> oreachable A S U\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S' U'\n\ngoal (1 subgoal):\n 1. (\\<sigma>, p) \\<in> oreachable A S U", "by (rule oreachable_weakenE)\n           (erule weakenS, erule weakenU)"], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> oreachable A S U\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, \\<sigma>', l')", "with assms(1-4)"], ["proof (chain)\npicking this:\n  A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\n  wellformed \\<Gamma>\n  automaton.trans A = oseqp_sos \\<Gamma> i\n  l' \\<in> labels \\<Gamma> q\n  (\\<sigma>, p) \\<in> oreachable A S U", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\n  wellformed \\<Gamma>\n  automaton.trans A = oseqp_sos \\<Gamma> i\n  l' \\<in> labels \\<Gamma> q\n  (\\<sigma>, p) \\<in> oreachable A S U\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, \\<sigma>', l')", "using tr \\<open>S \\<sigma> \\<sigma>' a\\<close> \\<open>p'\\<in>sterms \\<Gamma> p\\<close>"], ["proof (prove)\nusing this:\n  A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\n  wellformed \\<Gamma>\n  automaton.trans A = oseqp_sos \\<Gamma> i\n  l' \\<in> labels \\<Gamma> q\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n  p' \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, \\<sigma>', l')", "by (rule oseq_step_invariant_sterms)"], ["proof (state)\nthis:\n  \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, \\<sigma>', l')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma onll_ostep_invariant_any_sterms:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and si: \"A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\"\n      and sr: \"(\\<sigma>, p) \\<in> oreachable A S U\"\n      and sos: \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> trans A\"\n      and \"S \\<sigma> \\<sigma>' a\"\n      and \"l'\\<in>labels \\<Gamma> q\"\n    shows \"\\<forall>p'\\<in>sterms \\<Gamma> p. \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<sigma>, l), a, (\\<sigma>', l'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p'\\<in>sterms \\<Gamma> p.\n       \\<forall>l\\<in>labels \\<Gamma> p'.\n          P ((\\<sigma>, l), a, \\<sigma>', l')", "by (intro ballI) (rule onll_ostep_invariant_sterms [OF assms])"], ["", "lemma oseq_step_invariant_ctermI [intro]:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and cw: \"control_within \\<Gamma> (init A)\"\n      and sl: \"simple_labels \\<Gamma>\"\n      and sp: \"trans A = oseqp_sos \\<Gamma> i\"\n      and local: \"\\<And>p l \\<sigma> a q l' \\<sigma>' pp. \\<lbrakk>\n                   p\\<in>cterms \\<Gamma>;\n                   l\\<in>labels \\<Gamma> p;\n                   ((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i;\n                   ((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> trans A;\n                   l'\\<in>labels \\<Gamma> q;\n                   (\\<sigma>, pp) \\<in> oreachable A S U;\n                   p\\<in>sterms \\<Gamma> pp;\n                   (\\<sigma>', q) \\<in> oreachable A S U;\n                   S \\<sigma> \\<sigma>' a\n                 \\<rbrakk> \\<Longrightarrow> P ((\\<sigma>, l), a, (\\<sigma>', l'))\"\n    shows \"A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> p l a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; l \\<in> labels \\<Gamma> p;\n        l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<sigma>, l), a, \\<sigma>', l')", "fix \\<sigma> p l a \\<sigma>' q l'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> p l a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; l \\<in> labels \\<Gamma> p;\n        l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<sigma>, l), a, \\<sigma>', l')", "assume sr: \"(\\<sigma>, p) \\<in> oreachable A S U\"\n       and tr: \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> trans A\"\n       and \"S \\<sigma> \\<sigma>' a\"\n       and pl: \"l \\<in> labels \\<Gamma> p\"\n       and A5: \"l' \\<in> labels \\<Gamma> q\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n  l \\<in> labels \\<Gamma> p\n  l' \\<in> labels \\<Gamma> q\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> p l a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; l \\<in> labels \\<Gamma> p;\n        l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<sigma>, l), a, \\<sigma>', l')", "from this(2) and sp"], ["proof (chain)\npicking this:\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  automaton.trans A = oseqp_sos \\<Gamma> i", "have \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  automaton.trans A = oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i", "by simp"], ["proof (state)\nthis:\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> p l a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; l \\<in> labels \\<Gamma> p;\n        l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<sigma>, l), a, \\<sigma>', l')", "then"], ["proof (chain)\npicking this:\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i", "obtain p' where \"p' \\<in> sterms \\<Gamma> p\"\n                     and A3: \"((\\<sigma>, p'), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. (\\<And>p'.\n        \\<lbrakk>p' \\<in> sterms \\<Gamma> p;\n         ((\\<sigma>, p'), a, \\<sigma>', q)\n         \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast dest: otrans_from_sterms [OF _ wf])"], ["proof (state)\nthis:\n  p' \\<in> sterms \\<Gamma> p\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> p l a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; l \\<in> labels \\<Gamma> p;\n        l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<sigma>, l), a, \\<sigma>', l')", "from this(2) and sp"], ["proof (chain)\npicking this:\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n  automaton.trans A = oseqp_sos \\<Gamma> i", "have A4: \"((\\<sigma>, p'), a, (\\<sigma>', q)) \\<in> trans A\""], ["proof (prove)\nusing this:\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n  automaton.trans A = oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> automaton.trans A", "by simp"], ["proof (state)\nthis:\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> automaton.trans A\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> p l a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; l \\<in> labels \\<Gamma> p;\n        l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<sigma>, l), a, \\<sigma>', l')", "from wf cw sp sr \\<open>p'\\<in>sterms \\<Gamma> p\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  control_within \\<Gamma> (init A)\n  automaton.trans A = oseqp_sos \\<Gamma> i\n  (\\<sigma>, p) \\<in> oreachable A S U\n  p' \\<in> sterms \\<Gamma> p", "have A1: \"p'\\<in>cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  control_within \\<Gamma> (init A)\n  automaton.trans A = oseqp_sos \\<Gamma> i\n  (\\<sigma>, p) \\<in> oreachable A S U\n  p' \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. p' \\<in> cterms \\<Gamma>", "by (rule oseq_reachable_in_cterms)"], ["proof (state)\nthis:\n  p' \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> p l a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; l \\<in> labels \\<Gamma> p;\n        l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<sigma>, l), a, \\<sigma>', l')", "from sr \\<open>p'\\<in>sterms \\<Gamma> p\\<close>"], ["proof (chain)\npicking this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  p' \\<in> sterms \\<Gamma> p", "obtain pp where A6: \"(\\<sigma>, pp)\\<in>oreachable A S U\"\n                  and A7: \"p'\\<in>sterms \\<Gamma> pp\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  p' \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. (\\<And>pp.\n        \\<lbrakk>(\\<sigma>, pp) \\<in> oreachable A S U;\n         p' \\<in> sterms \\<Gamma> pp\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<sigma>, pp) \\<in> oreachable A S U\n  p' \\<in> sterms \\<Gamma> pp\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> p l a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; l \\<in> labels \\<Gamma> p;\n        l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<sigma>, l), a, \\<sigma>', l')", "from sr tr \\<open>S \\<sigma> \\<sigma>' a\\<close>"], ["proof (chain)\npicking this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a", "have A8: \"(\\<sigma>', q)\\<in>oreachable A S U\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> oreachable A S U\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  S \\<sigma> \\<sigma>' a\n\ngoal (1 subgoal):\n 1. (\\<sigma>', q) \\<in> oreachable A S U", "by - (erule(2) oreachable_local')"], ["proof (state)\nthis:\n  (\\<sigma>', q) \\<in> oreachable A S U\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> p l a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; l \\<in> labels \\<Gamma> p;\n        l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<sigma>, l), a, \\<sigma>', l')", "from wf cw sp sr"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  control_within \\<Gamma> (init A)\n  automaton.trans A = oseqp_sos \\<Gamma> i\n  (\\<sigma>, p) \\<in> oreachable A S U", "have \"\\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  control_within \\<Gamma> (init A)\n  automaton.trans A = oseqp_sos \\<Gamma> i\n  (\\<sigma>, p) \\<in> oreachable A S U\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)", "by (rule oreachable_subterms)"], ["proof (state)\nthis:\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> p l a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; l \\<in> labels \\<Gamma> p;\n        l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<sigma>, l), a, \\<sigma>', l')", "with sl wf"], ["proof (chain)\npicking this:\n  simple_labels \\<Gamma>\n  wellformed \\<Gamma>\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)", "have \"\\<forall>p'\\<in>sterms \\<Gamma> p. l \\<in> labels \\<Gamma> p'\""], ["proof (prove)\nusing this:\n  simple_labels \\<Gamma>\n  wellformed \\<Gamma>\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<forall>p'\\<in>sterms \\<Gamma> p. l \\<in> labels \\<Gamma> p'", "using pl"], ["proof (prove)\nusing this:\n  simple_labels \\<Gamma>\n  wellformed \\<Gamma>\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. \\<forall>p'\\<in>sterms \\<Gamma> p. l \\<in> labels \\<Gamma> p'", "by (rule simple_labels_in_sterms)"], ["proof (state)\nthis:\n  \\<forall>p'\\<in>sterms \\<Gamma> p. l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> p l a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; l \\<in> labels \\<Gamma> p;\n        l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<sigma>, l), a, \\<sigma>', l')", "with \\<open>p' \\<in> sterms \\<Gamma> p\\<close>"], ["proof (chain)\npicking this:\n  p' \\<in> sterms \\<Gamma> p\n  \\<forall>p'\\<in>sterms \\<Gamma> p. l \\<in> labels \\<Gamma> p'", "have \"l \\<in> labels \\<Gamma> p'\""], ["proof (prove)\nusing this:\n  p' \\<in> sterms \\<Gamma> p\n  \\<forall>p'\\<in>sterms \\<Gamma> p. l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. l \\<in> labels \\<Gamma> p'", "by simp"], ["proof (state)\nthis:\n  l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> p l a \\<sigma>' p' l'.\n       \\<lbrakk>(\\<sigma>, p) \\<in> oreachable A S U;\n        ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans A;\n        S \\<sigma> \\<sigma>' a; l \\<in> labels \\<Gamma> p;\n        l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<sigma>, l), a, \\<sigma>', l')", "with A1"], ["proof (chain)\npicking this:\n  p' \\<in> cterms \\<Gamma>\n  l \\<in> labels \\<Gamma> p'", "show \"P ((\\<sigma>, l), a, (\\<sigma>', l'))\""], ["proof (prove)\nusing this:\n  p' \\<in> cterms \\<Gamma>\n  l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. P ((\\<sigma>, l), a, \\<sigma>', l')", "using A3 A4 A5 A6 A7 A8 \\<open>S \\<sigma> \\<sigma>' a\\<close>"], ["proof (prove)\nusing this:\n  p' \\<in> cterms \\<Gamma>\n  l \\<in> labels \\<Gamma> p'\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n  ((\\<sigma>, p'), a, \\<sigma>', q) \\<in> automaton.trans A\n  l' \\<in> labels \\<Gamma> q\n  (\\<sigma>, pp) \\<in> oreachable A S U\n  p' \\<in> sterms \\<Gamma> pp\n  (\\<sigma>', q) \\<in> oreachable A S U\n  S \\<sigma> \\<sigma>' a\n\ngoal (1 subgoal):\n 1. P ((\\<sigma>, l), a, \\<sigma>', l')", "by (rule local)"], ["proof (state)\nthis:\n  P ((\\<sigma>, l), a, \\<sigma>', l')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma oseq_step_invariant_ctermsI [intro]:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and \"control_within \\<Gamma> (init A)\"\n      and \"simple_labels \\<Gamma>\"\n      and \"trans A = oseqp_sos \\<Gamma> i\"\n      and local: \"\\<And>p l \\<sigma> a q l' \\<sigma>' pp pn. \\<lbrakk>\n                   wellformed \\<Gamma>;\n                   p\\<in>ctermsl (\\<Gamma> pn);\n                   not_call p;\n                   l\\<in>labels \\<Gamma> p;\n                   ((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i;\n                   ((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> trans A;\n                   l'\\<in>labels \\<Gamma> q;\n                   (\\<sigma>, pp) \\<in> oreachable A S U;\n                   p\\<in>sterms \\<Gamma> pp;\n                   (\\<sigma>', q) \\<in> oreachable A S U;\n                   S \\<sigma> \\<sigma>' a\n                 \\<rbrakk> \\<Longrightarrow> P ((\\<sigma>, l), a, (\\<sigma>', l'))\"\n    shows \"A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P", "using assms(1-4)"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  control_within \\<Gamma> (init A)\n  simple_labels \\<Gamma>\n  automaton.trans A = oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. A \\<Turnstile>\\<^sub>A (S, U \\<rightarrow>) onll \\<Gamma> P", "proof (rule oseq_step_invariant_ctermI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p l \\<sigma> a q l' \\<sigma>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i;\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<sigma>, pp) \\<in> oreachable A S U;\n        p \\<in> sterms \\<Gamma> pp; (\\<sigma>', q) \\<in> oreachable A S U;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P ((\\<sigma>, l), a, \\<sigma>', l')", "fix p l \\<sigma> a q l' \\<sigma>' pp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p l \\<sigma> a q l' \\<sigma>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i;\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<sigma>, pp) \\<in> oreachable A S U;\n        p \\<in> sterms \\<Gamma> pp; (\\<sigma>', q) \\<in> oreachable A S U;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P ((\\<sigma>, l), a, \\<sigma>', l')", "assume \"p \\<in> cterms \\<Gamma>\"\n       and otherassms: \"l \\<in> labels \\<Gamma> p\"\n           \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> oseqp_sos \\<Gamma> i\"\n           \"((\\<sigma>, p), a, (\\<sigma>', q)) \\<in> trans A\"\n           \"l' \\<in> labels \\<Gamma> q\"\n           \"(\\<sigma>, pp) \\<in> oreachable A S U\"\n           \"p \\<in> sterms \\<Gamma> pp\"\n           \"(\\<sigma>', q) \\<in> oreachable A S U\"\n           \"S \\<sigma> \\<sigma>' a\""], ["proof (state)\nthis:\n  p \\<in> cterms \\<Gamma>\n  l \\<in> labels \\<Gamma> p\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  l' \\<in> labels \\<Gamma> q\n  (\\<sigma>, pp) \\<in> oreachable A S U\n  p \\<in> sterms \\<Gamma> pp\n  (\\<sigma>', q) \\<in> oreachable A S U\n  S \\<sigma> \\<sigma>' a\n\ngoal (1 subgoal):\n 1. \\<And>p l \\<sigma> a q l' \\<sigma>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i;\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<sigma>, pp) \\<in> oreachable A S U;\n        p \\<in> sterms \\<Gamma> pp; (\\<sigma>', q) \\<in> oreachable A S U;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P ((\\<sigma>, l), a, \\<sigma>', l')", "from this(1)"], ["proof (chain)\npicking this:\n  p \\<in> cterms \\<Gamma>", "obtain pn where \"p \\<in> ctermsl(\\<Gamma> pn)\"\n                             and \"not_call p\""], ["proof (prove)\nusing this:\n  p \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. (\\<And>pn.\n        \\<lbrakk>p \\<in> ctermsl (\\<Gamma> pn); not_call p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding cterms_def' [OF wf]"], ["proof (prove)\nusing this:\n  p \\<in> {uu_.\n           \\<exists>p pn.\n              uu_ = p \\<and>\n              p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n\ngoal (1 subgoal):\n 1. (\\<And>pn.\n        \\<lbrakk>p \\<in> ctermsl (\\<Gamma> pn); not_call p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p \\<in> ctermsl (\\<Gamma> pn)\n  not_call p\n\ngoal (1 subgoal):\n 1. \\<And>p l \\<sigma> a q l' \\<sigma>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i;\n        ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<sigma>, pp) \\<in> oreachable A S U;\n        p \\<in> sterms \\<Gamma> pp; (\\<sigma>', q) \\<in> oreachable A S U;\n        S \\<sigma> \\<sigma>' a\\<rbrakk>\n       \\<Longrightarrow> P ((\\<sigma>, l), a, \\<sigma>', l')", "with wf"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  p \\<in> ctermsl (\\<Gamma> pn)\n  not_call p", "show \"P ((\\<sigma>, l), a, (\\<sigma>', l'))\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p \\<in> ctermsl (\\<Gamma> pn)\n  not_call p\n\ngoal (1 subgoal):\n 1. P ((\\<sigma>, l), a, \\<sigma>', l')", "using otherassms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p \\<in> ctermsl (\\<Gamma> pn)\n  not_call p\n  l \\<in> labels \\<Gamma> p\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> oseqp_sos \\<Gamma> i\n  ((\\<sigma>, p), a, \\<sigma>', q) \\<in> automaton.trans A\n  l' \\<in> labels \\<Gamma> q\n  (\\<sigma>, pp) \\<in> oreachable A S U\n  p \\<in> sterms \\<Gamma> pp\n  (\\<sigma>', q) \\<in> oreachable A S U\n  S \\<sigma> \\<sigma>' a\n\ngoal (1 subgoal):\n 1. P ((\\<sigma>, l), a, \\<sigma>', l')", "by (rule local)"], ["proof (state)\nthis:\n  P ((\\<sigma>, l), a, \\<sigma>', l')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma open_seqp_action [elim]:\n  assumes \"wellformed \\<Gamma>\"\n      and \"((\\<sigma> i, p), a, (\\<sigma>' i, p')) \\<in> seqp_sos \\<Gamma>\"\n    shows \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i", "from assms"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  ((\\<sigma> i, p), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>", "obtain ps where \"ps\\<in>sterms \\<Gamma> p\"\n                           and \"((\\<sigma> i, ps), a, (\\<sigma>' i, p')) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  ((\\<sigma> i, p), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. (\\<And>ps.\n        \\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n         ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n         \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by - (drule trans_from_sterms, auto)"], ["proof (state)\nthis:\n  ps \\<in> sterms \\<Gamma> p\n  ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i", "thus ?thesis"], ["proof (prove)\nusing this:\n  ps \\<in> sterms \\<Gamma> p\n  ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i", "proof (induction p)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<langle>x2\\<rangle>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<lbrakk>x2\\<rbrakk>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p1;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p1), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        \\<lbrakk>ps \\<in> sterms \\<Gamma> p2;\n         ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n         \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> ((\\<sigma>, p2), a, \\<sigma>', p')\n                          \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> (p1\n                                  \\<oplus>\n                                  p2);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, p1\n                                     \\<oplus>\n                                     p2),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p1;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p1), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        \\<lbrakk>ps \\<in> sterms \\<Gamma> p2;\n         ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n         \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> ((\\<sigma>, p2), a, \\<sigma>', p')\n                          \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n                                     p1 \\<triangleright> p2);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}unicast(x2, x3) .\n  p1 \\<triangleright> p2),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}broadcast(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}broadcast(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}groupcast(x2, x3) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}send(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}send(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}deliver(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}deliver(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}receive(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}receive(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>x.\n        \\<lbrakk>ps \\<in> sterms \\<Gamma> (call(x));\n         ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n         \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> ((\\<sigma>, call(x)), a, \\<sigma>', p')\n                          \\<in> oseqp_sos \\<Gamma> i", "fix p1 p2"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<langle>x2\\<rangle>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<lbrakk>x2\\<rbrakk>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p1;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p1), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        \\<lbrakk>ps \\<in> sterms \\<Gamma> p2;\n         ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n         \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> ((\\<sigma>, p2), a, \\<sigma>', p')\n                          \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> (p1\n                                  \\<oplus>\n                                  p2);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, p1\n                                     \\<oplus>\n                                     p2),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p1;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p1), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        \\<lbrakk>ps \\<in> sterms \\<Gamma> p2;\n         ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n         \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> ((\\<sigma>, p2), a, \\<sigma>', p')\n                          \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n                                     p1 \\<triangleright> p2);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}unicast(x2, x3) .\n  p1 \\<triangleright> p2),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}broadcast(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}broadcast(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}groupcast(x2, x3) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}send(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}send(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}deliver(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}deliver(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}receive(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}receive(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>x.\n        \\<lbrakk>ps \\<in> sterms \\<Gamma> (call(x));\n         ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n         \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> ((\\<sigma>, call(x)), a, \\<sigma>', p')\n                          \\<in> oseqp_sos \\<Gamma> i", "assume \"\\<lbrakk> ps \\<in> sterms \\<Gamma> p1; ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma> \\<rbrakk>\n              \\<Longrightarrow> ((\\<sigma>, p1), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\"\n         and \"\\<lbrakk> ps \\<in> sterms \\<Gamma> p2; ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma> \\<rbrakk>\n              \\<Longrightarrow> ((\\<sigma>, p2), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\"\n         and \"ps \\<in> sterms \\<Gamma> (p1 \\<oplus> p2)\"\n         and \"((\\<sigma> i, ps), a, (\\<sigma>' i, p')) \\<in> seqp_sos \\<Gamma>\""], ["proof (state)\nthis:\n  \\<lbrakk>ps \\<in> sterms \\<Gamma> p1;\n   ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> ((\\<sigma>, p1), a, \\<sigma>', p')\n                    \\<in> oseqp_sos \\<Gamma> i\n  \\<lbrakk>ps \\<in> sterms \\<Gamma> p2;\n   ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> ((\\<sigma>, p2), a, \\<sigma>', p')\n                    \\<in> oseqp_sos \\<Gamma> i\n  ps \\<in> sterms \\<Gamma> (p1\n                            \\<oplus>\n                            p2)\n  ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>\n\ngoal (10 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<langle>x2\\<rangle>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<lbrakk>x2\\<rbrakk>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p1;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p1), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        \\<lbrakk>ps \\<in> sterms \\<Gamma> p2;\n         ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n         \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> ((\\<sigma>, p2), a, \\<sigma>', p')\n                          \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> (p1\n                                  \\<oplus>\n                                  p2);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, p1\n                                     \\<oplus>\n                                     p2),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p1;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p1), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        \\<lbrakk>ps \\<in> sterms \\<Gamma> p2;\n         ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n         \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> ((\\<sigma>, p2), a, \\<sigma>', p')\n                          \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n                                     p1 \\<triangleright> p2);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}unicast(x2, x3) .\n  p1 \\<triangleright> p2),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}broadcast(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}broadcast(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>x1 x2 x3 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}groupcast(x2, x3) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}send(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}send(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}deliver(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}deliver(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}receive(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}receive(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>x.\n        \\<lbrakk>ps \\<in> sterms \\<Gamma> (call(x));\n         ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n         \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> ((\\<sigma>, call(x)), a, \\<sigma>', p')\n                          \\<in> oseqp_sos \\<Gamma> i", "with assms(1)"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  \\<lbrakk>ps \\<in> sterms \\<Gamma> p1;\n   ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> ((\\<sigma>, p1), a, \\<sigma>', p')\n                    \\<in> oseqp_sos \\<Gamma> i\n  \\<lbrakk>ps \\<in> sterms \\<Gamma> p2;\n   ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> ((\\<sigma>, p2), a, \\<sigma>', p')\n                    \\<in> oseqp_sos \\<Gamma> i\n  ps \\<in> sterms \\<Gamma> (p1\n                            \\<oplus>\n                            p2)\n  ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>", "show \"((\\<sigma>, p1 \\<oplus> p2), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  \\<lbrakk>ps \\<in> sterms \\<Gamma> p1;\n   ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> ((\\<sigma>, p1), a, \\<sigma>', p')\n                    \\<in> oseqp_sos \\<Gamma> i\n  \\<lbrakk>ps \\<in> sterms \\<Gamma> p2;\n   ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> ((\\<sigma>, p2), a, \\<sigma>', p')\n                    \\<in> oseqp_sos \\<Gamma> i\n  ps \\<in> sterms \\<Gamma> (p1\n                            \\<oplus>\n                            p2)\n  ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, p1\n                \\<oplus>\n                p2),\n     a, \\<sigma>', p')\n    \\<in> oseqp_sos \\<Gamma> i", "by simp (metis oseqp_sos.ochoiceT1 oseqp_sos.ochoiceT2)"], ["proof (state)\nthis:\n  ((\\<sigma>, p1\n              \\<oplus>\n              p2),\n   a, \\<sigma>', p')\n  \\<in> oseqp_sos \\<Gamma> i\n\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<langle>x2\\<rangle>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<lbrakk>x2\\<rbrakk>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p1;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p1), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        \\<lbrakk>ps \\<in> sterms \\<Gamma> p2;\n         ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n         \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> ((\\<sigma>, p2), a, \\<sigma>', p')\n                          \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n                                     p1 \\<triangleright> p2);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}unicast(x2, x3) .\n  p1 \\<triangleright> p2),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}broadcast(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}broadcast(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>x1 x2 x3 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}groupcast(x2, x3) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}send(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}send(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}deliver(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}deliver(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}receive(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}receive(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>x.\n       \\<lbrakk>ps \\<in> sterms \\<Gamma> (call(x));\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, call(x)), a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<langle>x2\\<rangle>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<lbrakk>x2\\<rbrakk>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p1;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p1), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        \\<lbrakk>ps \\<in> sterms \\<Gamma> p2;\n         ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n         \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> ((\\<sigma>, p2), a, \\<sigma>', p')\n                          \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n                                     p1 \\<triangleright> p2);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}unicast(x2, x3) .\n  p1 \\<triangleright> p2),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}broadcast(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}broadcast(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>x1 x2 x3 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}groupcast(x2, x3) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}send(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}send(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}deliver(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}deliver(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}receive(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}receive(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>x.\n       \\<lbrakk>ps \\<in> sterms \\<Gamma> (call(x));\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, call(x)), a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i", "fix l fip fmsg p1 p2"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<langle>x2\\<rangle>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<lbrakk>x2\\<rbrakk>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p1;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p1), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        \\<lbrakk>ps \\<in> sterms \\<Gamma> p2;\n         ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n         \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> ((\\<sigma>, p2), a, \\<sigma>', p')\n                          \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n                                     p1 \\<triangleright> p2);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}unicast(x2, x3) .\n  p1 \\<triangleright> p2),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}broadcast(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}broadcast(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>x1 x2 x3 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}groupcast(x2, x3) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}send(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}send(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}deliver(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}deliver(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}receive(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}receive(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>x.\n       \\<lbrakk>ps \\<in> sterms \\<Gamma> (call(x));\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, call(x)), a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i", "assume IH1: \"\\<lbrakk> ps \\<in> sterms \\<Gamma> p1; ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma> \\<rbrakk>\n                    \\<Longrightarrow> ((\\<sigma>, p1), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\"\n         and IH2: \"\\<lbrakk> ps \\<in> sterms \\<Gamma> p2; ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma> \\<rbrakk>\n                    \\<Longrightarrow> ((\\<sigma>, p2), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\"\n         and \"ps \\<in> sterms \\<Gamma> ({l}unicast(fip, fmsg). p1 \\<triangleright> p2)\"\n         and \"((\\<sigma> i, ps), a, (\\<sigma>' i, p')) \\<in> seqp_sos \\<Gamma>\""], ["proof (state)\nthis:\n  \\<lbrakk>ps \\<in> sterms \\<Gamma> p1;\n   ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> ((\\<sigma>, p1), a, \\<sigma>', p')\n                    \\<in> oseqp_sos \\<Gamma> i\n  \\<lbrakk>ps \\<in> sterms \\<Gamma> p2;\n   ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> ((\\<sigma>, p2), a, \\<sigma>', p')\n                    \\<in> oseqp_sos \\<Gamma> i\n  ps \\<in> sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                               p1 \\<triangleright> p2)\n  ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>\n\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<langle>x2\\<rangle>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<lbrakk>x2\\<rbrakk>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p1;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p1), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        \\<lbrakk>ps \\<in> sterms \\<Gamma> p2;\n         ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n         \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> ((\\<sigma>, p2), a, \\<sigma>', p')\n                          \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n                                     p1 \\<triangleright> p2);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}unicast(x2, x3) .\n  p1 \\<triangleright> p2),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}broadcast(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}broadcast(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>x1 x2 x3 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}groupcast(x2, x3) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}send(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}send(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}deliver(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}deliver(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}receive(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}receive(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>x.\n       \\<lbrakk>ps \\<in> sterms \\<Gamma> (call(x));\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, call(x)), a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i", "from this(3-4)"], ["proof (chain)\npicking this:\n  ps \\<in> sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                               p1 \\<triangleright> p2)\n  ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>", "have \"((\\<sigma> i, {l}unicast(fip, fmsg). p1 \\<triangleright> p2), a, (\\<sigma>' i, p')) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\nusing this:\n  ps \\<in> sterms \\<Gamma> ({l}unicast(fip, fmsg) .\n                               p1 \\<triangleright> p2)\n  ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. ((\\<sigma> i, {l}unicast(fip, fmsg) .\n                     p1 \\<triangleright> p2),\n     a, \\<sigma>' i, p')\n    \\<in> seqp_sos \\<Gamma>", "by simp"], ["proof (state)\nthis:\n  ((\\<sigma> i, {l}unicast(fip, fmsg) .\n                   p1 \\<triangleright> p2),\n   a, \\<sigma>' i, p')\n  \\<in> seqp_sos \\<Gamma>\n\ngoal (9 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<langle>x2\\<rangle>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<lbrakk>x2\\<rbrakk>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>x1 x2 x3 p1 p2.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p1;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p1), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        \\<lbrakk>ps \\<in> sterms \\<Gamma> p2;\n         ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n         \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> ((\\<sigma>, p2), a, \\<sigma>', p')\n                          \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}unicast(x2, x3) .\n                                     p1 \\<triangleright> p2);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}unicast(x2, x3) .\n  p1 \\<triangleright> p2),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}broadcast(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}broadcast(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>x1 x2 x3 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}groupcast(x2, x3) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}send(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}send(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}deliver(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}deliver(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}receive(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}receive(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>x.\n       \\<lbrakk>ps \\<in> sterms \\<Gamma> (call(x));\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, call(x)), a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i", "thus \"((\\<sigma>, {l}unicast(fip, fmsg). p1 \\<triangleright> p2), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  ((\\<sigma> i, {l}unicast(fip, fmsg) .\n                   p1 \\<triangleright> p2),\n   a, \\<sigma>' i, p')\n  \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, {l}unicast(fip, fmsg) .\n                   p1 \\<triangleright> p2),\n     a, \\<sigma>', p')\n    \\<in> oseqp_sos \\<Gamma> i", "proof (rule seqp_unicastTE)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>a = unicast (fip (\\<sigma> i)) (fmsg (\\<sigma> i));\n     \\<sigma>' i = \\<sigma> i; p' = p1\\<rbrakk>\n    \\<Longrightarrow> ((\\<sigma>, {l}unicast(fip, fmsg) .\n                                     p1 \\<triangleright> p2),\n                       a, \\<sigma>', p')\n                      \\<in> oseqp_sos \\<Gamma> i\n 2. \\<lbrakk>a = \\<not>unicast (fip (\\<sigma> i)); \\<sigma>' i = \\<sigma> i;\n     p' = p2\\<rbrakk>\n    \\<Longrightarrow> ((\\<sigma>, {l}unicast(fip, fmsg) .\n                                     p1 \\<triangleright> p2),\n                       a, \\<sigma>', p')\n                      \\<in> oseqp_sos \\<Gamma> i", "assume \"a = unicast (fip (\\<sigma> i)) (fmsg (\\<sigma> i))\"\n           and \"\\<sigma>' i = \\<sigma> i\"\n           and \"p' = p1\""], ["proof (state)\nthis:\n  a = unicast (fip (\\<sigma> i)) (fmsg (\\<sigma> i))\n  \\<sigma>' i = \\<sigma> i\n  p' = p1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a = unicast (fip (\\<sigma> i)) (fmsg (\\<sigma> i));\n     \\<sigma>' i = \\<sigma> i; p' = p1\\<rbrakk>\n    \\<Longrightarrow> ((\\<sigma>, {l}unicast(fip, fmsg) .\n                                     p1 \\<triangleright> p2),\n                       a, \\<sigma>', p')\n                      \\<in> oseqp_sos \\<Gamma> i\n 2. \\<lbrakk>a = \\<not>unicast (fip (\\<sigma> i)); \\<sigma>' i = \\<sigma> i;\n     p' = p2\\<rbrakk>\n    \\<Longrightarrow> ((\\<sigma>, {l}unicast(fip, fmsg) .\n                                     p1 \\<triangleright> p2),\n                       a, \\<sigma>', p')\n                      \\<in> oseqp_sos \\<Gamma> i", "thus ?thesis"], ["proof (prove)\nusing this:\n  a = unicast (fip (\\<sigma> i)) (fmsg (\\<sigma> i))\n  \\<sigma>' i = \\<sigma> i\n  p' = p1\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, {l}unicast(fip, fmsg) .\n                   p1 \\<triangleright> p2),\n     a, \\<sigma>', p')\n    \\<in> oseqp_sos \\<Gamma> i", "by auto"], ["proof (state)\nthis:\n  ((\\<sigma>, {l}unicast(fip, fmsg) .\n                 p1 \\<triangleright> p2),\n   a, \\<sigma>', p')\n  \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<not>unicast (fip (\\<sigma> i)); \\<sigma>' i = \\<sigma> i;\n     p' = p2\\<rbrakk>\n    \\<Longrightarrow> ((\\<sigma>, {l}unicast(fip, fmsg) .\n                                     p1 \\<triangleright> p2),\n                       a, \\<sigma>', p')\n                      \\<in> oseqp_sos \\<Gamma> i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<not>unicast (fip (\\<sigma> i)); \\<sigma>' i = \\<sigma> i;\n     p' = p2\\<rbrakk>\n    \\<Longrightarrow> ((\\<sigma>, {l}unicast(fip, fmsg) .\n                                     p1 \\<triangleright> p2),\n                       a, \\<sigma>', p')\n                      \\<in> oseqp_sos \\<Gamma> i", "assume \"a = \\<not>unicast (fip (\\<sigma> i))\"\n           and \"\\<sigma>' i = \\<sigma> i\"\n           and \"p' = p2\""], ["proof (state)\nthis:\n  a = \\<not>unicast (fip (\\<sigma> i))\n  \\<sigma>' i = \\<sigma> i\n  p' = p2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<not>unicast (fip (\\<sigma> i)); \\<sigma>' i = \\<sigma> i;\n     p' = p2\\<rbrakk>\n    \\<Longrightarrow> ((\\<sigma>, {l}unicast(fip, fmsg) .\n                                     p1 \\<triangleright> p2),\n                       a, \\<sigma>', p')\n                      \\<in> oseqp_sos \\<Gamma> i", "thus ?thesis"], ["proof (prove)\nusing this:\n  a = \\<not>unicast (fip (\\<sigma> i))\n  \\<sigma>' i = \\<sigma> i\n  p' = p2\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, {l}unicast(fip, fmsg) .\n                   p1 \\<triangleright> p2),\n     a, \\<sigma>', p')\n    \\<in> oseqp_sos \\<Gamma> i", "by auto"], ["proof (state)\nthis:\n  ((\\<sigma>, {l}unicast(fip, fmsg) .\n                 p1 \\<triangleright> p2),\n   a, \\<sigma>', p')\n  \\<in> oseqp_sos \\<Gamma> i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((\\<sigma>, {l}unicast(fip, fmsg) .\n                 p1 \\<triangleright> p2),\n   a, \\<sigma>', p')\n  \\<in> oseqp_sos \\<Gamma> i\n\ngoal (8 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<langle>x2\\<rangle>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<lbrakk>x2\\<rbrakk>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}broadcast(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}broadcast(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>x1 x2 x3 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}groupcast(x2, x3) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}send(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}send(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}deliver(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}deliver(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}receive(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}receive(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>x.\n       \\<lbrakk>ps \\<in> sterms \\<Gamma> (call(x));\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, call(x)), a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<langle>x2\\<rangle>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<lbrakk>x2\\<rbrakk>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}broadcast(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}broadcast(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>x1 x2 x3 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}groupcast(x2, x3) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}send(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}send(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}deliver(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}deliver(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}receive(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}receive(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>x.\n       \\<lbrakk>ps \\<in> sterms \\<Gamma> (call(x));\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, call(x)), a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i", "fix p"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<langle>x2\\<rangle>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<lbrakk>x2\\<rbrakk>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}broadcast(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}broadcast(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>x1 x2 x3 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}groupcast(x2, x3) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}send(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}send(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}deliver(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}deliver(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}receive(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}receive(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>x.\n       \\<lbrakk>ps \\<in> sterms \\<Gamma> (call(x));\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, call(x)), a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i", "assume \"ps \\<in> sterms \\<Gamma> (call(p))\"\n         and \"((\\<sigma> i, ps), a, (\\<sigma>' i, p')) \\<in> seqp_sos \\<Gamma>\""], ["proof (state)\nthis:\n  ps \\<in> sterms \\<Gamma> (call(p))\n  ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>\n\ngoal (8 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<langle>x2\\<rangle>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<lbrakk>x2\\<rbrakk>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}broadcast(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}broadcast(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>x1 x2 x3 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}groupcast(x2, x3) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}send(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}send(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}deliver(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}deliver(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}receive(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}receive(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>x.\n       \\<lbrakk>ps \\<in> sterms \\<Gamma> (call(x));\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, call(x)), a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i", "with assms(1)"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  ps \\<in> sterms \\<Gamma> (call(p))\n  ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>", "have \"((\\<sigma>, ps), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  ps \\<in> sterms \\<Gamma> (call(p))\n  ((\\<sigma> i, ps), a, \\<sigma>' i, p') \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, ps), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i", "by (cases ps) auto"], ["proof (state)\nthis:\n  ((\\<sigma>, ps), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (8 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<langle>x2\\<rangle>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<lbrakk>x2\\<rbrakk>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}broadcast(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}broadcast(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>x1 x2 x3 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}groupcast(x2, x3) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}send(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}send(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}deliver(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}deliver(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}receive(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}receive(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>x.\n       \\<lbrakk>ps \\<in> sterms \\<Gamma> (call(x));\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, call(x)), a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i", "with assms(1) \\<open>ps \\<in> sterms \\<Gamma> (call(p))\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  ps \\<in> sterms \\<Gamma> (call(p))\n  ((\\<sigma>, ps), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i", "have \"((\\<sigma>, \\<Gamma> p), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  ps \\<in> sterms \\<Gamma> (call(p))\n  ((\\<sigma>, ps), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, \\<Gamma> p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i", "by - (rule otrans_from_sterms', simp_all)"], ["proof (state)\nthis:\n  ((\\<sigma>, \\<Gamma> p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (8 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<langle>x2\\<rangle>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<lbrakk>x2\\<rbrakk>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}broadcast(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}broadcast(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>x1 x2 x3 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}groupcast(x2, x3) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}send(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}send(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}deliver(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}deliver(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}receive(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}receive(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>x.\n       \\<lbrakk>ps \\<in> sterms \\<Gamma> (call(x));\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, call(x)), a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i", "thus \"((\\<sigma>, call(p)), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  ((\\<sigma>, \\<Gamma> p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, call(p)), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i", "by auto"], ["proof (state)\nthis:\n  ((\\<sigma>, call(p)), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (7 subgoals):\n 1. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<langle>x2\\<rangle>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<langle>x2\\<rangle>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}\\<lbrakk>x2\\<rbrakk>\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}\\<lbrakk>x2\\<rbrakk>\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}broadcast(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}broadcast(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>x1 x2 x3 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}groupcast(x2, x3) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}groupcast(x2, x3) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}send(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}send(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}deliver(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}deliver(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>x1 x2 p.\n       \\<lbrakk>\\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n                 ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n                 \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n                \\<Longrightarrow> ((\\<sigma>, p), a, \\<sigma>', p')\n                                  \\<in> oseqp_sos \\<Gamma> i;\n        ps \\<in> sterms \\<Gamma> ({x1}receive(x2) .\n                                  p);\n        ((\\<sigma> i, ps), a, \\<sigma>' i, p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ((\\<sigma>, {x1}receive(x2) .\n                           p),\n                          a, \\<sigma>', p')\n                         \\<in> oseqp_sos \\<Gamma> i", "qed auto"], ["proof (state)\nthis:\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}