{"file_name": "/home/qj213/afp-2021-10-22/thys/AWN/OAWN_Convert.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/AWN", "problem_names": ["lemma initialiI [intro]:\n  assumes OICI: \"\\<And>\\<sigma> p. (\\<sigma>, p) \\<in> OI \\<Longrightarrow> (\\<sigma> i, p) \\<in> CI\"\n      and CIOI: \"\\<And>\\<xi> p. (\\<xi>, p) \\<in> CI \\<Longrightarrow> \\<exists>\\<sigma>. \\<xi> = \\<sigma> i \\<and> (\\<sigma>, p) \\<in> OI\"\n    shows \"initiali i OI CI\"", "lemma open_from_initialiD [dest]:\n  assumes \"initiali i OI CI\"\n      and \"(\\<sigma>, p) \\<in> OI\"\n    shows \"\\<exists>\\<xi>. \\<sigma> i = \\<xi> \\<and> (\\<xi>, p) \\<in> CI\"", "lemma closed_from_initialiD [dest]:\n  assumes \"initiali i OI CI\"\n      and \"(\\<xi>, p) \\<in> CI\"\n    shows \"\\<exists>\\<sigma>. \\<sigma> i = \\<xi> \\<and> (\\<sigma>, p) \\<in> OI\"", "lemma seqlI [intro]:\n  \"P (fst s i, snd s) \\<Longrightarrow> seql i P s\"", "lemma same_seql [elim]:\n  assumes \"\\<forall>j\\<in>{i}. \\<sigma>' j = \\<sigma> j\"\n      and \"seql i P (\\<sigma>', s)\"\n    shows \"seql i P (\\<sigma>, s)\"", "lemma seqlsimp:\n  \"seql i P (\\<sigma>, p) = P (\\<sigma> i, p)\"", "lemma other_steps_resp_local [intro!, simp]: \"other_steps (other A I) I\"", "lemma seql_onl_swap:\n  \"seql i (onl \\<Gamma> P) = onl \\<Gamma> (seql i P)\"", "lemma oseqp_sos_resp_local_steps [intro!, simp]:\n  fixes \\<Gamma> :: \"'p \\<Rightarrow> ('s, 'm, 'p, 'l) seqp\"\n  shows \"local_steps (oseqp_sos \\<Gamma> i) {i}\"", "lemma oseqp_sos_subreachable [intro!, simp]:\n  assumes \"trans OA = oseqp_sos \\<Gamma> i\"\n    shows \"subreachable OA (other ANY {i}) {i}\"", "lemma oseq_step_is_seq_step:\n    fixes \\<sigma> :: \"ip \\<Rightarrow> 's\"\n  assumes \"((\\<sigma>, p), a :: 'm seq_action, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\"\n      and \"\\<sigma> i = \\<xi>\"\n    shows \"\\<exists>\\<xi>'. \\<sigma>' i = \\<xi>' \\<and> ((\\<xi>, p), a, (\\<xi>', p')) \\<in> seqp_sos \\<Gamma>\"", "lemma reachable_oseq_seqp_sos:\n  assumes \"(\\<sigma>, p) \\<in> reachable OA I\"\n      and \"initiali i (init OA) (init A)\"\n      and spo: \"trans OA = oseqp_sos \\<Gamma> i\"\n      and sp: \"trans A = seqp_sos \\<Gamma>\"\n      shows \"\\<exists>\\<xi>. \\<sigma> i = \\<xi> \\<and> (\\<xi>, p) \\<in> reachable A I\"", "lemma reachable_oseq_seqp_sos':\n  assumes \"s \\<in> reachable OA I\"\n      and \"initiali i (init OA) (init A)\"\n      and \"trans OA = oseqp_sos \\<Gamma> i\"\n      and \"trans A = seqp_sos \\<Gamma>\"\n    shows \"\\<exists>\\<xi>. (fst s) i = \\<xi> \\<and> (\\<xi>, snd s) \\<in> reachable A I\"", "theorem open_seq_invariant [intro]:\n  assumes \"A \\<TTurnstile> (I \\<rightarrow>) P\"\n      and \"initiali i (init OA) (init A)\"\n      and spo: \"trans OA = oseqp_sos \\<Gamma> i\"\n      and sp: \"trans A = seqp_sos \\<Gamma>\"\n    shows \"OA \\<Turnstile> (act I, other ANY {i} \\<rightarrow>) (seql i P)\"", "lemma same_seqll [elim]:\n  assumes \"\\<forall>j\\<in>{i}. \\<sigma>\\<^sub>1' j = \\<sigma>\\<^sub>1 j\"\n      and \"\\<forall>j\\<in>{i}. \\<sigma>\\<^sub>2' j = \\<sigma>\\<^sub>2 j\"\n      and \"seqll i P ((\\<sigma>\\<^sub>1', s), a, (\\<sigma>\\<^sub>2', s'))\"\n    shows \"seqll i P ((\\<sigma>\\<^sub>1,  s), a, (\\<sigma>\\<^sub>2,  s'))\"", "lemma seqllI [intro!]:\n  assumes \"P ((\\<sigma> i, p), a, (\\<sigma>' i, p'))\"\n    shows \"seqll i P ((\\<sigma>, p), a, (\\<sigma>', p'))\"", "lemma seqllD [dest]:\n  assumes \"seqll i P ((\\<sigma>, p), a, (\\<sigma>', p'))\"\n    shows \"P ((\\<sigma> i, p), a, (\\<sigma>' i, p'))\"", "lemma seqllsimp:\n  \"seqll i P ((\\<sigma>, p), a, (\\<sigma>', p')) = P ((\\<sigma> i, p), a, (\\<sigma>' i, p'))\"", "lemma seqll_onll_swap:\n  \"seqll i (onll \\<Gamma> P) = onll \\<Gamma> (seqll i P)\"", "theorem open_seq_step_invariant [intro]:\n  assumes \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P\"\n      and \"initiali i (init OA) (init A)\"\n      and spo: \"trans OA = oseqp_sos \\<Gamma> i\"\n      and sp: \"trans A = seqp_sos \\<Gamma>\"\n    shows \"OA \\<Turnstile>\\<^sub>A (act I, other ANY {i} \\<rightarrow>) (seqll i P)\""], "translations": [["", "lemma initialiI [intro]:\n  assumes OICI: \"\\<And>\\<sigma> p. (\\<sigma>, p) \\<in> OI \\<Longrightarrow> (\\<sigma> i, p) \\<in> CI\"\n      and CIOI: \"\\<And>\\<xi> p. (\\<xi>, p) \\<in> CI \\<Longrightarrow> \\<exists>\\<sigma>. \\<xi> = \\<sigma> i \\<and> (\\<sigma>, p) \\<in> OI\"\n    shows \"initiali i OI CI\""], ["proof (prove)\ngoal (1 subgoal):\n 1. initiali i OI CI", "unfolding initiali_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(\\<sigma> i, p) |\\<sigma> p. (\\<sigma>, p) \\<in> OI} = CI", "by (intro set_eqI iffI) (auto elim!: OICI CIOI)"], ["", "lemma open_from_initialiD [dest]:\n  assumes \"initiali i OI CI\"\n      and \"(\\<sigma>, p) \\<in> OI\"\n    shows \"\\<exists>\\<xi>. \\<sigma> i = \\<xi> \\<and> (\\<xi>, p) \\<in> CI\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<xi>. \\<sigma> i = \\<xi> \\<and> (\\<xi>, p) \\<in> CI", "using assms"], ["proof (prove)\nusing this:\n  initiali i OI CI\n  (\\<sigma>, p) \\<in> OI\n\ngoal (1 subgoal):\n 1. \\<exists>\\<xi>. \\<sigma> i = \\<xi> \\<and> (\\<xi>, p) \\<in> CI", "unfolding initiali_def"], ["proof (prove)\nusing this:\n  {(\\<sigma> i, p) |\\<sigma> p. (\\<sigma>, p) \\<in> OI} = CI\n  (\\<sigma>, p) \\<in> OI\n\ngoal (1 subgoal):\n 1. \\<exists>\\<xi>. \\<sigma> i = \\<xi> \\<and> (\\<xi>, p) \\<in> CI", "by auto"], ["", "lemma closed_from_initialiD [dest]:\n  assumes \"initiali i OI CI\"\n      and \"(\\<xi>, p) \\<in> CI\"\n    shows \"\\<exists>\\<sigma>. \\<sigma> i = \\<xi> \\<and> (\\<sigma>, p) \\<in> OI\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>. \\<sigma> i = \\<xi> \\<and> (\\<sigma>, p) \\<in> OI", "using assms"], ["proof (prove)\nusing this:\n  initiali i OI CI\n  (\\<xi>, p) \\<in> CI\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>. \\<sigma> i = \\<xi> \\<and> (\\<sigma>, p) \\<in> OI", "unfolding initiali_def"], ["proof (prove)\nusing this:\n  {(\\<sigma> i, p) |\\<sigma> p. (\\<sigma>, p) \\<in> OI} = CI\n  (\\<xi>, p) \\<in> CI\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>. \\<sigma> i = \\<xi> \\<and> (\\<sigma>, p) \\<in> OI", "by auto"], ["", "definition\n  seql :: \"'i \\<Rightarrow> (('s \\<times> 'l) \\<Rightarrow> bool) \\<Rightarrow> (('i \\<Rightarrow> 's) \\<times> 'l) \\<Rightarrow> bool\"\nwhere\n  \"seql i P \\<equiv> (\\<lambda>(\\<sigma>, p). P (\\<sigma> i, p))\""], ["", "lemma seqlI [intro]:\n  \"P (fst s i, snd s) \\<Longrightarrow> seql i P s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (fst s i, snd s) \\<Longrightarrow> seql i P s", "by (clarsimp simp: seql_def)"], ["", "lemma same_seql [elim]:\n  assumes \"\\<forall>j\\<in>{i}. \\<sigma>' j = \\<sigma> j\"\n      and \"seql i P (\\<sigma>', s)\"\n    shows \"seql i P (\\<sigma>, s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. seql i P (\\<sigma>, s)", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{i}. \\<sigma>' j = \\<sigma> j\n  seql i P (\\<sigma>', s)\n\ngoal (1 subgoal):\n 1. seql i P (\\<sigma>, s)", "unfolding seql_def"], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{i}. \\<sigma>' j = \\<sigma> j\n  case (\\<sigma>', s) of (\\<sigma>, p) \\<Rightarrow> P (\\<sigma> i, p)\n\ngoal (1 subgoal):\n 1. case (\\<sigma>, s) of (\\<sigma>, p) \\<Rightarrow> P (\\<sigma> i, p)", "by (clarsimp)"], ["", "lemma seqlsimp:\n  \"seql i P (\\<sigma>, p) = P (\\<sigma> i, p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. seql i P (\\<sigma>, p) = P (\\<sigma> i, p)", "unfolding seql_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case (\\<sigma>, p) of (\\<sigma>, p) \\<Rightarrow> P (\\<sigma> i, p)) =\n    P (\\<sigma> i, p)", "by simp"], ["", "lemma other_steps_resp_local [intro!, simp]: \"other_steps (other A I) I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. other_steps (other A I) I", "by (clarsimp elim!: otherE)"], ["", "lemma seql_onl_swap:\n  \"seql i (onl \\<Gamma> P) = onl \\<Gamma> (seql i P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. seql i (onl \\<Gamma> P) = onl \\<Gamma> (seql i P)", "unfolding seql_def onl_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(\\<sigma>, p).\n        case (\\<sigma> i, p) of\n        (\\<xi>, p) \\<Rightarrow>\n          \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)) =\n    (\\<lambda>(\\<xi>, p).\n        \\<forall>l\\<in>labels \\<Gamma> p.\n           case (\\<xi>, l) of (\\<sigma>, p) \\<Rightarrow> P (\\<sigma> i, p))", "by simp"], ["", "lemma oseqp_sos_resp_local_steps [intro!, simp]:\n  fixes \\<Gamma> :: \"'p \\<Rightarrow> ('s, 'm, 'p, 'l) seqp\"\n  shows \"local_steps (oseqp_sos \\<Gamma> i) {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_steps (oseqp_sos \\<Gamma> i) {i}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<zeta> s a \\<sigma>' \\<zeta>' s'.\n       \\<lbrakk>((\\<sigma>, s), a, \\<sigma>', s')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, s), a, \\<zeta>', s')\n                            \\<in> oseqp_sos \\<Gamma> i", "fix \\<sigma> \\<sigma>' \\<zeta> \\<zeta>' :: \"nat \\<Rightarrow> 's\" and s a s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<zeta> s a \\<sigma>' \\<zeta>' s'.\n       \\<lbrakk>((\\<sigma>, s), a, \\<sigma>', s')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, s), a, \\<zeta>', s')\n                            \\<in> oseqp_sos \\<Gamma> i", "assume tr: \"((\\<sigma>, s), a, \\<sigma>', s') \\<in> oseqp_sos \\<Gamma> i\"\n       and \"\\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\""], ["proof (state)\nthis:\n  ((\\<sigma>, s), a, \\<sigma>', s') \\<in> oseqp_sos \\<Gamma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<zeta> s a \\<sigma>' \\<zeta>' s'.\n       \\<lbrakk>((\\<sigma>, s), a, \\<sigma>', s')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, s), a, \\<zeta>', s')\n                            \\<in> oseqp_sos \\<Gamma> i", "thus \"\\<exists>\\<zeta>'. (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and> ((\\<zeta>, s), a, (\\<zeta>', s')) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  ((\\<sigma>, s), a, \\<sigma>', s') \\<in> oseqp_sos \\<Gamma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n\ngoal (1 subgoal):\n 1. \\<exists>\\<zeta>'.\n       (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n       ((\\<zeta>, s), a, \\<zeta>', s') \\<in> oseqp_sos \\<Gamma> i", "proof induction"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             broadcast\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>\\<sigma> p a \\<sigma>' p' q.\n        \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n         \\<exists>\\<zeta>'.\n            (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n            ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<zeta>'.\n                             (\\<forall>j\\<in>{i}.\n                                 \\<zeta>' j = \\<sigma>' j) \\<and>\n                             ((\\<zeta>, p\n  \\<oplus>\n  q),\n                              a, \\<zeta>', p')\n                             \\<in> oseqp_sos \\<Gamma> i\nA total of 12 subgoals...", "fix \\<sigma> \\<sigma>' l ms p"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             broadcast\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>\\<sigma> p a \\<sigma>' p' q.\n        \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n         \\<exists>\\<zeta>'.\n            (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n            ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<zeta>'.\n                             (\\<forall>j\\<in>{i}.\n                                 \\<zeta>' j = \\<sigma>' j) \\<and>\n                             ((\\<zeta>, p\n  \\<oplus>\n  q),\n                              a, \\<zeta>', p')\n                             \\<in> oseqp_sos \\<Gamma> i\nA total of 12 subgoals...", "assume \"\\<sigma>' i = \\<sigma> i\"\n         and \"\\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\""], ["proof (state)\nthis:\n  \\<sigma>' i = \\<sigma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n\ngoal (12 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             broadcast\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>\\<sigma> p a \\<sigma>' p' q.\n        \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n         \\<exists>\\<zeta>'.\n            (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n            ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<zeta>'.\n                             (\\<forall>j\\<in>{i}.\n                                 \\<zeta>' j = \\<sigma>' j) \\<and>\n                             ((\\<zeta>, p\n  \\<oplus>\n  q),\n                              a, \\<zeta>', p')\n                             \\<in> oseqp_sos \\<Gamma> i\nA total of 12 subgoals...", "hence \"((\\<zeta>, {l}broadcast(ms).p), broadcast (ms (\\<sigma> i)), (\\<sigma>', p)) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  \\<sigma>' i = \\<sigma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n\ngoal (1 subgoal):\n 1. ((\\<zeta>, {l}broadcast(ms) .\n      p),\n     broadcast (ms (\\<sigma> i)), \\<sigma>', p)\n    \\<in> oseqp_sos \\<Gamma> i", "by (metis obroadcastT singleton_iff)"], ["proof (state)\nthis:\n  ((\\<zeta>, {l}broadcast(ms) .\n    p),\n   broadcast (ms (\\<sigma> i)), \\<sigma>', p)\n  \\<in> oseqp_sos \\<Gamma> i\n\ngoal (12 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             broadcast\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>\\<sigma> p a \\<sigma>' p' q.\n        \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n         \\<exists>\\<zeta>'.\n            (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n            ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<zeta>'.\n                             (\\<forall>j\\<in>{i}.\n                                 \\<zeta>' j = \\<sigma>' j) \\<and>\n                             ((\\<zeta>, p\n  \\<oplus>\n  q),\n                              a, \\<zeta>', p')\n                             \\<in> oseqp_sos \\<Gamma> i\nA total of 12 subgoals...", "with \\<open>\\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n  ((\\<zeta>, {l}broadcast(ms) .\n    p),\n   broadcast (ms (\\<sigma> i)), \\<sigma>', p)\n  \\<in> oseqp_sos \\<Gamma> i", "show \"\\<exists>\\<zeta>'. (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n            ((\\<zeta>, {l}broadcast(ms).p), broadcast (ms (\\<sigma> i)), (\\<zeta>', p)) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n  ((\\<zeta>, {l}broadcast(ms) .\n    p),\n   broadcast (ms (\\<sigma> i)), \\<sigma>', p)\n  \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<exists>\\<zeta>'.\n       (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n       ((\\<zeta>, {l}broadcast(ms) .\n         p),\n        broadcast (ms (\\<sigma> i)), \\<zeta>', p)\n       \\<in> oseqp_sos \\<Gamma> i", "by blast"], ["proof (state)\nthis:\n  \\<exists>\\<zeta>'.\n     (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n     ((\\<zeta>, {l}broadcast(ms) .\n       p),\n      broadcast (ms (\\<sigma> i)), \\<zeta>', p)\n     \\<in> oseqp_sos \\<Gamma> i\n\ngoal (11 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>\\<sigma> q a \\<sigma>' q' p.\n        \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n         \\<exists>\\<zeta>'.\n            (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n            ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<zeta>'.\n                             (\\<forall>j\\<in>{i}.\n                                 \\<zeta>' j = \\<sigma>' j) \\<and>\n                             ((\\<zeta>, p\n  \\<oplus>\n  q),\n                              a, \\<zeta>', q')\n                             \\<in> oseqp_sos \\<Gamma> i\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>\\<sigma> q a \\<sigma>' q' p.\n        \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n         \\<exists>\\<zeta>'.\n            (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n            ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<zeta>'.\n                             (\\<forall>j\\<in>{i}.\n                                 \\<zeta>' j = \\<sigma>' j) \\<and>\n                             ((\\<zeta>, p\n  \\<oplus>\n  q),\n                              a, \\<zeta>', q')\n                             \\<in> oseqp_sos \\<Gamma> i\nA total of 11 subgoals...", "fix \\<sigma> \\<sigma>' :: \"nat \\<Rightarrow> 's\" and fmsg :: \"'m \\<Rightarrow> 's \\<Rightarrow> 's\" and msg l p"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>\\<sigma> q a \\<sigma>' q' p.\n        \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n         \\<exists>\\<zeta>'.\n            (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n            ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<zeta>'.\n                             (\\<forall>j\\<in>{i}.\n                                 \\<zeta>' j = \\<sigma>' j) \\<and>\n                             ((\\<zeta>, p\n  \\<oplus>\n  q),\n                              a, \\<zeta>', q')\n                             \\<in> oseqp_sos \\<Gamma> i\nA total of 11 subgoals...", "assume *:  \"\\<sigma>' i = fmsg msg (\\<sigma> i)\"\n         and **: \"\\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\""], ["proof (state)\nthis:\n  \\<sigma>' i = fmsg msg (\\<sigma> i)\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n\ngoal (11 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>\\<sigma> q a \\<sigma>' q' p.\n        \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n         \\<exists>\\<zeta>'.\n            (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n            ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<zeta>'.\n                             (\\<forall>j\\<in>{i}.\n                                 \\<zeta>' j = \\<sigma>' j) \\<and>\n                             ((\\<zeta>, p\n  \\<oplus>\n  q),\n                              a, \\<zeta>', q')\n                             \\<in> oseqp_sos \\<Gamma> i\nA total of 11 subgoals...", "hence \"\\<forall>j\\<in>{i}. (\\<zeta>(i := fmsg msg (\\<zeta> i))) j = \\<sigma>' j\""], ["proof (prove)\nusing this:\n  \\<sigma>' i = fmsg msg (\\<sigma> i)\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>{i}. (\\<zeta>(i := fmsg msg (\\<zeta> i))) j = \\<sigma>' j", "by clarsimp"], ["proof (state)\nthis:\n  \\<forall>j\\<in>{i}. (\\<zeta>(i := fmsg msg (\\<zeta> i))) j = \\<sigma>' j\n\ngoal (11 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>\\<sigma> q a \\<sigma>' q' p.\n        \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n         \\<exists>\\<zeta>'.\n            (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n            ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<zeta>'.\n                             (\\<forall>j\\<in>{i}.\n                                 \\<zeta>' j = \\<sigma>' j) \\<and>\n                             ((\\<zeta>, p\n  \\<oplus>\n  q),\n                              a, \\<zeta>', q')\n                             \\<in> oseqp_sos \\<Gamma> i\nA total of 11 subgoals...", "moreover"], ["proof (state)\nthis:\n  \\<forall>j\\<in>{i}. (\\<zeta>(i := fmsg msg (\\<zeta> i))) j = \\<sigma>' j\n\ngoal (11 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>\\<sigma> q a \\<sigma>' q' p.\n        \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n         \\<exists>\\<zeta>'.\n            (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n            ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<zeta>'.\n                             (\\<forall>j\\<in>{i}.\n                                 \\<zeta>' j = \\<sigma>' j) \\<and>\n                             ((\\<zeta>, p\n  \\<oplus>\n  q),\n                              a, \\<zeta>', q')\n                             \\<in> oseqp_sos \\<Gamma> i\nA total of 11 subgoals...", "from * **"], ["proof (chain)\npicking this:\n  \\<sigma>' i = fmsg msg (\\<sigma> i)\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j", "have \"((\\<zeta>, {l}receive(fmsg).p), receive msg, (\\<zeta>(i := fmsg msg (\\<zeta> i)), p)) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  \\<sigma>' i = fmsg msg (\\<sigma> i)\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n\ngoal (1 subgoal):\n 1. ((\\<zeta>, {l}receive(fmsg) .\n      p),\n     receive msg, \\<zeta>(i := fmsg msg (\\<zeta> i)), p)\n    \\<in> oseqp_sos \\<Gamma> i", "by (metis fun_upd_same oreceiveT)"], ["proof (state)\nthis:\n  ((\\<zeta>, {l}receive(fmsg) .\n    p),\n   receive msg, \\<zeta>(i := fmsg msg (\\<zeta> i)), p)\n  \\<in> oseqp_sos \\<Gamma> i\n\ngoal (11 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>\\<sigma> q a \\<sigma>' q' p.\n        \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n         \\<exists>\\<zeta>'.\n            (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n            ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<zeta>'.\n                             (\\<forall>j\\<in>{i}.\n                                 \\<zeta>' j = \\<sigma>' j) \\<and>\n                             ((\\<zeta>, p\n  \\<oplus>\n  q),\n                              a, \\<zeta>', q')\n                             \\<in> oseqp_sos \\<Gamma> i\nA total of 11 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>j\\<in>{i}. (\\<zeta>(i := fmsg msg (\\<zeta> i))) j = \\<sigma>' j\n  ((\\<zeta>, {l}receive(fmsg) .\n    p),\n   receive msg, \\<zeta>(i := fmsg msg (\\<zeta> i)), p)\n  \\<in> oseqp_sos \\<Gamma> i", "show \"\\<exists>\\<zeta>'. (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}receive(fmsg).p), receive msg, (\\<zeta>', p)) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{i}. (\\<zeta>(i := fmsg msg (\\<zeta> i))) j = \\<sigma>' j\n  ((\\<zeta>, {l}receive(fmsg) .\n    p),\n   receive msg, \\<zeta>(i := fmsg msg (\\<zeta> i)), p)\n  \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<exists>\\<zeta>'.\n       (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n       ((\\<zeta>, {l}receive(fmsg) .\n         p),\n        receive msg, \\<zeta>', p)\n       \\<in> oseqp_sos \\<Gamma> i", "by blast"], ["proof (state)\nthis:\n  \\<exists>\\<zeta>'.\n     (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n     ((\\<zeta>, {l}receive(fmsg) .\n       p),\n      receive msg, \\<zeta>', p)\n     \\<in> oseqp_sos \\<Gamma> i\n\ngoal (10 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>\\<sigma>' g \\<sigma> l p.\n        \\<lbrakk>\\<sigma>' i \\<in> g (\\<sigma> i);\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<zeta>'.\n                             (\\<forall>j\\<in>{i}.\n                                 \\<zeta>' j = \\<sigma>' j) \\<and>\n                             ((\\<zeta>, {l}\\<langle>g\\<rangle>\n                               p),\n                              \\<tau>, \\<zeta>', p)\n                             \\<in> oseqp_sos \\<Gamma> i", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>\\<sigma>' g \\<sigma> l p.\n        \\<lbrakk>\\<sigma>' i \\<in> g (\\<sigma> i);\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<zeta>'.\n                             (\\<forall>j\\<in>{i}.\n                                 \\<zeta>' j = \\<sigma>' j) \\<and>\n                             ((\\<zeta>, {l}\\<langle>g\\<rangle>\n                               p),\n                              \\<tau>, \\<zeta>', p)\n                             \\<in> oseqp_sos \\<Gamma> i", "fix \\<sigma>' \\<sigma> l p and fas :: \"'s \\<Rightarrow> 's\""], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>\\<sigma>' g \\<sigma> l p.\n        \\<lbrakk>\\<sigma>' i \\<in> g (\\<sigma> i);\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<zeta>'.\n                             (\\<forall>j\\<in>{i}.\n                                 \\<zeta>' j = \\<sigma>' j) \\<and>\n                             ((\\<zeta>, {l}\\<langle>g\\<rangle>\n                               p),\n                              \\<tau>, \\<zeta>', p)\n                             \\<in> oseqp_sos \\<Gamma> i", "assume *:  \"\\<sigma>' i = fas (\\<sigma> i)\"\n         and **: \"\\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\""], ["proof (state)\nthis:\n  \\<sigma>' i = fas (\\<sigma> i)\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n\ngoal (10 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>\\<sigma>' g \\<sigma> l p.\n        \\<lbrakk>\\<sigma>' i \\<in> g (\\<sigma> i);\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<zeta>'.\n                             (\\<forall>j\\<in>{i}.\n                                 \\<zeta>' j = \\<sigma>' j) \\<and>\n                             ((\\<zeta>, {l}\\<langle>g\\<rangle>\n                               p),\n                              \\<tau>, \\<zeta>', p)\n                             \\<in> oseqp_sos \\<Gamma> i", "hence \"\\<forall>j\\<in>{i}. (\\<zeta>(i := fas (\\<zeta> i))) j = \\<sigma>' j\""], ["proof (prove)\nusing this:\n  \\<sigma>' i = fas (\\<sigma> i)\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>{i}. (\\<zeta>(i := fas (\\<zeta> i))) j = \\<sigma>' j", "by clarsimp"], ["proof (state)\nthis:\n  \\<forall>j\\<in>{i}. (\\<zeta>(i := fas (\\<zeta> i))) j = \\<sigma>' j\n\ngoal (10 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>\\<sigma>' g \\<sigma> l p.\n        \\<lbrakk>\\<sigma>' i \\<in> g (\\<sigma> i);\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<zeta>'.\n                             (\\<forall>j\\<in>{i}.\n                                 \\<zeta>' j = \\<sigma>' j) \\<and>\n                             ((\\<zeta>, {l}\\<langle>g\\<rangle>\n                               p),\n                              \\<tau>, \\<zeta>', p)\n                             \\<in> oseqp_sos \\<Gamma> i", "moreover"], ["proof (state)\nthis:\n  \\<forall>j\\<in>{i}. (\\<zeta>(i := fas (\\<zeta> i))) j = \\<sigma>' j\n\ngoal (10 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>\\<sigma>' g \\<sigma> l p.\n        \\<lbrakk>\\<sigma>' i \\<in> g (\\<sigma> i);\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<zeta>'.\n                             (\\<forall>j\\<in>{i}.\n                                 \\<zeta>' j = \\<sigma>' j) \\<and>\n                             ((\\<zeta>, {l}\\<langle>g\\<rangle>\n                               p),\n                              \\<tau>, \\<zeta>', p)\n                             \\<in> oseqp_sos \\<Gamma> i", "from * **"], ["proof (chain)\npicking this:\n  \\<sigma>' i = fas (\\<sigma> i)\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j", "have \"((\\<zeta>, {l}\\<lbrakk>fas\\<rbrakk> p), \\<tau>, (\\<zeta>(i := fas (\\<zeta> i)), p)) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  \\<sigma>' i = fas (\\<sigma> i)\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n\ngoal (1 subgoal):\n 1. ((\\<zeta>, {l}\\<lbrakk>fas\\<rbrakk>\n      p),\n     \\<tau>, \\<zeta>(i := fas (\\<zeta> i)), p)\n    \\<in> oseqp_sos \\<Gamma> i", "by (metis fun_upd_same oassignT)"], ["proof (state)\nthis:\n  ((\\<zeta>, {l}\\<lbrakk>fas\\<rbrakk>\n    p),\n   \\<tau>, \\<zeta>(i := fas (\\<zeta> i)), p)\n  \\<in> oseqp_sos \\<Gamma> i\n\ngoal (10 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i\n 10. \\<And>\\<sigma>' g \\<sigma> l p.\n        \\<lbrakk>\\<sigma>' i \\<in> g (\\<sigma> i);\n         \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<zeta>'.\n                             (\\<forall>j\\<in>{i}.\n                                 \\<zeta>' j = \\<sigma>' j) \\<and>\n                             ((\\<zeta>, {l}\\<langle>g\\<rangle>\n                               p),\n                              \\<tau>, \\<zeta>', p)\n                             \\<in> oseqp_sos \\<Gamma> i", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>j\\<in>{i}. (\\<zeta>(i := fas (\\<zeta> i))) j = \\<sigma>' j\n  ((\\<zeta>, {l}\\<lbrakk>fas\\<rbrakk>\n    p),\n   \\<tau>, \\<zeta>(i := fas (\\<zeta> i)), p)\n  \\<in> oseqp_sos \\<Gamma> i", "show \"\\<exists>\\<zeta>'. (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and> ((\\<zeta>, {l}\\<lbrakk>fas\\<rbrakk> p), \\<tau>, (\\<zeta>', p)) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{i}. (\\<zeta>(i := fas (\\<zeta> i))) j = \\<sigma>' j\n  ((\\<zeta>, {l}\\<lbrakk>fas\\<rbrakk>\n    p),\n   \\<tau>, \\<zeta>(i := fas (\\<zeta> i)), p)\n  \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<exists>\\<zeta>'.\n       (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n       ((\\<zeta>, {l}\\<lbrakk>fas\\<rbrakk>\n         p),\n        \\<tau>, \\<zeta>', p)\n       \\<in> oseqp_sos \\<Gamma> i", "by blast"], ["proof (state)\nthis:\n  \\<exists>\\<zeta>'.\n     (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n     ((\\<zeta>, {l}\\<lbrakk>fas\\<rbrakk>\n       p),\n      \\<tau>, \\<zeta>', p)\n     \\<in> oseqp_sos \\<Gamma> i\n\ngoal (9 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma>' g \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i \\<in> g (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<langle>g\\<rangle>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma>' g \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i \\<in> g (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<langle>g\\<rangle>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i", "fix g :: \"'s \\<Rightarrow> 's set\" and \\<sigma> \\<sigma>' l p"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma>' g \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i \\<in> g (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<langle>g\\<rangle>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i", "assume *:  \"\\<sigma>' i \\<in> g (\\<sigma> i)\"\n         and **: \"\\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\""], ["proof (state)\nthis:\n  \\<sigma>' i \\<in> g (\\<sigma> i)\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n\ngoal (9 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma>' g \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i \\<in> g (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<langle>g\\<rangle>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i", "hence \"\\<forall>j\\<in>{i}. (SOME \\<zeta>'. \\<zeta>' i = \\<sigma>' i) j = \\<sigma>' j\""], ["proof (prove)\nusing this:\n  \\<sigma>' i \\<in> g (\\<sigma> i)\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>{i}.\n       (SOME \\<zeta>'. \\<zeta>' i = \\<sigma>' i) j = \\<sigma>' j", "by simp (metis (lifting, full_types) some_eq_ex)"], ["proof (state)\nthis:\n  \\<forall>j\\<in>{i}.\n     (SOME \\<zeta>'. \\<zeta>' i = \\<sigma>' i) j = \\<sigma>' j\n\ngoal (9 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma>' g \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i \\<in> g (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<langle>g\\<rangle>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i", "moreover"], ["proof (state)\nthis:\n  \\<forall>j\\<in>{i}.\n     (SOME \\<zeta>'. \\<zeta>' i = \\<sigma>' i) j = \\<sigma>' j\n\ngoal (9 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma>' g \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i \\<in> g (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<langle>g\\<rangle>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i", "with * **"], ["proof (chain)\npicking this:\n  \\<sigma>' i \\<in> g (\\<sigma> i)\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n  \\<forall>j\\<in>{i}.\n     (SOME \\<zeta>'. \\<zeta>' i = \\<sigma>' i) j = \\<sigma>' j", "have \"((\\<zeta>, {l}\\<langle>g\\<rangle> p), \\<tau>, (SOME \\<zeta>'. \\<zeta>' i = \\<sigma>' i, p)) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  \\<sigma>' i \\<in> g (\\<sigma> i)\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n  \\<forall>j\\<in>{i}.\n     (SOME \\<zeta>'. \\<zeta>' i = \\<sigma>' i) j = \\<sigma>' j\n\ngoal (1 subgoal):\n 1. ((\\<zeta>, {l}\\<langle>g\\<rangle>\n      p),\n     \\<tau>, SOME \\<zeta>'. \\<zeta>' i = \\<sigma>' i, p)\n    \\<in> oseqp_sos \\<Gamma> i", "by simp (metis oguardT step_seq_tau)"], ["proof (state)\nthis:\n  ((\\<zeta>, {l}\\<langle>g\\<rangle>\n    p),\n   \\<tau>, SOME \\<zeta>'. \\<zeta>' i = \\<sigma>' i, p)\n  \\<in> oseqp_sos \\<Gamma> i\n\ngoal (9 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i\n 9. \\<And>\\<sigma>' g \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i \\<in> g (\\<sigma> i);\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}\\<langle>g\\<rangle>\n                              p),\n                             \\<tau>, \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>j\\<in>{i}.\n     (SOME \\<zeta>'. \\<zeta>' i = \\<sigma>' i) j = \\<sigma>' j\n  ((\\<zeta>, {l}\\<langle>g\\<rangle>\n    p),\n   \\<tau>, SOME \\<zeta>'. \\<zeta>' i = \\<sigma>' i, p)\n  \\<in> oseqp_sos \\<Gamma> i", "show \"\\<exists>\\<zeta>'. (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and> ((\\<zeta>, {l}\\<langle>g\\<rangle> p), \\<tau>, (\\<zeta>', p)) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{i}.\n     (SOME \\<zeta>'. \\<zeta>' i = \\<sigma>' i) j = \\<sigma>' j\n  ((\\<zeta>, {l}\\<langle>g\\<rangle>\n    p),\n   \\<tau>, SOME \\<zeta>'. \\<zeta>' i = \\<sigma>' i, p)\n  \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<exists>\\<zeta>'.\n       (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n       ((\\<zeta>, {l}\\<langle>g\\<rangle>\n         p),\n        \\<tau>, \\<zeta>', p)\n       \\<in> oseqp_sos \\<Gamma> i", "by blast"], ["proof (state)\nthis:\n  \\<exists>\\<zeta>'.\n     (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n     ((\\<zeta>, {l}\\<langle>g\\<rangle>\n       p),\n      \\<tau>, \\<zeta>', p)\n     \\<in> oseqp_sos \\<Gamma> i\n\ngoal (8 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i", "fix \\<sigma> pn a \\<sigma>' p'"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i", "assume \"((\\<sigma>, \\<Gamma> pn), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\"\n         and IH: \"\\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow> \\<exists>\\<zeta>'. (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and> ((\\<zeta>, \\<Gamma> pn), a, (\\<zeta>', p')) \\<in> oseqp_sos \\<Gamma> i\"\n         and \"\\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\""], ["proof (state)\nthis:\n  ((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n  \\<exists>\\<zeta>'.\n     (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n     ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n\ngoal (8 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i", "then"], ["proof (chain)\npicking this:\n  ((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n  \\<exists>\\<zeta>'.\n     (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n     ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j", "obtain \\<zeta>' where \"\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j\"\n                       and \"((\\<zeta>, \\<Gamma> pn), a, (\\<zeta>', p')) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  ((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n  \\<exists>\\<zeta>'.\n     (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n     ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n\ngoal (1 subgoal):\n 1. (\\<And>\\<zeta>'.\n        \\<lbrakk>\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j;\n         ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n         \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j\n  ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (8 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p')\n           \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, call(pn)), a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 8. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i", "thus \"\\<exists>\\<zeta>'. (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and> ((\\<zeta>, call(pn)), a, (\\<zeta>', p')) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j\n  ((\\<zeta>, \\<Gamma> pn), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<exists>\\<zeta>'.\n       (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n       ((\\<zeta>, call(pn)), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i", "by blast"], ["proof (state)\nthis:\n  \\<exists>\\<zeta>'.\n     (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n     ((\\<zeta>, call(pn)), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (7 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i", "fix \\<sigma> p a \\<sigma>' p' q"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i", "assume \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\"\n         and \"\\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow> \\<exists>\\<zeta>'. (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and> ((\\<zeta>, p), a, (\\<zeta>', p')) \\<in> oseqp_sos \\<Gamma> i\"\n         and \"\\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\""], ["proof (state)\nthis:\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n  \\<exists>\\<zeta>'.\n     (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n     ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n\ngoal (7 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i", "then"], ["proof (chain)\npicking this:\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n  \\<exists>\\<zeta>'.\n     (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n     ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j", "obtain \\<zeta>' where \"\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j\"\n                       and \"((\\<zeta>, p), a, (\\<zeta>', p')) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n  \\<exists>\\<zeta>'.\n     (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n     ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n\ngoal (1 subgoal):\n 1. (\\<And>\\<zeta>'.\n        \\<lbrakk>\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j;\n         ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j\n  ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (7 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', p')\n                            \\<in> oseqp_sos \\<Gamma> i\n 7. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i", "thus \"\\<exists>\\<zeta>'. (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and> ((\\<zeta>, p \\<oplus> q), a, (\\<zeta>', p')) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j\n  ((\\<zeta>, p), a, \\<zeta>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<exists>\\<zeta>'.\n       (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n       ((\\<zeta>, p\n                  \\<oplus>\n                  q),\n        a, \\<zeta>', p')\n       \\<in> oseqp_sos \\<Gamma> i", "by blast"], ["proof (state)\nthis:\n  \\<exists>\\<zeta>'.\n     (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n     ((\\<zeta>, p\n                \\<oplus>\n                q),\n      a, \\<zeta>', p')\n     \\<in> oseqp_sos \\<Gamma> i\n\ngoal (6 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i", "fix \\<sigma> p a \\<sigma>' q q'"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i", "assume \"((\\<sigma>, q), a, (\\<sigma>', q')) \\<in> oseqp_sos \\<Gamma> i\"\n         and \"\\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow> \\<exists>\\<zeta>'. (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and> ((\\<zeta>, q), a, (\\<zeta>', q')) \\<in> oseqp_sos \\<Gamma> i\"\n         and \"\\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\""], ["proof (state)\nthis:\n  ((\\<sigma>, q), a, \\<sigma>', q') \\<in> oseqp_sos \\<Gamma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n  \\<exists>\\<zeta>'.\n     (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n     ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n\ngoal (6 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i", "then"], ["proof (chain)\npicking this:\n  ((\\<sigma>, q), a, \\<sigma>', q') \\<in> oseqp_sos \\<Gamma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n  \\<exists>\\<zeta>'.\n     (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n     ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j", "obtain \\<zeta>' where \"\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j\"\n                       and \"((\\<zeta>, q), a, (\\<zeta>', q')) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  ((\\<sigma>, q), a, \\<sigma>', q') \\<in> oseqp_sos \\<Gamma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n  \\<exists>\\<zeta>'.\n     (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n     ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i\n  \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\n\ngoal (1 subgoal):\n 1. (\\<And>\\<zeta>'.\n        \\<lbrakk>\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j;\n         ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j\n  ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (6 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 6. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j \\<Longrightarrow>\n        \\<exists>\\<zeta>'.\n           (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n           ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, p\n \\<oplus>\n q),\n                             a, \\<zeta>', q')\n                            \\<in> oseqp_sos \\<Gamma> i", "thus \"\\<exists>\\<zeta>'. (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and> ((\\<zeta>, p \\<oplus> q), a, (\\<zeta>', q')) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j\n  ((\\<zeta>, q), a, \\<zeta>', q') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<exists>\\<zeta>'.\n       (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n       ((\\<zeta>, p\n                  \\<oplus>\n                  q),\n        a, \\<zeta>', q')\n       \\<in> oseqp_sos \\<Gamma> i", "by blast"], ["proof (state)\nthis:\n  \\<exists>\\<zeta>'.\n     (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n     ((\\<zeta>, p\n                \\<oplus>\n                q),\n      a, \\<zeta>', q')\n     \\<in> oseqp_sos \\<Gamma> i\n\ngoal (5 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<zeta>', p)\n                               \\<in> oseqp_sos \\<Gamma> i\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n           \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<zeta>'.\n                               (\\<forall>j\\<in>{i}.\n                                   \\<zeta>' j = \\<sigma>' j) \\<and>\n                               ((\\<zeta>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<zeta>', q)\n                               \\<in> oseqp_sos \\<Gamma> i\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i;\n        \\<forall>j\\<in>{i}. \\<zeta> j = \\<sigma> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<zeta>'.\n                            (\\<forall>j\\<in>{i}.\n                                \\<zeta>' j = \\<sigma>' j) \\<and>\n                            ((\\<zeta>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<zeta>', p)\n                            \\<in> oseqp_sos \\<Gamma> i", "qed (simp_all, (metis ogroupcastT ounicastT onotunicastT osendT odeliverT)+)"], ["proof (state)\nthis:\n  \\<exists>\\<zeta>'.\n     (\\<forall>j\\<in>{i}. \\<zeta>' j = \\<sigma>' j) \\<and>\n     ((\\<zeta>, s), a, \\<zeta>', s') \\<in> oseqp_sos \\<Gamma> i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma oseqp_sos_subreachable [intro!, simp]:\n  assumes \"trans OA = oseqp_sos \\<Gamma> i\"\n    shows \"subreachable OA (other ANY {i}) {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subreachable OA (other ANY {i}) {i}", "by rule (clarsimp simp add: assms(1))+"], ["", "lemma oseq_step_is_seq_step:\n    fixes \\<sigma> :: \"ip \\<Rightarrow> 's\"\n  assumes \"((\\<sigma>, p), a :: 'm seq_action, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\"\n      and \"\\<sigma> i = \\<xi>\"\n    shows \"\\<exists>\\<xi>'. \\<sigma>' i = \\<xi>' \\<and> ((\\<xi>, p), a, (\\<xi>', p')) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<xi>'.\n       \\<sigma>' i = \\<xi>' \\<and>\n       ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>", "using assms"], ["proof (prove)\nusing this:\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n  \\<sigma> i = \\<xi>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<xi>'.\n       \\<sigma>' i = \\<xi>' \\<and>\n       ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>", "proof induction"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             broadcast\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<xi>', p)\n                               \\<in> seqp_sos \\<Gamma>\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<xi>', q)\n                               \\<in> seqp_sos \\<Gamma>\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 6. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 7. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 8. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i); \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 9. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<sigma> i = \\<xi> \\<Longrightarrow>\n        \\<exists>\\<xi>'.\n           \\<sigma>' i = \\<xi>' \\<and>\n           ((\\<xi>, \\<Gamma> pn), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, call(pn)), a, \\<xi>', p')\n                            \\<in> seqp_sos \\<Gamma>\n 10. \\<And>\\<sigma> p a \\<sigma>' p' q.\n        \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<sigma> i = \\<xi> \\<Longrightarrow>\n         \\<exists>\\<xi>'.\n            \\<sigma>' i = \\<xi>' \\<and>\n            ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n         \\<sigma> i = \\<xi>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<xi>'.\n                             \\<sigma>' i = \\<xi>' \\<and>\n                             ((\\<xi>, p\n\\<oplus>\nq),\n                              a, \\<xi>', p')\n                             \\<in> seqp_sos \\<Gamma>\nA total of 12 subgoals...", "fix \\<sigma> \\<sigma>' l ms p"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             broadcast\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<xi>', p)\n                               \\<in> seqp_sos \\<Gamma>\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<xi>', q)\n                               \\<in> seqp_sos \\<Gamma>\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 6. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 7. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 8. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i); \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 9. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<sigma> i = \\<xi> \\<Longrightarrow>\n        \\<exists>\\<xi>'.\n           \\<sigma>' i = \\<xi>' \\<and>\n           ((\\<xi>, \\<Gamma> pn), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, call(pn)), a, \\<xi>', p')\n                            \\<in> seqp_sos \\<Gamma>\n 10. \\<And>\\<sigma> p a \\<sigma>' p' q.\n        \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<sigma> i = \\<xi> \\<Longrightarrow>\n         \\<exists>\\<xi>'.\n            \\<sigma>' i = \\<xi>' \\<and>\n            ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n         \\<sigma> i = \\<xi>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<xi>'.\n                             \\<sigma>' i = \\<xi>' \\<and>\n                             ((\\<xi>, p\n\\<oplus>\nq),\n                              a, \\<xi>', p')\n                             \\<in> seqp_sos \\<Gamma>\nA total of 12 subgoals...", "assume \"\\<sigma>' i = \\<sigma> i\"\n       and \"\\<sigma> i = \\<xi>\""], ["proof (state)\nthis:\n  \\<sigma>' i = \\<sigma> i\n  \\<sigma> i = \\<xi>\n\ngoal (12 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             broadcast\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<xi>', p)\n                               \\<in> seqp_sos \\<Gamma>\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<xi>', q)\n                               \\<in> seqp_sos \\<Gamma>\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 6. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 7. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 8. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i); \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 9. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<sigma> i = \\<xi> \\<Longrightarrow>\n        \\<exists>\\<xi>'.\n           \\<sigma>' i = \\<xi>' \\<and>\n           ((\\<xi>, \\<Gamma> pn), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, call(pn)), a, \\<xi>', p')\n                            \\<in> seqp_sos \\<Gamma>\n 10. \\<And>\\<sigma> p a \\<sigma>' p' q.\n        \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<sigma> i = \\<xi> \\<Longrightarrow>\n         \\<exists>\\<xi>'.\n            \\<sigma>' i = \\<xi>' \\<and>\n            ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n         \\<sigma> i = \\<xi>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<xi>'.\n                             \\<sigma>' i = \\<xi>' \\<and>\n                             ((\\<xi>, p\n\\<oplus>\nq),\n                              a, \\<xi>', p')\n                             \\<in> seqp_sos \\<Gamma>\nA total of 12 subgoals...", "hence \"\\<sigma>' i = \\<xi>\""], ["proof (prove)\nusing this:\n  \\<sigma>' i = \\<sigma> i\n  \\<sigma> i = \\<xi>\n\ngoal (1 subgoal):\n 1. \\<sigma>' i = \\<xi>", "by simp"], ["proof (state)\nthis:\n  \\<sigma>' i = \\<xi>\n\ngoal (12 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             broadcast\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<xi>', p)\n                               \\<in> seqp_sos \\<Gamma>\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<xi>', q)\n                               \\<in> seqp_sos \\<Gamma>\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 6. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 7. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 8. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i); \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 9. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<sigma> i = \\<xi> \\<Longrightarrow>\n        \\<exists>\\<xi>'.\n           \\<sigma>' i = \\<xi>' \\<and>\n           ((\\<xi>, \\<Gamma> pn), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, call(pn)), a, \\<xi>', p')\n                            \\<in> seqp_sos \\<Gamma>\n 10. \\<And>\\<sigma> p a \\<sigma>' p' q.\n        \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<sigma> i = \\<xi> \\<Longrightarrow>\n         \\<exists>\\<xi>'.\n            \\<sigma>' i = \\<xi>' \\<and>\n            ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n         \\<sigma> i = \\<xi>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<xi>'.\n                             \\<sigma>' i = \\<xi>' \\<and>\n                             ((\\<xi>, p\n\\<oplus>\nq),\n                              a, \\<xi>', p')\n                             \\<in> seqp_sos \\<Gamma>\nA total of 12 subgoals...", "have \"((\\<xi>, {l}broadcast(ms).p), broadcast (ms \\<xi>), (\\<xi>, p)) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<xi>, {l}broadcast(ms) .\n      p),\n     broadcast (ms \\<xi>), \\<xi>, p)\n    \\<in> seqp_sos \\<Gamma>", "by auto"], ["proof (state)\nthis:\n  ((\\<xi>, {l}broadcast(ms) .\n    p),\n   broadcast (ms \\<xi>), \\<xi>, p)\n  \\<in> seqp_sos \\<Gamma>\n\ngoal (12 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}broadcast(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             broadcast\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<xi>', p)\n                               \\<in> seqp_sos \\<Gamma>\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<xi>', q)\n                               \\<in> seqp_sos \\<Gamma>\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 6. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 7. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 8. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i); \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 9. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<sigma> i = \\<xi> \\<Longrightarrow>\n        \\<exists>\\<xi>'.\n           \\<sigma>' i = \\<xi>' \\<and>\n           ((\\<xi>, \\<Gamma> pn), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, call(pn)), a, \\<xi>', p')\n                            \\<in> seqp_sos \\<Gamma>\n 10. \\<And>\\<sigma> p a \\<sigma>' p' q.\n        \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<sigma> i = \\<xi> \\<Longrightarrow>\n         \\<exists>\\<xi>'.\n            \\<sigma>' i = \\<xi>' \\<and>\n            ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n         \\<sigma> i = \\<xi>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<xi>'.\n                             \\<sigma>' i = \\<xi>' \\<and>\n                             ((\\<xi>, p\n\\<oplus>\nq),\n                              a, \\<xi>', p')\n                             \\<in> seqp_sos \\<Gamma>\nA total of 12 subgoals...", "with \\<open>\\<sigma> i = \\<xi>\\<close> and \\<open>\\<sigma>' i = \\<xi>\\<close>"], ["proof (chain)\npicking this:\n  \\<sigma> i = \\<xi>\n  \\<sigma>' i = \\<xi>\n  ((\\<xi>, {l}broadcast(ms) .\n    p),\n   broadcast (ms \\<xi>), \\<xi>, p)\n  \\<in> seqp_sos \\<Gamma>", "show \"\\<exists>\\<xi>'. \\<sigma>' i = \\<xi>'\n             \\<and> ((\\<xi>, {l}broadcast(ms).p), broadcast (ms (\\<sigma> i)), (\\<xi>', p)) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\nusing this:\n  \\<sigma> i = \\<xi>\n  \\<sigma>' i = \\<xi>\n  ((\\<xi>, {l}broadcast(ms) .\n    p),\n   broadcast (ms \\<xi>), \\<xi>, p)\n  \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<xi>'.\n       \\<sigma>' i = \\<xi>' \\<and>\n       ((\\<xi>, {l}broadcast(ms) .\n         p),\n        broadcast (ms (\\<sigma> i)), \\<xi>', p)\n       \\<in> seqp_sos \\<Gamma>", "by clarsimp"], ["proof (state)\nthis:\n  \\<exists>\\<xi>'.\n     \\<sigma>' i = \\<xi>' \\<and>\n     ((\\<xi>, {l}broadcast(ms) .\n       p),\n      broadcast (ms (\\<sigma> i)), \\<xi>', p)\n     \\<in> seqp_sos \\<Gamma>\n\ngoal (11 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<xi>', p)\n                               \\<in> seqp_sos \\<Gamma>\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<xi>', q)\n                               \\<in> seqp_sos \\<Gamma>\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 6. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 7. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i); \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 8. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<sigma> i = \\<xi> \\<Longrightarrow>\n        \\<exists>\\<xi>'.\n           \\<sigma>' i = \\<xi>' \\<and>\n           ((\\<xi>, \\<Gamma> pn), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, call(pn)), a, \\<xi>', p')\n                            \\<in> seqp_sos \\<Gamma>\n 9. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<sigma> i = \\<xi> \\<Longrightarrow>\n        \\<exists>\\<xi>'.\n           \\<sigma>' i = \\<xi>' \\<and>\n           ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, p\n                                     \\<oplus>\n                                     q),\n                             a, \\<xi>', p')\n                            \\<in> seqp_sos \\<Gamma>\n 10. \\<And>\\<sigma> q a \\<sigma>' q' p.\n        \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<sigma> i = \\<xi> \\<Longrightarrow>\n         \\<exists>\\<xi>'.\n            \\<sigma>' i = \\<xi>' \\<and>\n            ((\\<xi>, q), a, \\<xi>', q') \\<in> seqp_sos \\<Gamma>;\n         \\<sigma> i = \\<xi>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<xi>'.\n                             \\<sigma>' i = \\<xi>' \\<and>\n                             ((\\<xi>, p\n\\<oplus>\nq),\n                              a, \\<xi>', q')\n                             \\<in> seqp_sos \\<Gamma>\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<xi>', p)\n                               \\<in> seqp_sos \\<Gamma>\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<xi>', q)\n                               \\<in> seqp_sos \\<Gamma>\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 6. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 7. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i); \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 8. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<sigma> i = \\<xi> \\<Longrightarrow>\n        \\<exists>\\<xi>'.\n           \\<sigma>' i = \\<xi>' \\<and>\n           ((\\<xi>, \\<Gamma> pn), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, call(pn)), a, \\<xi>', p')\n                            \\<in> seqp_sos \\<Gamma>\n 9. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<sigma> i = \\<xi> \\<Longrightarrow>\n        \\<exists>\\<xi>'.\n           \\<sigma>' i = \\<xi>' \\<and>\n           ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, p\n                                     \\<oplus>\n                                     q),\n                             a, \\<xi>', p')\n                            \\<in> seqp_sos \\<Gamma>\n 10. \\<And>\\<sigma> q a \\<sigma>' q' p.\n        \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<sigma> i = \\<xi> \\<Longrightarrow>\n         \\<exists>\\<xi>'.\n            \\<sigma>' i = \\<xi>' \\<and>\n            ((\\<xi>, q), a, \\<xi>', q') \\<in> seqp_sos \\<Gamma>;\n         \\<sigma> i = \\<xi>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<xi>'.\n                             \\<sigma>' i = \\<xi>' \\<and>\n                             ((\\<xi>, p\n\\<oplus>\nq),\n                              a, \\<xi>', q')\n                             \\<in> seqp_sos \\<Gamma>\nA total of 11 subgoals...", "fix fmsg :: \"'m \\<Rightarrow> 's \\<Rightarrow> 's\" and msg :: 'm and \\<sigma>' \\<sigma> l p"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<xi>', p)\n                               \\<in> seqp_sos \\<Gamma>\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<xi>', q)\n                               \\<in> seqp_sos \\<Gamma>\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 6. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 7. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i); \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 8. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<sigma> i = \\<xi> \\<Longrightarrow>\n        \\<exists>\\<xi>'.\n           \\<sigma>' i = \\<xi>' \\<and>\n           ((\\<xi>, \\<Gamma> pn), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, call(pn)), a, \\<xi>', p')\n                            \\<in> seqp_sos \\<Gamma>\n 9. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<sigma> i = \\<xi> \\<Longrightarrow>\n        \\<exists>\\<xi>'.\n           \\<sigma>' i = \\<xi>' \\<and>\n           ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, p\n                                     \\<oplus>\n                                     q),\n                             a, \\<xi>', p')\n                            \\<in> seqp_sos \\<Gamma>\n 10. \\<And>\\<sigma> q a \\<sigma>' q' p.\n        \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<sigma> i = \\<xi> \\<Longrightarrow>\n         \\<exists>\\<xi>'.\n            \\<sigma>' i = \\<xi>' \\<and>\n            ((\\<xi>, q), a, \\<xi>', q') \\<in> seqp_sos \\<Gamma>;\n         \\<sigma> i = \\<xi>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<xi>'.\n                             \\<sigma>' i = \\<xi>' \\<and>\n                             ((\\<xi>, p\n\\<oplus>\nq),\n                              a, \\<xi>', q')\n                             \\<in> seqp_sos \\<Gamma>\nA total of 11 subgoals...", "assume \"\\<sigma>' i = fmsg msg (\\<sigma> i)\"\n       and \"\\<sigma> i = \\<xi>\""], ["proof (state)\nthis:\n  \\<sigma>' i = fmsg msg (\\<sigma> i)\n  \\<sigma> i = \\<xi>\n\ngoal (11 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<xi>', p)\n                               \\<in> seqp_sos \\<Gamma>\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<xi>', q)\n                               \\<in> seqp_sos \\<Gamma>\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 6. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 7. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i); \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 8. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<sigma> i = \\<xi> \\<Longrightarrow>\n        \\<exists>\\<xi>'.\n           \\<sigma>' i = \\<xi>' \\<and>\n           ((\\<xi>, \\<Gamma> pn), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, call(pn)), a, \\<xi>', p')\n                            \\<in> seqp_sos \\<Gamma>\n 9. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<sigma> i = \\<xi> \\<Longrightarrow>\n        \\<exists>\\<xi>'.\n           \\<sigma>' i = \\<xi>' \\<and>\n           ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, p\n                                     \\<oplus>\n                                     q),\n                             a, \\<xi>', p')\n                            \\<in> seqp_sos \\<Gamma>\n 10. \\<And>\\<sigma> q a \\<sigma>' q' p.\n        \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<sigma> i = \\<xi> \\<Longrightarrow>\n         \\<exists>\\<xi>'.\n            \\<sigma>' i = \\<xi>' \\<and>\n            ((\\<xi>, q), a, \\<xi>', q') \\<in> seqp_sos \\<Gamma>;\n         \\<sigma> i = \\<xi>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<xi>'.\n                             \\<sigma>' i = \\<xi>' \\<and>\n                             ((\\<xi>, p\n\\<oplus>\nq),\n                              a, \\<xi>', q')\n                             \\<in> seqp_sos \\<Gamma>\nA total of 11 subgoals...", "have \"((\\<xi>, {l}receive(fmsg).p), receive msg, (fmsg msg \\<xi>, p)) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<xi>, {l}receive(fmsg) .\n      p),\n     receive msg, fmsg msg \\<xi>, p)\n    \\<in> seqp_sos \\<Gamma>", "by auto"], ["proof (state)\nthis:\n  ((\\<xi>, {l}receive(fmsg) .\n    p),\n   receive msg, fmsg msg \\<xi>, p)\n  \\<in> seqp_sos \\<Gamma>\n\ngoal (11 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<xi>', p)\n                               \\<in> seqp_sos \\<Gamma>\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<xi>', q)\n                               \\<in> seqp_sos \\<Gamma>\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 6. \\<And>\\<sigma>' u\\<^sub>m\\<^sub>s\\<^sub>g msg \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u\\<^sub>m\\<^sub>s\\<^sub>g msg (\\<sigma> i);\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}receive(u\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             receive msg, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 7. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i); \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 8. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<sigma> i = \\<xi> \\<Longrightarrow>\n        \\<exists>\\<xi>'.\n           \\<sigma>' i = \\<xi>' \\<and>\n           ((\\<xi>, \\<Gamma> pn), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, call(pn)), a, \\<xi>', p')\n                            \\<in> seqp_sos \\<Gamma>\n 9. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<sigma> i = \\<xi> \\<Longrightarrow>\n        \\<exists>\\<xi>'.\n           \\<sigma>' i = \\<xi>' \\<and>\n           ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, p\n                                     \\<oplus>\n                                     q),\n                             a, \\<xi>', p')\n                            \\<in> seqp_sos \\<Gamma>\n 10. \\<And>\\<sigma> q a \\<sigma>' q' p.\n        \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                 \\<in> oseqp_sos \\<Gamma> i;\n         \\<sigma> i = \\<xi> \\<Longrightarrow>\n         \\<exists>\\<xi>'.\n            \\<sigma>' i = \\<xi>' \\<and>\n            ((\\<xi>, q), a, \\<xi>', q') \\<in> seqp_sos \\<Gamma>;\n         \\<sigma> i = \\<xi>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<xi>'.\n                             \\<sigma>' i = \\<xi>' \\<and>\n                             ((\\<xi>, p\n\\<oplus>\nq),\n                              a, \\<xi>', q')\n                             \\<in> seqp_sos \\<Gamma>\nA total of 11 subgoals...", "with \\<open>\\<sigma>' i = fmsg msg (\\<sigma> i)\\<close> and \\<open>\\<sigma> i = \\<xi>\\<close>"], ["proof (chain)\npicking this:\n  \\<sigma>' i = fmsg msg (\\<sigma> i)\n  \\<sigma> i = \\<xi>\n  ((\\<xi>, {l}receive(fmsg) .\n    p),\n   receive msg, fmsg msg \\<xi>, p)\n  \\<in> seqp_sos \\<Gamma>", "show \"\\<exists>\\<xi>'. \\<sigma>' i = \\<xi>' \\<and> ((\\<xi>, {l}receive(fmsg).p), receive msg, (\\<xi>', p)) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\nusing this:\n  \\<sigma>' i = fmsg msg (\\<sigma> i)\n  \\<sigma> i = \\<xi>\n  ((\\<xi>, {l}receive(fmsg) .\n    p),\n   receive msg, fmsg msg \\<xi>, p)\n  \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<xi>'.\n       \\<sigma>' i = \\<xi>' \\<and>\n       ((\\<xi>, {l}receive(fmsg) .\n         p),\n        receive msg, \\<xi>', p)\n       \\<in> seqp_sos \\<Gamma>", "by clarsimp"], ["proof (state)\nthis:\n  \\<exists>\\<xi>'.\n     \\<sigma>' i = \\<xi>' \\<and>\n     ((\\<xi>, {l}receive(fmsg) .\n       p),\n      receive msg, \\<xi>', p)\n     \\<in> seqp_sos \\<Gamma>\n\ngoal (10 subgoals):\n 1. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p\\<^sub>s\n       s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}groupcast(s\\<^sub>i\\<^sub>p\\<^sub>s,\n      s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             groupcast\n                              (s\\<^sub>i\\<^sub>p\\<^sub>s (\\<sigma> i))\n                              (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 2. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                unicast (s\\<^sub>i\\<^sub>p (\\<sigma> i))\n                                 (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                                \\<xi>', p)\n                               \\<in> seqp_sos \\<Gamma>\n 3. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>i\\<^sub>p s\\<^sub>m\\<^sub>s\\<^sub>g p\n       q. \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n          \\<Longrightarrow> \\<exists>\\<xi>'.\n                               \\<sigma>' i = \\<xi>' \\<and>\n                               ((\\<xi>,\n                                 {l}unicast(s\\<^sub>i\\<^sub>p,\n       s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                                    p \\<triangleright> q),\n                                \\<not>unicast (s\\<^sub>i\\<^sub>p\n          (\\<sigma> i)),\n                                \\<xi>', q)\n                               \\<in> seqp_sos \\<Gamma>\n 4. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>m\\<^sub>s\\<^sub>g p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}send(s\\<^sub>m\\<^sub>s\\<^sub>g) .\n                              p),\n                             send (s\\<^sub>m\\<^sub>s\\<^sub>g (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 5. \\<And>\\<sigma>' \\<sigma> l s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a p.\n       \\<lbrakk>\\<sigma>' i = \\<sigma> i; \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>,\n                              {l}deliver(s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a) .\n                              p),\n                             deliver\n                              (s\\<^sub>d\\<^sub>a\\<^sub>t\\<^sub>a\n                                (\\<sigma> i)),\n                             \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 6. \\<And>\\<sigma>' u \\<sigma> l p.\n       \\<lbrakk>\\<sigma>' i = u (\\<sigma> i); \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, {l}\\<lbrakk>u\\<rbrakk>\n                              p),\n                             \\<tau>, \\<xi>', p)\n                            \\<in> seqp_sos \\<Gamma>\n 7. \\<And>\\<sigma> pn a \\<sigma>' p'.\n       \\<lbrakk>((\\<sigma>, \\<Gamma> pn), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<sigma> i = \\<xi> \\<Longrightarrow>\n        \\<exists>\\<xi>'.\n           \\<sigma>' i = \\<xi>' \\<and>\n           ((\\<xi>, \\<Gamma> pn), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, call(pn)), a, \\<xi>', p')\n                            \\<in> seqp_sos \\<Gamma>\n 8. \\<And>\\<sigma> p a \\<sigma>' p' q.\n       \\<lbrakk>((\\<sigma>, p), a, \\<sigma>', p')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<sigma> i = \\<xi> \\<Longrightarrow>\n        \\<exists>\\<xi>'.\n           \\<sigma>' i = \\<xi>' \\<and>\n           ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>;\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, p\n                                     \\<oplus>\n                                     q),\n                             a, \\<xi>', p')\n                            \\<in> seqp_sos \\<Gamma>\n 9. \\<And>\\<sigma> q a \\<sigma>' q' p.\n       \\<lbrakk>((\\<sigma>, q), a, \\<sigma>', q')\n                \\<in> oseqp_sos \\<Gamma> i;\n        \\<sigma> i = \\<xi> \\<Longrightarrow>\n        \\<exists>\\<xi>'.\n           \\<sigma>' i = \\<xi>' \\<and>\n           ((\\<xi>, q), a, \\<xi>', q') \\<in> seqp_sos \\<Gamma>;\n        \\<sigma> i = \\<xi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>'.\n                            \\<sigma>' i = \\<xi>' \\<and>\n                            ((\\<xi>, p\n                                     \\<oplus>\n                                     q),\n                             a, \\<xi>', q')\n                            \\<in> seqp_sos \\<Gamma>\n 10. \\<And>\\<sigma>' g \\<sigma> l p.\n        \\<lbrakk>\\<sigma>' i \\<in> g (\\<sigma> i);\n         \\<sigma> i = \\<xi>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<xi>'.\n                             \\<sigma>' i = \\<xi>' \\<and>\n                             ((\\<xi>, {l}\\<langle>g\\<rangle>\n                               p),\n                              \\<tau>, \\<xi>', p)\n                             \\<in> seqp_sos \\<Gamma>", "qed (simp_all, (metis assignT choiceT1 choiceT2 groupcastT guardT\n                        callT unicastT notunicastT sendT deliverT step_seq_tau)+)"], ["", "lemma reachable_oseq_seqp_sos:\n  assumes \"(\\<sigma>, p) \\<in> reachable OA I\"\n      and \"initiali i (init OA) (init A)\"\n      and spo: \"trans OA = oseqp_sos \\<Gamma> i\"\n      and sp: \"trans A = seqp_sos \\<Gamma>\"\n      shows \"\\<exists>\\<xi>. \\<sigma> i = \\<xi> \\<and> (\\<xi>, p) \\<in> reachable A I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<xi>. \\<sigma> i = \\<xi> \\<and> (\\<xi>, p) \\<in> reachable A I", "using assms(1)"], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> reachable OA I\n\ngoal (1 subgoal):\n 1. \\<exists>\\<xi>. \\<sigma> i = \\<xi> \\<and> (\\<xi>, p) \\<in> reachable A I", "proof (induction rule: reachable_pair_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p.\n       (\\<xi>, p) \\<in> init OA \\<Longrightarrow>\n       \\<exists>\\<xi>'.\n          \\<xi> i = \\<xi>' \\<and> (\\<xi>', p) \\<in> reachable A I\n 2. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        \\<exists>\\<xi>'.\n           \\<xi> i = \\<xi>' \\<and> (\\<xi>', p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>.\n                            \\<xi>' i = \\<xi> \\<and>\n                            (\\<xi>, p') \\<in> reachable A I", "fix \\<sigma> p"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p.\n       (\\<xi>, p) \\<in> init OA \\<Longrightarrow>\n       \\<exists>\\<xi>'.\n          \\<xi> i = \\<xi>' \\<and> (\\<xi>', p) \\<in> reachable A I\n 2. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        \\<exists>\\<xi>'.\n           \\<xi> i = \\<xi>' \\<and> (\\<xi>', p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>.\n                            \\<xi>' i = \\<xi> \\<and>\n                            (\\<xi>, p') \\<in> reachable A I", "assume \"(\\<sigma>, p) \\<in> init OA\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> init OA\n\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p.\n       (\\<xi>, p) \\<in> init OA \\<Longrightarrow>\n       \\<exists>\\<xi>'.\n          \\<xi> i = \\<xi>' \\<and> (\\<xi>', p) \\<in> reachable A I\n 2. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        \\<exists>\\<xi>'.\n           \\<xi> i = \\<xi>' \\<and> (\\<xi>', p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>.\n                            \\<xi>' i = \\<xi> \\<and>\n                            (\\<xi>, p') \\<in> reachable A I", "with \\<open>initiali i (init OA) (init A)\\<close>"], ["proof (chain)\npicking this:\n  initiali i (init OA) (init A)\n  (\\<sigma>, p) \\<in> init OA", "obtain \\<xi> where \"\\<sigma> i = \\<xi>\"\n                                                    and \"(\\<xi>, p) \\<in> init A\""], ["proof (prove)\nusing this:\n  initiali i (init OA) (init A)\n  (\\<sigma>, p) \\<in> init OA\n\ngoal (1 subgoal):\n 1. (\\<And>\\<xi>.\n        \\<lbrakk>\\<sigma> i = \\<xi>; (\\<xi>, p) \\<in> init A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<sigma> i = \\<xi>\n  (\\<xi>, p) \\<in> init A\n\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p.\n       (\\<xi>, p) \\<in> init OA \\<Longrightarrow>\n       \\<exists>\\<xi>'.\n          \\<xi> i = \\<xi>' \\<and> (\\<xi>', p) \\<in> reachable A I\n 2. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        \\<exists>\\<xi>'.\n           \\<xi> i = \\<xi>' \\<and> (\\<xi>', p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>.\n                            \\<xi>' i = \\<xi> \\<and>\n                            (\\<xi>, p') \\<in> reachable A I", "from \\<open>(\\<xi>, p) \\<in> init A\\<close>"], ["proof (chain)\npicking this:\n  (\\<xi>, p) \\<in> init A", "have \"(\\<xi>, p) \\<in> reachable A I\""], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> init A\n\ngoal (1 subgoal):\n 1. (\\<xi>, p) \\<in> reachable A I", ".."], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> reachable A I\n\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p.\n       (\\<xi>, p) \\<in> init OA \\<Longrightarrow>\n       \\<exists>\\<xi>'.\n          \\<xi> i = \\<xi>' \\<and> (\\<xi>', p) \\<in> reachable A I\n 2. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        \\<exists>\\<xi>'.\n           \\<xi> i = \\<xi>' \\<and> (\\<xi>', p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>.\n                            \\<xi>' i = \\<xi> \\<and>\n                            (\\<xi>, p') \\<in> reachable A I", "with \\<open>\\<sigma> i = \\<xi>\\<close>"], ["proof (chain)\npicking this:\n  \\<sigma> i = \\<xi>\n  (\\<xi>, p) \\<in> reachable A I", "show \"\\<exists>\\<xi>. \\<sigma> i = \\<xi> \\<and> (\\<xi>, p) \\<in> reachable A I\""], ["proof (prove)\nusing this:\n  \\<sigma> i = \\<xi>\n  (\\<xi>, p) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. \\<exists>\\<xi>. \\<sigma> i = \\<xi> \\<and> (\\<xi>, p) \\<in> reachable A I", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<xi>. \\<sigma> i = \\<xi> \\<and> (\\<xi>, p) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        \\<exists>\\<xi>'.\n           \\<xi> i = \\<xi>' \\<and> (\\<xi>', p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>.\n                            \\<xi>' i = \\<xi> \\<and>\n                            (\\<xi>, p') \\<in> reachable A I", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        \\<exists>\\<xi>'.\n           \\<xi> i = \\<xi>' \\<and> (\\<xi>', p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>.\n                            \\<xi>' i = \\<xi> \\<and>\n                            (\\<xi>, p') \\<in> reachable A I", "fix \\<sigma> p \\<sigma>' p' a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        \\<exists>\\<xi>'.\n           \\<xi> i = \\<xi>' \\<and> (\\<xi>', p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>.\n                            \\<xi>' i = \\<xi> \\<and>\n                            (\\<xi>, p') \\<in> reachable A I", "assume \"(\\<sigma>, p) \\<in> reachable OA I\"\n       and IH: \"\\<exists>\\<xi>. \\<sigma> i = \\<xi> \\<and> (\\<xi>, p) \\<in> reachable A I\"\n       and otr: \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> trans OA\"\n       and \"I a\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> reachable OA I\n  \\<exists>\\<xi>. \\<sigma> i = \\<xi> \\<and> (\\<xi>, p) \\<in> reachable A I\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans OA\n  I a\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        \\<exists>\\<xi>'.\n           \\<xi> i = \\<xi>' \\<and> (\\<xi>', p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>.\n                            \\<xi>' i = \\<xi> \\<and>\n                            (\\<xi>, p') \\<in> reachable A I", "from IH"], ["proof (chain)\npicking this:\n  \\<exists>\\<xi>. \\<sigma> i = \\<xi> \\<and> (\\<xi>, p) \\<in> reachable A I", "obtain \\<xi> where \"\\<sigma> i = \\<xi>\"\n                       and cr: \"(\\<xi>, p) \\<in> reachable A I\""], ["proof (prove)\nusing this:\n  \\<exists>\\<xi>. \\<sigma> i = \\<xi> \\<and> (\\<xi>, p) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. (\\<And>\\<xi>.\n        \\<lbrakk>\\<sigma> i = \\<xi>; (\\<xi>, p) \\<in> reachable A I\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  \\<sigma> i = \\<xi>\n  (\\<xi>, p) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        \\<exists>\\<xi>'.\n           \\<xi> i = \\<xi>' \\<and> (\\<xi>', p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>.\n                            \\<xi>' i = \\<xi> \\<and>\n                            (\\<xi>, p') \\<in> reachable A I", "from otr and spo"], ["proof (chain)\npicking this:\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans OA\n  automaton.trans OA = oseqp_sos \\<Gamma> i", "have \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans OA\n  automaton.trans OA = oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i", "by simp"], ["proof (state)\nthis:\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        \\<exists>\\<xi>'.\n           \\<xi> i = \\<xi>' \\<and> (\\<xi>', p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>.\n                            \\<xi>' i = \\<xi> \\<and>\n                            (\\<xi>, p') \\<in> reachable A I", "with \\<open>\\<sigma> i = \\<xi>\\<close>"], ["proof (chain)\npicking this:\n  \\<sigma> i = \\<xi>\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i", "obtain \\<xi>' where \"\\<sigma>' i = \\<xi>'\"\n                               and \"((\\<xi>, p), a, (\\<xi>', p')) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\nusing this:\n  \\<sigma> i = \\<xi>\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. (\\<And>\\<xi>'.\n        \\<lbrakk>\\<sigma>' i = \\<xi>';\n         ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest!: oseq_step_is_seq_step)"], ["proof (state)\nthis:\n  \\<sigma>' i = \\<xi>'\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        \\<exists>\\<xi>'.\n           \\<xi> i = \\<xi>' \\<and> (\\<xi>', p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>.\n                            \\<xi>' i = \\<xi> \\<and>\n                            (\\<xi>, p') \\<in> reachable A I", "from this(2) and sp"], ["proof (chain)\npicking this:\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\n  automaton.trans A = seqp_sos \\<Gamma>", "have ctr: \"((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A\""], ["proof (prove)\nusing this:\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\n  automaton.trans A = seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A", "by simp"], ["proof (state)\nthis:\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        \\<exists>\\<xi>'.\n           \\<xi> i = \\<xi>' \\<and> (\\<xi>', p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>.\n                            \\<xi>' i = \\<xi> \\<and>\n                            (\\<xi>, p') \\<in> reachable A I", "from \\<open>(\\<xi>, p) \\<in> reachable A I\\<close> and ctr and \\<open>I a\\<close>"], ["proof (chain)\npicking this:\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  I a", "have \"(\\<xi>', p') \\<in> reachable A I\""], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. (\\<xi>', p') \\<in> reachable A I", ".."], ["proof (state)\nthis:\n  (\\<xi>', p') \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        \\<exists>\\<xi>'.\n           \\<xi> i = \\<xi>' \\<and> (\\<xi>', p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<xi>.\n                            \\<xi>' i = \\<xi> \\<and>\n                            (\\<xi>, p') \\<in> reachable A I", "with \\<open>\\<sigma>' i = \\<xi>'\\<close>"], ["proof (chain)\npicking this:\n  \\<sigma>' i = \\<xi>'\n  (\\<xi>', p') \\<in> reachable A I", "show \"\\<exists>\\<xi>. \\<sigma>' i = \\<xi> \\<and> (\\<xi>, p') \\<in> reachable A I\""], ["proof (prove)\nusing this:\n  \\<sigma>' i = \\<xi>'\n  (\\<xi>', p') \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. \\<exists>\\<xi>.\n       \\<sigma>' i = \\<xi> \\<and> (\\<xi>, p') \\<in> reachable A I", "by blast"], ["proof (state)\nthis:\n  \\<exists>\\<xi>. \\<sigma>' i = \\<xi> \\<and> (\\<xi>, p') \\<in> reachable A I\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reachable_oseq_seqp_sos':\n  assumes \"s \\<in> reachable OA I\"\n      and \"initiali i (init OA) (init A)\"\n      and \"trans OA = oseqp_sos \\<Gamma> i\"\n      and \"trans A = seqp_sos \\<Gamma>\"\n    shows \"\\<exists>\\<xi>. (fst s) i = \\<xi> \\<and> (\\<xi>, snd s) \\<in> reachable A I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<xi>.\n       fst s i = \\<xi> \\<and> (\\<xi>, snd s) \\<in> reachable A I", "using assms"], ["proof (prove)\nusing this:\n  s \\<in> reachable OA I\n  initiali i (init OA) (init A)\n  automaton.trans OA = oseqp_sos \\<Gamma> i\n  automaton.trans A = seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<xi>.\n       fst s i = \\<xi> \\<and> (\\<xi>, snd s) \\<in> reachable A I", "by - (cases s, auto dest: reachable_oseq_seqp_sos)"], ["", "text \\<open>\n  Any invariant shown in the (simpler) closed semantics can be transferred to an invariant in\n  the open semantics.\n\\<close>"], ["", "theorem open_seq_invariant [intro]:\n  assumes \"A \\<TTurnstile> (I \\<rightarrow>) P\"\n      and \"initiali i (init OA) (init A)\"\n      and spo: \"trans OA = oseqp_sos \\<Gamma> i\"\n      and sp: \"trans A = seqp_sos \\<Gamma>\"\n    shows \"OA \\<Turnstile> (act I, other ANY {i} \\<rightarrow>) (seql i P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. OA \\<Turnstile> (act I, other ANY {i} \\<rightarrow>) seql i P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. OA \\<Turnstile> (act I, other ANY {i} \\<rightarrow>) seql i P", "have \"OA \\<TTurnstile> (I \\<rightarrow>) (seql i P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. OA \\<TTurnstile> (I \\<rightarrow>) seql i P", "proof (rule invariant_arbitraryI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> reachable OA I \\<Longrightarrow> seql i P s", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> reachable OA I \\<Longrightarrow> seql i P s", "assume \"s \\<in> reachable OA I\""], ["proof (state)\nthis:\n  s \\<in> reachable OA I\n\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> reachable OA I \\<Longrightarrow> seql i P s", "with \\<open>initiali i (init OA) (init A)\\<close>"], ["proof (chain)\npicking this:\n  initiali i (init OA) (init A)\n  s \\<in> reachable OA I", "obtain \\<xi> where \"(fst s) i = \\<xi>\"\n                                                        and \"(\\<xi>, snd s) \\<in> reachable A I\""], ["proof (prove)\nusing this:\n  initiali i (init OA) (init A)\n  s \\<in> reachable OA I\n\ngoal (1 subgoal):\n 1. (\\<And>\\<xi>.\n        \\<lbrakk>fst s i = \\<xi>;\n         (\\<xi>, snd s) \\<in> reachable A I\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: reachable_oseq_seqp_sos' [OF _ _ spo sp])"], ["proof (state)\nthis:\n  fst s i = \\<xi>\n  (\\<xi>, snd s) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> reachable OA I \\<Longrightarrow> seql i P s", "with \\<open>A \\<TTurnstile> (I \\<rightarrow>) P\\<close>"], ["proof (chain)\npicking this:\n  A \\<TTurnstile> (I \\<rightarrow>) P\n  fst s i = \\<xi>\n  (\\<xi>, snd s) \\<in> reachable A I", "have \"P (\\<xi>, snd s)\""], ["proof (prove)\nusing this:\n  A \\<TTurnstile> (I \\<rightarrow>) P\n  fst s i = \\<xi>\n  (\\<xi>, snd s) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. P (\\<xi>, snd s)", "by auto"], ["proof (state)\nthis:\n  P (\\<xi>, snd s)\n\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> reachable OA I \\<Longrightarrow> seql i P s", "with \\<open>(fst s) i = \\<xi>\\<close>"], ["proof (chain)\npicking this:\n  fst s i = \\<xi>\n  P (\\<xi>, snd s)", "show \"seql i P s\""], ["proof (prove)\nusing this:\n  fst s i = \\<xi>\n  P (\\<xi>, snd s)\n\ngoal (1 subgoal):\n 1. seql i P s", "by auto"], ["proof (state)\nthis:\n  seql i P s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  OA \\<TTurnstile> (I \\<rightarrow>) seql i P\n\ngoal (1 subgoal):\n 1. OA \\<Turnstile> (act I, other ANY {i} \\<rightarrow>) seql i P", "moreover"], ["proof (state)\nthis:\n  OA \\<TTurnstile> (I \\<rightarrow>) seql i P\n\ngoal (1 subgoal):\n 1. OA \\<Turnstile> (act I, other ANY {i} \\<rightarrow>) seql i P", "from spo"], ["proof (chain)\npicking this:\n  automaton.trans OA = oseqp_sos \\<Gamma> i", "have \"subreachable OA (other ANY {i}) {i}\""], ["proof (prove)\nusing this:\n  automaton.trans OA = oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. subreachable OA (other ANY {i}) {i}", ".."], ["proof (state)\nthis:\n  subreachable OA (other ANY {i}) {i}\n\ngoal (1 subgoal):\n 1. OA \\<Turnstile> (act I, other ANY {i} \\<rightarrow>) seql i P", "ultimately"], ["proof (chain)\npicking this:\n  OA \\<TTurnstile> (I \\<rightarrow>) seql i P\n  subreachable OA (other ANY {i}) {i}", "show ?thesis"], ["proof (prove)\nusing this:\n  OA \\<TTurnstile> (I \\<rightarrow>) seql i P\n  subreachable OA (other ANY {i}) {i}\n\ngoal (1 subgoal):\n 1. OA \\<Turnstile> (act I, other ANY {i} \\<rightarrow>) seql i P", "proof (rule open_closed_invariant)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' s.\n       \\<lbrakk>\\<forall>j\\<in>{i}. \\<sigma>' j = \\<sigma> j;\n        seql i P (\\<sigma>', s)\\<rbrakk>\n       \\<Longrightarrow> seql i P (\\<sigma>, s)", "fix \\<sigma> \\<sigma>' s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' s.\n       \\<lbrakk>\\<forall>j\\<in>{i}. \\<sigma>' j = \\<sigma> j;\n        seql i P (\\<sigma>', s)\\<rbrakk>\n       \\<Longrightarrow> seql i P (\\<sigma>, s)", "assume \"\\<forall>j\\<in>{i}. \\<sigma>' j = \\<sigma> j\"\n         and \"seql i P (\\<sigma>', s)\""], ["proof (state)\nthis:\n  \\<forall>j\\<in>{i}. \\<sigma>' j = \\<sigma> j\n  seql i P (\\<sigma>', s)\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' s.\n       \\<lbrakk>\\<forall>j\\<in>{i}. \\<sigma>' j = \\<sigma> j;\n        seql i P (\\<sigma>', s)\\<rbrakk>\n       \\<Longrightarrow> seql i P (\\<sigma>, s)", "thus \"seql i P (\\<sigma>, s)\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{i}. \\<sigma>' j = \\<sigma> j\n  seql i P (\\<sigma>', s)\n\ngoal (1 subgoal):\n 1. seql i P (\\<sigma>, s)", ".."], ["proof (state)\nthis:\n  seql i P (\\<sigma>, s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  OA \\<Turnstile> (act I, other ANY {i} \\<rightarrow>) seql i P\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  seqll :: \"'i \\<Rightarrow> ((('s \\<times> 'l) \\<times> 'a \\<times> ('s \\<times> 'l)) \\<Rightarrow> bool)\n               \\<Rightarrow> ((('i \\<Rightarrow> 's) \\<times> 'l) \\<times> 'a \\<times> (('i \\<Rightarrow> 's) \\<times> 'l)) \\<Rightarrow> bool\"\nwhere\n  \"seqll i P \\<equiv> (\\<lambda>((\\<sigma>, p), a, (\\<sigma>', p')). P ((\\<sigma> i, p), a, (\\<sigma>' i, p')))\""], ["", "lemma same_seqll [elim]:\n  assumes \"\\<forall>j\\<in>{i}. \\<sigma>\\<^sub>1' j = \\<sigma>\\<^sub>1 j\"\n      and \"\\<forall>j\\<in>{i}. \\<sigma>\\<^sub>2' j = \\<sigma>\\<^sub>2 j\"\n      and \"seqll i P ((\\<sigma>\\<^sub>1', s), a, (\\<sigma>\\<^sub>2', s'))\"\n    shows \"seqll i P ((\\<sigma>\\<^sub>1,  s), a, (\\<sigma>\\<^sub>2,  s'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. seqll i P ((\\<sigma>\\<^sub>1, s), a, \\<sigma>\\<^sub>2, s')", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{i}. \\<sigma>\\<^sub>1' j = \\<sigma>\\<^sub>1 j\n  \\<forall>j\\<in>{i}. \\<sigma>\\<^sub>2' j = \\<sigma>\\<^sub>2 j\n  seqll i P ((\\<sigma>\\<^sub>1', s), a, \\<sigma>\\<^sub>2', s')\n\ngoal (1 subgoal):\n 1. seqll i P ((\\<sigma>\\<^sub>1, s), a, \\<sigma>\\<^sub>2, s')", "unfolding seqll_def"], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{i}. \\<sigma>\\<^sub>1' j = \\<sigma>\\<^sub>1 j\n  \\<forall>j\\<in>{i}. \\<sigma>\\<^sub>2' j = \\<sigma>\\<^sub>2 j\n  case ((\\<sigma>\\<^sub>1', s), a, \\<sigma>\\<^sub>2', s') of\n  (x, xa) \\<Rightarrow>\n    (case x of\n     (\\<sigma>, p) \\<Rightarrow>\n       \\<lambda>(a, \\<sigma>', p'). P ((\\<sigma> i, p), a, \\<sigma>' i, p'))\n     xa\n\ngoal (1 subgoal):\n 1. case ((\\<sigma>\\<^sub>1, s), a, \\<sigma>\\<^sub>2, s') of\n    (x, xa) \\<Rightarrow>\n      (case x of\n       (\\<sigma>, p) \\<Rightarrow>\n         \\<lambda>(a, \\<sigma>', p').\n            P ((\\<sigma> i, p), a, \\<sigma>' i, p'))\n       xa", "by (clarsimp)"], ["", "lemma seqllI [intro!]:\n  assumes \"P ((\\<sigma> i, p), a, (\\<sigma>' i, p'))\"\n    shows \"seqll i P ((\\<sigma>, p), a, (\\<sigma>', p'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. seqll i P ((\\<sigma>, p), a, \\<sigma>', p')", "using assms"], ["proof (prove)\nusing this:\n  P ((\\<sigma> i, p), a, \\<sigma>' i, p')\n\ngoal (1 subgoal):\n 1. seqll i P ((\\<sigma>, p), a, \\<sigma>', p')", "unfolding seqll_def"], ["proof (prove)\nusing this:\n  P ((\\<sigma> i, p), a, \\<sigma>' i, p')\n\ngoal (1 subgoal):\n 1. case ((\\<sigma>, p), a, \\<sigma>', p') of\n    (x, xa) \\<Rightarrow>\n      (case x of\n       (\\<sigma>, p) \\<Rightarrow>\n         \\<lambda>(a, \\<sigma>', p').\n            P ((\\<sigma> i, p), a, \\<sigma>' i, p'))\n       xa", "by simp"], ["", "lemma seqllD [dest]:\n  assumes \"seqll i P ((\\<sigma>, p), a, (\\<sigma>', p'))\"\n    shows \"P ((\\<sigma> i, p), a, (\\<sigma>' i, p'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P ((\\<sigma> i, p), a, \\<sigma>' i, p')", "using assms"], ["proof (prove)\nusing this:\n  seqll i P ((\\<sigma>, p), a, \\<sigma>', p')\n\ngoal (1 subgoal):\n 1. P ((\\<sigma> i, p), a, \\<sigma>' i, p')", "unfolding seqll_def"], ["proof (prove)\nusing this:\n  case ((\\<sigma>, p), a, \\<sigma>', p') of\n  (x, xa) \\<Rightarrow>\n    (case x of\n     (\\<sigma>, p) \\<Rightarrow>\n       \\<lambda>(a, \\<sigma>', p'). P ((\\<sigma> i, p), a, \\<sigma>' i, p'))\n     xa\n\ngoal (1 subgoal):\n 1. P ((\\<sigma> i, p), a, \\<sigma>' i, p')", "by simp"], ["", "lemma seqllsimp:\n  \"seqll i P ((\\<sigma>, p), a, (\\<sigma>', p')) = P ((\\<sigma> i, p), a, (\\<sigma>' i, p'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. seqll i P ((\\<sigma>, p), a, \\<sigma>', p') =\n    P ((\\<sigma> i, p), a, \\<sigma>' i, p')", "unfolding seqll_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case ((\\<sigma>, p), a, \\<sigma>', p') of\n     (x, xa) \\<Rightarrow>\n       (case x of\n        (\\<sigma>, p) \\<Rightarrow>\n          \\<lambda>(a, \\<sigma>', p').\n             P ((\\<sigma> i, p), a, \\<sigma>' i, p'))\n        xa) =\n    P ((\\<sigma> i, p), a, \\<sigma>' i, p')", "by simp"], ["", "lemma seqll_onll_swap:\n  \"seqll i (onll \\<Gamma> P) = onll \\<Gamma> (seqll i P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. seqll i (onll \\<Gamma> P) = onll \\<Gamma> (seqll i P)", "unfolding seqll_def onll_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>((\\<sigma>, p), a, \\<sigma>', p').\n        case ((\\<sigma> i, p), a, \\<sigma>' i, p') of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (\\<xi>, p) \\<Rightarrow>\n             \\<lambda>(a, \\<xi>', p').\n                \\<forall>l\\<in>labels \\<Gamma> p.\n                   \\<forall>l'\\<in>labels \\<Gamma> p'.\n                      P ((\\<xi>, l), a, \\<xi>', l'))\n           xa) =\n    (\\<lambda>((\\<xi>, p), a, \\<xi>', p').\n        \\<forall>l\\<in>labels \\<Gamma> p.\n           \\<forall>l'\\<in>labels \\<Gamma> p'.\n              case ((\\<xi>, l), a, \\<xi>', l') of\n              (x, xa) \\<Rightarrow>\n                (case x of\n                 (\\<sigma>, p) \\<Rightarrow>\n                   \\<lambda>(a, \\<sigma>', p').\n                      P ((\\<sigma> i, p), a, \\<sigma>' i, p'))\n                 xa)", "by simp"], ["", "theorem open_seq_step_invariant [intro]:\n  assumes \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P\"\n      and \"initiali i (init OA) (init A)\"\n      and spo: \"trans OA = oseqp_sos \\<Gamma> i\"\n      and sp: \"trans A = seqp_sos \\<Gamma>\"\n    shows \"OA \\<Turnstile>\\<^sub>A (act I, other ANY {i} \\<rightarrow>) (seqll i P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. OA \\<Turnstile>\\<^sub>A (act I, other ANY {i} \\<rightarrow>) seqll i P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. OA \\<Turnstile>\\<^sub>A (act I, other ANY {i} \\<rightarrow>) seqll i P", "have \"OA \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) (seqll i P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. OA \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) seqll i P", "proof (rule step_invariant_arbitraryI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p a \\<xi>' p'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> seqll i P ((\\<xi>, p), a, \\<xi>', p')", "fix \\<sigma> p a \\<sigma>' p'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p a \\<xi>' p'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> seqll i P ((\\<xi>, p), a, \\<xi>', p')", "assume or: \"(\\<sigma>, p) \\<in> reachable OA I\"\n         and otr: \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> trans OA\"\n         and \"I a\""], ["proof (state)\nthis:\n  (\\<sigma>, p) \\<in> reachable OA I\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans OA\n  I a\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p a \\<xi>' p'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> seqll i P ((\\<xi>, p), a, \\<xi>', p')", "from or \\<open>initiali i (init OA) (init A)\\<close> spo sp"], ["proof (chain)\npicking this:\n  (\\<sigma>, p) \\<in> reachable OA I\n  initiali i (init OA) (init A)\n  automaton.trans OA = oseqp_sos \\<Gamma> i\n  automaton.trans A = seqp_sos \\<Gamma>", "obtain \\<xi> where \"\\<sigma> i = \\<xi>\"\n                                                             and cr: \"(\\<xi>, p) \\<in> reachable A I\""], ["proof (prove)\nusing this:\n  (\\<sigma>, p) \\<in> reachable OA I\n  initiali i (init OA) (init A)\n  automaton.trans OA = oseqp_sos \\<Gamma> i\n  automaton.trans A = seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<xi>.\n        \\<lbrakk>\\<sigma> i = \\<xi>; (\\<xi>, p) \\<in> reachable A I\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by - (drule(3) reachable_oseq_seqp_sos', auto)"], ["proof (state)\nthis:\n  \\<sigma> i = \\<xi>\n  (\\<xi>, p) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p a \\<xi>' p'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> seqll i P ((\\<xi>, p), a, \\<xi>', p')", "from otr and spo"], ["proof (chain)\npicking this:\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans OA\n  automaton.trans OA = oseqp_sos \\<Gamma> i", "have \"((\\<sigma>, p), a, (\\<sigma>', p')) \\<in> oseqp_sos \\<Gamma> i\""], ["proof (prove)\nusing this:\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> automaton.trans OA\n  automaton.trans OA = oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i", "by simp"], ["proof (state)\nthis:\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p a \\<xi>' p'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> seqll i P ((\\<xi>, p), a, \\<xi>', p')", "with \\<open>\\<sigma> i = \\<xi>\\<close>"], ["proof (chain)\npicking this:\n  \\<sigma> i = \\<xi>\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i", "obtain \\<xi>' where \"\\<sigma>' i = \\<xi>'\"\n                                 and ctr: \"((\\<xi>, p), a, (\\<xi>', p')) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\nusing this:\n  \\<sigma> i = \\<xi>\n  ((\\<sigma>, p), a, \\<sigma>', p') \\<in> oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. (\\<And>\\<xi>'.\n        \\<lbrakk>\\<sigma>' i = \\<xi>';\n         ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest!: oseq_step_is_seq_step)"], ["proof (state)\nthis:\n  \\<sigma>' i = \\<xi>'\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p a \\<xi>' p'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> seqll i P ((\\<xi>, p), a, \\<xi>', p')", "with sp"], ["proof (chain)\npicking this:\n  automaton.trans A = seqp_sos \\<Gamma>\n  \\<sigma>' i = \\<xi>'\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>", "have \"((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A\""], ["proof (prove)\nusing this:\n  automaton.trans A = seqp_sos \\<Gamma>\n  \\<sigma>' i = \\<xi>'\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A", "by simp"], ["proof (state)\nthis:\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p a \\<xi>' p'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> seqll i P ((\\<xi>, p), a, \\<xi>', p')", "with \\<open>A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P\\<close> cr"], ["proof (chain)\npicking this:\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A", "have \"P ((\\<xi>, p), a, (\\<xi>', p'))\""], ["proof (prove)\nusing this:\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n\ngoal (1 subgoal):\n 1. P ((\\<xi>, p), a, \\<xi>', p')", "using \\<open>I a\\<close>"], ["proof (prove)\nusing this:\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) P\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. P ((\\<xi>, p), a, \\<xi>', p')", ".."], ["proof (state)\nthis:\n  P ((\\<xi>, p), a, \\<xi>', p')\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p a \\<xi>' p'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> seqll i P ((\\<xi>, p), a, \\<xi>', p')", "with \\<open>\\<sigma> i = \\<xi>\\<close> and \\<open>\\<sigma>' i = \\<xi>'\\<close>"], ["proof (chain)\npicking this:\n  \\<sigma> i = \\<xi>\n  \\<sigma>' i = \\<xi>'\n  P ((\\<xi>, p), a, \\<xi>', p')", "have \"P ((\\<sigma> i, p), a, (\\<sigma>' i, p'))\""], ["proof (prove)\nusing this:\n  \\<sigma> i = \\<xi>\n  \\<sigma>' i = \\<xi>'\n  P ((\\<xi>, p), a, \\<xi>', p')\n\ngoal (1 subgoal):\n 1. P ((\\<sigma> i, p), a, \\<sigma>' i, p')", "by simp"], ["proof (state)\nthis:\n  P ((\\<sigma> i, p), a, \\<sigma>' i, p')\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p a \\<xi>' p'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable OA I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans OA; I a\\<rbrakk>\n       \\<Longrightarrow> seqll i P ((\\<xi>, p), a, \\<xi>', p')", "thus \"seqll i P ((\\<sigma>, p), a, (\\<sigma>', p'))\""], ["proof (prove)\nusing this:\n  P ((\\<sigma> i, p), a, \\<sigma>' i, p')\n\ngoal (1 subgoal):\n 1. seqll i P ((\\<sigma>, p), a, \\<sigma>', p')", ".."], ["proof (state)\nthis:\n  seqll i P ((\\<sigma>, p), a, \\<sigma>', p')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  OA \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) seqll i P\n\ngoal (1 subgoal):\n 1. OA \\<Turnstile>\\<^sub>A (act I, other ANY {i} \\<rightarrow>) seqll i P", "moreover"], ["proof (state)\nthis:\n  OA \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) seqll i P\n\ngoal (1 subgoal):\n 1. OA \\<Turnstile>\\<^sub>A (act I, other ANY {i} \\<rightarrow>) seqll i P", "from spo"], ["proof (chain)\npicking this:\n  automaton.trans OA = oseqp_sos \\<Gamma> i", "have \"local_steps (trans OA) {i}\""], ["proof (prove)\nusing this:\n  automaton.trans OA = oseqp_sos \\<Gamma> i\n\ngoal (1 subgoal):\n 1. local_steps (automaton.trans OA) {i}", "by simp"], ["proof (state)\nthis:\n  local_steps (automaton.trans OA) {i}\n\ngoal (1 subgoal):\n 1. OA \\<Turnstile>\\<^sub>A (act I, other ANY {i} \\<rightarrow>) seqll i P", "moreover"], ["proof (state)\nthis:\n  local_steps (automaton.trans OA) {i}\n\ngoal (1 subgoal):\n 1. OA \\<Turnstile>\\<^sub>A (act I, other ANY {i} \\<rightarrow>) seqll i P", "have \"other_steps (other ANY {i}) {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. other_steps (other ANY {i}) {i}", ".."], ["proof (state)\nthis:\n  other_steps (other ANY {i}) {i}\n\ngoal (1 subgoal):\n 1. OA \\<Turnstile>\\<^sub>A (act I, other ANY {i} \\<rightarrow>) seqll i P", "ultimately"], ["proof (chain)\npicking this:\n  OA \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) seqll i P\n  local_steps (automaton.trans OA) {i}\n  other_steps (other ANY {i}) {i}", "show ?thesis"], ["proof (prove)\nusing this:\n  OA \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) seqll i P\n  local_steps (automaton.trans OA) {i}\n  other_steps (other ANY {i}) {i}\n\ngoal (1 subgoal):\n 1. OA \\<Turnstile>\\<^sub>A (act I, other ANY {i} \\<rightarrow>) seqll i P", "proof (rule open_closed_step_invariant)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<zeta> a \\<sigma>' \\<zeta>' s s'.\n       \\<lbrakk>\\<forall>j\\<in>{i}. \\<sigma> j = \\<zeta> j;\n        \\<forall>j\\<in>{i}. \\<sigma>' j = \\<zeta>' j;\n        seqll i P ((\\<sigma>, s), a, \\<sigma>', s')\\<rbrakk>\n       \\<Longrightarrow> seqll i P ((\\<zeta>, s), a, \\<zeta>', s')", "fix \\<sigma> \\<zeta> a \\<sigma>' \\<zeta>' s s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<zeta> a \\<sigma>' \\<zeta>' s s'.\n       \\<lbrakk>\\<forall>j\\<in>{i}. \\<sigma> j = \\<zeta> j;\n        \\<forall>j\\<in>{i}. \\<sigma>' j = \\<zeta>' j;\n        seqll i P ((\\<sigma>, s), a, \\<sigma>', s')\\<rbrakk>\n       \\<Longrightarrow> seqll i P ((\\<zeta>, s), a, \\<zeta>', s')", "assume \"\\<forall>j\\<in>{i}. \\<sigma> j = \\<zeta> j\"\n         and \"\\<forall>j\\<in>{i}. \\<sigma>' j = \\<zeta>' j\"\n         and \"seqll i P ((\\<sigma>, s), a, (\\<sigma>', s'))\""], ["proof (state)\nthis:\n  \\<forall>j\\<in>{i}. \\<sigma> j = \\<zeta> j\n  \\<forall>j\\<in>{i}. \\<sigma>' j = \\<zeta>' j\n  seqll i P ((\\<sigma>, s), a, \\<sigma>', s')\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<zeta> a \\<sigma>' \\<zeta>' s s'.\n       \\<lbrakk>\\<forall>j\\<in>{i}. \\<sigma> j = \\<zeta> j;\n        \\<forall>j\\<in>{i}. \\<sigma>' j = \\<zeta>' j;\n        seqll i P ((\\<sigma>, s), a, \\<sigma>', s')\\<rbrakk>\n       \\<Longrightarrow> seqll i P ((\\<zeta>, s), a, \\<zeta>', s')", "thus \"seqll i P ((\\<zeta>, s), a, (\\<zeta>', s'))\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>{i}. \\<sigma> j = \\<zeta> j\n  \\<forall>j\\<in>{i}. \\<sigma>' j = \\<zeta>' j\n  seqll i P ((\\<sigma>, s), a, \\<sigma>', s')\n\ngoal (1 subgoal):\n 1. seqll i P ((\\<zeta>, s), a, \\<zeta>', s')", ".."], ["proof (state)\nthis:\n  seqll i P ((\\<zeta>, s), a, \\<zeta>', s')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  OA \\<Turnstile>\\<^sub>A (act I, other ANY {i} \\<rightarrow>) seqll i P\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}