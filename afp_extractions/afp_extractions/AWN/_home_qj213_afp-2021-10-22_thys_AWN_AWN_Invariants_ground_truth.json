{"file_name": "/home/qj213/afp-2021-10-22/thys/AWN/AWN_Invariants.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/AWN", "problem_names": ["lemma control_withinI [intro]:\n  assumes \"\\<And>p. p \\<in> Range \\<sigma> \\<Longrightarrow> \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\"\n    shows \"control_within \\<Gamma> \\<sigma>\"", "lemma control_withinD [dest]:\n  assumes \"control_within \\<Gamma> \\<sigma>\"\n      and \"(\\<xi>, p) \\<in> \\<sigma>\"\n    shows \"\\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\"", "lemma control_within_topI [intro]:\n  assumes \"\\<And>p. p \\<in> Range \\<sigma> \\<Longrightarrow> \\<exists>pn. p = \\<Gamma> pn\"\n    shows \"control_within \\<Gamma> \\<sigma>\"", "lemma seqp_sos_subterms:\n  assumes \"wellformed \\<Gamma>\"\n      and \"\\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\"\n      and \"((\\<xi>, p), a, (\\<xi>', p')) \\<in> seqp_sos \\<Gamma>\"\n    shows \"\\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\"", "lemma reachable_subterms:\n  assumes \"wellformed \\<Gamma>\"\n      and \"control_within \\<Gamma> (init A)\"\n      and \"trans A = seqp_sos \\<Gamma>\"\n      and \"(\\<xi>, p) \\<in> reachable A I\"\n    shows \"\\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\"", "lemma onlI [intro]:\n  assumes \"\\<And>l. l\\<in>labels \\<Gamma> p \\<Longrightarrow> P (\\<xi>, l)\"\n    shows \"onl \\<Gamma> P (\\<xi>, p)\"", "lemmas onlI' [intro] = onlI [simplified atomize_ball]", "lemma onlD [dest]:\n  assumes \"onl \\<Gamma> P (\\<xi>, p)\"\n    shows \"\\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)\"", "lemma onl_invariantI [intro]:\n  assumes init: \"\\<And>\\<xi> p l. \\<lbrakk> (\\<xi>, p) \\<in> init A; l \\<in> labels \\<Gamma> p \\<rbrakk> \\<Longrightarrow> P (\\<xi>, l)\"\n      and step: \"\\<And>\\<xi> p a \\<xi>' p' l'.\n                   \\<lbrakk> (\\<xi>, p) \\<in> reachable A I;\n                     \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l);\n                     ((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A;\n                     l' \\<in> labels \\<Gamma> p';\n                     I a \\<rbrakk> \\<Longrightarrow> P (\\<xi>', l')\"\n    shows \"A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\"", "lemma onl_invariantD [dest]:\n  assumes \"A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\"\n      and \"(\\<xi>, p) \\<in> reachable A I\"\n      and \"l \\<in> labels \\<Gamma> p\"\n    shows \"P (\\<xi>, l)\"", "lemma onl_invariant_initD [dest]:\n  assumes invP: \"A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\"\n      and init: \"(\\<xi>, p) \\<in> init A\"\n      and pnl:  \"l \\<in> labels \\<Gamma> p\"\n    shows \"P (\\<xi>, l)\"", "lemma onl_invariant_sterms:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and il: \"A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\"\n      and rp: \"(\\<xi>, p) \\<in> reachable A I\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n      and \"l\\<in>labels \\<Gamma> p'\"\n    shows \"P (\\<xi>, l)\"", "lemma onl_invariant_sterms_weaken:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and il: \"A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\"\n      and rp: \"(\\<xi>, p) \\<in> reachable A I'\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n      and \"l\\<in>labels \\<Gamma> p'\"\n      and weaken: \"\\<And>a. I' a \\<Longrightarrow> I a\"\n    shows \"P (\\<xi>, l)\"", "lemma onl_invariant_sterms_TT:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and il: \"A \\<TTurnstile> onl \\<Gamma> P\"\n      and rp: \"(\\<xi>, p) \\<in> reachable A I\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n      and \"l\\<in>labels \\<Gamma> p'\"\n    shows \"P (\\<xi>, l)\"", "lemma trans_from_sterms:\n  assumes \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\"\n      and \"wellformed \\<Gamma>\"\n    shows \"\\<exists>p'\\<in>sterms \\<Gamma> p. ((\\<xi>, p'), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\"", "lemma trans_from_sterms':\n  assumes \"((\\<xi>, p'), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\"\n      and \"wellformed \\<Gamma>\"\n      and \"p' \\<in> sterms \\<Gamma> p\"\n    shows \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\"", "lemma trans_to_dterms:\n  assumes \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\"\n      and \"wellformed \\<Gamma>\"\n   shows \"\\<forall>r\\<in>sterms \\<Gamma> q. r \\<in> dterms \\<Gamma> p\"", "theorem cterms_includes_sterms_of_seq_reachable:\n  assumes \"wellformed \\<Gamma>\"\n      and \"control_within \\<Gamma> (init A)\"\n      and \"trans A = seqp_sos \\<Gamma>\"\n    shows \"\\<Union>(sterms \\<Gamma> ` snd ` reachable A I) \\<subseteq> cterms \\<Gamma>\"", "lemma seq_invariant_ctermI:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and cw: \"control_within \\<Gamma> (init A)\"\n      and sl: \"simple_labels \\<Gamma>\"\n      and sp: \"trans A = seqp_sos \\<Gamma>\"\n      and init: \"\\<And>\\<xi> p l. \\<lbrakk>\n                   (\\<xi>, p) \\<in> init A;\n                   l\\<in>labels \\<Gamma> p\n                 \\<rbrakk> \\<Longrightarrow> P (\\<xi>, l)\"\n      and step: \"\\<And>p l \\<xi> a q l' \\<xi>' pp. \\<lbrakk>\n                 p\\<in>cterms \\<Gamma>;\n                 l\\<in>labels \\<Gamma> p;\n                 P (\\<xi>, l);\n                 ((\\<xi>, p), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>;\n                 ((\\<xi>, p), a, (\\<xi>', q)) \\<in> trans A;\n                 l'\\<in>labels \\<Gamma> q;\n                 (\\<xi>, pp)\\<in>reachable A I;\n                 p\\<in>sterms \\<Gamma> pp;\n                 (\\<xi>', q)\\<in>reachable A I;\n                 I a\n               \\<rbrakk> \\<Longrightarrow> P (\\<xi>', l')\"\n    shows \"A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\"", "lemma seq_invariant_ctermsI:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and \"control_within \\<Gamma> (init A)\"\n      and \"simple_labels \\<Gamma>\"\n      and \"trans A = seqp_sos \\<Gamma>\"\n      and init: \"\\<And>\\<xi> p l. \\<lbrakk>\n                   (\\<xi>, p) \\<in> init A;\n                   l\\<in>labels \\<Gamma> p\n                 \\<rbrakk> \\<Longrightarrow> P (\\<xi>, l)\"\n      and step: \"\\<And>p l \\<xi> a q l' \\<xi>' pp pn. \\<lbrakk>\n                 wellformed \\<Gamma>;\n                 p\\<in>ctermsl (\\<Gamma> pn);\n                 not_call p;\n                 l\\<in>labels \\<Gamma> p;\n                 P (\\<xi>, l);\n                 ((\\<xi>, p), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>;\n                 ((\\<xi>, p), a, (\\<xi>', q)) \\<in> trans A;\n                 l'\\<in>labels \\<Gamma> q;\n                 (\\<xi>, pp)\\<in>reachable A I;\n                 p\\<in>sterms \\<Gamma> pp;\n                 (\\<xi>', q)\\<in>reachable A I;\n                 I a\n               \\<rbrakk> \\<Longrightarrow> P (\\<xi>', l')\"\n    shows \"A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\"", "lemma onllI [intro]:\n  assumes \"\\<And>l l'. \\<lbrakk> l\\<in>labels \\<Gamma> p; l'\\<in>labels \\<Gamma> p' \\<rbrakk> \\<Longrightarrow> P ((\\<xi>, l), a, (\\<xi>', l'))\"\n    shows \"onll \\<Gamma> P ((\\<xi>, p), a, (\\<xi>', p'))\"", "lemma onllIl [intro]:\n  assumes \"\\<forall>l\\<in>labels \\<Gamma> p. \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, (\\<xi>', l'))\"\n    shows \"onll \\<Gamma> P ((\\<xi>, p), a, (\\<xi>', p'))\"", "lemma onllD [dest]:\n  assumes \"onll \\<Gamma> P ((\\<xi>, p), a, (\\<xi>', p'))\"\n    shows \"\\<forall>l\\<in>labels \\<Gamma> p. \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, (\\<xi>', l'))\"", "lemma onl_weaken [elim!]: \"\\<And>\\<Gamma> P Q s. \\<lbrakk> onl \\<Gamma> P s; \\<And>s. P s \\<Longrightarrow> Q s \\<rbrakk> \\<Longrightarrow> onl \\<Gamma> Q s\"", "lemma onll_weaken [elim!]: \"\\<And>\\<Gamma> P Q s. \\<lbrakk> onll \\<Gamma> P s; \\<And>s. P s \\<Longrightarrow> Q s \\<rbrakk> \\<Longrightarrow> onll \\<Gamma> Q s\"", "lemma onll_weaken' [elim!]: \"\\<And>\\<Gamma> P Q s. \\<lbrakk> onll \\<Gamma> P ((\\<xi>, p), a, (\\<xi>', p'));\n                                        \\<And>l l'. P ((\\<xi>, l), a, (\\<xi>', l')) \\<Longrightarrow> Q ((\\<xi>, l), a, (\\<xi>', l')) \\<rbrakk>\n                                      \\<Longrightarrow> onll \\<Gamma> Q ((\\<xi>, p), a, (\\<xi>', p'))\"", "lemma onll_step_invariantI [intro]:\n  assumes *: \"\\<And>\\<xi> p l a \\<xi>' p' l'. \\<lbrakk> (\\<xi>, p)\\<in>reachable A I;\n                                   ((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A;\n                                   I a;\n                                   l \\<in>labels \\<Gamma> p;\n                                   l'\\<in>labels \\<Gamma> p' \\<rbrakk>\n                                 \\<Longrightarrow> P ((\\<xi>, l), a, (\\<xi>', l'))\"\n    shows \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\"", "lemma onll_step_invariantE [elim]:\n  assumes \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\"\n      and \"(\\<xi>, p) \\<in> reachable A I\"\n      and \"((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A\"\n      and \"I a\"\n      and lp:  \"l \\<in>labels \\<Gamma> p\"\n      and lp': \"l'\\<in>labels \\<Gamma> p'\"\n    shows \"P ((\\<xi>, l), a, (\\<xi>', l'))\"", "lemma onll_step_invariantD [dest]:\n  assumes \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\"\n      and \"(\\<xi>, p) \\<in> reachable A I\"\n      and \"((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A\"\n      and \"I a\"\n    shows \"\\<forall>l\\<in>labels \\<Gamma> p. \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, (\\<xi>', l'))\"", "lemma onll_step_to_invariantI [intro]:\n  assumes sinv: \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> Q\"\n      and wf: \"wellformed \\<Gamma>\"\n      and init: \"\\<And>\\<xi> l p. \\<lbrakk> (\\<xi>, p) \\<in> init A; l\\<in>labels \\<Gamma> p \\<rbrakk> \\<Longrightarrow> P (\\<xi>, l)\"\n      and step: \"\\<And>\\<xi> p l \\<xi>' l' a.\n                   \\<lbrakk> (\\<xi>, p) \\<in> reachable A I;\n                     l\\<in>labels \\<Gamma> p;\n                     P (\\<xi>, l);\n                     Q ((\\<xi>, l), a, (\\<xi>', l'));\n                     I a\\<rbrakk> \\<Longrightarrow> P (\\<xi>', l')\"\n    shows \"A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\"", "lemma onll_step_invariant_sterms:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and si: \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\"\n      and sr: \"(\\<xi>, p) \\<in> reachable A I\"\n      and sos: \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> trans A\"\n      and \"I a\"\n      and \"l'\\<in>labels \\<Gamma> q\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n      and \"l\\<in>labels \\<Gamma> p'\"\n    shows \"P ((\\<xi>, l), a, (\\<xi>', l'))\"", "lemma seq_step_invariant_sterms:\n  assumes inv: \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\"\n      and wf: \"wellformed \\<Gamma>\"\n      and sp: \"trans A = seqp_sos \\<Gamma>\"\n      and \"l'\\<in>labels \\<Gamma> q\"\n      and sr: \"(\\<xi>, p) \\<in> reachable A I\"\n      and tr: \"((\\<xi>, p'), a, (\\<xi>', q)) \\<in> trans A\"\n      and \"I a\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n    shows \"\\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, (\\<xi>', l'))\"", "lemma seq_step_invariant_sterms_weaken:\n  assumes \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\"\n      and \"wellformed \\<Gamma>\"\n      and \"trans A = seqp_sos \\<Gamma>\"\n      and \"l'\\<in>labels \\<Gamma> q\"\n      and \"(\\<xi>, p) \\<in> reachable A I'\"\n      and \"((\\<xi>, p'), a, (\\<xi>', q)) \\<in> trans A\"\n      and \"I' a\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n      and weaken: \"\\<And>a. I' a \\<Longrightarrow> I a\"\n    shows \"\\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, (\\<xi>', l'))\"", "lemma seq_step_invariant_sterms_TT:\n  assumes \"A \\<TTurnstile>\\<^sub>A onll \\<Gamma> P\"\n      and \"wellformed \\<Gamma>\"\n      and \"trans A = seqp_sos \\<Gamma>\"\n      and \"l'\\<in>labels \\<Gamma> q\"\n      and \"(\\<xi>, p) \\<in> reachable A I\"\n      and \"((\\<xi>, p'), a, (\\<xi>', q)) \\<in> trans A\"\n      and \"I a\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n    shows \"\\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, (\\<xi>', l'))\"", "lemma onll_step_invariant_any_sterms:\n  assumes \"wellformed \\<Gamma>\"\n      and \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\"\n      and \"(\\<xi>, p) \\<in> reachable A I\"\n      and \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> trans A\"\n      and \"I a\"\n      and \"l'\\<in>labels \\<Gamma> q\"\n    shows \"\\<forall>p'\\<in>sterms \\<Gamma> p. \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, (\\<xi>', l'))\"", "lemma seq_step_invariant_ctermI [intro]:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and cw: \"control_within \\<Gamma> (init A)\"\n      and sl: \"simple_labels \\<Gamma>\"\n      and sp: \"trans A = seqp_sos \\<Gamma>\"\n      and step: \"\\<And>p pp l \\<xi> a q l' \\<xi>'. \\<lbrakk>\n                 p\\<in>cterms \\<Gamma>;\n                 l\\<in>labels \\<Gamma> p;\n                 ((\\<xi>, p), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>;\n                 ((\\<xi>, p), a, (\\<xi>', q)) \\<in> trans A;\n                 l'\\<in>labels \\<Gamma> q;\n                 (\\<xi>, pp) \\<in> reachable A I;\n                 p\\<in>sterms \\<Gamma> pp;\n                 (\\<xi>', q) \\<in> reachable A I;\n                 I a\n               \\<rbrakk> \\<Longrightarrow> P ((\\<xi>, l), a, (\\<xi>', l'))\"\n    shows \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\"", "lemma seq_step_invariant_ctermsI [intro]:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and cw: \"control_within \\<Gamma> (init A)\"\n      and sl: \"simple_labels \\<Gamma>\"\n      and sp: \"trans A = seqp_sos \\<Gamma>\"\n      and step: \"\\<And>p l \\<xi> a q l' \\<xi>' pp pn. \\<lbrakk>\n                 wellformed \\<Gamma>;\n                 p\\<in>ctermsl (\\<Gamma> pn);\n                 not_call p;\n                 l\\<in>labels \\<Gamma> p;\n                 ((\\<xi>, p), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>;\n                 ((\\<xi>, p), a, (\\<xi>', q)) \\<in> trans A;\n                 l'\\<in>labels \\<Gamma> q;\n                 (\\<xi>, pp) \\<in> reachable A I;\n                 p\\<in>sterms \\<Gamma> pp;\n                 (\\<xi>', q) \\<in> reachable A I;\n                 I a\n               \\<rbrakk> \\<Longrightarrow> P ((\\<xi>, l), a, (\\<xi>', l'))\"\n    shows \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\""], "translations": [["", "lemma control_withinI [intro]:\n  assumes \"\\<And>p. p \\<in> Range \\<sigma> \\<Longrightarrow> \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\"\n    shows \"control_within \\<Gamma> \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. control_within \\<Gamma> \\<sigma>", "using assms"], ["proof (prove)\nusing this:\n  ?p \\<in> Range \\<sigma> \\<Longrightarrow>\n  \\<exists>pn. ?p \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. control_within \\<Gamma> \\<sigma>", "unfolding control_within_def"], ["proof (prove)\nusing this:\n  ?p \\<in> Range \\<sigma> \\<Longrightarrow>\n  \\<exists>pn. ?p \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<forall>(\\<xi>, p)\\<in>\\<sigma>.\n       \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)", "by auto"], ["", "lemma control_withinD [dest]:\n  assumes \"control_within \\<Gamma> \\<sigma>\"\n      and \"(\\<xi>, p) \\<in> \\<sigma>\"\n    shows \"\\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)", "using assms"], ["proof (prove)\nusing this:\n  control_within \\<Gamma> \\<sigma>\n  (\\<xi>, p) \\<in> \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)", "unfolding control_within_def"], ["proof (prove)\nusing this:\n  \\<forall>(\\<xi>, p)\\<in>\\<sigma>.\n     \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n  (\\<xi>, p) \\<in> \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)", "by blast"], ["", "lemma control_within_topI [intro]:\n  assumes \"\\<And>p. p \\<in> Range \\<sigma> \\<Longrightarrow> \\<exists>pn. p = \\<Gamma> pn\"\n    shows \"control_within \\<Gamma> \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. control_within \\<Gamma> \\<sigma>", "using assms"], ["proof (prove)\nusing this:\n  ?p \\<in> Range \\<sigma> \\<Longrightarrow> \\<exists>pn. ?p = \\<Gamma> pn\n\ngoal (1 subgoal):\n 1. control_within \\<Gamma> \\<sigma>", "unfolding control_within_def"], ["proof (prove)\nusing this:\n  ?p \\<in> Range \\<sigma> \\<Longrightarrow> \\<exists>pn. ?p = \\<Gamma> pn\n\ngoal (1 subgoal):\n 1. \\<forall>(\\<xi>, p)\\<in>\\<sigma>.\n       \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)", "by clarsimp (metis Range.RangeI subterms_refl)"], ["", "lemma seqp_sos_subterms:\n  assumes \"wellformed \\<Gamma>\"\n      and \"\\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\"\n      and \"((\\<xi>, p), a, (\\<xi>', p')) \\<in> seqp_sos \\<Gamma>\"\n    shows \"\\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "proof (induct p)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<lbrakk>f\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}\\<lbrakk>f\\<rbrakk>\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<langle>f\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}\\<langle>f\\<rangle>\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>l fip fmsg p q.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}unicast(fip, fmsg) .\n                    p \\<triangleright> q),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 4. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}broadcast(fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 5. \\<And>l fips fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}groupcast(fips, fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 6. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}send(fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 7. \\<And>l fdata p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}deliver(fdata) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 8. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}receive(fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<lbrakk>\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         ((\\<xi>, p1), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<lbrakk>\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         ((\\<xi>, p2), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, p1\n                 \\<oplus>\n                 p2),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         \\<lbrakk>\\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          ((\\<xi>, \\<Gamma> pn), a, \\<xi>', p')\n          \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n         \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         ((\\<xi>, call(pn)), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "fix p1 p2"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<lbrakk>f\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}\\<lbrakk>f\\<rbrakk>\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<langle>f\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}\\<langle>f\\<rangle>\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>l fip fmsg p q.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}unicast(fip, fmsg) .\n                    p \\<triangleright> q),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 4. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}broadcast(fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 5. \\<And>l fips fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}groupcast(fips, fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 6. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}send(fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 7. \\<And>l fdata p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}deliver(fdata) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 8. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}receive(fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<lbrakk>\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         ((\\<xi>, p1), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<lbrakk>\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         ((\\<xi>, p2), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, p1\n                 \\<oplus>\n                 p2),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         \\<lbrakk>\\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          ((\\<xi>, \\<Gamma> pn), a, \\<xi>', p')\n          \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n         \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         ((\\<xi>, call(pn)), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "assume IH1: \"\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                      ((\\<xi>, p1), a, (\\<xi>', p')) \\<in> seqp_sos \\<Gamma> \\<Longrightarrow>\n                      \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\"\n       and IH2: \"\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n                      ((\\<xi>, p2), a, (\\<xi>', p')) \\<in> seqp_sos \\<Gamma> \\<Longrightarrow>\n                      \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\"\n       and \"\\<exists>pn. p1 \\<oplus> p2 \\<in> subterms (\\<Gamma> pn)\"\n       and \"((\\<xi>, p1 \\<oplus> p2), a, (\\<xi>', p')) \\<in> seqp_sos \\<Gamma>\""], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n   ((\\<xi>, p1), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n  \\<lbrakk>\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n   ((\\<xi>, p2), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n  \\<exists>pn. p1\n               \\<oplus>\n               p2\n               \\<in> subterms (\\<Gamma> pn)\n  ((\\<xi>, p1\n           \\<oplus>\n           p2),\n   a, \\<xi>', p')\n  \\<in> seqp_sos \\<Gamma>\n\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<lbrakk>f\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}\\<lbrakk>f\\<rbrakk>\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<langle>f\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}\\<langle>f\\<rangle>\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>l fip fmsg p q.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}unicast(fip, fmsg) .\n                    p \\<triangleright> q),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 4. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}broadcast(fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 5. \\<And>l fips fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}groupcast(fips, fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 6. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}send(fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 7. \\<And>l fdata p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}deliver(fdata) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 8. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}receive(fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<lbrakk>\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         ((\\<xi>, p1), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<lbrakk>\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         ((\\<xi>, p2), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, p1\n                 \\<oplus>\n                 p2),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         \\<lbrakk>\\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          ((\\<xi>, \\<Gamma> pn), a, \\<xi>', p')\n          \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n         \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         ((\\<xi>, call(pn)), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "from \\<open>\\<exists>pn. p1 \\<oplus> p2 \\<in> subterms (\\<Gamma> pn)\\<close>"], ["proof (chain)\npicking this:\n  \\<exists>pn. p1\n               \\<oplus>\n               p2\n               \\<in> subterms (\\<Gamma> pn)", "obtain pn\n                                            where \"p1 \\<in> subterms (\\<Gamma> pn)\"\n                                              and \"p2 \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  \\<exists>pn. p1\n               \\<oplus>\n               p2\n               \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. (\\<And>pn.\n        \\<lbrakk>p1 \\<in> subterms (\\<Gamma> pn);\n         p2 \\<in> subterms (\\<Gamma> pn)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p1 \\<in> subterms (\\<Gamma> pn)\n  p2 \\<in> subterms (\\<Gamma> pn)\n\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<lbrakk>f\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}\\<lbrakk>f\\<rbrakk>\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<langle>f\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}\\<langle>f\\<rangle>\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>l fip fmsg p q.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}unicast(fip, fmsg) .\n                    p \\<triangleright> q),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 4. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}broadcast(fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 5. \\<And>l fips fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}groupcast(fips, fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 6. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}send(fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 7. \\<And>l fdata p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}deliver(fdata) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 8. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}receive(fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<lbrakk>\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         ((\\<xi>, p1), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<lbrakk>\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         ((\\<xi>, p2), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, p1\n                 \\<oplus>\n                 p2),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         \\<lbrakk>\\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          ((\\<xi>, \\<Gamma> pn), a, \\<xi>', p')\n          \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n         \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         ((\\<xi>, call(pn)), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "from \\<open>((\\<xi>, p1 \\<oplus> p2), a, (\\<xi>', p')) \\<in> seqp_sos \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  ((\\<xi>, p1\n           \\<oplus>\n           p2),\n   a, \\<xi>', p')\n  \\<in> seqp_sos \\<Gamma>", "have \"((\\<xi>, p1), a, (\\<xi>', p')) \\<in> seqp_sos \\<Gamma>\n            \\<or> ((\\<xi>, p2), a, (\\<xi>', p')) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\nusing this:\n  ((\\<xi>, p1\n           \\<oplus>\n           p2),\n   a, \\<xi>', p')\n  \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. ((\\<xi>, p1), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma> \\<or>\n    ((\\<xi>, p2), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>", "by auto"], ["proof (state)\nthis:\n  ((\\<xi>, p1), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma> \\<or>\n  ((\\<xi>, p2), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\n\ngoal (10 subgoals):\n 1. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<lbrakk>f\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}\\<lbrakk>f\\<rbrakk>\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<langle>f\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}\\<langle>f\\<rangle>\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>l fip fmsg p q.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}unicast(fip, fmsg) .\n                    p \\<triangleright> q),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 4. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}broadcast(fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 5. \\<And>l fips fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}groupcast(fips, fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 6. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}send(fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 7. \\<And>l fdata p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}deliver(fdata) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 8. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}receive(fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 9. \\<And>p1 p2.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<lbrakk>\\<exists>pn. p1 \\<in> subterms (\\<Gamma> pn);\n         ((\\<xi>, p1), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<lbrakk>\\<exists>pn. p2 \\<in> subterms (\\<Gamma> pn);\n         ((\\<xi>, p2), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<exists>pn. p1\n                     \\<oplus>\n                     p2\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, p1\n                 \\<oplus>\n                 p2),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 10. \\<And>pn.\n        \\<lbrakk>wellformed \\<Gamma>;\n         \\<lbrakk>\\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n          ((\\<xi>, \\<Gamma> pn), a, \\<xi>', p')\n          \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n         \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n         \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n         ((\\<xi>, call(pn)), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "thus \"\\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  ((\\<xi>, p1), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma> \\<or>\n  ((\\<xi>, p2), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ((\\<xi>, p1), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma> \\<Longrightarrow>\n    \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 2. ((\\<xi>, p2), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma> \\<Longrightarrow>\n    \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "assume \"((\\<xi>, p1), a, (\\<xi>', p')) \\<in> seqp_sos \\<Gamma>\""], ["proof (state)\nthis:\n  ((\\<xi>, p1), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\n\ngoal (2 subgoals):\n 1. ((\\<xi>, p1), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma> \\<Longrightarrow>\n    \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 2. ((\\<xi>, p2), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma> \\<Longrightarrow>\n    \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "with \\<open>p1 \\<in> subterms (\\<Gamma> pn)\\<close>"], ["proof (chain)\npicking this:\n  p1 \\<in> subterms (\\<Gamma> pn)\n  ((\\<xi>, p1), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>", "show ?thesis"], ["proof (prove)\nusing this:\n  p1 \\<in> subterms (\\<Gamma> pn)\n  ((\\<xi>, p1), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "by (auto intro: IH1)"], ["proof (state)\nthis:\n  \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. ((\\<xi>, p2), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma> \\<Longrightarrow>\n    \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<xi>, p2), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma> \\<Longrightarrow>\n    \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "assume \"((\\<xi>, p2), a, (\\<xi>', p')) \\<in> seqp_sos \\<Gamma>\""], ["proof (state)\nthis:\n  ((\\<xi>, p2), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. ((\\<xi>, p2), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma> \\<Longrightarrow>\n    \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "with \\<open>p2 \\<in> subterms (\\<Gamma> pn)\\<close>"], ["proof (chain)\npicking this:\n  p2 \\<in> subterms (\\<Gamma> pn)\n  ((\\<xi>, p2), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>", "show ?thesis"], ["proof (prove)\nusing this:\n  p2 \\<in> subterms (\\<Gamma> pn)\n  ((\\<xi>, p2), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "by (auto intro: IH2)"], ["proof (state)\nthis:\n  \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n\ngoal (9 subgoals):\n 1. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<lbrakk>f\\<rbrakk>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}\\<lbrakk>f\\<rbrakk>\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>l f p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}\\<langle>f\\<rangle>\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}\\<langle>f\\<rangle>\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 3. \\<And>l fip fmsg p q.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}unicast(fip, fmsg) .\n                        p \\<triangleright> q\n                     \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}unicast(fip, fmsg) .\n                    p \\<triangleright> q),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 4. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}broadcast(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}broadcast(fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 5. \\<And>l fips fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}groupcast(fips, fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}groupcast(fips, fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 6. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}send(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}send(fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 7. \\<And>l fdata p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}deliver(fdata) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}deliver(fdata) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 8. \\<And>l fmsg p.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<exists>pn. {l}receive(fmsg) .\n                     p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, {l}receive(fmsg) .\n          p),\n         a, \\<xi>', p')\n        \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n 9. \\<And>pn.\n       \\<lbrakk>wellformed \\<Gamma>;\n        \\<lbrakk>\\<exists>pna. \\<Gamma> pn \\<in> subterms (\\<Gamma> pna);\n         ((\\<xi>, \\<Gamma> pn), a, \\<xi>', p')\n         \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn);\n        \\<exists>pna. call(pn) \\<in> subterms (\\<Gamma> pna);\n        ((\\<xi>, call(pn)), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "qed auto"], ["", "lemma reachable_subterms:\n  assumes \"wellformed \\<Gamma>\"\n      and \"control_within \\<Gamma> (init A)\"\n      and \"trans A = seqp_sos \\<Gamma>\"\n      and \"(\\<xi>, p) \\<in> reachable A I\"\n    shows \"\\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)", "using assms(4)"], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)", "proof (induct rule: reachable_pair_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p.\n       (\\<xi>, p) \\<in> init A \\<Longrightarrow>\n       \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "fix \\<xi> p"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p.\n       (\\<xi>, p) \\<in> init A \\<Longrightarrow>\n       \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "assume \"(\\<xi>, p) \\<in> init A\""], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> init A\n\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p.\n       (\\<xi>, p) \\<in> init A \\<Longrightarrow>\n       \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n 2. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "with \\<open>control_within \\<Gamma> (init A)\\<close>"], ["proof (chain)\npicking this:\n  control_within \\<Gamma> (init A)\n  (\\<xi>, p) \\<in> init A", "show \"\\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  control_within \\<Gamma> (init A)\n  (\\<xi>, p) \\<in> init A\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)", ".."], ["proof (state)\nthis:\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "fix \\<xi> p a \\<xi>' p'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "assume \"(\\<xi>, p) \\<in> reachable A I\"\n       and \"\\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\"\n       and *: \"((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A\"\n       and \"I a\""], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> reachable A I\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "moreover"], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> reachable A I\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "from * and assms(3)"], ["proof (chain)\npicking this:\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  automaton.trans A = seqp_sos \\<Gamma>", "have \"((\\<xi>, p), a, (\\<xi>', p')) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\nusing this:\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  automaton.trans A = seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>", "by simp"], ["proof (state)\nthis:\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<exists>pn. p \\<in> subterms (\\<Gamma> pn);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<xi>, p) \\<in> reachable A I\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  I a\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>", "show \"\\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> reachable A I\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  I a\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "using \\<open>wellformed \\<Gamma>\\<close>"], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> reachable A I\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  I a\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> seqp_sos \\<Gamma>\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)", "by (auto elim: seqp_sos_subterms)"], ["proof (state)\nthis:\n  \\<exists>pn. p' \\<in> subterms (\\<Gamma> pn)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  onl :: \"('s, 'm, 'p, 'l) seqp_env\n           \\<Rightarrow> ('z \\<times> 'l \\<Rightarrow> bool)\n           \\<Rightarrow> 'z \\<times> ('s, 'm, 'p, 'l) seqp\n           \\<Rightarrow> bool\"\nwhere\n  \"onl \\<Gamma> P \\<equiv> (\\<lambda>(\\<xi>, p). \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l))\""], ["", "lemma onlI [intro]:\n  assumes \"\\<And>l. l\\<in>labels \\<Gamma> p \\<Longrightarrow> P (\\<xi>, l)\"\n    shows \"onl \\<Gamma> P (\\<xi>, p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. onl \\<Gamma> P (\\<xi>, p)", "using assms"], ["proof (prove)\nusing this:\n  ?l \\<in> labels \\<Gamma> p \\<Longrightarrow> P (\\<xi>, ?l)\n\ngoal (1 subgoal):\n 1. onl \\<Gamma> P (\\<xi>, p)", "unfolding onl_def"], ["proof (prove)\nusing this:\n  ?l \\<in> labels \\<Gamma> p \\<Longrightarrow> P (\\<xi>, ?l)\n\ngoal (1 subgoal):\n 1. case (\\<xi>, p) of\n    (\\<xi>, p) \\<Rightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)", "by simp"], ["", "lemmas onlI' [intro] = onlI [simplified atomize_ball]"], ["", "lemma onlD [dest]:\n  assumes \"onl \\<Gamma> P (\\<xi>, p)\"\n    shows \"\\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)", "using assms"], ["proof (prove)\nusing this:\n  onl \\<Gamma> P (\\<xi>, p)\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)", "unfolding onl_def"], ["proof (prove)\nusing this:\n  case (\\<xi>, p) of\n  (\\<xi>, p) \\<Rightarrow> \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)", "by simp"], ["", "lemma onl_invariantI [intro]:\n  assumes init: \"\\<And>\\<xi> p l. \\<lbrakk> (\\<xi>, p) \\<in> init A; l \\<in> labels \\<Gamma> p \\<rbrakk> \\<Longrightarrow> P (\\<xi>, l)\"\n      and step: \"\\<And>\\<xi> p a \\<xi>' p' l'.\n                   \\<lbrakk> (\\<xi>, p) \\<in> reachable A I;\n                     \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l);\n                     ((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A;\n                     l' \\<in> labels \\<Gamma> p';\n                     I a \\<rbrakk> \\<Longrightarrow> P (\\<xi>', l')\"\n    shows \"A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P", "proof (rule invariant_pairI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p.\n       (\\<xi>, p) \\<in> init A \\<Longrightarrow> onl \\<Gamma> P (\\<xi>, p)\n 2. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I; onl \\<Gamma> P (\\<xi>, p);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<xi>', p')", "fix \\<xi> p"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p.\n       (\\<xi>, p) \\<in> init A \\<Longrightarrow> onl \\<Gamma> P (\\<xi>, p)\n 2. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I; onl \\<Gamma> P (\\<xi>, p);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<xi>', p')", "assume \"(\\<xi>, p) \\<in> init A\""], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> init A\n\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p.\n       (\\<xi>, p) \\<in> init A \\<Longrightarrow> onl \\<Gamma> P (\\<xi>, p)\n 2. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I; onl \\<Gamma> P (\\<xi>, p);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<xi>', p')", "hence \"\\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)\""], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> init A\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)", "using init"], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> init A\n  \\<lbrakk>(?\\<xi>, ?p) \\<in> init A; ?l \\<in> labels \\<Gamma> ?p\\<rbrakk>\n  \\<Longrightarrow> P (?\\<xi>, ?l)\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)", "by simp"], ["proof (state)\nthis:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)\n\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p.\n       (\\<xi>, p) \\<in> init A \\<Longrightarrow> onl \\<Gamma> P (\\<xi>, p)\n 2. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I; onl \\<Gamma> P (\\<xi>, p);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<xi>', p')", "thus \"onl \\<Gamma> P (\\<xi>, p)\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)\n\ngoal (1 subgoal):\n 1. onl \\<Gamma> P (\\<xi>, p)", ".."], ["proof (state)\nthis:\n  onl \\<Gamma> P (\\<xi>, p)\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I; onl \\<Gamma> P (\\<xi>, p);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<xi>', p')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I; onl \\<Gamma> P (\\<xi>, p);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<xi>', p')", "fix \\<xi> p a \\<xi>' p'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I; onl \\<Gamma> P (\\<xi>, p);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<xi>', p')", "assume rp: \"(\\<xi>, p) \\<in> reachable A I\"\n       and \"onl \\<Gamma> P (\\<xi>, p)\"\n       and tr: \"((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A\"\n       and \"I a\""], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> reachable A I\n  onl \\<Gamma> P (\\<xi>, p)\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I; onl \\<Gamma> P (\\<xi>, p);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<xi>', p')", "from \\<open>onl \\<Gamma> P (\\<xi>, p)\\<close>"], ["proof (chain)\npicking this:\n  onl \\<Gamma> P (\\<xi>, p)", "have \"\\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)\""], ["proof (prove)\nusing this:\n  onl \\<Gamma> P (\\<xi>, p)\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)", ".."], ["proof (state)\nthis:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I; onl \\<Gamma> P (\\<xi>, p);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<xi>', p')", "with rp tr \\<open>I a\\<close>"], ["proof (chain)\npicking this:\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  I a\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)", "have \"\\<forall>l'\\<in>labels \\<Gamma> p'. P (\\<xi>', l')\""], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  I a\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)\n\ngoal (1 subgoal):\n 1. \\<forall>l'\\<in>labels \\<Gamma> p'. P (\\<xi>', l')", "by (auto elim: step)"], ["proof (state)\nthis:\n  \\<forall>l'\\<in>labels \\<Gamma> p'. P (\\<xi>', l')\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I; onl \\<Gamma> P (\\<xi>, p);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> P (\\<xi>', p')", "thus \"onl \\<Gamma> P (\\<xi>', p')\""], ["proof (prove)\nusing this:\n  \\<forall>l'\\<in>labels \\<Gamma> p'. P (\\<xi>', l')\n\ngoal (1 subgoal):\n 1. onl \\<Gamma> P (\\<xi>', p')", ".."], ["proof (state)\nthis:\n  onl \\<Gamma> P (\\<xi>', p')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma onl_invariantD [dest]:\n  assumes \"A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\"\n      and \"(\\<xi>, p) \\<in> reachable A I\"\n      and \"l \\<in> labels \\<Gamma> p\"\n    shows \"P (\\<xi>, l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", "using assms"], ["proof (prove)\nusing this:\n  A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\n  (\\<xi>, p) \\<in> reachable A I\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", "unfolding onl_def"], ["proof (prove)\nusing this:\n  A \\<TTurnstile> (I \\<rightarrow>)\n                   (\\<lambda>(\\<xi>, p).\n                       \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l))\n  (\\<xi>, p) \\<in> reachable A I\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", "by auto"], ["", "lemma onl_invariant_initD [dest]:\n  assumes invP: \"A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\"\n      and init: \"(\\<xi>, p) \\<in> init A\"\n      and pnl:  \"l \\<in> labels \\<Gamma> p\"\n    shows \"P (\\<xi>, l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", "from init"], ["proof (chain)\npicking this:\n  (\\<xi>, p) \\<in> init A", "have \"(\\<xi>, p) \\<in> reachable A I\""], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> init A\n\ngoal (1 subgoal):\n 1. (\\<xi>, p) \\<in> reachable A I", ".."], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", "with invP"], ["proof (chain)\npicking this:\n  A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\n  (\\<xi>, p) \\<in> reachable A I", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\n  (\\<xi>, p) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", "using pnl"], ["proof (prove)\nusing this:\n  A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\n  (\\<xi>, p) \\<in> reachable A I\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", ".."], ["proof (state)\nthis:\n  P (\\<xi>, l)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma onl_invariant_sterms:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and il: \"A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\"\n      and rp: \"(\\<xi>, p) \\<in> reachable A I\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n      and \"l\\<in>labels \\<Gamma> p'\"\n    shows \"P (\\<xi>, l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", "from wf \\<open>p'\\<in>sterms \\<Gamma> p\\<close> \\<open>l\\<in>labels \\<Gamma> p'\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  p' \\<in> sterms \\<Gamma> p\n  l \\<in> labels \\<Gamma> p'", "have \"l\\<in>labels \\<Gamma> p\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p' \\<in> sterms \\<Gamma> p\n  l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. l \\<in> labels \\<Gamma> p", "by (rule labels_sterms_labels)"], ["proof (state)\nthis:\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", "with il rp"], ["proof (chain)\npicking this:\n  A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\n  (\\<xi>, p) \\<in> reachable A I\n  l \\<in> labels \\<Gamma> p", "show \"P (\\<xi>, l)\""], ["proof (prove)\nusing this:\n  A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\n  (\\<xi>, p) \\<in> reachable A I\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", ".."], ["proof (state)\nthis:\n  P (\\<xi>, l)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma onl_invariant_sterms_weaken:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and il: \"A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\"\n      and rp: \"(\\<xi>, p) \\<in> reachable A I'\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n      and \"l\\<in>labels \\<Gamma> p'\"\n      and weaken: \"\\<And>a. I' a \\<Longrightarrow> I a\"\n    shows \"P (\\<xi>, l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", "from \\<open>(\\<xi>, p) \\<in> reachable A I'\\<close>"], ["proof (chain)\npicking this:\n  (\\<xi>, p) \\<in> reachable A I'", "have \"(\\<xi>, p) \\<in> reachable A I\""], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> reachable A I'\n\ngoal (1 subgoal):\n 1. (\\<xi>, p) \\<in> reachable A I", "by (rule reachable_weakenE)\n         (erule weaken)"], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", "with assms(1-2)"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\n  (\\<xi>, p) \\<in> reachable A I", "show ?thesis"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\n  (\\<xi>, p) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", "using assms(4-5)"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\n  (\\<xi>, p) \\<in> reachable A I\n  p' \\<in> sterms \\<Gamma> p\n  l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", "by (rule onl_invariant_sterms)"], ["proof (state)\nthis:\n  P (\\<xi>, l)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma onl_invariant_sterms_TT:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and il: \"A \\<TTurnstile> onl \\<Gamma> P\"\n      and rp: \"(\\<xi>, p) \\<in> reachable A I\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n      and \"l\\<in>labels \\<Gamma> p'\"\n    shows \"P (\\<xi>, l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", "using assms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  A \\<TTurnstile> onl \\<Gamma> P\n  (\\<xi>, p) \\<in> reachable A I\n  p' \\<in> sterms \\<Gamma> p\n  l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", "by (rule onl_invariant_sterms_weaken) simp"], ["", "lemma trans_from_sterms:\n  assumes \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\"\n      and \"wellformed \\<Gamma>\"\n    shows \"\\<exists>p'\\<in>sterms \\<Gamma> p. ((\\<xi>, p'), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p'\\<in>sterms \\<Gamma> p.\n       ((\\<xi>, p'), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>", "using assms"], ["proof (prove)\nusing this:\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<exists>p'\\<in>sterms \\<Gamma> p.\n       ((\\<xi>, p'), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>", "by (induction p rule: sterms_pinduct [OF \\<open>wellformed \\<Gamma>\\<close>]) auto"], ["", "lemma trans_from_sterms':\n  assumes \"((\\<xi>, p'), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\"\n      and \"wellformed \\<Gamma>\"\n      and \"p' \\<in> sterms \\<Gamma> p\"\n    shows \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>", "using assms"], ["proof (prove)\nusing this:\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n  wellformed \\<Gamma>\n  p' \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>", "by (induction p rule: sterms_pinduct [OF \\<open>wellformed \\<Gamma>\\<close>]) auto"], ["", "lemma trans_to_dterms:\n  assumes \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\"\n      and \"wellformed \\<Gamma>\"\n   shows \"\\<forall>r\\<in>sterms \\<Gamma> q. r \\<in> dterms \\<Gamma> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>sterms \\<Gamma> q. r \\<in> dterms \\<Gamma> p", "using assms"], ["proof (prove)\nusing this:\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>sterms \\<Gamma> q. r \\<in> dterms \\<Gamma> p", "by (induction q) auto"], ["", "theorem cterms_includes_sterms_of_seq_reachable:\n  assumes \"wellformed \\<Gamma>\"\n      and \"control_within \\<Gamma> (init A)\"\n      and \"trans A = seqp_sos \\<Gamma>\"\n    shows \"\\<Union>(sterms \\<Gamma> ` snd ` reachable A I) \\<subseteq> cterms \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (sterms \\<Gamma> ` snd ` reachable A I)\n    \\<subseteq> cterms \\<Gamma>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union>\n                (sterms \\<Gamma> ` snd ` reachable A I) \\<Longrightarrow>\n       x \\<in> cterms \\<Gamma>", "fix qs"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union>\n                (sterms \\<Gamma> ` snd ` reachable A I) \\<Longrightarrow>\n       x \\<in> cterms \\<Gamma>", "assume \"qs \\<in> \\<Union>(sterms \\<Gamma> ` snd ` reachable A I)\""], ["proof (state)\nthis:\n  qs \\<in> \\<Union> (sterms \\<Gamma> ` snd ` reachable A I)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union>\n                (sterms \\<Gamma> ` snd ` reachable A I) \\<Longrightarrow>\n       x \\<in> cterms \\<Gamma>", "then"], ["proof (chain)\npicking this:\n  qs \\<in> \\<Union> (sterms \\<Gamma> ` snd ` reachable A I)", "obtain \\<xi> and q where  *: \"(\\<xi>, q) \\<in> reachable A I\"\n                          and **: \"qs \\<in> sterms \\<Gamma> q\""], ["proof (prove)\nusing this:\n  qs \\<in> \\<Union> (sterms \\<Gamma> ` snd ` reachable A I)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<xi> q.\n        \\<lbrakk>(\\<xi>, q) \\<in> reachable A I;\n         qs \\<in> sterms \\<Gamma> q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<xi>, q) \\<in> reachable A I\n  qs \\<in> sterms \\<Gamma> q\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union>\n                (sterms \\<Gamma> ` snd ` reachable A I) \\<Longrightarrow>\n       x \\<in> cterms \\<Gamma>", "from *"], ["proof (chain)\npicking this:\n  (\\<xi>, q) \\<in> reachable A I", "have \"\\<And>x. x \\<in> sterms \\<Gamma> q \\<Longrightarrow> x \\<in> cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  (\\<xi>, q) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> sterms \\<Gamma> q \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "proof (induction rule: reachable_pair_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p x.\n       \\<lbrakk>(\\<xi>, p) \\<in> init A; x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 2. \\<And>\\<xi> p \\<xi>' p' a x.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "fix \\<xi> p q"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p x.\n       \\<lbrakk>(\\<xi>, p) \\<in> init A; x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 2. \\<And>\\<xi> p \\<xi>' p' a x.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "assume \"(\\<xi>, p) \\<in> init A\"\n         and \"q \\<in> sterms \\<Gamma> p\""], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> init A\n  q \\<in> sterms \\<Gamma> p\n\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p x.\n       \\<lbrakk>(\\<xi>, p) \\<in> init A; x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 2. \\<And>\\<xi> p \\<xi>' p' a x.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "from \\<open>control_within \\<Gamma> (init A)\\<close> and \\<open>(\\<xi>, p) \\<in> init A\\<close>"], ["proof (chain)\npicking this:\n  control_within \\<Gamma> (init A)\n  (\\<xi>, p) \\<in> init A", "obtain pn where \"p \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  control_within \\<Gamma> (init A)\n  (\\<xi>, p) \\<in> init A\n\ngoal (1 subgoal):\n 1. (\\<And>pn.\n        p \\<in> subterms (\\<Gamma> pn) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p \\<in> subterms (\\<Gamma> pn)\n\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p x.\n       \\<lbrakk>(\\<xi>, p) \\<in> init A; x \\<in> sterms \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>\n 2. \\<And>\\<xi> p \\<xi>' p' a x.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "with \\<open>wellformed \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  p \\<in> subterms (\\<Gamma> pn)", "show \"q \\<in> cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. q \\<in> cterms \\<Gamma>", "using \\<open>q\\<in>sterms \\<Gamma> p\\<close>"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p \\<in> subterms (\\<Gamma> pn)\n  q \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. q \\<in> cterms \\<Gamma>", "by (rule subterms_sterms_in_cterms)"], ["proof (state)\nthis:\n  q \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a x.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a x.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "fix p \\<xi> a \\<xi>' q x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a x.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "assume \"(\\<xi>, p) \\<in> reachable A I\"\n         and IH: \"\\<And>x. x \\<in> sterms \\<Gamma> p \\<Longrightarrow> x \\<in> cterms \\<Gamma>\"\n         and \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> trans A\"\n         and \"x \\<in> sterms \\<Gamma> q\""], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> reachable A I\n  ?x \\<in> sterms \\<Gamma> p \\<Longrightarrow> ?x \\<in> cterms \\<Gamma>\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  x \\<in> sterms \\<Gamma> q\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a x.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "from this(3) and \\<open>trans A = seqp_sos \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  automaton.trans A = seqp_sos \\<Gamma>", "have \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\nusing this:\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  automaton.trans A = seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>", "by simp"], ["proof (state)\nthis:\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a x.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "from this and \\<open>wellformed \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n  wellformed \\<Gamma>", "obtain ps\n        where ps: \"ps \\<in> sterms \\<Gamma> p\"\n          and step: \"((\\<xi>, ps), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\nusing this:\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n  wellformed \\<Gamma>\n\ngoal (1 subgoal):\n 1. (\\<And>ps.\n        \\<lbrakk>ps \\<in> sterms \\<Gamma> p;\n         ((\\<xi>, ps), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule trans_from_sterms [THEN bexE])"], ["proof (state)\nthis:\n  ps \\<in> sterms \\<Gamma> p\n  ((\\<xi>, ps), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a x.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "from ps"], ["proof (chain)\npicking this:\n  ps \\<in> sterms \\<Gamma> p", "have \"ps \\<in> cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  ps \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. ps \\<in> cterms \\<Gamma>", "by (rule IH)"], ["proof (state)\nthis:\n  ps \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a x.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "moreover"], ["proof (state)\nthis:\n  ps \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a x.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "from step \\<open>wellformed \\<Gamma>\\<close> \\<open>x \\<in> sterms \\<Gamma> q\\<close>"], ["proof (chain)\npicking this:\n  ((\\<xi>, ps), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n  wellformed \\<Gamma>\n  x \\<in> sterms \\<Gamma> q", "have \"x \\<in> dterms \\<Gamma> ps\""], ["proof (prove)\nusing this:\n  ((\\<xi>, ps), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n  wellformed \\<Gamma>\n  x \\<in> sterms \\<Gamma> q\n\ngoal (1 subgoal):\n 1. x \\<in> dterms \\<Gamma> ps", "by (rule trans_to_dterms [rule_format])"], ["proof (state)\nthis:\n  x \\<in> dterms \\<Gamma> ps\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a x.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<And>x.\n           x \\<in> sterms \\<Gamma> p \\<Longrightarrow>\n           x \\<in> cterms \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        x \\<in> sterms \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cterms \\<Gamma>", "ultimately"], ["proof (chain)\npicking this:\n  ps \\<in> cterms \\<Gamma>\n  x \\<in> dterms \\<Gamma> ps", "show \"x \\<in> cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  ps \\<in> cterms \\<Gamma>\n  x \\<in> dterms \\<Gamma> ps\n\ngoal (1 subgoal):\n 1. x \\<in> cterms \\<Gamma>", "by (rule ctermsDI)"], ["proof (state)\nthis:\n  x \\<in> cterms \\<Gamma>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> sterms \\<Gamma> q \\<Longrightarrow> ?x \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union>\n                (sterms \\<Gamma> ` snd ` reachable A I) \\<Longrightarrow>\n       x \\<in> cterms \\<Gamma>", "thus \"qs \\<in> cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  ?x \\<in> sterms \\<Gamma> q \\<Longrightarrow> ?x \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. qs \\<in> cterms \\<Gamma>", "using **"], ["proof (prove)\nusing this:\n  ?x \\<in> sterms \\<Gamma> q \\<Longrightarrow> ?x \\<in> cterms \\<Gamma>\n  qs \\<in> sterms \\<Gamma> q\n\ngoal (1 subgoal):\n 1. qs \\<in> cterms \\<Gamma>", "."], ["proof (state)\nthis:\n  qs \\<in> cterms \\<Gamma>\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary seq_reachable_in_cterms:\n  assumes \"wellformed \\<Gamma>\"\n      and \"control_within \\<Gamma> (init A)\"\n      and \"trans A = seqp_sos \\<Gamma>\"\n      and \"(\\<xi>, p) \\<in> reachable A I\"\n      and \"p' \\<in> sterms \\<Gamma> p\"\n    shows \"p' \\<in> cterms \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p' \\<in> cterms \\<Gamma>", "using assms(1-3)"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  control_within \\<Gamma> (init A)\n  automaton.trans A = seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. p' \\<in> cterms \\<Gamma>", "proof (rule cterms_includes_sterms_of_seq_reachable [THEN subsetD])"], ["proof (state)\ngoal (1 subgoal):\n 1. p' \\<in> \\<Union> (sterms \\<Gamma> ` snd ` reachable A ?I1)", "from assms(4-5)"], ["proof (chain)\npicking this:\n  (\\<xi>, p) \\<in> reachable A I\n  p' \\<in> sterms \\<Gamma> p", "show \"p' \\<in> \\<Union>(sterms \\<Gamma> ` snd ` reachable A I)\""], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> reachable A I\n  p' \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. p' \\<in> \\<Union> (sterms \\<Gamma> ` snd ` reachable A I)", "by (auto elim!: rev_bexI)"], ["proof (state)\nthis:\n  p' \\<in> \\<Union> (sterms \\<Gamma> ` snd ` reachable A I)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma seq_invariant_ctermI:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and cw: \"control_within \\<Gamma> (init A)\"\n      and sl: \"simple_labels \\<Gamma>\"\n      and sp: \"trans A = seqp_sos \\<Gamma>\"\n      and init: \"\\<And>\\<xi> p l. \\<lbrakk>\n                   (\\<xi>, p) \\<in> init A;\n                   l\\<in>labels \\<Gamma> p\n                 \\<rbrakk> \\<Longrightarrow> P (\\<xi>, l)\"\n      and step: \"\\<And>p l \\<xi> a q l' \\<xi>' pp. \\<lbrakk>\n                 p\\<in>cterms \\<Gamma>;\n                 l\\<in>labels \\<Gamma> p;\n                 P (\\<xi>, l);\n                 ((\\<xi>, p), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>;\n                 ((\\<xi>, p), a, (\\<xi>', q)) \\<in> trans A;\n                 l'\\<in>labels \\<Gamma> q;\n                 (\\<xi>, pp)\\<in>reachable A I;\n                 p\\<in>sterms \\<Gamma> pp;\n                 (\\<xi>', q)\\<in>reachable A I;\n                 I a\n               \\<rbrakk> \\<Longrightarrow> P (\\<xi>', l')\"\n    shows \"A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p l.\n       \\<lbrakk>(\\<xi>, p) \\<in> init A; l \\<in> labels \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>, l)\n 2. \\<And>\\<xi> p a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "fix \\<xi> p l"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p l.\n       \\<lbrakk>(\\<xi>, p) \\<in> init A; l \\<in> labels \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>, l)\n 2. \\<And>\\<xi> p a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "assume \"(\\<xi>, p) \\<in> init A\"\n       and *: \"l \\<in> labels \\<Gamma> p\""], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> init A\n  l \\<in> labels \\<Gamma> p\n\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p l.\n       \\<lbrakk>(\\<xi>, p) \\<in> init A; l \\<in> labels \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>, l)\n 2. \\<And>\\<xi> p a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "with init"], ["proof (chain)\npicking this:\n  \\<lbrakk>(?\\<xi>, ?p) \\<in> init A; ?l \\<in> labels \\<Gamma> ?p\\<rbrakk>\n  \\<Longrightarrow> P (?\\<xi>, ?l)\n  (\\<xi>, p) \\<in> init A\n  l \\<in> labels \\<Gamma> p", "show \"P (\\<xi>, l)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>(?\\<xi>, ?p) \\<in> init A; ?l \\<in> labels \\<Gamma> ?p\\<rbrakk>\n  \\<Longrightarrow> P (?\\<xi>, ?l)\n  (\\<xi>, p) \\<in> init A\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", "by auto"], ["proof (state)\nthis:\n  P (\\<xi>, l)\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "fix \\<xi> p a \\<xi>' q l'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "assume sr: \"(\\<xi>, p) \\<in> reachable A I\"\n       and pl: \"\\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)\"\n       and tr: \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> trans A\"\n       and A6: \"l' \\<in> labels \\<Gamma> q\"\n       and \"I a\""], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> reachable A I\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  l' \\<in> labels \\<Gamma> q\n  I a\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "from this(3) and \\<open>trans A = seqp_sos \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  automaton.trans A = seqp_sos \\<Gamma>", "have tr': \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\nusing this:\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  automaton.trans A = seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>", "by simp"], ["proof (state)\nthis:\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "show \"P (\\<xi>', l')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "from sr and tr and \\<open>I a\\<close>"], ["proof (chain)\npicking this:\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  I a", "have A7: \"(\\<xi>', q) \\<in> reachable A I\""], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. (\\<xi>', q) \\<in> reachable A I", ".."], ["proof (state)\nthis:\n  (\\<xi>', q) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "from tr'"], ["proof (chain)\npicking this:\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>", "obtain p' where \"p' \\<in> sterms \\<Gamma> p\"\n                           and \"((\\<xi>, p'), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\nusing this:\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. (\\<And>p'.\n        \\<lbrakk>p' \\<in> sterms \\<Gamma> p;\n         ((\\<xi>, p'), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast dest: trans_from_sterms [OF _ wf])"], ["proof (state)\nthis:\n  p' \\<in> sterms \\<Gamma> p\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "from wf cw sp sr this(1)"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  control_within \\<Gamma> (init A)\n  automaton.trans A = seqp_sos \\<Gamma>\n  (\\<xi>, p) \\<in> reachable A I\n  p' \\<in> sterms \\<Gamma> p", "have A1: \"p'\\<in>cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  control_within \\<Gamma> (init A)\n  automaton.trans A = seqp_sos \\<Gamma>\n  (\\<xi>, p) \\<in> reachable A I\n  p' \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. p' \\<in> cterms \\<Gamma>", "by (rule seq_reachable_in_cterms)"], ["proof (state)\nthis:\n  p' \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "from labels_not_empty [OF wf]"], ["proof (chain)\npicking this:\n  labels \\<Gamma> ?p \\<noteq> {}", "obtain ll where A2: \"ll\\<in>labels \\<Gamma> p'\""], ["proof (prove)\nusing this:\n  labels \\<Gamma> ?p \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>ll.\n        ll \\<in> labels \\<Gamma> p' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ll \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "with \\<open>p'\\<in>sterms \\<Gamma> p\\<close>"], ["proof (chain)\npicking this:\n  p' \\<in> sterms \\<Gamma> p\n  ll \\<in> labels \\<Gamma> p'", "have \"ll\\<in>labels \\<Gamma> p\""], ["proof (prove)\nusing this:\n  p' \\<in> sterms \\<Gamma> p\n  ll \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. ll \\<in> labels \\<Gamma> p", "by (rule labels_sterms_labels [OF wf])"], ["proof (state)\nthis:\n  ll \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "with pl"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)\n  ll \\<in> labels \\<Gamma> p", "have A3: \"P (\\<xi>, ll)\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)\n  ll \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<xi>, ll)", "by simp"], ["proof (state)\nthis:\n  P (\\<xi>, ll)\n\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "from \\<open>((\\<xi>, p'), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\\<close> and sp"], ["proof (chain)\npicking this:\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n  automaton.trans A = seqp_sos \\<Gamma>", "have A5: \"((\\<xi>, p'), a, (\\<xi>', q)) \\<in> trans A\""], ["proof (prove)\nusing this:\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n  automaton.trans A = seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. ((\\<xi>, p'), a, \\<xi>', q) \\<in> automaton.trans A", "by simp"], ["proof (state)\nthis:\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> automaton.trans A\n\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "with sp"], ["proof (chain)\npicking this:\n  automaton.trans A = seqp_sos \\<Gamma>\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> automaton.trans A", "have A4: \"((\\<xi>, p'), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\nusing this:\n  automaton.trans A = seqp_sos \\<Gamma>\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> automaton.trans A\n\ngoal (1 subgoal):\n 1. ((\\<xi>, p'), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>", "by simp"], ["proof (state)\nthis:\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "from sr \\<open>p'\\<in>sterms \\<Gamma> p\\<close>"], ["proof (chain)\npicking this:\n  (\\<xi>, p) \\<in> reachable A I\n  p' \\<in> sterms \\<Gamma> p", "obtain pp where A7: \"(\\<xi>, pp)\\<in>reachable A I\"\n                    and A8: \"p'\\<in>sterms \\<Gamma> pp\""], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> reachable A I\n  p' \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. (\\<And>pp.\n        \\<lbrakk>(\\<xi>, pp) \\<in> reachable A I;\n         p' \\<in> sterms \\<Gamma> pp\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<xi>, pp) \\<in> reachable A I\n  p' \\<in> sterms \\<Gamma> pp\n\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "from sr tr \\<open>I a\\<close>"], ["proof (chain)\npicking this:\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  I a", "have A9: \"(\\<xi>', q) \\<in> reachable A I\""], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. (\\<xi>', q) \\<in> reachable A I", ".."], ["proof (state)\nthis:\n  (\\<xi>', q) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "from A1 A2 A3 A4 A5 A6 A7 A8 A9 \\<open>I a\\<close>"], ["proof (chain)\npicking this:\n  p' \\<in> cterms \\<Gamma>\n  ll \\<in> labels \\<Gamma> p'\n  P (\\<xi>, ll)\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> automaton.trans A\n  l' \\<in> labels \\<Gamma> q\n  (\\<xi>, pp) \\<in> reachable A I\n  p' \\<in> sterms \\<Gamma> pp\n  (\\<xi>', q) \\<in> reachable A I\n  I a", "show ?thesis"], ["proof (prove)\nusing this:\n  p' \\<in> cterms \\<Gamma>\n  ll \\<in> labels \\<Gamma> p'\n  P (\\<xi>, ll)\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> automaton.trans A\n  l' \\<in> labels \\<Gamma> q\n  (\\<xi>, pp) \\<in> reachable A I\n  p' \\<in> sterms \\<Gamma> pp\n  (\\<xi>', q) \\<in> reachable A I\n  I a\n\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "by (rule step)"], ["proof (state)\nthis:\n  P (\\<xi>', l')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P (\\<xi>', l')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma seq_invariant_ctermsI:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and \"control_within \\<Gamma> (init A)\"\n      and \"simple_labels \\<Gamma>\"\n      and \"trans A = seqp_sos \\<Gamma>\"\n      and init: \"\\<And>\\<xi> p l. \\<lbrakk>\n                   (\\<xi>, p) \\<in> init A;\n                   l\\<in>labels \\<Gamma> p\n                 \\<rbrakk> \\<Longrightarrow> P (\\<xi>, l)\"\n      and step: \"\\<And>p l \\<xi> a q l' \\<xi>' pp pn. \\<lbrakk>\n                 wellformed \\<Gamma>;\n                 p\\<in>ctermsl (\\<Gamma> pn);\n                 not_call p;\n                 l\\<in>labels \\<Gamma> p;\n                 P (\\<xi>, l);\n                 ((\\<xi>, p), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>;\n                 ((\\<xi>, p), a, (\\<xi>', q)) \\<in> trans A;\n                 l'\\<in>labels \\<Gamma> q;\n                 (\\<xi>, pp)\\<in>reachable A I;\n                 p\\<in>sterms \\<Gamma> pp;\n                 (\\<xi>', q)\\<in>reachable A I;\n                 I a\n               \\<rbrakk> \\<Longrightarrow> P (\\<xi>', l')\"\n    shows \"A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P", "using assms(1-4)"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  control_within \\<Gamma> (init A)\n  simple_labels \\<Gamma>\n  automaton.trans A = seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P", "proof (rule seq_invariant_ctermI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p l.\n       \\<lbrakk>(\\<xi>, p) \\<in> init A; l \\<in> labels \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>, l)\n 2. \\<And>p l \\<xi> a q l' \\<xi>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        P (\\<xi>, l); ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<xi>, pp) \\<in> reachable A I;\n        p \\<in> sterms \\<Gamma> pp; (\\<xi>', q) \\<in> reachable A I;\n        I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "fix \\<xi> p l"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p l.\n       \\<lbrakk>(\\<xi>, p) \\<in> init A; l \\<in> labels \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>, l)\n 2. \\<And>p l \\<xi> a q l' \\<xi>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        P (\\<xi>, l); ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<xi>, pp) \\<in> reachable A I;\n        p \\<in> sterms \\<Gamma> pp; (\\<xi>', q) \\<in> reachable A I;\n        I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "assume \"(\\<xi>, p) \\<in> init A\"\n       and \"l \\<in> labels \\<Gamma> p\""], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> init A\n  l \\<in> labels \\<Gamma> p\n\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p l.\n       \\<lbrakk>(\\<xi>, p) \\<in> init A; l \\<in> labels \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>, l)\n 2. \\<And>p l \\<xi> a q l' \\<xi>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        P (\\<xi>, l); ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<xi>, pp) \\<in> reachable A I;\n        p \\<in> sterms \\<Gamma> pp; (\\<xi>', q) \\<in> reachable A I;\n        I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "thus \"P (\\<xi>, l)\""], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> init A\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", "by (rule init)"], ["proof (state)\nthis:\n  P (\\<xi>, l)\n\ngoal (1 subgoal):\n 1. \\<And>p l \\<xi> a q l' \\<xi>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        P (\\<xi>, l); ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<xi>, pp) \\<in> reachable A I;\n        p \\<in> sterms \\<Gamma> pp; (\\<xi>', q) \\<in> reachable A I;\n        I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p l \\<xi> a q l' \\<xi>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        P (\\<xi>, l); ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<xi>, pp) \\<in> reachable A I;\n        p \\<in> sterms \\<Gamma> pp; (\\<xi>', q) \\<in> reachable A I;\n        I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "fix p l \\<xi> a q l' \\<xi>' pp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p l \\<xi> a q l' \\<xi>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        P (\\<xi>, l); ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<xi>, pp) \\<in> reachable A I;\n        p \\<in> sterms \\<Gamma> pp; (\\<xi>', q) \\<in> reachable A I;\n        I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "assume \"p \\<in> cterms \\<Gamma>\"\n       and otherassms: \"l \\<in> labels \\<Gamma> p\"\n           \"P (\\<xi>, l)\"\n           \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\"\n           \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> trans A\"\n           \"l' \\<in> labels \\<Gamma> q\"\n           \"(\\<xi>, pp) \\<in> reachable A I\"\n           \"p \\<in> sterms \\<Gamma> pp\"\n           \"(\\<xi>', q) \\<in> reachable A I\"\n           \"I a\""], ["proof (state)\nthis:\n  p \\<in> cterms \\<Gamma>\n  l \\<in> labels \\<Gamma> p\n  P (\\<xi>, l)\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  l' \\<in> labels \\<Gamma> q\n  (\\<xi>, pp) \\<in> reachable A I\n  p \\<in> sterms \\<Gamma> pp\n  (\\<xi>', q) \\<in> reachable A I\n  I a\n\ngoal (1 subgoal):\n 1. \\<And>p l \\<xi> a q l' \\<xi>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        P (\\<xi>, l); ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<xi>, pp) \\<in> reachable A I;\n        p \\<in> sterms \\<Gamma> pp; (\\<xi>', q) \\<in> reachable A I;\n        I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "from this(1)"], ["proof (chain)\npicking this:\n  p \\<in> cterms \\<Gamma>", "obtain pn where \"p \\<in> ctermsl(\\<Gamma> pn)\"\n                             and \"not_call p\""], ["proof (prove)\nusing this:\n  p \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. (\\<And>pn.\n        \\<lbrakk>p \\<in> ctermsl (\\<Gamma> pn); not_call p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding cterms_def' [OF wf]"], ["proof (prove)\nusing this:\n  p \\<in> {uu_.\n           \\<exists>p pn.\n              uu_ = p \\<and>\n              p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n\ngoal (1 subgoal):\n 1. (\\<And>pn.\n        \\<lbrakk>p \\<in> ctermsl (\\<Gamma> pn); not_call p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p \\<in> ctermsl (\\<Gamma> pn)\n  not_call p\n\ngoal (1 subgoal):\n 1. \\<And>p l \\<xi> a q l' \\<xi>' pp.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        P (\\<xi>, l); ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<xi>, pp) \\<in> reachable A I;\n        p \\<in> sterms \\<Gamma> pp; (\\<xi>', q) \\<in> reachable A I;\n        I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "with wf"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  p \\<in> ctermsl (\\<Gamma> pn)\n  not_call p", "show \"P (\\<xi>', l')\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p \\<in> ctermsl (\\<Gamma> pn)\n  not_call p\n\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "using otherassms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p \\<in> ctermsl (\\<Gamma> pn)\n  not_call p\n  l \\<in> labels \\<Gamma> p\n  P (\\<xi>, l)\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  l' \\<in> labels \\<Gamma> q\n  (\\<xi>, pp) \\<in> reachable A I\n  p \\<in> sterms \\<Gamma> pp\n  (\\<xi>', q) \\<in> reachable A I\n  I a\n\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "by (rule step)"], ["proof (state)\nthis:\n  P (\\<xi>', l')\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Step invariants via labelled control terms\""], ["", "definition\n  onll :: \"('s, 'm, 'p, 'l) seqp_env\n           \\<Rightarrow> (('z \\<times> 'l, 'a) transition \\<Rightarrow> bool)\n           \\<Rightarrow> ('z \\<times> ('s, 'm, 'p, 'l) seqp, 'a) transition \\<Rightarrow> bool\"\nwhere\n  \"onll \\<Gamma> P \\<equiv> (\\<lambda>((\\<xi>, p), a, (\\<xi>', p')). \\<forall>l\\<in>labels \\<Gamma> p. \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, (\\<xi>', l')))\""], ["", "lemma onllI [intro]:\n  assumes \"\\<And>l l'. \\<lbrakk> l\\<in>labels \\<Gamma> p; l'\\<in>labels \\<Gamma> p' \\<rbrakk> \\<Longrightarrow> P ((\\<xi>, l), a, (\\<xi>', l'))\"\n    shows \"onll \\<Gamma> P ((\\<xi>, p), a, (\\<xi>', p'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. onll \\<Gamma> P ((\\<xi>, p), a, \\<xi>', p')", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?l \\<in> labels \\<Gamma> p; ?l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n  \\<Longrightarrow> P ((\\<xi>, ?l), a, \\<xi>', ?l')\n\ngoal (1 subgoal):\n 1. onll \\<Gamma> P ((\\<xi>, p), a, \\<xi>', p')", "unfolding onll_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?l \\<in> labels \\<Gamma> p; ?l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n  \\<Longrightarrow> P ((\\<xi>, ?l), a, \\<xi>', ?l')\n\ngoal (1 subgoal):\n 1. case ((\\<xi>, p), a, \\<xi>', p') of\n    (x, xa) \\<Rightarrow>\n      (case x of\n       (\\<xi>, p) \\<Rightarrow>\n         \\<lambda>(a, \\<xi>', p').\n            \\<forall>l\\<in>labels \\<Gamma> p.\n               \\<forall>l'\\<in>labels \\<Gamma> p'.\n                  P ((\\<xi>, l), a, \\<xi>', l'))\n       xa", "by simp"], ["", "lemma onllIl [intro]:\n  assumes \"\\<forall>l\\<in>labels \\<Gamma> p. \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, (\\<xi>', l'))\"\n    shows \"onll \\<Gamma> P ((\\<xi>, p), a, (\\<xi>', p'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. onll \\<Gamma> P ((\\<xi>, p), a, \\<xi>', p')", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>labels \\<Gamma> p.\n     \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, \\<xi>', l')\n\ngoal (1 subgoal):\n 1. onll \\<Gamma> P ((\\<xi>, p), a, \\<xi>', p')", "by auto"], ["", "lemma onllD [dest]:\n  assumes \"onll \\<Gamma> P ((\\<xi>, p), a, (\\<xi>', p'))\"\n    shows \"\\<forall>l\\<in>labels \\<Gamma> p. \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, (\\<xi>', l'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p.\n       \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, \\<xi>', l')", "using assms"], ["proof (prove)\nusing this:\n  onll \\<Gamma> P ((\\<xi>, p), a, \\<xi>', p')\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p.\n       \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, \\<xi>', l')", "unfolding onll_def"], ["proof (prove)\nusing this:\n  case ((\\<xi>, p), a, \\<xi>', p') of\n  (x, xa) \\<Rightarrow>\n    (case x of\n     (\\<xi>, p) \\<Rightarrow>\n       \\<lambda>(a, \\<xi>', p').\n          \\<forall>l\\<in>labels \\<Gamma> p.\n             \\<forall>l'\\<in>labels \\<Gamma> p'.\n                P ((\\<xi>, l), a, \\<xi>', l'))\n     xa\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p.\n       \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, \\<xi>', l')", "by simp"], ["", "lemma onl_weaken [elim!]: \"\\<And>\\<Gamma> P Q s. \\<lbrakk> onl \\<Gamma> P s; \\<And>s. P s \\<Longrightarrow> Q s \\<rbrakk> \\<Longrightarrow> onl \\<Gamma> Q s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P Q s.\n       \\<lbrakk>onl \\<Gamma> P s;\n        \\<And>s. P s \\<Longrightarrow> Q s\\<rbrakk>\n       \\<Longrightarrow> onl \\<Gamma> Q s", "by (clarsimp dest!: onlD intro!: onlI)"], ["", "lemma onll_weaken [elim!]: \"\\<And>\\<Gamma> P Q s. \\<lbrakk> onll \\<Gamma> P s; \\<And>s. P s \\<Longrightarrow> Q s \\<rbrakk> \\<Longrightarrow> onll \\<Gamma> Q s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P Q s.\n       \\<lbrakk>onll \\<Gamma> P s;\n        \\<And>s. P s \\<Longrightarrow> Q s\\<rbrakk>\n       \\<Longrightarrow> onll \\<Gamma> Q s", "by (clarsimp dest!: onllD intro!: onllI)"], ["", "lemma onll_weaken' [elim!]: \"\\<And>\\<Gamma> P Q s. \\<lbrakk> onll \\<Gamma> P ((\\<xi>, p), a, (\\<xi>', p'));\n                                        \\<And>l l'. P ((\\<xi>, l), a, (\\<xi>', l')) \\<Longrightarrow> Q ((\\<xi>, l), a, (\\<xi>', l')) \\<rbrakk>\n                                      \\<Longrightarrow> onll \\<Gamma> Q ((\\<xi>, p), a, (\\<xi>', p'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P Q s.\n       \\<lbrakk>onll \\<Gamma> P ((\\<xi>, p), a, \\<xi>', p');\n        \\<And>l l'.\n           P ((\\<xi>, l), a, \\<xi>', l') \\<Longrightarrow>\n           Q ((\\<xi>, l), a, \\<xi>', l')\\<rbrakk>\n       \\<Longrightarrow> onll \\<Gamma> Q ((\\<xi>, p), a, \\<xi>', p')", "by (clarsimp dest!: onllD intro!: onllI)"], ["", "lemma onll_step_invariantI [intro]:\n  assumes *: \"\\<And>\\<xi> p l a \\<xi>' p' l'. \\<lbrakk> (\\<xi>, p)\\<in>reachable A I;\n                                   ((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A;\n                                   I a;\n                                   l \\<in>labels \\<Gamma> p;\n                                   l'\\<in>labels \\<Gamma> p' \\<rbrakk>\n                                 \\<Longrightarrow> P ((\\<xi>, l), a, (\\<xi>', l'))\"\n    shows \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> onll \\<Gamma> P ((\\<xi>, p), a, \\<xi>', p')", "fix \\<xi> p \\<xi>' p' a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> onll \\<Gamma> P ((\\<xi>, p), a, \\<xi>', p')", "assume \"(\\<xi>, p) \\<in> reachable A I\"\n       and \"((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A\"\n       and \"I a\""], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> onll \\<Gamma> P ((\\<xi>, p), a, \\<xi>', p')", "hence \"\\<forall>l\\<in>labels \\<Gamma> p. \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, (\\<xi>', l'))\""], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p.\n       \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, \\<xi>', l')", "by (auto elim!: *)"], ["proof (state)\nthis:\n  \\<forall>l\\<in>labels \\<Gamma> p.\n     \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, \\<xi>', l')\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p \\<xi>' p' a.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a\\<rbrakk>\n       \\<Longrightarrow> onll \\<Gamma> P ((\\<xi>, p), a, \\<xi>', p')", "thus \"onll \\<Gamma> P ((\\<xi>, p), a, (\\<xi>', p'))\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>labels \\<Gamma> p.\n     \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, \\<xi>', l')\n\ngoal (1 subgoal):\n 1. onll \\<Gamma> P ((\\<xi>, p), a, \\<xi>', p')", ".."], ["proof (state)\nthis:\n  onll \\<Gamma> P ((\\<xi>, p), a, \\<xi>', p')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma onll_step_invariantE [elim]:\n  assumes \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\"\n      and \"(\\<xi>, p) \\<in> reachable A I\"\n      and \"((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A\"\n      and \"I a\"\n      and lp:  \"l \\<in>labels \\<Gamma> p\"\n      and lp': \"l'\\<in>labels \\<Gamma> p'\"\n    shows \"P ((\\<xi>, l), a, (\\<xi>', l'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P ((\\<xi>, l), a, \\<xi>', l')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P ((\\<xi>, l), a, \\<xi>', l')", "from assms(1-4)"], ["proof (chain)\npicking this:\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  I a", "have \"onll \\<Gamma> P ((\\<xi>, p), a, (\\<xi>', p'))\""], ["proof (prove)\nusing this:\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. onll \\<Gamma> P ((\\<xi>, p), a, \\<xi>', p')", ".."], ["proof (state)\nthis:\n  onll \\<Gamma> P ((\\<xi>, p), a, \\<xi>', p')\n\ngoal (1 subgoal):\n 1. P ((\\<xi>, l), a, \\<xi>', l')", "with lp lp'"], ["proof (chain)\npicking this:\n  l \\<in> labels \\<Gamma> p\n  l' \\<in> labels \\<Gamma> p'\n  onll \\<Gamma> P ((\\<xi>, p), a, \\<xi>', p')", "show \"P ((\\<xi>, l), a, (\\<xi>', l'))\""], ["proof (prove)\nusing this:\n  l \\<in> labels \\<Gamma> p\n  l' \\<in> labels \\<Gamma> p'\n  onll \\<Gamma> P ((\\<xi>, p), a, \\<xi>', p')\n\ngoal (1 subgoal):\n 1. P ((\\<xi>, l), a, \\<xi>', l')", "by auto"], ["proof (state)\nthis:\n  P ((\\<xi>, l), a, \\<xi>', l')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma onll_step_invariantD [dest]:\n  assumes \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\"\n      and \"(\\<xi>, p) \\<in> reachable A I\"\n      and \"((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A\"\n      and \"I a\"\n    shows \"\\<forall>l\\<in>labels \\<Gamma> p. \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, (\\<xi>', l'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p.\n       \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, \\<xi>', l')", "using assms"], ["proof (prove)\nusing this:\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p.\n       \\<forall>l'\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, \\<xi>', l')", "by auto"], ["", "lemma onll_step_to_invariantI [intro]:\n  assumes sinv: \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> Q\"\n      and wf: \"wellformed \\<Gamma>\"\n      and init: \"\\<And>\\<xi> l p. \\<lbrakk> (\\<xi>, p) \\<in> init A; l\\<in>labels \\<Gamma> p \\<rbrakk> \\<Longrightarrow> P (\\<xi>, l)\"\n      and step: \"\\<And>\\<xi> p l \\<xi>' l' a.\n                   \\<lbrakk> (\\<xi>, p) \\<in> reachable A I;\n                     l\\<in>labels \\<Gamma> p;\n                     P (\\<xi>, l);\n                     Q ((\\<xi>, l), a, (\\<xi>', l'));\n                     I a\\<rbrakk> \\<Longrightarrow> P (\\<xi>', l')\"\n    shows \"A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<TTurnstile> (I \\<rightarrow>) onl \\<Gamma> P", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p l.\n       \\<lbrakk>(\\<xi>, p) \\<in> init A; l \\<in> labels \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>, l)\n 2. \\<And>\\<xi> p a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "fix \\<xi> p l"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p l.\n       \\<lbrakk>(\\<xi>, p) \\<in> init A; l \\<in> labels \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>, l)\n 2. \\<And>\\<xi> p a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "assume \"(\\<xi>, p) \\<in> init A\" and \"l\\<in>labels \\<Gamma> p\""], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> init A\n  l \\<in> labels \\<Gamma> p\n\ngoal (2 subgoals):\n 1. \\<And>\\<xi> p l.\n       \\<lbrakk>(\\<xi>, p) \\<in> init A; l \\<in> labels \\<Gamma> p\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>, l)\n 2. \\<And>\\<xi> p a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "thus \"P (\\<xi>, l)\""], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> init A\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P (\\<xi>, l)", "by (rule init)"], ["proof (state)\nthis:\n  P (\\<xi>, l)\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "fix \\<xi> p a \\<xi>' p' l'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "assume sr: \"(\\<xi>, p) \\<in> reachable A I\"\n       and lp: \"\\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)\"\n       and tr: \"((\\<xi>, p), a, (\\<xi>', p')) \\<in> trans A\"\n       and \"I a\"\n       and lp': \"l' \\<in> labels \\<Gamma> p'\""], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> reachable A I\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  I a\n  l' \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l);\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> p'; I a\\<rbrakk>\n       \\<Longrightarrow> P (\\<xi>', l')", "show \"P (\\<xi>', l')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "from lp"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)", "obtain l where \"l\\<in>labels \\<Gamma> p\" and \"P (\\<xi>, l)\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>l \\<in> labels \\<Gamma> p; P (\\<xi>, l)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using labels_not_empty [OF wf]"], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>labels \\<Gamma> p. P (\\<xi>, l)\n  labels \\<Gamma> ?p \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>l \\<in> labels \\<Gamma> p; P (\\<xi>, l)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  l \\<in> labels \\<Gamma> p\n  P (\\<xi>, l)\n\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "from sinv sr tr \\<open>I a\\<close> this(1) lp'"], ["proof (chain)\npicking this:\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> Q\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  I a\n  l \\<in> labels \\<Gamma> p\n  l' \\<in> labels \\<Gamma> p'", "have \"Q ((\\<xi>, l), a, (\\<xi>', l'))\""], ["proof (prove)\nusing this:\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> Q\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A\n  I a\n  l \\<in> labels \\<Gamma> p\n  l' \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. Q ((\\<xi>, l), a, \\<xi>', l')", ".."], ["proof (state)\nthis:\n  Q ((\\<xi>, l), a, \\<xi>', l')\n\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "with sr \\<open>l\\<in>labels \\<Gamma> p\\<close> \\<open>P (\\<xi>, l)\\<close>"], ["proof (chain)\npicking this:\n  (\\<xi>, p) \\<in> reachable A I\n  l \\<in> labels \\<Gamma> p\n  P (\\<xi>, l)\n  Q ((\\<xi>, l), a, \\<xi>', l')", "show \"P (\\<xi>', l')\""], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> reachable A I\n  l \\<in> labels \\<Gamma> p\n  P (\\<xi>, l)\n  Q ((\\<xi>, l), a, \\<xi>', l')\n\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "using \\<open>I a\\<close>"], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> reachable A I\n  l \\<in> labels \\<Gamma> p\n  P (\\<xi>, l)\n  Q ((\\<xi>, l), a, \\<xi>', l')\n  I a\n\ngoal (1 subgoal):\n 1. P (\\<xi>', l')", "by (rule step)"], ["proof (state)\nthis:\n  P (\\<xi>', l')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P (\\<xi>', l')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma onll_step_invariant_sterms:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and si: \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\"\n      and sr: \"(\\<xi>, p) \\<in> reachable A I\"\n      and sos: \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> trans A\"\n      and \"I a\"\n      and \"l'\\<in>labels \\<Gamma> q\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n      and \"l\\<in>labels \\<Gamma> p'\"\n    shows \"P ((\\<xi>, l), a, (\\<xi>', l'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P ((\\<xi>, l), a, \\<xi>', l')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P ((\\<xi>, l), a, \\<xi>', l')", "from wf \\<open>p'\\<in>sterms \\<Gamma> p\\<close> \\<open>l\\<in>labels \\<Gamma> p'\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  p' \\<in> sterms \\<Gamma> p\n  l \\<in> labels \\<Gamma> p'", "have \"l\\<in>labels \\<Gamma> p\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p' \\<in> sterms \\<Gamma> p\n  l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. l \\<in> labels \\<Gamma> p", "by (rule labels_sterms_labels)"], ["proof (state)\nthis:\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P ((\\<xi>, l), a, \\<xi>', l')", "with si sr sos \\<open>I a\\<close>"], ["proof (chain)\npicking this:\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  I a\n  l \\<in> labels \\<Gamma> p", "show \"P ((\\<xi>, l), a, (\\<xi>', l'))\""], ["proof (prove)\nusing this:\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  I a\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. P ((\\<xi>, l), a, \\<xi>', l')", "using \\<open>l'\\<in>labels \\<Gamma> q\\<close>"], ["proof (prove)\nusing this:\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  I a\n  l \\<in> labels \\<Gamma> p\n  l' \\<in> labels \\<Gamma> q\n\ngoal (1 subgoal):\n 1. P ((\\<xi>, l), a, \\<xi>', l')", ".."], ["proof (state)\nthis:\n  P ((\\<xi>, l), a, \\<xi>', l')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma seq_step_invariant_sterms:\n  assumes inv: \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\"\n      and wf: \"wellformed \\<Gamma>\"\n      and sp: \"trans A = seqp_sos \\<Gamma>\"\n      and \"l'\\<in>labels \\<Gamma> q\"\n      and sr: \"(\\<xi>, p) \\<in> reachable A I\"\n      and tr: \"((\\<xi>, p'), a, (\\<xi>', q)) \\<in> trans A\"\n      and \"I a\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n    shows \"\\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, (\\<xi>', l'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, \\<xi>', l')", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> labels \\<Gamma> p' \\<Longrightarrow>\n       P ((\\<xi>, l), a, \\<xi>', l')", "from tr and sp"], ["proof (chain)\npicking this:\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> automaton.trans A\n  automaton.trans A = seqp_sos \\<Gamma>", "have \"((\\<xi>, p'), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\nusing this:\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> automaton.trans A\n  automaton.trans A = seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. ((\\<xi>, p'), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>", "by simp"], ["proof (state)\nthis:\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> labels \\<Gamma> p' \\<Longrightarrow>\n       P ((\\<xi>, l), a, \\<xi>', l')", "hence \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\nusing this:\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>", "using wf \\<open>p'\\<in>sterms \\<Gamma> p\\<close>"], ["proof (prove)\nusing this:\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n  wellformed \\<Gamma>\n  p' \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>", "by  (rule trans_from_sterms')"], ["proof (state)\nthis:\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> labels \\<Gamma> p' \\<Longrightarrow>\n       P ((\\<xi>, l), a, \\<xi>', l')", "with sp"], ["proof (chain)\npicking this:\n  automaton.trans A = seqp_sos \\<Gamma>\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>", "have trp: \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> trans A\""], ["proof (prove)\nusing this:\n  automaton.trans A = seqp_sos \\<Gamma>\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A", "by simp"], ["proof (state)\nthis:\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> labels \\<Gamma> p' \\<Longrightarrow>\n       P ((\\<xi>, l), a, \\<xi>', l')", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> labels \\<Gamma> p' \\<Longrightarrow>\n       P ((\\<xi>, l), a, \\<xi>', l')", "assume \"l \\<in> labels \\<Gamma> p'\""], ["proof (state)\nthis:\n  l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> labels \\<Gamma> p' \\<Longrightarrow>\n       P ((\\<xi>, l), a, \\<xi>', l')", "with wf inv sr trp \\<open>I a\\<close> \\<open>l'\\<in>labels \\<Gamma> q\\<close> \\<open>p'\\<in>sterms \\<Gamma> p\\<close>"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  I a\n  l' \\<in> labels \\<Gamma> q\n  p' \\<in> sterms \\<Gamma> p\n  l \\<in> labels \\<Gamma> p'", "show \"P ((\\<xi>, l), a, (\\<xi>', l'))\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  I a\n  l' \\<in> labels \\<Gamma> q\n  p' \\<in> sterms \\<Gamma> p\n  l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. P ((\\<xi>, l), a, \\<xi>', l')", "by (rule onll_step_invariant_sterms)"], ["proof (state)\nthis:\n  P ((\\<xi>, l), a, \\<xi>', l')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma seq_step_invariant_sterms_weaken:\n  assumes \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\"\n      and \"wellformed \\<Gamma>\"\n      and \"trans A = seqp_sos \\<Gamma>\"\n      and \"l'\\<in>labels \\<Gamma> q\"\n      and \"(\\<xi>, p) \\<in> reachable A I'\"\n      and \"((\\<xi>, p'), a, (\\<xi>', q)) \\<in> trans A\"\n      and \"I' a\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n      and weaken: \"\\<And>a. I' a \\<Longrightarrow> I a\"\n    shows \"\\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, (\\<xi>', l'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, \\<xi>', l')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, \\<xi>', l')", "from \\<open>I' a\\<close>"], ["proof (chain)\npicking this:\n  I' a", "have \"I a\""], ["proof (prove)\nusing this:\n  I' a\n\ngoal (1 subgoal):\n 1. I a", "by (rule weaken)"], ["proof (state)\nthis:\n  I a\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, \\<xi>', l')", "from \\<open>(\\<xi>, p) \\<in> reachable A I'\\<close>"], ["proof (chain)\npicking this:\n  (\\<xi>, p) \\<in> reachable A I'", "have Ir: \"(\\<xi>, p) \\<in> reachable A I\""], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> reachable A I'\n\ngoal (1 subgoal):\n 1. (\\<xi>, p) \\<in> reachable A I", "by (rule reachable_weakenE) (erule weaken)"], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, \\<xi>', l')", "with assms(1-4)"], ["proof (chain)\npicking this:\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\n  wellformed \\<Gamma>\n  automaton.trans A = seqp_sos \\<Gamma>\n  l' \\<in> labels \\<Gamma> q\n  (\\<xi>, p) \\<in> reachable A I", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\n  wellformed \\<Gamma>\n  automaton.trans A = seqp_sos \\<Gamma>\n  l' \\<in> labels \\<Gamma> q\n  (\\<xi>, p) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, \\<xi>', l')", "using \\<open>((\\<xi>, p'), a, (\\<xi>', q)) \\<in> trans A\\<close> \\<open>I a\\<close> and \\<open>p'\\<in>sterms \\<Gamma> p\\<close>"], ["proof (prove)\nusing this:\n  A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\n  wellformed \\<Gamma>\n  automaton.trans A = seqp_sos \\<Gamma>\n  l' \\<in> labels \\<Gamma> q\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> automaton.trans A\n  I a\n  p' \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, \\<xi>', l')", "by (rule seq_step_invariant_sterms)"], ["proof (state)\nthis:\n  \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, \\<xi>', l')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma seq_step_invariant_sterms_TT:\n  assumes \"A \\<TTurnstile>\\<^sub>A onll \\<Gamma> P\"\n      and \"wellformed \\<Gamma>\"\n      and \"trans A = seqp_sos \\<Gamma>\"\n      and \"l'\\<in>labels \\<Gamma> q\"\n      and \"(\\<xi>, p) \\<in> reachable A I\"\n      and \"((\\<xi>, p'), a, (\\<xi>', q)) \\<in> trans A\"\n      and \"I a\"\n      and \"p'\\<in>sterms \\<Gamma> p\"\n    shows \"\\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, (\\<xi>', l'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, \\<xi>', l')", "using assms"], ["proof (prove)\nusing this:\n  A \\<TTurnstile>\\<^sub>A onll \\<Gamma> P\n  wellformed \\<Gamma>\n  automaton.trans A = seqp_sos \\<Gamma>\n  l' \\<in> labels \\<Gamma> q\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> automaton.trans A\n  I a\n  p' \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, \\<xi>', l')", "by (rule seq_step_invariant_sterms_weaken) simp"], ["", "lemma onll_step_invariant_any_sterms:\n  assumes \"wellformed \\<Gamma>\"\n      and \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\"\n      and \"(\\<xi>, p) \\<in> reachable A I\"\n      and \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> trans A\"\n      and \"I a\"\n      and \"l'\\<in>labels \\<Gamma> q\"\n    shows \"\\<forall>p'\\<in>sterms \\<Gamma> p. \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, (\\<xi>', l'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p'\\<in>sterms \\<Gamma> p.\n       \\<forall>l\\<in>labels \\<Gamma> p'. P ((\\<xi>, l), a, \\<xi>', l')", "by (intro ballI) (rule onll_step_invariant_sterms [OF assms])"], ["", "lemma seq_step_invariant_ctermI [intro]:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and cw: \"control_within \\<Gamma> (init A)\"\n      and sl: \"simple_labels \\<Gamma>\"\n      and sp: \"trans A = seqp_sos \\<Gamma>\"\n      and step: \"\\<And>p pp l \\<xi> a q l' \\<xi>'. \\<lbrakk>\n                 p\\<in>cterms \\<Gamma>;\n                 l\\<in>labels \\<Gamma> p;\n                 ((\\<xi>, p), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>;\n                 ((\\<xi>, p), a, (\\<xi>', q)) \\<in> trans A;\n                 l'\\<in>labels \\<Gamma> q;\n                 (\\<xi>, pp) \\<in> reachable A I;\n                 p\\<in>sterms \\<Gamma> pp;\n                 (\\<xi>', q) \\<in> reachable A I;\n                 I a\n               \\<rbrakk> \\<Longrightarrow> P ((\\<xi>, l), a, (\\<xi>', l'))\"\n    shows \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p l a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        l \\<in> labels \\<Gamma> p; l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<xi>, l), a, \\<xi>', l')", "fix \\<xi> p l a \\<xi>' q l'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p l a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        l \\<in> labels \\<Gamma> p; l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<xi>, l), a, \\<xi>', l')", "assume sr: \"(\\<xi>, p) \\<in> reachable A I\"\n       and tr: \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> trans A\"\n       and \"I a\"\n       and pl: \"l \\<in> labels \\<Gamma> p\"\n       and A5: \"l' \\<in> labels \\<Gamma> q\""], ["proof (state)\nthis:\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  I a\n  l \\<in> labels \\<Gamma> p\n  l' \\<in> labels \\<Gamma> q\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p l a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        l \\<in> labels \\<Gamma> p; l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<xi>, l), a, \\<xi>', l')", "from this(2) and sp"], ["proof (chain)\npicking this:\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  automaton.trans A = seqp_sos \\<Gamma>", "have tr': \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\nusing this:\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  automaton.trans A = seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>", "by simp"], ["proof (state)\nthis:\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p l a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        l \\<in> labels \\<Gamma> p; l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<xi>, l), a, \\<xi>', l')", "then"], ["proof (chain)\npicking this:\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>", "obtain p' where \"p' \\<in> sterms \\<Gamma> p\"\n                     and A3: \"((\\<xi>, p'), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\""], ["proof (prove)\nusing this:\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. (\\<And>p'.\n        \\<lbrakk>p' \\<in> sterms \\<Gamma> p;\n         ((\\<xi>, p'), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast dest: trans_from_sterms [OF _ wf])"], ["proof (state)\nthis:\n  p' \\<in> sterms \\<Gamma> p\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p l a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        l \\<in> labels \\<Gamma> p; l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<xi>, l), a, \\<xi>', l')", "from wf cw sp sr this(1)"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  control_within \\<Gamma> (init A)\n  automaton.trans A = seqp_sos \\<Gamma>\n  (\\<xi>, p) \\<in> reachable A I\n  p' \\<in> sterms \\<Gamma> p", "have A1: \"p'\\<in>cterms \\<Gamma>\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  control_within \\<Gamma> (init A)\n  automaton.trans A = seqp_sos \\<Gamma>\n  (\\<xi>, p) \\<in> reachable A I\n  p' \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. p' \\<in> cterms \\<Gamma>", "by (rule seq_reachable_in_cterms)"], ["proof (state)\nthis:\n  p' \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p l a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        l \\<in> labels \\<Gamma> p; l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<xi>, l), a, \\<xi>', l')", "from \\<open>((\\<xi>, p'), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\\<close> and sp"], ["proof (chain)\npicking this:\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n  automaton.trans A = seqp_sos \\<Gamma>", "have A4: \"((\\<xi>, p'), a, (\\<xi>', q)) \\<in> trans A\""], ["proof (prove)\nusing this:\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n  automaton.trans A = seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. ((\\<xi>, p'), a, \\<xi>', q) \\<in> automaton.trans A", "by simp"], ["proof (state)\nthis:\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> automaton.trans A\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p l a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        l \\<in> labels \\<Gamma> p; l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<xi>, l), a, \\<xi>', l')", "from sr \\<open>p'\\<in>sterms \\<Gamma> p\\<close>"], ["proof (chain)\npicking this:\n  (\\<xi>, p) \\<in> reachable A I\n  p' \\<in> sterms \\<Gamma> p", "obtain pp where A6: \"(\\<xi>, pp)\\<in>reachable A I\"\n                                        and A7: \"p'\\<in>sterms \\<Gamma> pp\""], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> reachable A I\n  p' \\<in> sterms \\<Gamma> p\n\ngoal (1 subgoal):\n 1. (\\<And>pp.\n        \\<lbrakk>(\\<xi>, pp) \\<in> reachable A I;\n         p' \\<in> sterms \\<Gamma> pp\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<xi>, pp) \\<in> reachable A I\n  p' \\<in> sterms \\<Gamma> pp\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p l a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        l \\<in> labels \\<Gamma> p; l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<xi>, l), a, \\<xi>', l')", "from sr tr \\<open>I a\\<close>"], ["proof (chain)\npicking this:\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  I a", "have A8: \"(\\<xi>', q)\\<in>reachable A I\""], ["proof (prove)\nusing this:\n  (\\<xi>, p) \\<in> reachable A I\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  I a\n\ngoal (1 subgoal):\n 1. (\\<xi>', q) \\<in> reachable A I", ".."], ["proof (state)\nthis:\n  (\\<xi>', q) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p l a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        l \\<in> labels \\<Gamma> p; l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<xi>, l), a, \\<xi>', l')", "from wf cw sp sr"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  control_within \\<Gamma> (init A)\n  automaton.trans A = seqp_sos \\<Gamma>\n  (\\<xi>, p) \\<in> reachable A I", "have \"\\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  control_within \\<Gamma> (init A)\n  automaton.trans A = seqp_sos \\<Gamma>\n  (\\<xi>, p) \\<in> reachable A I\n\ngoal (1 subgoal):\n 1. \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)", "by (rule reachable_subterms)"], ["proof (state)\nthis:\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p l a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        l \\<in> labels \\<Gamma> p; l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<xi>, l), a, \\<xi>', l')", "with sl wf"], ["proof (chain)\npicking this:\n  simple_labels \\<Gamma>\n  wellformed \\<Gamma>\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)", "have \"\\<forall>p'\\<in>sterms \\<Gamma> p. l \\<in> labels \\<Gamma> p'\""], ["proof (prove)\nusing this:\n  simple_labels \\<Gamma>\n  wellformed \\<Gamma>\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n\ngoal (1 subgoal):\n 1. \\<forall>p'\\<in>sterms \\<Gamma> p. l \\<in> labels \\<Gamma> p'", "using pl"], ["proof (prove)\nusing this:\n  simple_labels \\<Gamma>\n  wellformed \\<Gamma>\n  \\<exists>pn. p \\<in> subterms (\\<Gamma> pn)\n  l \\<in> labels \\<Gamma> p\n\ngoal (1 subgoal):\n 1. \\<forall>p'\\<in>sterms \\<Gamma> p. l \\<in> labels \\<Gamma> p'", "by (rule simple_labels_in_sterms)"], ["proof (state)\nthis:\n  \\<forall>p'\\<in>sterms \\<Gamma> p. l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p l a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        l \\<in> labels \\<Gamma> p; l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<xi>, l), a, \\<xi>', l')", "with \\<open>p' \\<in> sterms \\<Gamma> p\\<close>"], ["proof (chain)\npicking this:\n  p' \\<in> sterms \\<Gamma> p\n  \\<forall>p'\\<in>sterms \\<Gamma> p. l \\<in> labels \\<Gamma> p'", "have \"l \\<in> labels \\<Gamma> p'\""], ["proof (prove)\nusing this:\n  p' \\<in> sterms \\<Gamma> p\n  \\<forall>p'\\<in>sterms \\<Gamma> p. l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. l \\<in> labels \\<Gamma> p'", "by simp"], ["proof (state)\nthis:\n  l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. \\<And>\\<xi> p l a \\<xi>' p' l'.\n       \\<lbrakk>(\\<xi>, p) \\<in> reachable A I;\n        ((\\<xi>, p), a, \\<xi>', p') \\<in> automaton.trans A; I a;\n        l \\<in> labels \\<Gamma> p; l' \\<in> labels \\<Gamma> p'\\<rbrakk>\n       \\<Longrightarrow> P ((\\<xi>, l), a, \\<xi>', l')", "with A1"], ["proof (chain)\npicking this:\n  p' \\<in> cterms \\<Gamma>\n  l \\<in> labels \\<Gamma> p'", "show \"P ((\\<xi>, l), a, (\\<xi>', l'))\""], ["proof (prove)\nusing this:\n  p' \\<in> cterms \\<Gamma>\n  l \\<in> labels \\<Gamma> p'\n\ngoal (1 subgoal):\n 1. P ((\\<xi>, l), a, \\<xi>', l')", "using A3 A4 A5 A6 A7 A8 \\<open>I a\\<close>"], ["proof (prove)\nusing this:\n  p' \\<in> cterms \\<Gamma>\n  l \\<in> labels \\<Gamma> p'\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n  ((\\<xi>, p'), a, \\<xi>', q) \\<in> automaton.trans A\n  l' \\<in> labels \\<Gamma> q\n  (\\<xi>, pp) \\<in> reachable A I\n  p' \\<in> sterms \\<Gamma> pp\n  (\\<xi>', q) \\<in> reachable A I\n  I a\n\ngoal (1 subgoal):\n 1. P ((\\<xi>, l), a, \\<xi>', l')", "by (rule step)"], ["proof (state)\nthis:\n  P ((\\<xi>, l), a, \\<xi>', l')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma seq_step_invariant_ctermsI [intro]:\n  assumes wf: \"wellformed \\<Gamma>\"\n      and cw: \"control_within \\<Gamma> (init A)\"\n      and sl: \"simple_labels \\<Gamma>\"\n      and sp: \"trans A = seqp_sos \\<Gamma>\"\n      and step: \"\\<And>p l \\<xi> a q l' \\<xi>' pp pn. \\<lbrakk>\n                 wellformed \\<Gamma>;\n                 p\\<in>ctermsl (\\<Gamma> pn);\n                 not_call p;\n                 l\\<in>labels \\<Gamma> p;\n                 ((\\<xi>, p), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>;\n                 ((\\<xi>, p), a, (\\<xi>', q)) \\<in> trans A;\n                 l'\\<in>labels \\<Gamma> q;\n                 (\\<xi>, pp) \\<in> reachable A I;\n                 p\\<in>sterms \\<Gamma> pp;\n                 (\\<xi>', q) \\<in> reachable A I;\n                 I a\n               \\<rbrakk> \\<Longrightarrow> P ((\\<xi>, l), a, (\\<xi>', l'))\"\n    shows \"A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P", "using assms(1-4)"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  control_within \\<Gamma> (init A)\n  simple_labels \\<Gamma>\n  automaton.trans A = seqp_sos \\<Gamma>\n\ngoal (1 subgoal):\n 1. A \\<TTurnstile>\\<^sub>A (I \\<rightarrow>) onll \\<Gamma> P", "proof (rule seq_step_invariant_ctermI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p pp l \\<xi> a q l' \\<xi>'.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<xi>, pp) \\<in> reachable A I;\n        p \\<in> sterms \\<Gamma> pp; (\\<xi>', q) \\<in> reachable A I;\n        I a\\<rbrakk>\n       \\<Longrightarrow> P ((\\<xi>, l), a, \\<xi>', l')", "fix p pp l \\<xi> a q l' \\<xi>'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p pp l \\<xi> a q l' \\<xi>'.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<xi>, pp) \\<in> reachable A I;\n        p \\<in> sterms \\<Gamma> pp; (\\<xi>', q) \\<in> reachable A I;\n        I a\\<rbrakk>\n       \\<Longrightarrow> P ((\\<xi>, l), a, \\<xi>', l')", "assume \"p \\<in> cterms \\<Gamma>\"\n       and otherassms: \"l \\<in> labels \\<Gamma> p\"\n           \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> seqp_sos \\<Gamma>\"\n           \"((\\<xi>, p), a, (\\<xi>', q)) \\<in> trans A\"\n           \"l' \\<in> labels \\<Gamma> q\"\n           \"(\\<xi>, pp) \\<in> reachable A I\"\n           \"p \\<in> sterms \\<Gamma> pp\"\n           \"(\\<xi>', q) \\<in> reachable A I\"\n           \"I a\""], ["proof (state)\nthis:\n  p \\<in> cterms \\<Gamma>\n  l \\<in> labels \\<Gamma> p\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  l' \\<in> labels \\<Gamma> q\n  (\\<xi>, pp) \\<in> reachable A I\n  p \\<in> sterms \\<Gamma> pp\n  (\\<xi>', q) \\<in> reachable A I\n  I a\n\ngoal (1 subgoal):\n 1. \\<And>p pp l \\<xi> a q l' \\<xi>'.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<xi>, pp) \\<in> reachable A I;\n        p \\<in> sterms \\<Gamma> pp; (\\<xi>', q) \\<in> reachable A I;\n        I a\\<rbrakk>\n       \\<Longrightarrow> P ((\\<xi>, l), a, \\<xi>', l')", "from this(1)"], ["proof (chain)\npicking this:\n  p \\<in> cterms \\<Gamma>", "obtain pn where \"p \\<in> ctermsl(\\<Gamma> pn)\"\n                             and \"not_call p\""], ["proof (prove)\nusing this:\n  p \\<in> cterms \\<Gamma>\n\ngoal (1 subgoal):\n 1. (\\<And>pn.\n        \\<lbrakk>p \\<in> ctermsl (\\<Gamma> pn); not_call p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding cterms_def' [OF wf]"], ["proof (prove)\nusing this:\n  p \\<in> {uu_.\n           \\<exists>p pn.\n              uu_ = p \\<and>\n              p \\<in> ctermsl (\\<Gamma> pn) \\<and> not_call p}\n\ngoal (1 subgoal):\n 1. (\\<And>pn.\n        \\<lbrakk>p \\<in> ctermsl (\\<Gamma> pn); not_call p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p \\<in> ctermsl (\\<Gamma> pn)\n  not_call p\n\ngoal (1 subgoal):\n 1. \\<And>p pp l \\<xi> a q l' \\<xi>'.\n       \\<lbrakk>p \\<in> cterms \\<Gamma>; l \\<in> labels \\<Gamma> p;\n        ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>;\n        ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A;\n        l' \\<in> labels \\<Gamma> q; (\\<xi>, pp) \\<in> reachable A I;\n        p \\<in> sterms \\<Gamma> pp; (\\<xi>', q) \\<in> reachable A I;\n        I a\\<rbrakk>\n       \\<Longrightarrow> P ((\\<xi>, l), a, \\<xi>', l')", "with wf"], ["proof (chain)\npicking this:\n  wellformed \\<Gamma>\n  p \\<in> ctermsl (\\<Gamma> pn)\n  not_call p", "show \"P ((\\<xi>, l), a, (\\<xi>', l'))\""], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p \\<in> ctermsl (\\<Gamma> pn)\n  not_call p\n\ngoal (1 subgoal):\n 1. P ((\\<xi>, l), a, \\<xi>', l')", "using otherassms"], ["proof (prove)\nusing this:\n  wellformed \\<Gamma>\n  p \\<in> ctermsl (\\<Gamma> pn)\n  not_call p\n  l \\<in> labels \\<Gamma> p\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> seqp_sos \\<Gamma>\n  ((\\<xi>, p), a, \\<xi>', q) \\<in> automaton.trans A\n  l' \\<in> labels \\<Gamma> q\n  (\\<xi>, pp) \\<in> reachable A I\n  p \\<in> sterms \\<Gamma> pp\n  (\\<xi>', q) \\<in> reachable A I\n  I a\n\ngoal (1 subgoal):\n 1. P ((\\<xi>, l), a, \\<xi>', l')", "by (rule step)"], ["proof (state)\nthis:\n  P ((\\<xi>, l), a, \\<xi>', l')\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}