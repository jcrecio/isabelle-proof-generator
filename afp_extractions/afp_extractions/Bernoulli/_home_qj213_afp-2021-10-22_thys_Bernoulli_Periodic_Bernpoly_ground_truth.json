{"file_name": "/home/qj213/afp-2021-10-22/thys/Bernoulli/Periodic_Bernpoly.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Bernoulli", "problem_names": ["lemma frac_0 [simp]: \"frac 0 = 0\"", "lemma frac_eq_id: \"x \\<in> {0..<1} \\<Longrightarrow> frac x = x\"", "lemma periodic_continuous_onI:\n  fixes f :: \"real \\<Rightarrow> real\"\n  assumes periodic: \"\\<And>x. f (x + p) = f x\" \"p > 0\"\n  assumes cont: \"continuous_on {a..a+p} f\"\n  shows   \"continuous_on UNIV f\"", "lemma has_field_derivative_at_within_union:\n  assumes \"(f has_field_derivative D) (at x within A)\" \n          \"(f has_field_derivative D) (at x within B)\"\n  shows   \"(f has_field_derivative D) (at x within (A \\<union> B))\"", "lemma has_field_derivative_cong_ev':\n  assumes \"x = y\"\n    and *: \"eventually (\\<lambda>x. x \\<in> s \\<longrightarrow> f x = g x) (nhds x)\"\n    and \"u = v\" \"s = t\" \"f x = g y\"\n  shows \"(f has_field_derivative u) (at x within s) = (g has_field_derivative v) (at y within t)\"", "lemma tendsto_frac_at_right_0: \n  \"(frac \\<longlongrightarrow> 0) (at_right (0 :: 'a :: {floor_ceiling,order_topology}))\"", "lemma tendsto_frac_at_left_1: \n  \"(frac \\<longlongrightarrow> 1) (at_left (1 :: 'a :: {floor_ceiling,order_topology}))\"", "lemma continuous_on_frac [THEN continuous_on_subset, continuous_intros]: \n  \"continuous_on {0::'a::{floor_ceiling,order_topology}..<1} frac\"", "lemma isCont_frac [continuous_intros]: \n  assumes \"(x :: 'a :: {floor_ceiling,order_topology,t2_space}) \\<in> {0<..<1}\"\n  shows   \"isCont frac x\"", "lemma has_field_derivative_frac:\n  assumes \"(x::real) \\<notin> \\<int>\"\n  shows   \"(frac has_field_derivative 1) (at x)\"", "lemmas has_field_derivative_frac' [derivative_intros] = \n  DERIV_chain'[OF _ has_field_derivative_frac]", "lemma continuous_on_compose_fracI:\n  fixes f :: \"real \\<Rightarrow> real\"\n  assumes cont1: \"continuous_on {0..1} f\"\n  assumes cont2: \"f 0 = f 1\"\n  shows   \"continuous_on UNIV (\\<lambda>x. f (frac x))\"", "lemma pbernpoly_0 [simp]: \"pbernpoly n 0 = bernoulli n\"", "lemma pbernpoly_eq_bernpoly: \"x \\<in> {0..<1} \\<Longrightarrow> pbernpoly n x = bernpoly n x\"", "lemma continuous_on_pbernpoly [continuous_intros]:\n  assumes \"n \\<noteq> 1\"\n  shows   \"continuous_on A (pbernpoly n)\"", "lemma continuous_on_pbernpoly' [continuous_intros]:\n  assumes \"n \\<noteq> 1\" \"continuous_on A f\"\n  shows   \"continuous_on A (\\<lambda>x. pbernpoly n (f x))\"", "lemma isCont_pbernpoly [continuous_intros]: \"n \\<noteq> 1 \\<Longrightarrow> isCont (pbernpoly n) x\"", "lemma has_field_derivative_pbernpoly_Suc:\n  assumes \"n \\<ge> 2 \\<or> x \\<notin> \\<int>\"\n  shows   \"(pbernpoly (Suc n) has_field_derivative real (Suc n) * pbernpoly n x) (at x)\"", "lemmas has_field_derivative_pbernpoly_Suc' =\n  DERIV_chain'[OF _ has_field_derivative_pbernpoly_Suc]", "lemma bounded_pbernpoly: obtains c where \"\\<And>x. norm (pbernpoly n x) \\<le> c\""], "translations": [["", "lemma frac_0 [simp]: \"frac 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. frac (0::'a) = (0::'a)", "by (simp add: frac_def)"], ["", "lemma frac_eq_id: \"x \\<in> {0..<1} \\<Longrightarrow> frac x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {0::'a..<1::'a} \\<Longrightarrow> frac x = x", "by (simp add: frac_eq)"], ["", "lemma periodic_continuous_onI:\n  fixes f :: \"real \\<Rightarrow> real\"\n  assumes periodic: \"\\<And>x. f (x + p) = f x\" \"p > 0\"\n  assumes cont: \"continuous_on {a..a+p} f\"\n  shows   \"continuous_on UNIV f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV f", "unfolding continuous_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV. f \\<midarrow>x\\<rightarrow> f x", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "fix x :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "interpret f: periodic_fun_simple f p"], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_fun_simple f p", "by unfold_locales (rule periodic)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "have \"continuous_on {a-p..a} (f \\<circ> (\\<lambda>x. x + p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on {a - p..a} (f \\<circ> (\\<lambda>x. x + p))", "by (intro continuous_on_compose) (auto intro!: continuous_intros cont)"], ["proof (state)\nthis:\n  continuous_on {a - p..a} (f \\<circ> (\\<lambda>x. x + p))\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "also"], ["proof (state)\nthis:\n  continuous_on {a - p..a} (f \\<circ> (\\<lambda>x. x + p))\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "have \"f \\<circ> (\\<lambda>x. x + p) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<circ> (\\<lambda>x. x + p) = f", "by (rule ext) (simp add: f.periodic_simps)"], ["proof (state)\nthis:\n  f \\<circ> (\\<lambda>x. x + p) = f\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "finally"], ["proof (chain)\npicking this:\n  continuous_on {a - p..a} f", "have \"continuous_on ({a-p..a} \\<union> {a..a+p}) f\""], ["proof (prove)\nusing this:\n  continuous_on {a - p..a} f\n\ngoal (1 subgoal):\n 1. continuous_on ({a - p..a} \\<union> {a..a + p}) f", "using cont"], ["proof (prove)\nusing this:\n  continuous_on {a - p..a} f\n  continuous_on {a..a + p} f\n\ngoal (1 subgoal):\n 1. continuous_on ({a - p..a} \\<union> {a..a + p}) f", "by (intro continuous_on_closed_Un) simp_all"], ["proof (state)\nthis:\n  continuous_on ({a - p..a} \\<union> {a..a + p}) f\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "also"], ["proof (state)\nthis:\n  continuous_on ({a - p..a} \\<union> {a..a + p}) f\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "have \"{a-p..a} \\<union> {a..a+p} = {a-p..a+p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a - p..a} \\<union> {a..a + p} = {a - p..a + p}", "by auto"], ["proof (state)\nthis:\n  {a - p..a} \\<union> {a..a + p} = {a - p..a + p}\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "finally"], ["proof (chain)\npicking this:\n  continuous_on {a - p..a + p} f", "have \"continuous_on {a-p..a+p} f\""], ["proof (prove)\nusing this:\n  continuous_on {a - p..a + p} f\n\ngoal (1 subgoal):\n 1. continuous_on {a - p..a + p} f", "."], ["proof (state)\nthis:\n  continuous_on {a - p..a + p} f\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "hence cont: \"continuous_on {a-p<..<a+p} f\""], ["proof (prove)\nusing this:\n  continuous_on {a - p..a + p} f\n\ngoal (1 subgoal):\n 1. continuous_on {a - p<..<a + p} f", "by (rule continuous_on_subset) auto"], ["proof (state)\nthis:\n  continuous_on {a - p<..<a + p} f\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "define n :: int where \"n = \\<lceil>(a - x) / p\\<rceil>\""], ["proof (state)\nthis:\n  n = \\<lceil>(a - x) / p\\<rceil>\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "have \"(a - x) / p \\<le> n\" \"n < (a - x) / p + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a - x) / p \\<le> real_of_int n &&& real_of_int n < (a - x) / p + 1", "unfolding n_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a - x) / p \\<le> real_of_int \\<lceil>(a - x) / p\\<rceil> &&&\n    real_of_int \\<lceil>(a - x) / p\\<rceil> < (a - x) / p + 1", "by linarith+"], ["proof (state)\nthis:\n  (a - x) / p \\<le> real_of_int n\n  real_of_int n < (a - x) / p + 1\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "with \\<open>p > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < p\n  (a - x) / p \\<le> real_of_int n\n  real_of_int n < (a - x) / p + 1", "have \"x + n * p \\<in> {a-p<..<a + p}\""], ["proof (prove)\nusing this:\n  0 < p\n  (a - x) / p \\<le> real_of_int n\n  real_of_int n < (a - x) / p + 1\n\ngoal (1 subgoal):\n 1. x + real_of_int n * p \\<in> {a - p<..<a + p}", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  x + real_of_int n * p \\<in> {a - p<..<a + p}\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "with cont"], ["proof (chain)\npicking this:\n  continuous_on {a - p<..<a + p} f\n  x + real_of_int n * p \\<in> {a - p<..<a + p}", "have \"isCont f (x + n * p)\""], ["proof (prove)\nusing this:\n  continuous_on {a - p<..<a + p} f\n  x + real_of_int n * p \\<in> {a - p<..<a + p}\n\ngoal (1 subgoal):\n 1. isCont f (x + real_of_int n * p)", "by (subst (asm) continuous_on_eq_continuous_at) auto"], ["proof (state)\nthis:\n  isCont f (x + real_of_int n * p)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "hence *: \"f \\<midarrow>x+n*p\\<rightarrow> f (x+n*p)\""], ["proof (prove)\nusing this:\n  isCont f (x + real_of_int n * p)\n\ngoal (1 subgoal):\n 1. f \\<midarrow>x + real_of_int n * p\n    \\<rightarrow> f (x + real_of_int n * p)", "by (simp add: isCont_def f.periodic_simps)"], ["proof (state)\nthis:\n  f \\<midarrow>x + real_of_int n * p\\<rightarrow> f (x + real_of_int n * p)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "have \"(\\<lambda>x. f (x + n*p)) \\<midarrow>x\\<rightarrow> f (x+n*p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (x + real_of_int n * p)) \\<midarrow>x\n    \\<rightarrow> f (x + real_of_int n * p)", "by (intro tendsto_compose[OF *] tendsto_intros)"], ["proof (state)\nthis:\n  (\\<lambda>x. f (x + real_of_int n * p)) \\<midarrow>x\n  \\<rightarrow> f (x + real_of_int n * p)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> f \\<midarrow>x\\<rightarrow> f x", "thus \"f \\<midarrow>x\\<rightarrow> f x\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. f (x + real_of_int n * p)) \\<midarrow>x\n  \\<rightarrow> f (x + real_of_int n * p)\n\ngoal (1 subgoal):\n 1. f \\<midarrow>x\\<rightarrow> f x", "by (simp add: f.periodic_simps)"], ["proof (state)\nthis:\n  f \\<midarrow>x\\<rightarrow> f x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma has_field_derivative_at_within_union:\n  assumes \"(f has_field_derivative D) (at x within A)\" \n          \"(f has_field_derivative D) (at x within B)\"\n  shows   \"(f has_field_derivative D) (at x within (A \\<union> B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f has_field_derivative D) (at x within A \\<union> B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (f has_field_derivative D) (at x within A \\<union> B)", "from assms"], ["proof (chain)\npicking this:\n  (f has_field_derivative D) (at x within A)\n  (f has_field_derivative D) (at x within B)", "have \"((\\<lambda>y. (f y - f x) / (y - x)) \\<longlongrightarrow> D) (sup (at x within A) (at x within B))\""], ["proof (prove)\nusing this:\n  (f has_field_derivative D) (at x within A)\n  (f has_field_derivative D) (at x within B)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y. (f y - f x) / (y - x)) \\<longlongrightarrow> D)\n     (sup (at x within A) (at x within B))", "unfolding has_field_derivative_iff"], ["proof (prove)\nusing this:\n  ((\\<lambda>y. (f y - f x) / (y - x)) \\<longlongrightarrow> D)\n   (at x within A)\n  ((\\<lambda>y. (f y - f x) / (y - x)) \\<longlongrightarrow> D)\n   (at x within B)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y. (f y - f x) / (y - x)) \\<longlongrightarrow> D)\n     (sup (at x within A) (at x within B))", "by (rule filterlim_sup)"], ["proof (state)\nthis:\n  ((\\<lambda>y. (f y - f x) / (y - x)) \\<longlongrightarrow> D)\n   (sup (at x within A) (at x within B))\n\ngoal (1 subgoal):\n 1. (f has_field_derivative D) (at x within A \\<union> B)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>y. (f y - f x) / (y - x)) \\<longlongrightarrow> D)\n   (sup (at x within A) (at x within B))\n\ngoal (1 subgoal):\n 1. (f has_field_derivative D) (at x within A \\<union> B)", "have \"sup (at x within A) (at x within B) = at x within (A \\<union> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup (at x within A) (at x within B) = at x within A \\<union> B", "using at_within_union"], ["proof (prove)\nusing this:\n  at ?x within ?S \\<union> ?T = sup (at ?x within ?S) (at ?x within ?T)\n\ngoal (1 subgoal):\n 1. sup (at x within A) (at x within B) = at x within A \\<union> B", ".."], ["proof (state)\nthis:\n  sup (at x within A) (at x within B) = at x within A \\<union> B\n\ngoal (1 subgoal):\n 1. (f has_field_derivative D) (at x within A \\<union> B)", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>y. (f y - f x) / (y - x)) \\<longlongrightarrow> D)\n   (at x within A \\<union> B)", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>y. (f y - f x) / (y - x)) \\<longlongrightarrow> D)\n   (at x within A \\<union> B)\n\ngoal (1 subgoal):\n 1. (f has_field_derivative D) (at x within A \\<union> B)", "unfolding has_field_derivative_iff"], ["proof (prove)\nusing this:\n  ((\\<lambda>y. (f y - f x) / (y - x)) \\<longlongrightarrow> D)\n   (at x within A \\<union> B)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y. (f y - f x) / (y - x)) \\<longlongrightarrow> D)\n     (at x within A \\<union> B)", "."], ["proof (state)\nthis:\n  (f has_field_derivative D) (at x within A \\<union> B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma has_field_derivative_cong_ev':\n  assumes \"x = y\"\n    and *: \"eventually (\\<lambda>x. x \\<in> s \\<longrightarrow> f x = g x) (nhds x)\"\n    and \"u = v\" \"s = t\" \"f x = g y\"\n  shows \"(f has_field_derivative u) (at x within s) = (g has_field_derivative v) (at y within t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f has_field_derivative u) (at x within s) =\n    (g has_field_derivative v) (at y within t)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (f has_field_derivative u) (at x within s) =\n    (g has_field_derivative v) (at y within t)", "have \"(f has_field_derivative u) (at x within (s \\<union> {x})) =\n            (g has_field_derivative v) (at y within (s \\<union> {x}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f has_field_derivative u) (at x within s \\<union> {x}) =\n    (g has_field_derivative v) (at y within s \\<union> {x})", "using assms"], ["proof (prove)\nusing this:\n  x = y\n  \\<forall>\\<^sub>F x in nhds x. x \\<in> s \\<longrightarrow> f x = g x\n  u = v\n  s = t\n  f x = g y\n\ngoal (1 subgoal):\n 1. (f has_field_derivative u) (at x within s \\<union> {x}) =\n    (g has_field_derivative v) (at y within s \\<union> {x})", "by (intro has_field_derivative_cong_ev) (auto elim!: eventually_mono)"], ["proof (state)\nthis:\n  (f has_field_derivative u) (at x within s \\<union> {x}) =\n  (g has_field_derivative v) (at y within s \\<union> {x})\n\ngoal (1 subgoal):\n 1. (f has_field_derivative u) (at x within s) =\n    (g has_field_derivative v) (at y within t)", "also"], ["proof (state)\nthis:\n  (f has_field_derivative u) (at x within s \\<union> {x}) =\n  (g has_field_derivative v) (at y within s \\<union> {x})\n\ngoal (1 subgoal):\n 1. (f has_field_derivative u) (at x within s) =\n    (g has_field_derivative v) (at y within t)", "from assms"], ["proof (chain)\npicking this:\n  x = y\n  \\<forall>\\<^sub>F x in nhds x. x \\<in> s \\<longrightarrow> f x = g x\n  u = v\n  s = t\n  f x = g y", "have \"at x within (s \\<union> {x}) = at x within s\""], ["proof (prove)\nusing this:\n  x = y\n  \\<forall>\\<^sub>F x in nhds x. x \\<in> s \\<longrightarrow> f x = g x\n  u = v\n  s = t\n  f x = g y\n\ngoal (1 subgoal):\n 1. at x within s \\<union> {x} = at x within s", "by (simp add: at_within_def)"], ["proof (state)\nthis:\n  at x within s \\<union> {x} = at x within s\n\ngoal (1 subgoal):\n 1. (f has_field_derivative u) (at x within s) =\n    (g has_field_derivative v) (at y within t)", "also"], ["proof (state)\nthis:\n  at x within s \\<union> {x} = at x within s\n\ngoal (1 subgoal):\n 1. (f has_field_derivative u) (at x within s) =\n    (g has_field_derivative v) (at y within t)", "from assms"], ["proof (chain)\npicking this:\n  x = y\n  \\<forall>\\<^sub>F x in nhds x. x \\<in> s \\<longrightarrow> f x = g x\n  u = v\n  s = t\n  f x = g y", "have \"at y within (s \\<union> {x}) = at y within t\""], ["proof (prove)\nusing this:\n  x = y\n  \\<forall>\\<^sub>F x in nhds x. x \\<in> s \\<longrightarrow> f x = g x\n  u = v\n  s = t\n  f x = g y\n\ngoal (1 subgoal):\n 1. at y within s \\<union> {x} = at y within t", "by (simp add: at_within_def)"], ["proof (state)\nthis:\n  at y within s \\<union> {x} = at y within t\n\ngoal (1 subgoal):\n 1. (f has_field_derivative u) (at x within s) =\n    (g has_field_derivative v) (at y within t)", "finally"], ["proof (chain)\npicking this:\n  (f has_field_derivative u) (at x within s) =\n  (g has_field_derivative v) (at y within t)", "show ?thesis"], ["proof (prove)\nusing this:\n  (f has_field_derivative u) (at x within s) =\n  (g has_field_derivative v) (at y within t)\n\ngoal (1 subgoal):\n 1. (f has_field_derivative u) (at x within s) =\n    (g has_field_derivative v) (at y within t)", "."], ["proof (state)\nthis:\n  (f has_field_derivative u) (at x within s) =\n  (g has_field_derivative v) (at y within t)\n\ngoal:\nNo subgoals!", "qed"], ["", "interpretation frac: periodic_fun_simple' frac"], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_fun_simple' frac", "by unfold_locales (simp add: frac_def)"], ["", "lemma tendsto_frac_at_right_0: \n  \"(frac \\<longlongrightarrow> 0) (at_right (0 :: 'a :: {floor_ceiling,order_topology}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (frac \\<longlongrightarrow> (0::'a)) (at_right (0::'a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (frac \\<longlongrightarrow> (0::'a)) (at_right (0::'a))", "have *: \"eventually (\\<lambda>x. x = frac x) (at_right (0::'a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_right (0::'a). x = frac x", "by (intro eventually_at_rightI[of 0 1]) (simp_all add: frac_eq eq_commute[of _ \"frac x\" for x])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_right (0::'a). x = frac x\n\ngoal (1 subgoal):\n 1. (frac \\<longlongrightarrow> (0::'a)) (at_right (0::'a))", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_right (0::'a). x = frac x\n\ngoal (1 subgoal):\n 1. (frac \\<longlongrightarrow> (0::'a)) (at_right (0::'a))", "have **: \"((\\<lambda>x::'a. x) \\<longlongrightarrow> 0) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. x) \\<longlongrightarrow> (0::'a)) (at_right (0::'a))", "by (rule tendsto_ident_at)"], ["proof (state)\nthis:\n  ((\\<lambda>x. x) \\<longlongrightarrow> (0::'a)) (at_right (0::'a))\n\ngoal (1 subgoal):\n 1. (frac \\<longlongrightarrow> (0::'a)) (at_right (0::'a))", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_right (0::'a). x = frac x\n  ((\\<lambda>x. x) \\<longlongrightarrow> (0::'a)) (at_right (0::'a))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_right (0::'a). x = frac x\n  ((\\<lambda>x. x) \\<longlongrightarrow> (0::'a)) (at_right (0::'a))\n\ngoal (1 subgoal):\n 1. (frac \\<longlongrightarrow> (0::'a)) (at_right (0::'a))", "by (blast intro: Lim_transform_eventually)"], ["proof (state)\nthis:\n  (frac \\<longlongrightarrow> (0::'a)) (at_right (0::'a))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tendsto_frac_at_left_1: \n  \"(frac \\<longlongrightarrow> 1) (at_left (1 :: 'a :: {floor_ceiling,order_topology}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (frac \\<longlongrightarrow> (1::'a)) (at_left (1::'a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (frac \\<longlongrightarrow> (1::'a)) (at_left (1::'a))", "have *: \"eventually (\\<lambda>x. x = frac x) (at_left (1::'a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_left (1::'a). x = frac x", "by (intro eventually_at_leftI[of 0]) (simp_all add: frac_eq eq_commute[of _ \"frac x\" for x])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_left (1::'a). x = frac x\n\ngoal (1 subgoal):\n 1. (frac \\<longlongrightarrow> (1::'a)) (at_left (1::'a))", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_left (1::'a). x = frac x\n\ngoal (1 subgoal):\n 1. (frac \\<longlongrightarrow> (1::'a)) (at_left (1::'a))", "have **: \"((\\<lambda>x::'a. x) \\<longlongrightarrow> 1) (at_left 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. x) \\<longlongrightarrow> (1::'a)) (at_left (1::'a))", "by (rule tendsto_ident_at)"], ["proof (state)\nthis:\n  ((\\<lambda>x. x) \\<longlongrightarrow> (1::'a)) (at_left (1::'a))\n\ngoal (1 subgoal):\n 1. (frac \\<longlongrightarrow> (1::'a)) (at_left (1::'a))", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_left (1::'a). x = frac x\n  ((\\<lambda>x. x) \\<longlongrightarrow> (1::'a)) (at_left (1::'a))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_left (1::'a). x = frac x\n  ((\\<lambda>x. x) \\<longlongrightarrow> (1::'a)) (at_left (1::'a))\n\ngoal (1 subgoal):\n 1. (frac \\<longlongrightarrow> (1::'a)) (at_left (1::'a))", "by (blast intro: Lim_transform_eventually)"], ["proof (state)\nthis:\n  (frac \\<longlongrightarrow> (1::'a)) (at_left (1::'a))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma continuous_on_frac [THEN continuous_on_subset, continuous_intros]: \n  \"continuous_on {0::'a::{floor_ceiling,order_topology}..<1} frac\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on {0::'a..<1::'a} frac", "proof (subst continuous_on_cong[OF refl])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> {0::'a..<1::'a} \\<Longrightarrow> frac x = ?g x\n 2. continuous_on {0::'a..<1::'a} ?g", "fix x :: 'a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> {0::'a..<1::'a} \\<Longrightarrow> frac x = ?g x\n 2. continuous_on {0::'a..<1::'a} ?g", "assume \"x \\<in> {0..<1}\""], ["proof (state)\nthis:\n  x \\<in> {0::'a..<1::'a}\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> {0::'a..<1::'a} \\<Longrightarrow> frac x = ?g x\n 2. continuous_on {0::'a..<1::'a} ?g", "thus \"frac x = x\""], ["proof (prove)\nusing this:\n  x \\<in> {0::'a..<1::'a}\n\ngoal (1 subgoal):\n 1. frac x = x", "by (simp add: frac_eq)"], ["proof (state)\nthis:\n  frac x = x\n\ngoal (1 subgoal):\n 1. continuous_on {0::'a..<1::'a} (\\<lambda>x. x)", "qed (auto intro: continuous_intros)"], ["", "lemma isCont_frac [continuous_intros]: \n  assumes \"(x :: 'a :: {floor_ceiling,order_topology,t2_space}) \\<in> {0<..<1}\"\n  shows   \"isCont frac x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont frac x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. isCont frac x", "have \"continuous_on {0<..<(1::'a)} frac\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on {0::'a<..<1::'a} frac", "by (rule continuous_on_frac) auto"], ["proof (state)\nthis:\n  continuous_on {0::'a<..<1::'a} frac\n\ngoal (1 subgoal):\n 1. isCont frac x", "with assms"], ["proof (chain)\npicking this:\n  x \\<in> {0::'a<..<1::'a}\n  continuous_on {0::'a<..<1::'a} frac", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> {0::'a<..<1::'a}\n  continuous_on {0::'a<..<1::'a} frac\n\ngoal (1 subgoal):\n 1. isCont frac x", "by (subst (asm) continuous_on_eq_continuous_at) auto"], ["proof (state)\nthis:\n  isCont frac x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma has_field_derivative_frac:\n  assumes \"(x::real) \\<notin> \\<int>\"\n  shows   \"(frac has_field_derivative 1) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (frac has_real_derivative 1) (at x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (frac has_real_derivative 1) (at x)", "have \"((\\<lambda>t. t - of_int \\<lfloor>x\\<rfloor>) has_field_derivative 1) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. t - real_of_int \\<lfloor>x\\<rfloor>) has_real_derivative\n     1)\n     (at x)", "by (auto intro!: derivative_eq_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>t. t - real_of_int \\<lfloor>x\\<rfloor>) has_real_derivative 1)\n   (at x)\n\ngoal (1 subgoal):\n 1. (frac has_real_derivative 1) (at x)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>t. t - real_of_int \\<lfloor>x\\<rfloor>) has_real_derivative 1)\n   (at x)\n\ngoal (1 subgoal):\n 1. (frac has_real_derivative 1) (at x)", "have \"?this \\<longleftrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. t - real_of_int \\<lfloor>x\\<rfloor>) has_real_derivative\n     1)\n     (at x) =\n    (frac has_real_derivative 1) (at x)", "using eventually_floor_eq[OF filterlim_ident assms]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F xa in nhds x. \\<lfloor>xa\\<rfloor> = \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. t - real_of_int \\<lfloor>x\\<rfloor>) has_real_derivative\n     1)\n     (at x) =\n    (frac has_real_derivative 1) (at x)", "by (intro DERIV_cong_ev refl) (auto elim!: eventually_mono simp: frac_def)"], ["proof (state)\nthis:\n  ((\\<lambda>t. t - real_of_int \\<lfloor>x\\<rfloor>) has_real_derivative 1)\n   (at x) =\n  (frac has_real_derivative 1) (at x)\n\ngoal (1 subgoal):\n 1. (frac has_real_derivative 1) (at x)", "finally"], ["proof (chain)\npicking this:\n  (frac has_real_derivative 1) (at x)", "show ?thesis"], ["proof (prove)\nusing this:\n  (frac has_real_derivative 1) (at x)\n\ngoal (1 subgoal):\n 1. (frac has_real_derivative 1) (at x)", "."], ["proof (state)\nthis:\n  (frac has_real_derivative 1) (at x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas has_field_derivative_frac' [derivative_intros] = \n  DERIV_chain'[OF _ has_field_derivative_frac]"], ["", "lemma continuous_on_compose_fracI:\n  fixes f :: \"real \\<Rightarrow> real\"\n  assumes cont1: \"continuous_on {0..1} f\"\n  assumes cont2: \"f 0 = f 1\"\n  shows   \"continuous_on UNIV (\\<lambda>x. f (frac x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV (\\<lambda>x. f (frac x))", "proof (rule periodic_continuous_onI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. f (frac (x + ?p)) = f (frac x)\n 2. 0 < ?p\n 3. continuous_on {?a..?a + ?p} (\\<lambda>x. f (frac x))", "have cont: \"continuous_on {0..1} (\\<lambda>x. f (frac x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on {0..1} (\\<lambda>x. f (frac x))", "unfolding continuous_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{0..1}.\n       ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n        (at x within {0..1})", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..1} \\<Longrightarrow>\n       ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n        (at x within {0..1})", "fix x :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..1} \\<Longrightarrow>\n       ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n        (at x within {0..1})", "assume x: \"x \\<in> {0..1}\""], ["proof (state)\nthis:\n  x \\<in> {0..1}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..1} \\<Longrightarrow>\n       ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n        (at x within {0..1})", "show \"((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x)) (at x within {0..1})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})", "proof (cases \"x = 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})\n 2. x \\<noteq> 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})", "case False"], ["proof (state)\nthis:\n  x \\<noteq> 1\n\ngoal (2 subgoals):\n 1. x = 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})\n 2. x \\<noteq> 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})", "with x"], ["proof (chain)\npicking this:\n  x \\<in> {0..1}\n  x \\<noteq> 1", "have [simp]: \"frac x = x\""], ["proof (prove)\nusing this:\n  x \\<in> {0..1}\n  x \\<noteq> 1\n\ngoal (1 subgoal):\n 1. frac x = x", "by (simp add: frac_eq)"], ["proof (state)\nthis:\n  frac x = x\n\ngoal (2 subgoals):\n 1. x = 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})\n 2. x \\<noteq> 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})", "from x False"], ["proof (chain)\npicking this:\n  x \\<in> {0..1}\n  x \\<noteq> 1", "have \"eventually (\\<lambda>x. x \\<in> {..<1}) (nhds x)\""], ["proof (prove)\nusing this:\n  x \\<in> {0..1}\n  x \\<noteq> 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in nhds x. x \\<in> {..<1}", "by (intro eventually_nhds_in_open) auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in nhds x. x \\<in> {..<1}\n\ngoal (2 subgoals):\n 1. x = 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})\n 2. x \\<noteq> 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})", "hence \"eventually (\\<lambda>x. frac x = x) (at x within {0..1})\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in nhds x. x \\<in> {..<1}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x within {0..1}. frac x = x", "by (auto simp: eventually_at_filter frac_eq elim!: eventually_mono)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x within {0..1}. frac x = x\n\ngoal (2 subgoals):\n 1. x = 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})\n 2. x \\<noteq> 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})", "hence \"eventually (\\<lambda>x. f x = f (frac x)) (at x within {0..1})\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x within {0..1}. frac x = x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x within {0..1}. f x = f (frac x)", "by eventually_elim simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x within {0..1}. f x = f (frac x)\n\ngoal (2 subgoals):\n 1. x = 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})\n 2. x \\<noteq> 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x within {0..1}. f x = f (frac x)\n\ngoal (2 subgoals):\n 1. x = 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})\n 2. x \\<noteq> 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})", "from cont1 x"], ["proof (chain)\npicking this:\n  continuous_on {0..1} f\n  x \\<in> {0..1}", "have \"(f \\<longlongrightarrow> f (frac x)) (at x within {0..1})\""], ["proof (prove)\nusing this:\n  continuous_on {0..1} f\n  x \\<in> {0..1}\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> f (frac x)) (at x within {0..1})", "by (simp add: continuous_on_def)"], ["proof (state)\nthis:\n  (f \\<longlongrightarrow> f (frac x)) (at x within {0..1})\n\ngoal (2 subgoals):\n 1. x = 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})\n 2. x \\<noteq> 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at x within {0..1}. f x = f (frac x)\n  (f \\<longlongrightarrow> f (frac x)) (at x within {0..1})", "show \"((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x)) (at x within {0..1})\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x within {0..1}. f x = f (frac x)\n  (f \\<longlongrightarrow> f (frac x)) (at x within {0..1})\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})", "by (blast intro: Lim_transform_eventually)"], ["proof (state)\nthis:\n  ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n   (at x within {0..1})\n\ngoal (1 subgoal):\n 1. x = 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x = 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})", "case True"], ["proof (state)\nthis:\n  x = 1\n\ngoal (1 subgoal):\n 1. x = 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})", "from cont1"], ["proof (chain)\npicking this:\n  continuous_on {0..1} f", "have **: \"(f \\<longlongrightarrow> f 1) (at 1 within {0..1})\""], ["proof (prove)\nusing this:\n  continuous_on {0..1} f\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> f 1) (at 1 within {0..1})", "by (simp add: continuous_on_def)"], ["proof (state)\nthis:\n  (f \\<longlongrightarrow> f 1) (at 1 within {0..1})\n\ngoal (1 subgoal):\n 1. x = 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})", "moreover"], ["proof (state)\nthis:\n  (f \\<longlongrightarrow> f 1) (at 1 within {0..1})\n\ngoal (1 subgoal):\n 1. x = 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})", "have *: \"filterlim frac (at 1 within {0..1}) (at 1 within {0..1})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim frac (at (1::'a) within {0::'a..1::'a})\n     (at (1::'a) within {0::'a..1::'a})", "proof (subst filterlim_cong[OF refl refl])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at (1::'a) within {0::'a..1::'a}. frac x = ?g x\n 2. filterlim ?g (at (1::'a) within {0::'a..1::'a})\n     (at (1::'a) within {0::'a..1::'a})", "show \"eventually (\\<lambda>x. frac x = x) (at 1 within {0..1})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at (1::'b) within {0::'b..1::'b}. frac x = x", "by (auto simp: eventually_at_filter frac_eq)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at (1::?'b1) within {0::?'b1..1::?'b1}. frac x = x\n\ngoal (1 subgoal):\n 1. LIM x at (1::'a) within {0::'a..1::'a}.\n       x :> at (1::'a) within {0::'a..1::'a}", "qed (simp add: filterlim_ident)"], ["proof (state)\nthis:\n  filterlim frac (at (1::?'a1) within {0::?'a1..1::?'a1})\n   (at (1::?'a1) within {0::?'a1..1::?'a1})\n\ngoal (1 subgoal):\n 1. x = 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})", "ultimately"], ["proof (chain)\npicking this:\n  (f \\<longlongrightarrow> f 1) (at 1 within {0..1})\n  filterlim frac (at (1::?'a1) within {0::?'a1..1::?'a1})\n   (at (1::?'a1) within {0::?'a1..1::?'a1})", "have \"((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f 1) (at 1 within {0..1})\""], ["proof (prove)\nusing this:\n  (f \\<longlongrightarrow> f 1) (at 1 within {0..1})\n  filterlim frac (at (1::?'a1) within {0::?'a1..1::?'a1})\n   (at (1::?'a1) within {0::?'a1..1::?'a1})\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f 1)\n     (at 1 within {0..1})", "by (rule filterlim_compose)"], ["proof (state)\nthis:\n  ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f 1) (at 1 within {0..1})\n\ngoal (1 subgoal):\n 1. x = 1 \\<Longrightarrow>\n    ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})", "thus ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f 1) (at 1 within {0..1})\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n     (at x within {0..1})", "by (simp add: True cont2 frac_def)"], ["proof (state)\nthis:\n  ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n   (at x within {0..1})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((\\<lambda>x. f (frac x)) \\<longlongrightarrow> f (frac x))\n   (at x within {0..1})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  continuous_on {0..1} (\\<lambda>x. f (frac x))\n\ngoal (3 subgoals):\n 1. \\<And>x. f (frac (x + ?p)) = f (frac x)\n 2. 0 < ?p\n 3. continuous_on {?a..?a + ?p} (\\<lambda>x. f (frac x))", "thus \"continuous_on {0..0+1} (\\<lambda>x. f (frac x))\""], ["proof (prove)\nusing this:\n  continuous_on {0..1} (\\<lambda>x. f (frac x))\n\ngoal (1 subgoal):\n 1. continuous_on {0..0 + 1} (\\<lambda>x. f (frac x))", "by simp"], ["proof (state)\nthis:\n  continuous_on {0..0 + 1} (\\<lambda>x. f (frac x))\n\ngoal (2 subgoals):\n 1. \\<And>x. f (frac (x + 1)) = f (frac x)\n 2. 0 < 1", "qed (simp_all add: frac.periodic_simps)"], ["", "(* END TODO *)"], ["", "definition pbernpoly :: \"nat \\<Rightarrow> real \\<Rightarrow> real\" where\n  \"pbernpoly n x = bernpoly n (frac x)\""], ["", "lemma pbernpoly_0 [simp]: \"pbernpoly n 0 = bernoulli n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pbernpoly n 0 = bernoulli n", "by (simp add: pbernpoly_def)"], ["", "lemma pbernpoly_eq_bernpoly: \"x \\<in> {0..<1} \\<Longrightarrow> pbernpoly n x = bernpoly n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {0..<1} \\<Longrightarrow> pbernpoly n x = bernpoly n x", "by (simp add: pbernpoly_def frac_eq_id)"], ["", "interpretation pbernpoly: periodic_fun_simple' \"pbernpoly n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_fun_simple' (pbernpoly n)", "by unfold_locales (simp add: pbernpoly_def frac.periodic_simps)"], ["", "lemma continuous_on_pbernpoly [continuous_intros]:\n  assumes \"n \\<noteq> 1\"\n  shows   \"continuous_on A (pbernpoly n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on A (pbernpoly n)", "proof (cases \"n = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> continuous_on A (pbernpoly n)\n 2. n \\<noteq> 0 \\<Longrightarrow> continuous_on A (pbernpoly n)", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> continuous_on A (pbernpoly n)\n 2. n \\<noteq> 0 \\<Longrightarrow> continuous_on A (pbernpoly n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. continuous_on A (pbernpoly n)", "by (auto intro: continuous_intros simp: pbernpoly_def bernpoly_def)"], ["proof (state)\nthis:\n  continuous_on A (pbernpoly n)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> continuous_on A (pbernpoly n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> continuous_on A (pbernpoly n)", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> continuous_on A (pbernpoly n)", "with assms"], ["proof (chain)\npicking this:\n  n \\<noteq> 1\n  n \\<noteq> 0", "have n: \"n \\<ge> 2\""], ["proof (prove)\nusing this:\n  n \\<noteq> 1\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 2 \\<le> n", "by auto"], ["proof (state)\nthis:\n  2 \\<le> n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> continuous_on A (pbernpoly n)", "have \"continuous_on UNIV (pbernpoly n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV (pbernpoly n)", "unfolding pbernpoly_def [abs_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV (\\<lambda>x. bernpoly n (frac x))", "by (rule continuous_on_compose_fracI)\n       (insert n, auto intro!: continuous_intros simp: bernpoly_0 bernpoly_1)"], ["proof (state)\nthis:\n  continuous_on UNIV (pbernpoly n)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> continuous_on A (pbernpoly n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  continuous_on UNIV (pbernpoly n)\n\ngoal (1 subgoal):\n 1. continuous_on A (pbernpoly n)", "by (rule continuous_on_subset) simp_all"], ["proof (state)\nthis:\n  continuous_on A (pbernpoly n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma continuous_on_pbernpoly' [continuous_intros]:\n  assumes \"n \\<noteq> 1\" \"continuous_on A f\"\n  shows   \"continuous_on A (\\<lambda>x. pbernpoly n (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on A (\\<lambda>x. pbernpoly n (f x))", "using continuous_on_compose[OF assms(2) continuous_on_pbernpoly[OF assms(1)]]"], ["proof (prove)\nusing this:\n  continuous_on A (pbernpoly n \\<circ> f)\n\ngoal (1 subgoal):\n 1. continuous_on A (\\<lambda>x. pbernpoly n (f x))", "by (simp add: o_def)"], ["", "lemma isCont_pbernpoly [continuous_intros]: \"n \\<noteq> 1 \\<Longrightarrow> isCont (pbernpoly n) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> isCont (pbernpoly n) x", "using continuous_on_pbernpoly[of n UNIV]"], ["proof (prove)\nusing this:\n  n \\<noteq> 1 \\<Longrightarrow> continuous_on UNIV (pbernpoly n)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> isCont (pbernpoly n) x", "by (simp add: continuous_on_eq_continuous_at)"], ["", "lemma has_field_derivative_pbernpoly_Suc:\n  assumes \"n \\<ge> 2 \\<or> x \\<notin> \\<int>\"\n  shows   \"(pbernpoly (Suc n) has_field_derivative real (Suc n) * pbernpoly n x) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at x)", "using assms"], ["proof (prove)\nusing this:\n  2 \\<le> n \\<or> x \\<notin> \\<int>\n\ngoal (1 subgoal):\n 1. (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at x)", "proof (cases \"x \\<in> \\<int>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>2 \\<le> n \\<or> x \\<notin> \\<int>; x \\<in> \\<int>\\<rbrakk>\n    \\<Longrightarrow> (pbernpoly (Suc n) has_real_derivative\n                       real (Suc n) * pbernpoly n x)\n                       (at x)\n 2. \\<lbrakk>2 \\<le> n \\<or> x \\<notin> \\<int>; x \\<notin> \\<int>\\<rbrakk>\n    \\<Longrightarrow> (pbernpoly (Suc n) has_real_derivative\n                       real (Suc n) * pbernpoly n x)\n                       (at x)", "assume \"x \\<notin> \\<int>\""], ["proof (state)\nthis:\n  x \\<notin> \\<int>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>2 \\<le> n \\<or> x \\<notin> \\<int>; x \\<in> \\<int>\\<rbrakk>\n    \\<Longrightarrow> (pbernpoly (Suc n) has_real_derivative\n                       real (Suc n) * pbernpoly n x)\n                       (at x)\n 2. \\<lbrakk>2 \\<le> n \\<or> x \\<notin> \\<int>; x \\<notin> \\<int>\\<rbrakk>\n    \\<Longrightarrow> (pbernpoly (Suc n) has_real_derivative\n                       real (Suc n) * pbernpoly n x)\n                       (at x)", "with assms"], ["proof (chain)\npicking this:\n  2 \\<le> n \\<or> x \\<notin> \\<int>\n  x \\<notin> \\<int>", "show ?thesis"], ["proof (prove)\nusing this:\n  2 \\<le> n \\<or> x \\<notin> \\<int>\n  x \\<notin> \\<int>\n\ngoal (1 subgoal):\n 1. (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at x)", "unfolding pbernpoly_def"], ["proof (prove)\nusing this:\n  2 \\<le> n \\<or> x \\<notin> \\<int>\n  x \\<notin> \\<int>\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. bernpoly (Suc n) (frac x)) has_real_derivative\n     real (Suc n) * bernpoly n (frac x))\n     (at x)", "by (auto intro!: derivative_eq_intros simp del: of_nat_Suc)"], ["proof (state)\nthis:\n  (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n   (at x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>2 \\<le> n \\<or> x \\<notin> \\<int>; x \\<in> \\<int>\\<rbrakk>\n    \\<Longrightarrow> (pbernpoly (Suc n) has_real_derivative\n                       real (Suc n) * pbernpoly n x)\n                       (at x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>2 \\<le> n \\<or> x \\<notin> \\<int>; x \\<in> \\<int>\\<rbrakk>\n    \\<Longrightarrow> (pbernpoly (Suc n) has_real_derivative\n                       real (Suc n) * pbernpoly n x)\n                       (at x)", "case True"], ["proof (state)\nthis:\n  x \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>2 \\<le> n \\<or> x \\<notin> \\<int>; x \\<in> \\<int>\\<rbrakk>\n    \\<Longrightarrow> (pbernpoly (Suc n) has_real_derivative\n                       real (Suc n) * pbernpoly n x)\n                       (at x)", "from True"], ["proof (chain)\npicking this:\n  x \\<in> \\<int>", "obtain k where k: \"x = of_int k\""], ["proof (prove)\nusing this:\n  x \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. (\\<And>k. x = real_of_int k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: Ints_cases)"], ["proof (state)\nthis:\n  x = real_of_int k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>2 \\<le> n \\<or> x \\<notin> \\<int>; x \\<in> \\<int>\\<rbrakk>\n    \\<Longrightarrow> (pbernpoly (Suc n) has_real_derivative\n                       real (Suc n) * pbernpoly n x)\n                       (at x)", "have \"(pbernpoly (Suc n) has_field_derivative real (Suc n) * pbernpoly n x) \n          (at x within ({..<x} \\<union> {x<..}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at x within {..<x} \\<union> {x<..})", "proof (rule has_field_derivative_at_within_union)"], ["proof (state)\ngoal (2 subgoals):\n 1. (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at_left x)\n 2. (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at_right x)", "have \"((\\<lambda>x. bernpoly (Suc n) (x - of_int (k-1))) has_field_derivative\n                  real (Suc n) * bernpoly n (x - of_int (k-1))) (at_left x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         bernpoly (Suc n) (x - real_of_int (k - 1))) has_real_derivative\n     real (Suc n) * bernpoly n (x - real_of_int (k - 1)))\n     (at_left x)", "by (auto intro!: derivative_eq_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       bernpoly (Suc n) (x - real_of_int (k - 1))) has_real_derivative\n   real (Suc n) * bernpoly n (x - real_of_int (k - 1)))\n   (at_left x)\n\ngoal (2 subgoals):\n 1. (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at_left x)\n 2. (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at_right x)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       bernpoly (Suc n) (x - real_of_int (k - 1))) has_real_derivative\n   real (Suc n) * bernpoly n (x - real_of_int (k - 1)))\n   (at_left x)\n\ngoal (2 subgoals):\n 1. (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at_left x)\n 2. (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at_right x)", "have \"?this \\<longleftrightarrow> (pbernpoly (Suc n) has_field_derivative \n                            real (Suc n) * pbernpoly n x) (at_left x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         bernpoly (Suc n) (x - real_of_int (k - 1))) has_real_derivative\n     real (Suc n) * bernpoly n (x - real_of_int (k - 1)))\n     (at_left x) =\n    (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at_left x)", "using assms"], ["proof (prove)\nusing this:\n  2 \\<le> n \\<or> x \\<notin> \\<int>\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         bernpoly (Suc n) (x - real_of_int (k - 1))) has_real_derivative\n     real (Suc n) * bernpoly n (x - real_of_int (k - 1)))\n     (at_left x) =\n    (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at_left x)", "proof (intro has_field_derivative_cong_ev' refl)"], ["proof (state)\ngoal (3 subgoals):\n 1. 2 \\<le> n \\<or> x \\<notin> \\<int> \\<Longrightarrow>\n    \\<forall>\\<^sub>F xa in nhds x.\n       xa \\<in> {..<x} \\<longrightarrow>\n       bernpoly (Suc n) (xa - real_of_int (k - 1)) = pbernpoly (Suc n) xa\n 2. 2 \\<le> n \\<or> x \\<notin> \\<int> \\<Longrightarrow>\n    real (Suc n) * bernpoly n (x - real_of_int (k - 1)) =\n    real (Suc n) * pbernpoly n x\n 3. 2 \\<le> n \\<or> x \\<notin> \\<int> \\<Longrightarrow>\n    bernpoly (Suc n) (x - real_of_int (k - 1)) = pbernpoly (Suc n) x", "have \"\\<forall>\\<^sub>F y in nhds x. y \\<in> {x - 1<..<x + 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in nhds x. y \\<in> {x - 1<..<x + 1}", "by (intro eventually_nhds_in_open) simp_all"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in nhds x. y \\<in> {x - 1<..<x + 1}\n\ngoal (3 subgoals):\n 1. 2 \\<le> n \\<or> x \\<notin> \\<int> \\<Longrightarrow>\n    \\<forall>\\<^sub>F xa in nhds x.\n       xa \\<in> {..<x} \\<longrightarrow>\n       bernpoly (Suc n) (xa - real_of_int (k - 1)) = pbernpoly (Suc n) xa\n 2. 2 \\<le> n \\<or> x \\<notin> \\<int> \\<Longrightarrow>\n    real (Suc n) * bernpoly n (x - real_of_int (k - 1)) =\n    real (Suc n) * pbernpoly n x\n 3. 2 \\<le> n \\<or> x \\<notin> \\<int> \\<Longrightarrow>\n    bernpoly (Suc n) (x - real_of_int (k - 1)) = pbernpoly (Suc n) x", "thus \"\\<forall>\\<^sub>F t in nhds x. t \\<in> {..<x} \\<longrightarrow> bernpoly (Suc n) (t - real_of_int (k - 1)) =\n                pbernpoly (Suc n) t\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in nhds x. y \\<in> {x - 1<..<x + 1}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in nhds x.\n       t \\<in> {..<x} \\<longrightarrow>\n       bernpoly (Suc n) (t - real_of_int (k - 1)) = pbernpoly (Suc n) t", "proof (elim eventually_mono, safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> {x - 1<..<x + 1};\n        \\<forall>\\<^sub>F y in nhds x. y \\<in> {x - 1<..<x + 1};\n        xa < x\\<rbrakk>\n       \\<Longrightarrow> bernpoly (Suc n) (xa - real_of_int (k - 1)) =\n                         pbernpoly (Suc n) xa", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> {x - 1<..<x + 1};\n        \\<forall>\\<^sub>F y in nhds x. y \\<in> {x - 1<..<x + 1};\n        xa < x\\<rbrakk>\n       \\<Longrightarrow> bernpoly (Suc n) (xa - real_of_int (k - 1)) =\n                         pbernpoly (Suc n) xa", "assume \"t < x\" \"t \\<in> {x-1<..<x+1}\""], ["proof (state)\nthis:\n  t < x\n  t \\<in> {x - 1<..<x + 1}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> {x - 1<..<x + 1};\n        \\<forall>\\<^sub>F y in nhds x. y \\<in> {x - 1<..<x + 1};\n        xa < x\\<rbrakk>\n       \\<Longrightarrow> bernpoly (Suc n) (xa - real_of_int (k - 1)) =\n                         pbernpoly (Suc n) xa", "hence \"frac t = t - real_of_int (k - 1)\""], ["proof (prove)\nusing this:\n  t < x\n  t \\<in> {x - 1<..<x + 1}\n\ngoal (1 subgoal):\n 1. frac t = t - real_of_int (k - 1)", "using k"], ["proof (prove)\nusing this:\n  t < x\n  t \\<in> {x - 1<..<x + 1}\n  x = real_of_int k\n\ngoal (1 subgoal):\n 1. frac t = t - real_of_int (k - 1)", "by (subst frac_unique_iff) auto"], ["proof (state)\nthis:\n  frac t = t - real_of_int (k - 1)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> {x - 1<..<x + 1};\n        \\<forall>\\<^sub>F y in nhds x. y \\<in> {x - 1<..<x + 1};\n        xa < x\\<rbrakk>\n       \\<Longrightarrow> bernpoly (Suc n) (xa - real_of_int (k - 1)) =\n                         pbernpoly (Suc n) xa", "thus \"bernpoly (Suc n) (t - real_of_int (k - 1)) = pbernpoly (Suc n) t\""], ["proof (prove)\nusing this:\n  frac t = t - real_of_int (k - 1)\n\ngoal (1 subgoal):\n 1. bernpoly (Suc n) (t - real_of_int (k - 1)) = pbernpoly (Suc n) t", "by (simp add: pbernpoly_def)"], ["proof (state)\nthis:\n  bernpoly (Suc n) (t - real_of_int (k - 1)) = pbernpoly (Suc n) t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in nhds x.\n     t \\<in> {..<x} \\<longrightarrow>\n     bernpoly (Suc n) (t - real_of_int (k - 1)) = pbernpoly (Suc n) t\n\ngoal (2 subgoals):\n 1. 2 \\<le> n \\<or> x \\<notin> \\<int> \\<Longrightarrow>\n    real (Suc n) * bernpoly n (x - real_of_int (k - 1)) =\n    real (Suc n) * pbernpoly n x\n 2. 2 \\<le> n \\<or> x \\<notin> \\<int> \\<Longrightarrow>\n    bernpoly (Suc n) (x - real_of_int (k - 1)) = pbernpoly (Suc n) x", "qed (insert k, auto simp: pbernpoly_def bernpoly_1)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       bernpoly (Suc n) (x - real_of_int (k - 1))) has_real_derivative\n   real (Suc n) * bernpoly n (x - real_of_int (k - 1)))\n   (at_left x) =\n  (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n   (at_left x)\n\ngoal (2 subgoals):\n 1. (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at_left x)\n 2. (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at_right x)", "finally"], ["proof (chain)\npicking this:\n  (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n   (at_left x)", "show \"(pbernpoly (Suc n) has_real_derivative \n                      real (Suc n) * pbernpoly n x) (at_left x)\""], ["proof (prove)\nusing this:\n  (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n   (at_left x)\n\ngoal (1 subgoal):\n 1. (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at_left x)", "."], ["proof (state)\nthis:\n  (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n   (at_left x)\n\ngoal (1 subgoal):\n 1. (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at_right x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at_right x)", "have \"((\\<lambda>x. bernpoly (Suc n) (x - of_int k)) has_field_derivative\n                  real (Suc n) * bernpoly n (x - of_int k)) (at_right x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. bernpoly (Suc n) (x - real_of_int k)) has_real_derivative\n     real (Suc n) * bernpoly n (x - real_of_int k))\n     (at_right x)", "by (auto intro!: derivative_eq_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>x. bernpoly (Suc n) (x - real_of_int k)) has_real_derivative\n   real (Suc n) * bernpoly n (x - real_of_int k))\n   (at_right x)\n\ngoal (1 subgoal):\n 1. (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at_right x)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. bernpoly (Suc n) (x - real_of_int k)) has_real_derivative\n   real (Suc n) * bernpoly n (x - real_of_int k))\n   (at_right x)\n\ngoal (1 subgoal):\n 1. (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at_right x)", "have \"?this \\<longleftrightarrow> (pbernpoly (Suc n) has_field_derivative \n                            real (Suc n) * pbernpoly n x) (at_right x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. bernpoly (Suc n) (x - real_of_int k)) has_real_derivative\n     real (Suc n) * bernpoly n (x - real_of_int k))\n     (at_right x) =\n    (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at_right x)", "using assms"], ["proof (prove)\nusing this:\n  2 \\<le> n \\<or> x \\<notin> \\<int>\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. bernpoly (Suc n) (x - real_of_int k)) has_real_derivative\n     real (Suc n) * bernpoly n (x - real_of_int k))\n     (at_right x) =\n    (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at_right x)", "proof (intro has_field_derivative_cong_ev' refl)"], ["proof (state)\ngoal (3 subgoals):\n 1. 2 \\<le> n \\<or> x \\<notin> \\<int> \\<Longrightarrow>\n    \\<forall>\\<^sub>F xa in nhds x.\n       xa \\<in> {x<..} \\<longrightarrow>\n       bernpoly (Suc n) (xa - real_of_int k) = pbernpoly (Suc n) xa\n 2. 2 \\<le> n \\<or> x \\<notin> \\<int> \\<Longrightarrow>\n    real (Suc n) * bernpoly n (x - real_of_int k) =\n    real (Suc n) * pbernpoly n x\n 3. 2 \\<le> n \\<or> x \\<notin> \\<int> \\<Longrightarrow>\n    bernpoly (Suc n) (x - real_of_int k) = pbernpoly (Suc n) x", "have \"\\<forall>\\<^sub>F y in nhds x. y \\<in> {x - 1<..<x + 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in nhds x. y \\<in> {x - 1<..<x + 1}", "by (intro eventually_nhds_in_open) simp_all"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in nhds x. y \\<in> {x - 1<..<x + 1}\n\ngoal (3 subgoals):\n 1. 2 \\<le> n \\<or> x \\<notin> \\<int> \\<Longrightarrow>\n    \\<forall>\\<^sub>F xa in nhds x.\n       xa \\<in> {x<..} \\<longrightarrow>\n       bernpoly (Suc n) (xa - real_of_int k) = pbernpoly (Suc n) xa\n 2. 2 \\<le> n \\<or> x \\<notin> \\<int> \\<Longrightarrow>\n    real (Suc n) * bernpoly n (x - real_of_int k) =\n    real (Suc n) * pbernpoly n x\n 3. 2 \\<le> n \\<or> x \\<notin> \\<int> \\<Longrightarrow>\n    bernpoly (Suc n) (x - real_of_int k) = pbernpoly (Suc n) x", "thus \"\\<forall>\\<^sub>F t in nhds x. t \\<in> {x<..} \\<longrightarrow> bernpoly (Suc n) (t - real_of_int k) =\n                pbernpoly (Suc n) t\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in nhds x. y \\<in> {x - 1<..<x + 1}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in nhds x.\n       t \\<in> {x<..} \\<longrightarrow>\n       bernpoly (Suc n) (t - real_of_int k) = pbernpoly (Suc n) t", "proof (elim eventually_mono, safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> {x - 1<..<x + 1};\n        \\<forall>\\<^sub>F y in nhds x. y \\<in> {x - 1<..<x + 1};\n        x < xa\\<rbrakk>\n       \\<Longrightarrow> bernpoly (Suc n) (xa - real_of_int k) =\n                         pbernpoly (Suc n) xa", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> {x - 1<..<x + 1};\n        \\<forall>\\<^sub>F y in nhds x. y \\<in> {x - 1<..<x + 1};\n        x < xa\\<rbrakk>\n       \\<Longrightarrow> bernpoly (Suc n) (xa - real_of_int k) =\n                         pbernpoly (Suc n) xa", "assume \"t > x\" \"t \\<in> {x-1<..<x+1}\""], ["proof (state)\nthis:\n  x < t\n  t \\<in> {x - 1<..<x + 1}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> {x - 1<..<x + 1};\n        \\<forall>\\<^sub>F y in nhds x. y \\<in> {x - 1<..<x + 1};\n        x < xa\\<rbrakk>\n       \\<Longrightarrow> bernpoly (Suc n) (xa - real_of_int k) =\n                         pbernpoly (Suc n) xa", "hence \"frac t = t - real_of_int k\""], ["proof (prove)\nusing this:\n  x < t\n  t \\<in> {x - 1<..<x + 1}\n\ngoal (1 subgoal):\n 1. frac t = t - real_of_int k", "using k"], ["proof (prove)\nusing this:\n  x < t\n  t \\<in> {x - 1<..<x + 1}\n  x = real_of_int k\n\ngoal (1 subgoal):\n 1. frac t = t - real_of_int k", "by (subst frac_unique_iff) auto"], ["proof (state)\nthis:\n  frac t = t - real_of_int k\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> {x - 1<..<x + 1};\n        \\<forall>\\<^sub>F y in nhds x. y \\<in> {x - 1<..<x + 1};\n        x < xa\\<rbrakk>\n       \\<Longrightarrow> bernpoly (Suc n) (xa - real_of_int k) =\n                         pbernpoly (Suc n) xa", "thus \"bernpoly (Suc n) (t - real_of_int k) = pbernpoly (Suc n) t\""], ["proof (prove)\nusing this:\n  frac t = t - real_of_int k\n\ngoal (1 subgoal):\n 1. bernpoly (Suc n) (t - real_of_int k) = pbernpoly (Suc n) t", "by (simp add: pbernpoly_def)"], ["proof (state)\nthis:\n  bernpoly (Suc n) (t - real_of_int k) = pbernpoly (Suc n) t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in nhds x.\n     t \\<in> {x<..} \\<longrightarrow>\n     bernpoly (Suc n) (t - real_of_int k) = pbernpoly (Suc n) t\n\ngoal (2 subgoals):\n 1. 2 \\<le> n \\<or> x \\<notin> \\<int> \\<Longrightarrow>\n    real (Suc n) * bernpoly n (x - real_of_int k) =\n    real (Suc n) * pbernpoly n x\n 2. 2 \\<le> n \\<or> x \\<notin> \\<int> \\<Longrightarrow>\n    bernpoly (Suc n) (x - real_of_int k) = pbernpoly (Suc n) x", "qed (insert k, auto simp: pbernpoly_def bernpoly_1)"], ["proof (state)\nthis:\n  ((\\<lambda>x. bernpoly (Suc n) (x - real_of_int k)) has_real_derivative\n   real (Suc n) * bernpoly n (x - real_of_int k))\n   (at_right x) =\n  (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n   (at_right x)\n\ngoal (1 subgoal):\n 1. (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at_right x)", "finally"], ["proof (chain)\npicking this:\n  (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n   (at_right x)", "show \"(pbernpoly (Suc n) has_real_derivative \n                      real (Suc n) * pbernpoly n x) (at_right x)\""], ["proof (prove)\nusing this:\n  (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n   (at_right x)\n\ngoal (1 subgoal):\n 1. (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at_right x)", "."], ["proof (state)\nthis:\n  (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n   (at_right x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n   (at x within {..<x} \\<union> {x<..})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>2 \\<le> n \\<or> x \\<notin> \\<int>; x \\<in> \\<int>\\<rbrakk>\n    \\<Longrightarrow> (pbernpoly (Suc n) has_real_derivative\n                       real (Suc n) * pbernpoly n x)\n                       (at x)", "also"], ["proof (state)\nthis:\n  (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n   (at x within {..<x} \\<union> {x<..})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>2 \\<le> n \\<or> x \\<notin> \\<int>; x \\<in> \\<int>\\<rbrakk>\n    \\<Longrightarrow> (pbernpoly (Suc n) has_real_derivative\n                       real (Suc n) * pbernpoly n x)\n                       (at x)", "have \"{..<x} \\<union> {x<..} = UNIV - {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..<x} \\<union> {x<..} = UNIV - {x}", "by auto"], ["proof (state)\nthis:\n  {..<x} \\<union> {x<..} = UNIV - {x}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>2 \\<le> n \\<or> x \\<notin> \\<int>; x \\<in> \\<int>\\<rbrakk>\n    \\<Longrightarrow> (pbernpoly (Suc n) has_real_derivative\n                       real (Suc n) * pbernpoly n x)\n                       (at x)", "also"], ["proof (state)\nthis:\n  {..<x} \\<union> {x<..} = UNIV - {x}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>2 \\<le> n \\<or> x \\<notin> \\<int>; x \\<in> \\<int>\\<rbrakk>\n    \\<Longrightarrow> (pbernpoly (Suc n) has_real_derivative\n                       real (Suc n) * pbernpoly n x)\n                       (at x)", "have \"at x within \\<dots> = at x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at x within UNIV - {x} = at x", "by (simp add: at_within_def)"], ["proof (state)\nthis:\n  at x within UNIV - {x} = at x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>2 \\<le> n \\<or> x \\<notin> \\<int>; x \\<in> \\<int>\\<rbrakk>\n    \\<Longrightarrow> (pbernpoly (Suc n) has_real_derivative\n                       real (Suc n) * pbernpoly n x)\n                       (at x)", "finally"], ["proof (chain)\npicking this:\n  (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n   (at x)", "show ?thesis"], ["proof (prove)\nusing this:\n  (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n   (at x)\n\ngoal (1 subgoal):\n 1. (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n     (at x)", "."], ["proof (state)\nthis:\n  (pbernpoly (Suc n) has_real_derivative real (Suc n) * pbernpoly n x)\n   (at x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas has_field_derivative_pbernpoly_Suc' =\n  DERIV_chain'[OF _ has_field_derivative_pbernpoly_Suc]"], ["", "lemma bounded_pbernpoly: obtains c where \"\\<And>x. norm (pbernpoly n x) \\<le> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>x. norm (pbernpoly n x) \\<le> c) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>x. norm (pbernpoly n x) \\<le> c) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"\\<exists>x\\<in>{0..1}. \\<forall>y\\<in>{0..1}. norm (bernpoly n y :: real) \\<le> norm (bernpoly n x :: real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>{0..1}.\n       \\<forall>y\\<in>{0..1}. norm (bernpoly n y) \\<le> norm (bernpoly n x)", "by (intro continuous_attains_sup) (auto intro!: continuous_intros)"], ["proof (state)\nthis:\n  \\<exists>x\\<in>{0..1}.\n     \\<forall>y\\<in>{0..1}. norm (bernpoly n y) \\<le> norm (bernpoly n x)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>x. norm (pbernpoly n x) \\<le> c) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>x\\<in>{0..1}.\n     \\<forall>y\\<in>{0..1}. norm (bernpoly n y) \\<le> norm (bernpoly n x)", "obtain x where x: \n    \"\\<And>y. y \\<in> {0..1} \\<Longrightarrow> norm (bernpoly n y :: real) \\<le> norm (bernpoly n x :: real)\""], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>{0..1}.\n     \\<forall>y\\<in>{0..1}. norm (bernpoly n y) \\<le> norm (bernpoly n x)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        (\\<And>y.\n            y \\<in> {0..1} \\<Longrightarrow>\n            norm (bernpoly n y) \\<le> norm (bernpoly n x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ?y \\<in> {0..1} \\<Longrightarrow>\n  norm (bernpoly n ?y) \\<le> norm (bernpoly n x)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>x. norm (pbernpoly n x) \\<le> c) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"norm (pbernpoly n y) \\<le> norm (bernpoly n x :: real)\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (pbernpoly n y) \\<le> norm (bernpoly n x)", "unfolding pbernpoly_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (bernpoly n (frac y)) \\<le> norm (bernpoly n x)", "using frac_lt_1[of y]"], ["proof (prove)\nusing this:\n  frac y < 1\n\ngoal (1 subgoal):\n 1. norm (bernpoly n (frac y)) \\<le> norm (bernpoly n x)", "by (intro x) simp_all"], ["proof (state)\nthis:\n  norm (pbernpoly n ?y) \\<le> norm (bernpoly n x)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>x. norm (pbernpoly n x) \\<le> c) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  norm (pbernpoly n ?y) \\<le> norm (bernpoly n x)\n\ngoal (1 subgoal):\n 1. thesis", "by (rule that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}