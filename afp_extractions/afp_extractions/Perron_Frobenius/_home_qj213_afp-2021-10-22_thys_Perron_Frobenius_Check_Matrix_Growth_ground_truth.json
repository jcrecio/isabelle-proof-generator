{"file_name": "/home/qj213/afp-2021-10-22/thys/Perron_Frobenius/Check_Matrix_Growth.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Perron_Frobenius", "problem_names": ["lemma check_matrix_complexity: assumes A: \"A \\<in> carrier_mat n n\" and nn: \"nonneg_mat A\" \n  and check: \"check_matrix_complexity A (char_poly A) d\" \nshows \"\\<exists>c1 c2. \\<forall>k a. a \\<in> elements_mat (A ^\\<^sub>m k) \\<longrightarrow> abs a \\<le> (c1 + c2 * of_nat k ^ d)\""], "translations": [["", "lemma check_matrix_complexity: assumes A: \"A \\<in> carrier_mat n n\" and nn: \"nonneg_mat A\" \n  and check: \"check_matrix_complexity A (char_poly A) d\" \nshows \"\\<exists>c1 c2. \\<forall>k a. a \\<in> elements_mat (A ^\\<^sub>m k) \\<longrightarrow> abs a \\<le> (c1 + c2 * of_nat k ^ d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k a.\n          a \\<in> elements_mat (A ^\\<^sub>m k) \\<longrightarrow>\n          \\<bar>a\\<bar> \\<le> c1 + c2 * real k ^ d", "proof (rule jnf_complexity_1_real[OF A nn])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. poly (char_poly A) x = 0 \\<Longrightarrow> x \\<le> 1\n 2. \\<lbrakk>poly (char_poly A) 1 = 0;\n     d + 1 < order 1 (char_poly A)\\<rbrakk>\n    \\<Longrightarrow> dim_gen_eigenspace A 1 (d + 1) = order 1 (char_poly A)", "have id: \"dim_gen_eigenspace A 1 (d + 1) = kernel_dim ((A - 1\\<^sub>m (dim_row A)) ^\\<^sub>m (d + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_gen_eigenspace A 1 (d + 1) =\n    kernel_dim ((A - 1\\<^sub>m (dim_row A)) ^\\<^sub>m (d + 1))", "unfolding dim_gen_eigenspace_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. kernel_dim (char_matrix A 1 ^\\<^sub>m (d + 1)) =\n    kernel_dim ((A - 1\\<^sub>m (dim_row A)) ^\\<^sub>m (d + 1))", "by (rule arg_cong[of _ _ \"\\<lambda> x. kernel_dim (x ^\\<^sub>m (d + 1))\"], unfold char_matrix_def, insert A, auto)"], ["proof (state)\nthis:\n  dim_gen_eigenspace A 1 (d + 1) =\n  kernel_dim ((A - 1\\<^sub>m (dim_row A)) ^\\<^sub>m (d + 1))\n\ngoal (2 subgoals):\n 1. \\<And>x. poly (char_poly A) x = 0 \\<Longrightarrow> x \\<le> 1\n 2. \\<lbrakk>poly (char_poly A) 1 = 0;\n     d + 1 < order 1 (char_poly A)\\<rbrakk>\n    \\<Longrightarrow> dim_gen_eigenspace A 1 (d + 1) = order 1 (char_poly A)", "note check = check[unfolded check_matrix_complexity_def \n      Let_def count_roots_above_correct, folded id]"], ["proof (state)\nthis:\n  card {x. 1 < x \\<and> poly (char_poly A) x = 0} = 0 \\<and>\n  (poly (char_poly A) 1 = 0 \\<longrightarrow>\n   d + 1 < order 1 (char_poly A) \\<longrightarrow>\n   dim_gen_eigenspace A 1 (d + 1) = order 1 (char_poly A))\n\ngoal (2 subgoals):\n 1. \\<And>x. poly (char_poly A) x = 0 \\<Longrightarrow> x \\<le> 1\n 2. \\<lbrakk>poly (char_poly A) 1 = 0;\n     d + 1 < order 1 (char_poly A)\\<rbrakk>\n    \\<Longrightarrow> dim_gen_eigenspace A 1 (d + 1) = order 1 (char_poly A)", "have fin: \"finite {x. poly (char_poly A) x = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {x. poly (char_poly A) x = 0}", "by (rule poly_roots_finite, insert degree_monic_char_poly[OF A], auto)"], ["proof (state)\nthis:\n  finite {x. poly (char_poly A) x = 0}\n\ngoal (2 subgoals):\n 1. \\<And>x. poly (char_poly A) x = 0 \\<Longrightarrow> x \\<le> 1\n 2. \\<lbrakk>poly (char_poly A) 1 = 0;\n     d + 1 < order 1 (char_poly A)\\<rbrakk>\n    \\<Longrightarrow> dim_gen_eigenspace A 1 (d + 1) = order 1 (char_poly A)", "from check"], ["proof (chain)\npicking this:\n  card {x. 1 < x \\<and> poly (char_poly A) x = 0} = 0 \\<and>\n  (poly (char_poly A) 1 = 0 \\<longrightarrow>\n   d + 1 < order 1 (char_poly A) \\<longrightarrow>\n   dim_gen_eigenspace A 1 (d + 1) = order 1 (char_poly A))", "have \"card {x. 1 < x \\<and> poly (char_poly A) x = 0} = 0\""], ["proof (prove)\nusing this:\n  card {x. 1 < x \\<and> poly (char_poly A) x = 0} = 0 \\<and>\n  (poly (char_poly A) 1 = 0 \\<longrightarrow>\n   d + 1 < order 1 (char_poly A) \\<longrightarrow>\n   dim_gen_eigenspace A 1 (d + 1) = order 1 (char_poly A))\n\ngoal (1 subgoal):\n 1. card {x. 1 < x \\<and> poly (char_poly A) x = 0} = 0", "by auto"], ["proof (state)\nthis:\n  card {x. 1 < x \\<and> poly (char_poly A) x = 0} = 0\n\ngoal (2 subgoals):\n 1. \\<And>x. poly (char_poly A) x = 0 \\<Longrightarrow> x \\<le> 1\n 2. \\<lbrakk>poly (char_poly A) 1 = 0;\n     d + 1 < order 1 (char_poly A)\\<rbrakk>\n    \\<Longrightarrow> dim_gen_eigenspace A 1 (d + 1) = order 1 (char_poly A)", "from this[unfolded card_eq_0_iff] fin"], ["proof (chain)\npicking this:\n  {x. 1 < x \\<and> poly (char_poly A) x = 0} = {} \\<or>\n  infinite {x. 1 < x \\<and> poly (char_poly A) x = 0}\n  finite {x. poly (char_poly A) x = 0}", "have \"{x. 1 < x \\<and> poly (char_poly A) x = 0} = {}\""], ["proof (prove)\nusing this:\n  {x. 1 < x \\<and> poly (char_poly A) x = 0} = {} \\<or>\n  infinite {x. 1 < x \\<and> poly (char_poly A) x = 0}\n  finite {x. poly (char_poly A) x = 0}\n\ngoal (1 subgoal):\n 1. {x. 1 < x \\<and> poly (char_poly A) x = 0} = {}", "by auto"], ["proof (state)\nthis:\n  {x. 1 < x \\<and> poly (char_poly A) x = 0} = {}\n\ngoal (2 subgoals):\n 1. \\<And>x. poly (char_poly A) x = 0 \\<Longrightarrow> x \\<le> 1\n 2. \\<lbrakk>poly (char_poly A) 1 = 0;\n     d + 1 < order 1 (char_poly A)\\<rbrakk>\n    \\<Longrightarrow> dim_gen_eigenspace A 1 (d + 1) = order 1 (char_poly A)", "thus \"poly (char_poly A) x = 0 \\<Longrightarrow> x \\<le> 1\" for x"], ["proof (prove)\nusing this:\n  {x. 1 < x \\<and> poly (char_poly A) x = 0} = {}\n\ngoal (1 subgoal):\n 1. poly (char_poly A) x = 0 \\<Longrightarrow> x \\<le> 1", "by force"], ["proof (state)\nthis:\n  poly (char_poly A) ?x = 0 \\<Longrightarrow> ?x \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>poly (char_poly A) 1 = 0;\n     d + 1 < order 1 (char_poly A)\\<rbrakk>\n    \\<Longrightarrow> dim_gen_eigenspace A 1 (d + 1) = order 1 (char_poly A)", "assume \"poly (char_poly A) 1 = 0\" \"d + 1 < order 1 (char_poly A)\""], ["proof (state)\nthis:\n  poly (char_poly A) 1 = 0\n  d + 1 < order 1 (char_poly A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>poly (char_poly A) 1 = 0;\n     d + 1 < order 1 (char_poly A)\\<rbrakk>\n    \\<Longrightarrow> dim_gen_eigenspace A 1 (d + 1) = order 1 (char_poly A)", "with check"], ["proof (chain)\npicking this:\n  card {x. 1 < x \\<and> poly (char_poly A) x = 0} = 0 \\<and>\n  (poly (char_poly A) 1 = 0 \\<longrightarrow>\n   d + 1 < order 1 (char_poly A) \\<longrightarrow>\n   dim_gen_eigenspace A 1 (d + 1) = order 1 (char_poly A))\n  poly (char_poly A) 1 = 0\n  d + 1 < order 1 (char_poly A)", "show \"dim_gen_eigenspace A 1 (d + 1) = order 1 (char_poly A)\""], ["proof (prove)\nusing this:\n  card {x. 1 < x \\<and> poly (char_poly A) x = 0} = 0 \\<and>\n  (poly (char_poly A) 1 = 0 \\<longrightarrow>\n   d + 1 < order 1 (char_poly A) \\<longrightarrow>\n   dim_gen_eigenspace A 1 (d + 1) = order 1 (char_poly A))\n  poly (char_poly A) 1 = 0\n  d + 1 < order 1 (char_poly A)\n\ngoal (1 subgoal):\n 1. dim_gen_eigenspace A 1 (d + 1) = order 1 (char_poly A)", "by auto"], ["proof (state)\nthis:\n  dim_gen_eigenspace A 1 (d + 1) = order 1 (char_poly A)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}