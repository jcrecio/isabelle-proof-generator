{"file_name": "/home/qj213/afp-2021-10-22/thys/PAC_Checker/PAC_Polynomials_Term.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/PAC_Checker", "problem_names": ["lemma fref_to_Down_curry_left:\n  fixes f:: \\<open>'a \\<Rightarrow> 'b \\<Rightarrow> 'c nres\\<close> and\n    A::\\<open>(('a \\<times> 'b) \\<times> 'd) set\\<close>\n  shows\n    \\<open>(uncurry f, g) \\<in> [P]\\<^sub>f A \\<rightarrow> \\<langle>B\\<rangle>nres_rel \\<Longrightarrow>\n      (\\<And>a b x'. P x' \\<Longrightarrow> ((a, b), x') \\<in> A \\<Longrightarrow> f a b \\<le> \\<Down> B (g x'))\\<close>", "lemma fref_to_Down_curry_right:\n  fixes g :: \\<open>'a \\<Rightarrow> 'b \\<Rightarrow> 'c nres\\<close> and f :: \\<open>'d \\<Rightarrow> _ nres\\<close> and\n    A::\\<open>('d \\<times> ('a \\<times> 'b)) set\\<close>\n  shows\n    \\<open>(f, uncurry g) \\<in> [P]\\<^sub>f A \\<rightarrow> \\<langle>B\\<rangle>nres_rel \\<Longrightarrow>\n      (\\<And>a b x'. P (a,b) \\<Longrightarrow> (x', (a, b)) \\<in> A \\<Longrightarrow> f x' \\<le> \\<Down> B (g a b))\\<close>", "lemma less_than_char_def:\n  \\<open>(x,y) \\<in> less_than_char \\<longleftrightarrow> less_char x y\\<close>", "lemma trans_less_than_char[simp]:\n    \\<open>trans less_than_char\\<close> and\n  irrefl_less_than_char:\n    \\<open>irrefl less_than_char\\<close> and\n  antisym_less_than_char:\n    \\<open>antisym less_than_char\\<close>", "lemma sorted_poly_list_rel_empty_l[simp]:\n  \\<open>([], s') \\<in> sorted_poly_list_rel_wrt S T \\<longleftrightarrow> s' = {#}\\<close>", "lemma fully_unsorted_poly_list_rel_empty_iff[simp]:\n  \\<open>(p, {#}) \\<in> fully_unsorted_poly_list_rel R \\<longleftrightarrow> p = []\\<close>\n  \\<open>([], p') \\<in> fully_unsorted_poly_list_rel R \\<longleftrightarrow> p' = {#}\\<close>", "lemma poly_list_rel_with0_empty_iff[simp]:\n  \\<open>(p, {#}) \\<in> poly_list_rel_with0 R \\<longleftrightarrow> p = []\\<close>\n  \\<open>([], p') \\<in> poly_list_rel_with0 R \\<longleftrightarrow> p' = {#}\\<close>", "lemma term_poly_list_relD:\n  \\<open>(xs, ys) \\<in> term_poly_list_rel \\<Longrightarrow> distinct xs\\<close>\n  \\<open>(xs, ys) \\<in> term_poly_list_rel \\<Longrightarrow> ys = mset xs\\<close>\n  \\<open>(xs, ys) \\<in> term_poly_list_rel \\<Longrightarrow> sorted_wrt (rel2p var_order_rel) xs\\<close>\n  \\<open>(xs, ys) \\<in> term_poly_list_rel \\<Longrightarrow> sorted_wrt (rel2p (Id \\<union> var_order_rel)) xs\\<close>"], "translations": [["", "lemma fref_to_Down_curry_left:\n  fixes f:: \\<open>'a \\<Rightarrow> 'b \\<Rightarrow> 'c nres\\<close> and\n    A::\\<open>(('a \\<times> 'b) \\<times> 'd) set\\<close>\n  shows\n    \\<open>(uncurry f, g) \\<in> [P]\\<^sub>f A \\<rightarrow> \\<langle>B\\<rangle>nres_rel \\<Longrightarrow>\n      (\\<And>a b x'. P x' \\<Longrightarrow> ((a, b), x') \\<in> A \\<Longrightarrow> f a b \\<le> \\<Down> B (g x'))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (uncurry f, g)\n    \\<in> [P]\\<^sub>f A \\<rightarrow> \\<langle>B\\<rangle>nres_rel \\<Longrightarrow>\n    (\\<And>a b x'.\n        \\<lbrakk>P x'; ((a, b), x') \\<in> A\\<rbrakk>\n        \\<Longrightarrow> f a b \\<le> \\<Down> B (g x'))", "unfolding fref_def uncurry_def nres_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(a, b). f a b, g)\n    \\<in> {(f, g).\n           \\<forall>x y.\n              P y \\<and> (x, y) \\<in> A \\<longrightarrow>\n              (f x, g y)\n              \\<in> {(c, a). c \\<le> \\<Down> B a}} \\<Longrightarrow>\n    (\\<And>a b x'.\n        \\<lbrakk>P x'; ((a, b), x') \\<in> A\\<rbrakk>\n        \\<Longrightarrow> f a b \\<le> \\<Down> B (g x'))", "by auto"], ["", "lemma fref_to_Down_curry_right:\n  fixes g :: \\<open>'a \\<Rightarrow> 'b \\<Rightarrow> 'c nres\\<close> and f :: \\<open>'d \\<Rightarrow> _ nres\\<close> and\n    A::\\<open>('d \\<times> ('a \\<times> 'b)) set\\<close>\n  shows\n    \\<open>(f, uncurry g) \\<in> [P]\\<^sub>f A \\<rightarrow> \\<langle>B\\<rangle>nres_rel \\<Longrightarrow>\n      (\\<And>a b x'. P (a,b) \\<Longrightarrow> (x', (a, b)) \\<in> A \\<Longrightarrow> f x' \\<le> \\<Down> B (g a b))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f, uncurry g)\n    \\<in> [P]\\<^sub>f A \\<rightarrow> \\<langle>B\\<rangle>nres_rel \\<Longrightarrow>\n    (\\<And>a b x'.\n        \\<lbrakk>P (a, b); (x', a, b) \\<in> A\\<rbrakk>\n        \\<Longrightarrow> f x' \\<le> \\<Down> B (g a b))", "unfolding fref_def uncurry_def nres_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f, \\<lambda>(a, b). g a b)\n    \\<in> {(f, g).\n           \\<forall>x y.\n              P y \\<and> (x, y) \\<in> A \\<longrightarrow>\n              (f x, g y)\n              \\<in> {(c, a). c \\<le> \\<Down> B a}} \\<Longrightarrow>\n    (\\<And>a b x'.\n        \\<lbrakk>P (a, b); (x', a, b) \\<in> A\\<rbrakk>\n        \\<Longrightarrow> f x' \\<le> \\<Down> B (g a b))", "by auto"], ["", "type_synonym term_poly_list = \\<open>string list\\<close>"], ["", "type_synonym llist_polynomial = \\<open>(term_poly_list \\<times> int) list\\<close>"], ["", "text \\<open>We instantiate the characters with typeclass linorder to be able to talk abourt sorted and\n  so on.\\<close>"], ["", "definition less_eq_char :: \\<open>char \\<Rightarrow> char \\<Rightarrow> bool\\<close> where\n  \\<open>less_eq_char c d = (((of_char c) :: nat) \\<le> of_char d)\\<close>"], ["", "definition less_char :: \\<open>char \\<Rightarrow> char \\<Rightarrow> bool\\<close> where\n  \\<open>less_char c d = (((of_char c) :: nat) < of_char d)\\<close>"], ["", "global_interpretation char: linorder less_eq_char less_char"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.linorder less_eq_char less_char", "using linorder_char"], ["proof (prove)\nusing this:\n  class.linorder (\\<lambda>c d. of_char c \\<le> of_char d)\n   (\\<lambda>c d. of_char c < of_char d)\n\ngoal (1 subgoal):\n 1. class.linorder less_eq_char less_char", "unfolding linorder_class_def class.linorder_def\n    less_eq_char_def[symmetric] less_char_def[symmetric]\n    class.order_def order_class_def\n    class.preorder_def preorder_class_def\n    ord_class_def"], ["proof (prove)\nusing this:\n  (((\\<forall>x y.\n        less_char x y =\n        Restricted_Predicates.strict less_eq_char x y) \\<and>\n    (\\<forall>x. less_eq_char x x) \\<and>\n    (\\<forall>x y z.\n        less_eq_char x y \\<longrightarrow>\n        less_eq_char y z \\<longrightarrow> less_eq_char x z)) \\<and>\n   class.order_axioms less_eq_char) \\<and>\n  class.linorder_axioms less_eq_char\n\ngoal (1 subgoal):\n 1. (((\\<forall>x y.\n          less_char x y =\n          Restricted_Predicates.strict less_eq_char x y) \\<and>\n      (\\<forall>x. less_eq_char x x) \\<and>\n      (\\<forall>x y z.\n          less_eq_char x y \\<longrightarrow>\n          less_eq_char y z \\<longrightarrow> less_eq_char x z)) \\<and>\n     class.order_axioms less_eq_char) \\<and>\n    class.linorder_axioms less_eq_char", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "abbreviation less_than_char :: \\<open>(char \\<times> char) set\\<close> where\n  \\<open>less_than_char \\<equiv> p2rel less_char\\<close>"], ["", "lemma less_than_char_def:\n  \\<open>(x,y) \\<in> less_than_char \\<longleftrightarrow> less_char x y\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> less_than_char) = less_char x y", "by (auto simp: p2rel_def)"], ["", "lemma trans_less_than_char[simp]:\n    \\<open>trans less_than_char\\<close> and\n  irrefl_less_than_char:\n    \\<open>irrefl less_than_char\\<close> and\n  antisym_less_than_char:\n    \\<open>antisym less_than_char\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. trans less_than_char &&&\n    irrefl less_than_char &&& antisym less_than_char", "by (auto simp: less_than_char_def trans_def irrefl_def antisym_def)"], ["", "subsection \\<open>Polynomials\\<close>"], ["", "definition var_order_rel :: \\<open>(string \\<times> string) set\\<close> where\n  \\<open>var_order_rel \\<equiv> lexord less_than_char\\<close>"], ["", "abbreviation var_order :: \\<open>string \\<Rightarrow> string \\<Rightarrow> bool\\<close> where\n  \\<open>var_order \\<equiv> rel2p var_order_rel\\<close>"], ["", "abbreviation term_order_rel :: \\<open>(term_poly_list \\<times> term_poly_list) set\\<close> where\n  \\<open>term_order_rel \\<equiv> lexord var_order_rel\\<close>"], ["", "abbreviation term_order :: \\<open>term_poly_list \\<Rightarrow> term_poly_list \\<Rightarrow> bool\\<close> where\n  \\<open>term_order \\<equiv> rel2p term_order_rel\\<close>"], ["", "definition term_poly_list_rel :: \\<open>(term_poly_list \\<times> term_poly) set\\<close> where\n  \\<open>term_poly_list_rel = {(xs, ys).\n     ys = mset xs \\<and>\n     distinct xs \\<and>\n     sorted_wrt (rel2p var_order_rel) xs}\\<close>"], ["", "definition unsorted_term_poly_list_rel :: \\<open>(term_poly_list \\<times> term_poly) set\\<close> where\n  \\<open>unsorted_term_poly_list_rel = {(xs, ys).\n     ys = mset xs \\<and> distinct xs}\\<close>"], ["", "definition poly_list_rel :: \\<open>_ \\<Rightarrow> (('a \\<times> int) list \\<times> mset_polynomial) set\\<close> where\n  \\<open>poly_list_rel R = {(xs, ys).\n     (xs, ys) \\<in> \\<langle>R \\<times>\\<^sub>r int_rel\\<rangle>list_rel O list_mset_rel \\<and>\n     0 \\<notin># snd `# ys}\\<close>"], ["", "definition sorted_poly_list_rel_wrt :: \\<open>('a \\<Rightarrow> 'a \\<Rightarrow> bool)\n     \\<Rightarrow> ('a \\<times> string multiset) set \\<Rightarrow> (('a \\<times> int) list \\<times> mset_polynomial) set\\<close> where\n  \\<open>sorted_poly_list_rel_wrt S R = {(xs, ys).\n     (xs, ys) \\<in> \\<langle>R \\<times>\\<^sub>r int_rel\\<rangle>list_rel O list_mset_rel \\<and>\n     sorted_wrt S (map fst xs) \\<and>\n     distinct (map fst xs) \\<and>\n     0 \\<notin># snd `# ys}\\<close>"], ["", "abbreviation sorted_poly_list_rel where\n  \\<open>sorted_poly_list_rel R \\<equiv> sorted_poly_list_rel_wrt R term_poly_list_rel\\<close>"], ["", "abbreviation sorted_poly_rel where\n  \\<open>sorted_poly_rel \\<equiv> sorted_poly_list_rel term_order\\<close>"], ["", "definition sorted_repeat_poly_list_rel_wrt :: \\<open>('a \\<Rightarrow> 'a \\<Rightarrow> bool)\n     \\<Rightarrow> ('a \\<times> string multiset) set \\<Rightarrow> (('a \\<times> int) list \\<times> mset_polynomial) set\\<close> where\n  \\<open>sorted_repeat_poly_list_rel_wrt S R = {(xs, ys).\n     (xs, ys) \\<in> \\<langle>R \\<times>\\<^sub>r int_rel\\<rangle>list_rel O list_mset_rel \\<and>\n     sorted_wrt S (map fst xs) \\<and>\n     0 \\<notin># snd `# ys}\\<close>"], ["", "abbreviation sorted_repeat_poly_list_rel where\n  \\<open>sorted_repeat_poly_list_rel R \\<equiv> sorted_repeat_poly_list_rel_wrt R term_poly_list_rel\\<close>"], ["", "abbreviation sorted_repeat_poly_rel where\n  \\<open>sorted_repeat_poly_rel \\<equiv> sorted_repeat_poly_list_rel (rel2p (Id \\<union> lexord var_order_rel))\\<close>"], ["", "abbreviation unsorted_poly_rel where\n  \\<open>unsorted_poly_rel \\<equiv> poly_list_rel term_poly_list_rel\\<close>"], ["", "lemma sorted_poly_list_rel_empty_l[simp]:\n  \\<open>([], s') \\<in> sorted_poly_list_rel_wrt S T \\<longleftrightarrow> s' = {#}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (([], s') \\<in> sorted_poly_list_rel_wrt S T) = (s' = {#})", "by (cases s')\n    (auto simp: sorted_poly_list_rel_wrt_def list_mset_rel_def br_def)"], ["", "definition fully_unsorted_poly_list_rel :: \\<open>_ \\<Rightarrow> (('a \\<times> int) list \\<times> mset_polynomial) set\\<close> where\n  \\<open>fully_unsorted_poly_list_rel R = {(xs, ys).\n     (xs, ys) \\<in> \\<langle>R \\<times>\\<^sub>r int_rel\\<rangle>list_rel O list_mset_rel}\\<close>"], ["", "abbreviation fully_unsorted_poly_rel where\n  \\<open>fully_unsorted_poly_rel \\<equiv> fully_unsorted_poly_list_rel unsorted_term_poly_list_rel\\<close>"], ["", "lemma fully_unsorted_poly_list_rel_empty_iff[simp]:\n  \\<open>(p, {#}) \\<in> fully_unsorted_poly_list_rel R \\<longleftrightarrow> p = []\\<close>\n  \\<open>([], p') \\<in> fully_unsorted_poly_list_rel R \\<longleftrightarrow> p' = {#}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((p, {#}) \\<in> fully_unsorted_poly_list_rel R) = (p = []) &&&\n    (([], p') \\<in> fully_unsorted_poly_list_rel R) = (p' = {#})", "by (auto simp: fully_unsorted_poly_list_rel_def list_mset_rel_def br_def)"], ["", "definition poly_list_rel_with0 :: \\<open>_ \\<Rightarrow> (('a \\<times> int) list \\<times> mset_polynomial) set\\<close> where\n  \\<open>poly_list_rel_with0 R = {(xs, ys).\n     (xs, ys) \\<in> \\<langle>R \\<times>\\<^sub>r int_rel\\<rangle>list_rel O list_mset_rel}\\<close>"], ["", "abbreviation unsorted_poly_rel_with0 where\n  \\<open>unsorted_poly_rel_with0 \\<equiv> fully_unsorted_poly_list_rel term_poly_list_rel\\<close>"], ["", "lemma poly_list_rel_with0_empty_iff[simp]:\n  \\<open>(p, {#}) \\<in> poly_list_rel_with0 R \\<longleftrightarrow> p = []\\<close>\n  \\<open>([], p') \\<in> poly_list_rel_with0 R \\<longleftrightarrow> p' = {#}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((p, {#}) \\<in> poly_list_rel_with0 R) = (p = []) &&&\n    (([], p') \\<in> poly_list_rel_with0 R) = (p' = {#})", "by (auto simp: poly_list_rel_with0_def list_mset_rel_def br_def)"], ["", "definition sorted_repeat_poly_list_rel_with0_wrt :: \\<open>('a \\<Rightarrow> 'a \\<Rightarrow> bool)\n     \\<Rightarrow> ('a \\<times> string multiset) set \\<Rightarrow> (('a \\<times> int) list \\<times> mset_polynomial) set\\<close> where\n  \\<open>sorted_repeat_poly_list_rel_with0_wrt S R = {(xs, ys).\n     (xs, ys) \\<in> \\<langle>R \\<times>\\<^sub>r int_rel\\<rangle>list_rel O list_mset_rel \\<and>\n     sorted_wrt S (map fst xs)}\\<close>"], ["", "abbreviation sorted_repeat_poly_list_rel_with0 where\n  \\<open>sorted_repeat_poly_list_rel_with0 R \\<equiv> sorted_repeat_poly_list_rel_with0_wrt R term_poly_list_rel\\<close>"], ["", "abbreviation sorted_repeat_poly_rel_with0 where\n  \\<open>sorted_repeat_poly_rel_with0 \\<equiv> sorted_repeat_poly_list_rel_with0 (rel2p (Id \\<union> lexord var_order_rel))\\<close>"], ["", "lemma term_poly_list_relD:\n  \\<open>(xs, ys) \\<in> term_poly_list_rel \\<Longrightarrow> distinct xs\\<close>\n  \\<open>(xs, ys) \\<in> term_poly_list_rel \\<Longrightarrow> ys = mset xs\\<close>\n  \\<open>(xs, ys) \\<in> term_poly_list_rel \\<Longrightarrow> sorted_wrt (rel2p var_order_rel) xs\\<close>\n  \\<open>(xs, ys) \\<in> term_poly_list_rel \\<Longrightarrow> sorted_wrt (rel2p (Id \\<union> var_order_rel)) xs\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (((xs, ys) \\<in> term_poly_list_rel \\<Longrightarrow> distinct xs) &&&\n     ((xs, ys) \\<in> term_poly_list_rel \\<Longrightarrow> ys = mset xs)) &&&\n    ((xs, ys) \\<in> term_poly_list_rel \\<Longrightarrow>\n     sorted_wrt var_order xs) &&&\n    ((xs, ys) \\<in> term_poly_list_rel \\<Longrightarrow>\n     sorted_wrt (rel2p (Id \\<union> var_order_rel)) xs)", "apply (auto simp: term_poly_list_rel_def; fail)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. (xs, ys) \\<in> term_poly_list_rel \\<Longrightarrow>\n    sorted_wrt (rel2p (Id \\<union> var_order_rel)) xs", "by (metis (mono_tags, lifting) CollectD UnI2 rel2p_def sorted_wrt_mono_rel split_conv\n    term_poly_list_rel_def)"], ["", "end"]]}