{"file_name": "/home/qj213/afp-2021-10-22/thys/PAC_Checker/PAC_Checker.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/PAC_Checker", "problem_names": ["lemma in_code_status_status_rel_iff[simp]:\n  \\<open>(CFOUND, b) \\<in> code_status_status_rel \\<longleftrightarrow> b = FOUND\\<close>\n  \\<open>(a, FOUND) \\<in> code_status_status_rel \\<longleftrightarrow> a = CFOUND\\<close>\n  \\<open>(CSUCCESS, b) \\<in> code_status_status_rel \\<longleftrightarrow> b = SUCCESS\\<close>\n  \\<open>(a, SUCCESS) \\<in> code_status_status_rel \\<longleftrightarrow> a = CSUCCESS\\<close>\n  \\<open>(a, FAILED) \\<in> code_status_status_rel \\<longleftrightarrow> is_cfailed a\\<close>\n  \\<open>(CFAILED C, b) \\<in> code_status_status_rel \\<longleftrightarrow> b = FAILED\\<close>", "lemma pac_step_rel_assn_alt_def:\n  \\<open>pac_step_rel_assn R1 R2 R3 x y = (\n  case (x, y) of\n      (Add p1 p2 i r, Add p1' p2' i' r') \\<Rightarrow>\n        R1 p1 p1' * R1 p2 p2' * R1 i i' * R2 r r'\n    | (Mult p1 p2 i r, Mult p1' p2' i' r') \\<Rightarrow>\n        R1 p1 p1' * R2 p2 p2' * R1 i i' * R2 r r'\n    | (Del p1, Del p1') \\<Rightarrow> R1 p1 p1'\n    | (Extension i x p1, Extension i' x' p1') \\<Rightarrow> R1 i i' * R3 x x' * R2 p1 p1'\n    | _ \\<Rightarrow> false)\\<close>", "lemma check_extension_alt_def:\n  \\<open>check_extension A \\<V> i v p \\<ge> do {\n    b \\<leftarrow> SPEC(\\<lambda>b. b \\<longrightarrow> i \\<notin># dom_m A \\<and> v \\<notin> \\<V>);\n    if \\<not>b\n    then RETURN (False)\n    else do {\n         p' \\<leftarrow> RETURN (p + Var v);\n         b \\<leftarrow> SPEC(\\<lambda>b. b \\<longrightarrow> vars p' \\<subseteq> \\<V>);\n         if \\<not>b\n         then RETURN (False)\n         else do {\n           pq \\<leftarrow> mult_poly_spec p' p';\n           let p' = - p';\n           p \\<leftarrow> add_poly_spec pq p';\n           eq \\<leftarrow> weak_equality p 0;\n           if eq then RETURN(True)\n           else RETURN (False)\n       }\n     }\n   }\\<close>", "lemma RES_RES_RETURN_RES: \\<open>RES A \\<bind> (\\<lambda>T. RES (f T)) = RES (\\<Union>(f ` A))\\<close>", "lemma check_add_alt_def:\n  \\<open>check_add A \\<V> p q i r \\<ge>\n    do {\n     b \\<leftarrow> SPEC(\\<lambda>b. b \\<longrightarrow> p \\<in># dom_m A \\<and> q \\<in># dom_m A \\<and> i \\<notin># dom_m A \\<and> vars r \\<subseteq> \\<V>);\n     if \\<not>b\n     then RETURN False\n     else do {\n       ASSERT (p \\<in># dom_m A);\n       let p = the (fmlookup A p);\n       ASSERT (q \\<in># dom_m A);\n       let q = the (fmlookup A q);\n       pq \\<leftarrow> add_poly_spec p q;\n       eq \\<leftarrow> weak_equality pq r;\n       RETURN eq\n     }\n  }\\<close> (is \\<open>_ \\<ge> ?A\\<close>)", "lemma check_mult_alt_def:\n  \\<open>check_mult A \\<V> p q i r \\<ge>\n    do {\n     b \\<leftarrow> SPEC(\\<lambda>b. b \\<longrightarrow> p \\<in># dom_m A \\<and> i \\<notin># dom_m A \\<and> vars q \\<subseteq> \\<V>  \\<and> vars r \\<subseteq> \\<V>);\n     if \\<not>b\n     then RETURN False\n     else do {\n       ASSERT (p \\<in># dom_m A);\n       let p = the (fmlookup A p);\n       pq \\<leftarrow> mult_poly_spec p q;\n       p \\<leftarrow> weak_equality pq r;\n       RETURN p\n     }\n  }\\<close>", "lemma set_insort_key_rel[simp]: \\<open>set (insort_key_rel R x xs) = insert x (set xs)\\<close>", "lemma sorted_wrt_insort_key_rel:\n   \\<open>total_on R (insert x (set xs)) \\<Longrightarrow> transp R \\<Longrightarrow> reflp R \\<Longrightarrow>\n    sorted_wrt R xs \\<Longrightarrow> sorted_wrt R (insort_key_rel R x xs)\\<close>", "lemma sorted_wrt_insort_key_rel2:\n   \\<open>total_on R (insert x (set xs)) \\<Longrightarrow> transp R \\<Longrightarrow> x \\<notin> set xs \\<Longrightarrow>\n    sorted_wrt R xs \\<Longrightarrow> sorted_wrt R (insort_key_rel R x xs)\\<close>", "lemma pac_step_rel_raw_def:\n  \\<open>\\<langle>K, V, R\\<rangle> pac_step_rel_raw = pac_step_rel_raw K V R\\<close>", "lemma\n  \\<open>normalize_poly_p s0 s \\<Longrightarrow>\n        (s0, p) \\<in> mset_poly_rel \\<Longrightarrow>\n        (s, p) \\<in> mset_poly_rel\\<close>", "lemma vars_poly_of_vars:\n  \\<open>vars (poly_of_vars a :: int mpoly) \\<subseteq> (\\<phi> ` set_mset a)\\<close>", "lemma vars_polynomial_of_mset:\n  \\<open>vars (polynomial_of_mset za) \\<subseteq> \\<Union>(image \\<phi> ` (set_mset o fst) ` set_mset za)\\<close>", "lemma fully_unsorted_poly_rel_vars_subset_vars_llist:\n  \\<open>(A, B) \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<Longrightarrow> vars B \\<subseteq> \\<phi> ` vars_llist A\\<close>", "lemma fully_unsorted_poly_rel_extend_vars:\n  \\<open>(A, B) \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n  (x1c, x1a) \\<in> \\<langle>var_rel\\<rangle>set_rel \\<Longrightarrow>\n   RETURN (x1c \\<union> vars_llist A)\n    \\<le> \\<Down> (\\<langle>var_rel\\<rangle>set_rel)\n       (SPEC ((\\<subseteq>) (x1a \\<union> vars (B))))\\<close>", "lemma remap_polys_l_remap_polys:\n  assumes\n    AB: \\<open>(A, B) \\<in> \\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\\<close> and\n    spec: \\<open>(spec, spec') \\<in> sorted_poly_rel O mset_poly_rel\\<close> and\n    V: \\<open>(\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<close>\n  shows \\<open>remap_polys_l spec \\<V> A \\<le>\n     \\<Down>(code_status_status_rel \\<times>\\<^sub>r \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r fmap_polys_rel) (remap_polys spec' \\<V>' B)\\<close>\n  (is \\<open>_ \\<le> \\<Down> ?R _\\<close>)", "lemma fref_to_Down_curry:\n  \\<open>(uncurry f, uncurry g) \\<in> [P]\\<^sub>f A \\<rightarrow> \\<langle>B\\<rangle>nres_rel \\<Longrightarrow>\n     (\\<And>x x' y y'. P (x', y') \\<Longrightarrow> ((x, y), (x', y')) \\<in> A \\<Longrightarrow> f x y \\<le> \\<Down> B (g x' y'))\\<close>", "lemma weak_equality_spec_weak_equality:\n  \\<open>(p, p') \\<in> mset_poly_rel \\<Longrightarrow>\n    (r, r') \\<in> mset_poly_rel \\<Longrightarrow>\n    weak_equality_spec p r \\<le> weak_equality p' r'\\<close>", "lemma weak_equality_l_weak_equality_l'[refine]:\n  \\<open>weak_equality_l p q \\<le> \\<Down> bool_rel (weak_equality p' q')\\<close>\n  if \\<open>(p, p') \\<in> sorted_poly_rel O mset_poly_rel\\<close>\n    \\<open>(q, q') \\<in> sorted_poly_rel O mset_poly_rel\\<close>\n  for p p' q q'", "lemma error_msg_ne_SUCCES[iff]:\n  \\<open>error_msg i m \\<noteq> CSUCCESS\\<close>\n  \\<open>error_msg i m \\<noteq> CFOUND\\<close>\n  \\<open>is_cfailed (error_msg i m)\\<close>\n  \\<open>\\<not>is_cfound (error_msg i m)\\<close>", "lemma sorted_poly_rel_vars_llist:\n  \\<open>(r, r') \\<in> sorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n   vars r' \\<subseteq> \\<phi> ` vars_llist r\\<close>", "lemma check_addition_l_check_add:\n  assumes \\<open>(A, B) \\<in> fmap_polys_rel\\<close> and \\<open>(r, r') \\<in> sorted_poly_rel O mset_poly_rel\\<close>\n    \\<open>(p, p') \\<in> Id\\<close> \\<open>(q, q') \\<in> Id\\<close> \\<open>(i, i') \\<in> nat_rel\\<close>\n    \\<open>(\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel\\<close>\n  shows\n    \\<open>check_addition_l spec A \\<V>' p q i r \\<le> \\<Down> {(st, b). (\\<not>is_cfailed st \\<longleftrightarrow> b) \\<and>\n       (is_cfound st \\<longrightarrow> spec = r)} (check_add B \\<V> p' q' i' r')\\<close>", "lemma check_del_l_check_del:\n  \\<open>(A, B) \\<in> fmap_polys_rel \\<Longrightarrow> (x3, x3a) \\<in> Id \\<Longrightarrow> check_del_l spec A (pac_src1 (Del x3))\n    \\<le> \\<Down> {(st, b). (\\<not>is_cfailed st \\<longleftrightarrow> b) \\<and> (b \\<longrightarrow> st = CSUCCESS)} (check_del B (pac_src1 (Del x3a)))\\<close>", "lemma check_mult_l_check_mult:\n  assumes \\<open>(A, B) \\<in> fmap_polys_rel\\<close> and \\<open>(r, r') \\<in> sorted_poly_rel O mset_poly_rel\\<close> and\n    \\<open>(q, q') \\<in> sorted_poly_rel O mset_poly_rel\\<close>\n    \\<open>(p, p') \\<in> Id\\<close> \\<open>(i, i') \\<in> nat_rel\\<close> \\<open>(\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<close>\n  shows\n    \\<open>check_mult_l spec A \\<V> p q i r \\<le> \\<Down>  {(st, b). (\\<not>is_cfailed st \\<longleftrightarrow> b) \\<and>\n       (is_cfound st \\<longrightarrow> spec = r)} (check_mult B \\<V>' p' q' i' r')\\<close>", "lemma normalize_poly_normalize_poly_spec:\n  assumes \\<open>(r, t) \\<in> unsorted_poly_rel O mset_poly_rel\\<close>\n  shows\n    \\<open>normalize_poly r \\<le> \\<Down>(sorted_poly_rel O mset_poly_rel) (normalize_poly_spec t)\\<close>", "lemma remove1_list_rel:\n  \\<open>(xs, ys) \\<in> \\<langle>R\\<rangle> list_rel \\<Longrightarrow>\n  (a, b) \\<in> R \\<Longrightarrow>\n  IS_RIGHT_UNIQUE R \\<Longrightarrow>\n  IS_LEFT_UNIQUE R \\<Longrightarrow>\n  (remove1 a xs, remove1 b ys) \\<in> \\<langle>R\\<rangle>list_rel\\<close>", "lemma remove1_list_rel2:\n  \\<open>(xs, ys) \\<in> \\<langle>R\\<rangle> list_rel \\<Longrightarrow>\n  (a, b) \\<in> R \\<Longrightarrow>\n  (\\<And>c. (a, c) \\<in> R \\<Longrightarrow> c = b) \\<Longrightarrow>\n  (\\<And>c. (c, b) \\<in> R \\<Longrightarrow> c = a) \\<Longrightarrow>\n  (remove1 a xs, remove1 b ys) \\<in> \\<langle>R\\<rangle>list_rel\\<close>", "lemma remove1_sorted_poly_rel_mset_poly_rel:\n  assumes\n    \\<open>(r, r') \\<in> sorted_poly_rel O mset_poly_rel\\<close> and\n    \\<open>([a], 1) \\<in> set r\\<close>\n  shows\n    \\<open>(remove1 ([a], 1) r, r' - Var (\\<phi> a))\n          \\<in> sorted_poly_rel O mset_poly_rel\\<close>", "lemma remove1_sorted_poly_rel_mset_poly_rel_minus:\n  assumes\n    \\<open>(r, r') \\<in> sorted_poly_rel O mset_poly_rel\\<close> and\n    \\<open>([a], -1) \\<in> set r\\<close>\n  shows\n    \\<open>(remove1 ([a], -1) r, r' + Var (\\<phi> a))\n          \\<in> sorted_poly_rel O mset_poly_rel\\<close>", "lemma insert_var_rel_set_rel:\n  \\<open>(\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel \\<Longrightarrow>\n  (yb, x2) \\<in> var_rel \\<Longrightarrow>\n  (insert yb \\<V>, insert x2 \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<close>", "lemma var_rel_set_rel_iff:\n  \\<open>(\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel \\<Longrightarrow>\n  (yb, x2) \\<in> var_rel \\<Longrightarrow>\n  yb \\<in> \\<V> \\<longleftrightarrow> x2 \\<in>  \\<V>'\\<close>", "lemma check_extension_l_check_extension:\n  assumes \\<open>(A, B) \\<in> fmap_polys_rel\\<close> and \\<open>(r, r') \\<in> sorted_poly_rel O mset_poly_rel\\<close> and\n    \\<open>(i, i') \\<in> nat_rel\\<close> \\<open>(\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<close> \\<open>(x, x') \\<in> var_rel\\<close>\n  shows\n    \\<open>check_extension_l spec A \\<V> i x r \\<le>\n      \\<Down>{((st), (b)).\n        (\\<not>is_cfailed st \\<longleftrightarrow> b) \\<and>\n       (is_cfound st \\<longrightarrow> spec = r)} (check_extension B \\<V>' i' x' r')\\<close>", "lemma full_normalize_poly_diff_ideal:\n  fixes dom\n  assumes \\<open>(p, p') \\<in> fully_unsorted_poly_rel O mset_poly_rel\\<close>\n  shows\n    \\<open>full_normalize_poly p\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel)\n       (normalize_poly_spec p')\\<close>", "lemma insort_key_rel_decomp:\n   \\<open>\\<exists>ys zs. xs = ys @ zs \\<and> insort_key_rel R x xs = ys @ x # zs\\<close>", "lemma list_rel_append_same_length:\n   \\<open>length xs = length xs' \\<Longrightarrow> (xs @ ys, xs' @ ys') \\<in> \\<langle>R\\<rangle>list_rel \\<longleftrightarrow> (xs, xs') \\<in> \\<langle>R\\<rangle>list_rel \\<and> (ys, ys') \\<in> \\<langle>R\\<rangle>list_rel\\<close>", "lemma term_poly_list_rel_list_relD: \\<open>(ys, cs) \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel \\<Longrightarrow>\n       cs = map (\\<lambda>(a, y). (mset a, y)) ys\\<close>", "lemma term_poly_list_rel_single: \\<open>([x32], {#x32#}) \\<in> term_poly_list_rel\\<close>", "lemma unsorted_poly_rel_list_rel_list_rel_uminus:\n   \\<open>(map (\\<lambda>(a, b). (a, - b)) r, yc)\n       \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel \\<Longrightarrow>\n       (r, map (\\<lambda>(a, b). (a, - b)) yc)\n       \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel\\<close>", "lemma mset_poly_rel_minus: \\<open>({#(a, b)#}, v') \\<in> mset_poly_rel \\<Longrightarrow>\n       (mset yc, r') \\<in> mset_poly_rel \\<Longrightarrow>\n       (r, yc)\n       \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel \\<Longrightarrow>\n       (add_mset (a, b) (mset yc),\n        v' + r')\n       \\<in> mset_poly_rel\\<close>", "lemma fully_unsorted_poly_rel_diff:\n   \\<open>([v], v') \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n   (r, r') \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n    (v # r,\n     v' + r')\n    \\<in> fully_unsorted_poly_rel O mset_poly_rel\\<close>", "lemma PAC_checker_l_step_PAC_checker_step:\n  assumes\n    \\<open>(Ast, Bst) \\<in> code_status_status_rel \\<times>\\<^sub>r \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r fmap_polys_rel\\<close> and\n    \\<open>(st, st') \\<in> pac_step_rel\\<close> and\n    spec: \\<open>(spec, spec') \\<in> sorted_poly_rel O mset_poly_rel\\<close>\n  shows\n    \\<open>PAC_checker_l_step spec Ast st \\<le> \\<Down> (code_status_status_rel \\<times>\\<^sub>r \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r fmap_polys_rel) (PAC_checker_step spec' Bst st')\\<close>", "lemma code_status_status_rel_discrim_iff:\n  \\<open>(x1a, x1c) \\<in> code_status_status_rel \\<Longrightarrow> is_cfailed x1a \\<longleftrightarrow> is_failed x1c\\<close>\n  \\<open>(x1a, x1c) \\<in> code_status_status_rel \\<Longrightarrow> is_cfound x1a \\<longleftrightarrow> is_found x1c\\<close>", "lemma PAC_checker_l_PAC_checker:\n  assumes\n    \\<open>(A, B) \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r fmap_polys_rel\\<close> and\n    \\<open>(st, st') \\<in> \\<langle>pac_step_rel\\<rangle>list_rel\\<close> and\n    \\<open>(spec, spec') \\<in> sorted_poly_rel O mset_poly_rel\\<close> and\n    \\<open>(b, b') \\<in> code_status_status_rel\\<close>\n  shows\n    \\<open>PAC_checker_l spec A b st \\<le> \\<Down> (code_status_status_rel \\<times>\\<^sub>r \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r fmap_polys_rel) (PAC_checker spec' B b' st')\\<close>", "lemma less_than_char_of_char[code_unfold]:\n  \\<open>(x, y) \\<in> less_than_char \\<longleftrightarrow> (of_char x :: nat) < of_char y\\<close>", "lemmas [code] =\n  add_poly_l'.simps[unfolded var_order_rel_def]", "lemma full_checker_l_full_checker:\n assumes\n    \\<open>(A, B) \\<in> unsorted_fmap_polys_rel\\<close> and\n    \\<open>(st, st') \\<in> \\<langle>pac_step_rel\\<rangle>list_rel\\<close> and\n    \\<open>(spec, spec') \\<in> fully_unsorted_poly_rel O mset_poly_rel\\<close>\n  shows\n    \\<open>full_checker_l spec A st \\<le> \\<Down> (code_status_status_rel \\<times>\\<^sub>r \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r fmap_polys_rel) (full_checker spec' B st')\\<close>", "lemma full_checker_l_full_checker':\n  \\<open>(uncurry2 full_checker_l, uncurry2 full_checker) \\<in>\n  ((fully_unsorted_poly_rel O mset_poly_rel) \\<times>\\<^sub>r unsorted_fmap_polys_rel) \\<times>\\<^sub>r \\<langle>pac_step_rel\\<rangle>list_rel \\<rightarrow>\\<^sub>f\n    \\<langle>(code_status_status_rel \\<times>\\<^sub>r \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r fmap_polys_rel)\\<rangle>nres_rel\\<close>", "lemma remap_polys_l2_remap_polys_l:\n  \\<open>remap_polys_l2 spec \\<V> A \\<le> \\<Down> Id (remap_polys_l spec \\<V> A)\\<close>"], "translations": [["", "lemma in_code_status_status_rel_iff[simp]:\n  \\<open>(CFOUND, b) \\<in> code_status_status_rel \\<longleftrightarrow> b = FOUND\\<close>\n  \\<open>(a, FOUND) \\<in> code_status_status_rel \\<longleftrightarrow> a = CFOUND\\<close>\n  \\<open>(CSUCCESS, b) \\<in> code_status_status_rel \\<longleftrightarrow> b = SUCCESS\\<close>\n  \\<open>(a, SUCCESS) \\<in> code_status_status_rel \\<longleftrightarrow> a = CSUCCESS\\<close>\n  \\<open>(a, FAILED) \\<in> code_status_status_rel \\<longleftrightarrow> is_cfailed a\\<close>\n  \\<open>(CFAILED C, b) \\<in> code_status_status_rel \\<longleftrightarrow> b = FAILED\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (((CFOUND, b) \\<in> code_status_status_rel) = (b = FOUND) &&&\n     ((a, FOUND) \\<in> code_status_status_rel) = (a = CFOUND) &&&\n     ((CSUCCESS, b) \\<in> code_status_status_rel) = (b = SUCCESS)) &&&\n    ((a, SUCCESS) \\<in> code_status_status_rel) = (a = CSUCCESS) &&&\n    ((a, FAILED) \\<in> code_status_status_rel) = is_cfailed a &&&\n    ((CFAILED C, b) \\<in> code_status_status_rel) = (b = FAILED)", "by (cases a; cases b; auto simp: code_status_status_rel_def; fail)+"], ["", "paragraph \\<open>Refinement relation\\<close>"], ["", "fun pac_step_rel_raw :: \\<open>('olbl \\<times> 'lbl) set \\<Rightarrow> ('a \\<times> 'b) set \\<Rightarrow> ('c \\<times> 'd) set \\<Rightarrow> ('a, 'c, 'olbl) pac_step \\<Rightarrow> ('b, 'd, 'lbl) pac_step \\<Rightarrow> bool\\<close> where\n\\<open>pac_step_rel_raw R1 R2 R3 (Add p1 p2 i r) (Add p1' p2' i' r') \\<longleftrightarrow>\n   (p1, p1') \\<in> R1 \\<and> (p2, p2') \\<in> R1 \\<and> (i, i') \\<in> R1 \\<and>\n   (r, r') \\<in> R2\\<close> |\n\\<open>pac_step_rel_raw R1 R2 R3 (Mult p1 p2 i r) (Mult p1' p2' i' r') \\<longleftrightarrow>\n   (p1, p1') \\<in> R1 \\<and> (p2, p2') \\<in> R2 \\<and> (i, i') \\<in> R1 \\<and>\n   (r, r') \\<in> R2\\<close> |\n\\<open>pac_step_rel_raw R1 R2 R3 (Del p1) (Del p1') \\<longleftrightarrow>\n   (p1, p1') \\<in> R1\\<close> |\n\\<open>pac_step_rel_raw R1 R2 R3 (Extension i x p1) (Extension j x' p1') \\<longleftrightarrow>\n   (i, j) \\<in> R1 \\<and> (x, x') \\<in> R3 \\<and> (p1, p1') \\<in> R2\\<close> |\n\\<open>pac_step_rel_raw R1 R2 R3 _ _ \\<longleftrightarrow> False\\<close>"], ["", "fun pac_step_rel_assn :: \\<open>('olbl \\<Rightarrow> 'lbl \\<Rightarrow> assn) \\<Rightarrow> ('a \\<Rightarrow> 'b \\<Rightarrow> assn) \\<Rightarrow> ('c \\<Rightarrow> 'd \\<Rightarrow> assn) \\<Rightarrow> ('a, 'c, 'olbl) pac_step \\<Rightarrow> ('b, 'd, 'lbl) pac_step \\<Rightarrow> assn\\<close> where\n\\<open>pac_step_rel_assn R1 R2 R3 (Add p1 p2 i r) (Add p1' p2' i' r') =\n   R1 p1 p1' * R1 p2 p2' * R1 i i' *\n   R2 r r'\\<close> |\n\\<open>pac_step_rel_assn R1 R2 R3 (Mult p1 p2 i r) (Mult p1' p2' i' r') =\n   R1 p1 p1' * R2 p2 p2' * R1 i i' *\n   R2 r r'\\<close> |\n\\<open>pac_step_rel_assn R1 R2 R3 (Del p1) (Del p1') =\n   R1 p1 p1'\\<close> |\n\\<open>pac_step_rel_assn R1 R2 R3 (Extension i x p1) (Extension i' x' p1') =\n   R1 i i' * R3 x x' * R2 p1 p1'\\<close> |\n\\<open>pac_step_rel_assn R1 R2 _ _ _ = false\\<close>"], ["", "lemma pac_step_rel_assn_alt_def:\n  \\<open>pac_step_rel_assn R1 R2 R3 x y = (\n  case (x, y) of\n      (Add p1 p2 i r, Add p1' p2' i' r') \\<Rightarrow>\n        R1 p1 p1' * R1 p2 p2' * R1 i i' * R2 r r'\n    | (Mult p1 p2 i r, Mult p1' p2' i' r') \\<Rightarrow>\n        R1 p1 p1' * R2 p2 p2' * R1 i i' * R2 r r'\n    | (Del p1, Del p1') \\<Rightarrow> R1 p1 p1'\n    | (Extension i x p1, Extension i' x' p1') \\<Rightarrow> R1 i i' * R3 x x' * R2 p1 p1'\n    | _ \\<Rightarrow> false)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. pac_step_rel_assn R1 R2 R3 x y =\n    (case (x, y) of\n     (Add p1 p2 i r, Add p1' p2' i' r') \\<Rightarrow>\n       R1 p1 p1' * R1 p2 p2' * R1 i i' * R2 r r'\n     | (Add p1 p2 i r, _) \\<Rightarrow> false\n     | (Mult p1 p2 i r, Mult p1' p2' i' r') \\<Rightarrow>\n         R1 p1 p1' * R2 p2 p2' * R1 i i' * R2 r r'\n     | (Mult p1 p2 i r, _) \\<Rightarrow> false\n     | (Extension i x p1, Extension i' x' p1') \\<Rightarrow>\n         R1 i i' * R3 x x' * R2 p1 p1'\n     | (Extension i x p1, _) \\<Rightarrow> false\n     | (Del p1, Del p1') \\<Rightarrow> R1 p1 p1'\n     | (Del p1, _) \\<Rightarrow> false)", "by (auto split: pac_step.splits)"], ["", "paragraph \\<open>Addition checking\\<close>"], ["", "definition error_msg where\n  \\<open>error_msg i msg = CFAILED (''s CHECKING failed at line '' @ show i @ '' with error '' @ msg)\\<close>"], ["", "definition error_msg_notin_dom_err where\n  \\<open>error_msg_notin_dom_err = '' notin domain''\\<close>"], ["", "definition error_msg_notin_dom :: \\<open>nat \\<Rightarrow> string\\<close> where\n  \\<open>error_msg_notin_dom i = show i @ error_msg_notin_dom_err\\<close>"], ["", "definition error_msg_reused_dom where\n  \\<open>error_msg_reused_dom i = show i @ '' already in domain''\\<close>"], ["", "definition error_msg_not_equal_dom where\n  \\<open>error_msg_not_equal_dom p q pq r = show p @ '' + '' @ show q @ '' = '' @ show pq @ '' not equal'' @ show r\\<close>"], ["", "definition check_not_equal_dom_err :: \\<open>llist_polynomial \\<Rightarrow> llist_polynomial \\<Rightarrow> llist_polynomial \\<Rightarrow> llist_polynomial \\<Rightarrow> string nres\\<close> where\n  \\<open>check_not_equal_dom_err p q pq r = SPEC (\\<lambda>_. True)\\<close>"], ["", "definition vars_llist :: \\<open>llist_polynomial \\<Rightarrow> string set\\<close> where\n\\<open>vars_llist  xs = \\<Union>(set ` fst ` set xs)\\<close>"], ["", "definition check_addition_l :: \\<open>_ \\<Rightarrow> _ \\<Rightarrow> string set \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> llist_polynomial \\<Rightarrow> string code_status nres\\<close> where\n\\<open>check_addition_l spec A \\<V> p q i r = do {\n   let b = p \\<in># dom_m A \\<and> q \\<in># dom_m A \\<and> i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>;\n   if \\<not>b\n   then RETURN (error_msg i ((if p \\<notin># dom_m A then error_msg_notin_dom p else []) @ (if q \\<notin># dom_m A then error_msg_notin_dom p else []) @\n      (if i \\<in># dom_m A then error_msg_reused_dom p else [])))\n   else do {\n     ASSERT (p \\<in># dom_m A);\n     let p = the (fmlookup A p);\n     ASSERT (q \\<in># dom_m A);\n     let q = the (fmlookup A q);\n     pq \\<leftarrow> add_poly_l (p, q);\n     b \\<leftarrow> weak_equality_l pq r;\n     b' \\<leftarrow> weak_equality_l r spec;\n     if b then (if b' then RETURN CFOUND else RETURN CSUCCESS)\n     else do {\n       c \\<leftarrow> check_not_equal_dom_err p q pq r;\n       RETURN (error_msg i c)}\n   }\n}\\<close>"], ["", "paragraph \\<open>Multiplication checking\\<close>"], ["", "definition check_mult_l_dom_err :: \\<open>bool \\<Rightarrow> nat \\<Rightarrow> bool \\<Rightarrow> nat \\<Rightarrow> string nres\\<close> where\n  \\<open>check_mult_l_dom_err p_notin p i_already i = SPEC (\\<lambda>_. True)\\<close>"], ["", "definition check_mult_l_mult_err :: \\<open>llist_polynomial \\<Rightarrow> llist_polynomial \\<Rightarrow> llist_polynomial \\<Rightarrow> llist_polynomial \\<Rightarrow> string nres\\<close> where\n  \\<open>check_mult_l_mult_err p q pq r = SPEC (\\<lambda>_. True)\\<close>"], ["", "definition check_mult_l :: \\<open>_ \\<Rightarrow> _ \\<Rightarrow> _ \\<Rightarrow> nat \\<Rightarrow>llist_polynomial \\<Rightarrow>  nat \\<Rightarrow> llist_polynomial \\<Rightarrow> string code_status nres\\<close> where\n\\<open>check_mult_l spec A \\<V> p q i r = do {\n    let b = p \\<in># dom_m A \\<and> i \\<notin># dom_m A \\<and> vars_llist q \\<subseteq> \\<V>\\<and> vars_llist r \\<subseteq> \\<V>;\n    if \\<not>b\n    then do {\n      c \\<leftarrow> check_mult_l_dom_err (p \\<notin># dom_m A) p (i \\<in># dom_m A) i;\n      RETURN (error_msg i c)}\n    else do {\n       ASSERT (p \\<in># dom_m A);\n       let p = the (fmlookup A p);\n       pq \\<leftarrow> mult_poly_full p q;\n       b \\<leftarrow> weak_equality_l pq r;\n       b' \\<leftarrow> weak_equality_l r spec;\n       if b then (if b' then RETURN CFOUND else RETURN CSUCCESS) else do {\n         c \\<leftarrow> check_mult_l_mult_err p q pq r;\n         RETURN (error_msg i c)\n       }\n     }\n  }\\<close>"], ["", "paragraph \\<open>Deletion checking\\<close>"], ["", "definition check_del_l :: \\<open>_ \\<Rightarrow> _ \\<Rightarrow> nat \\<Rightarrow> string code_status nres\\<close> where\n\\<open>check_del_l spec A p = RETURN CSUCCESS\\<close>"], ["", "paragraph \\<open>Extension checking\\<close>"], ["", "definition check_extension_l_dom_err :: \\<open>nat \\<Rightarrow> string nres\\<close> where\n  \\<open>check_extension_l_dom_err p = SPEC (\\<lambda>_. True)\\<close>"], ["", "definition check_extension_l_no_new_var_err :: \\<open>llist_polynomial \\<Rightarrow> string nres\\<close> where\n  \\<open>check_extension_l_no_new_var_err p = SPEC (\\<lambda>_. True)\\<close>"], ["", "definition check_extension_l_new_var_multiple_err :: \\<open>string \\<Rightarrow> llist_polynomial \\<Rightarrow> string nres\\<close> where\n  \\<open>check_extension_l_new_var_multiple_err v p = SPEC (\\<lambda>_. True)\\<close>"], ["", "definition check_extension_l_side_cond_err\n  :: \\<open>string \\<Rightarrow> llist_polynomial \\<Rightarrow> llist_polynomial \\<Rightarrow> llist_polynomial \\<Rightarrow> string nres\\<close>\nwhere\n  \\<open>check_extension_l_side_cond_err v p p' q = SPEC (\\<lambda>_. True)\\<close>"], ["", "definition check_extension_l\n  :: \\<open>_ \\<Rightarrow> _ \\<Rightarrow> string set \\<Rightarrow> nat \\<Rightarrow> string \\<Rightarrow> llist_polynomial \\<Rightarrow> (string code_status) nres\\<close>\nwhere\n\\<open>check_extension_l spec A \\<V> i v p = do {\n  let b = i \\<notin># dom_m A \\<and> v \\<notin> \\<V> \\<and> ([v], -1) \\<in> set p;\n  if \\<not>b\n  then do {\n    c \\<leftarrow> check_extension_l_dom_err i;\n    RETURN (error_msg i c)\n  } else do {\n      let p' = remove1 ([v], -1) p;\n      let b = vars_llist p' \\<subseteq> \\<V>;\n      if \\<not>b\n      then do {\n        c \\<leftarrow> check_extension_l_new_var_multiple_err v p';\n        RETURN (error_msg i c)\n      }\n      else do {\n         p2 \\<leftarrow> mult_poly_full p' p';\n         let p' = map (\\<lambda>(a,b). (a, -b)) p';\n         q \\<leftarrow> add_poly_l (p2, p');\n         eq \\<leftarrow> weak_equality_l q [];\n         if eq then do {\n           RETURN (CSUCCESS)\n         } else do {\n          c \\<leftarrow> check_extension_l_side_cond_err v p p' q;\n          RETURN (error_msg i c)\n        }\n      }\n    }\n  }\\<close>"], ["", "lemma check_extension_alt_def:\n  \\<open>check_extension A \\<V> i v p \\<ge> do {\n    b \\<leftarrow> SPEC(\\<lambda>b. b \\<longrightarrow> i \\<notin># dom_m A \\<and> v \\<notin> \\<V>);\n    if \\<not>b\n    then RETURN (False)\n    else do {\n         p' \\<leftarrow> RETURN (p + Var v);\n         b \\<leftarrow> SPEC(\\<lambda>b. b \\<longrightarrow> vars p' \\<subseteq> \\<V>);\n         if \\<not>b\n         then RETURN (False)\n         else do {\n           pq \\<leftarrow> mult_poly_spec p' p';\n           let p' = - p';\n           p \\<leftarrow> add_poly_spec pq p';\n           eq \\<leftarrow> weak_equality p 0;\n           if eq then RETURN(True)\n           else RETURN (False)\n       }\n     }\n   }\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>b.\n         b \\<longrightarrow>\n         i \\<notin># dom_m A \\<and> v \\<notin> \\<V>) \\<bind>\n    (\\<lambda>b.\n        if \\<not> b then RETURN False\n        else RETURN (p + Var v) \\<bind>\n             (\\<lambda>p'.\n                 SPEC\n                  (\\<lambda>b.\n                      b \\<longrightarrow> vars p' \\<subseteq> \\<V>) \\<bind>\n                 (\\<lambda>b.\n                     if \\<not> b then RETURN False\n                     else mult_poly_spec p' p' \\<bind>\n                          (\\<lambda>pq.\n                              let p' = - p'\n                              in add_poly_spec pq p' \\<bind>\n                                 (\\<lambda>p.\n                                     weak_equality p 0 \\<bind>\n                                     (\\<lambda>eq.\n   if eq then RETURN True else RETURN False))))))\n    \\<le> check_extension A \\<V> i v p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>b.\n         b \\<longrightarrow>\n         i \\<notin># dom_m A \\<and> v \\<notin> \\<V>) \\<bind>\n    (\\<lambda>b.\n        if \\<not> b then RETURN False\n        else RETURN (p + Var v) \\<bind>\n             (\\<lambda>p'.\n                 SPEC\n                  (\\<lambda>b.\n                      b \\<longrightarrow> vars p' \\<subseteq> \\<V>) \\<bind>\n                 (\\<lambda>b.\n                     if \\<not> b then RETURN False\n                     else mult_poly_spec p' p' \\<bind>\n                          (\\<lambda>pq.\n                              let p' = - p'\n                              in add_poly_spec pq p' \\<bind>\n                                 (\\<lambda>p.\n                                     weak_equality p 0 \\<bind>\n                                     (\\<lambda>eq.\n   if eq then RETURN True else RETURN False))))))\n    \\<le> check_extension A \\<V> i v p", "have [intro]: \\<open>ab \\<notin> \\<V> \\<Longrightarrow>\n       vars ba \\<subseteq> \\<V> \\<Longrightarrow>\n       MPoly_Type.coeff (ba + Var ab) (monomial (Suc 0) ab) = 1\\<close> for ab ba"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ab \\<notin> \\<V>; vars ba \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> MPoly_Type.coeff (ba + Var ab) (monomial (Suc 0) ab) =\n                      (1::'a)", "by (subst coeff_add[symmetric], subst not_in_vars_coeff0)\n      (auto simp flip: coeff_add monom.abs_eq\n        simp: not_in_vars_coeff0 MPoly_Type.coeff_def\n          Var.abs_eq Var\\<^sub>0_def lookup_single_eq monom.rep_eq)"], ["proof (state)\nthis:\n  \\<lbrakk>?ab1 \\<notin> \\<V>; vars ?ba1 \\<subseteq> \\<V>\\<rbrakk>\n  \\<Longrightarrow> MPoly_Type.coeff (?ba1 + Var ?ab1)\n                     (monomial (Suc 0) ?ab1) =\n                    (1::?'a2)\n\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>b.\n         b \\<longrightarrow>\n         i \\<notin># dom_m A \\<and> v \\<notin> \\<V>) \\<bind>\n    (\\<lambda>b.\n        if \\<not> b then RETURN False\n        else RETURN (p + Var v) \\<bind>\n             (\\<lambda>p'.\n                 SPEC\n                  (\\<lambda>b.\n                      b \\<longrightarrow> vars p' \\<subseteq> \\<V>) \\<bind>\n                 (\\<lambda>b.\n                     if \\<not> b then RETURN False\n                     else mult_poly_spec p' p' \\<bind>\n                          (\\<lambda>pq.\n                              let p' = - p'\n                              in add_poly_spec pq p' \\<bind>\n                                 (\\<lambda>p.\n                                     weak_equality p 0 \\<bind>\n                                     (\\<lambda>eq.\n   if eq then RETURN True else RETURN False))))))\n    \\<le> check_extension A \\<V> i v p", "have [simp]: \\<open>MPoly_Type.coeff p (monomial (Suc 0) ab) = -1\\<close>\n     if \\<open>vars (p + Var ab) \\<subseteq> \\<V>\\<close>\n       \\<open>ab \\<notin> \\<V>\\<close>\n     for ab"], ["proof (prove)\ngoal (1 subgoal):\n 1. MPoly_Type.coeff p (monomial (Suc 0) ab) = - 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. MPoly_Type.coeff p (monomial (Suc 0) ab) = - 1", "define q where \\<open>q \\<equiv> p + Var ab\\<close>"], ["proof (state)\nthis:\n  q \\<equiv> p + Var ab\n\ngoal (1 subgoal):\n 1. MPoly_Type.coeff p (monomial (Suc 0) ab) = - 1", "then"], ["proof (chain)\npicking this:\n  q \\<equiv> p + Var ab", "have p: \\<open>p = q - Var ab\\<close>"], ["proof (prove)\nusing this:\n  q \\<equiv> p + Var ab\n\ngoal (1 subgoal):\n 1. p = q - Var ab", "by auto"], ["proof (state)\nthis:\n  p = q - Var ab\n\ngoal (1 subgoal):\n 1. MPoly_Type.coeff p (monomial (Suc 0) ab) = - 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. MPoly_Type.coeff p (monomial (Suc 0) ab) = - 1", "unfolding p"], ["proof (prove)\ngoal (1 subgoal):\n 1. MPoly_Type.coeff (q - Var ab) (monomial (Suc 0) ab) = - 1", "apply (subst coeff_minus[symmetric], subst not_in_vars_coeff0)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ab \\<notin> vars q\n 2. 0 - MPoly_Type.coeff (Var ab) (monomial (Suc 0) ab) = - 1", "using that"], ["proof (prove)\nusing this:\n  vars (p + Var ab) \\<subseteq> \\<V>\n  ab \\<notin> \\<V>\n\ngoal (2 subgoals):\n 1. ab \\<notin> vars q\n 2. 0 - MPoly_Type.coeff (Var ab) (monomial (Suc 0) ab) = - 1", "unfolding q_def[symmetric]"], ["proof (prove)\nusing this:\n  vars q \\<subseteq> \\<V>\n  ab \\<notin> \\<V>\n\ngoal (2 subgoals):\n 1. ab \\<notin> vars q\n 2. 0 - MPoly_Type.coeff (Var ab) (monomial (Suc 0) ab) = - 1", "by (auto simp flip: coeff_minus simp: not_in_vars_coeff0\n           Var.abs_eq Var\\<^sub>0_def simp flip: monom.abs_eq\n           simp: not_in_vars_coeff0 MPoly_Type.coeff_def\n           Var.abs_eq Var\\<^sub>0_def lookup_single_eq monom.rep_eq)"], ["proof (state)\nthis:\n  MPoly_Type.coeff p (monomial (Suc 0) ab) = - 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>vars (p + Var ?ab1) \\<subseteq> \\<V>; ?ab1 \\<notin> \\<V>\\<rbrakk>\n  \\<Longrightarrow> MPoly_Type.coeff p (monomial (Suc 0) ?ab1) = - 1\n\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>b.\n         b \\<longrightarrow>\n         i \\<notin># dom_m A \\<and> v \\<notin> \\<V>) \\<bind>\n    (\\<lambda>b.\n        if \\<not> b then RETURN False\n        else RETURN (p + Var v) \\<bind>\n             (\\<lambda>p'.\n                 SPEC\n                  (\\<lambda>b.\n                      b \\<longrightarrow> vars p' \\<subseteq> \\<V>) \\<bind>\n                 (\\<lambda>b.\n                     if \\<not> b then RETURN False\n                     else mult_poly_spec p' p' \\<bind>\n                          (\\<lambda>pq.\n                              let p' = - p'\n                              in add_poly_spec pq p' \\<bind>\n                                 (\\<lambda>p.\n                                     weak_equality p 0 \\<bind>\n                                     (\\<lambda>eq.\n   if eq then RETURN True else RETURN False))))))\n    \\<le> check_extension A \\<V> i v p", "have [simp]: \\<open>vars (p - Var ab) = vars (Var ab - p)\\<close> for ab"], ["proof (prove)\ngoal (1 subgoal):\n 1. vars (p - Var ab) = vars (Var ab - p)", "using vars_uminus[of \\<open>p - Var ab\\<close>]"], ["proof (prove)\nusing this:\n  vars (- (p - Var ab)) = vars (p - Var ab)\n\ngoal (1 subgoal):\n 1. vars (p - Var ab) = vars (Var ab - p)", "by simp"], ["proof (state)\nthis:\n  vars (p - Var ?ab1) = vars (Var ?ab1 - p)\n\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>b.\n         b \\<longrightarrow>\n         i \\<notin># dom_m A \\<and> v \\<notin> \\<V>) \\<bind>\n    (\\<lambda>b.\n        if \\<not> b then RETURN False\n        else RETURN (p + Var v) \\<bind>\n             (\\<lambda>p'.\n                 SPEC\n                  (\\<lambda>b.\n                      b \\<longrightarrow> vars p' \\<subseteq> \\<V>) \\<bind>\n                 (\\<lambda>b.\n                     if \\<not> b then RETURN False\n                     else mult_poly_spec p' p' \\<bind>\n                          (\\<lambda>pq.\n                              let p' = - p'\n                              in add_poly_spec pq p' \\<bind>\n                                 (\\<lambda>p.\n                                     weak_equality p 0 \\<bind>\n                                     (\\<lambda>eq.\n   if eq then RETURN True else RETURN False))))))\n    \\<le> check_extension A \\<V> i v p", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>b.\n         b \\<longrightarrow>\n         i \\<notin># dom_m A \\<and> v \\<notin> \\<V>) \\<bind>\n    (\\<lambda>b.\n        if \\<not> b then RETURN False\n        else RETURN (p + Var v) \\<bind>\n             (\\<lambda>p'.\n                 SPEC\n                  (\\<lambda>b.\n                      b \\<longrightarrow> vars p' \\<subseteq> \\<V>) \\<bind>\n                 (\\<lambda>b.\n                     if \\<not> b then RETURN False\n                     else mult_poly_spec p' p' \\<bind>\n                          (\\<lambda>pq.\n                              let p' = - p'\n                              in add_poly_spec pq p' \\<bind>\n                                 (\\<lambda>p.\n                                     weak_equality p 0 \\<bind>\n                                     (\\<lambda>eq.\n   if eq then RETURN True else RETURN False))))))\n    \\<le> check_extension A \\<V> i v p", "unfolding check_extension_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>b.\n         b \\<longrightarrow>\n         i \\<notin># dom_m A \\<and> v \\<notin> \\<V>) \\<bind>\n    (\\<lambda>b.\n        if \\<not> b then RETURN False\n        else RETURN (p + Var v) \\<bind>\n             (\\<lambda>p'.\n                 SPEC\n                  (\\<lambda>b.\n                      b \\<longrightarrow> vars p' \\<subseteq> \\<V>) \\<bind>\n                 (\\<lambda>b.\n                     if \\<not> b then RETURN False\n                     else mult_poly_spec p' p' \\<bind>\n                          (\\<lambda>pq.\n                              let p' = - p'\n                              in add_poly_spec pq p' \\<bind>\n                                 (\\<lambda>p.\n                                     weak_equality p 0 \\<bind>\n                                     (\\<lambda>eq.\n   if eq then RETURN True else RETURN False))))))\n    \\<le> SPEC\n           (\\<lambda>b.\n               b \\<longrightarrow>\n               i \\<notin># dom_m A \\<and>\n               v \\<notin> \\<V> \\<and>\n               (p + Var v)\\<^sup>2 - (p + Var v)\n               \\<in> More_Modules.ideal polynomial_bool \\<and>\n               vars (p + Var v) \\<subseteq> \\<V>)", "apply (auto 5 5 simp: check_extension_def weak_equality_def\n      mult_poly_spec_def field_simps\n      add_poly_spec_def power2_eq_square cong: if_cong\n      intro!: intro_spec_refine[where R=Id, simplified]\n      split: option.splits dest: ideal.span_add)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  SPEC\n   (\\<lambda>b.\n       b \\<longrightarrow>\n       i \\<notin># dom_m A \\<and> v \\<notin> \\<V>) \\<bind>\n  (\\<lambda>b.\n      if \\<not> b then RETURN False\n      else RETURN (p + Var v) \\<bind>\n           (\\<lambda>p'.\n               SPEC\n                (\\<lambda>b.\n                    b \\<longrightarrow> vars p' \\<subseteq> \\<V>) \\<bind>\n               (\\<lambda>b.\n                   if \\<not> b then RETURN False\n                   else mult_poly_spec p' p' \\<bind>\n                        (\\<lambda>pq.\n                            let p' = - p'\n                            in add_poly_spec pq p' \\<bind>\n                               (\\<lambda>p.\n                                   weak_equality p 0 \\<bind>\n                                   (\\<lambda>eq.\n if eq then RETURN True else RETURN False))))))\n  \\<le> check_extension A \\<V> i v p\n\ngoal:\nNo subgoals!", "qed"], ["", "(* Copy of WB_More_Refinement *)"], ["", "lemma RES_RES_RETURN_RES: \\<open>RES A \\<bind> (\\<lambda>T. RES (f T)) = RES (\\<Union>(f ` A))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. RES A \\<bind> (\\<lambda>T. RES (f T)) = RES (\\<Union> (f ` A))", "by (auto simp: pw_eq_iff refine_pw_simps)"], ["", "lemma check_add_alt_def:\n  \\<open>check_add A \\<V> p q i r \\<ge>\n    do {\n     b \\<leftarrow> SPEC(\\<lambda>b. b \\<longrightarrow> p \\<in># dom_m A \\<and> q \\<in># dom_m A \\<and> i \\<notin># dom_m A \\<and> vars r \\<subseteq> \\<V>);\n     if \\<not>b\n     then RETURN False\n     else do {\n       ASSERT (p \\<in># dom_m A);\n       let p = the (fmlookup A p);\n       ASSERT (q \\<in># dom_m A);\n       let q = the (fmlookup A q);\n       pq \\<leftarrow> add_poly_spec p q;\n       eq \\<leftarrow> weak_equality pq r;\n       RETURN eq\n     }\n  }\\<close> (is \\<open>_ \\<ge> ?A\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>b.\n         b \\<longrightarrow>\n         p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars r \\<subseteq> \\<V>) \\<bind>\n    (\\<lambda>b.\n        if \\<not> b then RETURN False\n        else ASSERT (p \\<in># dom_m A) \\<bind>\n             (\\<lambda>_.\n                 let p = the (fmlookup A p)\n                 in ASSERT (q \\<in># dom_m A) \\<bind>\n                    (\\<lambda>_.\n                        let q = the (fmlookup A q)\n                        in add_poly_spec p q \\<bind>\n                           (\\<lambda>pq.\n                               weak_equality pq r \\<bind> RETURN))))\n    \\<le> check_add A \\<V> p q i r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>b.\n         b \\<longrightarrow>\n         p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars r \\<subseteq> \\<V>) \\<bind>\n    (\\<lambda>b.\n        if \\<not> b then RETURN False\n        else ASSERT (p \\<in># dom_m A) \\<bind>\n             (\\<lambda>_.\n                 let p = the (fmlookup A p)\n                 in ASSERT (q \\<in># dom_m A) \\<bind>\n                    (\\<lambda>_.\n                        let q = the (fmlookup A q)\n                        in add_poly_spec p q \\<bind>\n                           (\\<lambda>pq.\n                               weak_equality pq r \\<bind> RETURN))))\n    \\<le> check_add A \\<V> p q i r", "have check_add_alt_def: \\<open>check_add A \\<V> p q i r = do {\n     b \\<leftarrow> SPEC(\\<lambda>b. b \\<longrightarrow> p \\<in># dom_m A \\<and> q \\<in># dom_m A \\<and> i \\<notin># dom_m A \\<and> vars r \\<subseteq> \\<V>);\n     if \\<not>b then SPEC(\\<lambda>b. b \\<longrightarrow> p \\<in># dom_m A \\<and> q \\<in># dom_m A \\<and> i \\<notin># dom_m A \\<and> vars r \\<subseteq> \\<V> \\<and>\n            the (fmlookup A p) + the (fmlookup A q) - r \\<in>  ideal polynomial_bool)\n     else\n       SPEC(\\<lambda>b. b \\<longrightarrow> p \\<in># dom_m A \\<and> q \\<in># dom_m A \\<and> i \\<notin># dom_m A \\<and> vars r \\<subseteq> \\<V> \\<and>\n            the (fmlookup A p) + the (fmlookup A q) - r \\<in>  ideal polynomial_bool)}\\<close>\n   (is \\<open>_ = ?B\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. check_add A \\<V> p q i r =\n    SPEC\n     (\\<lambda>b.\n         b \\<longrightarrow>\n         p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars r \\<subseteq> \\<V>) \\<bind>\n    (\\<lambda>b.\n        if \\<not> b\n        then SPEC\n              (\\<lambda>b.\n                  b \\<longrightarrow>\n                  p \\<in># dom_m A \\<and>\n                  q \\<in># dom_m A \\<and>\n                  i \\<notin># dom_m A \\<and>\n                  vars r \\<subseteq> \\<V> \\<and>\n                  the (fmlookup A p) + the (fmlookup A q) - r\n                  \\<in> More_Modules.ideal polynomial_bool)\n        else SPEC\n              (\\<lambda>b.\n                  b \\<longrightarrow>\n                  p \\<in># dom_m A \\<and>\n                  q \\<in># dom_m A \\<and>\n                  i \\<notin># dom_m A \\<and>\n                  vars r \\<subseteq> \\<V> \\<and>\n                  the (fmlookup A p) + the (fmlookup A q) - r\n                  \\<in> More_Modules.ideal polynomial_bool))", "by (auto simp: check_add_def RES_RES_RETURN_RES)"], ["proof (state)\nthis:\n  check_add A \\<V> p q i r =\n  SPEC\n   (\\<lambda>b.\n       b \\<longrightarrow>\n       p \\<in># dom_m A \\<and>\n       q \\<in># dom_m A \\<and>\n       i \\<notin># dom_m A \\<and> vars r \\<subseteq> \\<V>) \\<bind>\n  (\\<lambda>b.\n      if \\<not> b\n      then SPEC\n            (\\<lambda>b.\n                b \\<longrightarrow>\n                p \\<in># dom_m A \\<and>\n                q \\<in># dom_m A \\<and>\n                i \\<notin># dom_m A \\<and>\n                vars r \\<subseteq> \\<V> \\<and>\n                the (fmlookup A p) + the (fmlookup A q) - r\n                \\<in> More_Modules.ideal polynomial_bool)\n      else SPEC\n            (\\<lambda>b.\n                b \\<longrightarrow>\n                p \\<in># dom_m A \\<and>\n                q \\<in># dom_m A \\<and>\n                i \\<notin># dom_m A \\<and>\n                vars r \\<subseteq> \\<V> \\<and>\n                the (fmlookup A p) + the (fmlookup A q) - r\n                \\<in> More_Modules.ideal polynomial_bool))\n\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>b.\n         b \\<longrightarrow>\n         p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars r \\<subseteq> \\<V>) \\<bind>\n    (\\<lambda>b.\n        if \\<not> b then RETURN False\n        else ASSERT (p \\<in># dom_m A) \\<bind>\n             (\\<lambda>_.\n                 let p = the (fmlookup A p)\n                 in ASSERT (q \\<in># dom_m A) \\<bind>\n                    (\\<lambda>_.\n                        let q = the (fmlookup A q)\n                        in add_poly_spec p q \\<bind>\n                           (\\<lambda>pq.\n                               weak_equality pq r \\<bind> RETURN))))\n    \\<le> check_add A \\<V> p q i r", "have \\<open>?A \\<le> \\<Down> Id (check_add A \\<V> p q i r)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>b.\n         b \\<longrightarrow>\n         p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars r \\<subseteq> \\<V>) \\<bind>\n    (\\<lambda>b.\n        if \\<not> b then RETURN False\n        else ASSERT (p \\<in># dom_m A) \\<bind>\n             (\\<lambda>_.\n                 let p = the (fmlookup A p)\n                 in ASSERT (q \\<in># dom_m A) \\<bind>\n                    (\\<lambda>_.\n                        let q = the (fmlookup A q)\n                        in add_poly_spec p q \\<bind>\n                           (\\<lambda>pq.\n                               weak_equality pq r \\<bind> RETURN))))\n    \\<le> \\<Down> bool_rel (check_add A \\<V> p q i r)", "apply refine_vcg"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> {b. b \\<longrightarrow>\n                   p \\<in># dom_m A \\<and>\n                   q \\<in># dom_m A \\<and>\n                   i \\<notin># dom_m A \\<and>\n                   vars r \\<subseteq> \\<V>} \\<Longrightarrow>\n       (if \\<not> b then RETURN False\n        else ASSERT (p \\<in># dom_m A) \\<bind>\n             (\\<lambda>_.\n                 let p = the (fmlookup A p)\n                 in ASSERT (q \\<in># dom_m A) \\<bind>\n                    (\\<lambda>_.\n                        let q = the (fmlookup A q)\n                        in add_poly_spec p q \\<bind>\n                           (\\<lambda>pq.\n                               weak_equality pq r \\<bind> RETURN))))\n       \\<le> \\<Down> bool_rel (check_add A \\<V> p q i r)", "apply ((auto simp: check_add_alt_def weak_equality_def\n        add_poly_spec_def RES_RES_RETURN_RES summarize_ASSERT_conv\n      cong: if_cong\n      intro!: ideal.span_zero;fail)+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  SPEC\n   (\\<lambda>b.\n       b \\<longrightarrow>\n       p \\<in># dom_m A \\<and>\n       q \\<in># dom_m A \\<and>\n       i \\<notin># dom_m A \\<and> vars r \\<subseteq> \\<V>) \\<bind>\n  (\\<lambda>b.\n      if \\<not> b then RETURN False\n      else ASSERT (p \\<in># dom_m A) \\<bind>\n           (\\<lambda>_.\n               let p = the (fmlookup A p)\n               in ASSERT (q \\<in># dom_m A) \\<bind>\n                  (\\<lambda>_.\n                      let q = the (fmlookup A q)\n                      in add_poly_spec p q \\<bind>\n                         (\\<lambda>pq. weak_equality pq r \\<bind> RETURN))))\n  \\<le> \\<Down> bool_rel (check_add A \\<V> p q i r)\n\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>b.\n         b \\<longrightarrow>\n         p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars r \\<subseteq> \\<V>) \\<bind>\n    (\\<lambda>b.\n        if \\<not> b then RETURN False\n        else ASSERT (p \\<in># dom_m A) \\<bind>\n             (\\<lambda>_.\n                 let p = the (fmlookup A p)\n                 in ASSERT (q \\<in># dom_m A) \\<bind>\n                    (\\<lambda>_.\n                        let q = the (fmlookup A q)\n                        in add_poly_spec p q \\<bind>\n                           (\\<lambda>pq.\n                               weak_equality pq r \\<bind> RETURN))))\n    \\<le> check_add A \\<V> p q i r", "then"], ["proof (chain)\npicking this:\n  SPEC\n   (\\<lambda>b.\n       b \\<longrightarrow>\n       p \\<in># dom_m A \\<and>\n       q \\<in># dom_m A \\<and>\n       i \\<notin># dom_m A \\<and> vars r \\<subseteq> \\<V>) \\<bind>\n  (\\<lambda>b.\n      if \\<not> b then RETURN False\n      else ASSERT (p \\<in># dom_m A) \\<bind>\n           (\\<lambda>_.\n               let p = the (fmlookup A p)\n               in ASSERT (q \\<in># dom_m A) \\<bind>\n                  (\\<lambda>_.\n                      let q = the (fmlookup A q)\n                      in add_poly_spec p q \\<bind>\n                         (\\<lambda>pq. weak_equality pq r \\<bind> RETURN))))\n  \\<le> \\<Down> bool_rel (check_add A \\<V> p q i r)", "show ?thesis"], ["proof (prove)\nusing this:\n  SPEC\n   (\\<lambda>b.\n       b \\<longrightarrow>\n       p \\<in># dom_m A \\<and>\n       q \\<in># dom_m A \\<and>\n       i \\<notin># dom_m A \\<and> vars r \\<subseteq> \\<V>) \\<bind>\n  (\\<lambda>b.\n      if \\<not> b then RETURN False\n      else ASSERT (p \\<in># dom_m A) \\<bind>\n           (\\<lambda>_.\n               let p = the (fmlookup A p)\n               in ASSERT (q \\<in># dom_m A) \\<bind>\n                  (\\<lambda>_.\n                      let q = the (fmlookup A q)\n                      in add_poly_spec p q \\<bind>\n                         (\\<lambda>pq. weak_equality pq r \\<bind> RETURN))))\n  \\<le> \\<Down> bool_rel (check_add A \\<V> p q i r)\n\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>b.\n         b \\<longrightarrow>\n         p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars r \\<subseteq> \\<V>) \\<bind>\n    (\\<lambda>b.\n        if \\<not> b then RETURN False\n        else ASSERT (p \\<in># dom_m A) \\<bind>\n             (\\<lambda>_.\n                 let p = the (fmlookup A p)\n                 in ASSERT (q \\<in># dom_m A) \\<bind>\n                    (\\<lambda>_.\n                        let q = the (fmlookup A q)\n                        in add_poly_spec p q \\<bind>\n                           (\\<lambda>pq.\n                               weak_equality pq r \\<bind> RETURN))))\n    \\<le> check_add A \\<V> p q i r", "unfolding check_add_alt_def[symmetric]"], ["proof (prove)\nusing this:\n  SPEC\n   (\\<lambda>b.\n       b \\<longrightarrow>\n       p \\<in># dom_m A \\<and>\n       q \\<in># dom_m A \\<and>\n       i \\<notin># dom_m A \\<and> vars r \\<subseteq> \\<V>) \\<bind>\n  (\\<lambda>b.\n      if \\<not> b then RETURN False\n      else ASSERT (p \\<in># dom_m A) \\<bind>\n           (\\<lambda>_.\n               let p = the (fmlookup A p)\n               in ASSERT (q \\<in># dom_m A) \\<bind>\n                  (\\<lambda>_.\n                      let q = the (fmlookup A q)\n                      in add_poly_spec p q \\<bind>\n                         (\\<lambda>pq. weak_equality pq r \\<bind> RETURN))))\n  \\<le> \\<Down> bool_rel (check_add A \\<V> p q i r)\n\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>b.\n         b \\<longrightarrow>\n         p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars r \\<subseteq> \\<V>) \\<bind>\n    (\\<lambda>b.\n        if \\<not> b then RETURN False\n        else ASSERT (p \\<in># dom_m A) \\<bind>\n             (\\<lambda>_.\n                 let p = the (fmlookup A p)\n                 in ASSERT (q \\<in># dom_m A) \\<bind>\n                    (\\<lambda>_.\n                        let q = the (fmlookup A q)\n                        in add_poly_spec p q \\<bind>\n                           (\\<lambda>pq.\n                               weak_equality pq r \\<bind> RETURN))))\n    \\<le> check_add A \\<V> p q i r", "by simp"], ["proof (state)\nthis:\n  SPEC\n   (\\<lambda>b.\n       b \\<longrightarrow>\n       p \\<in># dom_m A \\<and>\n       q \\<in># dom_m A \\<and>\n       i \\<notin># dom_m A \\<and> vars r \\<subseteq> \\<V>) \\<bind>\n  (\\<lambda>b.\n      if \\<not> b then RETURN False\n      else ASSERT (p \\<in># dom_m A) \\<bind>\n           (\\<lambda>_.\n               let p = the (fmlookup A p)\n               in ASSERT (q \\<in># dom_m A) \\<bind>\n                  (\\<lambda>_.\n                      let q = the (fmlookup A q)\n                      in add_poly_spec p q \\<bind>\n                         (\\<lambda>pq. weak_equality pq r \\<bind> RETURN))))\n  \\<le> check_add A \\<V> p q i r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma check_mult_alt_def:\n  \\<open>check_mult A \\<V> p q i r \\<ge>\n    do {\n     b \\<leftarrow> SPEC(\\<lambda>b. b \\<longrightarrow> p \\<in># dom_m A \\<and> i \\<notin># dom_m A \\<and> vars q \\<subseteq> \\<V>  \\<and> vars r \\<subseteq> \\<V>);\n     if \\<not>b\n     then RETURN False\n     else do {\n       ASSERT (p \\<in># dom_m A);\n       let p = the (fmlookup A p);\n       pq \\<leftarrow> mult_poly_spec p q;\n       p \\<leftarrow> weak_equality pq r;\n       RETURN p\n     }\n  }\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>b.\n         b \\<longrightarrow>\n         p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars q \\<subseteq> \\<V> \\<and> vars r \\<subseteq> \\<V>) \\<bind>\n    (\\<lambda>b.\n        if \\<not> b then RETURN False\n        else ASSERT (p \\<in># dom_m A) \\<bind>\n             (\\<lambda>_.\n                 let p = the (fmlookup A p)\n                 in mult_poly_spec p q \\<bind>\n                    (\\<lambda>pq. weak_equality pq r \\<bind> RETURN)))\n    \\<le> check_mult A \\<V> p q i r", "unfolding check_mult_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>b.\n         b \\<longrightarrow>\n         p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars q \\<subseteq> \\<V> \\<and> vars r \\<subseteq> \\<V>) \\<bind>\n    (\\<lambda>b.\n        if \\<not> b then RETURN False\n        else ASSERT (p \\<in># dom_m A) \\<bind>\n             (\\<lambda>_.\n                 let p = the (fmlookup A p)\n                 in mult_poly_spec p q \\<bind>\n                    (\\<lambda>pq. weak_equality pq r \\<bind> RETURN)))\n    \\<le> SPEC\n           (\\<lambda>b.\n               b \\<longrightarrow>\n               p \\<in># dom_m A \\<and>\n               i \\<notin># dom_m A \\<and>\n               vars q \\<subseteq> \\<V> \\<and>\n               vars r \\<subseteq> \\<V> \\<and>\n               the (fmlookup A p) * q - r\n               \\<in> More_Modules.ideal polynomial_bool)", "apply (rule refine_IdD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>b.\n         b \\<longrightarrow>\n         p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars q \\<subseteq> \\<V> \\<and> vars r \\<subseteq> \\<V>) \\<bind>\n    (\\<lambda>b.\n        if \\<not> b then RETURN False\n        else ASSERT (p \\<in># dom_m A) \\<bind>\n             (\\<lambda>_.\n                 let p = the (fmlookup A p)\n                 in mult_poly_spec p q \\<bind>\n                    (\\<lambda>pq. weak_equality pq r \\<bind> RETURN)))\n    \\<le> \\<Down> bool_rel\n           (SPEC\n             (\\<lambda>b.\n                 b \\<longrightarrow>\n                 p \\<in># dom_m A \\<and>\n                 i \\<notin># dom_m A \\<and>\n                 vars q \\<subseteq> \\<V> \\<and>\n                 vars r \\<subseteq> \\<V> \\<and>\n                 the (fmlookup A p) * q - r\n                 \\<in> More_Modules.ideal polynomial_bool))", "by refine_vcg\n   (auto simp: check_mult_def weak_equality_def\n      mult_poly_spec_def RES_RES_RETURN_RES\n    intro!:  ideal.span_zero\n      exI[of _ \\<open>the (fmlookup A p) * q\\<close>])"], ["", "primrec insort_key_rel :: \"('b \\<Rightarrow> 'b \\<Rightarrow> bool) \\<Rightarrow> 'b \\<Rightarrow> 'b list \\<Rightarrow> 'b list\" where\n\"insort_key_rel f x [] = [x]\" |\n\"insort_key_rel f x (y#ys) =\n  (if f x y then (x#y#ys) else y#(insort_key_rel f x ys))\""], ["", "lemma set_insort_key_rel[simp]: \\<open>set (insort_key_rel R x xs) = insert x (set xs)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (insort_key_rel R x xs) = insert x (set xs)", "by (induction xs)\n   auto"], ["", "lemma sorted_wrt_insort_key_rel:\n   \\<open>total_on R (insert x (set xs)) \\<Longrightarrow> transp R \\<Longrightarrow> reflp R \\<Longrightarrow>\n    sorted_wrt R xs \\<Longrightarrow> sorted_wrt R (insort_key_rel R x xs)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Restricted_Predicates.total_on R (insert x (set xs)); transp R;\n     reflp R; sorted_wrt R xs\\<rbrakk>\n    \\<Longrightarrow> sorted_wrt R (insort_key_rel R x xs)", "by (induction xs)\n   (auto dest: transpD reflpD simp: Restricted_Predicates.total_on_def)"], ["", "lemma sorted_wrt_insort_key_rel2:\n   \\<open>total_on R (insert x (set xs)) \\<Longrightarrow> transp R \\<Longrightarrow> x \\<notin> set xs \\<Longrightarrow>\n    sorted_wrt R xs \\<Longrightarrow> sorted_wrt R (insort_key_rel R x xs)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Restricted_Predicates.total_on R (insert x (set xs)); transp R;\n     x \\<notin> set xs; sorted_wrt R xs\\<rbrakk>\n    \\<Longrightarrow> sorted_wrt R (insort_key_rel R x xs)", "by (induction xs)\n   (auto dest: transpD simp: Restricted_Predicates.total_on_def in_mono)"], ["", "paragraph \\<open>Step checking\\<close>"], ["", "definition PAC_checker_l_step ::  \\<open>_ \\<Rightarrow> string code_status \\<times> string set \\<times> _ \\<Rightarrow> (llist_polynomial, string, nat) pac_step \\<Rightarrow> _\\<close> where\n  \\<open>PAC_checker_l_step = (\\<lambda>spec (st', \\<V>, A) st. case st of\n     Add _ _ _ _ \\<Rightarrow>\n       do {\n         r \\<leftarrow> full_normalize_poly (pac_res st);\n        eq \\<leftarrow> check_addition_l spec A \\<V> (pac_src1 st) (pac_src2 st) (new_id st) r;\n        let _ = eq;\n        if \\<not>is_cfailed eq\n        then RETURN (merge_cstatus st' eq,\n          \\<V>, fmupd (new_id st) r A)\n        else RETURN (eq, \\<V>, A)\n   }\n   | Del _ \\<Rightarrow>\n       do {\n        eq \\<leftarrow> check_del_l spec A (pac_src1 st);\n        let _ = eq;\n        if \\<not>is_cfailed eq\n        then RETURN (merge_cstatus st' eq, \\<V>, fmdrop (pac_src1 st) A)\n        else RETURN (eq, \\<V>, A)\n   }\n   | Mult _ _ _ _ \\<Rightarrow>\n       do {\n         r \\<leftarrow> full_normalize_poly (pac_res st);\n         q \\<leftarrow> full_normalize_poly (pac_mult st);\n        eq \\<leftarrow> check_mult_l spec A \\<V> (pac_src1 st) q (new_id st) r;\n        let _ = eq;\n        if \\<not>is_cfailed eq\n        then RETURN (merge_cstatus st' eq,\n          \\<V>, fmupd (new_id st) r A)\n        else RETURN (eq, \\<V>, A)\n   }\n   | Extension _ _ _ \\<Rightarrow>\n       do {\n         r \\<leftarrow> full_normalize_poly (([new_var st], -1) # (pac_res st));\n        (eq) \\<leftarrow> check_extension_l spec A \\<V> (new_id st) (new_var st) r;\n        if \\<not>is_cfailed eq\n        then do {\n          RETURN (st',\n            insert (new_var st) \\<V>, fmupd (new_id st) r A)}\n        else RETURN (eq, \\<V>, A)\n   }\n )\\<close>"], ["", "lemma pac_step_rel_raw_def:\n  \\<open>\\<langle>K, V, R\\<rangle> pac_step_rel_raw = pac_step_rel_raw K V R\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>K, V, R\\<rangle>pac_step_rel_raw = pac_step_rel_raw K V R", "by (auto intro!: ext simp: relAPP_def)"], ["", "definition mononoms_equal_up_to_reorder where\n  \\<open>mononoms_equal_up_to_reorder xs ys \\<longleftrightarrow>\n     map (\\<lambda>(a, b).  (mset a, b)) xs = map (\\<lambda>(a, b). (mset a, b)) ys\\<close>"], ["", "definition normalize_poly_l where\n  \\<open>normalize_poly_l p = SPEC (\\<lambda>p'.\n     normalize_poly_p\\<^sup>*\\<^sup>* ((\\<lambda>(a, b). (mset a, b)) `# mset p) ((\\<lambda>(a, b). (mset a, b)) `# mset p') \\<and>\n     0 \\<notin># snd `# mset p' \\<and>\n     sorted_wrt (rel2p (term_order_rel \\<times>\\<^sub>r int_rel)) p' \\<and>\n     (\\<forall> x \\<in> mononoms p'. sorted_wrt (rel2p var_order_rel) x))\\<close>"], ["", "definition remap_polys_l_dom_err :: \\<open>string nres\\<close> where\n  \\<open>remap_polys_l_dom_err = SPEC (\\<lambda>_. True)\\<close>"], ["", "definition remap_polys_l :: \\<open>llist_polynomial \\<Rightarrow> string set \\<Rightarrow> (nat, llist_polynomial) fmap \\<Rightarrow>\n   (_ code_status \\<times> string set \\<times> (nat, llist_polynomial) fmap) nres\\<close> where\n  \\<open>remap_polys_l spec = (\\<lambda>\\<V> A. do{\n   dom \\<leftarrow> SPEC(\\<lambda>dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom);\n   failed \\<leftarrow> SPEC(\\<lambda>_::bool. True);\n   if failed\n   then do {\n      c \\<leftarrow> remap_polys_l_dom_err;\n      RETURN (error_msg (0 :: nat) c, \\<V>, fmempty)\n   }\n   else do {\n     (b, \\<V>, A) \\<leftarrow> FOREACH dom\n       (\\<lambda>i (b, \\<V>,  A').\n          if i \\<in># dom_m A\n          then  do {\n            p \\<leftarrow> full_normalize_poly (the (fmlookup A i));\n            eq \\<leftarrow> weak_equality_l p spec;\n            \\<V> \\<leftarrow> RETURN(\\<V> \\<union> vars_llist (the (fmlookup A i)));\n            RETURN(b \\<or> eq, \\<V>, fmupd i p A')\n          } else RETURN (b, \\<V>, A'))\n       (False, \\<V>, fmempty);\n     RETURN (if b then CFOUND else CSUCCESS, \\<V>, A)\n }})\\<close>"], ["", "definition PAC_checker_l where\n  \\<open>PAC_checker_l spec A b st = do {\n    (S, _) \\<leftarrow> WHILE\\<^sub>T\n       (\\<lambda>((b, A), n). \\<not>is_cfailed b \\<and> n \\<noteq> [])\n       (\\<lambda>((bA), n). do {\n          ASSERT(n \\<noteq> []);\n          S \\<leftarrow> PAC_checker_l_step spec bA (hd n);\n          RETURN (S, tl n)\n        })\n      ((b, A), st);\n    RETURN S\n  }\\<close>"], ["", "subsection \\<open>Correctness\\<close>"], ["", "text \\<open>We now enter the locale to reason about polynomials directly.\\<close>"], ["", "context poly_embed\nbegin"], ["", "abbreviation pac_step_rel where\n  \\<open>pac_step_rel \\<equiv> p2rel (\\<langle>Id, fully_unsorted_poly_rel O mset_poly_rel, var_rel\\<rangle> pac_step_rel_raw)\\<close>"], ["", "abbreviation fmap_polys_rel where\n  \\<open>fmap_polys_rel \\<equiv> \\<langle>nat_rel, sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\\<close>"], ["", "lemma\n  \\<open>normalize_poly_p s0 s \\<Longrightarrow>\n        (s0, p) \\<in> mset_poly_rel \\<Longrightarrow>\n        (s, p) \\<in> mset_poly_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>normalize_poly_p s0 s; (s0, p) \\<in> mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (s, p) \\<in> mset_poly_rel", "by (auto simp: mset_poly_rel_def normalize_poly_p_poly_of_mset)"], ["", "lemma vars_poly_of_vars:\n  \\<open>vars (poly_of_vars a :: int mpoly) \\<subseteq> (\\<phi> ` set_mset a)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. vars (poly_of_vars a) \\<subseteq> \\<phi> ` set_mset a", "by (induction a)\n   (auto simp: vars_mult_Var)"], ["", "lemma vars_polynomial_of_mset:\n  \\<open>vars (polynomial_of_mset za) \\<subseteq> \\<Union>(image \\<phi> ` (set_mset o fst) ` set_mset za)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. vars (polynomial_of_mset za)\n    \\<subseteq> \\<Union> ((`) \\<phi> ` (set_mset \\<circ> fst) ` set_mset za)", "apply (induction za)"], ["proof (prove)\ngoal (2 subgoals):\n 1. vars (polynomial_of_mset {#})\n    \\<subseteq> \\<Union>\n                 ((`) \\<phi> ` (set_mset \\<circ> fst) ` set_mset {#})\n 2. \\<And>x za.\n       vars (polynomial_of_mset za)\n       \\<subseteq> \\<Union>\n                    ((`) \\<phi> `\n                     (set_mset \\<circ> fst) ` set_mset za) \\<Longrightarrow>\n       vars (polynomial_of_mset (add_mset x za))\n       \\<subseteq> \\<Union>\n                    ((`) \\<phi> `\n                     (set_mset \\<circ> fst) ` set_mset (add_mset x za))", "using vars_poly_of_vars"], ["proof (prove)\nusing this:\n  vars (poly_of_vars ?a) \\<subseteq> \\<phi> ` set_mset ?a\n\ngoal (2 subgoals):\n 1. vars (polynomial_of_mset {#})\n    \\<subseteq> \\<Union>\n                 ((`) \\<phi> ` (set_mset \\<circ> fst) ` set_mset {#})\n 2. \\<And>x za.\n       vars (polynomial_of_mset za)\n       \\<subseteq> \\<Union>\n                    ((`) \\<phi> `\n                     (set_mset \\<circ> fst) ` set_mset za) \\<Longrightarrow>\n       vars (polynomial_of_mset (add_mset x za))\n       \\<subseteq> \\<Union>\n                    ((`) \\<phi> `\n                     (set_mset \\<circ> fst) ` set_mset (add_mset x za))", "by (fastforce elim!: in_vars_addE simp: vars_mult_Const split: if_splits)+"], ["", "lemma fully_unsorted_poly_rel_vars_subset_vars_llist:\n  \\<open>(A, B) \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<Longrightarrow> vars B \\<subseteq> \\<phi> ` vars_llist A\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, B) \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n    vars B \\<subseteq> \\<phi> ` vars_llist A", "by (auto simp: fully_unsorted_poly_list_rel_def mset_poly_rel_def\n      set_rel_def var_rel_def br_def vars_llist_def list_rel_append2 list_rel_append1\n      list_rel_split_right_iff list_mset_rel_def image_iff\n      unsorted_term_poly_list_rel_def list_rel_split_left_iff\n    dest!: set_rev_mp[OF _ vars_polynomial_of_mset] split_list\n    dest: multi_member_split\n    dest: arg_cong[of \\<open>mset _\\<close> \\<open>add_mset _ _\\<close> set_mset])"], ["", "lemma fully_unsorted_poly_rel_extend_vars:\n  \\<open>(A, B) \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n  (x1c, x1a) \\<in> \\<langle>var_rel\\<rangle>set_rel \\<Longrightarrow>\n   RETURN (x1c \\<union> vars_llist A)\n    \\<le> \\<Down> (\\<langle>var_rel\\<rangle>set_rel)\n       (SPEC ((\\<subseteq>) (x1a \\<union> vars (B))))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     (x1c, x1a) \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> RETURN (x1c \\<union> vars_llist A)\n                      \\<le> \\<Down> (\\<langle>var_rel\\<rangle>set_rel)\n                             (SPEC ((\\<subseteq>) (x1a \\<union> vars B)))", "using fully_unsorted_poly_rel_vars_subset_vars_llist[of A B]"], ["proof (prove)\nusing this:\n  (A, B) \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n  vars B \\<subseteq> \\<phi> ` vars_llist A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     (x1c, x1a) \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> RETURN (x1c \\<union> vars_llist A)\n                      \\<le> \\<Down> (\\<langle>var_rel\\<rangle>set_rel)\n                             (SPEC ((\\<subseteq>) (x1a \\<union> vars B)))", "apply (subst RETURN_RES_refine_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     (x1c, x1a) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (A, B) \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n     vars B \\<subseteq> \\<phi> ` vars_llist A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y\\<in>Collect\n((\\<subseteq>) (x1a \\<union> vars B)).\n                         (x1c \\<union> vars_llist A, y)\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>(x1c, x1a) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        vars B \\<subseteq> \\<phi> ` vars_llist A;\n        (A, y) \\<in> fully_unsorted_poly_rel;\n        (y, B) \\<in> mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            x1a \\<subseteq> y \\<and>\n                            vars B \\<subseteq> y \\<and>\n                            (x1c \\<union> vars_llist A, y)\n                            \\<in> \\<langle>var_rel\\<rangle>set_rel", "apply (rule exI[of _ \\<open>x1a \\<union> \\<phi> ` vars_llist A\\<close>])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>(x1c, x1a) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        vars B \\<subseteq> \\<phi> ` vars_llist A;\n        (A, y) \\<in> fully_unsorted_poly_rel;\n        (y, B) \\<in> mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> x1a\n                         \\<subseteq> x1a \\<union>\n                                     \\<phi> ` vars_llist A \\<and>\n                         vars B\n                         \\<subseteq> x1a \\<union>\n                                     \\<phi> ` vars_llist A \\<and>\n                         (x1c \\<union> vars_llist A,\n                          x1a \\<union> \\<phi> ` vars_llist A)\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel", "apply (auto simp: set_rel_def var_rel_def br_def\n    dest: fully_unsorted_poly_rel_vars_subset_vars_llist)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma remap_polys_l_remap_polys:\n  assumes\n    AB: \\<open>(A, B) \\<in> \\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\\<close> and\n    spec: \\<open>(spec, spec') \\<in> sorted_poly_rel O mset_poly_rel\\<close> and\n    V: \\<open>(\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<close>\n  shows \\<open>remap_polys_l spec \\<V> A \\<le>\n     \\<Down>(code_status_status_rel \\<times>\\<^sub>r \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r fmap_polys_rel) (remap_polys spec' \\<V>' B)\\<close>\n  (is \\<open>_ \\<le> \\<Down> ?R _\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. remap_polys_l spec \\<V> A\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (remap_polys spec' \\<V>' B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. remap_polys_l spec \\<V> A\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (remap_polys spec' \\<V>' B)", "have 1: \\<open>inj_on id (dom :: nat set)\\<close> for dom"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on id dom", "by auto"], ["proof (state)\nthis:\n  inj_on id ?dom3\n\ngoal (1 subgoal):\n 1. remap_polys_l spec \\<V> A\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (remap_polys spec' \\<V>' B)", "have H: \\<open>x \\<in># dom_m A \\<Longrightarrow>\n     (\\<And>p. (the (fmlookup A x), p) \\<in> fully_unsorted_poly_rel \\<Longrightarrow>\n       (p, the (fmlookup B x)) \\<in> mset_poly_rel \\<Longrightarrow> thesis) \\<Longrightarrow>\n     thesis\\<close> for x thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in># dom_m A;\n     \\<And>p.\n        \\<lbrakk>(the (fmlookup A x), p) \\<in> fully_unsorted_poly_rel;\n         (p, the (fmlookup B x)) \\<in> mset_poly_rel\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using fmap_rel_nat_the_fmlookup[OF AB, of x x] fmap_rel_nat_rel_dom_m[OF AB]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(x, x) \\<in> nat_rel; x \\<in># dom_m B\\<rbrakk>\n  \\<Longrightarrow> (the (fmlookup A x), the (fmlookup B x))\n                    \\<in> fully_unsorted_poly_rel O mset_poly_rel\n  dom_m A = dom_m B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in># dom_m A;\n     \\<And>p.\n        \\<lbrakk>(the (fmlookup A x), p) \\<in> fully_unsorted_poly_rel;\n         (p, the (fmlookup B x)) \\<in> mset_poly_rel\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?x3 \\<in># dom_m A;\n   \\<And>p.\n      \\<lbrakk>(the (fmlookup A ?x3), p) \\<in> fully_unsorted_poly_rel;\n       (p, the (fmlookup B ?x3)) \\<in> mset_poly_rel\\<rbrakk>\n      \\<Longrightarrow> ?thesis3\\<rbrakk>\n  \\<Longrightarrow> ?thesis3\n\ngoal (1 subgoal):\n 1. remap_polys_l spec \\<V> A\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (remap_polys spec' \\<V>' B)", "have full_normalize_poly: \\<open>full_normalize_poly (the (fmlookup A x))\n       \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel)\n          (SPEC\n            (\\<lambda>p. the (fmlookup B x') - p \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars p \\<subseteq> vars (the (fmlookup B x'))))\\<close>\n      if x_dom: \\<open>x \\<in># dom_m A\\<close> and \\<open>(x, x') \\<in> Id\\<close> for x x'"], ["proof (prove)\ngoal (1 subgoal):\n 1. full_normalize_poly (the (fmlookup A x))\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel)\n           (SPEC\n             (\\<lambda>p.\n                 the (fmlookup B x') - p\n                 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars p \\<subseteq> vars (the (fmlookup B x'))))", "apply (rule H[OF x_dom])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>(the (fmlookup A x), p) \\<in> fully_unsorted_poly_rel;\n        (p, the (fmlookup B x)) \\<in> mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> full_normalize_poly (the (fmlookup A x))\n                         \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel)\n                                (SPEC\n                                  (\\<lambda>p.\nthe (fmlookup B x') - p \\<in> More_Modules.ideal polynomial_bool \\<and>\nvars p \\<subseteq> vars (the (fmlookup B x'))))", "subgoal for p"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(the (fmlookup A x), p) \\<in> fully_unsorted_poly_rel;\n     (p, the (fmlookup B x)) \\<in> mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> full_normalize_poly (the (fmlookup A x))\n                      \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel)\n                             (SPEC\n                               (\\<lambda>p.\n                                   the (fmlookup B x') - p\n                                   \\<in> More_Modules.ideal\n    polynomial_bool \\<and>\n                                   vars p\n                                   \\<subseteq> vars (the (fmlookup B x'))))", "apply (rule full_normalize_poly_normalize_poly_p[THEN order_trans])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(the (fmlookup A x), p) \\<in> fully_unsorted_poly_rel;\n     (p, the (fmlookup B x)) \\<in> mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (the (fmlookup A x), ?p'1)\n                      \\<in> fully_unsorted_poly_rel\n 2. \\<lbrakk>(the (fmlookup A x), p) \\<in> fully_unsorted_poly_rel;\n     (p, the (fmlookup B x)) \\<in> mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> \\<Down> sorted_poly_rel\n                       (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* ?p'1))\n                      \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel)\n                             (SPEC\n                               (\\<lambda>p.\n                                   the (fmlookup B x') - p\n                                   \\<in> More_Modules.ideal\n    polynomial_bool \\<and>\n                                   vars p\n                                   \\<subseteq> vars (the (fmlookup B x'))))", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(the (fmlookup A x), p) \\<in> fully_unsorted_poly_rel;\n     (p, the (fmlookup B x)) \\<in> mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> \\<Down> sorted_poly_rel\n                       (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p))\n                      \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel)\n                             (SPEC\n                               (\\<lambda>p.\n                                   the (fmlookup B x') - p\n                                   \\<in> More_Modules.ideal\n    polynomial_bool \\<and>\n                                   vars p\n                                   \\<subseteq> vars (the (fmlookup B x'))))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(the (fmlookup A x), p) \\<in> fully_unsorted_poly_rel;\n     (p, the (fmlookup B x)) \\<in> mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> \\<Down> sorted_poly_rel\n                       (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p))\n                      \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel)\n                             (SPEC\n                               (\\<lambda>p.\n                                   the (fmlookup B x') - p\n                                   \\<in> More_Modules.ideal\n    polynomial_bool \\<and>\n                                   vars p\n                                   \\<subseteq> vars (the (fmlookup B x'))))", "using that(2)"], ["proof (prove)\nusing this:\n  (x, x') \\<in> nat_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(the (fmlookup A x), p) \\<in> fully_unsorted_poly_rel;\n     (p, the (fmlookup B x)) \\<in> mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> \\<Down> sorted_poly_rel\n                       (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p))\n                      \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel)\n                             (SPEC\n                               (\\<lambda>p.\n                                   the (fmlookup B x') - p\n                                   \\<in> More_Modules.ideal\n    polynomial_bool \\<and>\n                                   vars p\n                                   \\<subseteq> vars (the (fmlookup B x'))))", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(the (fmlookup A x), p) \\<in> fully_unsorted_poly_rel;\n     (p, the (fmlookup B x)) \\<in> mset_poly_rel;\n     (x, x') \\<in> nat_rel\\<rbrakk>\n    \\<Longrightarrow> \\<Down> sorted_poly_rel\n                       (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p))\n                      \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel)\n                             (SPEC\n                               (\\<lambda>p.\n                                   the (fmlookup B x') - p\n                                   \\<in> More_Modules.ideal\n    polynomial_bool \\<and>\n                                   vars p\n                                   \\<subseteq> vars (the (fmlookup B x'))))", "unfolding conc_fun_chain[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(the (fmlookup A x), p) \\<in> fully_unsorted_poly_rel;\n     (p, the (fmlookup B x)) \\<in> mset_poly_rel;\n     (x, x') \\<in> nat_rel\\<rbrakk>\n    \\<Longrightarrow> \\<Down> sorted_poly_rel\n                       (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p))\n                      \\<le> \\<Down> sorted_poly_rel\n                             (\\<Down> mset_poly_rel\n                               (SPEC\n                                 (\\<lambda>p.\n                                     the (fmlookup B x') - p\n                                     \\<in> More_Modules.ideal\n      polynomial_bool \\<and>\n                                     vars p\n                                     \\<subseteq> vars\n            (the (fmlookup B x')))))", "by (rule ref_two_step', rule RES_refine)\n         (auto simp: rtranclp_normalize_poly_p_poly_of_mset\n          mset_poly_rel_def ideal.span_zero)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<lbrakk>?x3 \\<in># dom_m A; (?x3, ?x'3) \\<in> nat_rel\\<rbrakk>\n  \\<Longrightarrow> full_normalize_poly (the (fmlookup A ?x3))\n                    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel)\n                           (SPEC\n                             (\\<lambda>p.\n                                 the (fmlookup B ?x'3) - p\n                                 \\<in> More_Modules.ideal\n  polynomial_bool \\<and>\n                                 vars p\n                                 \\<subseteq> vars (the (fmlookup B ?x'3))))\n\ngoal (1 subgoal):\n 1. remap_polys_l spec \\<V> A\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (remap_polys spec' \\<V>' B)", "have H': \\<open>(p, pa) \\<in> sorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n     weak_equality_l p spec \\<le> SPEC (\\<lambda>eqa. eqa \\<longrightarrow> pa = spec')\\<close> for p pa"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, pa) \\<in> sorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n    weak_equality_l p spec\n    \\<le> SPEC (\\<lambda>eqa. eqa \\<longrightarrow> pa = spec')", "using spec"], ["proof (prove)\nusing this:\n  (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel\n\ngoal (1 subgoal):\n 1. (p, pa) \\<in> sorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n    weak_equality_l p spec\n    \\<le> SPEC (\\<lambda>eqa. eqa \\<longrightarrow> pa = spec')", "by (auto simp: weak_equality_l_def weak_equality_spec_def\n        list_mset_rel_def br_def mset_poly_rel_def\n      dest: list_rel_term_poly_list_rel_same_rightD sorted_poly_list_relD)"], ["proof (state)\nthis:\n  (?p3, ?pa3) \\<in> sorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n  weak_equality_l ?p3 spec\n  \\<le> SPEC (\\<lambda>eqa. eqa \\<longrightarrow> ?pa3 = spec')\n\ngoal (1 subgoal):\n 1. remap_polys_l spec \\<V> A\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (remap_polys spec' \\<V>' B)", "have emp: \\<open>(\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel \\<Longrightarrow>\n    ((False, \\<V>, fmempty), False, \\<V>', fmempty) \\<in> bool_rel \\<times>\\<^sub>r \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r fmap_polys_rel\\<close> for \\<V> \\<V>'"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel \\<Longrightarrow>\n    ((False, \\<V>, fmempty), False, \\<V>', fmempty)\n    \\<in> bool_rel \\<times>\\<^sub>r\n          \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n          \\<langle>nat_rel, sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by auto"], ["proof (state)\nthis:\n  (?\\<V>3, ?\\<V>'3) \\<in> \\<langle>var_rel\\<rangle>set_rel \\<Longrightarrow>\n  ((False, ?\\<V>3, fmempty), False, ?\\<V>'3, fmempty)\n  \\<in> bool_rel \\<times>\\<^sub>r\n        \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r \\<langle>nat_rel,\n        sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n\ngoal (1 subgoal):\n 1. remap_polys_l spec \\<V> A\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (remap_polys spec' \\<V>' B)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. remap_polys_l spec \\<V> A\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (remap_polys spec' \\<V>' B)", "using assms"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel\n  (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. remap_polys_l spec \\<V> A\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (remap_polys spec' \\<V>' B)", "unfolding remap_polys_l_def remap_polys_l_dom_err_def\n      remap_polys_def prod.case"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel\n  (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>dom.\n         set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom) \\<bind>\n    (\\<lambda>dom.\n        SPEC (\\<lambda>_. True) \\<bind>\n        (\\<lambda>failed.\n            if failed\n            then SPEC (\\<lambda>_. True) \\<bind>\n                 (\\<lambda>c. RETURN (error_msg 0 c, \\<V>, fmempty))\n            else FOREACH dom\n                  (\\<lambda>i (b, \\<V>, A').\n                      if i \\<in># dom_m A\n                      then full_normalize_poly (the (fmlookup A i)) \\<bind>\n                           (\\<lambda>p.\n                               weak_equality_l p spec \\<bind>\n                               (\\<lambda>eq.\n                                   RETURN\n                                    (\\<V> \\<union>\n                                     vars_llist\n(the (fmlookup A i))) \\<bind>\n                                   (\\<lambda>\\<V>.\n RETURN (b \\<or> eq, \\<V>, fmupd i p A'))))\n                      else RETURN (b, \\<V>, A'))\n                  (False, \\<V>, fmempty) \\<bind>\n                 (\\<lambda>(b, \\<V>, A).\n                     RETURN (if b then CFOUND else CSUCCESS, \\<V>, A))))\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (SPEC\n             (\\<lambda>dom.\n                 set_mset (dom_m B) \\<subseteq> dom \\<and>\n                 finite dom) \\<bind>\n            (\\<lambda>dom.\n                SPEC (\\<lambda>_. True) \\<bind>\n                (\\<lambda>failed.\n                    if failed then RETURN (FAILED, \\<V>', fmempty)\n                    else FOREACH dom\n                          (\\<lambda>i (b, \\<V>, A').\n                              if i \\<in># dom_m B\n                              then SPEC\n                                    (\\<lambda>p.\n  the (fmlookup B i) - p \\<in> More_Modules.ideal polynomial_bool \\<and>\n  vars p \\<subseteq> vars (the (fmlookup B i))) \\<bind>\n                                   (\\<lambda>p.\n SPEC (\\<lambda>eqa. eqa \\<longrightarrow> p = spec') \\<bind>\n (\\<lambda>eq.\n     SPEC ((\\<subseteq>) (\\<V> \\<union> vars (the (fmlookup B i)))) \\<bind>\n     (\\<lambda>\\<V>. RETURN (b \\<or> eq, \\<V>, fmupd i p A'))))\n                              else RETURN (b, \\<V>, A'))\n                          (False, \\<V>', fmempty) \\<bind>\n                         (\\<lambda>(b, N).\n                             RETURN (if b then FOUND else SUCCESS, N)))))", "apply (refine_rcg full_normalize_poly fmap_rel_fmupd_fmap_rel)"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> SPEC\n                       (\\<lambda>dom.\n                           set_mset (dom_m A) \\<subseteq> dom \\<and>\n                           finite dom)\n                      \\<le> SPEC\n                             (\\<lambda>dom.\n                                 set_mset (dom_m B) \\<subseteq> dom \\<and>\n                                 finite dom)\n 2. \\<And>dom doma failed faileda.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> failed = faileda\n 3. \\<And>dom doma failed faileda c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; failed; faileda;\n        c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> ((error_msg 0 c, \\<V>, fmempty), FAILED, \\<V>',\n                          fmempty)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 4. \\<And>dom doma failed faileda.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda\\<rbrakk>\n       \\<Longrightarrow> inj_on (?\\<alpha>11 dom doma failed faileda) dom\n 5. \\<And>dom doma failed faileda.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda\\<rbrakk>\n       \\<Longrightarrow> doma = ?\\<alpha>11 dom doma failed faileda ` dom\n 6. \\<And>dom doma failed faileda.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>', fmempty)\n                         \\<in> ?R'10 dom doma failed faileda\n 7. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n        x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n        it \\<subseteq> dom; it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> (x \\<in># dom_m A) = (x' \\<in># dom_m B)\n 8. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n        x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n        it \\<subseteq> dom; it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> (x, x') \\<in> nat_rel\n 9. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n        x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n        it \\<subseteq> dom; it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))}\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> SPEC\n                                (\\<lambda>eqa.\n                                    eqa \\<longrightarrow> pa = spec')\n 10. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n        x2a x1b x2b x1c x2c p pa eqa eqaa.\n        \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                 fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n         (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n         (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n         (dom, doma) \\<in> Id;\n         dom\n         \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n         doma\n         \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n         (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n         faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n         x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n         x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n         it \\<subseteq> dom; it' \\<subseteq> doma;\n         (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n         x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n         \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n         (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n         pa \\<in> {p. the (fmlookup B x') - p\n                      \\<in> More_Modules.ideal polynomial_bool \\<and>\n                      vars p \\<subseteq> vars (the (fmlookup B x'))};\n         (eqa, eqaa) \\<in> bool_rel;\n         eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'}\\<rbrakk>\n        \\<Longrightarrow> RETURN\n                           (x1c \\<union> vars_llist (the (fmlookup A x)))\n                          \\<le> \\<Down>\n                                 (?R'72 dom doma failed faileda x it\n                                   \\<sigma> x' it' \\<sigma>' x1 x2 x1a x2a\n                                   x1b x2b x1c x2c p pa eqa eqaa)\n                                 (SPEC\n                                   ((\\<subseteq>)\n                                     (x1a \\<union>\nvars (the (fmlookup B x')))))\nA total of 13 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> SPEC\n                       (\\<lambda>dom.\n                           set_mset (dom_m A) \\<subseteq> dom \\<and>\n                           finite dom)\n                      \\<le> SPEC\n                             (\\<lambda>dom.\n                                 set_mset (dom_m B) \\<subseteq> dom \\<and>\n                                 finite dom)", "by auto"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>dom doma failed faileda.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> failed = faileda\n 2. \\<And>dom doma failed faileda c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; failed; faileda;\n        c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> ((error_msg 0 c, \\<V>, fmempty), FAILED, \\<V>',\n                          fmempty)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 3. \\<And>dom doma failed faileda.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda\\<rbrakk>\n       \\<Longrightarrow> inj_on (?\\<alpha>11 dom doma failed faileda) dom\n 4. \\<And>dom doma failed faileda.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda\\<rbrakk>\n       \\<Longrightarrow> doma = ?\\<alpha>11 dom doma failed faileda ` dom\n 5. \\<And>dom doma failed faileda.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>', fmempty)\n                         \\<in> ?R'10 dom doma failed faileda\n 6. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n        x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n        it \\<subseteq> dom; it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> (x \\<in># dom_m A) = (x' \\<in># dom_m B)\n 7. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n        x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n        it \\<subseteq> dom; it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> (x, x') \\<in> nat_rel\n 8. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n        x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n        it \\<subseteq> dom; it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))}\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> SPEC\n                                (\\<lambda>eqa.\n                                    eqa \\<longrightarrow> pa = spec')\n 9. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n        x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n        it \\<subseteq> dom; it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'}\\<rbrakk>\n       \\<Longrightarrow> RETURN\n                          (x1c \\<union> vars_llist (the (fmlookup A x)))\n                         \\<le> \\<Down>\n                                (?R'72 dom doma failed faileda x it \\<sigma>\n                                  x' it' \\<sigma>' x1 x2 x1a x2a x1b x2b x1c\n                                  x2c p pa eqa eqaa)\n                                (SPEC\n                                  ((\\<subseteq>)\n                                    (x1a \\<union>\n                                     vars (the (fmlookup B x')))))\n 10. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n        x2a x1b x2b x1c x2c p pa eqa eqaa \\<V>'' \\<V>'''.\n        \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                 fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n         (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n         (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n         (dom, doma) \\<in> Id;\n         dom\n         \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n         doma\n         \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n         (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n         faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n         x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n         x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n         it \\<subseteq> dom; it' \\<subseteq> doma;\n         (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n         x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n         \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n         (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n         pa \\<in> {p. the (fmlookup B x') - p\n                      \\<in> More_Modules.ideal polynomial_bool \\<and>\n                      vars p \\<subseteq> vars (the (fmlookup B x'))};\n         (eqa, eqaa) \\<in> bool_rel;\n         eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'};\n         (\\<V>'', \\<V>''')\n         \\<in> ?R'72 dom doma failed faileda x it \\<sigma> x' it' \\<sigma>'\n                x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa eqaa;\n         \\<V>'''\n         \\<in> Collect\n                ((\\<subseteq>)\n                  (x1a \\<union> vars (the (fmlookup B x'))))\\<rbrakk>\n        \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>'', fmupd x p x2c),\n                           x1 \\<or> eqaa, \\<V>''', fmupd x' pa x2a)\n                          \\<in> ?R'10 dom doma failed faileda\nA total of 12 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (dom_, doma_) \\<in> Id;\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     doma_\n     \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n     (failed_, faileda_) \\<in> bool_rel; failed_ \\<in> {uu_. True};\n     faileda_ \\<in> {uu_. True}\\<rbrakk>\n    \\<Longrightarrow> failed_ = faileda_", "by auto"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>dom doma failed faileda c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; failed; faileda;\n        c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> ((error_msg 0 c, \\<V>, fmempty), FAILED, \\<V>',\n                          fmempty)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 2. \\<And>dom doma failed faileda.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda\\<rbrakk>\n       \\<Longrightarrow> inj_on (?\\<alpha>11 dom doma failed faileda) dom\n 3. \\<And>dom doma failed faileda.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda\\<rbrakk>\n       \\<Longrightarrow> doma = ?\\<alpha>11 dom doma failed faileda ` dom\n 4. \\<And>dom doma failed faileda.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>', fmempty)\n                         \\<in> ?R'10 dom doma failed faileda\n 5. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n        x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n        it \\<subseteq> dom; it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> (x \\<in># dom_m A) = (x' \\<in># dom_m B)\n 6. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n        x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n        it \\<subseteq> dom; it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> (x, x') \\<in> nat_rel\n 7. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n        x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n        it \\<subseteq> dom; it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))}\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> SPEC\n                                (\\<lambda>eqa.\n                                    eqa \\<longrightarrow> pa = spec')\n 8. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n        x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n        it \\<subseteq> dom; it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'}\\<rbrakk>\n       \\<Longrightarrow> RETURN\n                          (x1c \\<union> vars_llist (the (fmlookup A x)))\n                         \\<le> \\<Down>\n                                (?R'72 dom doma failed faileda x it \\<sigma>\n                                  x' it' \\<sigma>' x1 x2 x1a x2a x1b x2b x1c\n                                  x2c p pa eqa eqaa)\n                                (SPEC\n                                  ((\\<subseteq>)\n                                    (x1a \\<union>\n                                     vars (the (fmlookup B x')))))\n 9. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa \\<V>'' \\<V>'''.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n        x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n        it \\<subseteq> dom; it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'};\n        (\\<V>'', \\<V>''')\n        \\<in> ?R'72 dom doma failed faileda x it \\<sigma> x' it' \\<sigma>'\n               x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa eqaa;\n        \\<V>'''\n        \\<in> Collect\n               ((\\<subseteq>)\n                 (x1a \\<union> vars (the (fmlookup B x'))))\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>'', fmupd x p x2c),\n                          x1 \\<or> eqaa, \\<V>''', fmupd x' pa x2a)\n                         \\<in> ?R'10 dom doma failed faileda\n 10. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n        x2a x1b x2b x1c x2c.\n        \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                 fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n         (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n         (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n         (dom, doma) \\<in> Id;\n         dom\n         \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n         doma\n         \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n         (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n         faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n         x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n         x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n         it \\<subseteq> dom; it' \\<subseteq> doma;\n         (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n         x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n         \\<sigma> = (x1b, x2b); x \\<notin># dom_m A;\n         x' \\<notin># dom_m B\\<rbrakk>\n        \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                          \\<in> ?R'10 dom doma failed faileda\nA total of 11 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (dom_, doma_) \\<in> Id;\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     doma_\n     \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n     (failed_, faileda_) \\<in> bool_rel; failed_ \\<in> {uu_. True};\n     faileda_ \\<in> {uu_. True}; failed_; faileda_;\n     c_ \\<in> {uu_. True}\\<rbrakk>\n    \\<Longrightarrow> ((error_msg 0 c_, \\<V>, fmempty), FAILED, \\<V>',\n                       fmempty)\n                      \\<in> code_status_status_rel \\<times>\\<^sub>r\n                            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                            \\<langle>nat_rel,\n                            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by (auto simp: error_msg_def)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>dom doma failed faileda.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda\\<rbrakk>\n       \\<Longrightarrow> inj_on (?\\<alpha>11 dom doma failed faileda) dom\n 2. \\<And>dom doma failed faileda.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda\\<rbrakk>\n       \\<Longrightarrow> doma = ?\\<alpha>11 dom doma failed faileda ` dom\n 3. \\<And>dom doma failed faileda.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>', fmempty)\n                         \\<in> ?R'10 dom doma failed faileda\n 4. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n        x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n        it \\<subseteq> dom; it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> (x \\<in># dom_m A) = (x' \\<in># dom_m B)\n 5. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n        x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n        it \\<subseteq> dom; it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> (x, x') \\<in> nat_rel\n 6. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n        x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n        it \\<subseteq> dom; it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))}\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> SPEC\n                                (\\<lambda>eqa.\n                                    eqa \\<longrightarrow> pa = spec')\n 7. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n        x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n        it \\<subseteq> dom; it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'}\\<rbrakk>\n       \\<Longrightarrow> RETURN\n                          (x1c \\<union> vars_llist (the (fmlookup A x)))\n                         \\<le> \\<Down>\n                                (?R'72 dom doma failed faileda x it \\<sigma>\n                                  x' it' \\<sigma>' x1 x2 x1a x2a x1b x2b x1c\n                                  x2c p pa eqa eqaa)\n                                (SPEC\n                                  ((\\<subseteq>)\n                                    (x1a \\<union>\n                                     vars (the (fmlookup B x')))))\n 8. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa \\<V>'' \\<V>'''.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n        x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n        it \\<subseteq> dom; it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'};\n        (\\<V>'', \\<V>''')\n        \\<in> ?R'72 dom doma failed faileda x it \\<sigma> x' it' \\<sigma>'\n               x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa eqaa;\n        \\<V>'''\n        \\<in> Collect\n               ((\\<subseteq>)\n                 (x1a \\<union> vars (the (fmlookup B x'))))\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>'', fmupd x p x2c),\n                          x1 \\<or> eqaa, \\<V>''', fmupd x' pa x2a)\n                         \\<in> ?R'10 dom doma failed faileda\n 9. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        x' = ?\\<alpha>11 dom doma failed faileda x; x \\<in> it;\n        x' \\<in> it'; it' = ?\\<alpha>11 dom doma failed faileda ` it;\n        it \\<subseteq> dom; it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<notin># dom_m A;\n        x' \\<notin># dom_m B\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> ?R'10 dom doma failed faileda\n 10. \\<And>dom doma failed faileda x x' x1 x2 x1a x2a x1b x2b.\n        \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                 fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n         (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n         (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n         (dom, doma) \\<in> Id;\n         dom\n         \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n         doma\n         \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n         (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n         faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n         (x, x') \\<in> ?R'10 dom doma failed faileda; x' = (x1, x2);\n         x2a = (x1b, x2b); x = (x1a, x2a)\\<rbrakk>\n        \\<Longrightarrow> ((if x1a then CFOUND else CSUCCESS, x1b, x2b),\n                           if x1 then FOUND else SUCCESS, x2)\n                          \\<in> code_status_status_rel \\<times>\\<^sub>r\n                                \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                \\<langle>nat_rel,\n                                sorted_poly_rel O\n                                mset_poly_rel\\<rangle>fmap_rel", "apply (rule 1)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>dom doma failed faileda.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda\\<rbrakk>\n       \\<Longrightarrow> doma = id ` dom\n 2. \\<And>dom doma failed faileda.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>', fmempty)\n                         \\<in> ?R'10 dom doma failed faileda\n 3. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> (x \\<in># dom_m A) = (x' \\<in># dom_m B)\n 4. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> (x, x') \\<in> nat_rel\n 5. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))}\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> SPEC\n                                (\\<lambda>eqa.\n                                    eqa \\<longrightarrow> pa = spec')\n 6. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'}\\<rbrakk>\n       \\<Longrightarrow> RETURN\n                          (x1c \\<union> vars_llist (the (fmlookup A x)))\n                         \\<le> \\<Down>\n                                (?R'72 dom doma failed faileda x it \\<sigma>\n                                  x' it' \\<sigma>' x1 x2 x1a x2a x1b x2b x1c\n                                  x2c p pa eqa eqaa)\n                                (SPEC\n                                  ((\\<subseteq>)\n                                    (x1a \\<union>\n                                     vars (the (fmlookup B x')))))\n 7. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa \\<V>'' \\<V>'''.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'};\n        (\\<V>'', \\<V>''')\n        \\<in> ?R'72 dom doma failed faileda x it \\<sigma> x' it' \\<sigma>'\n               x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa eqaa;\n        \\<V>'''\n        \\<in> Collect\n               ((\\<subseteq>)\n                 (x1a \\<union> vars (the (fmlookup B x'))))\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>'', fmupd x p x2c),\n                          x1 \\<or> eqaa, \\<V>''', fmupd x' pa x2a)\n                         \\<in> ?R'10 dom doma failed faileda\n 8. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<notin># dom_m A;\n        x' \\<notin># dom_m B\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> ?R'10 dom doma failed faileda\n 9. \\<And>dom doma failed faileda x x' x1 x2 x1a x2a x1b x2b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        (x, x') \\<in> ?R'10 dom doma failed faileda; x' = (x1, x2);\n        x2a = (x1b, x2b); x = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> ((if x1a then CFOUND else CSUCCESS, x1b, x2b),\n                          if x1 then FOUND else SUCCESS, x2)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (dom_, doma_) \\<in> Id;\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     doma_\n     \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n     (failed_, faileda_) \\<in> bool_rel; failed_ \\<in> {uu_. True};\n     faileda_ \\<in> {uu_. True}; \\<not> failed_; \\<not> faileda_\\<rbrakk>\n    \\<Longrightarrow> doma_ = id ` dom_", "by auto"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>dom doma failed faileda.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>', fmempty)\n                         \\<in> ?R'10 dom doma failed faileda\n 2. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> (x \\<in># dom_m A) = (x' \\<in># dom_m B)\n 3. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> (x, x') \\<in> nat_rel\n 4. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))}\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> SPEC\n                                (\\<lambda>eqa.\n                                    eqa \\<longrightarrow> pa = spec')\n 5. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'}\\<rbrakk>\n       \\<Longrightarrow> RETURN\n                          (x1c \\<union> vars_llist (the (fmlookup A x)))\n                         \\<le> \\<Down>\n                                (?R'72 dom doma failed faileda x it \\<sigma>\n                                  x' it' \\<sigma>' x1 x2 x1a x2a x1b x2b x1c\n                                  x2c p pa eqa eqaa)\n                                (SPEC\n                                  ((\\<subseteq>)\n                                    (x1a \\<union>\n                                     vars (the (fmlookup B x')))))\n 6. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa \\<V>'' \\<V>'''.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'};\n        (\\<V>'', \\<V>''')\n        \\<in> ?R'72 dom doma failed faileda x it \\<sigma> x' it' \\<sigma>'\n               x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa eqaa;\n        \\<V>'''\n        \\<in> Collect\n               ((\\<subseteq>)\n                 (x1a \\<union> vars (the (fmlookup B x'))))\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>'', fmupd x p x2c),\n                          x1 \\<or> eqaa, \\<V>''', fmupd x' pa x2a)\n                         \\<in> ?R'10 dom doma failed faileda\n 7. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>') \\<in> ?R'10 dom doma failed faileda;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<notin># dom_m A;\n        x' \\<notin># dom_m B\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> ?R'10 dom doma failed faileda\n 8. \\<And>dom doma failed faileda x x' x1 x2 x1a x2a x1b x2b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        (x, x') \\<in> ?R'10 dom doma failed faileda; x' = (x1, x2);\n        x2a = (x1b, x2b); x = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> ((if x1a then CFOUND else CSUCCESS, x1b, x2b),\n                          if x1 then FOUND else SUCCESS, x2)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "apply (rule emp)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>dom doma failed faileda.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda\\<rbrakk>\n       \\<Longrightarrow> (\\<V>, \\<V>')\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel\n 2. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> (x \\<in># dom_m A) = (x' \\<in># dom_m B)\n 3. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> (x, x') \\<in> nat_rel\n 4. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))}\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> SPEC\n                                (\\<lambda>eqa.\n                                    eqa \\<longrightarrow> pa = spec')\n 5. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'}\\<rbrakk>\n       \\<Longrightarrow> RETURN\n                          (x1c \\<union> vars_llist (the (fmlookup A x)))\n                         \\<le> \\<Down>\n                                (?R'72 dom doma failed faileda x it \\<sigma>\n                                  x' it' \\<sigma>' x1 x2 x1a x2a x1b x2b x1c\n                                  x2c p pa eqa eqaa)\n                                (SPEC\n                                  ((\\<subseteq>)\n                                    (x1a \\<union>\n                                     vars (the (fmlookup B x')))))\n 6. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa \\<V>'' \\<V>'''.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'};\n        (\\<V>'', \\<V>''')\n        \\<in> ?R'72 dom doma failed faileda x it \\<sigma> x' it' \\<sigma>'\n               x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa eqaa;\n        \\<V>'''\n        \\<in> Collect\n               ((\\<subseteq>)\n                 (x1a \\<union> vars (the (fmlookup B x'))))\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>'', fmupd x p x2c),\n                          x1 \\<or> eqaa, \\<V>''', fmupd x' pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 7. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<notin># dom_m A;\n        x' \\<notin># dom_m B\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 8. \\<And>dom doma failed faileda x x' x1 x2 x1a x2a x1b x2b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x' = (x1, x2); x2a = (x1b, x2b); x = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> ((if x1a then CFOUND else CSUCCESS, x1b, x2b),\n                          if x1 then FOUND else SUCCESS, x2)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (dom_, doma_) \\<in> Id;\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     doma_\n     \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n     (failed_, faileda_) \\<in> bool_rel; failed_ \\<in> {uu_. True};\n     faileda_ \\<in> {uu_. True}; \\<not> failed_; \\<not> faileda_\\<rbrakk>\n    \\<Longrightarrow> (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel", "using V"], ["proof (prove)\nusing this:\n  (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (dom_, doma_) \\<in> Id;\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     doma_\n     \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n     (failed_, faileda_) \\<in> bool_rel; failed_ \\<in> {uu_. True};\n     faileda_ \\<in> {uu_. True}; \\<not> failed_; \\<not> faileda_\\<rbrakk>\n    \\<Longrightarrow> (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel", "by auto"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> (x \\<in># dom_m A) = (x' \\<in># dom_m B)\n 2. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> (x, x') \\<in> nat_rel\n 3. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))}\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> SPEC\n                                (\\<lambda>eqa.\n                                    eqa \\<longrightarrow> pa = spec')\n 4. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'}\\<rbrakk>\n       \\<Longrightarrow> RETURN\n                          (x1c \\<union> vars_llist (the (fmlookup A x)))\n                         \\<le> \\<Down>\n                                (?R'72 dom doma failed faileda x it \\<sigma>\n                                  x' it' \\<sigma>' x1 x2 x1a x2a x1b x2b x1c\n                                  x2c p pa eqa eqaa)\n                                (SPEC\n                                  ((\\<subseteq>)\n                                    (x1a \\<union>\n                                     vars (the (fmlookup B x')))))\n 5. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa \\<V>'' \\<V>'''.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'};\n        (\\<V>'', \\<V>''')\n        \\<in> ?R'72 dom doma failed faileda x it \\<sigma> x' it' \\<sigma>'\n               x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa eqaa;\n        \\<V>'''\n        \\<in> Collect\n               ((\\<subseteq>)\n                 (x1a \\<union> vars (the (fmlookup B x'))))\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>'', fmupd x p x2c),\n                          x1 \\<or> eqaa, \\<V>''', fmupd x' pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 6. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<notin># dom_m A;\n        x' \\<notin># dom_m B\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 7. \\<And>dom doma failed faileda x x' x1 x2 x1a x2a x1b x2b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x' = (x1, x2); x2a = (x1b, x2b); x = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> ((if x1a then CFOUND else CSUCCESS, x1b, x2b),\n                          if x1 then FOUND else SUCCESS, x2)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (dom_, doma_) \\<in> Id;\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     doma_\n     \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n     (failed_, faileda_) \\<in> bool_rel; failed_ \\<in> {uu_. True};\n     faileda_ \\<in> {uu_. True}; \\<not> failed_; \\<not> faileda_;\n     x'_ = id x_; x_ \\<in> it_; x'_ \\<in> it'_; it'_ = id ` it_;\n     it_ \\<subseteq> dom_; it'_ \\<subseteq> doma_;\n     (\\<sigma>_, \\<sigma>'_)\n     \\<in> bool_rel \\<times>\\<^sub>r\n           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     x2_ = (x1a_, x2a_); \\<sigma>'_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     \\<sigma>_ = (x1b_, x2b_)\\<rbrakk>\n    \\<Longrightarrow> (x_ \\<in># dom_m A) = (x'_ \\<in># dom_m B)", "by auto"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> (x, x') \\<in> nat_rel\n 2. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))}\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> SPEC\n                                (\\<lambda>eqa.\n                                    eqa \\<longrightarrow> pa = spec')\n 3. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'}\\<rbrakk>\n       \\<Longrightarrow> RETURN\n                          (x1c \\<union> vars_llist (the (fmlookup A x)))\n                         \\<le> \\<Down>\n                                (?R'72 dom doma failed faileda x it \\<sigma>\n                                  x' it' \\<sigma>' x1 x2 x1a x2a x1b x2b x1c\n                                  x2c p pa eqa eqaa)\n                                (SPEC\n                                  ((\\<subseteq>)\n                                    (x1a \\<union>\n                                     vars (the (fmlookup B x')))))\n 4. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa \\<V>'' \\<V>'''.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'};\n        (\\<V>'', \\<V>''')\n        \\<in> ?R'72 dom doma failed faileda x it \\<sigma> x' it' \\<sigma>'\n               x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa eqaa;\n        \\<V>'''\n        \\<in> Collect\n               ((\\<subseteq>)\n                 (x1a \\<union> vars (the (fmlookup B x'))))\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>'', fmupd x p x2c),\n                          x1 \\<or> eqaa, \\<V>''', fmupd x' pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 5. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<notin># dom_m A;\n        x' \\<notin># dom_m B\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 6. \\<And>dom doma failed faileda x x' x1 x2 x1a x2a x1b x2b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x' = (x1, x2); x2a = (x1b, x2b); x = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> ((if x1a then CFOUND else CSUCCESS, x1b, x2b),\n                          if x1 then FOUND else SUCCESS, x2)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (dom_, doma_) \\<in> Id;\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     doma_\n     \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n     (failed_, faileda_) \\<in> bool_rel; failed_ \\<in> {uu_. True};\n     faileda_ \\<in> {uu_. True}; \\<not> failed_; \\<not> faileda_;\n     x'_ = id x_; x_ \\<in> it_; x'_ \\<in> it'_; it'_ = id ` it_;\n     it_ \\<subseteq> dom_; it'_ \\<subseteq> doma_;\n     (\\<sigma>_, \\<sigma>'_)\n     \\<in> bool_rel \\<times>\\<^sub>r\n           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     x2_ = (x1a_, x2a_); \\<sigma>'_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     \\<sigma>_ = (x1b_, x2b_); x_ \\<in># dom_m A;\n     x'_ \\<in># dom_m B\\<rbrakk>\n    \\<Longrightarrow> (x_, x'_) \\<in> nat_rel", "by auto"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))}\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> SPEC\n                                (\\<lambda>eqa.\n                                    eqa \\<longrightarrow> pa = spec')\n 2. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'}\\<rbrakk>\n       \\<Longrightarrow> RETURN\n                          (x1c \\<union> vars_llist (the (fmlookup A x)))\n                         \\<le> \\<Down>\n                                (?R'72 dom doma failed faileda x it \\<sigma>\n                                  x' it' \\<sigma>' x1 x2 x1a x2a x1b x2b x1c\n                                  x2c p pa eqa eqaa)\n                                (SPEC\n                                  ((\\<subseteq>)\n                                    (x1a \\<union>\n                                     vars (the (fmlookup B x')))))\n 3. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa \\<V>'' \\<V>'''.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'};\n        (\\<V>'', \\<V>''')\n        \\<in> ?R'72 dom doma failed faileda x it \\<sigma> x' it' \\<sigma>'\n               x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa eqaa;\n        \\<V>'''\n        \\<in> Collect\n               ((\\<subseteq>)\n                 (x1a \\<union> vars (the (fmlookup B x'))))\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>'', fmupd x p x2c),\n                          x1 \\<or> eqaa, \\<V>''', fmupd x' pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 4. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<notin># dom_m A;\n        x' \\<notin># dom_m B\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 5. \\<And>dom doma failed faileda x x' x1 x2 x1a x2a x1b x2b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x' = (x1, x2); x2a = (x1b, x2b); x = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> ((if x1a then CFOUND else CSUCCESS, x1b, x2b),\n                          if x1 then FOUND else SUCCESS, x2)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (dom_, doma_) \\<in> Id;\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     doma_\n     \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n     (failed_, faileda_) \\<in> bool_rel; failed_ \\<in> {uu_. True};\n     faileda_ \\<in> {uu_. True}; \\<not> failed_; \\<not> faileda_;\n     x'_ = id x_; x_ \\<in> it_; x'_ \\<in> it'_; it'_ = id ` it_;\n     it_ \\<subseteq> dom_; it'_ \\<subseteq> doma_;\n     (\\<sigma>_, \\<sigma>'_)\n     \\<in> bool_rel \\<times>\\<^sub>r\n           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     x2_ = (x1a_, x2a_); \\<sigma>'_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     \\<sigma>_ = (x1b_, x2b_); x_ \\<in># dom_m A; x'_ \\<in># dom_m B;\n     (p_, pa_) \\<in> sorted_poly_rel O mset_poly_rel;\n     pa_\n     \\<in> {p. the (fmlookup B x'_) - p\n               \\<in> More_Modules.ideal polynomial_bool \\<and>\n               vars p \\<subseteq> vars (the (fmlookup B x'_))}\\<rbrakk>\n    \\<Longrightarrow> weak_equality_l p_ spec\n                      \\<le> SPEC\n                             (\\<lambda>eqa.\n                                 eqa \\<longrightarrow> pa_ = spec')", "by (rule H')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'}\\<rbrakk>\n       \\<Longrightarrow> RETURN\n                          (x1c \\<union> vars_llist (the (fmlookup A x)))\n                         \\<le> \\<Down>\n                                (?R'72 dom doma failed faileda x it \\<sigma>\n                                  x' it' \\<sigma>' x1 x2 x1a x2a x1b x2b x1c\n                                  x2c p pa eqa eqaa)\n                                (SPEC\n                                  ((\\<subseteq>)\n                                    (x1a \\<union>\n                                     vars (the (fmlookup B x')))))\n 2. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa \\<V>'' \\<V>'''.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'};\n        (\\<V>'', \\<V>''')\n        \\<in> ?R'72 dom doma failed faileda x it \\<sigma> x' it' \\<sigma>'\n               x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa eqaa;\n        \\<V>'''\n        \\<in> Collect\n               ((\\<subseteq>)\n                 (x1a \\<union> vars (the (fmlookup B x'))))\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>'', fmupd x p x2c),\n                          x1 \\<or> eqaa, \\<V>''', fmupd x' pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 3. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<notin># dom_m A;\n        x' \\<notin># dom_m B\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 4. \\<And>dom doma failed faileda x x' x1 x2 x1a x2a x1b x2b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x' = (x1, x2); x2a = (x1b, x2b); x = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> ((if x1a then CFOUND else CSUCCESS, x1b, x2b),\n                          if x1 then FOUND else SUCCESS, x2)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "apply (rule fully_unsorted_poly_rel_extend_vars)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'}\\<rbrakk>\n       \\<Longrightarrow> (the (fmlookup A x), the (fmlookup B x'))\n                         \\<in> fully_unsorted_poly_rel O mset_poly_rel\n 2. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'}\\<rbrakk>\n       \\<Longrightarrow> (x1c, x1a) \\<in> \\<langle>var_rel\\<rangle>set_rel\n 3. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa \\<V>'' \\<V>'''.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'};\n        (\\<V>'', \\<V>''') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        \\<V>'''\n        \\<in> Collect\n               ((\\<subseteq>)\n                 (x1a \\<union> vars (the (fmlookup B x'))))\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>'', fmupd x p x2c),\n                          x1 \\<or> eqaa, \\<V>''', fmupd x' pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 4. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<notin># dom_m A;\n        x' \\<notin># dom_m B\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 5. \\<And>dom doma failed faileda x x' x1 x2 x1a x2a x1b x2b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x' = (x1, x2); x2a = (x1b, x2b); x = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> ((if x1a then CFOUND else CSUCCESS, x1b, x2b),\n                          if x1 then FOUND else SUCCESS, x2)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (dom_, doma_) \\<in> Id;\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     doma_\n     \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n     (failed_, faileda_) \\<in> bool_rel; failed_ \\<in> {uu_. True};\n     faileda_ \\<in> {uu_. True}; \\<not> failed_; \\<not> faileda_;\n     x'_ = id x_; x_ \\<in> it_; x'_ \\<in> it'_; it'_ = id ` it_;\n     it_ \\<subseteq> dom_; it'_ \\<subseteq> doma_;\n     (\\<sigma>_, \\<sigma>'_)\n     \\<in> bool_rel \\<times>\\<^sub>r\n           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     x2_ = (x1a_, x2a_); \\<sigma>'_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     \\<sigma>_ = (x1b_, x2b_); x_ \\<in># dom_m A; x'_ \\<in># dom_m B;\n     (p_, pa_) \\<in> sorted_poly_rel O mset_poly_rel;\n     pa_\n     \\<in> {p. the (fmlookup B x'_) - p\n               \\<in> More_Modules.ideal polynomial_bool \\<and>\n               vars p \\<subseteq> vars (the (fmlookup B x'_))};\n     (eqa_, eqaa_) \\<in> bool_rel;\n     eqaa_ \\<in> {eqa. eqa \\<longrightarrow> pa_ = spec'}\\<rbrakk>\n    \\<Longrightarrow> (the (fmlookup A x_), the (fmlookup B x'_))\n                      \\<in> fully_unsorted_poly_rel O mset_poly_rel", "by (auto intro!: fmap_rel_nat_the_fmlookup)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'}\\<rbrakk>\n       \\<Longrightarrow> (x1c, x1a) \\<in> \\<langle>var_rel\\<rangle>set_rel\n 2. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa \\<V>'' \\<V>'''.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'};\n        (\\<V>'', \\<V>''') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        \\<V>'''\n        \\<in> Collect\n               ((\\<subseteq>)\n                 (x1a \\<union> vars (the (fmlookup B x'))))\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>'', fmupd x p x2c),\n                          x1 \\<or> eqaa, \\<V>''', fmupd x' pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 3. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<notin># dom_m A;\n        x' \\<notin># dom_m B\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 4. \\<And>dom doma failed faileda x x' x1 x2 x1a x2a x1b x2b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x' = (x1, x2); x2a = (x1b, x2b); x = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> ((if x1a then CFOUND else CSUCCESS, x1b, x2b),\n                          if x1 then FOUND else SUCCESS, x2)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (dom_, doma_) \\<in> Id;\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     doma_\n     \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n     (failed_, faileda_) \\<in> bool_rel; failed_ \\<in> {uu_. True};\n     faileda_ \\<in> {uu_. True}; \\<not> failed_; \\<not> faileda_;\n     x'_ = id x_; x_ \\<in> it_; x'_ \\<in> it'_; it'_ = id ` it_;\n     it_ \\<subseteq> dom_; it'_ \\<subseteq> doma_;\n     (\\<sigma>_, \\<sigma>'_)\n     \\<in> bool_rel \\<times>\\<^sub>r\n           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     x2_ = (x1a_, x2a_); \\<sigma>'_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     \\<sigma>_ = (x1b_, x2b_); x_ \\<in># dom_m A; x'_ \\<in># dom_m B;\n     (p_, pa_) \\<in> sorted_poly_rel O mset_poly_rel;\n     pa_\n     \\<in> {p. the (fmlookup B x'_) - p\n               \\<in> More_Modules.ideal polynomial_bool \\<and>\n               vars p \\<subseteq> vars (the (fmlookup B x'_))};\n     (eqa_, eqaa_) \\<in> bool_rel;\n     eqaa_ \\<in> {eqa. eqa \\<longrightarrow> pa_ = spec'}\\<rbrakk>\n    \\<Longrightarrow> (x1c_, x1a_) \\<in> \\<langle>var_rel\\<rangle>set_rel", "by (auto intro!: fmap_rel_fmupd_fmap_rel)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c p pa eqa eqaa \\<V>'' \\<V>'''.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<in># dom_m A; x' \\<in># dom_m B;\n        (p, pa) \\<in> sorted_poly_rel O mset_poly_rel;\n        pa \\<in> {p. the (fmlookup B x') - p\n                     \\<in> More_Modules.ideal polynomial_bool \\<and>\n                     vars p \\<subseteq> vars (the (fmlookup B x'))};\n        (eqa, eqaa) \\<in> bool_rel;\n        eqaa \\<in> {eqa. eqa \\<longrightarrow> pa = spec'};\n        (\\<V>'', \\<V>''') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        \\<V>'''\n        \\<in> Collect\n               ((\\<subseteq>)\n                 (x1a \\<union> vars (the (fmlookup B x'))))\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>'', fmupd x p x2c),\n                          x1 \\<or> eqaa, \\<V>''', fmupd x' pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 2. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<notin># dom_m A;\n        x' \\<notin># dom_m B\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 3. \\<And>dom doma failed faileda x x' x1 x2 x1a x2a x1b x2b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x' = (x1, x2); x2a = (x1b, x2b); x = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> ((if x1a then CFOUND else CSUCCESS, x1b, x2b),\n                          if x1 then FOUND else SUCCESS, x2)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (dom_, doma_) \\<in> Id;\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     doma_\n     \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n     (failed_, faileda_) \\<in> bool_rel; failed_ \\<in> {uu_. True};\n     faileda_ \\<in> {uu_. True}; \\<not> failed_; \\<not> faileda_;\n     x'_ = id x_; x_ \\<in> it_; x'_ \\<in> it'_; it'_ = id ` it_;\n     it_ \\<subseteq> dom_; it'_ \\<subseteq> doma_;\n     (\\<sigma>_, \\<sigma>'_)\n     \\<in> bool_rel \\<times>\\<^sub>r\n           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     x2_ = (x1a_, x2a_); \\<sigma>'_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     \\<sigma>_ = (x1b_, x2b_); x_ \\<in># dom_m A; x'_ \\<in># dom_m B;\n     (p_, pa_) \\<in> sorted_poly_rel O mset_poly_rel;\n     pa_\n     \\<in> {p. the (fmlookup B x'_) - p\n               \\<in> More_Modules.ideal polynomial_bool \\<and>\n               vars p \\<subseteq> vars (the (fmlookup B x'_))};\n     (eqa_, eqaa_) \\<in> bool_rel;\n     eqaa_ \\<in> {eqa. eqa \\<longrightarrow> pa_ = spec'};\n     (\\<V>''_, \\<V>'''_) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     \\<V>'''_\n     \\<in> Collect\n            ((\\<subseteq>)\n              (x1a_ \\<union> vars (the (fmlookup B x'_))))\\<rbrakk>\n    \\<Longrightarrow> ((x1b_ \\<or> eqa_, \\<V>''_, fmupd x_ p_ x2c_),\n                       x1_ \\<or> eqaa_, \\<V>'''_, fmupd x'_ pa_ x2a_)\n                      \\<in> bool_rel \\<times>\\<^sub>r\n                            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                            \\<langle>nat_rel,\n                            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by (auto intro!: fmap_rel_fmupd_fmap_rel)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>dom doma failed faileda x it \\<sigma> x' it' \\<sigma>' x1 x2 x1a\n       x2a x1b x2b x1c x2c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda; x' = id x;\n        x \\<in> it; x' \\<in> it'; it' = id ` it; it \\<subseteq> dom;\n        it' \\<subseteq> doma;\n        (\\<sigma>, \\<sigma>')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); \\<sigma>' = (x1, x2); x2b = (x1c, x2c);\n        \\<sigma> = (x1b, x2b); x \\<notin># dom_m A;\n        x' \\<notin># dom_m B\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 2. \\<And>dom doma failed faileda x x' x1 x2 x1a x2a x1b x2b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x' = (x1, x2); x2a = (x1b, x2b); x = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> ((if x1a then CFOUND else CSUCCESS, x1b, x2b),\n                          if x1 then FOUND else SUCCESS, x2)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (dom_, doma_) \\<in> Id;\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     doma_\n     \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n     (failed_, faileda_) \\<in> bool_rel; failed_ \\<in> {uu_. True};\n     faileda_ \\<in> {uu_. True}; \\<not> failed_; \\<not> faileda_;\n     x'_ = id x_; x_ \\<in> it_; x'_ \\<in> it'_; it'_ = id ` it_;\n     it_ \\<subseteq> dom_; it'_ \\<subseteq> doma_;\n     (\\<sigma>_, \\<sigma>'_)\n     \\<in> bool_rel \\<times>\\<^sub>r\n           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     x2_ = (x1a_, x2a_); \\<sigma>'_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     \\<sigma>_ = (x1b_, x2b_); x_ \\<notin># dom_m A;\n     x'_ \\<notin># dom_m B\\<rbrakk>\n    \\<Longrightarrow> ((x1b_, x1c_, x2c_), x1_, x1a_, x2a_)\n                      \\<in> bool_rel \\<times>\\<^sub>r\n                            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                            \\<langle>nat_rel,\n                            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>dom doma failed faileda x x' x1 x2 x1a x2a x1b x2b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (dom, doma) \\<in> Id;\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        doma\n        \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n        (failed, faileda) \\<in> bool_rel; failed \\<in> {uu_. True};\n        faileda \\<in> {uu_. True}; \\<not> failed; \\<not> faileda;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x' = (x1, x2); x2a = (x1b, x2b); x = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> ((if x1a then CFOUND else CSUCCESS, x1b, x2b),\n                          if x1 then FOUND else SUCCESS, x2)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (dom_, doma_) \\<in> Id;\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     doma_\n     \\<in> {dom. set_mset (dom_m B) \\<subseteq> dom \\<and> finite dom};\n     (failed_, faileda_) \\<in> bool_rel; failed_ \\<in> {uu_. True};\n     faileda_ \\<in> {uu_. True}; \\<not> failed_; \\<not> faileda_;\n     (x_, x'_)\n     \\<in> bool_rel \\<times>\\<^sub>r\n           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     x'_ = (x1_, x2_); x2a_ = (x1b_, x2b_); x_ = (x1a_, x2a_)\\<rbrakk>\n    \\<Longrightarrow> ((if x1a_ then CFOUND else CSUCCESS, x1b_, x2b_),\n                       if x1_ then FOUND else SUCCESS, x2_)\n                      \\<in> code_status_status_rel \\<times>\\<^sub>r\n                            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                            \\<langle>nat_rel,\n                            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  remap_polys_l spec \\<V> A\n  \\<le> \\<Down>\n         (code_status_status_rel \\<times>\\<^sub>r\n          \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n          \\<langle>nat_rel,\n          sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n         (remap_polys spec' \\<V>' B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fref_to_Down_curry:\n  \\<open>(uncurry f, uncurry g) \\<in> [P]\\<^sub>f A \\<rightarrow> \\<langle>B\\<rangle>nres_rel \\<Longrightarrow>\n     (\\<And>x x' y y'. P (x', y') \\<Longrightarrow> ((x, y), (x', y')) \\<in> A \\<Longrightarrow> f x y \\<le> \\<Down> B (g x' y'))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (uncurry f, uncurry g)\n    \\<in> [P]\\<^sub>f A \\<rightarrow> \\<langle>B\\<rangle>nres_rel \\<Longrightarrow>\n    (\\<And>x x' y y'.\n        \\<lbrakk>P (x', y'); ((x, y), x', y') \\<in> A\\<rbrakk>\n        \\<Longrightarrow> f x y \\<le> \\<Down> B (g x' y'))", "unfolding fref_def uncurry_def nres_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(a, b). f a b, \\<lambda>(a, b). g a b)\n    \\<in> {(f, g).\n           \\<forall>x y.\n              P y \\<and> (x, y) \\<in> A \\<longrightarrow>\n              (f x, g y)\n              \\<in> {(c, a). c \\<le> \\<Down> B a}} \\<Longrightarrow>\n    (\\<And>x x' y y'.\n        \\<lbrakk>P (x', y'); ((x, y), x', y') \\<in> A\\<rbrakk>\n        \\<Longrightarrow> f x y \\<le> \\<Down> B (g x' y'))", "by auto"], ["", "lemma weak_equality_spec_weak_equality:\n  \\<open>(p, p') \\<in> mset_poly_rel \\<Longrightarrow>\n    (r, r') \\<in> mset_poly_rel \\<Longrightarrow>\n    weak_equality_spec p r \\<le> weak_equality p' r'\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(p, p') \\<in> mset_poly_rel;\n     (r, r') \\<in> mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> weak_equality_spec p r \\<le> weak_equality p' r'", "unfolding weak_equality_spec_def weak_equality_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(p, p') \\<in> mset_poly_rel;\n     (r, r') \\<in> mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> SPEC (\\<lambda>ra. ra \\<longrightarrow> p = r)\n                      \\<le> SPEC (\\<lambda>r. r \\<longrightarrow> p' = r')", "by (auto simp: mset_poly_rel_def)"], ["", "lemma weak_equality_l_weak_equality_l'[refine]:\n  \\<open>weak_equality_l p q \\<le> \\<Down> bool_rel (weak_equality p' q')\\<close>\n  if \\<open>(p, p') \\<in> sorted_poly_rel O mset_poly_rel\\<close>\n    \\<open>(q, q') \\<in> sorted_poly_rel O mset_poly_rel\\<close>\n  for p p' q q'"], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_equality_l p q \\<le> \\<Down> bool_rel (weak_equality p' q')", "using that"], ["proof (prove)\nusing this:\n  (p, p') \\<in> sorted_poly_rel O mset_poly_rel\n  (q, q') \\<in> sorted_poly_rel O mset_poly_rel\n\ngoal (1 subgoal):\n 1. weak_equality_l p q \\<le> \\<Down> bool_rel (weak_equality p' q')", "by (auto intro!: weak_equality_l_weak_equality_spec[THEN fref_to_Down_curry, THEN order_trans]\n         ref_two_step'\n         weak_equality_spec_weak_equality\n      simp flip: conc_fun_chain)"], ["", "lemma error_msg_ne_SUCCES[iff]:\n  \\<open>error_msg i m \\<noteq> CSUCCESS\\<close>\n  \\<open>error_msg i m \\<noteq> CFOUND\\<close>\n  \\<open>is_cfailed (error_msg i m)\\<close>\n  \\<open>\\<not>is_cfound (error_msg i m)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (error_msg i m \\<noteq> CSUCCESS &&& error_msg i m \\<noteq> CFOUND) &&&\n    is_cfailed (error_msg i m) &&& \\<not> is_cfound (error_msg i m)", "by (auto simp: error_msg_def)"], ["", "lemma sorted_poly_rel_vars_llist:\n  \\<open>(r, r') \\<in> sorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n   vars r' \\<subseteq> \\<phi> ` vars_llist r\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (r, r') \\<in> sorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n    vars r' \\<subseteq> \\<phi> ` vars_llist r", "apply (auto simp: mset_poly_rel_def\n      set_rel_def var_rel_def br_def vars_llist_def list_rel_append2 list_rel_append1\n      list_rel_split_right_iff list_mset_rel_def image_iff sorted_poly_list_rel_wrt_def\n    dest!: set_rev_mp[OF _ vars_polynomial_of_mset]\n    dest!: split_list)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b xc ys zs cs ds.\n       \\<lbrakk>r' =\n                Const b * poly_of_vars a +\n                (polynomial_of_mset (mset ys) +\n                 polynomial_of_mset (mset zs));\n        xc \\<in># a; sorted_wrt term_order (map fst cs @ map fst ds);\n        b \\<noteq> 0;\n        \\<forall>x\\<in>set ys \\<union> set zs. snd x \\<noteq> 0;\n        r = cs @ ds;\n        (cs, ys)\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        (ds, (a, b) # zs)\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        distinct (map fst cs); distinct (map fst ds);\n        mononoms cs \\<inter> mononoms ds = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>set cs \\<union> set ds.\n                            \\<exists>x\\<in>set (fst y). \\<phi> xc = \\<phi> x", "apply (auto dest!: multi_member_split simp: list_rel_append1\n      term_poly_list_rel_def eq_commute[of _ \\<open>mset _\\<close>]\n      list_rel_split_right_iff list_rel_append2 list_rel_split_left_iff\n      dest: arg_cong[of \\<open>mset _\\<close> \\<open>add_mset _ _\\<close> set_mset])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma check_addition_l_check_add:\n  assumes \\<open>(A, B) \\<in> fmap_polys_rel\\<close> and \\<open>(r, r') \\<in> sorted_poly_rel O mset_poly_rel\\<close>\n    \\<open>(p, p') \\<in> Id\\<close> \\<open>(q, q') \\<in> Id\\<close> \\<open>(i, i') \\<in> nat_rel\\<close>\n    \\<open>(\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel\\<close>\n  shows\n    \\<open>check_addition_l spec A \\<V>' p q i r \\<le> \\<Down> {(st, b). (\\<not>is_cfailed st \\<longleftrightarrow> b) \\<and>\n       (is_cfound st \\<longrightarrow> spec = r)} (check_add B \\<V> p' q' i' r')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. check_addition_l spec A \\<V>' p q i r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_add B \\<V> p' q' i' r')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. check_addition_l spec A \\<V>' p q i r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_add B \\<V> p' q' i' r')", "have [refine]:\n    \\<open>add_poly_l (p, q) \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (add_poly_spec p' q')\\<close>\n    if \\<open>(p, p') \\<in> sorted_poly_rel O mset_poly_rel\\<close>\n      \\<open>(q, q') \\<in> sorted_poly_rel O mset_poly_rel\\<close>\n    for p p' q q'"], ["proof (prove)\ngoal (1 subgoal):\n 1. add_poly_l (p, q)\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (add_poly_spec p' q')", "using that"], ["proof (prove)\nusing this:\n  (p, p') \\<in> sorted_poly_rel O mset_poly_rel\n  (q, q') \\<in> sorted_poly_rel O mset_poly_rel\n\ngoal (1 subgoal):\n 1. add_poly_l (p, q)\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (add_poly_spec p' q')", "by (auto intro!: add_poly_l_add_poly_p'[THEN order_trans] ref_two_step'\n         add_poly_p'_add_poly_spec\n      simp flip: conc_fun_chain)"], ["proof (state)\nthis:\n  \\<lbrakk>(?p3, ?p'3) \\<in> sorted_poly_rel O mset_poly_rel;\n   (?q3, ?q'3) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n  \\<Longrightarrow> add_poly_l (?p3, ?q3)\n                    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel)\n                           (add_poly_spec ?p'3 ?q'3)\n\ngoal (1 subgoal):\n 1. check_addition_l spec A \\<V>' p q i r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_add B \\<V> p' q' i' r')", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. check_addition_l spec A \\<V>' p q i r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_add B \\<V> p' q' i' r')", "using assms"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (r, r') \\<in> sorted_poly_rel O mset_poly_rel\n  (p, p') \\<in> nat_rel\n  (q, q') \\<in> nat_rel\n  (i, i') \\<in> nat_rel\n  (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. check_addition_l spec A \\<V>' p q i r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_add B \\<V> p' q' i' r')", "unfolding check_addition_l_def\n      check_not_equal_dom_err_def"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (r, r') \\<in> sorted_poly_rel O mset_poly_rel\n  (p, p') \\<in> nat_rel\n  (q, q') \\<in> nat_rel\n  (i, i') \\<in> nat_rel\n  (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (let b = p \\<in># dom_m A \\<and>\n             q \\<in># dom_m A \\<and>\n             i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>'\n     in if \\<not> b\n        then RETURN\n              (error_msg i\n                ((if p \\<notin># dom_m A then error_msg_notin_dom p\n                  else []) @\n                 (if q \\<notin># dom_m A then error_msg_notin_dom p\n                  else []) @\n                 (if i \\<in># dom_m A then error_msg_reused_dom p else [])))\n        else ASSERT (p \\<in># dom_m A) \\<bind>\n             (\\<lambda>_.\n                 let p = the (fmlookup A p)\n                 in ASSERT (q \\<in># dom_m A) \\<bind>\n                    (\\<lambda>_.\n                        let q = the (fmlookup A q)\n                        in add_poly_l (p, q) \\<bind>\n                           (\\<lambda>pq.\n                               weak_equality_l pq r \\<bind>\n                               (\\<lambda>b.\n                                   weak_equality_l r spec \\<bind>\n                                   (\\<lambda>b'.\n if b then if b' then RETURN CFOUND else RETURN CSUCCESS\n else SPEC (\\<lambda>_. True) \\<bind>\n      (\\<lambda>c. RETURN (error_msg i c))))))))\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_add B \\<V> p' q' i' r')", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n     (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> (let b = p \\<in># dom_m A \\<and>\n                               q \\<in># dom_m A \\<and>\n                               i \\<notin># dom_m A \\<and>\n                               vars_llist r \\<subseteq> \\<V>'\n                       in if \\<not> b\n                          then RETURN\n                                (error_msg i\n                                  ((if p \\<notin># dom_m A\n                                    then error_msg_notin_dom p else []) @\n                                   (if q \\<notin># dom_m A\n                                    then error_msg_notin_dom p else []) @\n                                   (if i \\<in># dom_m A\n                                    then error_msg_reused_dom p else [])))\n                          else ASSERT (p \\<in># dom_m A) \\<bind>\n                               (\\<lambda>_.\n                                   let p = the (fmlookup A p)\n                                   in ASSERT (q \\<in># dom_m A) \\<bind>\n(\\<lambda>_.\n    let q = the (fmlookup A q)\n    in add_poly_l (p, q) \\<bind>\n       (\\<lambda>pq.\n           weak_equality_l pq r \\<bind>\n           (\\<lambda>b.\n               weak_equality_l r spec \\<bind>\n               (\\<lambda>b'.\n                   if b then if b' then RETURN CFOUND else RETURN CSUCCESS\n                   else SPEC (\\<lambda>_. True) \\<bind>\n                        (\\<lambda>c. RETURN (error_msg i c))))))))\n                      \\<le> \\<Down>\n                             {(st, b).\n                              (\\<not> is_cfailed st) = b \\<and>\n                              (is_cfound st \\<longrightarrow> spec = r)}\n                             (check_add B \\<V> p' q' i' r')", "apply (rule order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n     (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> (let b = p \\<in># dom_m A \\<and>\n                               q \\<in># dom_m A \\<and>\n                               i \\<notin># dom_m A \\<and>\n                               vars_llist r \\<subseteq> \\<V>'\n                       in if \\<not> b\n                          then RETURN\n                                (error_msg i\n                                  ((if p \\<notin># dom_m A\n                                    then error_msg_notin_dom p else []) @\n                                   (if q \\<notin># dom_m A\n                                    then error_msg_notin_dom p else []) @\n                                   (if i \\<in># dom_m A\n                                    then error_msg_reused_dom p else [])))\n                          else ASSERT (p \\<in># dom_m A) \\<bind>\n                               (\\<lambda>_.\n                                   let p = the (fmlookup A p)\n                                   in ASSERT (q \\<in># dom_m A) \\<bind>\n(\\<lambda>_.\n    let q = the (fmlookup A q)\n    in add_poly_l (p, q) \\<bind>\n       (\\<lambda>pq.\n           weak_equality_l pq r \\<bind>\n           (\\<lambda>b.\n               weak_equality_l r spec \\<bind>\n               (\\<lambda>b'.\n                   if b then if b' then RETURN CFOUND else RETURN CSUCCESS\n                   else SPEC (\\<lambda>_. True) \\<bind>\n                        (\\<lambda>c. RETURN (error_msg i c))))))))\n                      \\<le> ?y6\n 2. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n     (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> ?y6\n                      \\<le> \\<Down>\n                             {(st, b).\n                              (\\<not> is_cfailed st) = b \\<and>\n                              (is_cfound st \\<longrightarrow> spec = r)}\n                             (check_add B \\<V> p' q' i' r')", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n     (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> ?y6\n                      \\<le> \\<Down>\n                             {(st, b).\n                              (\\<not> is_cfailed st) = b \\<and>\n                              (is_cfound st \\<longrightarrow> spec = r)}\n                             (check_add B \\<V> p' q' i' r')\n 2. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n     (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> (let b = p \\<in># dom_m A \\<and>\n                               q \\<in># dom_m A \\<and>\n                               i \\<notin># dom_m A \\<and>\n                               vars_llist r \\<subseteq> \\<V>'\n                       in if \\<not> b\n                          then RETURN\n                                (error_msg i\n                                  ((if p \\<notin># dom_m A\n                                    then error_msg_notin_dom p else []) @\n                                   (if q \\<notin># dom_m A\n                                    then error_msg_notin_dom p else []) @\n                                   (if i \\<in># dom_m A\n                                    then error_msg_reused_dom p else [])))\n                          else ASSERT (p \\<in># dom_m A) \\<bind>\n                               (\\<lambda>_.\n                                   let p = the (fmlookup A p)\n                                   in ASSERT (q \\<in># dom_m A) \\<bind>\n(\\<lambda>_.\n    let q = the (fmlookup A q)\n    in add_poly_l (p, q) \\<bind>\n       (\\<lambda>pq.\n           weak_equality_l pq r \\<bind>\n           (\\<lambda>b.\n               weak_equality_l r spec \\<bind>\n               (\\<lambda>b'.\n                   if b then if b' then RETURN CFOUND else RETURN CSUCCESS\n                   else SPEC (\\<lambda>_. True) \\<bind>\n                        (\\<lambda>c. RETURN (error_msg i c))))))))\n                      \\<le> ?y6", "apply (rule ref_two_step')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n     (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> ?A9 \\<le> check_add B \\<V> p' q' i' r'\n 2. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n     (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> (let b = p \\<in># dom_m A \\<and>\n                               q \\<in># dom_m A \\<and>\n                               i \\<notin># dom_m A \\<and>\n                               vars_llist r \\<subseteq> \\<V>'\n                       in if \\<not> b\n                          then RETURN\n                                (error_msg i\n                                  ((if p \\<notin># dom_m A\n                                    then error_msg_notin_dom p else []) @\n                                   (if q \\<notin># dom_m A\n                                    then error_msg_notin_dom p else []) @\n                                   (if i \\<in># dom_m A\n                                    then error_msg_reused_dom p else [])))\n                          else ASSERT (p \\<in># dom_m A) \\<bind>\n                               (\\<lambda>_.\n                                   let p = the (fmlookup A p)\n                                   in ASSERT (q \\<in># dom_m A) \\<bind>\n(\\<lambda>_.\n    let q = the (fmlookup A q)\n    in add_poly_l (p, q) \\<bind>\n       (\\<lambda>pq.\n           weak_equality_l pq r \\<bind>\n           (\\<lambda>b.\n               weak_equality_l r spec \\<bind>\n               (\\<lambda>b'.\n                   if b then if b' then RETURN CFOUND else RETURN CSUCCESS\n                   else SPEC (\\<lambda>_. True) \\<bind>\n                        (\\<lambda>c. RETURN (error_msg i c))))))))\n                      \\<le> \\<Down>\n                             {(st, b).\n                              (\\<not> is_cfailed st) = b \\<and>\n                              (is_cfound st \\<longrightarrow> spec = r)}\n                             ?A9", "apply (rule check_add_alt_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n     (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> (let b = p \\<in># dom_m A \\<and>\n                               q \\<in># dom_m A \\<and>\n                               i \\<notin># dom_m A \\<and>\n                               vars_llist r \\<subseteq> \\<V>'\n                       in if \\<not> b\n                          then RETURN\n                                (error_msg i\n                                  ((if p \\<notin># dom_m A\n                                    then error_msg_notin_dom p else []) @\n                                   (if q \\<notin># dom_m A\n                                    then error_msg_notin_dom p else []) @\n                                   (if i \\<in># dom_m A\n                                    then error_msg_reused_dom p else [])))\n                          else ASSERT (p \\<in># dom_m A) \\<bind>\n                               (\\<lambda>_.\n                                   let p = the (fmlookup A p)\n                                   in ASSERT (q \\<in># dom_m A) \\<bind>\n(\\<lambda>_.\n    let q = the (fmlookup A q)\n    in add_poly_l (p, q) \\<bind>\n       (\\<lambda>pq.\n           weak_equality_l pq r \\<bind>\n           (\\<lambda>b.\n               weak_equality_l r spec \\<bind>\n               (\\<lambda>b'.\n                   if b then if b' then RETURN CFOUND else RETURN CSUCCESS\n                   else SPEC (\\<lambda>_. True) \\<bind>\n                        (\\<lambda>c. RETURN (error_msg i c))))))))\n                      \\<le> \\<Down>\n                             {(st, b).\n                              (\\<not> is_cfailed st) = b \\<and>\n                              (is_cfound st \\<longrightarrow> spec = r)}\n                             (SPEC\n                               (\\<lambda>b.\n                                   b \\<longrightarrow>\n                                   p' \\<in># dom_m B \\<and>\n                                   q' \\<in># dom_m B \\<and>\n                                   i' \\<notin># dom_m B \\<and>\n                                   vars r' \\<subseteq> \\<V>) \\<bind>\n                              (\\<lambda>b.\n                                  if \\<not> b then RETURN False\n                                  else ASSERT (p' \\<in># dom_m B) \\<bind>\n (\\<lambda>_.\n     let p = the (fmlookup B p')\n     in ASSERT (q' \\<in># dom_m B) \\<bind>\n        (\\<lambda>_.\n            let q = the (fmlookup B q')\n            in add_poly_spec p q \\<bind>\n               (\\<lambda>pq. weak_equality pq r' \\<bind> RETURN)))))", "apply refine_rcg"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n     (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> RETURN\n                       (p \\<in># dom_m A \\<and>\n                        q \\<in># dom_m A \\<and>\n                        i \\<notin># dom_m A \\<and>\n                        vars_llist r \\<subseteq> \\<V>')\n                      \\<le> SPEC\n                             (\\<lambda>b.\n                                 b \\<longrightarrow>\n                                 p' \\<in># dom_m B \\<and>\n                                 q' \\<in># dom_m B \\<and>\n                                 i' \\<notin># dom_m B \\<and>\n                                 vars r' \\<subseteq> \\<V>)\n 2. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> (p \\<in># dom_m A \\<and>\n                                  q \\<in># dom_m A \\<and>\n                                  i \\<notin># dom_m A \\<and>\n                                  vars_llist r \\<subseteq> \\<V>')) =\n                         (\\<not> b)\n 3. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> (p \\<in># dom_m A \\<and>\n                q \\<in># dom_m A \\<and>\n                i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>');\n        \\<not> b\\<rbrakk>\n       \\<Longrightarrow> (error_msg i\n                           ((if p \\<notin># dom_m A\n                             then error_msg_notin_dom p else []) @\n                            (if q \\<notin># dom_m A\n                             then error_msg_notin_dom p else []) @\n                            (if i \\<in># dom_m A then error_msg_reused_dom p\n                             else [])),\n                          False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 4. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> p \\<in># dom_m A\n 5. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> q \\<in># dom_m A\n 6. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> (the (fmlookup A p), the (fmlookup B p'))\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 7. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> (the (fmlookup A q), the (fmlookup B q'))\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 8. \\<And>b pq pqa ba eqa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A;\n        (pq, pqa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (ba, eqa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l r spec \\<bind>\n                         (\\<lambda>b'.\n                             if ba\n                             then if b' then RETURN CFOUND\n                                  else RETURN CSUCCESS\n                             else SPEC (\\<lambda>_. True) \\<bind>\n                                  (\\<lambda>c. RETURN (error_msg i c)))\n                         \\<le> SPEC\n                                (\\<lambda>c.\n                                    (c, eqa)\n                                    \\<in> {(st, b).\n     (\\<not> is_cfailed st) = b \\<and>\n     (is_cfound st \\<longrightarrow> spec = r)})", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n     (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> RETURN\n                       (p \\<in># dom_m A \\<and>\n                        q \\<in># dom_m A \\<and>\n                        i \\<notin># dom_m A \\<and>\n                        vars_llist r \\<subseteq> \\<V>')\n                      \\<le> SPEC\n                             (\\<lambda>b.\n                                 b \\<longrightarrow>\n                                 p' \\<in># dom_m B \\<and>\n                                 q' \\<in># dom_m B \\<and>\n                                 i' \\<notin># dom_m B \\<and>\n                                 vars r' \\<subseteq> \\<V>)", "by (drule sorted_poly_rel_vars_llist)\n       (auto simp: set_rel_def var_rel_def br_def)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> (p \\<in># dom_m A \\<and>\n                                  q \\<in># dom_m A \\<and>\n                                  i \\<notin># dom_m A \\<and>\n                                  vars_llist r \\<subseteq> \\<V>')) =\n                         (\\<not> b)\n 2. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> (p \\<in># dom_m A \\<and>\n                q \\<in># dom_m A \\<and>\n                i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>');\n        \\<not> b\\<rbrakk>\n       \\<Longrightarrow> (error_msg i\n                           ((if p \\<notin># dom_m A\n                             then error_msg_notin_dom p else []) @\n                            (if q \\<notin># dom_m A\n                             then error_msg_notin_dom p else []) @\n                            (if i \\<in># dom_m A then error_msg_reused_dom p\n                             else [])),\n                          False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 3. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> p \\<in># dom_m A\n 4. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> q \\<in># dom_m A\n 5. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> (the (fmlookup A p), the (fmlookup B p'))\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 6. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> (the (fmlookup A q), the (fmlookup B q'))\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 7. \\<And>b pq pqa ba eqa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A;\n        (pq, pqa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (ba, eqa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l r spec \\<bind>\n                         (\\<lambda>b'.\n                             if ba\n                             then if b' then RETURN CFOUND\n                                  else RETURN CSUCCESS\n                             else SPEC (\\<lambda>_. True) \\<bind>\n                                  (\\<lambda>c. RETURN (error_msg i c)))\n                         \\<le> SPEC\n                                (\\<lambda>c.\n                                    (c, eqa)\n                                    \\<in> {(st, b).\n     (\\<not> is_cfailed st) = b \\<and>\n     (is_cfound st \\<longrightarrow> spec = r)})", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n     (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (p \\<in># dom_m A \\<and>\n      q \\<in># dom_m A \\<and>\n      i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n      b_)\n     \\<in> bool_rel\\<rbrakk>\n    \\<Longrightarrow> (\\<not> (p \\<in># dom_m A \\<and>\n                               q \\<in># dom_m A \\<and>\n                               i \\<notin># dom_m A \\<and>\n                               vars_llist r \\<subseteq> \\<V>')) =\n                      (\\<not> b_)", "by auto"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> (p \\<in># dom_m A \\<and>\n                q \\<in># dom_m A \\<and>\n                i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>');\n        \\<not> b\\<rbrakk>\n       \\<Longrightarrow> (error_msg i\n                           ((if p \\<notin># dom_m A\n                             then error_msg_notin_dom p else []) @\n                            (if q \\<notin># dom_m A\n                             then error_msg_notin_dom p else []) @\n                            (if i \\<in># dom_m A then error_msg_reused_dom p\n                             else [])),\n                          False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 2. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> p \\<in># dom_m A\n 3. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> q \\<in># dom_m A\n 4. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> (the (fmlookup A p), the (fmlookup B p'))\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 5. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> (the (fmlookup A q), the (fmlookup B q'))\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 6. \\<And>b pq pqa ba eqa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A;\n        (pq, pqa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (ba, eqa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l r spec \\<bind>\n                         (\\<lambda>b'.\n                             if ba\n                             then if b' then RETURN CFOUND\n                                  else RETURN CSUCCESS\n                             else SPEC (\\<lambda>_. True) \\<bind>\n                                  (\\<lambda>c. RETURN (error_msg i c)))\n                         \\<le> SPEC\n                                (\\<lambda>c.\n                                    (c, eqa)\n                                    \\<in> {(st, b).\n     (\\<not> is_cfailed st) = b \\<and>\n     (is_cfound st \\<longrightarrow> spec = r)})", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n     (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (p \\<in># dom_m A \\<and>\n      q \\<in># dom_m A \\<and>\n      i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n      b_)\n     \\<in> bool_rel;\n     \\<not> (p \\<in># dom_m A \\<and>\n             q \\<in># dom_m A \\<and>\n             i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>');\n     \\<not> b_\\<rbrakk>\n    \\<Longrightarrow> (error_msg i\n                        ((if p \\<notin># dom_m A then error_msg_notin_dom p\n                          else []) @\n                         (if q \\<notin># dom_m A then error_msg_notin_dom p\n                          else []) @\n                         (if i \\<in># dom_m A then error_msg_reused_dom p\n                          else [])),\n                       False)\n                      \\<in> {(st, b).\n                             (\\<not> is_cfailed st) = b \\<and>\n                             (is_cfound st \\<longrightarrow> spec = r)}", "by auto"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> p \\<in># dom_m A\n 2. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> q \\<in># dom_m A\n 3. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> (the (fmlookup A p), the (fmlookup B p'))\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 4. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> (the (fmlookup A q), the (fmlookup B q'))\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 5. \\<And>b pq pqa ba eqa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A;\n        (pq, pqa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (ba, eqa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l r spec \\<bind>\n                         (\\<lambda>b'.\n                             if ba\n                             then if b' then RETURN CFOUND\n                                  else RETURN CSUCCESS\n                             else SPEC (\\<lambda>_. True) \\<bind>\n                                  (\\<lambda>c. RETURN (error_msg i c)))\n                         \\<le> SPEC\n                                (\\<lambda>c.\n                                    (c, eqa)\n                                    \\<in> {(st, b).\n     (\\<not> is_cfailed st) = b \\<and>\n     (is_cfound st \\<longrightarrow> spec = r)})", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n     (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (p \\<in># dom_m A \\<and>\n      q \\<in># dom_m A \\<and>\n      i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n      b_)\n     \\<in> bool_rel;\n     \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                    q \\<in># dom_m A \\<and>\n                    i \\<notin># dom_m A \\<and>\n                    vars_llist r \\<subseteq> \\<V>');\n     \\<not> \\<not> b_; p' \\<in># dom_m B\\<rbrakk>\n    \\<Longrightarrow> p \\<in># dom_m A", "by auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> q \\<in># dom_m A\n 2. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> (the (fmlookup A p), the (fmlookup B p'))\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 3. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> (the (fmlookup A q), the (fmlookup B q'))\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 4. \\<And>b pq pqa ba eqa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A;\n        (pq, pqa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (ba, eqa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l r spec \\<bind>\n                         (\\<lambda>b'.\n                             if ba\n                             then if b' then RETURN CFOUND\n                                  else RETURN CSUCCESS\n                             else SPEC (\\<lambda>_. True) \\<bind>\n                                  (\\<lambda>c. RETURN (error_msg i c)))\n                         \\<le> SPEC\n                                (\\<lambda>c.\n                                    (c, eqa)\n                                    \\<in> {(st, b).\n     (\\<not> is_cfailed st) = b \\<and>\n     (is_cfound st \\<longrightarrow> spec = r)})", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n     (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (p \\<in># dom_m A \\<and>\n      q \\<in># dom_m A \\<and>\n      i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n      b_)\n     \\<in> bool_rel;\n     \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                    q \\<in># dom_m A \\<and>\n                    i \\<notin># dom_m A \\<and>\n                    vars_llist r \\<subseteq> \\<V>');\n     \\<not> \\<not> b_; p' \\<in># dom_m B; p \\<in># dom_m A;\n     q' \\<in># dom_m B\\<rbrakk>\n    \\<Longrightarrow> q \\<in># dom_m A", "by auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> (the (fmlookup A p), the (fmlookup B p'))\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 2. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> (the (fmlookup A q), the (fmlookup B q'))\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 3. \\<And>b pq pqa ba eqa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A;\n        (pq, pqa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (ba, eqa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l r spec \\<bind>\n                         (\\<lambda>b'.\n                             if ba\n                             then if b' then RETURN CFOUND\n                                  else RETURN CSUCCESS\n                             else SPEC (\\<lambda>_. True) \\<bind>\n                                  (\\<lambda>c. RETURN (error_msg i c)))\n                         \\<le> SPEC\n                                (\\<lambda>c.\n                                    (c, eqa)\n                                    \\<in> {(st, b).\n     (\\<not> is_cfailed st) = b \\<and>\n     (is_cfound st \\<longrightarrow> spec = r)})", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n     (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (p \\<in># dom_m A \\<and>\n      q \\<in># dom_m A \\<and>\n      i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n      b_)\n     \\<in> bool_rel;\n     \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                    q \\<in># dom_m A \\<and>\n                    i \\<notin># dom_m A \\<and>\n                    vars_llist r \\<subseteq> \\<V>');\n     \\<not> \\<not> b_; p' \\<in># dom_m B; p \\<in># dom_m A;\n     q' \\<in># dom_m B; q \\<in># dom_m A\\<rbrakk>\n    \\<Longrightarrow> (the (fmlookup A p), the (fmlookup B p'))\n                      \\<in> sorted_poly_rel O mset_poly_rel", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> (the (fmlookup A q), the (fmlookup B q'))\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 2. \\<And>b pq pqa ba eqa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A;\n        (pq, pqa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (ba, eqa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l r spec \\<bind>\n                         (\\<lambda>b'.\n                             if ba\n                             then if b' then RETURN CFOUND\n                                  else RETURN CSUCCESS\n                             else SPEC (\\<lambda>_. True) \\<bind>\n                                  (\\<lambda>c. RETURN (error_msg i c)))\n                         \\<le> SPEC\n                                (\\<lambda>c.\n                                    (c, eqa)\n                                    \\<in> {(st, b).\n     (\\<not> is_cfailed st) = b \\<and>\n     (is_cfound st \\<longrightarrow> spec = r)})", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n     (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (p \\<in># dom_m A \\<and>\n      q \\<in># dom_m A \\<and>\n      i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n      b_)\n     \\<in> bool_rel;\n     \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                    q \\<in># dom_m A \\<and>\n                    i \\<notin># dom_m A \\<and>\n                    vars_llist r \\<subseteq> \\<V>');\n     \\<not> \\<not> b_; p' \\<in># dom_m B; p \\<in># dom_m A;\n     q' \\<in># dom_m B; q \\<in># dom_m A\\<rbrakk>\n    \\<Longrightarrow> (the (fmlookup A q), the (fmlookup B q'))\n                      \\<in> sorted_poly_rel O mset_poly_rel", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b pq pqa ba eqa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         q \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       q \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist r \\<subseteq> \\<V>');\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        q' \\<in># dom_m B; q \\<in># dom_m A;\n        (pq, pqa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (ba, eqa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l r spec \\<bind>\n                         (\\<lambda>b'.\n                             if ba\n                             then if b' then RETURN CFOUND\n                                  else RETURN CSUCCESS\n                             else SPEC (\\<lambda>_. True) \\<bind>\n                                  (\\<lambda>c. RETURN (error_msg i c)))\n                         \\<le> SPEC\n                                (\\<lambda>c.\n                                    (c, eqa)\n                                    \\<in> {(st, b).\n     (\\<not> is_cfailed st) = b \\<and>\n     (is_cfound st \\<longrightarrow> spec = r)})", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (q, q') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n     (\\<V>', \\<V>) \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (p \\<in># dom_m A \\<and>\n      q \\<in># dom_m A \\<and>\n      i \\<notin># dom_m A \\<and> vars_llist r \\<subseteq> \\<V>',\n      b_)\n     \\<in> bool_rel;\n     \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                    q \\<in># dom_m A \\<and>\n                    i \\<notin># dom_m A \\<and>\n                    vars_llist r \\<subseteq> \\<V>');\n     \\<not> \\<not> b_; p' \\<in># dom_m B; p \\<in># dom_m A;\n     q' \\<in># dom_m B; q \\<in># dom_m A;\n     (pq_, pqa_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (ba_, eqa_) \\<in> bool_rel\\<rbrakk>\n    \\<Longrightarrow> weak_equality_l r spec \\<bind>\n                      (\\<lambda>b'.\n                          if ba_\n                          then if b' then RETURN CFOUND else RETURN CSUCCESS\n                          else SPEC (\\<lambda>_. True) \\<bind>\n                               (\\<lambda>c. RETURN (error_msg i c)))\n                      \\<le> SPEC\n                             (\\<lambda>c.\n                                 (c, eqa_)\n                                 \\<in> {(st, b).\n  (\\<not> is_cfailed st) = b \\<and>\n  (is_cfound st \\<longrightarrow> spec = r)})", "by (auto simp: weak_equality_l_def bind_RES_RETURN_eq)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  check_addition_l spec A \\<V>' p q i r\n  \\<le> \\<Down>\n         {(st, b).\n          (\\<not> is_cfailed st) = b \\<and>\n          (is_cfound st \\<longrightarrow> spec = r)}\n         (check_add B \\<V> p' q' i' r')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma check_del_l_check_del:\n  \\<open>(A, B) \\<in> fmap_polys_rel \\<Longrightarrow> (x3, x3a) \\<in> Id \\<Longrightarrow> check_del_l spec A (pac_src1 (Del x3))\n    \\<le> \\<Down> {(st, b). (\\<not>is_cfailed st \\<longleftrightarrow> b) \\<and> (b \\<longrightarrow> st = CSUCCESS)} (check_del B (pac_src1 (Del x3a)))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (x3, x3a) \\<in> nat_rel\\<rbrakk>\n    \\<Longrightarrow> check_del_l spec A (pac_src1 (Del x3))\n                      \\<le> \\<Down>\n                             {(st, b).\n                              (\\<not> is_cfailed st) = b \\<and>\n                              (b \\<longrightarrow> st = CSUCCESS)}\n                             (check_del B (pac_src1 (Del x3a)))", "unfolding check_del_l_def check_del_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (x3, x3a) \\<in> nat_rel\\<rbrakk>\n    \\<Longrightarrow> RETURN CSUCCESS\n                      \\<le> \\<Down>\n                             {(st, b).\n                              (\\<not> is_cfailed st) = b \\<and>\n                              (b \\<longrightarrow> st = CSUCCESS)}\n                             (SPEC (\\<lambda>b. b \\<longrightarrow> True))", "by (refine_vcg lhs_step_If RETURN_SPEC_refine)\n    (auto simp: fmap_rel_nat_rel_dom_m bind_RES_RETURN_eq)"], ["", "lemma check_mult_l_check_mult:\n  assumes \\<open>(A, B) \\<in> fmap_polys_rel\\<close> and \\<open>(r, r') \\<in> sorted_poly_rel O mset_poly_rel\\<close> and\n    \\<open>(q, q') \\<in> sorted_poly_rel O mset_poly_rel\\<close>\n    \\<open>(p, p') \\<in> Id\\<close> \\<open>(i, i') \\<in> nat_rel\\<close> \\<open>(\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<close>\n  shows\n    \\<open>check_mult_l spec A \\<V> p q i r \\<le> \\<Down>  {(st, b). (\\<not>is_cfailed st \\<longleftrightarrow> b) \\<and>\n       (is_cfound st \\<longrightarrow> spec = r)} (check_mult B \\<V>' p' q' i' r')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. check_mult_l spec A \\<V> p q i r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_mult B \\<V>' p' q' i' r')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. check_mult_l spec A \\<V> p q i r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_mult B \\<V>' p' q' i' r')", "have [refine]:\n    \\<open>mult_poly_full p q \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (mult_poly_spec p' q')\\<close>\n    if \\<open>(p, p') \\<in> sorted_poly_rel O mset_poly_rel\\<close>\n      \\<open>(q, q') \\<in> sorted_poly_rel O mset_poly_rel\\<close>\n    for p p' q q'"], ["proof (prove)\ngoal (1 subgoal):\n 1. mult_poly_full p q\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (mult_poly_spec p' q')", "using that"], ["proof (prove)\nusing this:\n  (p, p') \\<in> sorted_poly_rel O mset_poly_rel\n  (q, q') \\<in> sorted_poly_rel O mset_poly_rel\n\ngoal (1 subgoal):\n 1. mult_poly_full p q\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (mult_poly_spec p' q')", "by (auto intro!: mult_poly_full_mult_poly_p'[THEN order_trans] ref_two_step'\n         mult_poly_p'_mult_poly_spec\n      simp flip: conc_fun_chain)"], ["proof (state)\nthis:\n  \\<lbrakk>(?p3, ?p'3) \\<in> sorted_poly_rel O mset_poly_rel;\n   (?q3, ?q'3) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n  \\<Longrightarrow> mult_poly_full ?p3 ?q3\n                    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel)\n                           (mult_poly_spec ?p'3 ?q'3)\n\ngoal (1 subgoal):\n 1. check_mult_l spec A \\<V> p q i r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_mult B \\<V>' p' q' i' r')", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. check_mult_l spec A \\<V> p q i r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_mult B \\<V>' p' q' i' r')", "using assms"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (r, r') \\<in> sorted_poly_rel O mset_poly_rel\n  (q, q') \\<in> sorted_poly_rel O mset_poly_rel\n  (p, p') \\<in> nat_rel\n  (i, i') \\<in> nat_rel\n  (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. check_mult_l spec A \\<V> p q i r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_mult B \\<V>' p' q' i' r')", "unfolding check_mult_l_def\n      check_mult_l_mult_err_def check_mult_l_dom_err_def"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (r, r') \\<in> sorted_poly_rel O mset_poly_rel\n  (q, q') \\<in> sorted_poly_rel O mset_poly_rel\n  (p, p') \\<in> nat_rel\n  (i, i') \\<in> nat_rel\n  (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\n\ngoal (1 subgoal):\n 1. (let b = p \\<in># dom_m A \\<and>\n             i \\<notin># dom_m A \\<and>\n             vars_llist q \\<subseteq> \\<V> \\<and>\n             vars_llist r \\<subseteq> \\<V>\n     in if \\<not> b\n        then SPEC (\\<lambda>_. True) \\<bind>\n             (\\<lambda>c. RETURN (error_msg i c))\n        else ASSERT (p \\<in># dom_m A) \\<bind>\n             (\\<lambda>_.\n                 let p = the (fmlookup A p)\n                 in mult_poly_full p q \\<bind>\n                    (\\<lambda>pq.\n                        weak_equality_l pq r \\<bind>\n                        (\\<lambda>b.\n                            weak_equality_l r spec \\<bind>\n                            (\\<lambda>b'.\n                                if b\n                                then if b' then RETURN CFOUND\n                                     else RETURN CSUCCESS\n                                else SPEC (\\<lambda>_. True) \\<bind>\n                                     (\\<lambda>c.\n   RETURN (error_msg i c)))))))\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_mult B \\<V>' p' q' i' r')", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n     (q, q') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (i, i') \\<in> nat_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> (let b = p \\<in># dom_m A \\<and>\n                               i \\<notin># dom_m A \\<and>\n                               vars_llist q \\<subseteq> \\<V> \\<and>\n                               vars_llist r \\<subseteq> \\<V>\n                       in if \\<not> b\n                          then SPEC (\\<lambda>_. True) \\<bind>\n                               (\\<lambda>c. RETURN (error_msg i c))\n                          else ASSERT (p \\<in># dom_m A) \\<bind>\n                               (\\<lambda>_.\n                                   let p = the (fmlookup A p)\n                                   in mult_poly_full p q \\<bind>\n(\\<lambda>pq.\n    weak_equality_l pq r \\<bind>\n    (\\<lambda>b.\n        weak_equality_l r spec \\<bind>\n        (\\<lambda>b'.\n            if b then if b' then RETURN CFOUND else RETURN CSUCCESS\n            else SPEC (\\<lambda>_. True) \\<bind>\n                 (\\<lambda>c. RETURN (error_msg i c)))))))\n                      \\<le> \\<Down>\n                             {(st, b).\n                              (\\<not> is_cfailed st) = b \\<and>\n                              (is_cfound st \\<longrightarrow> spec = r)}\n                             (check_mult B \\<V>' p' q' i' r')", "apply (rule order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n     (q, q') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (i, i') \\<in> nat_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> (let b = p \\<in># dom_m A \\<and>\n                               i \\<notin># dom_m A \\<and>\n                               vars_llist q \\<subseteq> \\<V> \\<and>\n                               vars_llist r \\<subseteq> \\<V>\n                       in if \\<not> b\n                          then SPEC (\\<lambda>_. True) \\<bind>\n                               (\\<lambda>c. RETURN (error_msg i c))\n                          else ASSERT (p \\<in># dom_m A) \\<bind>\n                               (\\<lambda>_.\n                                   let p = the (fmlookup A p)\n                                   in mult_poly_full p q \\<bind>\n(\\<lambda>pq.\n    weak_equality_l pq r \\<bind>\n    (\\<lambda>b.\n        weak_equality_l r spec \\<bind>\n        (\\<lambda>b'.\n            if b then if b' then RETURN CFOUND else RETURN CSUCCESS\n            else SPEC (\\<lambda>_. True) \\<bind>\n                 (\\<lambda>c. RETURN (error_msg i c)))))))\n                      \\<le> ?y6\n 2. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n     (q, q') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (i, i') \\<in> nat_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> ?y6\n                      \\<le> \\<Down>\n                             {(st, b).\n                              (\\<not> is_cfailed st) = b \\<and>\n                              (is_cfound st \\<longrightarrow> spec = r)}\n                             (check_mult B \\<V>' p' q' i' r')", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n     (q, q') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (i, i') \\<in> nat_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> ?y6\n                      \\<le> \\<Down>\n                             {(st, b).\n                              (\\<not> is_cfailed st) = b \\<and>\n                              (is_cfound st \\<longrightarrow> spec = r)}\n                             (check_mult B \\<V>' p' q' i' r')\n 2. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n     (q, q') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (i, i') \\<in> nat_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> (let b = p \\<in># dom_m A \\<and>\n                               i \\<notin># dom_m A \\<and>\n                               vars_llist q \\<subseteq> \\<V> \\<and>\n                               vars_llist r \\<subseteq> \\<V>\n                       in if \\<not> b\n                          then SPEC (\\<lambda>_. True) \\<bind>\n                               (\\<lambda>c. RETURN (error_msg i c))\n                          else ASSERT (p \\<in># dom_m A) \\<bind>\n                               (\\<lambda>_.\n                                   let p = the (fmlookup A p)\n                                   in mult_poly_full p q \\<bind>\n(\\<lambda>pq.\n    weak_equality_l pq r \\<bind>\n    (\\<lambda>b.\n        weak_equality_l r spec \\<bind>\n        (\\<lambda>b'.\n            if b then if b' then RETURN CFOUND else RETURN CSUCCESS\n            else SPEC (\\<lambda>_. True) \\<bind>\n                 (\\<lambda>c. RETURN (error_msg i c)))))))\n                      \\<le> ?y6", "apply (rule ref_two_step')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n     (q, q') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (i, i') \\<in> nat_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> ?A9 \\<le> check_mult B \\<V>' p' q' i' r'\n 2. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n     (q, q') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (i, i') \\<in> nat_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> (let b = p \\<in># dom_m A \\<and>\n                               i \\<notin># dom_m A \\<and>\n                               vars_llist q \\<subseteq> \\<V> \\<and>\n                               vars_llist r \\<subseteq> \\<V>\n                       in if \\<not> b\n                          then SPEC (\\<lambda>_. True) \\<bind>\n                               (\\<lambda>c. RETURN (error_msg i c))\n                          else ASSERT (p \\<in># dom_m A) \\<bind>\n                               (\\<lambda>_.\n                                   let p = the (fmlookup A p)\n                                   in mult_poly_full p q \\<bind>\n(\\<lambda>pq.\n    weak_equality_l pq r \\<bind>\n    (\\<lambda>b.\n        weak_equality_l r spec \\<bind>\n        (\\<lambda>b'.\n            if b then if b' then RETURN CFOUND else RETURN CSUCCESS\n            else SPEC (\\<lambda>_. True) \\<bind>\n                 (\\<lambda>c. RETURN (error_msg i c)))))))\n                      \\<le> \\<Down>\n                             {(st, b).\n                              (\\<not> is_cfailed st) = b \\<and>\n                              (is_cfound st \\<longrightarrow> spec = r)}\n                             ?A9", "apply (rule check_mult_alt_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n     (q, q') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (i, i') \\<in> nat_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> (let b = p \\<in># dom_m A \\<and>\n                               i \\<notin># dom_m A \\<and>\n                               vars_llist q \\<subseteq> \\<V> \\<and>\n                               vars_llist r \\<subseteq> \\<V>\n                       in if \\<not> b\n                          then SPEC (\\<lambda>_. True) \\<bind>\n                               (\\<lambda>c. RETURN (error_msg i c))\n                          else ASSERT (p \\<in># dom_m A) \\<bind>\n                               (\\<lambda>_.\n                                   let p = the (fmlookup A p)\n                                   in mult_poly_full p q \\<bind>\n(\\<lambda>pq.\n    weak_equality_l pq r \\<bind>\n    (\\<lambda>b.\n        weak_equality_l r spec \\<bind>\n        (\\<lambda>b'.\n            if b then if b' then RETURN CFOUND else RETURN CSUCCESS\n            else SPEC (\\<lambda>_. True) \\<bind>\n                 (\\<lambda>c. RETURN (error_msg i c)))))))\n                      \\<le> \\<Down>\n                             {(st, b).\n                              (\\<not> is_cfailed st) = b \\<and>\n                              (is_cfound st \\<longrightarrow> spec = r)}\n                             (SPEC\n                               (\\<lambda>b.\n                                   b \\<longrightarrow>\n                                   p' \\<in># dom_m B \\<and>\n                                   i' \\<notin># dom_m B \\<and>\n                                   vars q' \\<subseteq> \\<V>' \\<and>\n                                   vars r' \\<subseteq> \\<V>') \\<bind>\n                              (\\<lambda>b.\n                                  if \\<not> b then RETURN False\n                                  else ASSERT (p' \\<in># dom_m B) \\<bind>\n (\\<lambda>_.\n     let p = the (fmlookup B p')\n     in mult_poly_spec p q' \\<bind>\n        (\\<lambda>pq. weak_equality pq r' \\<bind> RETURN))))", "apply refine_rcg"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n     (q, q') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (i, i') \\<in> nat_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> RETURN\n                       (p \\<in># dom_m A \\<and>\n                        i \\<notin># dom_m A \\<and>\n                        vars_llist q \\<subseteq> \\<V> \\<and>\n                        vars_llist r \\<subseteq> \\<V>)\n                      \\<le> SPEC\n                             (\\<lambda>b.\n                                 b \\<longrightarrow>\n                                 p' \\<in># dom_m B \\<and>\n                                 i' \\<notin># dom_m B \\<and>\n                                 vars q' \\<subseteq> \\<V>' \\<and>\n                                 vars r' \\<subseteq> \\<V>')\n 2. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, q') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n         b)\n        \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> (p \\<in># dom_m A \\<and>\n                                  i \\<notin># dom_m A \\<and>\n                                  vars_llist q \\<subseteq> \\<V> \\<and>\n                                  vars_llist r \\<subseteq> \\<V>)) =\n                         (\\<not> b)\n 3. \\<And>b c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, q') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n         b)\n        \\<in> bool_rel;\n        \\<not> (p \\<in># dom_m A \\<and>\n                i \\<notin># dom_m A \\<and>\n                vars_llist q \\<subseteq> \\<V> \\<and>\n                vars_llist r \\<subseteq> \\<V>);\n        \\<not> b; c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 4. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, q') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist q \\<subseteq> \\<V> \\<and>\n                       vars_llist r \\<subseteq> \\<V>);\n        \\<not> \\<not> b; p' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> p \\<in># dom_m A\n 5. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, q') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist q \\<subseteq> \\<V> \\<and>\n                       vars_llist r \\<subseteq> \\<V>);\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> (the (fmlookup A p), the (fmlookup B p'))\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 6. \\<And>b pq pqa ba pa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, q') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist q \\<subseteq> \\<V> \\<and>\n                       vars_llist r \\<subseteq> \\<V>);\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        (pq, pqa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (ba, pa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l r spec \\<bind>\n                         (\\<lambda>b'.\n                             if ba\n                             then if b' then RETURN CFOUND\n                                  else RETURN CSUCCESS\n                             else SPEC (\\<lambda>_. True) \\<bind>\n                                  (\\<lambda>c. RETURN (error_msg i c)))\n                         \\<le> SPEC\n                                (\\<lambda>c.\n                                    (c, pa)\n                                    \\<in> {(st, b).\n     (\\<not> is_cfailed st) = b \\<and>\n     (is_cfound st \\<longrightarrow> spec = r)})", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n     (q, q') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (i, i') \\<in> nat_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> RETURN\n                       (p \\<in># dom_m A \\<and>\n                        i \\<notin># dom_m A \\<and>\n                        vars_llist q \\<subseteq> \\<V> \\<and>\n                        vars_llist r \\<subseteq> \\<V>)\n                      \\<le> SPEC\n                             (\\<lambda>b.\n                                 b \\<longrightarrow>\n                                 p' \\<in># dom_m B \\<and>\n                                 i' \\<notin># dom_m B \\<and>\n                                 vars q' \\<subseteq> \\<V>' \\<and>\n                                 vars r' \\<subseteq> \\<V>')", "by (drule sorted_poly_rel_vars_llist)+\n        (fastforce simp: set_rel_def var_rel_def br_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, q') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n         b)\n        \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> (p \\<in># dom_m A \\<and>\n                                  i \\<notin># dom_m A \\<and>\n                                  vars_llist q \\<subseteq> \\<V> \\<and>\n                                  vars_llist r \\<subseteq> \\<V>)) =\n                         (\\<not> b)\n 2. \\<And>b c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, q') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n         b)\n        \\<in> bool_rel;\n        \\<not> (p \\<in># dom_m A \\<and>\n                i \\<notin># dom_m A \\<and>\n                vars_llist q \\<subseteq> \\<V> \\<and>\n                vars_llist r \\<subseteq> \\<V>);\n        \\<not> b; c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 3. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, q') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist q \\<subseteq> \\<V> \\<and>\n                       vars_llist r \\<subseteq> \\<V>);\n        \\<not> \\<not> b; p' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> p \\<in># dom_m A\n 4. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, q') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist q \\<subseteq> \\<V> \\<and>\n                       vars_llist r \\<subseteq> \\<V>);\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> (the (fmlookup A p), the (fmlookup B p'))\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 5. \\<And>b pq pqa ba pa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, q') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist q \\<subseteq> \\<V> \\<and>\n                       vars_llist r \\<subseteq> \\<V>);\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        (pq, pqa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (ba, pa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l r spec \\<bind>\n                         (\\<lambda>b'.\n                             if ba\n                             then if b' then RETURN CFOUND\n                                  else RETURN CSUCCESS\n                             else SPEC (\\<lambda>_. True) \\<bind>\n                                  (\\<lambda>c. RETURN (error_msg i c)))\n                         \\<le> SPEC\n                                (\\<lambda>c.\n                                    (c, pa)\n                                    \\<in> {(st, b).\n     (\\<not> is_cfailed st) = b \\<and>\n     (is_cfound st \\<longrightarrow> spec = r)})", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n     (q, q') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (i, i') \\<in> nat_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (p \\<in># dom_m A \\<and>\n      i \\<notin># dom_m A \\<and>\n      vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n      b_)\n     \\<in> bool_rel\\<rbrakk>\n    \\<Longrightarrow> (\\<not> (p \\<in># dom_m A \\<and>\n                               i \\<notin># dom_m A \\<and>\n                               vars_llist q \\<subseteq> \\<V> \\<and>\n                               vars_llist r \\<subseteq> \\<V>)) =\n                      (\\<not> b_)", "by auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>b c.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, q') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n         b)\n        \\<in> bool_rel;\n        \\<not> (p \\<in># dom_m A \\<and>\n                i \\<notin># dom_m A \\<and>\n                vars_llist q \\<subseteq> \\<V> \\<and>\n                vars_llist r \\<subseteq> \\<V>);\n        \\<not> b; c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 2. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, q') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist q \\<subseteq> \\<V> \\<and>\n                       vars_llist r \\<subseteq> \\<V>);\n        \\<not> \\<not> b; p' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> p \\<in># dom_m A\n 3. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, q') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist q \\<subseteq> \\<V> \\<and>\n                       vars_llist r \\<subseteq> \\<V>);\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> (the (fmlookup A p), the (fmlookup B p'))\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 4. \\<And>b pq pqa ba pa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, q') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist q \\<subseteq> \\<V> \\<and>\n                       vars_llist r \\<subseteq> \\<V>);\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        (pq, pqa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (ba, pa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l r spec \\<bind>\n                         (\\<lambda>b'.\n                             if ba\n                             then if b' then RETURN CFOUND\n                                  else RETURN CSUCCESS\n                             else SPEC (\\<lambda>_. True) \\<bind>\n                                  (\\<lambda>c. RETURN (error_msg i c)))\n                         \\<le> SPEC\n                                (\\<lambda>c.\n                                    (c, pa)\n                                    \\<in> {(st, b).\n     (\\<not> is_cfailed st) = b \\<and>\n     (is_cfound st \\<longrightarrow> spec = r)})", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n     (q, q') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (i, i') \\<in> nat_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (p \\<in># dom_m A \\<and>\n      i \\<notin># dom_m A \\<and>\n      vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n      b_)\n     \\<in> bool_rel;\n     \\<not> (p \\<in># dom_m A \\<and>\n             i \\<notin># dom_m A \\<and>\n             vars_llist q \\<subseteq> \\<V> \\<and>\n             vars_llist r \\<subseteq> \\<V>);\n     \\<not> b_; c_ \\<in> {uu_. True}\\<rbrakk>\n    \\<Longrightarrow> (error_msg i c_, False)\n                      \\<in> {(st, b).\n                             (\\<not> is_cfailed st) = b \\<and>\n                             (is_cfound st \\<longrightarrow> spec = r)}", "by auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, q') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist q \\<subseteq> \\<V> \\<and>\n                       vars_llist r \\<subseteq> \\<V>);\n        \\<not> \\<not> b; p' \\<in># dom_m B\\<rbrakk>\n       \\<Longrightarrow> p \\<in># dom_m A\n 2. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, q') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist q \\<subseteq> \\<V> \\<and>\n                       vars_llist r \\<subseteq> \\<V>);\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> (the (fmlookup A p), the (fmlookup B p'))\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 3. \\<And>b pq pqa ba pa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, q') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist q \\<subseteq> \\<V> \\<and>\n                       vars_llist r \\<subseteq> \\<V>);\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        (pq, pqa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (ba, pa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l r spec \\<bind>\n                         (\\<lambda>b'.\n                             if ba\n                             then if b' then RETURN CFOUND\n                                  else RETURN CSUCCESS\n                             else SPEC (\\<lambda>_. True) \\<bind>\n                                  (\\<lambda>c. RETURN (error_msg i c)))\n                         \\<le> SPEC\n                                (\\<lambda>c.\n                                    (c, pa)\n                                    \\<in> {(st, b).\n     (\\<not> is_cfailed st) = b \\<and>\n     (is_cfound st \\<longrightarrow> spec = r)})", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n     (q, q') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (i, i') \\<in> nat_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (p \\<in># dom_m A \\<and>\n      i \\<notin># dom_m A \\<and>\n      vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n      b_)\n     \\<in> bool_rel;\n     \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                    i \\<notin># dom_m A \\<and>\n                    vars_llist q \\<subseteq> \\<V> \\<and>\n                    vars_llist r \\<subseteq> \\<V>);\n     \\<not> \\<not> b_; p' \\<in># dom_m B\\<rbrakk>\n    \\<Longrightarrow> p \\<in># dom_m A", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, q') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist q \\<subseteq> \\<V> \\<and>\n                       vars_llist r \\<subseteq> \\<V>);\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> (the (fmlookup A p), the (fmlookup B p'))\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 2. \\<And>b pq pqa ba pa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, q') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist q \\<subseteq> \\<V> \\<and>\n                       vars_llist r \\<subseteq> \\<V>);\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        (pq, pqa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (ba, pa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l r spec \\<bind>\n                         (\\<lambda>b'.\n                             if ba\n                             then if b' then RETURN CFOUND\n                                  else RETURN CSUCCESS\n                             else SPEC (\\<lambda>_. True) \\<bind>\n                                  (\\<lambda>c. RETURN (error_msg i c)))\n                         \\<le> SPEC\n                                (\\<lambda>c.\n                                    (c, pa)\n                                    \\<in> {(st, b).\n     (\\<not> is_cfailed st) = b \\<and>\n     (is_cfound st \\<longrightarrow> spec = r)})", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n     (q, q') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (i, i') \\<in> nat_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (p \\<in># dom_m A \\<and>\n      i \\<notin># dom_m A \\<and>\n      vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n      b_)\n     \\<in> bool_rel;\n     \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                    i \\<notin># dom_m A \\<and>\n                    vars_llist q \\<subseteq> \\<V> \\<and>\n                    vars_llist r \\<subseteq> \\<V>);\n     \\<not> \\<not> b_; p' \\<in># dom_m B; p \\<in># dom_m A\\<rbrakk>\n    \\<Longrightarrow> (the (fmlookup A p), the (fmlookup B p'))\n                      \\<in> sorted_poly_rel O mset_poly_rel", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b pq pqa ba pa.\n       \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n                sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, q') \\<in> sorted_poly_rel O mset_poly_rel;\n        (p, p') \\<in> nat_rel; (i, i') \\<in> nat_rel;\n        (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n        (p \\<in># dom_m A \\<and>\n         i \\<notin># dom_m A \\<and>\n         vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n         b)\n        \\<in> bool_rel;\n        \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                       i \\<notin># dom_m A \\<and>\n                       vars_llist q \\<subseteq> \\<V> \\<and>\n                       vars_llist r \\<subseteq> \\<V>);\n        \\<not> \\<not> b; p' \\<in># dom_m B; p \\<in># dom_m A;\n        (pq, pqa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (ba, pa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l r spec \\<bind>\n                         (\\<lambda>b'.\n                             if ba\n                             then if b' then RETURN CFOUND\n                                  else RETURN CSUCCESS\n                             else SPEC (\\<lambda>_. True) \\<bind>\n                                  (\\<lambda>c. RETURN (error_msg i c)))\n                         \\<le> SPEC\n                                (\\<lambda>c.\n                                    (c, pa)\n                                    \\<in> {(st, b).\n     (\\<not> is_cfailed st) = b \\<and>\n     (is_cfound st \\<longrightarrow> spec = r)})", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> \\<langle>nat_rel,\n             sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (r, r') \\<in> sorted_poly_rel O mset_poly_rel;\n     (q, q') \\<in> sorted_poly_rel O mset_poly_rel; (p, p') \\<in> nat_rel;\n     (i, i') \\<in> nat_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (p \\<in># dom_m A \\<and>\n      i \\<notin># dom_m A \\<and>\n      vars_llist q \\<subseteq> \\<V> \\<and> vars_llist r \\<subseteq> \\<V>,\n      b_)\n     \\<in> bool_rel;\n     \\<not> \\<not> (p \\<in># dom_m A \\<and>\n                    i \\<notin># dom_m A \\<and>\n                    vars_llist q \\<subseteq> \\<V> \\<and>\n                    vars_llist r \\<subseteq> \\<V>);\n     \\<not> \\<not> b_; p' \\<in># dom_m B; p \\<in># dom_m A;\n     (pq_, pqa_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (ba_, pa_) \\<in> bool_rel\\<rbrakk>\n    \\<Longrightarrow> weak_equality_l r spec \\<bind>\n                      (\\<lambda>b'.\n                          if ba_\n                          then if b' then RETURN CFOUND else RETURN CSUCCESS\n                          else SPEC (\\<lambda>_. True) \\<bind>\n                               (\\<lambda>c. RETURN (error_msg i c)))\n                      \\<le> SPEC\n                             (\\<lambda>c.\n                                 (c, pa_)\n                                 \\<in> {(st, b).\n  (\\<not> is_cfailed st) = b \\<and>\n  (is_cfound st \\<longrightarrow> spec = r)})", "by (auto simp: weak_equality_l_def bind_RES_RETURN_eq)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  check_mult_l spec A \\<V> p q i r\n  \\<le> \\<Down>\n         {(st, b).\n          (\\<not> is_cfailed st) = b \\<and>\n          (is_cfound st \\<longrightarrow> spec = r)}\n         (check_mult B \\<V>' p' q' i' r')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma normalize_poly_normalize_poly_spec:\n  assumes \\<open>(r, t) \\<in> unsorted_poly_rel O mset_poly_rel\\<close>\n  shows\n    \\<open>normalize_poly r \\<le> \\<Down>(sorted_poly_rel O mset_poly_rel) (normalize_poly_spec t)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. PAC_Polynomials_Operations.normalize_poly r\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (normalize_poly_spec t)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. PAC_Polynomials_Operations.normalize_poly r\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (normalize_poly_spec t)", "obtain s where\n    rs: \\<open>(r, s) \\<in> unsorted_poly_rel\\<close> and\n    st: \\<open>(s, t) \\<in> mset_poly_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(r, s) \\<in> unsorted_poly_rel;\n         (s, t) \\<in> mset_poly_rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  (r, t) \\<in> unsorted_poly_rel O mset_poly_rel\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(r, s) \\<in> unsorted_poly_rel;\n         (s, t) \\<in> mset_poly_rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (r, s) \\<in> unsorted_poly_rel\n  (s, t) \\<in> mset_poly_rel\n\ngoal (1 subgoal):\n 1. PAC_Polynomials_Operations.normalize_poly r\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (normalize_poly_spec t)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. PAC_Polynomials_Operations.normalize_poly r\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (normalize_poly_spec t)", "by (rule normalize_poly_normalize_poly_p[THEN order_trans, OF rs])\n     (use st in \\<open>auto dest!: rtranclp_normalize_poly_p_poly_of_mset\n      intro!: ref_two_step' RES_refine exI[of _ t]\n      simp: normalize_poly_spec_def ideal.span_zero mset_poly_rel_def\n      simp flip: conc_fun_chain\\<close>)"], ["proof (state)\nthis:\n  PAC_Polynomials_Operations.normalize_poly r\n  \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (normalize_poly_spec t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove1_list_rel:\n  \\<open>(xs, ys) \\<in> \\<langle>R\\<rangle> list_rel \\<Longrightarrow>\n  (a, b) \\<in> R \\<Longrightarrow>\n  IS_RIGHT_UNIQUE R \\<Longrightarrow>\n  IS_LEFT_UNIQUE R \\<Longrightarrow>\n  (remove1 a xs, remove1 b ys) \\<in> \\<langle>R\\<rangle>list_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(xs, ys) \\<in> \\<langle>R\\<rangle>list_rel; (a, b) \\<in> R;\n     single_valued R; IS_LEFT_UNIQUE R\\<rbrakk>\n    \\<Longrightarrow> (remove1 a xs, remove1 b ys)\n                      \\<in> \\<langle>R\\<rangle>list_rel", "by (induction xs ys rule: list_rel_induct)\n   (auto simp: single_valued_def IS_LEFT_UNIQUE_def)"], ["", "lemma remove1_list_rel2:\n  \\<open>(xs, ys) \\<in> \\<langle>R\\<rangle> list_rel \\<Longrightarrow>\n  (a, b) \\<in> R \\<Longrightarrow>\n  (\\<And>c. (a, c) \\<in> R \\<Longrightarrow> c = b) \\<Longrightarrow>\n  (\\<And>c. (c, b) \\<in> R \\<Longrightarrow> c = a) \\<Longrightarrow>\n  (remove1 a xs, remove1 b ys) \\<in> \\<langle>R\\<rangle>list_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(xs, ys) \\<in> \\<langle>R\\<rangle>list_rel; (a, b) \\<in> R;\n     \\<And>c. (a, c) \\<in> R \\<Longrightarrow> c = b;\n     \\<And>c. (c, b) \\<in> R \\<Longrightarrow> c = a\\<rbrakk>\n    \\<Longrightarrow> (remove1 a xs, remove1 b ys)\n                      \\<in> \\<langle>R\\<rangle>list_rel", "apply (induction xs ys rule: list_rel_induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(a, b) \\<in> R;\n     \\<And>c. (a, c) \\<in> R \\<Longrightarrow> c = b;\n     \\<And>c. (c, b) \\<in> R \\<Longrightarrow> c = a\\<rbrakk>\n    \\<Longrightarrow> (remove1 a [], remove1 b [])\n                      \\<in> \\<langle>R\\<rangle>list_rel\n 2. \\<And>x x' l l'.\n       \\<lbrakk>(x, x') \\<in> R; (l, l') \\<in> \\<langle>R\\<rangle>list_rel;\n        \\<lbrakk>(a, b) \\<in> R;\n         \\<And>c. (a, c) \\<in> R \\<Longrightarrow> c = b;\n         \\<And>c. (c, b) \\<in> R \\<Longrightarrow> c = a\\<rbrakk>\n        \\<Longrightarrow> (remove1 a l, remove1 b l')\n                          \\<in> \\<langle>R\\<rangle>list_rel;\n        (a, b) \\<in> R; \\<And>c. (a, c) \\<in> R \\<Longrightarrow> c = b;\n        \\<And>c. (c, b) \\<in> R \\<Longrightarrow> c = a\\<rbrakk>\n       \\<Longrightarrow> (remove1 a (x # l), remove1 b (x' # l'))\n                         \\<in> \\<langle>R\\<rangle>list_rel", "apply (solves \\<open>simp (no_asm)\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x x' l l'.\n       \\<lbrakk>(x, x') \\<in> R; (l, l') \\<in> \\<langle>R\\<rangle>list_rel;\n        \\<lbrakk>(a, b) \\<in> R;\n         \\<And>c. (a, c) \\<in> R \\<Longrightarrow> c = b;\n         \\<And>c. (c, b) \\<in> R \\<Longrightarrow> c = a\\<rbrakk>\n        \\<Longrightarrow> (remove1 a l, remove1 b l')\n                          \\<in> \\<langle>R\\<rangle>list_rel;\n        (a, b) \\<in> R; \\<And>c. (a, c) \\<in> R \\<Longrightarrow> c = b;\n        \\<And>c. (c, b) \\<in> R \\<Longrightarrow> c = a\\<rbrakk>\n       \\<Longrightarrow> (remove1 a (x # l), remove1 b (x' # l'))\n                         \\<in> \\<langle>R\\<rangle>list_rel", "by (smt list_rel_simp(4) remove1.simps(2))"], ["", "lemma remove1_sorted_poly_rel_mset_poly_rel:\n  assumes\n    \\<open>(r, r') \\<in> sorted_poly_rel O mset_poly_rel\\<close> and\n    \\<open>([a], 1) \\<in> set r\\<close>\n  shows\n    \\<open>(remove1 ([a], 1) r, r' - Var (\\<phi> a))\n          \\<in> sorted_poly_rel O mset_poly_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (remove1 ([a], 1) r, r' - Var (\\<phi> a))\n    \\<in> sorted_poly_rel O mset_poly_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (remove1 ([a], 1) r, r' - Var (\\<phi> a))\n    \\<in> sorted_poly_rel O mset_poly_rel", "have [simp]: \\<open>([a], {#a#}) \\<in> term_poly_list_rel\\<close>\n     \\<open>\\<And>aa. ([a], aa) \\<in> term_poly_list_rel \\<longleftrightarrow> aa = {#a#}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([a], {#a#}) \\<in> term_poly_list_rel &&&\n    (\\<And>aa. (([a], aa) \\<in> term_poly_list_rel) = (aa = {#a#}))", "by (auto simp: term_poly_list_rel_def)"], ["proof (state)\nthis:\n  ([a], {#a#}) \\<in> term_poly_list_rel\n  (([a], ?aa3) \\<in> term_poly_list_rel) = (?aa3 = {#a#})\n\ngoal (1 subgoal):\n 1. (remove1 ([a], 1) r, r' - Var (\\<phi> a))\n    \\<in> sorted_poly_rel O mset_poly_rel", "have H:\n    \\<open>\\<And>aa. ([a], aa) \\<in> term_poly_list_rel \\<Longrightarrow> aa = {#a#}\\<close>\n     \\<open>\\<And>aa. (aa, {#a#}) \\<in> term_poly_list_rel \\<Longrightarrow> aa = [a]\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>aa.\n        ([a], aa) \\<in> term_poly_list_rel \\<Longrightarrow> aa = {#a#}) &&&\n    (\\<And>aa.\n        (aa, {#a#}) \\<in> term_poly_list_rel \\<Longrightarrow> aa = [a])", "by (auto simp: single_valued_def IS_LEFT_UNIQUE_def\n       term_poly_list_rel_def)"], ["proof (state)\nthis:\n  ([a], ?aa3) \\<in> term_poly_list_rel \\<Longrightarrow> ?aa3 = {#a#}\n  (?aa3, {#a#}) \\<in> term_poly_list_rel \\<Longrightarrow> ?aa3 = [a]\n\ngoal (1 subgoal):\n 1. (remove1 ([a], 1) r, r' - Var (\\<phi> a))\n    \\<in> sorted_poly_rel O mset_poly_rel", "have [simp]: \\<open>Const (1 :: int) = (1 :: int mpoly)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. Const 1 = 1", "by (simp add: Const.abs_eq Const\\<^sub>0_one one_mpoly.abs_eq)"], ["proof (state)\nthis:\n  Const 1 = 1\n\ngoal (1 subgoal):\n 1. (remove1 ([a], 1) r, r' - Var (\\<phi> a))\n    \\<in> sorted_poly_rel O mset_poly_rel", "have [simp]: \\<open>sorted_wrt term_order (map fst r) \\<Longrightarrow>\n         sorted_wrt term_order (map fst (remove1 ([a], 1) r))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_wrt term_order (map fst r) \\<Longrightarrow>\n    sorted_wrt term_order (map fst (remove1 ([a], 1) r))", "by (induction r) auto"], ["proof (state)\nthis:\n  sorted_wrt term_order (map fst r) \\<Longrightarrow>\n  sorted_wrt term_order (map fst (remove1 ([a], 1) r))\n\ngoal (1 subgoal):\n 1. (remove1 ([a], 1) r, r' - Var (\\<phi> a))\n    \\<in> sorted_poly_rel O mset_poly_rel", "have [intro]: \\<open>distinct (map fst r) \\<Longrightarrow> distinct (map fst (remove1 x r))\\<close> for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (map fst r) \\<Longrightarrow> distinct (map fst (remove1 x r))", "by (induction r) (auto dest: in_set_remove1D)"], ["proof (state)\nthis:\n  distinct (map fst r) \\<Longrightarrow> distinct (map fst (remove1 ?x3 r))\n\ngoal (1 subgoal):\n 1. (remove1 ([a], 1) r, r' - Var (\\<phi> a))\n    \\<in> sorted_poly_rel O mset_poly_rel", "have [simp]: \\<open>(r, ya) \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel \\<Longrightarrow>\n         polynomial_of_mset (mset ya) -  Var (\\<phi> a) =\n         polynomial_of_mset (remove1_mset ({#a#}, 1) (mset ya))\\<close> for ya"], ["proof (prove)\ngoal (1 subgoal):\n 1. (r, ya)\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel \\<Longrightarrow>\n    polynomial_of_mset (mset ya) - Var (\\<phi> a) =\n    polynomial_of_mset (remove1_mset ({#a#}, 1) (mset ya))", "using assms"], ["proof (prove)\nusing this:\n  (r, r') \\<in> sorted_poly_rel O mset_poly_rel\n  ([a], 1) \\<in> set r\n\ngoal (1 subgoal):\n 1. (r, ya)\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel \\<Longrightarrow>\n    polynomial_of_mset (mset ya) - Var (\\<phi> a) =\n    polynomial_of_mset (remove1_mset ({#a#}, 1) (mset ya))", "by (auto simp: list_rel_append1 list_rel_split_right_iff\n       dest!: split_list)"], ["proof (state)\nthis:\n  (r, ?ya3)\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel \\<Longrightarrow>\n  polynomial_of_mset (mset ?ya3) - Var (\\<phi> a) =\n  polynomial_of_mset (remove1_mset ({#a#}, 1) (mset ?ya3))\n\ngoal (1 subgoal):\n 1. (remove1 ([a], 1) r, r' - Var (\\<phi> a))\n    \\<in> sorted_poly_rel O mset_poly_rel", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (remove1 ([a], 1) r, r' - Var (\\<phi> a))\n    \\<in> sorted_poly_rel O mset_poly_rel", "using assms"], ["proof (prove)\nusing this:\n  (r, r') \\<in> sorted_poly_rel O mset_poly_rel\n  ([a], 1) \\<in> set r\n\ngoal (1 subgoal):\n 1. (remove1 ([a], 1) r, r' - Var (\\<phi> a))\n    \\<in> sorted_poly_rel O mset_poly_rel", "apply (elim relcompEpair)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>([a], 1) \\<in> set r; (r, b) \\<in> sorted_poly_rel;\n        (b, r') \\<in> mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([a], 1) r, r' - Var (\\<phi> a))\n                         \\<in> sorted_poly_rel O mset_poly_rel", "apply (rename_tac za, rule_tac b = \\<open>remove1_mset ({#a#}, 1) za\\<close> in relcompI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>za.\n       \\<lbrakk>([a], 1) \\<in> set r; (r, za) \\<in> sorted_poly_rel;\n        (za, r') \\<in> mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([a], 1) r, remove1_mset ({#a#}, 1) za)\n                         \\<in> sorted_poly_rel\n 2. \\<And>za.\n       \\<lbrakk>([a], 1) \\<in> set r; (r, za) \\<in> sorted_poly_rel;\n        (za, r') \\<in> mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (remove1_mset ({#a#}, 1) za, r' - Var (\\<phi> a))\n                         \\<in> mset_poly_rel", "apply (auto simp: mset_poly_rel_def sorted_poly_list_rel_wrt_def Collect_eq_comp'\n      intro!: relcompI[of _ \\<open>remove1 ({#a#}, 1) ya\\<close>\n        for ya :: \\<open>(string multiset \\<times> int) list\\<close>]  remove1_list_rel2 intro: H\n      simp: list_mset_rel_def br_def\n      dest: in_diffD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (remove1 ([a], 1) r, r' - Var (\\<phi> a))\n  \\<in> sorted_poly_rel O mset_poly_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove1_sorted_poly_rel_mset_poly_rel_minus:\n  assumes\n    \\<open>(r, r') \\<in> sorted_poly_rel O mset_poly_rel\\<close> and\n    \\<open>([a], -1) \\<in> set r\\<close>\n  shows\n    \\<open>(remove1 ([a], -1) r, r' + Var (\\<phi> a))\n          \\<in> sorted_poly_rel O mset_poly_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (remove1 ([a], - 1) r, r' + Var (\\<phi> a))\n    \\<in> sorted_poly_rel O mset_poly_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (remove1 ([a], - 1) r, r' + Var (\\<phi> a))\n    \\<in> sorted_poly_rel O mset_poly_rel", "have [simp]: \\<open>([a], {#a#}) \\<in> term_poly_list_rel\\<close>\n     \\<open>\\<And>aa. ([a], aa) \\<in> term_poly_list_rel \\<longleftrightarrow> aa = {#a#}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([a], {#a#}) \\<in> term_poly_list_rel &&&\n    (\\<And>aa. (([a], aa) \\<in> term_poly_list_rel) = (aa = {#a#}))", "by (auto simp: term_poly_list_rel_def)"], ["proof (state)\nthis:\n  ([a], {#a#}) \\<in> term_poly_list_rel\n  (([a], ?aa3) \\<in> term_poly_list_rel) = (?aa3 = {#a#})\n\ngoal (1 subgoal):\n 1. (remove1 ([a], - 1) r, r' + Var (\\<phi> a))\n    \\<in> sorted_poly_rel O mset_poly_rel", "have H:\n    \\<open>\\<And>aa. ([a], aa) \\<in> term_poly_list_rel \\<Longrightarrow> aa = {#a#}\\<close>\n     \\<open>\\<And>aa. (aa, {#a#}) \\<in> term_poly_list_rel \\<Longrightarrow> aa = [a]\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>aa.\n        ([a], aa) \\<in> term_poly_list_rel \\<Longrightarrow> aa = {#a#}) &&&\n    (\\<And>aa.\n        (aa, {#a#}) \\<in> term_poly_list_rel \\<Longrightarrow> aa = [a])", "by (auto simp: single_valued_def IS_LEFT_UNIQUE_def\n       term_poly_list_rel_def)"], ["proof (state)\nthis:\n  ([a], ?aa3) \\<in> term_poly_list_rel \\<Longrightarrow> ?aa3 = {#a#}\n  (?aa3, {#a#}) \\<in> term_poly_list_rel \\<Longrightarrow> ?aa3 = [a]\n\ngoal (1 subgoal):\n 1. (remove1 ([a], - 1) r, r' + Var (\\<phi> a))\n    \\<in> sorted_poly_rel O mset_poly_rel", "have [simp]: \\<open>Const (1 :: int) = (1 :: int mpoly)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. Const 1 = 1", "by (simp add: Const.abs_eq Const\\<^sub>0_one one_mpoly.abs_eq)"], ["proof (state)\nthis:\n  Const 1 = 1\n\ngoal (1 subgoal):\n 1. (remove1 ([a], - 1) r, r' + Var (\\<phi> a))\n    \\<in> sorted_poly_rel O mset_poly_rel", "have [simp]: \\<open>sorted_wrt term_order (map fst r) \\<Longrightarrow>\n         sorted_wrt term_order (map fst (remove1 ([a], -1) r))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_wrt term_order (map fst r) \\<Longrightarrow>\n    sorted_wrt term_order (map fst (remove1 ([a], - 1) r))", "by (induction r) auto"], ["proof (state)\nthis:\n  sorted_wrt term_order (map fst r) \\<Longrightarrow>\n  sorted_wrt term_order (map fst (remove1 ([a], - 1) r))\n\ngoal (1 subgoal):\n 1. (remove1 ([a], - 1) r, r' + Var (\\<phi> a))\n    \\<in> sorted_poly_rel O mset_poly_rel", "have [intro]: \\<open>distinct (map fst r) \\<Longrightarrow> distinct (map fst (remove1 x r))\\<close> for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (map fst r) \\<Longrightarrow> distinct (map fst (remove1 x r))", "apply (induction r)"], ["proof (prove)\ngoal (2 subgoals):\n 1. distinct (map fst []) \\<Longrightarrow>\n    distinct (map fst (remove1 x []))\n 2. \\<And>a r.\n       \\<lbrakk>distinct (map fst r) \\<Longrightarrow>\n                distinct (map fst (remove1 x r));\n        distinct (map fst (a # r))\\<rbrakk>\n       \\<Longrightarrow> distinct (map fst (remove1 x (a # r)))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b r aa ba.\n       \\<lbrakk>distinct (map fst (remove1 x r)); aa \\<notin> mononoms r;\n        distinct (map fst r); x \\<noteq> (aa, b);\n        (aa, ba) \\<in> set (remove1 x r)\\<rbrakk>\n       \\<Longrightarrow> False", "by (meson img_fst in_set_remove1D)"], ["proof (state)\nthis:\n  distinct (map fst r) \\<Longrightarrow> distinct (map fst (remove1 ?x3 r))\n\ngoal (1 subgoal):\n 1. (remove1 ([a], - 1) r, r' + Var (\\<phi> a))\n    \\<in> sorted_poly_rel O mset_poly_rel", "have [simp]: \\<open>(r, ya) \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel \\<Longrightarrow>\n         polynomial_of_mset (mset ya) +  Var (\\<phi> a) =\n         polynomial_of_mset (remove1_mset ({#a#}, -1) (mset ya))\\<close> for ya"], ["proof (prove)\ngoal (1 subgoal):\n 1. (r, ya)\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel \\<Longrightarrow>\n    polynomial_of_mset (mset ya) + Var (\\<phi> a) =\n    polynomial_of_mset (remove1_mset ({#a#}, - 1) (mset ya))", "using assms"], ["proof (prove)\nusing this:\n  (r, r') \\<in> sorted_poly_rel O mset_poly_rel\n  ([a], - 1) \\<in> set r\n\ngoal (1 subgoal):\n 1. (r, ya)\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel \\<Longrightarrow>\n    polynomial_of_mset (mset ya) + Var (\\<phi> a) =\n    polynomial_of_mset (remove1_mset ({#a#}, - 1) (mset ya))", "by (auto simp: list_rel_append1 list_rel_split_right_iff\n       dest!: split_list)"], ["proof (state)\nthis:\n  (r, ?ya3)\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel \\<Longrightarrow>\n  polynomial_of_mset (mset ?ya3) + Var (\\<phi> a) =\n  polynomial_of_mset (remove1_mset ({#a#}, - 1) (mset ?ya3))\n\ngoal (1 subgoal):\n 1. (remove1 ([a], - 1) r, r' + Var (\\<phi> a))\n    \\<in> sorted_poly_rel O mset_poly_rel", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (remove1 ([a], - 1) r, r' + Var (\\<phi> a))\n    \\<in> sorted_poly_rel O mset_poly_rel", "using assms"], ["proof (prove)\nusing this:\n  (r, r') \\<in> sorted_poly_rel O mset_poly_rel\n  ([a], - 1) \\<in> set r\n\ngoal (1 subgoal):\n 1. (remove1 ([a], - 1) r, r' + Var (\\<phi> a))\n    \\<in> sorted_poly_rel O mset_poly_rel", "apply (elim relcompEpair)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>([a], - 1) \\<in> set r; (r, b) \\<in> sorted_poly_rel;\n        (b, r') \\<in> mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([a], - 1) r, r' + Var (\\<phi> a))\n                         \\<in> sorted_poly_rel O mset_poly_rel", "apply (rename_tac za, rule_tac b = \\<open>remove1_mset ({#a#}, -1) za\\<close> in relcompI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>za.\n       \\<lbrakk>([a], - 1) \\<in> set r; (r, za) \\<in> sorted_poly_rel;\n        (za, r') \\<in> mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([a], - 1) r,\n                          remove1_mset ({#a#}, - 1) za)\n                         \\<in> sorted_poly_rel\n 2. \\<And>za.\n       \\<lbrakk>([a], - 1) \\<in> set r; (r, za) \\<in> sorted_poly_rel;\n        (za, r') \\<in> mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (remove1_mset ({#a#}, - 1) za, r' + Var (\\<phi> a))\n                         \\<in> mset_poly_rel", "by (auto simp: mset_poly_rel_def sorted_poly_list_rel_wrt_def Collect_eq_comp'\n       dest: in_diffD\n       intro!: relcompI[of _ \\<open>remove1 ({#a#}, -1) ya\\<close>\n         for ya :: \\<open>(string multiset \\<times> int) list\\<close>]  remove1_list_rel2 intro: H\n      simp: list_mset_rel_def br_def)"], ["proof (state)\nthis:\n  (remove1 ([a], - 1) r, r' + Var (\\<phi> a))\n  \\<in> sorted_poly_rel O mset_poly_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma insert_var_rel_set_rel:\n  \\<open>(\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel \\<Longrightarrow>\n  (yb, x2) \\<in> var_rel \\<Longrightarrow>\n  (insert yb \\<V>, insert x2 \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (yb, x2) \\<in> var_rel\\<rbrakk>\n    \\<Longrightarrow> (insert yb \\<V>, insert x2 \\<V>')\n                      \\<in> \\<langle>var_rel\\<rangle>set_rel", "by (auto simp: var_rel_def set_rel_def)"], ["", "lemma var_rel_set_rel_iff:\n  \\<open>(\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel \\<Longrightarrow>\n  (yb, x2) \\<in> var_rel \\<Longrightarrow>\n  yb \\<in> \\<V> \\<longleftrightarrow> x2 \\<in>  \\<V>'\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (yb, x2) \\<in> var_rel\\<rbrakk>\n    \\<Longrightarrow> (yb \\<in> \\<V>) = (x2 \\<in> \\<V>')", "using \\<phi>_inj inj_eq"], ["proof (prove)\nusing this:\n  inj \\<phi>\n  inj ?f \\<Longrightarrow> (?f ?x = ?f ?y) = (?x = ?y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n     (yb, x2) \\<in> var_rel\\<rbrakk>\n    \\<Longrightarrow> (yb \\<in> \\<V>) = (x2 \\<in> \\<V>')", "by (fastforce simp: var_rel_def set_rel_def br_def)"], ["", "lemma check_extension_l_check_extension:\n  assumes \\<open>(A, B) \\<in> fmap_polys_rel\\<close> and \\<open>(r, r') \\<in> sorted_poly_rel O mset_poly_rel\\<close> and\n    \\<open>(i, i') \\<in> nat_rel\\<close> \\<open>(\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<close> \\<open>(x, x') \\<in> var_rel\\<close>\n  shows\n    \\<open>check_extension_l spec A \\<V> i x r \\<le>\n      \\<Down>{((st), (b)).\n        (\\<not>is_cfailed st \\<longleftrightarrow> b) \\<and>\n       (is_cfound st \\<longrightarrow> spec = r)} (check_extension B \\<V>' i' x' r')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. check_extension_l spec A \\<V> i x r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_extension B \\<V>' i' x' r')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. check_extension_l spec A \\<V> i x r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_extension B \\<V>' i' x' r')", "have \\<open>x' = \\<phi> x\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' = \\<phi> x", "using assms(5)"], ["proof (prove)\nusing this:\n  (x, x') \\<in> var_rel\n\ngoal (1 subgoal):\n 1. x' = \\<phi> x", "by (auto simp: var_rel_def br_def)"], ["proof (state)\nthis:\n  x' = \\<phi> x\n\ngoal (1 subgoal):\n 1. check_extension_l spec A \\<V> i x r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_extension B \\<V>' i' x' r')", "have [refine]:\n    \\<open>mult_poly_full p q \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (mult_poly_spec p' q')\\<close>\n    if \\<open>(p, p') \\<in> sorted_poly_rel O mset_poly_rel\\<close>\n      \\<open>(q, q') \\<in> sorted_poly_rel O mset_poly_rel\\<close>\n    for p p' q q'"], ["proof (prove)\ngoal (1 subgoal):\n 1. mult_poly_full p q\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (mult_poly_spec p' q')", "using that"], ["proof (prove)\nusing this:\n  (p, p') \\<in> sorted_poly_rel O mset_poly_rel\n  (q, q') \\<in> sorted_poly_rel O mset_poly_rel\n\ngoal (1 subgoal):\n 1. mult_poly_full p q\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (mult_poly_spec p' q')", "by (auto intro!: mult_poly_full_mult_poly_p'[THEN order_trans] ref_two_step'\n         mult_poly_p'_mult_poly_spec\n      simp flip: conc_fun_chain)"], ["proof (state)\nthis:\n  \\<lbrakk>(?p3, ?p'3) \\<in> sorted_poly_rel O mset_poly_rel;\n   (?q3, ?q'3) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n  \\<Longrightarrow> mult_poly_full ?p3 ?q3\n                    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel)\n                           (mult_poly_spec ?p'3 ?q'3)\n\ngoal (1 subgoal):\n 1. check_extension_l spec A \\<V> i x r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_extension B \\<V>' i' x' r')", "have [refine]:\n    \\<open>add_poly_l (p, q) \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (add_poly_spec p' q')\\<close>\n    if \\<open>(p, p') \\<in> sorted_poly_rel O mset_poly_rel\\<close>\n      \\<open>(q, q') \\<in> sorted_poly_rel O mset_poly_rel\\<close>\n    for p p' q q'"], ["proof (prove)\ngoal (1 subgoal):\n 1. add_poly_l (p, q)\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (add_poly_spec p' q')", "using that"], ["proof (prove)\nusing this:\n  (p, p') \\<in> sorted_poly_rel O mset_poly_rel\n  (q, q') \\<in> sorted_poly_rel O mset_poly_rel\n\ngoal (1 subgoal):\n 1. add_poly_l (p, q)\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (add_poly_spec p' q')", "by (auto intro!: add_poly_l_add_poly_p'[THEN order_trans] ref_two_step'\n         add_poly_p'_add_poly_spec\n      simp flip: conc_fun_chain)"], ["proof (state)\nthis:\n  \\<lbrakk>(?p3, ?p'3) \\<in> sorted_poly_rel O mset_poly_rel;\n   (?q3, ?q'3) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n  \\<Longrightarrow> add_poly_l (?p3, ?q3)\n                    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel)\n                           (add_poly_spec ?p'3 ?q'3)\n\ngoal (1 subgoal):\n 1. check_extension_l spec A \\<V> i x r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_extension B \\<V>' i' x' r')", "have [simp]: \\<open>(l, l') \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel \\<Longrightarrow>\n       (map (\\<lambda>(a, b). (a, - b)) l, map (\\<lambda>(a, b). (a, - b)) l')\n       \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel\\<close> for l l'"], ["proof (prove)\ngoal (1 subgoal):\n 1. (l, l')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel \\<Longrightarrow>\n    (map (\\<lambda>(a, b). (a, - b)) l, map (\\<lambda>(a, b). (a, - b)) l')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel", "by (induction l l'  rule: list_rel_induct)\n        (auto simp: list_mset_rel_def br_def)"], ["proof (state)\nthis:\n  (?l3, ?l'3)\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel \\<Longrightarrow>\n  (map (\\<lambda>(a, b). (a, - b)) ?l3,\n   map (\\<lambda>(a, b). (a, - b)) ?l'3)\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. check_extension_l spec A \\<V> i x r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_extension B \\<V>' i' x' r')", "have [intro!]:\n    \\<open>(x2c, za) \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel O list_mset_rel \\<Longrightarrow>\n     (map (\\<lambda>(a, b). (a, - b)) x2c,\n        {#case x of (a, b) \\<Rightarrow> (a, - b). x \\<in># za#})\n       \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel O list_mset_rel\\<close> for x2c za"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x2c, za)\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel \\<Longrightarrow>\n    (map (\\<lambda>(a, b). (a, - b)) x2c,\n     {#case x of (a, b) \\<Rightarrow> (a, - b). x \\<in># za#})\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "apply (auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>(x2c, y)\n                \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                               int_rel\\<rangle>list_rel;\n        (y, za) \\<in> list_mset_rel\\<rbrakk>\n       \\<Longrightarrow> (map (\\<lambda>(a, b). (a, - b)) x2c,\n                          {#case x of (a, b) \\<Rightarrow> (a, - b)\n                          . x \\<in># za#})\n                         \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n  int_rel\\<rangle>list_rel O\n                               list_mset_rel", "subgoal for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x2c, y)\n             \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                            int_rel\\<rangle>list_rel;\n     (y, za) \\<in> list_mset_rel\\<rbrakk>\n    \\<Longrightarrow> (map (\\<lambda>(a, b). (a, - b)) x2c,\n                       {#case x of (a, b) \\<Rightarrow> (a, - b)\n                       . x \\<in># za#})\n                      \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                                     int_rel\\<rangle>list_rel O\n                            list_mset_rel", "apply (induction x2c y  rule: list_rel_induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ([], za) \\<in> list_mset_rel \\<Longrightarrow>\n    (map (\\<lambda>(a, b). (a, - b)) [], {#(a, - b). (a, b) \\<in># za#})\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel\n 2. \\<And>x x' l l'.\n       \\<lbrakk>(x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel;\n        (l, l')\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        (l', za) \\<in> list_mset_rel \\<Longrightarrow>\n        (map (\\<lambda>(a, b). (a, - b)) l, {#(a, - b). (a, b) \\<in># za#})\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel O\n              list_mset_rel;\n        (x' # l', za) \\<in> list_mset_rel\\<rbrakk>\n       \\<Longrightarrow> (map (\\<lambda>(a, b). (a, - b)) (x # l),\n                          {#(a, - b). (a, b) \\<in># za#})\n                         \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n  int_rel\\<rangle>list_rel O\n                               list_mset_rel", "apply (auto simp: list_mset_rel_def br_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b aa l l'.\n       \\<lbrakk>(a, aa) \\<in> term_poly_list_rel;\n        (l, l')\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        za = add_mset (aa, b) (mset l')\\<rbrakk>\n       \\<Longrightarrow> ((a, - b) # map (\\<lambda>(a, b). (a, - b)) l,\n                          add_mset (aa, - b)\n                           {#case x of (a, b) \\<Rightarrow> (a, - b)\n                           . x \\<in># mset l'#})\n                         \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n  int_rel\\<rangle>list_rel O\n                               {(c, a). a = mset c}", "apply (rename_tac a ba aa l l', rule_tac b = \\<open>(aa, - ba) # map (\\<lambda>(a, b). (a, - b)) l'\\<close> in relcompI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a ba aa l l'.\n       \\<lbrakk>(a, aa) \\<in> term_poly_list_rel;\n        (l, l')\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        za = add_mset (aa, ba) (mset l')\\<rbrakk>\n       \\<Longrightarrow> ((a, - ba) # map (\\<lambda>(a, b). (a, - b)) l,\n                          (aa, - ba) # map (\\<lambda>(a, b). (a, - b)) l')\n                         \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n  int_rel\\<rangle>list_rel\n 2. \\<And>a ba aa l l'.\n       \\<lbrakk>(a, aa) \\<in> term_poly_list_rel;\n        (l, l')\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        za = add_mset (aa, ba) (mset l')\\<rbrakk>\n       \\<Longrightarrow> ((aa, - ba) # map (\\<lambda>(a, b). (a, - b)) l',\n                          add_mset (aa, - ba)\n                           {#case x of (a, b) \\<Rightarrow> (a, - b)\n                           . x \\<in># mset l'#})\n                         \\<in> {(c, a). a = mset c}", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (?x2c3, ?za3)\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel O\n        list_mset_rel \\<Longrightarrow>\n  (map (\\<lambda>(a, b). (a, - b)) ?x2c3,\n   {#case x of (a, b) \\<Rightarrow> (a, - b). x \\<in># ?za3#})\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel O\n        list_mset_rel\n\ngoal (1 subgoal):\n 1. check_extension_l spec A \\<V> i x r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_extension B \\<V>' i' x' r')", "have [simp]: \\<open>(\\<lambda>x. fst (case x of (a, b) \\<Rightarrow> (a, - b))) = fst\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. fst (case x of (a, b) \\<Rightarrow> (a, - b))) = fst", "by (auto intro: ext)"], ["proof (state)\nthis:\n  (\\<lambda>x. fst (case x of (a, b) \\<Rightarrow> (a, - b))) = fst\n\ngoal (1 subgoal):\n 1. check_extension_l spec A \\<V> i x r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_extension B \\<V>' i' x' r')", "have uminus: \\<open>(x2c, x2a) \\<in> sorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n       (map (\\<lambda>(a, b). (a, - b)) x2c,\n        - x2a)\n       \\<in> sorted_poly_rel O mset_poly_rel\\<close> for x2c x2a x1c x1a"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x2c, x2a) \\<in> sorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n    (map (\\<lambda>(a, b). (a, - b)) x2c, - x2a)\n    \\<in> sorted_poly_rel O mset_poly_rel", "apply (clarsimp simp: sorted_poly_list_rel_wrt_def\n      mset_poly_rel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ya za.\n       \\<lbrakk>x2a = polynomial_of_mset za;\n        (x2c, ya)\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        (ya, za) \\<in> list_mset_rel; sorted_wrt term_order (map fst x2c);\n        distinct (map fst x2c); 0 \\<notin> snd ` set_mset za\\<rbrakk>\n       \\<Longrightarrow> (map (\\<lambda>(a, b). (a, - b)) x2c,\n                          - polynomial_of_mset za)\n                         \\<in> {(xs, ys).\n                                (xs, ys)\n                                \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n         int_rel\\<rangle>list_rel O\nlist_mset_rel \\<and>\n                                sorted_wrt term_order (map fst xs) \\<and>\n                                distinct (map fst xs) \\<and>\n                                0 \\<notin> snd ` set_mset ys} O\n                               {(a, b). b = polynomial_of_mset a}", "apply (rule_tac b = \\<open>(\\<lambda>(a, b). (a, - b)) `# za\\<close> in relcompI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ya za.\n       \\<lbrakk>x2a = polynomial_of_mset za;\n        (x2c, ya)\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        (ya, za) \\<in> list_mset_rel; sorted_wrt term_order (map fst x2c);\n        distinct (map fst x2c); 0 \\<notin> snd ` set_mset za\\<rbrakk>\n       \\<Longrightarrow> (map (\\<lambda>(a, b). (a, - b)) x2c,\n                          {#(a, - b). (a, b) \\<in># za#})\n                         \\<in> {(xs, ys).\n                                (xs, ys)\n                                \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n         int_rel\\<rangle>list_rel O\nlist_mset_rel \\<and>\n                                sorted_wrt term_order (map fst xs) \\<and>\n                                distinct (map fst xs) \\<and>\n                                0 \\<notin> snd ` set_mset ys}\n 2. \\<And>ya za.\n       \\<lbrakk>x2a = polynomial_of_mset za;\n        (x2c, ya)\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        (ya, za) \\<in> list_mset_rel; sorted_wrt term_order (map fst x2c);\n        distinct (map fst x2c); 0 \\<notin> snd ` set_mset za\\<rbrakk>\n       \\<Longrightarrow> ({#(a, - b). (a, b) \\<in># za#},\n                          - polynomial_of_mset za)\n                         \\<in> {(a, b). b = polynomial_of_mset a}", "by (auto simp: sorted_poly_list_rel_wrt_def\n      mset_poly_rel_def comp_def polynomial_of_mset_uminus)"], ["proof (state)\nthis:\n  (?x2c4, ?x2a4) \\<in> sorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n  (map (\\<lambda>(a, b). (a, - b)) ?x2c4, - ?x2a4)\n  \\<in> sorted_poly_rel O mset_poly_rel\n\ngoal (1 subgoal):\n 1. check_extension_l spec A \\<V> i x r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_extension B \\<V>' i' x' r')", "have [simp]: \\<open>([], 0) \\<in> sorted_poly_rel O mset_poly_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([], 0) \\<in> sorted_poly_rel O mset_poly_rel", "by (auto simp: sorted_poly_list_rel_wrt_def\n      mset_poly_rel_def list_mset_rel_def br_def\n      intro!: relcompI[of _ \\<open>{#}\\<close>])"], ["proof (state)\nthis:\n  ([], 0) \\<in> sorted_poly_rel O mset_poly_rel\n\ngoal (1 subgoal):\n 1. check_extension_l spec A \\<V> i x r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_extension B \\<V>' i' x' r')", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. check_extension_l spec A \\<V> i x r\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_extension B \\<V>' i' x' r')", "unfolding check_extension_l_def\n       check_extension_l_dom_err_def\n       check_extension_l_no_new_var_err_def\n       check_extension_l_new_var_multiple_err_def\n       check_extension_l_side_cond_err_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (let b = i \\<notin># dom_m A \\<and>\n             x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r\n     in if \\<not> b\n        then SPEC (\\<lambda>_. True) \\<bind>\n             (\\<lambda>c. RETURN (error_msg i c))\n        else let p' = remove1 ([x], - 1) r;\n                 b = vars_llist p' \\<subseteq> \\<V>\n             in if \\<not> b\n                then SPEC (\\<lambda>_. True) \\<bind>\n                     (\\<lambda>c. RETURN (error_msg i c))\n                else mult_poly_full p' p' \\<bind>\n                     (\\<lambda>p2.\n                         let p' = map (\\<lambda>(a, b). (a, - b)) p'\n                         in add_poly_l (p2, p') \\<bind>\n                            (\\<lambda>q.\n                                weak_equality_l q [] \\<bind>\n                                (\\<lambda>eq.\n                                    if eq then RETURN CSUCCESS\n                                    else SPEC (\\<lambda>_. True) \\<bind>\n   (\\<lambda>c. RETURN (error_msg i c))))))\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (check_extension B \\<V>' i' x' r')", "apply (rule order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (let b = i \\<notin># dom_m A \\<and>\n             x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r\n     in if \\<not> b\n        then SPEC (\\<lambda>_. True) \\<bind>\n             (\\<lambda>c. RETURN (error_msg i c))\n        else let p' = remove1 ([x], - 1) r;\n                 b = vars_llist p' \\<subseteq> \\<V>\n             in if \\<not> b\n                then SPEC (\\<lambda>_. True) \\<bind>\n                     (\\<lambda>c. RETURN (error_msg i c))\n                else mult_poly_full p' p' \\<bind>\n                     (\\<lambda>p2.\n                         let p' = map (\\<lambda>(a, b). (a, - b)) p'\n                         in add_poly_l (p2, p') \\<bind>\n                            (\\<lambda>q.\n                                weak_equality_l q [] \\<bind>\n                                (\\<lambda>eq.\n                                    if eq then RETURN CSUCCESS\n                                    else SPEC (\\<lambda>_. True) \\<bind>\n   (\\<lambda>c. RETURN (error_msg i c))))))\n    \\<le> ?y\n 2. ?y \\<le> \\<Down>\n              {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\n              (check_extension B \\<V>' i' x' r')", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. ?y \\<le> \\<Down>\n              {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\n              (check_extension B \\<V>' i' x' r')\n 2. (let b = i \\<notin># dom_m A \\<and>\n             x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r\n     in if \\<not> b\n        then SPEC (\\<lambda>_. True) \\<bind>\n             (\\<lambda>c. RETURN (error_msg i c))\n        else let p' = remove1 ([x], - 1) r;\n                 b = vars_llist p' \\<subseteq> \\<V>\n             in if \\<not> b\n                then SPEC (\\<lambda>_. True) \\<bind>\n                     (\\<lambda>c. RETURN (error_msg i c))\n                else mult_poly_full p' p' \\<bind>\n                     (\\<lambda>p2.\n                         let p' = map (\\<lambda>(a, b). (a, - b)) p'\n                         in add_poly_l (p2, p') \\<bind>\n                            (\\<lambda>q.\n                                weak_equality_l q [] \\<bind>\n                                (\\<lambda>eq.\n                                    if eq then RETURN CSUCCESS\n                                    else SPEC (\\<lambda>_. True) \\<bind>\n   (\\<lambda>c. RETURN (error_msg i c))))))\n    \\<le> ?y", "apply (rule ref_two_step')"], ["proof (prove)\ngoal (2 subgoals):\n 1. ?A3 \\<le> check_extension B \\<V>' i' x' r'\n 2. (let b = i \\<notin># dom_m A \\<and>\n             x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r\n     in if \\<not> b\n        then SPEC (\\<lambda>_. True) \\<bind>\n             (\\<lambda>c. RETURN (error_msg i c))\n        else let p' = remove1 ([x], - 1) r;\n                 b = vars_llist p' \\<subseteq> \\<V>\n             in if \\<not> b\n                then SPEC (\\<lambda>_. True) \\<bind>\n                     (\\<lambda>c. RETURN (error_msg i c))\n                else mult_poly_full p' p' \\<bind>\n                     (\\<lambda>p2.\n                         let p' = map (\\<lambda>(a, b). (a, - b)) p'\n                         in add_poly_l (p2, p') \\<bind>\n                            (\\<lambda>q.\n                                weak_equality_l q [] \\<bind>\n                                (\\<lambda>eq.\n                                    if eq then RETURN CSUCCESS\n                                    else SPEC (\\<lambda>_. True) \\<bind>\n   (\\<lambda>c. RETURN (error_msg i c))))))\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           ?A3", "apply (rule check_extension_alt_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (let b = i \\<notin># dom_m A \\<and>\n             x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r\n     in if \\<not> b\n        then SPEC (\\<lambda>_. True) \\<bind>\n             (\\<lambda>c. RETURN (error_msg i c))\n        else let p' = remove1 ([x], - 1) r;\n                 b = vars_llist p' \\<subseteq> \\<V>\n             in if \\<not> b\n                then SPEC (\\<lambda>_. True) \\<bind>\n                     (\\<lambda>c. RETURN (error_msg i c))\n                else mult_poly_full p' p' \\<bind>\n                     (\\<lambda>p2.\n                         let p' = map (\\<lambda>(a, b). (a, - b)) p'\n                         in add_poly_l (p2, p') \\<bind>\n                            (\\<lambda>q.\n                                weak_equality_l q [] \\<bind>\n                                (\\<lambda>eq.\n                                    if eq then RETURN CSUCCESS\n                                    else SPEC (\\<lambda>_. True) \\<bind>\n   (\\<lambda>c. RETURN (error_msg i c))))))\n    \\<le> \\<Down>\n           {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\n           (SPEC\n             (\\<lambda>b.\n                 b \\<longrightarrow>\n                 i' \\<notin># dom_m B \\<and> x' \\<notin> \\<V>') \\<bind>\n            (\\<lambda>b.\n                if \\<not> b then RETURN False\n                else RETURN (r' + Var x') \\<bind>\n                     (\\<lambda>p'.\n                         SPEC\n                          (\\<lambda>b.\n                              b \\<longrightarrow>\n                              vars p' \\<subseteq> \\<V>') \\<bind>\n                         (\\<lambda>b.\n                             if \\<not> b then RETURN False\n                             else mult_poly_spec p' p' \\<bind>\n                                  (\\<lambda>pq.\nlet p' = - p'\nin add_poly_spec pq p' \\<bind>\n   (\\<lambda>p.\n       weak_equality p 0 \\<bind>\n       (\\<lambda>eq. if eq then RETURN True else RETURN False)))))))", "apply (refine_vcg )"], ["proof (prove)\ngoal (15 subgoals):\n 1. i \\<notin># dom_m A \\<and>\n    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r \\<Longrightarrow>\n    i' \\<notin># dom_m B\n 2. i \\<notin># dom_m A \\<and>\n    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r \\<Longrightarrow>\n    x' \\<notin> \\<V>'\n 3. \\<And>b.\n       (i \\<notin># dom_m A \\<and>\n        x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n        b)\n       \\<in> bool_rel \\<Longrightarrow>\n       (\\<not> (i \\<notin># dom_m A \\<and>\n                x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r)) =\n       (\\<not> b)\n 4. \\<And>b c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> (i \\<notin># dom_m A \\<and>\n                x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> b; c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 5. \\<And>b.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, r' + Var x') \\<in> ?R'14 b\n 6. \\<And>b p'.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>\\<rbrakk>\n       \\<Longrightarrow> vars p' \\<subseteq> \\<V>'\n 7. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> vars_llist (remove1 ([x], - 1) r)\n                                 \\<subseteq> \\<V>) =\n                         (\\<not> ba)\n 8. \\<And>b p' ba c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> ba; c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 9. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 10. \\<And>b p' ba.\n        \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                  x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                  b)\n                 \\<in> bool_rel;\n         \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                        x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n         \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n         (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n         \\<in> bool_rel;\n         \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n         \\<not> \\<not> ba\\<rbrakk>\n        \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                          \\<in> sorted_poly_rel O mset_poly_rel\nA total of 15 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<notin># dom_m A \\<and>\n    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r \\<Longrightarrow>\n    i' \\<notin># dom_m B", "using assms(1,3,4,5)"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (i, i') \\<in> nat_rel\n  (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\n  (x, x') \\<in> var_rel\n\ngoal (1 subgoal):\n 1. i \\<notin># dom_m A \\<and>\n    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r \\<Longrightarrow>\n    i' \\<notin># dom_m B", "by (auto simp: var_rel_set_rel_iff)"], ["proof (prove)\ngoal (14 subgoals):\n 1. i \\<notin># dom_m A \\<and>\n    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r \\<Longrightarrow>\n    x' \\<notin> \\<V>'\n 2. \\<And>b.\n       (i \\<notin># dom_m A \\<and>\n        x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n        b)\n       \\<in> bool_rel \\<Longrightarrow>\n       (\\<not> (i \\<notin># dom_m A \\<and>\n                x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r)) =\n       (\\<not> b)\n 3. \\<And>b c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> (i \\<notin># dom_m A \\<and>\n                x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> b; c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 4. \\<And>b.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, r' + Var x') \\<in> ?R'14 b\n 5. \\<And>b p'.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>\\<rbrakk>\n       \\<Longrightarrow> vars p' \\<subseteq> \\<V>'\n 6. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> vars_llist (remove1 ([x], - 1) r)\n                                 \\<subseteq> \\<V>) =\n                         (\\<not> ba)\n 7. \\<And>b p' ba c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> ba; c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 8. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 9. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 10. \\<And>b p' ba p2 pq.\n        \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                  x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                  b)\n                 \\<in> bool_rel;\n         \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                        x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n         \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n         (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n         \\<in> bool_rel;\n         \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n         \\<not> \\<not> ba;\n         (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n        \\<Longrightarrow> (map (\\<lambda>(a, b). (a, - b))\n                            (remove1 ([x], - 1) r),\n                           - p')\n                          \\<in> sorted_poly_rel O mset_poly_rel\nA total of 14 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<notin># dom_m A \\<and>\n    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r \\<Longrightarrow>\n    x' \\<notin> \\<V>'", "using assms(1,3,4,5)"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (i, i') \\<in> nat_rel\n  (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\n  (x, x') \\<in> var_rel\n\ngoal (1 subgoal):\n 1. i \\<notin># dom_m A \\<and>\n    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r \\<Longrightarrow>\n    x' \\<notin> \\<V>'", "by (auto simp: var_rel_set_rel_iff)"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>b.\n       (i \\<notin># dom_m A \\<and>\n        x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n        b)\n       \\<in> bool_rel \\<Longrightarrow>\n       (\\<not> (i \\<notin># dom_m A \\<and>\n                x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r)) =\n       (\\<not> b)\n 2. \\<And>b c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> (i \\<notin># dom_m A \\<and>\n                x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> b; c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 3. \\<And>b.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, r' + Var x') \\<in> ?R'14 b\n 4. \\<And>b p'.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>\\<rbrakk>\n       \\<Longrightarrow> vars p' \\<subseteq> \\<V>'\n 5. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> vars_llist (remove1 ([x], - 1) r)\n                                 \\<subseteq> \\<V>) =\n                         (\\<not> ba)\n 6. \\<And>b p' ba c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> ba; c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 7. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 8. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 9. \\<And>b p' ba p2 pq.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba;\n        (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (map (\\<lambda>(a, b). (a, - b))\n                           (remove1 ([x], - 1) r),\n                          - p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 10. \\<And>b p' ba p2 pq q p.\n        \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                  x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                  b)\n                 \\<in> bool_rel;\n         \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                        x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n         \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n         (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n         \\<in> bool_rel;\n         \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n         \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n         (q, p) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n        \\<Longrightarrow> ([], 0) \\<in> sorted_poly_rel O mset_poly_rel\nA total of 13 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (i \\<notin># dom_m A \\<and>\n     x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n     b_)\n    \\<in> bool_rel \\<Longrightarrow>\n    (\\<not> (i \\<notin># dom_m A \\<and>\n             x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r)) =\n    (\\<not> b_)", "by auto"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>b c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> (i \\<notin># dom_m A \\<and>\n                x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> b; c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 2. \\<And>b.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, r' + Var x') \\<in> ?R'14 b\n 3. \\<And>b p'.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>\\<rbrakk>\n       \\<Longrightarrow> vars p' \\<subseteq> \\<V>'\n 4. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> vars_llist (remove1 ([x], - 1) r)\n                                 \\<subseteq> \\<V>) =\n                         (\\<not> ba)\n 5. \\<And>b p' ba c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> ba; c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 6. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 7. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 8. \\<And>b p' ba p2 pq.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba;\n        (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (map (\\<lambda>(a, b). (a, - b))\n                           (remove1 ([x], - 1) r),\n                          - p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 9. \\<And>b p' ba p2 pq q p.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> ([], 0) \\<in> sorted_poly_rel O mset_poly_rel\n 10. \\<And>b p' ba p2 pq q p eqa eqaa.\n        \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                  x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                  b)\n                 \\<in> bool_rel;\n         \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                        x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n         \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n         (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n         \\<in> bool_rel;\n         \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n         \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n         (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n         (eqa, eqaa) \\<in> bool_rel\\<rbrakk>\n        \\<Longrightarrow> eqa = eqaa\nA total of 12 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> (i \\<notin># dom_m A \\<and>\n             x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> b_; c_ \\<in> {uu_. True}\\<rbrakk>\n    \\<Longrightarrow> (error_msg i c_, False)\n                      \\<in> {(st, b).\n                             (\\<not> is_cfailed st) = b \\<and>\n                             (is_cfound st \\<longrightarrow> spec = r)}", "by auto"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, r' + Var x') \\<in> ?R'14 b\n 2. \\<And>b p'.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>\\<rbrakk>\n       \\<Longrightarrow> vars p' \\<subseteq> \\<V>'\n 3. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> vars_llist (remove1 ([x], - 1) r)\n                                 \\<subseteq> \\<V>) =\n                         (\\<not> ba)\n 4. \\<And>b p' ba c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> ba; c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 5. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 6. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 7. \\<And>b p' ba p2 pq.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba;\n        (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (map (\\<lambda>(a, b). (a, - b))\n                           (remove1 ([x], - 1) r),\n                          - p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 8. \\<And>b p' ba p2 pq q p.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> ([], 0) \\<in> sorted_poly_rel O mset_poly_rel\n 9. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> eqa = eqaa\n 10. \\<And>b p' ba p2 pq q p eqa eqaa.\n        \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                  x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                  b)\n                 \\<in> bool_rel;\n         \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                        x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n         \\<not> \\<not> b; (remove1 ([x], - 1) r, p') \\<in> ?R'14 b;\n         (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n         \\<in> bool_rel;\n         \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n         \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n         (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n         (eqa, eqaa) \\<in> bool_rel; eqa; eqaa\\<rbrakk>\n        \\<Longrightarrow> (CSUCCESS, True)\n                          \\<in> {(st, b).\n                                 (\\<not> is_cfailed st) = b \\<and>\n                                 (is_cfound st \\<longrightarrow> spec = r)}\nA total of 11 subgoals...", "apply (subst \\<open>x' = \\<phi> x\\<close>, rule remove1_sorted_poly_rel_mset_poly_rel_minus)"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b\\<rbrakk>\n       \\<Longrightarrow> (r, r') \\<in> sorted_poly_rel O mset_poly_rel\n 2. \\<And>b.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b\\<rbrakk>\n       \\<Longrightarrow> ([x], - 1) \\<in> set r\n 3. \\<And>b p'.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>\\<rbrakk>\n       \\<Longrightarrow> vars p' \\<subseteq> \\<V>'\n 4. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> vars_llist (remove1 ([x], - 1) r)\n                                 \\<subseteq> \\<V>) =\n                         (\\<not> ba)\n 5. \\<And>b p' ba c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> ba; c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 6. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 7. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 8. \\<And>b p' ba p2 pq.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba;\n        (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (map (\\<lambda>(a, b). (a, - b))\n                           (remove1 ([x], - 1) r),\n                          - p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 9. \\<And>b p' ba p2 pq q p.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> ([], 0) \\<in> sorted_poly_rel O mset_poly_rel\n 10. \\<And>b p' ba p2 pq q p eqa eqaa.\n        \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                  x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                  b)\n                 \\<in> bool_rel;\n         \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                        x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n         \\<not> \\<not> b;\n         (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n         (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n         \\<in> bool_rel;\n         \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n         \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n         (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n         (eqa, eqaa) \\<in> bool_rel\\<rbrakk>\n        \\<Longrightarrow> eqa = eqaa\nA total of 12 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_\\<rbrakk>\n    \\<Longrightarrow> (r, r') \\<in> sorted_poly_rel O mset_poly_rel", "using assms"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (r, r') \\<in> sorted_poly_rel O mset_poly_rel\n  (i, i') \\<in> nat_rel\n  (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\n  (x, x') \\<in> var_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_\\<rbrakk>\n    \\<Longrightarrow> (r, r') \\<in> sorted_poly_rel O mset_poly_rel", "by auto"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b\\<rbrakk>\n       \\<Longrightarrow> ([x], - 1) \\<in> set r\n 2. \\<And>b p'.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>\\<rbrakk>\n       \\<Longrightarrow> vars p' \\<subseteq> \\<V>'\n 3. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> vars_llist (remove1 ([x], - 1) r)\n                                 \\<subseteq> \\<V>) =\n                         (\\<not> ba)\n 4. \\<And>b p' ba c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> ba; c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 5. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 6. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 7. \\<And>b p' ba p2 pq.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba;\n        (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (map (\\<lambda>(a, b). (a, - b))\n                           (remove1 ([x], - 1) r),\n                          - p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 8. \\<And>b p' ba p2 pq q p.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> ([], 0) \\<in> sorted_poly_rel O mset_poly_rel\n 9. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> eqa = eqaa\n 10. \\<And>b p' ba p2 pq q p eqa eqaa.\n        \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                  x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                  b)\n                 \\<in> bool_rel;\n         \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                        x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n         \\<not> \\<not> b;\n         (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n         (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n         \\<in> bool_rel;\n         \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n         \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n         (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n         (eqa, eqaa) \\<in> bool_rel; eqa; eqaa\\<rbrakk>\n        \\<Longrightarrow> (CSUCCESS, True)\n                          \\<in> {(st, b).\n                                 (\\<not> is_cfailed st) = b \\<and>\n                                 (is_cfound st \\<longrightarrow> spec = r)}\nA total of 11 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_\\<rbrakk>\n    \\<Longrightarrow> ([x], - 1) \\<in> set r", "using assms"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (r, r') \\<in> sorted_poly_rel O mset_poly_rel\n  (i, i') \\<in> nat_rel\n  (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\n  (x, x') \\<in> var_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_\\<rbrakk>\n    \\<Longrightarrow> ([x], - 1) \\<in> set r", "by auto"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>b p'.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>\\<rbrakk>\n       \\<Longrightarrow> vars p' \\<subseteq> \\<V>'\n 2. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> vars_llist (remove1 ([x], - 1) r)\n                                 \\<subseteq> \\<V>) =\n                         (\\<not> ba)\n 3. \\<And>b p' ba c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> ba; c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 4. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 5. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 6. \\<And>b p' ba p2 pq.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba;\n        (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (map (\\<lambda>(a, b). (a, - b))\n                           (remove1 ([x], - 1) r),\n                          - p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 7. \\<And>b p' ba p2 pq q p.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> ([], 0) \\<in> sorted_poly_rel O mset_poly_rel\n 8. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> eqa = eqaa\n 9. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel; eqa; eqaa\\<rbrakk>\n       \\<Longrightarrow> (CSUCCESS, True)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 10. \\<And>b p' ba p2 pq q p eqa eqaa c.\n        \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                  x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                  b)\n                 \\<in> bool_rel;\n         \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                        x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n         \\<not> \\<not> b;\n         (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n         (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n         \\<in> bool_rel;\n         \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n         \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n         (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n         (eqa, eqaa) \\<in> bool_rel; \\<not> eqa; \\<not> eqaa;\n         c \\<in> {uu_. True}\\<rbrakk>\n        \\<Longrightarrow> (error_msg i c, False)\n                          \\<in> {(st, b).\n                                 (\\<not> is_cfailed st) = b \\<and>\n                                 (is_cfound st \\<longrightarrow> spec = r)}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_;\n     (remove1 ([x], - 1) r, p'_) \\<in> sorted_poly_rel O mset_poly_rel;\n     vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> vars p'_ \\<subseteq> \\<V>'", "using sorted_poly_rel_vars_llist[of \\<open>r\\<close> \\<open>r'\\<close>] assms"], ["proof (prove)\nusing this:\n  (r, r') \\<in> sorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n  vars r' \\<subseteq> \\<phi> ` vars_llist r\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (r, r') \\<in> sorted_poly_rel O mset_poly_rel\n  (i, i') \\<in> nat_rel\n  (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\n  (x, x') \\<in> var_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_;\n     (remove1 ([x], - 1) r, p'_) \\<in> sorted_poly_rel O mset_poly_rel;\n     vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> vars p'_ \\<subseteq> \\<V>'", "by (force simp: set_rel_def var_rel_def br_def\n          dest!: sorted_poly_rel_vars_llist)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> vars_llist (remove1 ([x], - 1) r)\n                                 \\<subseteq> \\<V>) =\n                         (\\<not> ba)\n 2. \\<And>b p' ba c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> ba; c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 3. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 4. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 5. \\<And>b p' ba p2 pq.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba;\n        (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (map (\\<lambda>(a, b). (a, - b))\n                           (remove1 ([x], - 1) r),\n                          - p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 6. \\<And>b p' ba p2 pq q p.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> ([], 0) \\<in> sorted_poly_rel O mset_poly_rel\n 7. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> eqa = eqaa\n 8. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel; eqa; eqaa\\<rbrakk>\n       \\<Longrightarrow> (CSUCCESS, True)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 9. \\<And>b p' ba p2 pq q p eqa eqaa c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel; \\<not> eqa; \\<not> eqaa;\n        c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_;\n     (remove1 ([x], - 1) r, p'_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba_)\n     \\<in> bool_rel\\<rbrakk>\n    \\<Longrightarrow> (\\<not> vars_llist (remove1 ([x], - 1) r)\n                              \\<subseteq> \\<V>) =\n                      (\\<not> ba_)", "by auto"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>b p' ba c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> ba; c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 2. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 3. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 4. \\<And>b p' ba p2 pq.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba;\n        (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (map (\\<lambda>(a, b). (a, - b))\n                           (remove1 ([x], - 1) r),\n                          - p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 5. \\<And>b p' ba p2 pq q p.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> ([], 0) \\<in> sorted_poly_rel O mset_poly_rel\n 6. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> eqa = eqaa\n 7. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel; eqa; eqaa\\<rbrakk>\n       \\<Longrightarrow> (CSUCCESS, True)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 8. \\<And>b p' ba p2 pq q p eqa eqaa c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel; \\<not> eqa; \\<not> eqaa;\n        c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_;\n     (remove1 ([x], - 1) r, p'_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba_)\n     \\<in> bool_rel;\n     \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>; \\<not> ba_;\n     c_ \\<in> {uu_. True}\\<rbrakk>\n    \\<Longrightarrow> (error_msg i c_, False)\n                      \\<in> {(st, b).\n                             (\\<not> is_cfailed st) = b \\<and>\n                             (is_cfound st \\<longrightarrow> spec = r)}", "by auto"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 2. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 3. \\<And>b p' ba p2 pq.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba;\n        (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (map (\\<lambda>(a, b). (a, - b))\n                           (remove1 ([x], - 1) r),\n                          - p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 4. \\<And>b p' ba p2 pq q p.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> ([], 0) \\<in> sorted_poly_rel O mset_poly_rel\n 5. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> eqa = eqaa\n 6. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel; eqa; eqaa\\<rbrakk>\n       \\<Longrightarrow> (CSUCCESS, True)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 7. \\<And>b p' ba p2 pq q p eqa eqaa c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel; \\<not> eqa; \\<not> eqaa;\n        c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_;\n     (remove1 ([x], - 1) r, p'_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba_)\n     \\<in> bool_rel;\n     \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n     \\<not> \\<not> ba_\\<rbrakk>\n    \\<Longrightarrow> (remove1 ([x], - 1) r, p'_)\n                      \\<in> sorted_poly_rel O mset_poly_rel", "using assms"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (r, r') \\<in> sorted_poly_rel O mset_poly_rel\n  (i, i') \\<in> nat_rel\n  (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\n  (x, x') \\<in> var_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_;\n     (remove1 ([x], - 1) r, p'_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba_)\n     \\<in> bool_rel;\n     \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n     \\<not> \\<not> ba_\\<rbrakk>\n    \\<Longrightarrow> (remove1 ([x], - 1) r, p'_)\n                      \\<in> sorted_poly_rel O mset_poly_rel", "by auto"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>b p' ba.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 2. \\<And>b p' ba p2 pq.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba;\n        (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (map (\\<lambda>(a, b). (a, - b))\n                           (remove1 ([x], - 1) r),\n                          - p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 3. \\<And>b p' ba p2 pq q p.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> ([], 0) \\<in> sorted_poly_rel O mset_poly_rel\n 4. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> eqa = eqaa\n 5. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel; eqa; eqaa\\<rbrakk>\n       \\<Longrightarrow> (CSUCCESS, True)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 6. \\<And>b p' ba p2 pq q p eqa eqaa c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel; \\<not> eqa; \\<not> eqaa;\n        c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_;\n     (remove1 ([x], - 1) r, p'_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba_)\n     \\<in> bool_rel;\n     \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n     \\<not> \\<not> ba_\\<rbrakk>\n    \\<Longrightarrow> (remove1 ([x], - 1) r, p'_)\n                      \\<in> sorted_poly_rel O mset_poly_rel", "using assms"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (r, r') \\<in> sorted_poly_rel O mset_poly_rel\n  (i, i') \\<in> nat_rel\n  (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\n  (x, x') \\<in> var_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_;\n     (remove1 ([x], - 1) r, p'_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba_)\n     \\<in> bool_rel;\n     \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n     \\<not> \\<not> ba_\\<rbrakk>\n    \\<Longrightarrow> (remove1 ([x], - 1) r, p'_)\n                      \\<in> sorted_poly_rel O mset_poly_rel", "by auto"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>b p' ba p2 pq.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba;\n        (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (map (\\<lambda>(a, b). (a, - b))\n                           (remove1 ([x], - 1) r),\n                          - p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 2. \\<And>b p' ba p2 pq q p.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> ([], 0) \\<in> sorted_poly_rel O mset_poly_rel\n 3. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> eqa = eqaa\n 4. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel; eqa; eqaa\\<rbrakk>\n       \\<Longrightarrow> (CSUCCESS, True)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 5. \\<And>b p' ba p2 pq q p eqa eqaa c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel; \\<not> eqa; \\<not> eqaa;\n        c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}", "apply (rule uminus)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>b p' ba p2 pq.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba;\n        (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (remove1 ([x], - 1) r, p')\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 2. \\<And>b p' ba p2 pq q p.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> ([], 0) \\<in> sorted_poly_rel O mset_poly_rel\n 3. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> eqa = eqaa\n 4. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel; eqa; eqaa\\<rbrakk>\n       \\<Longrightarrow> (CSUCCESS, True)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 5. \\<And>b p' ba p2 pq q p eqa eqaa c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel; \\<not> eqa; \\<not> eqaa;\n        c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_;\n     (remove1 ([x], - 1) r, p'_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba_)\n     \\<in> bool_rel;\n     \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n     \\<not> \\<not> ba_;\n     (p2_, pq_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (remove1 ([x], - 1) r, p'_)\n                      \\<in> sorted_poly_rel O mset_poly_rel", "using assms"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (r, r') \\<in> sorted_poly_rel O mset_poly_rel\n  (i, i') \\<in> nat_rel\n  (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\n  (x, x') \\<in> var_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_;\n     (remove1 ([x], - 1) r, p'_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba_)\n     \\<in> bool_rel;\n     \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n     \\<not> \\<not> ba_;\n     (p2_, pq_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (remove1 ([x], - 1) r, p'_)\n                      \\<in> sorted_poly_rel O mset_poly_rel", "by auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>b p' ba p2 pq q p.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> ([], 0) \\<in> sorted_poly_rel O mset_poly_rel\n 2. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> eqa = eqaa\n 3. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel; eqa; eqaa\\<rbrakk>\n       \\<Longrightarrow> (CSUCCESS, True)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 4. \\<And>b p' ba p2 pq q p eqa eqaa c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel; \\<not> eqa; \\<not> eqaa;\n        c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_;\n     (remove1 ([x], - 1) r, p'_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba_)\n     \\<in> bool_rel;\n     \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n     \\<not> \\<not> ba_; (p2_, pq_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (q_, p_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> ([], 0) \\<in> sorted_poly_rel O mset_poly_rel", "using assms"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (r, r') \\<in> sorted_poly_rel O mset_poly_rel\n  (i, i') \\<in> nat_rel\n  (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\n  (x, x') \\<in> var_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_;\n     (remove1 ([x], - 1) r, p'_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba_)\n     \\<in> bool_rel;\n     \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n     \\<not> \\<not> ba_; (p2_, pq_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (q_, p_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> ([], 0) \\<in> sorted_poly_rel O mset_poly_rel", "by auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> eqa = eqaa\n 2. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel; eqa; eqaa\\<rbrakk>\n       \\<Longrightarrow> (CSUCCESS, True)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 3. \\<And>b p' ba p2 pq q p eqa eqaa c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel; \\<not> eqa; \\<not> eqaa;\n        c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_;\n     (remove1 ([x], - 1) r, p'_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba_)\n     \\<in> bool_rel;\n     \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n     \\<not> \\<not> ba_; (p2_, pq_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (q_, p_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (eqa_, eqaa_) \\<in> bool_rel\\<rbrakk>\n    \\<Longrightarrow> eqa_ = eqaa_", "using assms"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (r, r') \\<in> sorted_poly_rel O mset_poly_rel\n  (i, i') \\<in> nat_rel\n  (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\n  (x, x') \\<in> var_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_;\n     (remove1 ([x], - 1) r, p'_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba_)\n     \\<in> bool_rel;\n     \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n     \\<not> \\<not> ba_; (p2_, pq_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (q_, p_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (eqa_, eqaa_) \\<in> bool_rel\\<rbrakk>\n    \\<Longrightarrow> eqa_ = eqaa_", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b p' ba p2 pq q p eqa eqaa.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel; eqa; eqaa\\<rbrakk>\n       \\<Longrightarrow> (CSUCCESS, True)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}\n 2. \\<And>b p' ba p2 pq q p eqa eqaa c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel; \\<not> eqa; \\<not> eqaa;\n        c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_;\n     (remove1 ([x], - 1) r, p'_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba_)\n     \\<in> bool_rel;\n     \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n     \\<not> \\<not> ba_; (p2_, pq_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (q_, p_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (eqa_, eqaa_) \\<in> bool_rel; eqa_; eqaa_\\<rbrakk>\n    \\<Longrightarrow> (CSUCCESS, True)\n                      \\<in> {(st, b).\n                             (\\<not> is_cfailed st) = b \\<and>\n                             (is_cfound st \\<longrightarrow> spec = r)}", "using assms"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (r, r') \\<in> sorted_poly_rel O mset_poly_rel\n  (i, i') \\<in> nat_rel\n  (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\n  (x, x') \\<in> var_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_;\n     (remove1 ([x], - 1) r, p'_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba_)\n     \\<in> bool_rel;\n     \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n     \\<not> \\<not> ba_; (p2_, pq_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (q_, p_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (eqa_, eqaa_) \\<in> bool_rel; eqa_; eqaa_\\<rbrakk>\n    \\<Longrightarrow> (CSUCCESS, True)\n                      \\<in> {(st, b).\n                             (\\<not> is_cfailed st) = b \\<and>\n                             (is_cfound st \\<longrightarrow> spec = r)}", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b p' ba p2 pq q p eqa eqaa c.\n       \\<lbrakk>(i \\<notin># dom_m A \\<and>\n                 x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n                 b)\n                \\<in> bool_rel;\n        \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                       x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n        \\<not> \\<not> b;\n        (remove1 ([x], - 1) r, p') \\<in> sorted_poly_rel O mset_poly_rel;\n        (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba)\n        \\<in> bool_rel;\n        \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n        \\<not> \\<not> ba; (p2, pq) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, p) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa) \\<in> bool_rel; \\<not> eqa; \\<not> eqaa;\n        c \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> (error_msg i c, False)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow> spec = r)}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_;\n     (remove1 ([x], - 1) r, p'_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba_)\n     \\<in> bool_rel;\n     \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n     \\<not> \\<not> ba_; (p2_, pq_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (q_, p_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (eqa_, eqaa_) \\<in> bool_rel; \\<not> eqa_; \\<not> eqaa_;\n     c_ \\<in> {uu_. True}\\<rbrakk>\n    \\<Longrightarrow> (error_msg i c_, False)\n                      \\<in> {(st, b).\n                             (\\<not> is_cfailed st) = b \\<and>\n                             (is_cfound st \\<longrightarrow> spec = r)}", "using assms"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (r, r') \\<in> sorted_poly_rel O mset_poly_rel\n  (i, i') \\<in> nat_rel\n  (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\n  (x, x') \\<in> var_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i \\<notin># dom_m A \\<and>\n              x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r,\n              b_)\n             \\<in> bool_rel;\n     \\<not> \\<not> (i \\<notin># dom_m A \\<and>\n                    x \\<notin> \\<V> \\<and> ([x], - 1) \\<in> set r);\n     \\<not> \\<not> b_;\n     (remove1 ([x], - 1) r, p'_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>, ba_)\n     \\<in> bool_rel;\n     \\<not> \\<not> vars_llist (remove1 ([x], - 1) r) \\<subseteq> \\<V>;\n     \\<not> \\<not> ba_; (p2_, pq_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (q_, p_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (eqa_, eqaa_) \\<in> bool_rel; \\<not> eqa_; \\<not> eqaa_;\n     c_ \\<in> {uu_. True}\\<rbrakk>\n    \\<Longrightarrow> (error_msg i c_, False)\n                      \\<in> {(st, b).\n                             (\\<not> is_cfailed st) = b \\<and>\n                             (is_cfound st \\<longrightarrow> spec = r)}", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  check_extension_l spec A \\<V> i x r\n  \\<le> \\<Down>\n         {(st, b).\n          (\\<not> is_cfailed st) = b \\<and>\n          (is_cfound st \\<longrightarrow> spec = r)}\n         (check_extension B \\<V>' i' x' r')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma full_normalize_poly_diff_ideal:\n  fixes dom\n  assumes \\<open>(p, p') \\<in> fully_unsorted_poly_rel O mset_poly_rel\\<close>\n  shows\n    \\<open>full_normalize_poly p\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel)\n       (normalize_poly_spec p')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. full_normalize_poly p\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (normalize_poly_spec p')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. full_normalize_poly p\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (normalize_poly_spec p')", "obtain q where\n    pq: \\<open>(p, q) \\<in> fully_unsorted_poly_rel\\<close>  and qp':\\<open>(q, p') \\<in> mset_poly_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>(p, q) \\<in> fully_unsorted_poly_rel;\n         (q, p') \\<in> mset_poly_rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  (p, p') \\<in> fully_unsorted_poly_rel O mset_poly_rel\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>(p, q) \\<in> fully_unsorted_poly_rel;\n         (q, p') \\<in> mset_poly_rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (p, q) \\<in> fully_unsorted_poly_rel\n  (q, p') \\<in> mset_poly_rel\n\ngoal (1 subgoal):\n 1. full_normalize_poly p\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (normalize_poly_spec p')", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. full_normalize_poly p\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (normalize_poly_spec p')", "unfolding normalize_poly_spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. full_normalize_poly p\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel)\n           (SPEC\n             (\\<lambda>r.\n                 p' - r \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars p'))", "apply (rule full_normalize_poly_normalize_poly_p[THEN order_trans])"], ["proof (prove)\ngoal (2 subgoals):\n 1. (p, ?p'1) \\<in> fully_unsorted_poly_rel\n 2. \\<Down> sorted_poly_rel (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* ?p'1))\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel)\n           (SPEC\n             (\\<lambda>r.\n                 p' - r \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars p'))", "apply (rule pq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Down> sorted_poly_rel (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* q))\n    \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel)\n           (SPEC\n             (\\<lambda>r.\n                 p' - r \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars p'))", "unfolding conc_fun_chain[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Down> sorted_poly_rel (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* q))\n    \\<le> \\<Down> sorted_poly_rel\n           (\\<Down> mset_poly_rel\n             (SPEC\n               (\\<lambda>r.\n                   p' - r \\<in> More_Modules.ideal polynomial_bool \\<and>\n                   vars r \\<subseteq> vars p')))", "by (rule ref_two_step', rule RES_refine)\n       (use qp' in \\<open>auto dest!: rtranclp_normalize_poly_p_poly_of_mset\n            simp: mset_poly_rel_def ideal.span_zero\\<close>)"], ["proof (state)\nthis:\n  full_normalize_poly p\n  \\<le> \\<Down> (sorted_poly_rel O mset_poly_rel) (normalize_poly_spec p')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma insort_key_rel_decomp:\n   \\<open>\\<exists>ys zs. xs = ys @ zs \\<and> insort_key_rel R x xs = ys @ x # zs\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys zs. xs = ys @ zs \\<and> insort_key_rel R x xs = ys @ x # zs", "apply (induction xs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>ys zs. [] = ys @ zs \\<and> insort_key_rel R x [] = ys @ x # zs\n 2. \\<And>a xs.\n       \\<exists>ys zs.\n          xs = ys @ zs \\<and>\n          insort_key_rel R x xs = ys @ x # zs \\<Longrightarrow>\n       \\<exists>ys zs.\n          a # xs = ys @ zs \\<and> insort_key_rel R x (a # xs) = ys @ x # zs", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys zs. [] = ys @ zs \\<and> insort_key_rel R x [] = ys @ x # zs", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<exists>ys zs.\n          xs = ys @ zs \\<and>\n          insort_key_rel R x xs = ys @ x # zs \\<Longrightarrow>\n       \\<exists>ys zs.\n          a # xs = ys @ zs \\<and> insort_key_rel R x (a # xs) = ys @ x # zs", "subgoal for a xs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys zs.\n       xs = ys @ zs \\<and>\n       insort_key_rel R x xs = ys @ x # zs \\<Longrightarrow>\n    \\<exists>ys zs.\n       a # xs = ys @ zs \\<and> insort_key_rel R x (a # xs) = ys @ x # zs", "by (force intro: exI[of _ \\<open>a # _\\<close>])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma list_rel_append_same_length:\n   \\<open>length xs = length xs' \\<Longrightarrow> (xs @ ys, xs' @ ys') \\<in> \\<langle>R\\<rangle>list_rel \\<longleftrightarrow> (xs, xs') \\<in> \\<langle>R\\<rangle>list_rel \\<and> (ys, ys') \\<in> \\<langle>R\\<rangle>list_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. length xs = length xs' \\<Longrightarrow>\n    ((xs @ ys, xs' @ ys') \\<in> \\<langle>R\\<rangle>list_rel) =\n    ((xs, xs') \\<in> \\<langle>R\\<rangle>list_rel \\<and>\n     (ys, ys') \\<in> \\<langle>R\\<rangle>list_rel)", "by (auto simp: list_rel_def list_all2_append2 dest: list_all2_lengthD)"], ["", "lemma term_poly_list_rel_list_relD: \\<open>(ys, cs) \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel \\<Longrightarrow>\n       cs = map (\\<lambda>(a, y). (mset a, y)) ys\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (ys, cs)\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel \\<Longrightarrow>\n    cs = map (\\<lambda>(a, y). (mset a, y)) ys", "by (induction ys arbitrary: cs)\n   (auto simp: term_poly_list_rel_def list_rel_def list_all2_append list_all2_Cons1 list_all2_Cons2)"], ["", "lemma term_poly_list_rel_single: \\<open>([x32], {#x32#}) \\<in> term_poly_list_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([x32], {#x32#}) \\<in> term_poly_list_rel", "by (auto simp: term_poly_list_rel_def)"], ["", "lemma unsorted_poly_rel_list_rel_list_rel_uminus:\n   \\<open>(map (\\<lambda>(a, b). (a, - b)) r, yc)\n       \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel \\<Longrightarrow>\n       (r, map (\\<lambda>(a, b). (a, - b)) yc)\n       \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (map (\\<lambda>(a, b). (a, - b)) r, yc)\n    \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel \\<Longrightarrow>\n    (r, map (\\<lambda>(a, b). (a, - b)) yc)\n    \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel", "by (induction r arbitrary: yc)\n   (auto simp: elim!: list_relE3)"], ["", "lemma mset_poly_rel_minus: \\<open>({#(a, b)#}, v') \\<in> mset_poly_rel \\<Longrightarrow>\n       (mset yc, r') \\<in> mset_poly_rel \\<Longrightarrow>\n       (r, yc)\n       \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel \\<Longrightarrow>\n       (add_mset (a, b) (mset yc),\n        v' + r')\n       \\<in> mset_poly_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>({#(a, b)#}, v') \\<in> mset_poly_rel;\n     (mset yc, r') \\<in> mset_poly_rel;\n     (r, yc)\n     \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                    int_rel\\<rangle>list_rel\\<rbrakk>\n    \\<Longrightarrow> (add_mset (a, b) (mset yc), v' + r')\n                      \\<in> mset_poly_rel", "by (induction r arbitrary: r')\n    (auto simp: mset_poly_rel_def polynomial_of_mset_uminus)"], ["", "lemma fully_unsorted_poly_rel_diff:\n   \\<open>([v], v') \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n   (r, r') \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n    (v # r,\n     v' + r')\n    \\<in> fully_unsorted_poly_rel O mset_poly_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>([v], v') \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     (r, r') \\<in> fully_unsorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (v # r, v' + r')\n                      \\<in> fully_unsorted_poly_rel O mset_poly_rel", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y ya.\n       \\<lbrakk>([v], y) \\<in> fully_unsorted_poly_rel;\n        (y, v') \\<in> mset_poly_rel; (r, ya) \\<in> fully_unsorted_poly_rel;\n        (ya, r') \\<in> mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (v # r, v' + r')\n                         \\<in> fully_unsorted_poly_rel O mset_poly_rel", "apply (rule_tac b = \\<open>y + ya\\<close> in relcompI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y ya.\n       \\<lbrakk>([v], y) \\<in> fully_unsorted_poly_rel;\n        (y, v') \\<in> mset_poly_rel; (r, ya) \\<in> fully_unsorted_poly_rel;\n        (ya, r') \\<in> mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (v # r, y + ya) \\<in> fully_unsorted_poly_rel\n 2. \\<And>y ya.\n       \\<lbrakk>([v], y) \\<in> fully_unsorted_poly_rel;\n        (y, v') \\<in> mset_poly_rel; (r, ya) \\<in> fully_unsorted_poly_rel;\n        (ya, r') \\<in> mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (y + ya, v' + r') \\<in> mset_poly_rel", "apply (auto simp: fully_unsorted_poly_list_rel_def list_mset_rel_def br_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>yb yc.\n       \\<lbrakk>(mset yb, v') \\<in> mset_poly_rel;\n        (mset yc, r') \\<in> mset_poly_rel;\n        ([v], yb)\n        \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        (r, yc)\n        \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel\\<rbrakk>\n       \\<Longrightarrow> (v # r, mset yb + mset yc)\n                         \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n  int_rel\\<rangle>list_rel O\n                               {(c, a). a = mset c}\n 2. \\<And>yb yc.\n       \\<lbrakk>(mset yb, v') \\<in> mset_poly_rel;\n        (mset yc, r') \\<in> mset_poly_rel;\n        ([v], yb)\n        \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        (r, yc)\n        \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel\\<rbrakk>\n       \\<Longrightarrow> (mset yb + mset yc, v' + r') \\<in> mset_poly_rel", "apply (rule_tac b = \\<open>yb @ yc\\<close> in relcompI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>yb yc.\n       \\<lbrakk>(mset yb, v') \\<in> mset_poly_rel;\n        (mset yc, r') \\<in> mset_poly_rel;\n        ([v], yb)\n        \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        (r, yc)\n        \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel\\<rbrakk>\n       \\<Longrightarrow> (v # r, yb @ yc)\n                         \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n  int_rel\\<rangle>list_rel\n 2. \\<And>yb yc.\n       \\<lbrakk>(mset yb, v') \\<in> mset_poly_rel;\n        (mset yc, r') \\<in> mset_poly_rel;\n        ([v], yb)\n        \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        (r, yc)\n        \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel\\<rbrakk>\n       \\<Longrightarrow> (yb @ yc, mset yb + mset yc)\n                         \\<in> {(c, a). a = mset c}\n 3. \\<And>yb yc.\n       \\<lbrakk>(mset yb, v') \\<in> mset_poly_rel;\n        (mset yc, r') \\<in> mset_poly_rel;\n        ([v], yb)\n        \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        (r, yc)\n        \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel\\<rbrakk>\n       \\<Longrightarrow> (mset yb + mset yc, v' + r') \\<in> mset_poly_rel", "apply (auto elim!: list_relE3 simp: unsorted_poly_rel_list_rel_list_rel_uminus mset_poly_rel_minus)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma PAC_checker_l_step_PAC_checker_step:\n  assumes\n    \\<open>(Ast, Bst) \\<in> code_status_status_rel \\<times>\\<^sub>r \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r fmap_polys_rel\\<close> and\n    \\<open>(st, st') \\<in> pac_step_rel\\<close> and\n    spec: \\<open>(spec, spec') \\<in> sorted_poly_rel O mset_poly_rel\\<close>\n  shows\n    \\<open>PAC_checker_l_step spec Ast st \\<le> \\<Down> (code_status_status_rel \\<times>\\<^sub>r \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r fmap_polys_rel) (PAC_checker_step spec' Bst st')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. PAC_checker_l_step spec Ast st\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (PAC_checker_step spec' Bst st')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. PAC_checker_l_step spec Ast st\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (PAC_checker_step spec' Bst st')", "obtain A \\<V> cst B \\<V>' cst' where\n   Ast: \\<open>Ast = (cst, \\<V>, A)\\<close> and\n   Bst: \\<open>Bst = (cst', \\<V>', B)\\<close> and\n   \\<V>[intro]: \\<open>(\\<V>, \\<V>') \\<in>  \\<langle>var_rel\\<rangle>set_rel\\<close>  and\n   AB: \\<open>(A, B) \\<in> fmap_polys_rel\\<close>\n     \\<open>(cst, cst') \\<in> code_status_status_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>cst \\<V> A cst' \\<V>' B.\n        \\<lbrakk>Ast = (cst, \\<V>, A); Bst = (cst', \\<V>', B);\n         (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n         (A, B) \\<in> \\<langle>nat_rel,\n         sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n         (cst, cst') \\<in> code_status_status_rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(1)"], ["proof (prove)\nusing this:\n  (Ast, Bst)\n  \\<in> code_status_status_rel \\<times>\\<^sub>r\n        \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r \\<langle>nat_rel,\n        sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n\ngoal (1 subgoal):\n 1. (\\<And>cst \\<V> A cst' \\<V>' B.\n        \\<lbrakk>Ast = (cst, \\<V>, A); Bst = (cst', \\<V>', B);\n         (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel;\n         (A, B) \\<in> \\<langle>nat_rel,\n         sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n         (cst, cst') \\<in> code_status_status_rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases Ast; cases Bst; auto)"], ["proof (state)\nthis:\n  Ast = (cst, \\<V>, A)\n  Bst = (cst', \\<V>', B)\n  (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (cst, cst') \\<in> code_status_status_rel\n\ngoal (1 subgoal):\n 1. PAC_checker_l_step spec Ast st\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (PAC_checker_step spec' Bst st')", "have [refine]: \\<open>(r, ra) \\<in> sorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n       (eqa, eqaa)\n       \\<in> {(st, b). (\\<not> is_cfailed st \\<longleftrightarrow> b) \\<and> (is_cfound st \\<longrightarrow> spec = r)} \\<Longrightarrow>\n       RETURN eqa\n       \\<le> \\<Down> code_status_status_rel\n          (SPEC\n            (\\<lambda>st'. (\\<not> is_failed st' \\<and>\n                   is_found st' \\<longrightarrow>\n                    ra - spec' \\<in> More_Modules.ideal polynomial_bool)))\\<close>\n     for r ra eqa eqaa"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n     (eqa, eqaa)\n     \\<in> {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n    \\<Longrightarrow> RETURN eqa\n                      \\<le> \\<Down> code_status_status_rel\n                             (SPEC\n                               (\\<lambda>st'.\n                                   \\<not> is_failed st' \\<and>\n                                   is_found st' \\<longrightarrow>\n                                   ra - spec'\n                                   \\<in> More_Modules.ideal\n    polynomial_bool))", "using spec"], ["proof (prove)\nusing this:\n  (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n     (eqa, eqaa)\n     \\<in> {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n    \\<Longrightarrow> RETURN eqa\n                      \\<le> \\<Down> code_status_status_rel\n                             (SPEC\n                               (\\<lambda>st'.\n                                   \\<not> is_failed st' \\<and>\n                                   is_found st' \\<longrightarrow>\n                                   ra - spec'\n                                   \\<in> More_Modules.ideal\n    polynomial_bool))", "by (cases eqa)\n       (auto intro!: RETURN_RES_refine dest!: sorted_poly_list_relD\n         simp: mset_poly_rel_def ideal.span_zero)"], ["proof (state)\nthis:\n  \\<lbrakk>(?r4, ?ra4) \\<in> sorted_poly_rel O mset_poly_rel;\n   (?eqa4, ?eqaa4)\n   \\<in> {(st, b).\n          (\\<not> is_cfailed st) = b \\<and>\n          (is_cfound st \\<longrightarrow> spec = ?r4)}\\<rbrakk>\n  \\<Longrightarrow> RETURN ?eqa4\n                    \\<le> \\<Down> code_status_status_rel\n                           (SPEC\n                             (\\<lambda>st'.\n                                 \\<not> is_failed st' \\<and>\n                                 is_found st' \\<longrightarrow>\n                                 ?ra4 - spec'\n                                 \\<in> More_Modules.ideal polynomial_bool))\n\ngoal (1 subgoal):\n 1. PAC_checker_l_step spec Ast st\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (PAC_checker_step spec' Bst st')", "have [simp]: \\<open>(eqa, st'a) \\<in> code_status_status_rel \\<Longrightarrow>\n       (merge_cstatus cst eqa, merge_status cst' st'a)\n       \\<in> code_status_status_rel\\<close> for eqa st'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. (eqa, st'a) \\<in> code_status_status_rel \\<Longrightarrow>\n    (merge_cstatus cst eqa, merge_status cst' st'a)\n    \\<in> code_status_status_rel", "using AB"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (cst, cst') \\<in> code_status_status_rel\n\ngoal (1 subgoal):\n 1. (eqa, st'a) \\<in> code_status_status_rel \\<Longrightarrow>\n    (merge_cstatus cst eqa, merge_status cst' st'a)\n    \\<in> code_status_status_rel", "by (cases eqa; cases st'a)\n       (auto simp: code_status_status_rel_def)"], ["proof (state)\nthis:\n  (?eqa4, ?st'a4) \\<in> code_status_status_rel \\<Longrightarrow>\n  (merge_cstatus cst ?eqa4, merge_status cst' ?st'a4)\n  \\<in> code_status_status_rel\n\ngoal (1 subgoal):\n 1. PAC_checker_l_step spec Ast st\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (PAC_checker_step spec' Bst st')", "have [simp]: \\<open>(merge_cstatus cst CSUCCESS, cst') \\<in> code_status_status_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (merge_cstatus cst CSUCCESS, cst') \\<in> code_status_status_rel", "using AB"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (cst, cst') \\<in> code_status_status_rel\n\ngoal (1 subgoal):\n 1. (merge_cstatus cst CSUCCESS, cst') \\<in> code_status_status_rel", "by (cases st)\n      (auto simp: code_status_status_rel_def)"], ["proof (state)\nthis:\n  (merge_cstatus cst CSUCCESS, cst') \\<in> code_status_status_rel\n\ngoal (1 subgoal):\n 1. PAC_checker_l_step spec Ast st\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (PAC_checker_step spec' Bst st')", "have [simp]: \\<open>(x32, x32a) \\<in> var_rel \\<Longrightarrow>\n        ([([x32], -1::int)], -Var x32a) \\<in> fully_unsorted_poly_rel O mset_poly_rel\\<close> for x32 x32a"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x32, x32a) \\<in> var_rel \\<Longrightarrow>\n    ([([x32], - 1)], - Var x32a)\n    \\<in> fully_unsorted_poly_rel O mset_poly_rel", "by (auto simp: mset_poly_rel_def fully_unsorted_poly_list_rel_def list_mset_rel_def br_def\n         unsorted_term_poly_list_rel_def var_rel_def Const_1_eq_1\n       intro!: relcompI[of _ \\<open>{#({#x32#}, -1 :: int)#}\\<close>]\n         relcompI[of _ \\<open>[({#x32#}, -1)]\\<close>])"], ["proof (state)\nthis:\n  (?x32.4, ?x32a4) \\<in> var_rel \\<Longrightarrow>\n  ([([?x32.4], - 1)], - Var ?x32a4)\n  \\<in> fully_unsorted_poly_rel O mset_poly_rel\n\ngoal (1 subgoal):\n 1. PAC_checker_l_step spec Ast st\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (PAC_checker_step spec' Bst st')", "have H3: \\<open>p - Var a = (-Var a) + p\\<close> for p :: \\<open>int mpoly\\<close> and a"], ["proof (prove)\ngoal (1 subgoal):\n 1. p - Var a = - Var a + p", "by auto"], ["proof (state)\nthis:\n  ?p4 - Var ?a4 = - Var ?a4 + ?p4\n\ngoal (1 subgoal):\n 1. PAC_checker_l_step spec Ast st\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (PAC_checker_step spec' Bst st')", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. PAC_checker_l_step spec Ast st\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (PAC_checker_step spec' Bst st')", "using assms(2)"], ["proof (prove)\nusing this:\n  (st, st')\n  \\<in> p2rel\n         (\\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel,\n          var_rel\\<rangle>pac_step_rel_raw)\n\ngoal (1 subgoal):\n 1. PAC_checker_l_step spec Ast st\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (PAC_checker_step spec' Bst st')", "unfolding PAC_checker_l_step_def PAC_checker_step_def Ast Bst prod.case"], ["proof (prove)\nusing this:\n  (st, st')\n  \\<in> p2rel\n         (\\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel,\n          var_rel\\<rangle>pac_step_rel_raw)\n\ngoal (1 subgoal):\n 1. (case st of\n     Add x xa xb xc \\<Rightarrow>\n       full_normalize_poly (pac_res st) \\<bind>\n       (\\<lambda>r.\n           check_addition_l spec A \\<V> (pac_src1 st) (pac_src2 st)\n            (new_id st) r \\<bind>\n           (\\<lambda>eq.\n               let _ = eq\n               in if \\<not> is_cfailed eq\n                  then RETURN\n                        (merge_cstatus cst eq, \\<V>, fmupd (new_id st) r A)\n                  else RETURN (eq, \\<V>, A)))\n     | Mult x xa xb xc \\<Rightarrow>\n         full_normalize_poly (pac_res st) \\<bind>\n         (\\<lambda>r.\n             full_normalize_poly (pac_mult st) \\<bind>\n             (\\<lambda>q.\n                 check_mult_l spec A \\<V> (pac_src1 st) q (new_id st)\n                  r \\<bind>\n                 (\\<lambda>eq.\n                     let _ = eq\n                     in if \\<not> is_cfailed eq\n                        then RETURN\n                              (merge_cstatus cst eq, \\<V>,\n                               fmupd (new_id st) r A)\n                        else RETURN (eq, \\<V>, A))))\n     | Extension x xa xb \\<Rightarrow>\n         full_normalize_poly (([new_var st], - 1) # pac_res st) \\<bind>\n         (\\<lambda>r.\n             check_extension_l spec A \\<V> (new_id st) (new_var st)\n              r \\<bind>\n             (\\<lambda>eq.\n                 if \\<not> is_cfailed eq\n                 then RETURN\n                       (cst, insert (new_var st) \\<V>,\n                        fmupd (new_id st) r A)\n                 else RETURN (eq, \\<V>, A)))\n     | Del x \\<Rightarrow>\n         check_del_l spec A (pac_src1 st) \\<bind>\n         (\\<lambda>eq.\n             let _ = eq\n             in if \\<not> is_cfailed eq\n                then RETURN\n                      (merge_cstatus cst eq, \\<V>, fmdrop (pac_src1 st) A)\n                else RETURN (eq, \\<V>, A)))\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (case st' of\n            Add x xa xb xc \\<Rightarrow>\n              normalize_poly_spec (pac_res st') \\<bind>\n              (\\<lambda>r.\n                  check_add B \\<V>' (pac_src1 st') (pac_src2 st')\n                   (new_id st') r \\<bind>\n                  (\\<lambda>eq.\n                      SPEC\n                       (\\<lambda>st'.\n                           \\<not> is_failed st' \\<and>\n                           is_found st' \\<longrightarrow>\n                           r - spec'\n                           \\<in> More_Modules.ideal polynomial_bool) \\<bind>\n                      (\\<lambda>st'a.\n                          if eq\n                          then RETURN\n                                (merge_status cst' st'a, \\<V>',\n                                 fmupd (new_id st') r B)\n                          else RETURN (FAILED, \\<V>', B))))\n            | Mult x xa xb xc \\<Rightarrow>\n                normalize_poly_spec (pac_res st') \\<bind>\n                (\\<lambda>r.\n                    normalize_poly_spec (pac_mult st') \\<bind>\n                    (\\<lambda>q.\n                        check_mult B \\<V>' (pac_src1 st') q (new_id st')\n                         r \\<bind>\n                        (\\<lambda>eq.\n                            SPEC\n                             (\\<lambda>st'.\n                                 \\<not> is_failed st' \\<and>\n                                 is_found st' \\<longrightarrow>\n                                 r - spec'\n                                 \\<in> More_Modules.ideal\n  polynomial_bool) \\<bind>\n                            (\\<lambda>st'a.\n                                if eq\n                                then RETURN\n(merge_status cst' st'a, \\<V>', fmupd (new_id st') r B)\n                                else RETURN (FAILED, \\<V>', B)))))\n            | Extension x xa xb \\<Rightarrow>\n                normalize_poly_spec\n                 (pac_res st' - Var (new_var st')) \\<bind>\n                (\\<lambda>r.\n                    check_extension B \\<V>' (new_id st') (new_var st')\n                     r \\<bind>\n                    (\\<lambda>eq.\n                        if eq\n                        then RETURN\n                              (cst', insert (new_var st') \\<V>',\n                               fmupd (new_id st') r B)\n                        else RETURN (FAILED, \\<V>', B)))\n            | Del x \\<Rightarrow>\n                check_del B (pac_src1 st') \\<bind>\n                (\\<lambda>eq.\n                    if eq then RETURN (cst', \\<V>', fmdrop (pac_src1 st') B)\n                    else RETURN (FAILED, \\<V>', B)))", "apply (cases st; cases st'; simp only: p2rel_def pac_step.case\n      pac_step_rel_raw_def mem_Collect_eq prod.case pac_step_rel_raw.simps)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x11 x12 x13 x14 x11a x12a x13a x14a.\n       \\<lbrakk>(x11, x11a) \\<in> nat_rel \\<and>\n                (x12, x12a) \\<in> nat_rel \\<and>\n                (x13, x13a) \\<in> nat_rel \\<and>\n                (x14, x14a) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11 x12 x13 x14; True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a x12a x13a x14a;\n        True \\<and> True \\<and> True \\<and> True\\<rbrakk>\n       \\<Longrightarrow> full_normalize_poly\n                          (pac_res (Add x11 x12 x13 x14)) \\<bind>\n                         (\\<lambda>r.\n                             check_addition_l spec A \\<V>\n                              (pac_src1 (Add x11 x12 x13 x14))\n                              (pac_src2 (Add x11 x12 x13 x14))\n                              (new_id (Add x11 x12 x13 x14)) r \\<bind>\n                             (\\<lambda>eq.\n                                 let _ = eq\n                                 in if \\<not> is_cfailed eq\n                                    then RETURN\n    (merge_cstatus cst eq, \\<V>, fmupd (new_id (Add x11 x12 x13 x14)) r A)\n                                    else RETURN (eq, \\<V>, A)))\n                         \\<le> \\<Down>\n                                (code_status_status_rel \\<times>\\<^sub>r\n                                 \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                 \\<langle>nat_rel,\n                                 sorted_poly_rel O\n                                 mset_poly_rel\\<rangle>fmap_rel)\n                                (normalize_poly_spec\n                                  (pac_res\n                                    (Add x11a x12a x13a x14a)) \\<bind>\n                                 (\\<lambda>r.\n                                     check_add B \\<V>'\n(pac_src1 (Add x11a x12a x13a x14a)) (pac_src2 (Add x11a x12a x13a x14a))\n(new_id (Add x11a x12a x13a x14a)) r \\<bind>\n                                     (\\<lambda>eq.\n   SPEC\n    (\\<lambda>st'.\n        \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n        r - spec' \\<in> More_Modules.ideal polynomial_bool) \\<bind>\n   (\\<lambda>st'.\n       if eq\n       then RETURN\n             (merge_status cst' st', \\<V>',\n              fmupd (new_id (Add x11a x12a x13a x14a)) r B)\n       else RETURN (FAILED, \\<V>', B)))))\n 2. \\<And>x21 x22 x23 x24 x21a x22a x23a x24a.\n       \\<lbrakk>(x21, x21a) \\<in> nat_rel \\<and>\n                (x22, x22a)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23, x23a) \\<in> nat_rel \\<and>\n                (x24, x24a) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21 x22 x23 x24; True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a x22a x23a x24a;\n        True \\<and> True \\<and> True \\<and> True\\<rbrakk>\n       \\<Longrightarrow> full_normalize_poly\n                          (pac_res (Mult x21 x22 x23 x24)) \\<bind>\n                         (\\<lambda>r.\n                             full_normalize_poly\n                              (pac_mult (Mult x21 x22 x23 x24)) \\<bind>\n                             (\\<lambda>q.\n                                 check_mult_l spec A \\<V>\n                                  (pac_src1 (Mult x21 x22 x23 x24)) q\n                                  (new_id (Mult x21 x22 x23 x24)) r \\<bind>\n                                 (\\<lambda>eq.\n                                     let _ = eq\n                                     in if \\<not> is_cfailed eq\n  then RETURN\n        (merge_cstatus cst eq, \\<V>,\n         fmupd (new_id (Mult x21 x22 x23 x24)) r A)\n  else RETURN (eq, \\<V>, A))))\n                         \\<le> \\<Down>\n                                (code_status_status_rel \\<times>\\<^sub>r\n                                 \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                 \\<langle>nat_rel,\n                                 sorted_poly_rel O\n                                 mset_poly_rel\\<rangle>fmap_rel)\n                                (normalize_poly_spec\n                                  (pac_res\n                                    (Mult x21a x22a x23a x24a)) \\<bind>\n                                 (\\<lambda>r.\n                                     normalize_poly_spec\n(pac_mult (Mult x21a x22a x23a x24a)) \\<bind>\n                                     (\\<lambda>q.\n   check_mult B \\<V>' (pac_src1 (Mult x21a x22a x23a x24a)) q\n    (new_id (Mult x21a x22a x23a x24a)) r \\<bind>\n   (\\<lambda>eq.\n       SPEC\n        (\\<lambda>st'.\n            \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n            r - spec' \\<in> More_Modules.ideal polynomial_bool) \\<bind>\n       (\\<lambda>st'.\n           if eq\n           then RETURN\n                 (merge_status cst' st', \\<V>',\n                  fmupd (new_id (Mult x21a x22a x23a x24a)) r B)\n           else RETURN (FAILED, \\<V>', B))))))\n 3. \\<And>x31 x32 x33 x31a x32a x33a.\n       \\<lbrakk>(x31, x31a) \\<in> nat_rel \\<and>\n                (x32, x32a) \\<in> var_rel \\<and>\n                (x33, x33a) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31 x32 x33; True \\<and> True \\<and> True;\n        st' = Extension x31a x32a x33a;\n        True \\<and> True \\<and> True\\<rbrakk>\n       \\<Longrightarrow> full_normalize_poly\n                          (([new_var (Extension x31 x32 x33)], - 1) #\n                           pac_res (Extension x31 x32 x33)) \\<bind>\n                         (\\<lambda>r.\n                             check_extension_l spec A \\<V>\n                              (new_id (Extension x31 x32 x33))\n                              (new_var (Extension x31 x32 x33)) r \\<bind>\n                             (\\<lambda>eq.\n                                 if \\<not> is_cfailed eq\n                                 then RETURN\n (cst, insert (new_var (Extension x31 x32 x33)) \\<V>,\n  fmupd (new_id (Extension x31 x32 x33)) r A)\n                                 else RETURN (eq, \\<V>, A)))\n                         \\<le> \\<Down>\n                                (code_status_status_rel \\<times>\\<^sub>r\n                                 \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                 \\<langle>nat_rel,\n                                 sorted_poly_rel O\n                                 mset_poly_rel\\<rangle>fmap_rel)\n                                (normalize_poly_spec\n                                  (pac_res (Extension x31a x32a x33a) -\n                                   Var (new_var\n   (Extension x31a x32a x33a))) \\<bind>\n                                 (\\<lambda>r.\n                                     check_extension B \\<V>'\n(new_id (Extension x31a x32a x33a)) (new_var (Extension x31a x32a x33a))\nr \\<bind>\n                                     (\\<lambda>eq.\n   if eq\n   then RETURN\n         (cst', insert (new_var (Extension x31a x32a x33a)) \\<V>',\n          fmupd (new_id (Extension x31a x32a x33a)) r B)\n   else RETURN (FAILED, \\<V>', B))))\n 4. \\<And>x4 x4a.\n       \\<lbrakk>(x4, x4a) \\<in> nat_rel; st = Del x4; True; st' = Del x4a;\n        True\\<rbrakk>\n       \\<Longrightarrow> check_del_l spec A (pac_src1 (Del x4)) \\<bind>\n                         (\\<lambda>eq.\n                             let _ = eq\n                             in if \\<not> is_cfailed eq\n                                then RETURN\n(merge_cstatus cst eq, \\<V>, fmdrop (pac_src1 (Del x4)) A)\n                                else RETURN (eq, \\<V>, A))\n                         \\<le> \\<Down>\n                                (code_status_status_rel \\<times>\\<^sub>r\n                                 \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                 \\<langle>nat_rel,\n                                 sorted_poly_rel O\n                                 mset_poly_rel\\<rangle>fmap_rel)\n                                (check_del B (pac_src1 (Del x4a)) \\<bind>\n                                 (\\<lambda>eq.\n                                     if eq\n                                     then RETURN\n     (cst', \\<V>', fmdrop (pac_src1 (Del x4a)) B)\n                                     else RETURN (FAILED, \\<V>', B)))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n             (x12_, x12a_) \\<in> nat_rel \\<and>\n             (x13_, x13a_) \\<in> nat_rel \\<and>\n             (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Add x11_ x12_ x13_ x14_; True \\<and> True \\<and> True \\<and> True;\n     st' = Add x11a_ x12a_ x13a_ x14a_;\n     True \\<and> True \\<and> True \\<and> True\\<rbrakk>\n    \\<Longrightarrow> full_normalize_poly\n                       (pac_res (Add x11_ x12_ x13_ x14_)) \\<bind>\n                      (\\<lambda>r.\n                          check_addition_l spec A \\<V>\n                           (pac_src1 (Add x11_ x12_ x13_ x14_))\n                           (pac_src2 (Add x11_ x12_ x13_ x14_))\n                           (new_id (Add x11_ x12_ x13_ x14_)) r \\<bind>\n                          (\\<lambda>eq.\n                              let _ = eq\n                              in if \\<not> is_cfailed eq\n                                 then RETURN\n (merge_cstatus cst eq, \\<V>, fmupd (new_id (Add x11_ x12_ x13_ x14_)) r A)\n                                 else RETURN (eq, \\<V>, A)))\n                      \\<le> \\<Down>\n                             (code_status_status_rel \\<times>\\<^sub>r\n                              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                              \\<langle>nat_rel,\n                              sorted_poly_rel O\n                              mset_poly_rel\\<rangle>fmap_rel)\n                             (normalize_poly_spec\n                               (pac_res\n                                 (Add x11a_ x12a_ x13a_ x14a_)) \\<bind>\n                              (\\<lambda>r.\n                                  check_add B \\<V>'\n                                   (pac_src1 (Add x11a_ x12a_ x13a_ x14a_))\n                                   (pac_src2 (Add x11a_ x12a_ x13a_ x14a_))\n                                   (new_id (Add x11a_ x12a_ x13a_ x14a_))\n                                   r \\<bind>\n                                  (\\<lambda>eq.\nSPEC\n (\\<lambda>st'.\n     \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n     r - spec' \\<in> More_Modules.ideal polynomial_bool) \\<bind>\n(\\<lambda>st'.\n    if eq\n    then RETURN\n          (merge_status cst' st', \\<V>',\n           fmupd (new_id (Add x11a_ x12a_ x13a_ x14a_)) r B)\n    else RETURN (FAILED, \\<V>', B)))))", "apply (refine_rcg normalize_poly_normalize_poly_spec\n        check_mult_l_check_mult check_addition_l_check_add\n        full_normalize_poly_diff_ideal)"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n             (x12_, x12a_) \\<in> nat_rel \\<and>\n             (x13_, x13a_) \\<in> nat_rel \\<and>\n             (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Add x11_ x12_ x13_ x14_; True \\<and> True \\<and> True \\<and> True;\n     st' = Add x11a_ x12a_ x13a_ x14a_;\n     True \\<and> True \\<and> True \\<and> True\\<rbrakk>\n    \\<Longrightarrow> (pac_res (Add x11_ x12_ x13_ x14_),\n                       pac_res (Add x11a_ x12a_ x13a_ x14a_))\n                      \\<in> fully_unsorted_poly_rel O mset_poly_rel\n 2. \\<And>r ra.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (A, B) \\<in> \\<langle>nat_rel,\n                         sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n 3. \\<And>r ra.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (pac_src1 (Add x11_ x12_ x13_ x14_),\n                          pac_src1 (Add x11a_ x12a_ x13a_ x14a_))\n                         \\<in> nat_rel\n 4. \\<And>r ra.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (pac_src2 (Add x11_ x12_ x13_ x14_),\n                          pac_src2 (Add x11a_ x12a_ x13a_ x14a_))\n                         \\<in> nat_rel\n 5. \\<And>r ra.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (new_id (Add x11_ x12_ x13_ x14_),\n                          new_id (Add x11a_ x12a_ x13a_ x14a_))\n                         \\<in> nat_rel\n 6. \\<And>r ra.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<V>, \\<V>')\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel\n 7. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (?r9 r ra eqa eqaa, ra)\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 8. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (eqa, ?eqaa9 r ra eqa eqaa)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow>\n                                 spec = ?r9 r ra eqa eqaa)}\n 9. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 10. \\<And>r ra eqa eqaa st'a.\n        \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                 (x12_, x12a_) \\<in> nat_rel \\<and>\n                 (x13_, x13a_) \\<in> nat_rel \\<and>\n                 (x14_, x14a_)\n                 \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n         st = Add x11_ x12_ x13_ x14_;\n         True \\<and> True \\<and> True \\<and> True;\n         st' = Add x11a_ x12a_ x13a_ x14a_;\n         True \\<and> True \\<and> True \\<and> True;\n         (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n         (eqa, eqaa)\n         \\<in> {(st, b).\n                (\\<not> is_cfailed st) = b \\<and>\n                (is_cfound st \\<longrightarrow> spec = r)};\n         (eqa, st'a) \\<in> code_status_status_rel; \\<not> is_cfailed eqa;\n         eqaa\\<rbrakk>\n        \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                            fmupd (new_id (Add x11_ x12_ x13_ x14_)) r A),\n                           merge_status cst' st'a, \\<V>',\n                           fmupd (new_id (Add x11a_ x12a_ x13a_ x14a_)) ra\n                            B)\n                          \\<in> code_status_status_rel \\<times>\\<^sub>r\n                                \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                \\<langle>nat_rel,\n                                sorted_poly_rel O\n                                mset_poly_rel\\<rangle>fmap_rel\nA total of 11 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n             (x12_, x12a_) \\<in> nat_rel \\<and>\n             (x13_, x13a_) \\<in> nat_rel \\<and>\n             (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Add x11_ x12_ x13_ x14_; True \\<and> True \\<and> True \\<and> True;\n     st' = Add x11a_ x12a_ x13a_ x14a_;\n     True \\<and> True \\<and> True \\<and> True\\<rbrakk>\n    \\<Longrightarrow> (pac_res (Add x11_ x12_ x13_ x14_),\n                       pac_res (Add x11a_ x12a_ x13a_ x14a_))\n                      \\<in> fully_unsorted_poly_rel O mset_poly_rel", "using AB"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (cst, cst') \\<in> code_status_status_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n             (x12_, x12a_) \\<in> nat_rel \\<and>\n             (x13_, x13a_) \\<in> nat_rel \\<and>\n             (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Add x11_ x12_ x13_ x14_; True \\<and> True \\<and> True \\<and> True;\n     st' = Add x11a_ x12a_ x13a_ x14a_;\n     True \\<and> True \\<and> True \\<and> True\\<rbrakk>\n    \\<Longrightarrow> (pac_res (Add x11_ x12_ x13_ x14_),\n                       pac_res (Add x11a_ x12a_ x13a_ x14a_))\n                      \\<in> fully_unsorted_poly_rel O mset_poly_rel", "by auto"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>r ra.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (A, B) \\<in> \\<langle>nat_rel,\n                         sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n 2. \\<And>r ra.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (pac_src1 (Add x11_ x12_ x13_ x14_),\n                          pac_src1 (Add x11a_ x12a_ x13a_ x14a_))\n                         \\<in> nat_rel\n 3. \\<And>r ra.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (pac_src2 (Add x11_ x12_ x13_ x14_),\n                          pac_src2 (Add x11a_ x12a_ x13a_ x14a_))\n                         \\<in> nat_rel\n 4. \\<And>r ra.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (new_id (Add x11_ x12_ x13_ x14_),\n                          new_id (Add x11a_ x12a_ x13a_ x14a_))\n                         \\<in> nat_rel\n 5. \\<And>r ra.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<V>, \\<V>')\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel\n 6. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (?r9 r ra eqa eqaa, ra)\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 7. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (eqa, ?eqaa9 r ra eqa eqaa)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow>\n                                 spec = ?r9 r ra eqa eqaa)}\n 8. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 9. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel; \\<not> is_cfailed eqa;\n        eqaa\\<rbrakk>\n       \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                           fmupd (new_id (Add x11_ x12_ x13_ x14_)) r A),\n                          merge_status cst' st'a, \\<V>',\n                          fmupd (new_id (Add x11a_ x12a_ x13a_ x14a_)) ra B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 10. \\<And>r ra eqa eqaa st'a.\n        \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                 (x12_, x12a_) \\<in> nat_rel \\<and>\n                 (x13_, x13a_) \\<in> nat_rel \\<and>\n                 (x14_, x14a_)\n                 \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n         st = Add x11_ x12_ x13_ x14_;\n         True \\<and> True \\<and> True \\<and> True;\n         st' = Add x11a_ x12a_ x13a_ x14a_;\n         True \\<and> True \\<and> True \\<and> True;\n         (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n         (eqa, eqaa)\n         \\<in> {(st, b).\n                (\\<not> is_cfailed st) = b \\<and>\n                (is_cfound st \\<longrightarrow> spec = r)};\n         (eqa, st'a) \\<in> code_status_status_rel;\n         \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n        \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                          \\<in> code_status_status_rel \\<times>\\<^sub>r\n                                \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                \\<langle>nat_rel,\n                                sorted_poly_rel O\n                                mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n             (x12_, x12a_) \\<in> nat_rel \\<and>\n             (x13_, x13a_) \\<in> nat_rel \\<and>\n             (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Add x11_ x12_ x13_ x14_; True \\<and> True \\<and> True \\<and> True;\n     st' = Add x11a_ x12a_ x13a_ x14a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (A, B) \\<in> \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "using AB"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (cst, cst') \\<in> code_status_status_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n             (x12_, x12a_) \\<in> nat_rel \\<and>\n             (x13_, x13a_) \\<in> nat_rel \\<and>\n             (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Add x11_ x12_ x13_ x14_; True \\<and> True \\<and> True \\<and> True;\n     st' = Add x11a_ x12a_ x13a_ x14a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (A, B) \\<in> \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by auto"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>r ra.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (pac_src1 (Add x11_ x12_ x13_ x14_),\n                          pac_src1 (Add x11a_ x12a_ x13a_ x14a_))\n                         \\<in> nat_rel\n 2. \\<And>r ra.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (pac_src2 (Add x11_ x12_ x13_ x14_),\n                          pac_src2 (Add x11a_ x12a_ x13a_ x14a_))\n                         \\<in> nat_rel\n 3. \\<And>r ra.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (new_id (Add x11_ x12_ x13_ x14_),\n                          new_id (Add x11a_ x12a_ x13a_ x14a_))\n                         \\<in> nat_rel\n 4. \\<And>r ra.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<V>, \\<V>')\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel\n 5. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (?r9 r ra eqa eqaa, ra)\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 6. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (eqa, ?eqaa9 r ra eqa eqaa)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow>\n                                 spec = ?r9 r ra eqa eqaa)}\n 7. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 8. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel; \\<not> is_cfailed eqa;\n        eqaa\\<rbrakk>\n       \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                           fmupd (new_id (Add x11_ x12_ x13_ x14_)) r A),\n                          merge_status cst' st'a, \\<V>',\n                          fmupd (new_id (Add x11a_ x12a_ x13a_ x14a_)) ra B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 9. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel;\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n             (x12_, x12a_) \\<in> nat_rel \\<and>\n             (x13_, x13a_) \\<in> nat_rel \\<and>\n             (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Add x11_ x12_ x13_ x14_; True \\<and> True \\<and> True \\<and> True;\n     st' = Add x11a_ x12a_ x13a_ x14a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (pac_src1 (Add x11_ x12_ x13_ x14_),\n                       pac_src1 (Add x11a_ x12a_ x13a_ x14a_))\n                      \\<in> nat_rel", "by auto"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>r ra.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (pac_src2 (Add x11_ x12_ x13_ x14_),\n                          pac_src2 (Add x11a_ x12a_ x13a_ x14a_))\n                         \\<in> nat_rel\n 2. \\<And>r ra.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (new_id (Add x11_ x12_ x13_ x14_),\n                          new_id (Add x11a_ x12a_ x13a_ x14a_))\n                         \\<in> nat_rel\n 3. \\<And>r ra.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<V>, \\<V>')\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel\n 4. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (?r9 r ra eqa eqaa, ra)\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 5. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (eqa, ?eqaa9 r ra eqa eqaa)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow>\n                                 spec = ?r9 r ra eqa eqaa)}\n 6. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 7. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel; \\<not> is_cfailed eqa;\n        eqaa\\<rbrakk>\n       \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                           fmupd (new_id (Add x11_ x12_ x13_ x14_)) r A),\n                          merge_status cst' st'a, \\<V>',\n                          fmupd (new_id (Add x11a_ x12a_ x13a_ x14a_)) ra B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 8. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel;\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n             (x12_, x12a_) \\<in> nat_rel \\<and>\n             (x13_, x13a_) \\<in> nat_rel \\<and>\n             (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Add x11_ x12_ x13_ x14_; True \\<and> True \\<and> True \\<and> True;\n     st' = Add x11a_ x12a_ x13a_ x14a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (pac_src2 (Add x11_ x12_ x13_ x14_),\n                       pac_src2 (Add x11a_ x12a_ x13a_ x14a_))\n                      \\<in> nat_rel", "by auto"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>r ra.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (new_id (Add x11_ x12_ x13_ x14_),\n                          new_id (Add x11a_ x12a_ x13a_ x14a_))\n                         \\<in> nat_rel\n 2. \\<And>r ra.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<V>, \\<V>')\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel\n 3. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (?r9 r ra eqa eqaa, ra)\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 4. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (eqa, ?eqaa9 r ra eqa eqaa)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow>\n                                 spec = ?r9 r ra eqa eqaa)}\n 5. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 6. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel; \\<not> is_cfailed eqa;\n        eqaa\\<rbrakk>\n       \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                           fmupd (new_id (Add x11_ x12_ x13_ x14_)) r A),\n                          merge_status cst' st'a, \\<V>',\n                          fmupd (new_id (Add x11a_ x12a_ x13a_ x14a_)) ra B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 7. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel;\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n             (x12_, x12a_) \\<in> nat_rel \\<and>\n             (x13_, x13a_) \\<in> nat_rel \\<and>\n             (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Add x11_ x12_ x13_ x14_; True \\<and> True \\<and> True \\<and> True;\n     st' = Add x11a_ x12a_ x13a_ x14a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (new_id (Add x11_ x12_ x13_ x14_),\n                       new_id (Add x11a_ x12a_ x13a_ x14a_))\n                      \\<in> nat_rel", "by auto"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>r ra.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<V>, \\<V>')\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel\n 2. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (?r9 r ra eqa eqaa, ra)\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 3. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (eqa, ?eqaa9 r ra eqa eqaa)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow>\n                                 spec = ?r9 r ra eqa eqaa)}\n 4. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 5. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel; \\<not> is_cfailed eqa;\n        eqaa\\<rbrakk>\n       \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                           fmupd (new_id (Add x11_ x12_ x13_ x14_)) r A),\n                          merge_status cst' st'a, \\<V>',\n                          fmupd (new_id (Add x11a_ x12a_ x13a_ x14a_)) ra B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 6. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel;\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n             (x12_, x12a_) \\<in> nat_rel \\<and>\n             (x13_, x13a_) \\<in> nat_rel \\<and>\n             (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Add x11_ x12_ x13_ x14_; True \\<and> True \\<and> True \\<and> True;\n     st' = Add x11a_ x12a_ x13a_ x14a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel", "by (auto intro: \\<V>)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (?r9 r ra eqa eqaa, ra)\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 2. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (eqa, ?eqaa9 r ra eqa eqaa)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow>\n                                 spec = ?r9 r ra eqa eqaa)}\n 3. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 4. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel; \\<not> is_cfailed eqa;\n        eqaa\\<rbrakk>\n       \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                           fmupd (new_id (Add x11_ x12_ x13_ x14_)) r A),\n                          merge_status cst' st'a, \\<V>',\n                          fmupd (new_id (Add x11a_ x12a_ x13a_ x14a_)) ra B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 5. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel;\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "apply assumption+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 2. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel; \\<not> is_cfailed eqa;\n        eqaa\\<rbrakk>\n       \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                           fmupd (new_id (Add x11_ x12_ x13_ x14_)) r A),\n                          merge_status cst' st'a, \\<V>',\n                          fmupd (new_id (Add x11a_ x12a_ x13a_ x14a_)) ra B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 3. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel;\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n             (x12_, x12a_) \\<in> nat_rel \\<and>\n             (x13_, x13a_) \\<in> nat_rel \\<and>\n             (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Add x11_ x12_ x13_ x14_; True \\<and> True \\<and> True \\<and> True;\n     st' = Add x11a_ x12a_ x13a_ x14a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (eqa_, eqaa_)\n     \\<in> {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r_)};\n     (eqa_, st'a_) \\<in> code_status_status_rel\\<rbrakk>\n    \\<Longrightarrow> (\\<not> is_cfailed eqa_) = eqaa_", "by (auto simp: code_status_status_rel_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel; \\<not> is_cfailed eqa;\n        eqaa\\<rbrakk>\n       \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                           fmupd (new_id (Add x11_ x12_ x13_ x14_)) r A),\n                          merge_status cst' st'a, \\<V>',\n                          fmupd (new_id (Add x11a_ x12a_ x13a_ x14a_)) ra B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 2. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel;\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n             (x12_, x12a_) \\<in> nat_rel \\<and>\n             (x13_, x13a_) \\<in> nat_rel \\<and>\n             (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Add x11_ x12_ x13_ x14_; True \\<and> True \\<and> True \\<and> True;\n     st' = Add x11a_ x12a_ x13a_ x14a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (eqa_, eqaa_)\n     \\<in> {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r_)};\n     (eqa_, st'a_) \\<in> code_status_status_rel; \\<not> is_cfailed eqa_;\n     eqaa_\\<rbrakk>\n    \\<Longrightarrow> ((merge_cstatus cst eqa_, \\<V>,\n                        fmupd (new_id (Add x11_ x12_ x13_ x14_)) r_ A),\n                       merge_status cst' st'a_, \\<V>',\n                       fmupd (new_id (Add x11a_ x12a_ x13a_ x14a_)) ra_ B)\n                      \\<in> code_status_status_rel \\<times>\\<^sub>r\n                            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                            \\<langle>nat_rel,\n                            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by (auto intro!: fmap_rel_fmupd_fmap_rel\n          fmap_rel_fmdrop_fmap_rel AB)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r ra eqa eqaa st'a.\n       \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n                (x12_, x12a_) \\<in> nat_rel \\<and>\n                (x13_, x13a_) \\<in> nat_rel \\<and>\n                (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Add x11_ x12_ x13_ x14_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Add x11a_ x12a_ x13a_ x14a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel;\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n             (x12_, x12a_) \\<in> nat_rel \\<and>\n             (x13_, x13a_) \\<in> nat_rel \\<and>\n             (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Add x11_ x12_ x13_ x14_; True \\<and> True \\<and> True \\<and> True;\n     st' = Add x11a_ x12a_ x13a_ x14a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (eqa_, eqaa_)\n     \\<in> {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r_)};\n     (eqa_, st'a_) \\<in> code_status_status_rel;\n     \\<not> \\<not> is_cfailed eqa_; \\<not> eqaa_\\<rbrakk>\n    \\<Longrightarrow> ((eqa_, \\<V>, A), FAILED, \\<V>', B)\n                      \\<in> code_status_status_rel \\<times>\\<^sub>r\n                            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                            \\<langle>nat_rel,\n                            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "using AB"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (cst, cst') \\<in> code_status_status_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x11_, x11a_) \\<in> nat_rel \\<and>\n             (x12_, x12a_) \\<in> nat_rel \\<and>\n             (x13_, x13a_) \\<in> nat_rel \\<and>\n             (x14_, x14a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Add x11_ x12_ x13_ x14_; True \\<and> True \\<and> True \\<and> True;\n     st' = Add x11a_ x12a_ x13a_ x14a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (eqa_, eqaa_)\n     \\<in> {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r_)};\n     (eqa_, st'a_) \\<in> code_status_status_rel;\n     \\<not> \\<not> is_cfailed eqa_; \\<not> eqaa_\\<rbrakk>\n    \\<Longrightarrow> ((eqa_, \\<V>, A), FAILED, \\<V>', B)\n                      \\<in> code_status_status_rel \\<times>\\<^sub>r\n                            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                            \\<langle>nat_rel,\n                            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x21 x22 x23 x24 x21a x22a x23a x24a.\n       \\<lbrakk>(x21, x21a) \\<in> nat_rel \\<and>\n                (x22, x22a)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23, x23a) \\<in> nat_rel \\<and>\n                (x24, x24a) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21 x22 x23 x24; True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a x22a x23a x24a;\n        True \\<and> True \\<and> True \\<and> True\\<rbrakk>\n       \\<Longrightarrow> full_normalize_poly\n                          (pac_res (Mult x21 x22 x23 x24)) \\<bind>\n                         (\\<lambda>r.\n                             full_normalize_poly\n                              (pac_mult (Mult x21 x22 x23 x24)) \\<bind>\n                             (\\<lambda>q.\n                                 check_mult_l spec A \\<V>\n                                  (pac_src1 (Mult x21 x22 x23 x24)) q\n                                  (new_id (Mult x21 x22 x23 x24)) r \\<bind>\n                                 (\\<lambda>eq.\n                                     let _ = eq\n                                     in if \\<not> is_cfailed eq\n  then RETURN\n        (merge_cstatus cst eq, \\<V>,\n         fmupd (new_id (Mult x21 x22 x23 x24)) r A)\n  else RETURN (eq, \\<V>, A))))\n                         \\<le> \\<Down>\n                                (code_status_status_rel \\<times>\\<^sub>r\n                                 \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                 \\<langle>nat_rel,\n                                 sorted_poly_rel O\n                                 mset_poly_rel\\<rangle>fmap_rel)\n                                (normalize_poly_spec\n                                  (pac_res\n                                    (Mult x21a x22a x23a x24a)) \\<bind>\n                                 (\\<lambda>r.\n                                     normalize_poly_spec\n(pac_mult (Mult x21a x22a x23a x24a)) \\<bind>\n                                     (\\<lambda>q.\n   check_mult B \\<V>' (pac_src1 (Mult x21a x22a x23a x24a)) q\n    (new_id (Mult x21a x22a x23a x24a)) r \\<bind>\n   (\\<lambda>eq.\n       SPEC\n        (\\<lambda>st'.\n            \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n            r - spec' \\<in> More_Modules.ideal polynomial_bool) \\<bind>\n       (\\<lambda>st'.\n           if eq\n           then RETURN\n                 (merge_status cst' st', \\<V>',\n                  fmupd (new_id (Mult x21a x22a x23a x24a)) r B)\n           else RETURN (FAILED, \\<V>', B))))))\n 2. \\<And>x31 x32 x33 x31a x32a x33a.\n       \\<lbrakk>(x31, x31a) \\<in> nat_rel \\<and>\n                (x32, x32a) \\<in> var_rel \\<and>\n                (x33, x33a) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31 x32 x33; True \\<and> True \\<and> True;\n        st' = Extension x31a x32a x33a;\n        True \\<and> True \\<and> True\\<rbrakk>\n       \\<Longrightarrow> full_normalize_poly\n                          (([new_var (Extension x31 x32 x33)], - 1) #\n                           pac_res (Extension x31 x32 x33)) \\<bind>\n                         (\\<lambda>r.\n                             check_extension_l spec A \\<V>\n                              (new_id (Extension x31 x32 x33))\n                              (new_var (Extension x31 x32 x33)) r \\<bind>\n                             (\\<lambda>eq.\n                                 if \\<not> is_cfailed eq\n                                 then RETURN\n (cst, insert (new_var (Extension x31 x32 x33)) \\<V>,\n  fmupd (new_id (Extension x31 x32 x33)) r A)\n                                 else RETURN (eq, \\<V>, A)))\n                         \\<le> \\<Down>\n                                (code_status_status_rel \\<times>\\<^sub>r\n                                 \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                 \\<langle>nat_rel,\n                                 sorted_poly_rel O\n                                 mset_poly_rel\\<rangle>fmap_rel)\n                                (normalize_poly_spec\n                                  (pac_res (Extension x31a x32a x33a) -\n                                   Var (new_var\n   (Extension x31a x32a x33a))) \\<bind>\n                                 (\\<lambda>r.\n                                     check_extension B \\<V>'\n(new_id (Extension x31a x32a x33a)) (new_var (Extension x31a x32a x33a))\nr \\<bind>\n                                     (\\<lambda>eq.\n   if eq\n   then RETURN\n         (cst', insert (new_var (Extension x31a x32a x33a)) \\<V>',\n          fmupd (new_id (Extension x31a x32a x33a)) r B)\n   else RETURN (FAILED, \\<V>', B))))\n 3. \\<And>x4 x4a.\n       \\<lbrakk>(x4, x4a) \\<in> nat_rel; st = Del x4; True; st' = Del x4a;\n        True\\<rbrakk>\n       \\<Longrightarrow> check_del_l spec A (pac_src1 (Del x4)) \\<bind>\n                         (\\<lambda>eq.\n                             let _ = eq\n                             in if \\<not> is_cfailed eq\n                                then RETURN\n(merge_cstatus cst eq, \\<V>, fmdrop (pac_src1 (Del x4)) A)\n                                else RETURN (eq, \\<V>, A))\n                         \\<le> \\<Down>\n                                (code_status_status_rel \\<times>\\<^sub>r\n                                 \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                 \\<langle>nat_rel,\n                                 sorted_poly_rel O\n                                 mset_poly_rel\\<rangle>fmap_rel)\n                                (check_del B (pac_src1 (Del x4a)) \\<bind>\n                                 (\\<lambda>eq.\n                                     if eq\n                                     then RETURN\n     (cst', \\<V>', fmdrop (pac_src1 (Del x4a)) B)\n                                     else RETURN (FAILED, \\<V>', B)))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n             (x22_, x22a_)\n             \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n             (x23_, x23a_) \\<in> nat_rel \\<and>\n             (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Mult x21_ x22_ x23_ x24_;\n     True \\<and> True \\<and> True \\<and> True;\n     st' = Mult x21a_ x22a_ x23a_ x24a_;\n     True \\<and> True \\<and> True \\<and> True\\<rbrakk>\n    \\<Longrightarrow> full_normalize_poly\n                       (pac_res (Mult x21_ x22_ x23_ x24_)) \\<bind>\n                      (\\<lambda>r.\n                          full_normalize_poly\n                           (pac_mult (Mult x21_ x22_ x23_ x24_)) \\<bind>\n                          (\\<lambda>q.\n                              check_mult_l spec A \\<V>\n                               (pac_src1 (Mult x21_ x22_ x23_ x24_)) q\n                               (new_id (Mult x21_ x22_ x23_ x24_)) r \\<bind>\n                              (\\<lambda>eq.\n                                  let _ = eq\n                                  in if \\<not> is_cfailed eq\n                                     then RETURN\n     (merge_cstatus cst eq, \\<V>,\n      fmupd (new_id (Mult x21_ x22_ x23_ x24_)) r A)\n                                     else RETURN (eq, \\<V>, A))))\n                      \\<le> \\<Down>\n                             (code_status_status_rel \\<times>\\<^sub>r\n                              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                              \\<langle>nat_rel,\n                              sorted_poly_rel O\n                              mset_poly_rel\\<rangle>fmap_rel)\n                             (normalize_poly_spec\n                               (pac_res\n                                 (Mult x21a_ x22a_ x23a_ x24a_)) \\<bind>\n                              (\\<lambda>r.\n                                  normalize_poly_spec\n                                   (pac_mult\n                                     (Mult x21a_ x22a_ x23a_ x24a_)) \\<bind>\n                                  (\\<lambda>q.\ncheck_mult B \\<V>' (pac_src1 (Mult x21a_ x22a_ x23a_ x24a_)) q\n (new_id (Mult x21a_ x22a_ x23a_ x24a_)) r \\<bind>\n(\\<lambda>eq.\n    SPEC\n     (\\<lambda>st'.\n         \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n         r - spec' \\<in> More_Modules.ideal polynomial_bool) \\<bind>\n    (\\<lambda>st'.\n        if eq\n        then RETURN\n              (merge_status cst' st', \\<V>',\n               fmupd (new_id (Mult x21a_ x22a_ x23a_ x24a_)) r B)\n        else RETURN (FAILED, \\<V>', B))))))", "apply (refine_rcg normalize_poly_normalize_poly_spec\n        check_mult_l_check_mult check_addition_l_check_add\n        full_normalize_poly_diff_ideal[unfolded normalize_poly_spec_def[symmetric]])"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n             (x22_, x22a_)\n             \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n             (x23_, x23a_) \\<in> nat_rel \\<and>\n             (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Mult x21_ x22_ x23_ x24_;\n     True \\<and> True \\<and> True \\<and> True;\n     st' = Mult x21a_ x22a_ x23a_ x24a_;\n     True \\<and> True \\<and> True \\<and> True\\<rbrakk>\n    \\<Longrightarrow> (pac_res (Mult x21_ x22_ x23_ x24_),\n                       pac_res (Mult x21a_ x22a_ x23a_ x24a_))\n                      \\<in> fully_unsorted_poly_rel O mset_poly_rel\n 2. \\<And>r ra.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (pac_mult (Mult x21_ x22_ x23_ x24_),\n                          pac_mult (Mult x21a_ x22a_ x23a_ x24a_))\n                         \\<in> fully_unsorted_poly_rel O mset_poly_rel\n 3. \\<And>r ra q qa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (A, B) \\<in> \\<langle>nat_rel,\n                         sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n 4. \\<And>r ra q qa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (pac_src1 (Mult x21_ x22_ x23_ x24_),\n                          pac_src1 (Mult x21a_ x22a_ x23a_ x24a_))\n                         \\<in> nat_rel\n 5. \\<And>r ra q qa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (new_id (Mult x21_ x22_ x23_ x24_),\n                          new_id (Mult x21a_ x22a_ x23a_ x24a_))\n                         \\<in> nat_rel\n 6. \\<And>r ra q qa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<V>, \\<V>')\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel\n 7. \\<And>r ra q qa eqa eqaa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (?r11 r ra q qa eqa eqaa, ra)\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 8. \\<And>r ra q qa eqa eqaa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (eqa, ?eqaa11 r ra q qa eqa eqaa)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow>\n                                 spec = ?r11 r ra q qa eqa eqaa)}\n 9. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 10. \\<And>r ra q qa eqa eqaa st'a.\n        \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                 (x22_, x22a_)\n                 \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                 (x23_, x23a_) \\<in> nat_rel \\<and>\n                 (x24_, x24a_)\n                 \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n         st = Mult x21_ x22_ x23_ x24_;\n         True \\<and> True \\<and> True \\<and> True;\n         st' = Mult x21a_ x22a_ x23a_ x24a_;\n         True \\<and> True \\<and> True \\<and> True;\n         (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n         (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n         (eqa, eqaa)\n         \\<in> {(st, b).\n                (\\<not> is_cfailed st) = b \\<and>\n                (is_cfound st \\<longrightarrow> spec = r)};\n         (eqa, st'a) \\<in> code_status_status_rel; \\<not> is_cfailed eqa;\n         eqaa\\<rbrakk>\n        \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                            fmupd (new_id (Mult x21_ x22_ x23_ x24_)) r A),\n                           merge_status cst' st'a, \\<V>',\n                           fmupd (new_id (Mult x21a_ x22a_ x23a_ x24a_)) ra\n                            B)\n                          \\<in> code_status_status_rel \\<times>\\<^sub>r\n                                \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                \\<langle>nat_rel,\n                                sorted_poly_rel O\n                                mset_poly_rel\\<rangle>fmap_rel\nA total of 11 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n             (x22_, x22a_)\n             \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n             (x23_, x23a_) \\<in> nat_rel \\<and>\n             (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Mult x21_ x22_ x23_ x24_;\n     True \\<and> True \\<and> True \\<and> True;\n     st' = Mult x21a_ x22a_ x23a_ x24a_;\n     True \\<and> True \\<and> True \\<and> True\\<rbrakk>\n    \\<Longrightarrow> (pac_res (Mult x21_ x22_ x23_ x24_),\n                       pac_res (Mult x21a_ x22a_ x23a_ x24a_))\n                      \\<in> fully_unsorted_poly_rel O mset_poly_rel", "using AB"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (cst, cst') \\<in> code_status_status_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n             (x22_, x22a_)\n             \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n             (x23_, x23a_) \\<in> nat_rel \\<and>\n             (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Mult x21_ x22_ x23_ x24_;\n     True \\<and> True \\<and> True \\<and> True;\n     st' = Mult x21a_ x22a_ x23a_ x24a_;\n     True \\<and> True \\<and> True \\<and> True\\<rbrakk>\n    \\<Longrightarrow> (pac_res (Mult x21_ x22_ x23_ x24_),\n                       pac_res (Mult x21a_ x22a_ x23a_ x24a_))\n                      \\<in> fully_unsorted_poly_rel O mset_poly_rel", "by auto"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>r ra.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (pac_mult (Mult x21_ x22_ x23_ x24_),\n                          pac_mult (Mult x21a_ x22a_ x23a_ x24a_))\n                         \\<in> fully_unsorted_poly_rel O mset_poly_rel\n 2. \\<And>r ra q qa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (A, B) \\<in> \\<langle>nat_rel,\n                         sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n 3. \\<And>r ra q qa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (pac_src1 (Mult x21_ x22_ x23_ x24_),\n                          pac_src1 (Mult x21a_ x22a_ x23a_ x24a_))\n                         \\<in> nat_rel\n 4. \\<And>r ra q qa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (new_id (Mult x21_ x22_ x23_ x24_),\n                          new_id (Mult x21a_ x22a_ x23a_ x24a_))\n                         \\<in> nat_rel\n 5. \\<And>r ra q qa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<V>, \\<V>')\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel\n 6. \\<And>r ra q qa eqa eqaa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (?r11 r ra q qa eqa eqaa, ra)\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 7. \\<And>r ra q qa eqa eqaa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (eqa, ?eqaa11 r ra q qa eqa eqaa)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow>\n                                 spec = ?r11 r ra q qa eqa eqaa)}\n 8. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 9. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel; \\<not> is_cfailed eqa;\n        eqaa\\<rbrakk>\n       \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                           fmupd (new_id (Mult x21_ x22_ x23_ x24_)) r A),\n                          merge_status cst' st'a, \\<V>',\n                          fmupd (new_id (Mult x21a_ x22a_ x23a_ x24a_)) ra\n                           B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 10. \\<And>r ra q qa eqa eqaa st'a.\n        \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                 (x22_, x22a_)\n                 \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                 (x23_, x23a_) \\<in> nat_rel \\<and>\n                 (x24_, x24a_)\n                 \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n         st = Mult x21_ x22_ x23_ x24_;\n         True \\<and> True \\<and> True \\<and> True;\n         st' = Mult x21a_ x22a_ x23a_ x24a_;\n         True \\<and> True \\<and> True \\<and> True;\n         (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n         (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n         (eqa, eqaa)\n         \\<in> {(st, b).\n                (\\<not> is_cfailed st) = b \\<and>\n                (is_cfound st \\<longrightarrow> spec = r)};\n         (eqa, st'a) \\<in> code_status_status_rel;\n         \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n        \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                          \\<in> code_status_status_rel \\<times>\\<^sub>r\n                                \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                \\<langle>nat_rel,\n                                sorted_poly_rel O\n                                mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n             (x22_, x22a_)\n             \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n             (x23_, x23a_) \\<in> nat_rel \\<and>\n             (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Mult x21_ x22_ x23_ x24_;\n     True \\<and> True \\<and> True \\<and> True;\n     st' = Mult x21a_ x22a_ x23a_ x24a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (pac_mult (Mult x21_ x22_ x23_ x24_),\n                       pac_mult (Mult x21a_ x22a_ x23a_ x24a_))\n                      \\<in> fully_unsorted_poly_rel O mset_poly_rel", "using AB"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (cst, cst') \\<in> code_status_status_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n             (x22_, x22a_)\n             \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n             (x23_, x23a_) \\<in> nat_rel \\<and>\n             (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Mult x21_ x22_ x23_ x24_;\n     True \\<and> True \\<and> True \\<and> True;\n     st' = Mult x21a_ x22a_ x23a_ x24a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (pac_mult (Mult x21_ x22_ x23_ x24_),\n                       pac_mult (Mult x21a_ x22a_ x23a_ x24a_))\n                      \\<in> fully_unsorted_poly_rel O mset_poly_rel", "by auto"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>r ra q qa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (A, B) \\<in> \\<langle>nat_rel,\n                         sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n 2. \\<And>r ra q qa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (pac_src1 (Mult x21_ x22_ x23_ x24_),\n                          pac_src1 (Mult x21a_ x22a_ x23a_ x24a_))\n                         \\<in> nat_rel\n 3. \\<And>r ra q qa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (new_id (Mult x21_ x22_ x23_ x24_),\n                          new_id (Mult x21a_ x22a_ x23a_ x24a_))\n                         \\<in> nat_rel\n 4. \\<And>r ra q qa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<V>, \\<V>')\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel\n 5. \\<And>r ra q qa eqa eqaa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (?r11 r ra q qa eqa eqaa, ra)\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 6. \\<And>r ra q qa eqa eqaa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (eqa, ?eqaa11 r ra q qa eqa eqaa)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow>\n                                 spec = ?r11 r ra q qa eqa eqaa)}\n 7. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 8. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel; \\<not> is_cfailed eqa;\n        eqaa\\<rbrakk>\n       \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                           fmupd (new_id (Mult x21_ x22_ x23_ x24_)) r A),\n                          merge_status cst' st'a, \\<V>',\n                          fmupd (new_id (Mult x21a_ x22a_ x23a_ x24a_)) ra\n                           B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 9. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel;\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n             (x22_, x22a_)\n             \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n             (x23_, x23a_) \\<in> nat_rel \\<and>\n             (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Mult x21_ x22_ x23_ x24_;\n     True \\<and> True \\<and> True \\<and> True;\n     st' = Mult x21a_ x22a_ x23a_ x24a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (q_, qa_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (A, B) \\<in> \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "using AB"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (cst, cst') \\<in> code_status_status_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n             (x22_, x22a_)\n             \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n             (x23_, x23a_) \\<in> nat_rel \\<and>\n             (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Mult x21_ x22_ x23_ x24_;\n     True \\<and> True \\<and> True \\<and> True;\n     st' = Mult x21a_ x22a_ x23a_ x24a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (q_, qa_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (A, B) \\<in> \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by auto"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>r ra q qa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (pac_src1 (Mult x21_ x22_ x23_ x24_),\n                          pac_src1 (Mult x21a_ x22a_ x23a_ x24a_))\n                         \\<in> nat_rel\n 2. \\<And>r ra q qa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (new_id (Mult x21_ x22_ x23_ x24_),\n                          new_id (Mult x21a_ x22a_ x23a_ x24a_))\n                         \\<in> nat_rel\n 3. \\<And>r ra q qa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<V>, \\<V>')\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel\n 4. \\<And>r ra q qa eqa eqaa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (?r11 r ra q qa eqa eqaa, ra)\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 5. \\<And>r ra q qa eqa eqaa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (eqa, ?eqaa11 r ra q qa eqa eqaa)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow>\n                                 spec = ?r11 r ra q qa eqa eqaa)}\n 6. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 7. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel; \\<not> is_cfailed eqa;\n        eqaa\\<rbrakk>\n       \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                           fmupd (new_id (Mult x21_ x22_ x23_ x24_)) r A),\n                          merge_status cst' st'a, \\<V>',\n                          fmupd (new_id (Mult x21a_ x22a_ x23a_ x24a_)) ra\n                           B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 8. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel;\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n             (x22_, x22a_)\n             \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n             (x23_, x23a_) \\<in> nat_rel \\<and>\n             (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Mult x21_ x22_ x23_ x24_;\n     True \\<and> True \\<and> True \\<and> True;\n     st' = Mult x21a_ x22a_ x23a_ x24a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (q_, qa_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (pac_src1 (Mult x21_ x22_ x23_ x24_),\n                       pac_src1 (Mult x21a_ x22a_ x23a_ x24a_))\n                      \\<in> nat_rel", "by auto"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>r ra q qa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (new_id (Mult x21_ x22_ x23_ x24_),\n                          new_id (Mult x21a_ x22a_ x23a_ x24a_))\n                         \\<in> nat_rel\n 2. \\<And>r ra q qa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<V>, \\<V>')\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel\n 3. \\<And>r ra q qa eqa eqaa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (?r11 r ra q qa eqa eqaa, ra)\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 4. \\<And>r ra q qa eqa eqaa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (eqa, ?eqaa11 r ra q qa eqa eqaa)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow>\n                                 spec = ?r11 r ra q qa eqa eqaa)}\n 5. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 6. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel; \\<not> is_cfailed eqa;\n        eqaa\\<rbrakk>\n       \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                           fmupd (new_id (Mult x21_ x22_ x23_ x24_)) r A),\n                          merge_status cst' st'a, \\<V>',\n                          fmupd (new_id (Mult x21a_ x22a_ x23a_ x24a_)) ra\n                           B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 7. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel;\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n             (x22_, x22a_)\n             \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n             (x23_, x23a_) \\<in> nat_rel \\<and>\n             (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Mult x21_ x22_ x23_ x24_;\n     True \\<and> True \\<and> True \\<and> True;\n     st' = Mult x21a_ x22a_ x23a_ x24a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (q_, qa_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (new_id (Mult x21_ x22_ x23_ x24_),\n                       new_id (Mult x21a_ x22a_ x23a_ x24a_))\n                      \\<in> nat_rel", "by auto"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>r ra q qa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<V>, \\<V>')\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel\n 2. \\<And>r ra q qa eqa eqaa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (?r11 r ra q qa eqa eqaa, ra)\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 3. \\<And>r ra q qa eqa eqaa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (eqa, ?eqaa11 r ra q qa eqa eqaa)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow>\n                                 spec = ?r11 r ra q qa eqa eqaa)}\n 4. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 5. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel; \\<not> is_cfailed eqa;\n        eqaa\\<rbrakk>\n       \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                           fmupd (new_id (Mult x21_ x22_ x23_ x24_)) r A),\n                          merge_status cst' st'a, \\<V>',\n                          fmupd (new_id (Mult x21a_ x22a_ x23a_ x24a_)) ra\n                           B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 6. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel;\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n             (x22_, x22a_)\n             \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n             (x23_, x23a_) \\<in> nat_rel \\<and>\n             (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Mult x21_ x22_ x23_ x24_;\n     True \\<and> True \\<and> True \\<and> True;\n     st' = Mult x21a_ x22a_ x23a_ x24a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (q_, qa_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel", "by auto"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>r ra q qa eqa eqaa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (?r11 r ra q qa eqa eqaa, ra)\n                         \\<in> sorted_poly_rel O mset_poly_rel\n 2. \\<And>r ra q qa eqa eqaa.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (eqa, ?eqaa11 r ra q qa eqa eqaa)\n                         \\<in> {(st, b).\n                                (\\<not> is_cfailed st) = b \\<and>\n                                (is_cfound st \\<longrightarrow>\n                                 spec = ?r11 r ra q qa eqa eqaa)}\n 3. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 4. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel; \\<not> is_cfailed eqa;\n        eqaa\\<rbrakk>\n       \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                           fmupd (new_id (Mult x21_ x22_ x23_ x24_)) r A),\n                          merge_status cst' st'a, \\<V>',\n                          fmupd (new_id (Mult x21a_ x22a_ x23a_ x24a_)) ra\n                           B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 5. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel;\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "apply assumption+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 2. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel; \\<not> is_cfailed eqa;\n        eqaa\\<rbrakk>\n       \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                           fmupd (new_id (Mult x21_ x22_ x23_ x24_)) r A),\n                          merge_status cst' st'a, \\<V>',\n                          fmupd (new_id (Mult x21a_ x22a_ x23a_ x24a_)) ra\n                           B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 3. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel;\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n             (x22_, x22a_)\n             \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n             (x23_, x23a_) \\<in> nat_rel \\<and>\n             (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Mult x21_ x22_ x23_ x24_;\n     True \\<and> True \\<and> True \\<and> True;\n     st' = Mult x21a_ x22a_ x23a_ x24a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (q_, qa_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (eqa_, eqaa_)\n     \\<in> {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r_)};\n     (eqa_, st'a_) \\<in> code_status_status_rel\\<rbrakk>\n    \\<Longrightarrow> (\\<not> is_cfailed eqa_) = eqaa_", "by (auto simp: code_status_status_rel_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel; \\<not> is_cfailed eqa;\n        eqaa\\<rbrakk>\n       \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                           fmupd (new_id (Mult x21_ x22_ x23_ x24_)) r A),\n                          merge_status cst' st'a, \\<V>',\n                          fmupd (new_id (Mult x21a_ x22a_ x23a_ x24a_)) ra\n                           B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 2. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel;\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n             (x22_, x22a_)\n             \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n             (x23_, x23a_) \\<in> nat_rel \\<and>\n             (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Mult x21_ x22_ x23_ x24_;\n     True \\<and> True \\<and> True \\<and> True;\n     st' = Mult x21a_ x22a_ x23a_ x24a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (q_, qa_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (eqa_, eqaa_)\n     \\<in> {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r_)};\n     (eqa_, st'a_) \\<in> code_status_status_rel; \\<not> is_cfailed eqa_;\n     eqaa_\\<rbrakk>\n    \\<Longrightarrow> ((merge_cstatus cst eqa_, \\<V>,\n                        fmupd (new_id (Mult x21_ x22_ x23_ x24_)) r_ A),\n                       merge_status cst' st'a_, \\<V>',\n                       fmupd (new_id (Mult x21a_ x22a_ x23a_ x24a_)) ra_ B)\n                      \\<in> code_status_status_rel \\<times>\\<^sub>r\n                            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                            \\<langle>nat_rel,\n                            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by (auto intro!: fmap_rel_fmupd_fmap_rel\n          fmap_rel_fmdrop_fmap_rel AB)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r ra q qa eqa eqaa st'a.\n       \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n                (x22_, x22a_)\n                \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n                (x23_, x23a_) \\<in> nat_rel \\<and>\n                (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Mult x21_ x22_ x23_ x24_;\n        True \\<and> True \\<and> True \\<and> True;\n        st' = Mult x21a_ x22a_ x23a_ x24a_;\n        True \\<and> True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (q, qa) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        (eqa, st'a) \\<in> code_status_status_rel;\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n             (x22_, x22a_)\n             \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n             (x23_, x23a_) \\<in> nat_rel \\<and>\n             (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Mult x21_ x22_ x23_ x24_;\n     True \\<and> True \\<and> True \\<and> True;\n     st' = Mult x21a_ x22a_ x23a_ x24a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (q_, qa_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (eqa_, eqaa_)\n     \\<in> {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r_)};\n     (eqa_, st'a_) \\<in> code_status_status_rel;\n     \\<not> \\<not> is_cfailed eqa_; \\<not> eqaa_\\<rbrakk>\n    \\<Longrightarrow> ((eqa_, \\<V>, A), FAILED, \\<V>', B)\n                      \\<in> code_status_status_rel \\<times>\\<^sub>r\n                            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                            \\<langle>nat_rel,\n                            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "using AB"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (cst, cst') \\<in> code_status_status_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x21_, x21a_) \\<in> nat_rel \\<and>\n             (x22_, x22a_)\n             \\<in> fully_unsorted_poly_rel O mset_poly_rel \\<and>\n             (x23_, x23a_) \\<in> nat_rel \\<and>\n             (x24_, x24a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Mult x21_ x22_ x23_ x24_;\n     True \\<and> True \\<and> True \\<and> True;\n     st' = Mult x21a_ x22a_ x23a_ x24a_;\n     True \\<and> True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (q_, qa_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (eqa_, eqaa_)\n     \\<in> {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r_)};\n     (eqa_, st'a_) \\<in> code_status_status_rel;\n     \\<not> \\<not> is_cfailed eqa_; \\<not> eqaa_\\<rbrakk>\n    \\<Longrightarrow> ((eqa_, \\<V>, A), FAILED, \\<V>', B)\n                      \\<in> code_status_status_rel \\<times>\\<^sub>r\n                            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                            \\<langle>nat_rel,\n                            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x31 x32 x33 x31a x32a x33a.\n       \\<lbrakk>(x31, x31a) \\<in> nat_rel \\<and>\n                (x32, x32a) \\<in> var_rel \\<and>\n                (x33, x33a) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31 x32 x33; True \\<and> True \\<and> True;\n        st' = Extension x31a x32a x33a;\n        True \\<and> True \\<and> True\\<rbrakk>\n       \\<Longrightarrow> full_normalize_poly\n                          (([new_var (Extension x31 x32 x33)], - 1) #\n                           pac_res (Extension x31 x32 x33)) \\<bind>\n                         (\\<lambda>r.\n                             check_extension_l spec A \\<V>\n                              (new_id (Extension x31 x32 x33))\n                              (new_var (Extension x31 x32 x33)) r \\<bind>\n                             (\\<lambda>eq.\n                                 if \\<not> is_cfailed eq\n                                 then RETURN\n (cst, insert (new_var (Extension x31 x32 x33)) \\<V>,\n  fmupd (new_id (Extension x31 x32 x33)) r A)\n                                 else RETURN (eq, \\<V>, A)))\n                         \\<le> \\<Down>\n                                (code_status_status_rel \\<times>\\<^sub>r\n                                 \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                 \\<langle>nat_rel,\n                                 sorted_poly_rel O\n                                 mset_poly_rel\\<rangle>fmap_rel)\n                                (normalize_poly_spec\n                                  (pac_res (Extension x31a x32a x33a) -\n                                   Var (new_var\n   (Extension x31a x32a x33a))) \\<bind>\n                                 (\\<lambda>r.\n                                     check_extension B \\<V>'\n(new_id (Extension x31a x32a x33a)) (new_var (Extension x31a x32a x33a))\nr \\<bind>\n                                     (\\<lambda>eq.\n   if eq\n   then RETURN\n         (cst', insert (new_var (Extension x31a x32a x33a)) \\<V>',\n          fmupd (new_id (Extension x31a x32a x33a)) r B)\n   else RETURN (FAILED, \\<V>', B))))\n 2. \\<And>x4 x4a.\n       \\<lbrakk>(x4, x4a) \\<in> nat_rel; st = Del x4; True; st' = Del x4a;\n        True\\<rbrakk>\n       \\<Longrightarrow> check_del_l spec A (pac_src1 (Del x4)) \\<bind>\n                         (\\<lambda>eq.\n                             let _ = eq\n                             in if \\<not> is_cfailed eq\n                                then RETURN\n(merge_cstatus cst eq, \\<V>, fmdrop (pac_src1 (Del x4)) A)\n                                else RETURN (eq, \\<V>, A))\n                         \\<le> \\<Down>\n                                (code_status_status_rel \\<times>\\<^sub>r\n                                 \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                 \\<langle>nat_rel,\n                                 sorted_poly_rel O\n                                 mset_poly_rel\\<rangle>fmap_rel)\n                                (check_del B (pac_src1 (Del x4a)) \\<bind>\n                                 (\\<lambda>eq.\n                                     if eq\n                                     then RETURN\n     (cst', \\<V>', fmdrop (pac_src1 (Del x4a)) B)\n                                     else RETURN (FAILED, \\<V>', B)))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n             (x32_, x32a_) \\<in> var_rel \\<and>\n             (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n     st' = Extension x31a_ x32a_ x33a_;\n     True \\<and> True \\<and> True\\<rbrakk>\n    \\<Longrightarrow> full_normalize_poly\n                       (([new_var (Extension x31_ x32_ x33_)], - 1) #\n                        pac_res (Extension x31_ x32_ x33_)) \\<bind>\n                      (\\<lambda>r.\n                          check_extension_l spec A \\<V>\n                           (new_id (Extension x31_ x32_ x33_))\n                           (new_var (Extension x31_ x32_ x33_)) r \\<bind>\n                          (\\<lambda>eq.\n                              if \\<not> is_cfailed eq\n                              then RETURN\n                                    (cst,\n                                     insert\n(new_var (Extension x31_ x32_ x33_)) \\<V>,\n                                     fmupd\n(new_id (Extension x31_ x32_ x33_)) r A)\n                              else RETURN (eq, \\<V>, A)))\n                      \\<le> \\<Down>\n                             (code_status_status_rel \\<times>\\<^sub>r\n                              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                              \\<langle>nat_rel,\n                              sorted_poly_rel O\n                              mset_poly_rel\\<rangle>fmap_rel)\n                             (normalize_poly_spec\n                               (pac_res (Extension x31a_ x32a_ x33a_) -\n                                Var (new_var\n(Extension x31a_ x32a_ x33a_))) \\<bind>\n                              (\\<lambda>r.\n                                  check_extension B \\<V>'\n                                   (new_id (Extension x31a_ x32a_ x33a_))\n                                   (new_var (Extension x31a_ x32a_ x33a_))\n                                   r \\<bind>\n                                  (\\<lambda>eq.\nif eq\nthen RETURN\n      (cst', insert (new_var (Extension x31a_ x32a_ x33a_)) \\<V>',\n       fmupd (new_id (Extension x31a_ x32a_ x33a_)) r B)\nelse RETURN (FAILED, \\<V>', B))))", "apply (refine_rcg full_normalize_poly_diff_ideal\n        check_extension_l_check_extension)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n             (x32_, x32a_) \\<in> var_rel \\<and>\n             (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n     st' = Extension x31a_ x32a_ x33a_;\n     True \\<and> True \\<and> True\\<rbrakk>\n    \\<Longrightarrow> (([new_var (Extension x31_ x32_ x33_)], - 1) #\n                       pac_res (Extension x31_ x32_ x33_),\n                       pac_res (Extension x31a_ x32a_ x33a_) -\n                       Var (new_var (Extension x31a_ x32a_ x33a_)))\n                      \\<in> fully_unsorted_poly_rel O mset_poly_rel\n 2. \\<And>r ra.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (A, B) \\<in> \\<langle>nat_rel,\n                         sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n 3. \\<And>r ra.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (new_id (Extension x31_ x32_ x33_),\n                          new_id (Extension x31a_ x32a_ x33a_))\n                         \\<in> nat_rel\n 4. \\<And>r ra.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<V>, \\<V>')\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel\n 5. \\<And>r ra.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (new_var (Extension x31_ x32_ x33_),\n                          new_var (Extension x31a_ x32a_ x33a_))\n                         \\<in> var_rel\n 6. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 7. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        \\<not> is_cfailed eqa; eqaa\\<rbrakk>\n       \\<Longrightarrow> ((cst,\n                           insert (new_var (Extension x31_ x32_ x33_)) \\<V>,\n                           fmupd (new_id (Extension x31_ x32_ x33_)) r A),\n                          cst',\n                          insert (new_var (Extension x31a_ x32a_ x33a_))\n                           \\<V>',\n                          fmupd (new_id (Extension x31a_ x32a_ x33a_)) ra B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 8. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n             (x32_, x32a_) \\<in> var_rel \\<and>\n             (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n     st' = Extension x31a_ x32a_ x33a_;\n     True \\<and> True \\<and> True\\<rbrakk>\n    \\<Longrightarrow> (([new_var (Extension x31_ x32_ x33_)], - 1) #\n                       pac_res (Extension x31_ x32_ x33_),\n                       pac_res (Extension x31a_ x32a_ x33a_) -\n                       Var (new_var (Extension x31a_ x32a_ x33a_)))\n                      \\<in> fully_unsorted_poly_rel O mset_poly_rel", "using AB"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (cst, cst') \\<in> code_status_status_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n             (x32_, x32a_) \\<in> var_rel \\<and>\n             (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n     st' = Extension x31a_ x32a_ x33a_;\n     True \\<and> True \\<and> True\\<rbrakk>\n    \\<Longrightarrow> (([new_var (Extension x31_ x32_ x33_)], - 1) #\n                       pac_res (Extension x31_ x32_ x33_),\n                       pac_res (Extension x31a_ x32a_ x33a_) -\n                       Var (new_var (Extension x31a_ x32a_ x33a_)))\n                      \\<in> fully_unsorted_poly_rel O mset_poly_rel", "by (auto intro!: fully_unsorted_poly_rel_diff[of _ \\<open>-Var _ :: int mpoly\\<close>, unfolded H3[symmetric]] simp: comp_def case_prod_beta)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>r ra.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (A, B) \\<in> \\<langle>nat_rel,\n                         sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n 2. \\<And>r ra.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (new_id (Extension x31_ x32_ x33_),\n                          new_id (Extension x31a_ x32a_ x33a_))\n                         \\<in> nat_rel\n 3. \\<And>r ra.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<V>, \\<V>')\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel\n 4. \\<And>r ra.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (new_var (Extension x31_ x32_ x33_),\n                          new_var (Extension x31a_ x32a_ x33a_))\n                         \\<in> var_rel\n 5. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 6. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        \\<not> is_cfailed eqa; eqaa\\<rbrakk>\n       \\<Longrightarrow> ((cst,\n                           insert (new_var (Extension x31_ x32_ x33_)) \\<V>,\n                           fmupd (new_id (Extension x31_ x32_ x33_)) r A),\n                          cst',\n                          insert (new_var (Extension x31a_ x32a_ x33a_))\n                           \\<V>',\n                          fmupd (new_id (Extension x31a_ x32a_ x33a_)) ra B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 7. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n             (x32_, x32a_) \\<in> var_rel \\<and>\n             (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n     st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (A, B) \\<in> \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "using AB"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (cst, cst') \\<in> code_status_status_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n             (x32_, x32a_) \\<in> var_rel \\<and>\n             (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n     st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (A, B) \\<in> \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by auto"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>r ra.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (new_id (Extension x31_ x32_ x33_),\n                          new_id (Extension x31a_ x32a_ x33a_))\n                         \\<in> nat_rel\n 2. \\<And>r ra.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<V>, \\<V>')\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel\n 3. \\<And>r ra.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (new_var (Extension x31_ x32_ x33_),\n                          new_var (Extension x31a_ x32a_ x33a_))\n                         \\<in> var_rel\n 4. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 5. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        \\<not> is_cfailed eqa; eqaa\\<rbrakk>\n       \\<Longrightarrow> ((cst,\n                           insert (new_var (Extension x31_ x32_ x33_)) \\<V>,\n                           fmupd (new_id (Extension x31_ x32_ x33_)) r A),\n                          cst',\n                          insert (new_var (Extension x31a_ x32a_ x33a_))\n                           \\<V>',\n                          fmupd (new_id (Extension x31a_ x32a_ x33a_)) ra B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 6. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n             (x32_, x32a_) \\<in> var_rel \\<and>\n             (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n     st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (new_id (Extension x31_ x32_ x33_),\n                       new_id (Extension x31a_ x32a_ x33a_))\n                      \\<in> nat_rel", "using AB"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (cst, cst') \\<in> code_status_status_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n             (x32_, x32a_) \\<in> var_rel \\<and>\n             (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n     st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (new_id (Extension x31_ x32_ x33_),\n                       new_id (Extension x31a_ x32a_ x33a_))\n                      \\<in> nat_rel", "by auto"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>r ra.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (\\<V>, \\<V>')\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel\n 2. \\<And>r ra.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (new_var (Extension x31_ x32_ x33_),\n                          new_var (Extension x31a_ x32a_ x33a_))\n                         \\<in> var_rel\n 3. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 4. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        \\<not> is_cfailed eqa; eqaa\\<rbrakk>\n       \\<Longrightarrow> ((cst,\n                           insert (new_var (Extension x31_ x32_ x33_)) \\<V>,\n                           fmupd (new_id (Extension x31_ x32_ x33_)) r A),\n                          cst',\n                          insert (new_var (Extension x31a_ x32a_ x33a_))\n                           \\<V>',\n                          fmupd (new_id (Extension x31a_ x32a_ x33a_)) ra B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 5. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n             (x32_, x32a_) \\<in> var_rel \\<and>\n             (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n     st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel", "by auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>r ra.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n       \\<Longrightarrow> (new_var (Extension x31_ x32_ x33_),\n                          new_var (Extension x31a_ x32a_ x33a_))\n                         \\<in> var_rel\n 2. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 3. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        \\<not> is_cfailed eqa; eqaa\\<rbrakk>\n       \\<Longrightarrow> ((cst,\n                           insert (new_var (Extension x31_ x32_ x33_)) \\<V>,\n                           fmupd (new_id (Extension x31_ x32_ x33_)) r A),\n                          cst',\n                          insert (new_var (Extension x31a_ x32a_ x33a_))\n                           \\<V>',\n                          fmupd (new_id (Extension x31a_ x32a_ x33a_)) ra B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 4. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n             (x32_, x32a_) \\<in> var_rel \\<and>\n             (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n     st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> (new_var (Extension x31_ x32_ x33_),\n                       new_var (Extension x31a_ x32a_ x33a_))\n                      \\<in> var_rel", "by auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)}\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 2. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        \\<not> is_cfailed eqa; eqaa\\<rbrakk>\n       \\<Longrightarrow> ((cst,\n                           insert (new_var (Extension x31_ x32_ x33_)) \\<V>,\n                           fmupd (new_id (Extension x31_ x32_ x33_)) r A),\n                          cst',\n                          insert (new_var (Extension x31a_ x32a_ x33a_))\n                           \\<V>',\n                          fmupd (new_id (Extension x31a_ x32a_ x33a_)) ra B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 3. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n             (x32_, x32a_) \\<in> var_rel \\<and>\n             (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n     st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (eqa_, eqaa_)\n     \\<in> {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r_)}\\<rbrakk>\n    \\<Longrightarrow> (\\<not> is_cfailed eqa_) = eqaa_", "by (auto simp: code_status_status_rel_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        \\<not> is_cfailed eqa; eqaa\\<rbrakk>\n       \\<Longrightarrow> ((cst,\n                           insert (new_var (Extension x31_ x32_ x33_)) \\<V>,\n                           fmupd (new_id (Extension x31_ x32_ x33_)) r A),\n                          cst',\n                          insert (new_var (Extension x31a_ x32a_ x33a_))\n                           \\<V>',\n                          fmupd (new_id (Extension x31a_ x32a_ x33a_)) ra B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 2. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n             (x32_, x32a_) \\<in> var_rel \\<and>\n             (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n     st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (eqa_, eqaa_)\n     \\<in> {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r_)};\n     \\<not> is_cfailed eqa_; eqaa_\\<rbrakk>\n    \\<Longrightarrow> ((cst,\n                        insert (new_var (Extension x31_ x32_ x33_)) \\<V>,\n                        fmupd (new_id (Extension x31_ x32_ x33_)) r_ A),\n                       cst',\n                       insert (new_var (Extension x31a_ x32a_ x33a_)) \\<V>',\n                       fmupd (new_id (Extension x31a_ x32a_ x33a_)) ra_ B)\n                      \\<in> code_status_status_rel \\<times>\\<^sub>r\n                            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                            \\<langle>nat_rel,\n                            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by (auto simp: AB\n          intro!: fmap_rel_fmupd_fmap_rel insert_var_rel_set_rel)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r ra eqa eqaa.\n       \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n                (x32_, x32a_) \\<in> var_rel \\<and>\n                (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n        st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n        st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n        (r, ra) \\<in> sorted_poly_rel O mset_poly_rel;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (is_cfound st \\<longrightarrow> spec = r)};\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x31_, x31a_) \\<in> nat_rel \\<and>\n             (x32_, x32a_) \\<in> var_rel \\<and>\n             (x33_, x33a_) \\<in> fully_unsorted_poly_rel O mset_poly_rel;\n     st = Extension x31_ x32_ x33_; True \\<and> True \\<and> True;\n     st' = Extension x31a_ x32a_ x33a_; True \\<and> True \\<and> True;\n     (r_, ra_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (eqa_, eqaa_)\n     \\<in> {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (is_cfound st \\<longrightarrow> spec = r_)};\n     \\<not> \\<not> is_cfailed eqa_; \\<not> eqaa_\\<rbrakk>\n    \\<Longrightarrow> ((eqa_, \\<V>, A), FAILED, \\<V>', B)\n                      \\<in> code_status_status_rel \\<times>\\<^sub>r\n                            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                            \\<langle>nat_rel,\n                            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by (auto simp: code_status_status_rel_def AB\n          code_status.is_cfailed_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x4 x4a.\n       \\<lbrakk>(x4, x4a) \\<in> nat_rel; st = Del x4; True; st' = Del x4a;\n        True\\<rbrakk>\n       \\<Longrightarrow> check_del_l spec A (pac_src1 (Del x4)) \\<bind>\n                         (\\<lambda>eq.\n                             let _ = eq\n                             in if \\<not> is_cfailed eq\n                                then RETURN\n(merge_cstatus cst eq, \\<V>, fmdrop (pac_src1 (Del x4)) A)\n                                else RETURN (eq, \\<V>, A))\n                         \\<le> \\<Down>\n                                (code_status_status_rel \\<times>\\<^sub>r\n                                 \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                 \\<langle>nat_rel,\n                                 sorted_poly_rel O\n                                 mset_poly_rel\\<rangle>fmap_rel)\n                                (check_del B (pac_src1 (Del x4a)) \\<bind>\n                                 (\\<lambda>eq.\n                                     if eq\n                                     then RETURN\n     (cst', \\<V>', fmdrop (pac_src1 (Del x4a)) B)\n                                     else RETURN (FAILED, \\<V>', B)))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x4_, x4a_) \\<in> nat_rel; st = Del x4_; True; st' = Del x4a_;\n     True\\<rbrakk>\n    \\<Longrightarrow> check_del_l spec A (pac_src1 (Del x4_)) \\<bind>\n                      (\\<lambda>eq.\n                          let _ = eq\n                          in if \\<not> is_cfailed eq\n                             then RETURN\n                                   (merge_cstatus cst eq, \\<V>,\n                                    fmdrop (pac_src1 (Del x4_)) A)\n                             else RETURN (eq, \\<V>, A))\n                      \\<le> \\<Down>\n                             (code_status_status_rel \\<times>\\<^sub>r\n                              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                              \\<langle>nat_rel,\n                              sorted_poly_rel O\n                              mset_poly_rel\\<rangle>fmap_rel)\n                             (check_del B (pac_src1 (Del x4a_)) \\<bind>\n                              (\\<lambda>eq.\n                                  if eq\n                                  then RETURN\n  (cst', \\<V>', fmdrop (pac_src1 (Del x4a_)) B)\n                                  else RETURN (FAILED, \\<V>', B)))", "apply (refine_rcg normalize_poly_normalize_poly_spec\n        check_del_l_check_del check_addition_l_check_add\n        full_normalize_poly_diff_ideal[unfolded normalize_poly_spec_def[symmetric]])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>(x4_, x4a_) \\<in> nat_rel; st = Del x4_; True; st' = Del x4a_;\n     True\\<rbrakk>\n    \\<Longrightarrow> (A, B) \\<in> \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n 2. \\<And>eqa eqaa.\n       \\<lbrakk>(x4_, x4a_) \\<in> nat_rel; st = Del x4_; True;\n        st' = Del x4a_; True;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (b \\<longrightarrow> st = CSUCCESS)}\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 3. \\<And>eqa eqaa.\n       \\<lbrakk>(x4_, x4a_) \\<in> nat_rel; st = Del x4_; True;\n        st' = Del x4a_; True;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (b \\<longrightarrow> st = CSUCCESS)};\n        \\<not> is_cfailed eqa; eqaa\\<rbrakk>\n       \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                           fmdrop (pac_src1 (Del x4_)) A),\n                          cst', \\<V>', fmdrop (pac_src1 (Del x4a_)) B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 4. \\<And>eqa eqaa.\n       \\<lbrakk>(x4_, x4a_) \\<in> nat_rel; st = Del x4_; True;\n        st' = Del x4a_; True;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (b \\<longrightarrow> st = CSUCCESS)};\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x4_, x4a_) \\<in> nat_rel; st = Del x4_; True; st' = Del x4a_;\n     True\\<rbrakk>\n    \\<Longrightarrow> (A, B) \\<in> \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "using AB"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (cst, cst') \\<in> code_status_status_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x4_, x4a_) \\<in> nat_rel; st = Del x4_; True; st' = Del x4a_;\n     True\\<rbrakk>\n    \\<Longrightarrow> (A, B) \\<in> \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>eqa eqaa.\n       \\<lbrakk>(x4_, x4a_) \\<in> nat_rel; st = Del x4_; True;\n        st' = Del x4a_; True;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (b \\<longrightarrow> st = CSUCCESS)}\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed eqa) = eqaa\n 2. \\<And>eqa eqaa.\n       \\<lbrakk>(x4_, x4a_) \\<in> nat_rel; st = Del x4_; True;\n        st' = Del x4a_; True;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (b \\<longrightarrow> st = CSUCCESS)};\n        \\<not> is_cfailed eqa; eqaa\\<rbrakk>\n       \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                           fmdrop (pac_src1 (Del x4_)) A),\n                          cst', \\<V>', fmdrop (pac_src1 (Del x4a_)) B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 3. \\<And>eqa eqaa.\n       \\<lbrakk>(x4_, x4a_) \\<in> nat_rel; st = Del x4_; True;\n        st' = Del x4a_; True;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (b \\<longrightarrow> st = CSUCCESS)};\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x4_, x4a_) \\<in> nat_rel; st = Del x4_; True; st' = Del x4a_;\n     True;\n     (eqa_, eqaa_)\n     \\<in> {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (b \\<longrightarrow> st = CSUCCESS)}\\<rbrakk>\n    \\<Longrightarrow> (\\<not> is_cfailed eqa_) = eqaa_", "using AB"], ["proof (prove)\nusing this:\n  (A, B) \\<in> \\<langle>nat_rel,\n  sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (cst, cst') \\<in> code_status_status_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x4_, x4a_) \\<in> nat_rel; st = Del x4_; True; st' = Del x4a_;\n     True;\n     (eqa_, eqaa_)\n     \\<in> {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (b \\<longrightarrow> st = CSUCCESS)}\\<rbrakk>\n    \\<Longrightarrow> (\\<not> is_cfailed eqa_) = eqaa_", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>eqa eqaa.\n       \\<lbrakk>(x4_, x4a_) \\<in> nat_rel; st = Del x4_; True;\n        st' = Del x4a_; True;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (b \\<longrightarrow> st = CSUCCESS)};\n        \\<not> is_cfailed eqa; eqaa\\<rbrakk>\n       \\<Longrightarrow> ((merge_cstatus cst eqa, \\<V>,\n                           fmdrop (pac_src1 (Del x4_)) A),\n                          cst', \\<V>', fmdrop (pac_src1 (Del x4a_)) B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 2. \\<And>eqa eqaa.\n       \\<lbrakk>(x4_, x4a_) \\<in> nat_rel; st = Del x4_; True;\n        st' = Del x4a_; True;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (b \\<longrightarrow> st = CSUCCESS)};\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x4_, x4a_) \\<in> nat_rel; st = Del x4_; True; st' = Del x4a_;\n     True;\n     (eqa_, eqaa_)\n     \\<in> {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (b \\<longrightarrow> st = CSUCCESS)};\n     \\<not> is_cfailed eqa_; eqaa_\\<rbrakk>\n    \\<Longrightarrow> ((merge_cstatus cst eqa_, \\<V>,\n                        fmdrop (pac_src1 (Del x4_)) A),\n                       cst', \\<V>', fmdrop (pac_src1 (Del x4a_)) B)\n                      \\<in> code_status_status_rel \\<times>\\<^sub>r\n                            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                            \\<langle>nat_rel,\n                            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by (auto intro!: fmap_rel_fmupd_fmap_rel\n          fmap_rel_fmdrop_fmap_rel code_status_status_rel_def AB)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>eqa eqaa.\n       \\<lbrakk>(x4_, x4a_) \\<in> nat_rel; st = Del x4_; True;\n        st' = Del x4a_; True;\n        (eqa, eqaa)\n        \\<in> {(st, b).\n               (\\<not> is_cfailed st) = b \\<and>\n               (b \\<longrightarrow> st = CSUCCESS)};\n        \\<not> \\<not> is_cfailed eqa; \\<not> eqaa\\<rbrakk>\n       \\<Longrightarrow> ((eqa, \\<V>, A), FAILED, \\<V>', B)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x4_, x4a_) \\<in> nat_rel; st = Del x4_; True; st' = Del x4a_;\n     True;\n     (eqa_, eqaa_)\n     \\<in> {(st, b).\n            (\\<not> is_cfailed st) = b \\<and>\n            (b \\<longrightarrow> st = CSUCCESS)};\n     \\<not> \\<not> is_cfailed eqa_; \\<not> eqaa_\\<rbrakk>\n    \\<Longrightarrow> ((eqa_, \\<V>, A), FAILED, \\<V>', B)\n                      \\<in> code_status_status_rel \\<times>\\<^sub>r\n                            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                            \\<langle>nat_rel,\n                            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by (auto intro!: fmap_rel_fmupd_fmap_rel\n          fmap_rel_fmdrop_fmap_rel AB)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  PAC_checker_l_step spec Ast st\n  \\<le> \\<Down>\n         (code_status_status_rel \\<times>\\<^sub>r\n          \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n          \\<langle>nat_rel,\n          sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n         (PAC_checker_step spec' Bst st')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma code_status_status_rel_discrim_iff:\n  \\<open>(x1a, x1c) \\<in> code_status_status_rel \\<Longrightarrow> is_cfailed x1a \\<longleftrightarrow> is_failed x1c\\<close>\n  \\<open>(x1a, x1c) \\<in> code_status_status_rel \\<Longrightarrow> is_cfound x1a \\<longleftrightarrow> is_found x1c\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x1a, x1c) \\<in> code_status_status_rel \\<Longrightarrow>\n     is_cfailed x1a = is_failed x1c) &&&\n    ((x1a, x1c) \\<in> code_status_status_rel \\<Longrightarrow>\n     is_cfound x1a = is_found x1c)", "by (cases x1a; cases x1c; auto; fail)+"], ["", "lemma PAC_checker_l_PAC_checker:\n  assumes\n    \\<open>(A, B) \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r fmap_polys_rel\\<close> and\n    \\<open>(st, st') \\<in> \\<langle>pac_step_rel\\<rangle>list_rel\\<close> and\n    \\<open>(spec, spec') \\<in> sorted_poly_rel O mset_poly_rel\\<close> and\n    \\<open>(b, b') \\<in> code_status_status_rel\\<close>\n  shows\n    \\<open>PAC_checker_l spec A b st \\<le> \\<Down> (code_status_status_rel \\<times>\\<^sub>r \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r fmap_polys_rel) (PAC_checker spec' B b' st')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. PAC_checker_l spec A b st\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (PAC_checker spec' B b' st')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. PAC_checker_l spec A b st\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (PAC_checker spec' B b' st')", "have [refine0]: \\<open>(((b, A), st), (b', B), st') \\<in> ((code_status_status_rel \\<times>\\<^sub>r \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r fmap_polys_rel) \\<times>\\<^sub>r  \\<langle>pac_step_rel\\<rangle>list_rel)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (((b, A), st), (b', B), st')\n    \\<in> (code_status_status_rel \\<times>\\<^sub>r\n           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           sorted_poly_rel O\n           mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n          \\<langle>p2rel\n                    (\\<langle>nat_rel,\n                     fully_unsorted_poly_rel O mset_poly_rel,\n                     var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel", "using assms"], ["proof (prove)\nusing this:\n  (A, B)\n  \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r \\<langle>nat_rel,\n        sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (st, st')\n  \\<in> \\<langle>p2rel\n                  (\\<langle>nat_rel,\n                   fully_unsorted_poly_rel O mset_poly_rel,\n                   var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\n  (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel\n  (b, b') \\<in> code_status_status_rel\n\ngoal (1 subgoal):\n 1. (((b, A), st), (b', B), st')\n    \\<in> (code_status_status_rel \\<times>\\<^sub>r\n           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           sorted_poly_rel O\n           mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n          \\<langle>p2rel\n                    (\\<langle>nat_rel,\n                     fully_unsorted_poly_rel O mset_poly_rel,\n                     var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel", "by (auto simp: code_status_status_rel_def)"], ["proof (state)\nthis:\n  (((b, A), st), (b', B), st')\n  \\<in> (code_status_status_rel \\<times>\\<^sub>r\n         \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r \\<langle>nat_rel,\n         sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n        \\<langle>p2rel\n                  (\\<langle>nat_rel,\n                   fully_unsorted_poly_rel O mset_poly_rel,\n                   var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. PAC_checker_l spec A b st\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (PAC_checker spec' B b' st')", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. PAC_checker_l spec A b st\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (PAC_checker spec' B b' st')", "using assms"], ["proof (prove)\nusing this:\n  (A, B)\n  \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r \\<langle>nat_rel,\n        sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (st, st')\n  \\<in> \\<langle>p2rel\n                  (\\<langle>nat_rel,\n                   fully_unsorted_poly_rel O mset_poly_rel,\n                   var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\n  (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel\n  (b, b') \\<in> code_status_status_rel\n\ngoal (1 subgoal):\n 1. PAC_checker_l spec A b st\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (PAC_checker spec' B b' st')", "unfolding PAC_checker_l_def PAC_checker_def"], ["proof (prove)\nusing this:\n  (A, B)\n  \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r \\<langle>nat_rel,\n        sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\n  (st, st')\n  \\<in> \\<langle>p2rel\n                  (\\<langle>nat_rel,\n                   fully_unsorted_poly_rel O mset_poly_rel,\n                   var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\n  (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel\n  (b, b') \\<in> code_status_status_rel\n\ngoal (1 subgoal):\n 1. WHILE\\<^sub>T\n     (\\<lambda>((b, A), n). \\<not> is_cfailed b \\<and> n \\<noteq> [])\n     (\\<lambda>(bA, n).\n         ASSERT (n \\<noteq> []) \\<bind>\n         (\\<lambda>_.\n             PAC_checker_l_step spec bA (lead_coeff n) \\<bind>\n             (\\<lambda>S. RETURN (S, tl n))))\n     ((b, A), st) \\<bind>\n    (\\<lambda>(S, uu_). RETURN S)\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (WHILE\\<^sub>T\n             (\\<lambda>((b, A), st).\n                 \\<not> is_failed b \\<and> st \\<noteq> [])\n             (\\<lambda>(bA, st).\n                 ASSERT (st \\<noteq> []) \\<bind>\n                 (\\<lambda>_.\n                     PAC_checker_step spec' bA (lead_coeff st) \\<bind>\n                     (\\<lambda>S. RETURN (S, tl st))))\n             ((b', B), st') \\<bind>\n            (\\<lambda>(S, uu_). RETURN S))", "apply (refine_rcg PAC_checker_l_step_PAC_checker_step\n      WHILEIT_refine[where R = \\<open>((bool_rel \\<times>\\<^sub>r \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r fmap_polys_rel) \\<times>\\<^sub>r \\<langle>pac_step_rel\\<rangle>list_rel)\\<close>])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x x' x1 x1a x2 x2a x1b x1c x2b x2c.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        x1 = (x1a, x2); x = (x1, x2a); x1b = (x1c, x2b);\n        x' = (x1b, x2c)\\<rbrakk>\n       \\<Longrightarrow> (\\<not> is_cfailed x1a \\<and> x2a \\<noteq> []) =\n                         (\\<not> is_failed x1c \\<and> x2c \\<noteq> [])\n 2. \\<And>x x' x1 x2 x1a x2a.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        case x of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>n. \\<not> is_cfailed b \\<and> n \\<noteq> [])\n           xa;\n        case x' of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        x' = (x1, x2); x = (x1a, x2a); x2 \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> x2a \\<noteq> []\n 3. \\<And>x x' x1 x2 x1a x2a.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        case x of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>n. \\<not> is_cfailed b \\<and> n \\<noteq> [])\n           xa;\n        case x' of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        x' = (x1, x2); x = (x1a, x2a); x2 \\<noteq> [];\n        x2a \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (x1a, x1)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 4. \\<And>x x' x1 x2 x1a x2a.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        case x of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>n. \\<not> is_cfailed b \\<and> n \\<noteq> [])\n           xa;\n        case x' of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        x' = (x1, x2); x = (x1a, x2a); x2 \\<noteq> [];\n        x2a \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (lead_coeff x2a, lead_coeff x2)\n                         \\<in> p2rel\n                                (\\<langle>nat_rel,\n                                 fully_unsorted_poly_rel O mset_poly_rel,\n                                 var_rel\\<rangle>pac_step_rel_raw)\n 5. \\<And>x x' x1 x2 x1a x2a S Sa.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        case x of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>n. \\<not> is_cfailed b \\<and> n \\<noteq> [])\n           xa;\n        case x' of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        x' = (x1, x2); x = (x1a, x2a); x2 \\<noteq> []; x2a \\<noteq> [];\n        (S, Sa)\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\\<rbrakk>\n       \\<Longrightarrow> ((S, tl x2a), Sa, tl x2)\n                         \\<in> (code_status_status_rel \\<times>\\<^sub>r\n                                \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                \\<langle>nat_rel,\n                                sorted_poly_rel O\n                                mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n                               \\<langle>p2rel\n   (\\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel,\n    var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\n 6. \\<And>x x' x1 x2 x1a x2a.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        x' = (x1, x2); x = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> (x1a, x1)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B)\n             \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                   \\<langle>nat_rel,\n                   sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (st, st')\n     \\<in> \\<langle>p2rel\n                     (\\<langle>nat_rel,\n                      fully_unsorted_poly_rel O mset_poly_rel,\n                      var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (b, b') \\<in> code_status_status_rel;\n     (x_, x'_)\n     \\<in> (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O\n            mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n           \\<langle>p2rel\n                     (\\<langle>nat_rel,\n                      fully_unsorted_poly_rel O mset_poly_rel,\n                      var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n     x1_ = (x1a_, x2_); x_ = (x1_, x2a_); x1b_ = (x1c_, x2b_);\n     x'_ = (x1b_, x2c_)\\<rbrakk>\n    \\<Longrightarrow> (\\<not> is_cfailed x1a_ \\<and> x2a_ \\<noteq> []) =\n                      (\\<not> is_failed x1c_ \\<and> x2c_ \\<noteq> [])", "by (auto simp: code_status_status_rel_discrim_iff)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x x' x1 x2 x1a x2a.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        case x of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>n. \\<not> is_cfailed b \\<and> n \\<noteq> [])\n           xa;\n        case x' of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        x' = (x1, x2); x = (x1a, x2a); x2 \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> x2a \\<noteq> []\n 2. \\<And>x x' x1 x2 x1a x2a.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        case x of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>n. \\<not> is_cfailed b \\<and> n \\<noteq> [])\n           xa;\n        case x' of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        x' = (x1, x2); x = (x1a, x2a); x2 \\<noteq> [];\n        x2a \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (x1a, x1)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 3. \\<And>x x' x1 x2 x1a x2a.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        case x of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>n. \\<not> is_cfailed b \\<and> n \\<noteq> [])\n           xa;\n        case x' of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        x' = (x1, x2); x = (x1a, x2a); x2 \\<noteq> [];\n        x2a \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (lead_coeff x2a, lead_coeff x2)\n                         \\<in> p2rel\n                                (\\<langle>nat_rel,\n                                 fully_unsorted_poly_rel O mset_poly_rel,\n                                 var_rel\\<rangle>pac_step_rel_raw)\n 4. \\<And>x x' x1 x2 x1a x2a S Sa.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        case x of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>n. \\<not> is_cfailed b \\<and> n \\<noteq> [])\n           xa;\n        case x' of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        x' = (x1, x2); x = (x1a, x2a); x2 \\<noteq> []; x2a \\<noteq> [];\n        (S, Sa)\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\\<rbrakk>\n       \\<Longrightarrow> ((S, tl x2a), Sa, tl x2)\n                         \\<in> (code_status_status_rel \\<times>\\<^sub>r\n                                \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                \\<langle>nat_rel,\n                                sorted_poly_rel O\n                                mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n                               \\<langle>p2rel\n   (\\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel,\n    var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\n 5. \\<And>x x' x1 x2 x1a x2a.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        x' = (x1, x2); x = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> (x1a, x1)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B)\n             \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                   \\<langle>nat_rel,\n                   sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (st, st')\n     \\<in> \\<langle>p2rel\n                     (\\<langle>nat_rel,\n                      fully_unsorted_poly_rel O mset_poly_rel,\n                      var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (b, b') \\<in> code_status_status_rel;\n     (x_, x'_)\n     \\<in> (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O\n            mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n           \\<langle>p2rel\n                     (\\<langle>nat_rel,\n                      fully_unsorted_poly_rel O mset_poly_rel,\n                      var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n     case x_ of\n     (x, xa) \\<Rightarrow>\n       (case x of\n        (b, A) \\<Rightarrow>\n          \\<lambda>n. \\<not> is_cfailed b \\<and> n \\<noteq> [])\n        xa;\n     case x'_ of\n     (x, xa) \\<Rightarrow>\n       (case x of\n        (b, A) \\<Rightarrow>\n          \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n        xa;\n     x'_ = (x1_, x2_); x_ = (x1a_, x2a_); x2_ \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> x2a_ \\<noteq> []", "by auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x x' x1 x2 x1a x2a.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        case x of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>n. \\<not> is_cfailed b \\<and> n \\<noteq> [])\n           xa;\n        case x' of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        x' = (x1, x2); x = (x1a, x2a); x2 \\<noteq> [];\n        x2a \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (x1a, x1)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 2. \\<And>x x' x1 x2 x1a x2a.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        case x of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>n. \\<not> is_cfailed b \\<and> n \\<noteq> [])\n           xa;\n        case x' of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        x' = (x1, x2); x = (x1a, x2a); x2 \\<noteq> [];\n        x2a \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (lead_coeff x2a, lead_coeff x2)\n                         \\<in> p2rel\n                                (\\<langle>nat_rel,\n                                 fully_unsorted_poly_rel O mset_poly_rel,\n                                 var_rel\\<rangle>pac_step_rel_raw)\n 3. \\<And>x x' x1 x2 x1a x2a S Sa.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        case x of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>n. \\<not> is_cfailed b \\<and> n \\<noteq> [])\n           xa;\n        case x' of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        x' = (x1, x2); x = (x1a, x2a); x2 \\<noteq> []; x2a \\<noteq> [];\n        (S, Sa)\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\\<rbrakk>\n       \\<Longrightarrow> ((S, tl x2a), Sa, tl x2)\n                         \\<in> (code_status_status_rel \\<times>\\<^sub>r\n                                \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                \\<langle>nat_rel,\n                                sorted_poly_rel O\n                                mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n                               \\<langle>p2rel\n   (\\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel,\n    var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\n 4. \\<And>x x' x1 x2 x1a x2a.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        x' = (x1, x2); x = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> (x1a, x1)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B)\n             \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                   \\<langle>nat_rel,\n                   sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (st, st')\n     \\<in> \\<langle>p2rel\n                     (\\<langle>nat_rel,\n                      fully_unsorted_poly_rel O mset_poly_rel,\n                      var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (b, b') \\<in> code_status_status_rel;\n     (x_, x'_)\n     \\<in> (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O\n            mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n           \\<langle>p2rel\n                     (\\<langle>nat_rel,\n                      fully_unsorted_poly_rel O mset_poly_rel,\n                      var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n     case x_ of\n     (x, xa) \\<Rightarrow>\n       (case x of\n        (b, A) \\<Rightarrow>\n          \\<lambda>n. \\<not> is_cfailed b \\<and> n \\<noteq> [])\n        xa;\n     case x'_ of\n     (x, xa) \\<Rightarrow>\n       (case x of\n        (b, A) \\<Rightarrow>\n          \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n        xa;\n     x'_ = (x1_, x2_); x_ = (x1a_, x2a_); x2_ \\<noteq> [];\n     x2a_ \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> (x1a_, x1_)\n                      \\<in> code_status_status_rel \\<times>\\<^sub>r\n                            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                            \\<langle>nat_rel,\n                            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by (auto simp: neq_Nil_conv)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x x' x1 x2 x1a x2a.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        case x of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>n. \\<not> is_cfailed b \\<and> n \\<noteq> [])\n           xa;\n        case x' of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        x' = (x1, x2); x = (x1a, x2a); x2 \\<noteq> [];\n        x2a \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (lead_coeff x2a, lead_coeff x2)\n                         \\<in> p2rel\n                                (\\<langle>nat_rel,\n                                 fully_unsorted_poly_rel O mset_poly_rel,\n                                 var_rel\\<rangle>pac_step_rel_raw)\n 2. \\<And>x x' x1 x2 x1a x2a S Sa.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        case x of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>n. \\<not> is_cfailed b \\<and> n \\<noteq> [])\n           xa;\n        case x' of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        x' = (x1, x2); x = (x1a, x2a); x2 \\<noteq> []; x2a \\<noteq> [];\n        (S, Sa)\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\\<rbrakk>\n       \\<Longrightarrow> ((S, tl x2a), Sa, tl x2)\n                         \\<in> (code_status_status_rel \\<times>\\<^sub>r\n                                \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                \\<langle>nat_rel,\n                                sorted_poly_rel O\n                                mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n                               \\<langle>p2rel\n   (\\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel,\n    var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\n 3. \\<And>x x' x1 x2 x1a x2a.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        x' = (x1, x2); x = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> (x1a, x1)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B)\n             \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                   \\<langle>nat_rel,\n                   sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (st, st')\n     \\<in> \\<langle>p2rel\n                     (\\<langle>nat_rel,\n                      fully_unsorted_poly_rel O mset_poly_rel,\n                      var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (b, b') \\<in> code_status_status_rel;\n     (x_, x'_)\n     \\<in> (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O\n            mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n           \\<langle>p2rel\n                     (\\<langle>nat_rel,\n                      fully_unsorted_poly_rel O mset_poly_rel,\n                      var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n     case x_ of\n     (x, xa) \\<Rightarrow>\n       (case x of\n        (b, A) \\<Rightarrow>\n          \\<lambda>n. \\<not> is_cfailed b \\<and> n \\<noteq> [])\n        xa;\n     case x'_ of\n     (x, xa) \\<Rightarrow>\n       (case x of\n        (b, A) \\<Rightarrow>\n          \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n        xa;\n     x'_ = (x1_, x2_); x_ = (x1a_, x2a_); x2_ \\<noteq> [];\n     x2a_ \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> (lead_coeff x2a_, lead_coeff x2_)\n                      \\<in> p2rel\n                             (\\<langle>nat_rel,\n                              fully_unsorted_poly_rel O mset_poly_rel,\n                              var_rel\\<rangle>pac_step_rel_raw)", "by (auto simp: neq_Nil_conv intro!: param_nth)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x x' x1 x2 x1a x2a S Sa.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        case x of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>n. \\<not> is_cfailed b \\<and> n \\<noteq> [])\n           xa;\n        case x' of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        x' = (x1, x2); x = (x1a, x2a); x2 \\<noteq> []; x2a \\<noteq> [];\n        (S, Sa)\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\\<rbrakk>\n       \\<Longrightarrow> ((S, tl x2a), Sa, tl x2)\n                         \\<in> (code_status_status_rel \\<times>\\<^sub>r\n                                \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                \\<langle>nat_rel,\n                                sorted_poly_rel O\n                                mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n                               \\<langle>p2rel\n   (\\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel,\n    var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\n 2. \\<And>x x' x1 x2 x1a x2a.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        x' = (x1, x2); x = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> (x1a, x1)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B)\n             \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                   \\<langle>nat_rel,\n                   sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (st, st')\n     \\<in> \\<langle>p2rel\n                     (\\<langle>nat_rel,\n                      fully_unsorted_poly_rel O mset_poly_rel,\n                      var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (b, b') \\<in> code_status_status_rel;\n     (x_, x'_)\n     \\<in> (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O\n            mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n           \\<langle>p2rel\n                     (\\<langle>nat_rel,\n                      fully_unsorted_poly_rel O mset_poly_rel,\n                      var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n     case x_ of\n     (x, xa) \\<Rightarrow>\n       (case x of\n        (b, A) \\<Rightarrow>\n          \\<lambda>n. \\<not> is_cfailed b \\<and> n \\<noteq> [])\n        xa;\n     case x'_ of\n     (x, xa) \\<Rightarrow>\n       (case x of\n        (b, A) \\<Rightarrow>\n          \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n        xa;\n     x'_ = (x1_, x2_); x_ = (x1a_, x2a_); x2_ \\<noteq> []; x2a_ \\<noteq> [];\n     (S_, Sa_)\n     \\<in> code_status_status_rel \\<times>\\<^sub>r\n           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\\<rbrakk>\n    \\<Longrightarrow> ((S_, tl x2a_), Sa_, tl x2_)\n                      \\<in> (code_status_status_rel \\<times>\\<^sub>r\n                             \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                             \\<langle>nat_rel,\n                             sorted_poly_rel O\n                             mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n                            \\<langle>p2rel\n(\\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel,\n var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel", "by (auto simp: neq_Nil_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x x' x1 x2 x1a x2a.\n       \\<lbrakk>(A, B)\n                \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                      \\<langle>nat_rel,\n                      sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        (st, st')\n        \\<in> \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n        (b, b') \\<in> code_status_status_rel;\n        (x, x')\n        \\<in> (code_status_status_rel \\<times>\\<^sub>r\n               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               sorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n        x' = (x1, x2); x = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> (x1a, x1)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B)\n             \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                   \\<langle>nat_rel,\n                   sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     (st, st')\n     \\<in> \\<langle>p2rel\n                     (\\<langle>nat_rel,\n                      fully_unsorted_poly_rel O mset_poly_rel,\n                      var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n     (spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (b, b') \\<in> code_status_status_rel;\n     (x_, x'_)\n     \\<in> (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O\n            mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n           \\<langle>p2rel\n                     (\\<langle>nat_rel,\n                      fully_unsorted_poly_rel O mset_poly_rel,\n                      var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n     x'_ = (x1_, x2_); x_ = (x1a_, x2a_)\\<rbrakk>\n    \\<Longrightarrow> (x1a_, x1_)\n                      \\<in> code_status_status_rel \\<times>\\<^sub>r\n                            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                            \\<langle>nat_rel,\n                            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  PAC_checker_l spec A b st\n  \\<le> \\<Down>\n         (code_status_status_rel \\<times>\\<^sub>r\n          \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n          \\<langle>nat_rel,\n          sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n         (PAC_checker spec' B b' st')\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma less_than_char_of_char[code_unfold]:\n  \\<open>(x, y) \\<in> less_than_char \\<longleftrightarrow> (of_char x :: nat) < of_char y\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> less_than_char) = (of_char x < of_char y)", "by (auto simp: less_than_char_def less_char_def)"], ["", "lemmas [code] =\n  add_poly_l'.simps[unfolded var_order_rel_def]"], ["", "export_code add_poly_l' in SML module_name test"], ["", "definition full_checker_l\n  :: \\<open>llist_polynomial \\<Rightarrow> (nat, llist_polynomial) fmap \\<Rightarrow> (_, string, nat) pac_step list \\<Rightarrow>\n    (string code_status \\<times> _) nres\\<close>\nwhere\n  \\<open>full_checker_l spec A st = do {\n    spec' \\<leftarrow> full_normalize_poly spec;\n    (b, \\<V>, A) \\<leftarrow> remap_polys_l spec' {} A;\n    if is_cfailed b\n    then RETURN (b, \\<V>, A)\n    else do {\n      let \\<V> = \\<V> \\<union> vars_llist spec;\n      PAC_checker_l spec' (\\<V>, A) b st\n    }\n  }\\<close>"], ["", "context poly_embed\nbegin"], ["", "term normalize_poly_spec"], ["", "thm full_normalize_poly_diff_ideal[unfolded normalize_poly_spec_def[symmetric]]"], ["", "abbreviation unsorted_fmap_polys_rel where\n  \\<open>unsorted_fmap_polys_rel \\<equiv> \\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel\\<close>"], ["", "lemma full_checker_l_full_checker:\n assumes\n    \\<open>(A, B) \\<in> unsorted_fmap_polys_rel\\<close> and\n    \\<open>(st, st') \\<in> \\<langle>pac_step_rel\\<rangle>list_rel\\<close> and\n    \\<open>(spec, spec') \\<in> fully_unsorted_poly_rel O mset_poly_rel\\<close>\n  shows\n    \\<open>full_checker_l spec A st \\<le> \\<Down> (code_status_status_rel \\<times>\\<^sub>r \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r fmap_polys_rel) (full_checker spec' B st')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. full_checker_l spec A st\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (full_checker spec' B st')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. full_checker_l spec A st\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (full_checker spec' B st')", "have [refine]:\n    \\<open>(spec, spec') \\<in> sorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n    (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel \\<Longrightarrow>\n    remap_polys_l spec \\<V> A \\<le> \\<Down>(code_status_status_rel \\<times>\\<^sub>r \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r fmap_polys_rel)\n        (remap_polys_change_all spec' \\<V>' B)\\<close> for spec spec' \\<V> \\<V>'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> remap_polys_l spec \\<V> A\n                      \\<le> \\<Down>\n                             (code_status_status_rel \\<times>\\<^sub>r\n                              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                              \\<langle>nat_rel,\n                              sorted_poly_rel O\n                              mset_poly_rel\\<rangle>fmap_rel)\n                             (remap_polys_change_all spec' \\<V>' B)", "apply (rule remap_polys_l_remap_polys[THEN order_trans, OF assms(1)])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> (spec, ?spec'1) \\<in> sorted_poly_rel O mset_poly_rel\n 2. \\<lbrakk>(spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> (\\<V>, ?\\<V>'1) \\<in> \\<langle>var_rel\\<rangle>set_rel\n 3. \\<lbrakk>(spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> \\<Down>\n                       (code_status_status_rel \\<times>\\<^sub>r\n                        \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                        \\<langle>nat_rel,\n                        sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n                       (remap_polys ?spec'1 ?\\<V>'1 B)\n                      \\<le> \\<Down>\n                             (code_status_status_rel \\<times>\\<^sub>r\n                              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                              \\<langle>nat_rel,\n                              sorted_poly_rel O\n                              mset_poly_rel\\<rangle>fmap_rel)\n                             (remap_polys_change_all spec' \\<V>' B)", "apply assumption+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> \\<Down>\n                       (code_status_status_rel \\<times>\\<^sub>r\n                        \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                        \\<langle>nat_rel,\n                        sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n                       (remap_polys spec' \\<V>' B)\n                      \\<le> \\<Down>\n                             (code_status_status_rel \\<times>\\<^sub>r\n                              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                              \\<langle>nat_rel,\n                              sorted_poly_rel O\n                              mset_poly_rel\\<rangle>fmap_rel)\n                             (remap_polys_change_all spec' \\<V>' B)", "apply (rule ref_two_step[OF order.refl])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> remap_polys spec' \\<V>' B\n                      \\<le> remap_polys_change_all spec' \\<V>' B", "apply(rule remap_polys_spec[THEN order_trans])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(spec, spec') \\<in> sorted_poly_rel O mset_poly_rel;\n     (\\<V>, \\<V>') \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> remap_polys_polynomial_bool spec' \\<V>' B\n                      \\<le> remap_polys_change_all spec' \\<V>' B", "by (rule remap_polys_polynomial_bool_remap_polys_change_all)"], ["proof (state)\nthis:\n  \\<lbrakk>(?spec3, ?spec'3) \\<in> sorted_poly_rel O mset_poly_rel;\n   (?\\<V>3, ?\\<V>'3) \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n  \\<Longrightarrow> remap_polys_l ?spec3 ?\\<V>3 A\n                    \\<le> \\<Down>\n                           (code_status_status_rel \\<times>\\<^sub>r\n                            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                            \\<langle>nat_rel,\n                            sorted_poly_rel O\n                            mset_poly_rel\\<rangle>fmap_rel)\n                           (remap_polys_change_all ?spec'3 ?\\<V>'3 B)\n\ngoal (1 subgoal):\n 1. full_checker_l spec A st\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (full_checker spec' B st')", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. full_checker_l spec A st\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (full_checker spec' B st')", "unfolding full_checker_l_def full_checker_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. full_normalize_poly spec \\<bind>\n    (\\<lambda>spec'.\n        remap_polys_l spec' {} A \\<bind>\n        (\\<lambda>(b, \\<V>, A).\n            if is_cfailed b then RETURN (b, \\<V>, A)\n            else let \\<V> = \\<V> \\<union> vars_llist spec\n                 in PAC_checker_l spec' (\\<V>, A) b st))\n    \\<le> \\<Down>\n           (code_status_status_rel \\<times>\\<^sub>r\n            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n            \\<langle>nat_rel,\n            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n           (normalize_poly_spec spec' \\<bind>\n            (\\<lambda>spec.\n                remap_polys_change_all spec {} B \\<bind>\n                (\\<lambda>(st, \\<V>, A).\n                    if is_failed st then RETURN (st, \\<V>, A)\n                    else SPEC\n                          ((\\<subseteq>) (\\<V> \\<union> vars spec')) \\<bind>\n                         (\\<lambda>\\<V>.\n                             PAC_checker spec (\\<V>, A) st st'))))", "apply (refine_rcg remap_polys_l_remap_polys\n       full_normalize_poly_diff_ideal[unfolded normalize_poly_spec_def[symmetric]]\n       PAC_checker_l_PAC_checker)"], ["proof (prove)\ngoal (8 subgoals):\n 1. (spec, spec') \\<in> fully_unsorted_poly_rel O mset_poly_rel\n 2. \\<And>spec' spec.\n       (spec', spec) \\<in> sorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n       ({}, {}) \\<in> \\<langle>var_rel\\<rangle>set_rel\n 3. \\<And>spec' spec x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(spec', spec) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c);\n        x = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> is_cfailed x1b = is_failed x1\n 4. \\<And>spec' spec x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(spec', spec) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        is_cfailed x1b; is_failed x1\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 5. \\<And>spec'a speca x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(spec'a, speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> RETURN (x1c \\<union> vars_llist spec)\n                         \\<le> \\<Down>\n                                (?R'61 spec'a speca x x' x1 x2 x1a x2a x1b\n                                  x2b x1c x2c)\n                                (SPEC\n                                  ((\\<subseteq>) (x1a \\<union> vars spec')))\n 6. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> ?R'61 spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c\\<rbrakk>\n       \\<Longrightarrow> ((x1c \\<union> vars_llist spec, x2c), \\<V>, x2a)\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 7. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> ?R'61 spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c\\<rbrakk>\n       \\<Longrightarrow> (st, st')\n                         \\<in> \\<langle>p2rel\n   (\\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel,\n    var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\n 8. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> ?R'61 spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c\\<rbrakk>\n       \\<Longrightarrow> (x1b, x1) \\<in> code_status_status_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (spec, spec') \\<in> fully_unsorted_poly_rel O mset_poly_rel", "using assms(3)"], ["proof (prove)\nusing this:\n  (spec, spec') \\<in> fully_unsorted_poly_rel O mset_poly_rel\n\ngoal (1 subgoal):\n 1. (spec, spec') \\<in> fully_unsorted_poly_rel O mset_poly_rel", "."], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>spec' spec.\n       (spec', spec) \\<in> sorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n       ({}, {}) \\<in> \\<langle>var_rel\\<rangle>set_rel\n 2. \\<And>spec' spec x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(spec', spec) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c);\n        x = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> is_cfailed x1b = is_failed x1\n 3. \\<And>spec' spec x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(spec', spec) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        is_cfailed x1b; is_failed x1\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 4. \\<And>spec'a speca x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(spec'a, speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> RETURN (x1c \\<union> vars_llist spec)\n                         \\<le> \\<Down>\n                                (?R'61 spec'a speca x x' x1 x2 x1a x2a x1b\n                                  x2b x1c x2c)\n                                (SPEC\n                                  ((\\<subseteq>) (x1a \\<union> vars spec')))\n 5. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> ?R'61 spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c\\<rbrakk>\n       \\<Longrightarrow> ((x1c \\<union> vars_llist spec, x2c), \\<V>, x2a)\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 6. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> ?R'61 spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c\\<rbrakk>\n       \\<Longrightarrow> (st, st')\n                         \\<in> \\<langle>p2rel\n   (\\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel,\n    var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\n 7. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> ?R'61 spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c\\<rbrakk>\n       \\<Longrightarrow> (x1b, x1) \\<in> code_status_status_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (spec'_, spec_) \\<in> sorted_poly_rel O mset_poly_rel \\<Longrightarrow>\n    ({}, {}) \\<in> \\<langle>var_rel\\<rangle>set_rel", "by auto"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>spec' spec x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(spec', spec) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c);\n        x = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> is_cfailed x1b = is_failed x1\n 2. \\<And>spec' spec x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(spec', spec) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        is_cfailed x1b; is_failed x1\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 3. \\<And>spec'a speca x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(spec'a, speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> RETURN (x1c \\<union> vars_llist spec)\n                         \\<le> \\<Down>\n                                (?R'61 spec'a speca x x' x1 x2 x1a x2a x1b\n                                  x2b x1c x2c)\n                                (SPEC\n                                  ((\\<subseteq>) (x1a \\<union> vars spec')))\n 4. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> ?R'61 spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c\\<rbrakk>\n       \\<Longrightarrow> ((x1c \\<union> vars_llist spec, x2c), \\<V>, x2a)\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 5. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> ?R'61 spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c\\<rbrakk>\n       \\<Longrightarrow> (st, st')\n                         \\<in> \\<langle>p2rel\n   (\\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel,\n    var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\n 6. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> ?R'61 spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c\\<rbrakk>\n       \\<Longrightarrow> (x1b, x1) \\<in> code_status_status_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(spec'_, spec_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (x_, x'_)\n     \\<in> code_status_status_rel \\<times>\\<^sub>r\n           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     x2_ = (x1a_, x2a_); x'_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     x_ = (x1b_, x2b_)\\<rbrakk>\n    \\<Longrightarrow> is_cfailed x1b_ = is_failed x1_", "by (auto simp: is_cfailed_def is_failed_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>spec' spec x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(spec', spec) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        is_cfailed x1b; is_failed x1\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> code_status_status_rel \\<times>\\<^sub>r\n                               \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 2. \\<And>spec'a speca x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(spec'a, speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> RETURN (x1c \\<union> vars_llist spec)\n                         \\<le> \\<Down>\n                                (?R'61 spec'a speca x x' x1 x2 x1a x2a x1b\n                                  x2b x1c x2c)\n                                (SPEC\n                                  ((\\<subseteq>) (x1a \\<union> vars spec')))\n 3. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> ?R'61 spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c\\<rbrakk>\n       \\<Longrightarrow> ((x1c \\<union> vars_llist spec, x2c), \\<V>, x2a)\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 4. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> ?R'61 spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c\\<rbrakk>\n       \\<Longrightarrow> (st, st')\n                         \\<in> \\<langle>p2rel\n   (\\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel,\n    var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\n 5. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> ?R'61 spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c\\<rbrakk>\n       \\<Longrightarrow> (x1b, x1) \\<in> code_status_status_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(spec'_, spec_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (x_, x'_)\n     \\<in> code_status_status_rel \\<times>\\<^sub>r\n           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     x2_ = (x1a_, x2a_); x'_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     x_ = (x1b_, x2b_); is_cfailed x1b_; is_failed x1_\\<rbrakk>\n    \\<Longrightarrow> ((x1b_, x1c_, x2c_), x1_, x1a_, x2a_)\n                      \\<in> code_status_status_rel \\<times>\\<^sub>r\n                            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                            \\<langle>nat_rel,\n                            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>spec'a speca x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(spec'a, speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> RETURN (x1c \\<union> vars_llist spec)\n                         \\<le> \\<Down>\n                                (?R'61 spec'a speca x x' x1 x2 x1a x2a x1b\n                                  x2b x1c x2c)\n                                (SPEC\n                                  ((\\<subseteq>) (x1a \\<union> vars spec')))\n 2. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> ?R'61 spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c\\<rbrakk>\n       \\<Longrightarrow> ((x1c \\<union> vars_llist spec, x2c), \\<V>, x2a)\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 3. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> ?R'61 spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c\\<rbrakk>\n       \\<Longrightarrow> (st, st')\n                         \\<in> \\<langle>p2rel\n   (\\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel,\n    var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\n 4. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> ?R'61 spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c\\<rbrakk>\n       \\<Longrightarrow> (x1b, x1) \\<in> code_status_status_rel", "apply (rule fully_unsorted_poly_rel_extend_vars)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>spec'a speca x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(spec'a, speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> (spec, spec')\n                         \\<in> fully_unsorted_poly_rel O mset_poly_rel\n 2. \\<And>spec' spec x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(spec', spec) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> (x1c, x1a) \\<in> \\<langle>var_rel\\<rangle>set_rel\n 3. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n       \\<Longrightarrow> ((x1c \\<union> vars_llist spec, x2c), \\<V>, x2a)\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 4. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n       \\<Longrightarrow> (st, st')\n                         \\<in> \\<langle>p2rel\n   (\\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel,\n    var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\n 5. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n       \\<Longrightarrow> (x1b, x1) \\<in> code_status_status_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(spec'a_, speca_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (x_, x'_)\n     \\<in> code_status_status_rel \\<times>\\<^sub>r\n           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     x2_ = (x1a_, x2a_); x'_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     x_ = (x1b_, x2b_); \\<not> is_cfailed x1b_;\n     \\<not> is_failed x1_\\<rbrakk>\n    \\<Longrightarrow> (spec, spec')\n                      \\<in> fully_unsorted_poly_rel O mset_poly_rel", "using assms(3)"], ["proof (prove)\nusing this:\n  (spec, spec') \\<in> fully_unsorted_poly_rel O mset_poly_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(spec'a_, speca_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (x_, x'_)\n     \\<in> code_status_status_rel \\<times>\\<^sub>r\n           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     x2_ = (x1a_, x2a_); x'_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     x_ = (x1b_, x2b_); \\<not> is_cfailed x1b_;\n     \\<not> is_failed x1_\\<rbrakk>\n    \\<Longrightarrow> (spec, spec')\n                      \\<in> fully_unsorted_poly_rel O mset_poly_rel", "."], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>spec' spec x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(spec', spec) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> (x1c, x1a) \\<in> \\<langle>var_rel\\<rangle>set_rel\n 2. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n       \\<Longrightarrow> ((x1c \\<union> vars_llist spec, x2c), \\<V>, x2a)\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 3. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n       \\<Longrightarrow> (st, st')\n                         \\<in> \\<langle>p2rel\n   (\\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel,\n    var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\n 4. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n       \\<Longrightarrow> (x1b, x1) \\<in> code_status_status_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(spec'_, spec_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (x_, x'_)\n     \\<in> code_status_status_rel \\<times>\\<^sub>r\n           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     x2_ = (x1a_, x2a_); x'_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     x_ = (x1b_, x2b_); \\<not> is_cfailed x1b_;\n     \\<not> is_failed x1_\\<rbrakk>\n    \\<Longrightarrow> (x1c_, x1a_) \\<in> \\<langle>var_rel\\<rangle>set_rel", "by auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n       \\<Longrightarrow> ((x1c \\<union> vars_llist spec, x2c), \\<V>, x2a)\n                         \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                               \\<langle>nat_rel,\n                               sorted_poly_rel O\n                               mset_poly_rel\\<rangle>fmap_rel\n 2. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n       \\<Longrightarrow> (st, st')\n                         \\<in> \\<langle>p2rel\n   (\\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel,\n    var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\n 3. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n       \\<Longrightarrow> (x1b, x1) \\<in> code_status_status_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(spec'_, speca_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (x_, x'_)\n     \\<in> code_status_status_rel \\<times>\\<^sub>r\n           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     x2_ = (x1a_, x2a_); x'_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     x_ = (x1b_, x2b_); \\<not> is_cfailed x1b_; \\<not> is_failed x1_;\n     (x1c_ \\<union> vars_llist spec, \\<V>_)\n     \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> ((x1c_ \\<union> vars_llist spec, x2c_), \\<V>_, x2a_)\n                      \\<in> \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                            \\<langle>nat_rel,\n                            sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n       \\<Longrightarrow> (st, st')\n                         \\<in> \\<langle>p2rel\n   (\\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel,\n    var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\n 2. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n       \\<Longrightarrow> (x1b, x1) \\<in> code_status_status_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(spec'_, speca_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (x_, x'_)\n     \\<in> code_status_status_rel \\<times>\\<^sub>r\n           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     x2_ = (x1a_, x2a_); x'_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     x_ = (x1b_, x2b_); \\<not> is_cfailed x1b_; \\<not> is_failed x1_;\n     (x1c_ \\<union> vars_llist spec, \\<V>_)\n     \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> (st, st')\n                      \\<in> \\<langle>p2rel\n(\\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel,\n var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel", "using assms(2)"], ["proof (prove)\nusing this:\n  (st, st')\n  \\<in> \\<langle>p2rel\n                  (\\<langle>nat_rel,\n                   fully_unsorted_poly_rel O mset_poly_rel,\n                   var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(spec'_, speca_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (x_, x'_)\n     \\<in> code_status_status_rel \\<times>\\<^sub>r\n           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     x2_ = (x1a_, x2a_); x'_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     x_ = (x1b_, x2b_); \\<not> is_cfailed x1b_; \\<not> is_failed x1_;\n     (x1c_ \\<union> vars_llist spec, \\<V>_)\n     \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> (st, st')\n                      \\<in> \\<langle>p2rel\n(\\<langle>nat_rel, fully_unsorted_poly_rel O mset_poly_rel,\n var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel", "by (auto simp: p2rel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>spec' speca x x' x1 x2 x1a x2a x1b x2b x1c x2c \\<V>.\n       \\<lbrakk>(spec', speca) \\<in> sorted_poly_rel O mset_poly_rel;\n        (x, x')\n        \\<in> code_status_status_rel \\<times>\\<^sub>r\n              \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n              \\<langle>nat_rel,\n              sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c); x = (x1b, x2b);\n        \\<not> is_cfailed x1b; \\<not> is_failed x1;\n        (x1c \\<union> vars_llist spec, \\<V>)\n        \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n       \\<Longrightarrow> (x1b, x1) \\<in> code_status_status_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(spec'_, speca_) \\<in> sorted_poly_rel O mset_poly_rel;\n     (x_, x'_)\n     \\<in> code_status_status_rel \\<times>\\<^sub>r\n           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n     x2_ = (x1a_, x2a_); x'_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     x_ = (x1b_, x2b_); \\<not> is_cfailed x1b_; \\<not> is_failed x1_;\n     (x1c_ \\<union> vars_llist spec, \\<V>_)\n     \\<in> \\<langle>var_rel\\<rangle>set_rel\\<rbrakk>\n    \\<Longrightarrow> (x1b_, x1_) \\<in> code_status_status_rel", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  full_checker_l spec A st\n  \\<le> \\<Down>\n         (code_status_status_rel \\<times>\\<^sub>r\n          \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n          \\<langle>nat_rel,\n          sorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel)\n         (full_checker spec' B st')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma full_checker_l_full_checker':\n  \\<open>(uncurry2 full_checker_l, uncurry2 full_checker) \\<in>\n  ((fully_unsorted_poly_rel O mset_poly_rel) \\<times>\\<^sub>r unsorted_fmap_polys_rel) \\<times>\\<^sub>r \\<langle>pac_step_rel\\<rangle>list_rel \\<rightarrow>\\<^sub>f\n    \\<langle>(code_status_status_rel \\<times>\\<^sub>r \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r fmap_polys_rel)\\<rangle>nres_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (uncurry2 full_checker_l, uncurry2 full_checker)\n    \\<in> (fully_unsorted_poly_rel O mset_poly_rel \\<times>\\<^sub>r\n           \\<langle>nat_rel,\n           fully_unsorted_poly_rel O\n           mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n          \\<langle>p2rel\n                    (\\<langle>nat_rel,\n                     fully_unsorted_poly_rel O mset_poly_rel,\n                     var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel \\<rightarrow>\\<^sub>f \\<langle>code_status_status_rel \\<times>\\<^sub>r\n                           \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                           \\<langle>nat_rel,\n                           sorted_poly_rel O\n                           mset_poly_rel\\<rangle>fmap_rel\\<rangle>nres_rel", "apply (intro frefI nres_relI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>True;\n        (x, y)\n        \\<in> (fully_unsorted_poly_rel O mset_poly_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               fully_unsorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\\<rbrakk>\n       \\<Longrightarrow> uncurry2 full_checker_l x\n                         \\<le> \\<Down>\n                                (code_status_status_rel \\<times>\\<^sub>r\n                                 \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                 \\<langle>nat_rel,\n                                 sorted_poly_rel O\n                                 mset_poly_rel\\<rangle>fmap_rel)\n                                (uncurry2 full_checker y)", "using full_checker_l_full_checker"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?A, ?B) \\<in> \\<langle>nat_rel,\n           fully_unsorted_poly_rel O mset_poly_rel\\<rangle>fmap_rel;\n   (?st, ?st')\n   \\<in> \\<langle>p2rel\n                   (\\<langle>nat_rel,\n                    fully_unsorted_poly_rel O mset_poly_rel,\n                    var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel;\n   (?spec, ?spec') \\<in> fully_unsorted_poly_rel O mset_poly_rel\\<rbrakk>\n  \\<Longrightarrow> full_checker_l ?spec ?A ?st\n                    \\<le> \\<Down>\n                           (code_status_status_rel \\<times>\\<^sub>r\n                            \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                            \\<langle>nat_rel,\n                            sorted_poly_rel O\n                            mset_poly_rel\\<rangle>fmap_rel)\n                           (full_checker ?spec' ?B ?st')\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>True;\n        (x, y)\n        \\<in> (fully_unsorted_poly_rel O mset_poly_rel \\<times>\\<^sub>r\n               \\<langle>nat_rel,\n               fully_unsorted_poly_rel O\n               mset_poly_rel\\<rangle>fmap_rel) \\<times>\\<^sub>r\n              \\<langle>p2rel\n                        (\\<langle>nat_rel,\n                         fully_unsorted_poly_rel O mset_poly_rel,\n                         var_rel\\<rangle>pac_step_rel_raw)\\<rangle>list_rel\\<rbrakk>\n       \\<Longrightarrow> uncurry2 full_checker_l x\n                         \\<le> \\<Down>\n                                (code_status_status_rel \\<times>\\<^sub>r\n                                 \\<langle>var_rel\\<rangle>set_rel \\<times>\\<^sub>r\n                                 \\<langle>nat_rel,\n                                 sorted_poly_rel O\n                                 mset_poly_rel\\<rangle>fmap_rel)\n                                (uncurry2 full_checker y)", "by force"], ["", "end"], ["", "definition remap_polys_l2 :: \\<open>llist_polynomial \\<Rightarrow> string set \\<Rightarrow> (nat, llist_polynomial) fmap \\<Rightarrow> _ nres\\<close> where\n  \\<open>remap_polys_l2 spec = (\\<lambda>\\<V> A. do{\n   n \\<leftarrow> upper_bound_on_dom A;\n   b \\<leftarrow> RETURN (n \\<ge> 2^64);\n   if b\n   then do {\n     c \\<leftarrow> remap_polys_l_dom_err;\n     RETURN (error_msg (0 ::nat) c, \\<V>, fmempty)\n   }\n   else do {\n       (b, \\<V>, A) \\<leftarrow> nfoldli ([0..<n]) (\\<lambda>_. True)\n       (\\<lambda>i (b, \\<V>, A').\n          if i \\<in># dom_m A\n          then do {\n            ASSERT(fmlookup A i \\<noteq> None);\n            p \\<leftarrow> full_normalize_poly (the (fmlookup A i));\n            eq \\<leftarrow> weak_equality_l p spec;\n            \\<V> \\<leftarrow> RETURN (\\<V> \\<union> vars_llist (the (fmlookup A i)));\n            RETURN(b \\<or> eq, \\<V>, fmupd i p A')\n          } else RETURN (b, \\<V>, A')\n        )\n       (False, \\<V>, fmempty);\n     RETURN (if b then CFOUND else CSUCCESS, \\<V>, A)\n    }\n })\\<close>"], ["", "lemma remap_polys_l2_remap_polys_l:\n  \\<open>remap_polys_l2 spec \\<V> A \\<le> \\<Down> Id (remap_polys_l spec \\<V> A)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. remap_polys_l2 spec \\<V> A \\<le> \\<Down> Id (remap_polys_l spec \\<V> A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. remap_polys_l2 spec \\<V> A \\<le> \\<Down> Id (remap_polys_l spec \\<V> A)", "have [refine]: \\<open>(A, A') \\<in> Id \\<Longrightarrow> upper_bound_on_dom A\n    \\<le> \\<Down> {(n, dom). dom = set [0..<n]} (SPEC (\\<lambda>dom. set_mset (dom_m A') \\<subseteq> dom \\<and> finite dom))\\<close> for A A'"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, A') \\<in> Id \\<Longrightarrow>\n    upper_bound_on_dom A\n    \\<le> \\<Down> {(n, dom). dom = set [0..<n]}\n           (SPEC\n             (\\<lambda>dom.\n                 set_mset (dom_m A') \\<subseteq> dom \\<and> finite dom))", "unfolding upper_bound_on_dom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, A') \\<in> Id \\<Longrightarrow>\n    SPEC (\\<lambda>n. \\<forall>i\\<in>#dom_m A. i < n)\n    \\<le> \\<Down> {(n, dom). dom = set [0..<n]}\n           (SPEC\n             (\\<lambda>dom.\n                 set_mset (dom_m A') \\<subseteq> dom \\<and> finite dom))", "apply (rule RES_refine)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>(A, A') \\<in> Id;\n        s \\<in> {n. \\<forall>i\\<in>#dom_m A. i < n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'\\<in>{dom.\n    set_mset (dom_m A') \\<subseteq> dom \\<and> finite dom}.\n                            (s, s') \\<in> {(n, dom). dom = set [0..<n]}", "apply (auto simp: upper_bound_on_dom_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (?A1, ?A'1) \\<in> Id \\<Longrightarrow>\n  upper_bound_on_dom ?A1\n  \\<le> \\<Down> {(n, dom). dom = set [0..<n]}\n         (SPEC\n           (\\<lambda>dom.\n               set_mset (dom_m ?A'1) \\<subseteq> dom \\<and> finite dom))\n\ngoal (1 subgoal):\n 1. remap_polys_l2 spec \\<V> A \\<le> \\<Down> Id (remap_polys_l spec \\<V> A)", "have 1: \\<open>inj_on id dom\\<close> for dom"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on id dom", "by auto"], ["proof (state)\nthis:\n  inj_on id ?dom2\n\ngoal (1 subgoal):\n 1. remap_polys_l2 spec \\<V> A \\<le> \\<Down> Id (remap_polys_l spec \\<V> A)", "have 2: \\<open>x \\<in># dom_m A \\<Longrightarrow>\n       x' \\<in># dom_m A' \\<Longrightarrow>\n       (x, x') \\<in> nat_rel \\<Longrightarrow>\n       (A, A') \\<in> Id \\<Longrightarrow>\n       full_normalize_poly (the (fmlookup A x))\n       \\<le> \\<Down> Id\n          (full_normalize_poly (the (fmlookup A' x')))\\<close>\n       for A A' x x'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in># dom_m A; x' \\<in># dom_m A'; (x, x') \\<in> nat_rel;\n     (A, A') \\<in> Id\\<rbrakk>\n    \\<Longrightarrow> full_normalize_poly (the (fmlookup A x))\n                      \\<le> \\<Down> Id\n                             (full_normalize_poly (the (fmlookup A' x')))", "by (auto)"], ["proof (state)\nthis:\n  \\<lbrakk>?x2 \\<in># dom_m ?A2; ?x'2 \\<in># dom_m ?A'2;\n   (?x2, ?x'2) \\<in> nat_rel; (?A2, ?A'2) \\<in> Id\\<rbrakk>\n  \\<Longrightarrow> full_normalize_poly (the (fmlookup ?A2 ?x2))\n                    \\<le> \\<Down> Id\n                           (full_normalize_poly (the (fmlookup ?A'2 ?x'2)))\n\ngoal (1 subgoal):\n 1. remap_polys_l2 spec \\<V> A \\<le> \\<Down> Id (remap_polys_l spec \\<V> A)", "have 3: \\<open>(n, dom) \\<in> {(n, dom). dom = set [0..<n]} \\<Longrightarrow>\n       ([0..<n], dom) \\<in> \\<langle>nat_rel\\<rangle>list_set_rel\\<close> for n dom"], ["proof (prove)\ngoal (1 subgoal):\n 1. (n, dom) \\<in> {(n, dom). dom = set [0..<n]} \\<Longrightarrow>\n    ([0..<n], dom) \\<in> \\<langle>nat_rel\\<rangle>list_set_rel", "by (auto simp: list_set_rel_def br_def)"], ["proof (state)\nthis:\n  (?n2, ?dom2) \\<in> {(n, dom). dom = set [0..<n]} \\<Longrightarrow>\n  ([0..<?n2], ?dom2) \\<in> \\<langle>nat_rel\\<rangle>list_set_rel\n\ngoal (1 subgoal):\n 1. remap_polys_l2 spec \\<V> A \\<le> \\<Down> Id (remap_polys_l spec \\<V> A)", "have 4: \\<open>(p,q) \\<in> Id \\<Longrightarrow>\n    weak_equality_l p spec \\<le> \\<Down>Id (weak_equality_l q spec)\\<close> for p q spec"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, q) \\<in> Id \\<Longrightarrow>\n    weak_equality_l p spec \\<le> \\<Down> bool_rel (weak_equality_l q spec)", "by auto"], ["proof (state)\nthis:\n  (?p2, ?q2) \\<in> Id \\<Longrightarrow>\n  weak_equality_l ?p2 ?spec2\n  \\<le> \\<Down> bool_rel (weak_equality_l ?q2 ?spec2)\n\ngoal (1 subgoal):\n 1. remap_polys_l2 spec \\<V> A \\<le> \\<Down> Id (remap_polys_l spec \\<V> A)", "have 6: \\<open>a = b \\<Longrightarrow> (a, b) \\<in> Id\\<close> for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. a = b \\<Longrightarrow> (a, b) \\<in> Id", "by auto"], ["proof (state)\nthis:\n  ?a3 = ?b3 \\<Longrightarrow> (?a3, ?b3) \\<in> Id\n\ngoal (1 subgoal):\n 1. remap_polys_l2 spec \\<V> A \\<le> \\<Down> Id (remap_polys_l spec \\<V> A)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. remap_polys_l2 spec \\<V> A \\<le> \\<Down> Id (remap_polys_l spec \\<V> A)", "unfolding remap_polys_l2_def remap_polys_l_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. upper_bound_on_dom A \\<bind>\n    (\\<lambda>n.\n        RETURN (2 ^ 64 \\<le> n) \\<bind>\n        (\\<lambda>b.\n            if b\n            then remap_polys_l_dom_err \\<bind>\n                 (\\<lambda>c. RETURN (error_msg 0 c, \\<V>, fmempty))\n            else nfoldli [0..<n] (\\<lambda>_. True)\n                  (\\<lambda>i (b, \\<V>, A').\n                      if i \\<in># dom_m A\n                      then ASSERT (fmlookup A i \\<noteq> None) \\<bind>\n                           (\\<lambda>_.\n                               full_normalize_poly\n                                (the (fmlookup A i)) \\<bind>\n                               (\\<lambda>p.\n                                   weak_equality_l p spec \\<bind>\n                                   (\\<lambda>eq.\n RETURN (\\<V> \\<union> vars_llist (the (fmlookup A i))) \\<bind>\n (\\<lambda>\\<V>. RETURN (b \\<or> eq, \\<V>, fmupd i p A')))))\n                      else RETURN (b, \\<V>, A'))\n                  (False, \\<V>, fmempty) \\<bind>\n                 (\\<lambda>(b, \\<V>, A).\n                     RETURN (if b then CFOUND else CSUCCESS, \\<V>, A))))\n    \\<le> \\<Down> Id\n           (SPEC\n             (\\<lambda>dom.\n                 set_mset (dom_m A) \\<subseteq> dom \\<and>\n                 finite dom) \\<bind>\n            (\\<lambda>dom.\n                SPEC (\\<lambda>_. True) \\<bind>\n                (\\<lambda>failed.\n                    if failed\n                    then remap_polys_l_dom_err \\<bind>\n                         (\\<lambda>c. RETURN (error_msg 0 c, \\<V>, fmempty))\n                    else FOREACH dom\n                          (\\<lambda>i (b, \\<V>, A').\n                              if i \\<in># dom_m A\n                              then full_normalize_poly\n                                    (the (fmlookup A i)) \\<bind>\n                                   (\\<lambda>p.\n weak_equality_l p spec \\<bind>\n (\\<lambda>eq.\n     RETURN (\\<V> \\<union> vars_llist (the (fmlookup A i))) \\<bind>\n     (\\<lambda>\\<V>. RETURN (b \\<or> eq, \\<V>, fmupd i p A'))))\n                              else RETURN (b, \\<V>, A'))\n                          (False, \\<V>, fmempty) \\<bind>\n                         (\\<lambda>(b, \\<V>, A).\n                             RETURN\n                              (if b then CFOUND else CSUCCESS, \\<V>, A)))))", "apply (refine_rcg LFO_refine[where R= \\<open>Id \\<times>\\<^sub>r \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id\\<close>])"], ["proof (prove)\ngoal (13 subgoals):\n 1. (A, A) \\<in> Id\n 2. \\<And>n dom.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom.\n               set_mset (dom_m A) \\<subseteq> dom \\<and>\n               finite dom}\\<rbrakk>\n       \\<Longrightarrow> RETURN (2 ^ 64 \\<le> n)\n                         \\<le> SPEC (\\<lambda>_. True)\n 3. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> b = failed\n 4. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed\\<rbrakk>\n       \\<Longrightarrow> ([0..<n], dom)\n                         \\<in> \\<langle>?A9 n dom b\n   failed\\<rangle>list_set_rel\n 5. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c);\n        si = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> (xi \\<in># dom_m A) = (x \\<in># dom_m A)\n 6. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> fmlookup A xi \\<noteq> None\n 7. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A;\n        fmlookup A xi \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> full_normalize_poly (the (fmlookup A xi))\n                         \\<le> \\<Down>\n                                (?R'67 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c)\n                                (full_normalize_poly (the (fmlookup A x)))\n 8. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c\n               x2c\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> \\<Down>\n                                (?R'68 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c p pa)\n                                (weak_equality_l pa spec)\n 9. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa\\<rbrakk>\n       \\<Longrightarrow> (x1c \\<union> vars_llist (the (fmlookup A xi)),\n                          x1a \\<union> vars_llist (the (fmlookup A x)))\n                         \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a\n                                x1b x2b x1c x2c p pa eqa eqaa\n 10. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n        eqaa \\<V> \\<V>'.\n        \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n         dom\n         \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n         (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n         \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n         (si, s)\n         \\<in> bool_rel \\<times>\\<^sub>r\n               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n         x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n         xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n         (p, pa)\n         \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c;\n         (eqa, eqaa)\n         \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c\n                p pa;\n         (\\<V>, \\<V>')\n         \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c\n                p pa eqa eqaa\\<rbrakk>\n        \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>, fmupd xi p x2c),\n                           x1 \\<or> eqaa, \\<V>', fmupd x pa x2a)\n                          \\<in> bool_rel \\<times>\\<^sub>r\n                                \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                                Id\nA total of 13 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, A) \\<in> Id", "by auto"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>n dom.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom.\n               set_mset (dom_m A) \\<subseteq> dom \\<and>\n               finite dom}\\<rbrakk>\n       \\<Longrightarrow> RETURN (2 ^ 64 \\<le> n)\n                         \\<le> SPEC (\\<lambda>_. True)\n 2. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> b = failed\n 3. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed\\<rbrakk>\n       \\<Longrightarrow> ([0..<n], dom)\n                         \\<in> \\<langle>?A9 n dom b\n   failed\\<rangle>list_set_rel\n 4. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c);\n        si = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> (xi \\<in># dom_m A) = (x \\<in># dom_m A)\n 5. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> fmlookup A xi \\<noteq> None\n 6. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A;\n        fmlookup A xi \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> full_normalize_poly (the (fmlookup A xi))\n                         \\<le> \\<Down>\n                                (?R'67 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c)\n                                (full_normalize_poly (the (fmlookup A x)))\n 7. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c\n               x2c\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> \\<Down>\n                                (?R'68 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c p pa)\n                                (weak_equality_l pa spec)\n 8. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa\\<rbrakk>\n       \\<Longrightarrow> (x1c \\<union> vars_llist (the (fmlookup A xi)),\n                          x1a \\<union> vars_llist (the (fmlookup A x)))\n                         \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a\n                                x1b x2b x1c x2c p pa eqa eqaa\n 9. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa \\<V> \\<V>'.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa;\n        (\\<V>, \\<V>')\n        \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa eqa eqaa\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>, fmupd xi p x2c),\n                          x1 \\<or> eqaa, \\<V>', fmupd x pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 10. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n        \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n         dom\n         \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n         (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n         \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n         (si, s)\n         \\<in> bool_rel \\<times>\\<^sub>r\n               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n         x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n         xi \\<notin># dom_m A; x \\<notin># dom_m A\\<rbrakk>\n        \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                          \\<in> bool_rel \\<times>\\<^sub>r\n                                \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                                Id\nA total of 12 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(n_, dom_) \\<in> {(n, dom). dom = set [0..<n]};\n     dom_\n     \\<in> {dom.\n            set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom}\\<rbrakk>\n    \\<Longrightarrow> RETURN (2 ^ 64 \\<le> n_) \\<le> SPEC (\\<lambda>_. True)", "by auto"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}\\<rbrakk>\n       \\<Longrightarrow> b = failed\n 2. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed\\<rbrakk>\n       \\<Longrightarrow> ([0..<n], dom)\n                         \\<in> \\<langle>?A9 n dom b\n   failed\\<rangle>list_set_rel\n 3. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c);\n        si = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> (xi \\<in># dom_m A) = (x \\<in># dom_m A)\n 4. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> fmlookup A xi \\<noteq> None\n 5. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A;\n        fmlookup A xi \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> full_normalize_poly (the (fmlookup A xi))\n                         \\<le> \\<Down>\n                                (?R'67 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c)\n                                (full_normalize_poly (the (fmlookup A x)))\n 6. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c\n               x2c\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> \\<Down>\n                                (?R'68 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c p pa)\n                                (weak_equality_l pa spec)\n 7. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa\\<rbrakk>\n       \\<Longrightarrow> (x1c \\<union> vars_llist (the (fmlookup A xi)),\n                          x1a \\<union> vars_llist (the (fmlookup A x)))\n                         \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a\n                                x1b x2b x1c x2c p pa eqa eqaa\n 8. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa \\<V> \\<V>'.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa;\n        (\\<V>, \\<V>')\n        \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa eqa eqaa\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>, fmupd xi p x2c),\n                          x1 \\<or> eqaa, \\<V>', fmupd x pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 9. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<notin># dom_m A; x \\<notin># dom_m A\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 10. \\<And>n dom b failed.\n        \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n         dom\n         \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n         (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n         \\<not> failed\\<rbrakk>\n        \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>, fmempty)\n                          \\<in> bool_rel \\<times>\\<^sub>r\n                                \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                                Id\nA total of 11 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(n_, dom_) \\<in> {(n, dom). dom = set [0..<n]};\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     (b_, failed_) \\<in> bool_rel; failed_ \\<in> {uu_. True}\\<rbrakk>\n    \\<Longrightarrow> b_ = failed_", "by auto"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed\\<rbrakk>\n       \\<Longrightarrow> ([0..<n], dom)\n                         \\<in> \\<langle>?A9 n dom b\n   failed\\<rangle>list_set_rel\n 2. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c);\n        si = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> (xi \\<in># dom_m A) = (x \\<in># dom_m A)\n 3. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> fmlookup A xi \\<noteq> None\n 4. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A;\n        fmlookup A xi \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> full_normalize_poly (the (fmlookup A xi))\n                         \\<le> \\<Down>\n                                (?R'67 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c)\n                                (full_normalize_poly (the (fmlookup A x)))\n 5. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c\n               x2c\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> \\<Down>\n                                (?R'68 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c p pa)\n                                (weak_equality_l pa spec)\n 6. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa\\<rbrakk>\n       \\<Longrightarrow> (x1c \\<union> vars_llist (the (fmlookup A xi)),\n                          x1a \\<union> vars_llist (the (fmlookup A x)))\n                         \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a\n                                x1b x2b x1c x2c p pa eqa eqaa\n 7. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa \\<V> \\<V>'.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa;\n        (\\<V>, \\<V>')\n        \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa eqa eqaa\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>, fmupd xi p x2c),\n                          x1 \\<or> eqaa, \\<V>', fmupd x pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 8. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> ?A9 n dom b failed;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<notin># dom_m A; x \\<notin># dom_m A\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 9. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>, fmempty)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 10. \\<And>n dom b failed x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n        \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n         dom\n         \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n         (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n         \\<not> failed;\n         (x, x')\n         \\<in> bool_rel \\<times>\\<^sub>r\n               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n         x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c);\n         x = (x1b, x2b)\\<rbrakk>\n        \\<Longrightarrow> ((if x1b then CFOUND else CSUCCESS, x1c, x2c),\n                           if x1 then CFOUND else CSUCCESS, x1a, x2a)\n                          \\<in> Id", "apply (rule 3)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed\\<rbrakk>\n       \\<Longrightarrow> (n, dom) \\<in> {(n, dom). dom = set [0..<n]}\n 2. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c);\n        si = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> (xi \\<in># dom_m A) = (x \\<in># dom_m A)\n 3. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> fmlookup A xi \\<noteq> None\n 4. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A;\n        fmlookup A xi \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> full_normalize_poly (the (fmlookup A xi))\n                         \\<le> \\<Down>\n                                (?R'67 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c)\n                                (full_normalize_poly (the (fmlookup A x)))\n 5. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c\n               x2c\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> \\<Down>\n                                (?R'68 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c p pa)\n                                (weak_equality_l pa spec)\n 6. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa\\<rbrakk>\n       \\<Longrightarrow> (x1c \\<union> vars_llist (the (fmlookup A xi)),\n                          x1a \\<union> vars_llist (the (fmlookup A x)))\n                         \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a\n                                x1b x2b x1c x2c p pa eqa eqaa\n 7. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa \\<V> \\<V>'.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa;\n        (\\<V>, \\<V>')\n        \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa eqa eqaa\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>, fmupd xi p x2c),\n                          x1 \\<or> eqaa, \\<V>', fmupd x pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 8. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<notin># dom_m A; x \\<notin># dom_m A\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 9. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>, fmempty)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 10. \\<And>n dom b failed x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n        \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n         dom\n         \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n         (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n         \\<not> failed;\n         (x, x')\n         \\<in> bool_rel \\<times>\\<^sub>r\n               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n         x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c);\n         x = (x1b, x2b)\\<rbrakk>\n        \\<Longrightarrow> ((if x1b then CFOUND else CSUCCESS, x1c, x2c),\n                           if x1 then CFOUND else CSUCCESS, x1a, x2a)\n                          \\<in> Id", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(n_, dom_) \\<in> {(n, dom). dom = set [0..<n]};\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     (b_, failed_) \\<in> bool_rel; failed_ \\<in> {uu_. True}; \\<not> b_;\n     \\<not> failed_\\<rbrakk>\n    \\<Longrightarrow> (n_, dom_) \\<in> {(n, dom). dom = set [0..<n]}", "by auto"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c);\n        si = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> (xi \\<in># dom_m A) = (x \\<in># dom_m A)\n 2. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> fmlookup A xi \\<noteq> None\n 3. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A;\n        fmlookup A xi \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> full_normalize_poly (the (fmlookup A xi))\n                         \\<le> \\<Down>\n                                (?R'67 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c)\n                                (full_normalize_poly (the (fmlookup A x)))\n 4. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c\n               x2c\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> \\<Down>\n                                (?R'68 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c p pa)\n                                (weak_equality_l pa spec)\n 5. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa\\<rbrakk>\n       \\<Longrightarrow> (x1c \\<union> vars_llist (the (fmlookup A xi)),\n                          x1a \\<union> vars_llist (the (fmlookup A x)))\n                         \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a\n                                x1b x2b x1c x2c p pa eqa eqaa\n 6. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa \\<V> \\<V>'.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa;\n        (\\<V>, \\<V>')\n        \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa eqa eqaa\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>, fmupd xi p x2c),\n                          x1 \\<or> eqaa, \\<V>', fmupd x pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 7. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<notin># dom_m A; x \\<notin># dom_m A\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 8. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>, fmempty)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 9. \\<And>n dom b failed x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c);\n        x = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> ((if x1b then CFOUND else CSUCCESS, x1c, x2c),\n                          if x1 then CFOUND else CSUCCESS, x1a, x2a)\n                         \\<in> Id", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(n_, dom_) \\<in> {(n, dom). dom = set [0..<n]};\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     (b_, failed_) \\<in> bool_rel; failed_ \\<in> {uu_. True}; \\<not> b_;\n     \\<not> failed_; (xi_, x_) \\<in> nat_rel;\n     (si_, s_)\n     \\<in> bool_rel \\<times>\\<^sub>r\n           \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n     x2_ = (x1a_, x2a_); s_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     si_ = (x1b_, x2b_)\\<rbrakk>\n    \\<Longrightarrow> (xi_ \\<in># dom_m A) = (x_ \\<in># dom_m A)", "by (simp add: in_dom_m_lookup_iff)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A\\<rbrakk>\n       \\<Longrightarrow> fmlookup A xi \\<noteq> None\n 2. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A;\n        fmlookup A xi \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> full_normalize_poly (the (fmlookup A xi))\n                         \\<le> \\<Down>\n                                (?R'67 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c)\n                                (full_normalize_poly (the (fmlookup A x)))\n 3. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c\n               x2c\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> \\<Down>\n                                (?R'68 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c p pa)\n                                (weak_equality_l pa spec)\n 4. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa\\<rbrakk>\n       \\<Longrightarrow> (x1c \\<union> vars_llist (the (fmlookup A xi)),\n                          x1a \\<union> vars_llist (the (fmlookup A x)))\n                         \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a\n                                x1b x2b x1c x2c p pa eqa eqaa\n 5. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa \\<V> \\<V>'.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa;\n        (\\<V>, \\<V>')\n        \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa eqa eqaa\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>, fmupd xi p x2c),\n                          x1 \\<or> eqaa, \\<V>', fmupd x pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 6. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<notin># dom_m A; x \\<notin># dom_m A\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 7. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>, fmempty)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 8. \\<And>n dom b failed x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c);\n        x = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> ((if x1b then CFOUND else CSUCCESS, x1c, x2c),\n                          if x1 then CFOUND else CSUCCESS, x1a, x2a)\n                         \\<in> Id", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(n_, dom_) \\<in> {(n, dom). dom = set [0..<n]};\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     (b_, failed_) \\<in> bool_rel; failed_ \\<in> {uu_. True}; \\<not> b_;\n     \\<not> failed_; (xi_, x_) \\<in> nat_rel;\n     (si_, s_)\n     \\<in> bool_rel \\<times>\\<^sub>r\n           \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n     x2_ = (x1a_, x2a_); s_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     si_ = (x1b_, x2b_); xi_ \\<in># dom_m A; x_ \\<in># dom_m A\\<rbrakk>\n    \\<Longrightarrow> fmlookup A xi_ \\<noteq> None", "by (simp add: in_dom_m_lookup_iff)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A;\n        fmlookup A xi \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> full_normalize_poly (the (fmlookup A xi))\n                         \\<le> \\<Down>\n                                (?R'67 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c)\n                                (full_normalize_poly (the (fmlookup A x)))\n 2. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c\n               x2c\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> \\<Down>\n                                (?R'68 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c p pa)\n                                (weak_equality_l pa spec)\n 3. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa\\<rbrakk>\n       \\<Longrightarrow> (x1c \\<union> vars_llist (the (fmlookup A xi)),\n                          x1a \\<union> vars_llist (the (fmlookup A x)))\n                         \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a\n                                x1b x2b x1c x2c p pa eqa eqaa\n 4. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa \\<V> \\<V>'.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa)\n        \\<in> ?R'67 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa;\n        (\\<V>, \\<V>')\n        \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa eqa eqaa\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>, fmupd xi p x2c),\n                          x1 \\<or> eqaa, \\<V>', fmupd x pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 5. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<notin># dom_m A; x \\<notin># dom_m A\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 6. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>, fmempty)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 7. \\<And>n dom b failed x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c);\n        x = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> ((if x1b then CFOUND else CSUCCESS, x1c, x2c),\n                          if x1 then CFOUND else CSUCCESS, x1a, x2a)\n                         \\<in> Id", "apply (rule 2)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A;\n        fmlookup A xi \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> xi \\<in># dom_m A\n 2. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A;\n        fmlookup A xi \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> x \\<in># dom_m A\n 3. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A;\n        fmlookup A xi \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> (xi, x) \\<in> nat_rel\n 4. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A;\n        fmlookup A xi \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> (A, A) \\<in> Id\n 5. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa) \\<in> Id\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> \\<Down>\n                                (?R'68 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c p pa)\n                                (weak_equality_l pa spec)\n 6. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa) \\<in> Id;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa\\<rbrakk>\n       \\<Longrightarrow> (x1c \\<union> vars_llist (the (fmlookup A xi)),\n                          x1a \\<union> vars_llist (the (fmlookup A x)))\n                         \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a\n                                x1b x2b x1c x2c p pa eqa eqaa\n 7. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa \\<V> \\<V>'.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa) \\<in> Id;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa;\n        (\\<V>, \\<V>')\n        \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa eqa eqaa\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>, fmupd xi p x2c),\n                          x1 \\<or> eqaa, \\<V>', fmupd x pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 8. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<notin># dom_m A; x \\<notin># dom_m A\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 9. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>, fmempty)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 10. \\<And>n dom b failed x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n        \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n         dom\n         \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n         (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n         \\<not> failed;\n         (x, x')\n         \\<in> bool_rel \\<times>\\<^sub>r\n               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n         x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c);\n         x = (x1b, x2b)\\<rbrakk>\n        \\<Longrightarrow> ((if x1b then CFOUND else CSUCCESS, x1c, x2c),\n                           if x1 then CFOUND else CSUCCESS, x1a, x2a)\n                          \\<in> Id", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(n_, dom_) \\<in> {(n, dom). dom = set [0..<n]};\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     (b_, failed_) \\<in> bool_rel; failed_ \\<in> {uu_. True}; \\<not> b_;\n     \\<not> failed_; (xi_, x_) \\<in> nat_rel;\n     (si_, s_)\n     \\<in> bool_rel \\<times>\\<^sub>r\n           \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n     x2_ = (x1a_, x2a_); s_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     si_ = (x1b_, x2b_); xi_ \\<in># dom_m A; x_ \\<in># dom_m A;\n     fmlookup A xi_ \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> xi_ \\<in># dom_m A", "by auto"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A;\n        fmlookup A xi \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> x \\<in># dom_m A\n 2. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A;\n        fmlookup A xi \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> (xi, x) \\<in> nat_rel\n 3. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A;\n        fmlookup A xi \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> (A, A) \\<in> Id\n 4. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa) \\<in> Id\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> \\<Down>\n                                (?R'68 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c p pa)\n                                (weak_equality_l pa spec)\n 5. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa) \\<in> Id;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa\\<rbrakk>\n       \\<Longrightarrow> (x1c \\<union> vars_llist (the (fmlookup A xi)),\n                          x1a \\<union> vars_llist (the (fmlookup A x)))\n                         \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a\n                                x1b x2b x1c x2c p pa eqa eqaa\n 6. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa \\<V> \\<V>'.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa) \\<in> Id;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa;\n        (\\<V>, \\<V>')\n        \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa eqa eqaa\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>, fmupd xi p x2c),\n                          x1 \\<or> eqaa, \\<V>', fmupd x pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 7. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<notin># dom_m A; x \\<notin># dom_m A\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 8. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>, fmempty)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 9. \\<And>n dom b failed x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c);\n        x = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> ((if x1b then CFOUND else CSUCCESS, x1c, x2c),\n                          if x1 then CFOUND else CSUCCESS, x1a, x2a)\n                         \\<in> Id", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(n_, dom_) \\<in> {(n, dom). dom = set [0..<n]};\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     (b_, failed_) \\<in> bool_rel; failed_ \\<in> {uu_. True}; \\<not> b_;\n     \\<not> failed_; (xi_, x_) \\<in> nat_rel;\n     (si_, s_)\n     \\<in> bool_rel \\<times>\\<^sub>r\n           \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n     x2_ = (x1a_, x2a_); s_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     si_ = (x1b_, x2b_); xi_ \\<in># dom_m A; x_ \\<in># dom_m A;\n     fmlookup A xi_ \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> x_ \\<in># dom_m A", "by auto"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A;\n        fmlookup A xi \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> (xi, x) \\<in> nat_rel\n 2. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A;\n        fmlookup A xi \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> (A, A) \\<in> Id\n 3. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa) \\<in> Id\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> \\<Down>\n                                (?R'68 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c p pa)\n                                (weak_equality_l pa spec)\n 4. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa) \\<in> Id;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa\\<rbrakk>\n       \\<Longrightarrow> (x1c \\<union> vars_llist (the (fmlookup A xi)),\n                          x1a \\<union> vars_llist (the (fmlookup A x)))\n                         \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a\n                                x1b x2b x1c x2c p pa eqa eqaa\n 5. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa \\<V> \\<V>'.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa) \\<in> Id;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa;\n        (\\<V>, \\<V>')\n        \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa eqa eqaa\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>, fmupd xi p x2c),\n                          x1 \\<or> eqaa, \\<V>', fmupd x pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 6. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<notin># dom_m A; x \\<notin># dom_m A\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 7. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>, fmempty)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 8. \\<And>n dom b failed x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c);\n        x = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> ((if x1b then CFOUND else CSUCCESS, x1c, x2c),\n                          if x1 then CFOUND else CSUCCESS, x1a, x2a)\n                         \\<in> Id", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(n_, dom_) \\<in> {(n, dom). dom = set [0..<n]};\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     (b_, failed_) \\<in> bool_rel; failed_ \\<in> {uu_. True}; \\<not> b_;\n     \\<not> failed_; (xi_, x_) \\<in> nat_rel;\n     (si_, s_)\n     \\<in> bool_rel \\<times>\\<^sub>r\n           \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n     x2_ = (x1a_, x2a_); s_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     si_ = (x1b_, x2b_); xi_ \\<in># dom_m A; x_ \\<in># dom_m A;\n     fmlookup A xi_ \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> (xi_, x_) \\<in> nat_rel", "by auto"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A;\n        fmlookup A xi \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> (A, A) \\<in> Id\n 2. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa) \\<in> Id\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> \\<Down>\n                                (?R'68 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c p pa)\n                                (weak_equality_l pa spec)\n 3. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa) \\<in> Id;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa\\<rbrakk>\n       \\<Longrightarrow> (x1c \\<union> vars_llist (the (fmlookup A xi)),\n                          x1a \\<union> vars_llist (the (fmlookup A x)))\n                         \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a\n                                x1b x2b x1c x2c p pa eqa eqaa\n 4. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa \\<V> \\<V>'.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa) \\<in> Id;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa;\n        (\\<V>, \\<V>')\n        \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa eqa eqaa\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>, fmupd xi p x2c),\n                          x1 \\<or> eqaa, \\<V>', fmupd x pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 5. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<notin># dom_m A; x \\<notin># dom_m A\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 6. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>, fmempty)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 7. \\<And>n dom b failed x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c);\n        x = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> ((if x1b then CFOUND else CSUCCESS, x1c, x2c),\n                          if x1 then CFOUND else CSUCCESS, x1a, x2a)\n                         \\<in> Id", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(n_, dom_) \\<in> {(n, dom). dom = set [0..<n]};\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     (b_, failed_) \\<in> bool_rel; failed_ \\<in> {uu_. True}; \\<not> b_;\n     \\<not> failed_; (xi_, x_) \\<in> nat_rel;\n     (si_, s_)\n     \\<in> bool_rel \\<times>\\<^sub>r\n           \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n     x2_ = (x1a_, x2a_); s_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     si_ = (x1b_, x2b_); xi_ \\<in># dom_m A; x_ \\<in># dom_m A;\n     fmlookup A xi_ \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> (A, A) \\<in> Id", "by auto"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa) \\<in> Id\\<rbrakk>\n       \\<Longrightarrow> weak_equality_l p spec\n                         \\<le> \\<Down>\n                                (?R'68 n dom b failed x xi s si x1 x2 x1a\n                                  x2a x1b x2b x1c x2c p pa)\n                                (weak_equality_l pa spec)\n 2. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa) \\<in> Id;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa\\<rbrakk>\n       \\<Longrightarrow> (x1c \\<union> vars_llist (the (fmlookup A xi)),\n                          x1a \\<union> vars_llist (the (fmlookup A x)))\n                         \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a\n                                x1b x2b x1c x2c p pa eqa eqaa\n 3. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa \\<V> \\<V>'.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa) \\<in> Id;\n        (eqa, eqaa)\n        \\<in> ?R'68 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa;\n        (\\<V>, \\<V>')\n        \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa eqa eqaa\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>, fmupd xi p x2c),\n                          x1 \\<or> eqaa, \\<V>', fmupd x pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 4. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<notin># dom_m A; x \\<notin># dom_m A\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 5. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>, fmempty)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 6. \\<And>n dom b failed x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c);\n        x = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> ((if x1b then CFOUND else CSUCCESS, x1c, x2c),\n                          if x1 then CFOUND else CSUCCESS, x1a, x2a)\n                         \\<in> Id", "apply (rule 4; assumption)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa) \\<in> Id; (eqa, eqaa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> (x1c \\<union> vars_llist (the (fmlookup A xi)),\n                          x1a \\<union> vars_llist (the (fmlookup A x)))\n                         \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a\n                                x1b x2b x1c x2c p pa eqa eqaa\n 2. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa \\<V> \\<V>'.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa) \\<in> Id; (eqa, eqaa) \\<in> bool_rel;\n        (\\<V>, \\<V>')\n        \\<in> ?R'69 n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p\n               pa eqa eqaa\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>, fmupd xi p x2c),\n                          x1 \\<or> eqaa, \\<V>', fmupd x pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 3. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<notin># dom_m A; x \\<notin># dom_m A\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 4. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>, fmempty)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 5. \\<And>n dom b failed x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c);\n        x = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> ((if x1b then CFOUND else CSUCCESS, x1c, x2c),\n                          if x1 then CFOUND else CSUCCESS, x1a, x2a)\n                         \\<in> Id", "apply (rule 6)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa) \\<in> Id; (eqa, eqaa) \\<in> bool_rel\\<rbrakk>\n       \\<Longrightarrow> x1c \\<union> vars_llist (the (fmlookup A xi)) =\n                         x1a \\<union> vars_llist (the (fmlookup A x))\n 2. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa \\<V> \\<V>'.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa) \\<in> Id; (eqa, eqaa) \\<in> bool_rel;\n        (\\<V>, \\<V>') \\<in> Id\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>, fmupd xi p x2c),\n                          x1 \\<or> eqaa, \\<V>', fmupd x pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 3. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<notin># dom_m A; x \\<notin># dom_m A\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 4. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>, fmempty)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 5. \\<And>n dom b failed x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c);\n        x = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> ((if x1b then CFOUND else CSUCCESS, x1c, x2c),\n                          if x1 then CFOUND else CSUCCESS, x1a, x2a)\n                         \\<in> Id", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(n_, dom_) \\<in> {(n, dom). dom = set [0..<n]};\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     (b_, failed_) \\<in> bool_rel; failed_ \\<in> {uu_. True}; \\<not> b_;\n     \\<not> failed_; (xi_, x_) \\<in> nat_rel;\n     (si_, s_)\n     \\<in> bool_rel \\<times>\\<^sub>r\n           \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n     x2_ = (x1a_, x2a_); s_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     si_ = (x1b_, x2b_); xi_ \\<in># dom_m A; x_ \\<in># dom_m A;\n     fmlookup A xi_ \\<noteq> None; (p_, pa_) \\<in> Id;\n     (eqa_, eqaa_) \\<in> bool_rel\\<rbrakk>\n    \\<Longrightarrow> x1c_ \\<union> vars_llist (the (fmlookup A xi_)) =\n                      x1a_ \\<union> vars_llist (the (fmlookup A x_))", "by auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c p pa eqa\n       eqaa \\<V> \\<V>'.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<in># dom_m A; x \\<in># dom_m A; fmlookup A xi \\<noteq> None;\n        (p, pa) \\<in> Id; (eqa, eqaa) \\<in> bool_rel;\n        (\\<V>, \\<V>') \\<in> Id\\<rbrakk>\n       \\<Longrightarrow> ((x1b \\<or> eqa, \\<V>, fmupd xi p x2c),\n                          x1 \\<or> eqaa, \\<V>', fmupd x pa x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 2. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<notin># dom_m A; x \\<notin># dom_m A\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 3. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>, fmempty)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 4. \\<And>n dom b failed x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c);\n        x = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> ((if x1b then CFOUND else CSUCCESS, x1c, x2c),\n                          if x1 then CFOUND else CSUCCESS, x1a, x2a)\n                         \\<in> Id", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(n_, dom_) \\<in> {(n, dom). dom = set [0..<n]};\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     (b_, failed_) \\<in> bool_rel; failed_ \\<in> {uu_. True}; \\<not> b_;\n     \\<not> failed_; (xi_, x_) \\<in> nat_rel;\n     (si_, s_)\n     \\<in> bool_rel \\<times>\\<^sub>r\n           \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n     x2_ = (x1a_, x2a_); s_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     si_ = (x1b_, x2b_); xi_ \\<in># dom_m A; x_ \\<in># dom_m A;\n     fmlookup A xi_ \\<noteq> None; (p_, pa_) \\<in> Id;\n     (eqa_, eqaa_) \\<in> bool_rel; (\\<V>_, \\<V>'_) \\<in> Id\\<rbrakk>\n    \\<Longrightarrow> ((x1b_ \\<or> eqa_, \\<V>_, fmupd xi_ p_ x2c_),\n                       x1_ \\<or> eqaa_, \\<V>'_, fmupd x_ pa_ x2a_)\n                      \\<in> bool_rel \\<times>\\<^sub>r\n                            \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id", "by auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n dom b failed x xi s si x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed; (xi, x) \\<in> nat_rel;\n        (si, s)\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); s = (x1, x2); x2b = (x1c, x2c); si = (x1b, x2b);\n        xi \\<notin># dom_m A; x \\<notin># dom_m A\\<rbrakk>\n       \\<Longrightarrow> ((x1b, x1c, x2c), x1, x1a, x2a)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 2. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>, fmempty)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 3. \\<And>n dom b failed x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c);\n        x = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> ((if x1b then CFOUND else CSUCCESS, x1c, x2c),\n                          if x1 then CFOUND else CSUCCESS, x1a, x2a)\n                         \\<in> Id", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(n_, dom_) \\<in> {(n, dom). dom = set [0..<n]};\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     (b_, failed_) \\<in> bool_rel; failed_ \\<in> {uu_. True}; \\<not> b_;\n     \\<not> failed_; (xi_, x_) \\<in> nat_rel;\n     (si_, s_)\n     \\<in> bool_rel \\<times>\\<^sub>r\n           \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n     x2_ = (x1a_, x2a_); s_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     si_ = (x1b_, x2b_); xi_ \\<notin># dom_m A;\n     x_ \\<notin># dom_m A\\<rbrakk>\n    \\<Longrightarrow> ((x1b_, x1c_, x2c_), x1_, x1a_, x2a_)\n                      \\<in> bool_rel \\<times>\\<^sub>r\n                            \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n dom b failed.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed\\<rbrakk>\n       \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>, fmempty)\n                         \\<in> bool_rel \\<times>\\<^sub>r\n                               \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r\n                               Id\n 2. \\<And>n dom b failed x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c);\n        x = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> ((if x1b then CFOUND else CSUCCESS, x1c, x2c),\n                          if x1 then CFOUND else CSUCCESS, x1a, x2a)\n                         \\<in> Id", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(n_, dom_) \\<in> {(n, dom). dom = set [0..<n]};\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     (b_, failed_) \\<in> bool_rel; failed_ \\<in> {uu_. True}; \\<not> b_;\n     \\<not> failed_\\<rbrakk>\n    \\<Longrightarrow> ((False, \\<V>, fmempty), False, \\<V>, fmempty)\n                      \\<in> bool_rel \\<times>\\<^sub>r\n                            \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n dom b failed x x' x1 x2 x1a x2a x1b x2b x1c x2c.\n       \\<lbrakk>(n, dom) \\<in> {(n, dom). dom = set [0..<n]};\n        dom\n        \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n        (b, failed) \\<in> bool_rel; failed \\<in> {uu_. True}; \\<not> b;\n        \\<not> failed;\n        (x, x')\n        \\<in> bool_rel \\<times>\\<^sub>r\n              \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n        x2 = (x1a, x2a); x' = (x1, x2); x2b = (x1c, x2c);\n        x = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> ((if x1b then CFOUND else CSUCCESS, x1c, x2c),\n                          if x1 then CFOUND else CSUCCESS, x1a, x2a)\n                         \\<in> Id", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(n_, dom_) \\<in> {(n, dom). dom = set [0..<n]};\n     dom_ \\<in> {dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom};\n     (b_, failed_) \\<in> bool_rel; failed_ \\<in> {uu_. True}; \\<not> b_;\n     \\<not> failed_;\n     (x_, x'_)\n     \\<in> bool_rel \\<times>\\<^sub>r\n           \\<langle>Id\\<rangle>set_rel \\<times>\\<^sub>r Id;\n     x2_ = (x1a_, x2a_); x'_ = (x1_, x2_); x2b_ = (x1c_, x2c_);\n     x_ = (x1b_, x2b_)\\<rbrakk>\n    \\<Longrightarrow> ((if x1b_ then CFOUND else CSUCCESS, x1c_, x2c_),\n                       if x1_ then CFOUND else CSUCCESS, x1a_, x2a_)\n                      \\<in> Id", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  remap_polys_l2 spec \\<V> A \\<le> \\<Down> Id (remap_polys_l spec \\<V> A)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}