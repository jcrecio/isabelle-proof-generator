{"file_name": "/home/qj213/afp-2021-10-22/thys/PAC_Checker/PAC_Checker_Specification.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/PAC_Checker", "problem_names": ["lemma is_success_alt_def:\n  \\<open>is_success a \\<longleftrightarrow> a = SUCCESS\\<close>", "lemma normalize_poly_spec_alt_def:\n  \\<open>normalize_poly_spec p = SPEC (\\<lambda>r. r - p \\<in> ideal polynomial_bool \\<and> vars r \\<subseteq> vars p)\\<close>", "lemma polys_rel_update_remove:\n  \\<open>x13 \\<notin>#dom_m A \\<Longrightarrow> x11 \\<in># dom_m A \\<Longrightarrow> x12 \\<in># dom_m A \\<Longrightarrow> x11 \\<noteq> x12 \\<Longrightarrow> (A,B) \\<in> polys_rel \\<Longrightarrow>\n   (fmupd x13 r (fmdrop x11 (fmdrop x12 A)),\n        add_mset r B - {#the (fmlookup A x11), the (fmlookup A x12)#})\n       \\<in> polys_rel\\<close>\n  \\<open>x13 \\<notin>#dom_m A \\<Longrightarrow> x11 \\<in># dom_m A \\<Longrightarrow> (A,B) \\<in> polys_rel \\<Longrightarrow>\n   (fmupd x13 r (fmdrop x11 A),add_mset r B - {#the (fmlookup A x11)#})\n       \\<in> polys_rel\\<close>\n  \\<open>x13 \\<notin>#dom_m A \\<Longrightarrow> (A,B) \\<in> polys_rel \\<Longrightarrow>\n   (fmupd x13 r A, add_mset r B) \\<in> polys_rel\\<close>\n  \\<open>x13 \\<in>#dom_m A \\<Longrightarrow> (A,B) \\<in> polys_rel \\<Longrightarrow>\n   (fmdrop x13 A, remove1_mset (the (fmlookup A x13)) B) \\<in> polys_rel\\<close>", "lemma polys_rel_in_dom_inD:\n  \\<open>(A, B) \\<in> polys_rel \\<Longrightarrow>\n    x12 \\<in># dom_m A \\<Longrightarrow>\n    the (fmlookup A x12) \\<in># B\\<close>", "lemma PAC_Format_add_and_remove:\n  \\<open>r - x14 \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       (A, B) \\<in> polys_rel \\<Longrightarrow>\n       x12 \\<in># dom_m A \\<Longrightarrow>\n       x13 \\<notin># dom_m A \\<Longrightarrow>\n       vars r \\<subseteq> \\<V> \\<Longrightarrow>\n       2 * the (fmlookup A x12) - r \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) (\\<V>, remove1_mset (the (fmlookup A x12)) (add_mset r B))\\<close>\n   \\<open>r - x14 \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       (A, B) \\<in> polys_rel \\<Longrightarrow>\n       the (fmlookup A x11) + the (fmlookup A x12) - r \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       x11 \\<in># dom_m A \\<Longrightarrow>\n       x12 \\<in># dom_m A \\<Longrightarrow>\n       vars r \\<subseteq> \\<V> \\<Longrightarrow>\n       PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) (\\<V>, add_mset r B)\\<close>\n   \\<open>r - x14 \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       (A, B) \\<in> polys_rel \\<Longrightarrow>\n       x11 \\<in># dom_m A \\<Longrightarrow>\n       x12 \\<in># dom_m A \\<Longrightarrow>\n       the (fmlookup A x11) + the (fmlookup A x12) - r \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       vars r \\<subseteq> \\<V> \\<Longrightarrow>\n       x11 \\<noteq> x12 \\<Longrightarrow>\n       PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n        (\\<V>, add_mset r B - {#the (fmlookup A x11), the (fmlookup A x12)#})\\<close>\n   \\<open>(A, B) \\<in> polys_rel \\<Longrightarrow>\n       r - x34 \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       x11 \\<in># dom_m A \\<Longrightarrow>\n       the (fmlookup A x11) * x32 - r \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       vars x32 \\<subseteq> \\<V> \\<Longrightarrow>\n       vars r \\<subseteq> \\<V> \\<Longrightarrow>\n       PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) (\\<V>, add_mset r B)\\<close>\n   \\<open>(A, B) \\<in> polys_rel \\<Longrightarrow>\n       r - x34 \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       x11 \\<in># dom_m A \\<Longrightarrow>\n       the (fmlookup A x11) * x32 - r \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       vars x32 \\<subseteq> \\<V> \\<Longrightarrow>\n       vars r \\<subseteq> \\<V> \\<Longrightarrow>\n       PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) (\\<V>, remove1_mset (the (fmlookup A x11)) (add_mset r B))\\<close>\n  \\<open>(A, B) \\<in> polys_rel \\<Longrightarrow>\n       x12 \\<in># dom_m A \\<Longrightarrow>\n       PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) (\\<V>, remove1_mset (the (fmlookup A x12)) B)\\<close>\n   \\<open>(A, B) \\<in> polys_rel \\<Longrightarrow>\n       (p' + Var x)\\<^sup>2 - (p' + Var x) \\<in> ideal polynomial_bool \\<Longrightarrow>\n       x \\<notin> \\<V> \\<Longrightarrow>\n       x \\<notin> vars(p' + Var x) \\<Longrightarrow>\n       vars(p' + Var x) \\<subseteq> \\<V> \\<Longrightarrow>\n       PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n         (insert x \\<V>, add_mset p' B)\\<close>", "lemma is_merge_status[simp]:\n  \\<open>is_failed (merge_status a st') \\<longleftrightarrow> is_failed a \\<or> is_failed st'\\<close>\n  \\<open>is_found (merge_status a st') \\<longleftrightarrow> \\<not>is_failed a \\<and> \\<not>is_failed st' \\<and> (is_found a \\<or> is_found st')\\<close>\n  \\<open>is_success (merge_status a st') \\<longleftrightarrow> (is_success a \\<and> is_success st')\\<close>", "lemma status_rel_merge_status:\n  \\<open>(merge_status a b, SUCCESS) \\<notin> status_rel \\<longleftrightarrow>\n    (a = FAILED) \\<or> (b = FAILED) \\<or>\n    a = FOUND \\<or> (b = FOUND)\\<close>", "lemma Ex_status_iff:\n  \\<open>(\\<exists>a. P a) \\<longleftrightarrow> P SUCCESS \\<or> P FOUND \\<or> (P (FAILED))\\<close>", "lemma is_failed_alt_def:\n  \\<open>is_failed st' \\<longleftrightarrow> \\<not>is_success st' \\<and> \\<not>is_found st'\\<close>", "lemma merge_status_eq_iff[simp]:\n  \\<open>merge_status a SUCCESS = SUCCESS \\<longleftrightarrow> a = SUCCESS\\<close>\n  \\<open>merge_status a SUCCESS = FOUND \\<longleftrightarrow> a = FOUND\\<close>\n  \\<open>merge_status SUCCESS a = SUCCESS \\<longleftrightarrow> a = SUCCESS\\<close>\n  \\<open>merge_status SUCCESS a = FOUND \\<longleftrightarrow> a = FOUND\\<close>\n  \\<open>merge_status SUCCESS a = FAILED \\<longleftrightarrow> a = FAILED\\<close>\n  \\<open>merge_status a SUCCESS = FAILED \\<longleftrightarrow> a = FAILED\\<close>\n  \\<open>merge_status FOUND a = FAILED \\<longleftrightarrow> a = FAILED\\<close>\n  \\<open>merge_status a FOUND = FAILED \\<longleftrightarrow> a = FAILED\\<close>\n  \\<open>merge_status a FOUND = SUCCESS \\<longleftrightarrow> False\\<close>\n  \\<open>merge_status a b = FOUND \\<longleftrightarrow> (a = FOUND \\<or> b = FOUND) \\<and> (a \\<noteq> FAILED \\<and> b \\<noteq> FAILED)\\<close>", "lemma fmdrop_irrelevant: \\<open>x11 \\<notin># dom_m A \\<Longrightarrow> fmdrop x11 A = A\\<close>", "lemma PAC_checker_step_PAC_checker_specification2:\n  fixes a :: \\<open>status\\<close>\n  assumes AB: \\<open>((\\<V>, A),(\\<V>\\<^sub>B, B)) \\<in> polys_rel_full\\<close> and\n    \\<open>\\<not>is_failed a\\<close> and\n    [simp,intro]: \\<open>a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0)\\<close> and\n    A\\<^sub>0B: \\<open>PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B)\\<close> and\n    spec\\<^sub>0: \\<open>vars spec \\<subseteq> \\<V>\\<^sub>0\\<close>  and\n    vars_A\\<^sub>0: \\<open>\\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0\\<close>\n  shows \\<open>PAC_checker_step spec (a, (\\<V>, A)) st \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full) (PAC_checker_specification_step2 (\\<V>\\<^sub>0, A\\<^sub>0) spec (\\<V>, B))\\<close>", "lemma PAC_checker_specification_spec_trans:\n  \\<open>PAC_checker_specification_spec spec A (st, x2) \\<Longrightarrow>\n    PAC_checker_specification_step_spec A spec x2 (st', x1a) \\<Longrightarrow>\n    PAC_checker_specification_spec spec A (st', x1a)\\<close>", "lemma RES_SPEC_eq:\n  \\<open>RES \\<Phi> = SPEC(\\<lambda>P. P \\<in> \\<Phi>)\\<close>", "lemma is_failed_is_success_completeD:\n  \\<open>\\<not> is_failed x \\<Longrightarrow> \\<not>is_success x \\<Longrightarrow> is_found x\\<close>", "lemma PAC_checker_PAC_checker_specification2:\n  \\<open>(A, B) \\<in>  polys_rel_full \\<Longrightarrow>\n    \\<not>is_failed a \\<Longrightarrow>\n    (a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B))) \\<Longrightarrow>\n    \\<Union>(vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B \\<Longrightarrow>\n    vars spec \\<subseteq> fst B \\<Longrightarrow>\n  PAC_checker spec A a st \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full) (PAC_checker_specification2 spec B)\\<close>", "lemma fmap_eq_dom_iff:\n  \\<open>A = A' \\<longleftrightarrow> dom_m A = dom_m A' \\<and> (\\<forall>i \\<in># dom_m A. the (fmlookup A i) = the (fmlookup A' i))\\<close>", "lemma ideal_remap_incl:\n  \\<open>finite A' \\<Longrightarrow> (\\<forall>a'\\<in>A'. \\<exists>a\\<in>A. a-a' \\<in> B) \\<Longrightarrow> ideal (A' \\<union> B) \\<subseteq> ideal (A \\<union> B)\\<close>", "lemma pac_ideal_remap_eq:\n  \\<open>dom_m b = dom_m ba \\<Longrightarrow>\n       \\<forall>i\\<in>#dom_m ba.\n          the (fmlookup b i) - the (fmlookup ba i)\n          \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n     pac_ideal ((\\<lambda>x. the (fmlookup b x)) ` set_mset (dom_m ba)) = pac_ideal ((\\<lambda>x. the (fmlookup ba x)) ` set_mset (dom_m ba))\\<close>", "lemma remap_polys_polynomial_bool_remap_polys_change_all:\n  \\<open>remap_polys_polynomial_bool spec \\<V> A \\<le> remap_polys_change_all spec \\<V> A\\<close>", "lemma remap_polys_spec:\n  \\<open>remap_polys spec \\<V> A \\<le> remap_polys_polynomial_bool spec \\<V> A\\<close>", "lemma restricted_ideal_to_mono:\n  \\<open>restricted_ideal_to\\<^sub>I \\<V> I \\<subseteq> restricted_ideal_to\\<^sub>I \\<V>' J \\<Longrightarrow>\n  \\<U> \\<subseteq> \\<V> \\<Longrightarrow>\n   restricted_ideal_to\\<^sub>I \\<U> I \\<subseteq> restricted_ideal_to\\<^sub>I \\<U>  J\\<close>", "lemma pac_ideal_idemp: \\<open>pac_ideal (pac_ideal A) = pac_ideal A\\<close>", "lemma full_checker_spec:\n  assumes \\<open>(A, A') \\<in> polys_rel\\<close>\n  shows\n      \\<open>full_checker spec A pac \\<le> \\<Down>{((st, G), (st', G')). (st, st') \\<in> status_rel \\<and>\n           (st \\<noteq> FAILED \\<longrightarrow> (G, G') \\<in> polys_rel_full)}\n        (PAC_checker_specification spec (A'))\\<close>", "lemma full_checker_spec':\n  shows\n    \\<open>(uncurry2 full_checker, uncurry2 (\\<lambda>spec A _. PAC_checker_specification spec A)) \\<in>\n       (Id \\<times>\\<^sub>r polys_rel) \\<times>\\<^sub>r Id \\<rightarrow>\\<^sub>f \\<langle>{((st, G), (st', G')). (st, st') \\<in> status_rel \\<and>\n           (st \\<noteq> FAILED \\<longrightarrow> (G, G') \\<in> polys_rel_full)}\\<rangle>nres_rel\\<close>"], "translations": [["", "lemma is_success_alt_def:\n  \\<open>is_success a \\<longleftrightarrow> a = SUCCESS\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_success a = (a = SUCCESS)", "by (cases a) auto"], ["", "datatype ('a, 'b, 'lbls) pac_step =\n  Add (pac_src1: 'lbls) (pac_src2: 'lbls) (new_id: 'lbls) (pac_res: 'a) |\n  Mult (pac_src1: 'lbls) (pac_mult: 'a) (new_id: 'lbls) (pac_res: 'a) |\n  Extension (new_id: 'lbls) (new_var: 'b) (pac_res: 'a) |\n  Del (pac_src1: 'lbls)"], ["", "type_synonym  pac_state = \\<open>(nat set \\<times> int_poly multiset)\\<close>"], ["", "definition PAC_checker_specification\n  :: \\<open>int_poly \\<Rightarrow> int_poly multiset \\<Rightarrow> (status \\<times> nat set \\<times> int_poly multiset) nres\\<close>\nwhere\n  \\<open>PAC_checker_specification spec A = SPEC(\\<lambda>(b, \\<V>, B).\n      (\\<not>is_failed b \\<longrightarrow> restricted_ideal_to\\<^sub>I (\\<Union>(vars ` set_mset A) \\<union> vars spec) B \\<subseteq> restricted_ideal_to\\<^sub>I (\\<Union>(vars ` set_mset A) \\<union> vars spec) A) \\<and>\n      (is_found b \\<longrightarrow> spec \\<in> pac_ideal (set_mset A)))\\<close>"], ["", "definition PAC_checker_specification_spec\n  ::  \\<open>int_poly \\<Rightarrow> pac_state \\<Rightarrow> (status \\<times> pac_state) \\<Rightarrow> bool\\<close>\nwhere\n  \\<open>PAC_checker_specification_spec spec = (\\<lambda>(\\<V>, A) (b, B). (\\<not>is_failed b \\<longrightarrow> \\<Union>(vars ` set_mset A) \\<subseteq> \\<V>) \\<and>\n       (is_success b \\<longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, A) B) \\<and>\n       (is_found b \\<longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, A) B \\<and> spec \\<in> pac_ideal (set_mset A)))\\<close>"], ["", "abbreviation PAC_checker_specification2\n  ::  \\<open>int_poly \\<Rightarrow> (nat set \\<times> int_poly multiset) \\<Rightarrow> (status \\<times> (nat set \\<times> int_poly multiset)) nres\\<close>\nwhere\n  \\<open>PAC_checker_specification2 spec A \\<equiv> SPEC(PAC_checker_specification_spec spec A)\\<close>"], ["", "definition PAC_checker_specification_step_spec\n  ::  \\<open>pac_state \\<Rightarrow> int_poly \\<Rightarrow> pac_state \\<Rightarrow> (status \\<times> pac_state) \\<Rightarrow> bool\\<close>\nwhere\n  \\<open>PAC_checker_specification_step_spec = (\\<lambda>(\\<V>\\<^sub>0, A\\<^sub>0) spec (\\<V>, A) (b, B).\n       (is_success b \\<longrightarrow>\n         \\<Union>(vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0 \\<and>\n          \\<Union>(vars ` set_mset A) \\<subseteq> \\<V> \\<and> PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, A) \\<and> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, A) B) \\<and>\n       (is_found b \\<longrightarrow>\n          \\<Union>(vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0 \\<and>\n          \\<Union>(vars ` set_mset A) \\<subseteq> \\<V> \\<and> PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, A) \\<and> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, A) B \\<and>\n         spec \\<in> pac_ideal (set_mset A\\<^sub>0)))\\<close>"], ["", "abbreviation PAC_checker_specification_step2\n  ::  \\<open>pac_state \\<Rightarrow> int_poly \\<Rightarrow> pac_state \\<Rightarrow> (status \\<times> pac_state) nres\\<close>\nwhere\n  \\<open>PAC_checker_specification_step2 A\\<^sub>0 spec A \\<equiv> SPEC(PAC_checker_specification_step_spec A\\<^sub>0  spec A)\\<close>"], ["", "definition normalize_poly_spec :: \\<open>_\\<close> where\n  \\<open>normalize_poly_spec p = SPEC (\\<lambda>r. p - r \\<in> ideal polynomial_bool \\<and> vars r \\<subseteq> vars p)\\<close>"], ["", "lemma normalize_poly_spec_alt_def:\n  \\<open>normalize_poly_spec p = SPEC (\\<lambda>r. r - p \\<in> ideal polynomial_bool \\<and> vars r \\<subseteq> vars p)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. normalize_poly_spec p =\n    SPEC\n     (\\<lambda>r.\n         r - p \\<in> More_Modules.ideal polynomial_bool \\<and>\n         vars r \\<subseteq> vars p)", "unfolding normalize_poly_spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>r.\n         p - r \\<in> More_Modules.ideal polynomial_bool \\<and>\n         vars r \\<subseteq> vars p) =\n    SPEC\n     (\\<lambda>r.\n         r - p \\<in> More_Modules.ideal polynomial_bool \\<and>\n         vars r \\<subseteq> vars p)", "by (auto dest: ideal.span_neg)"], ["", "definition mult_poly_spec :: \\<open>int mpoly \\<Rightarrow> int mpoly \\<Rightarrow> int mpoly nres\\<close> where\n  \\<open>mult_poly_spec p q = SPEC (\\<lambda>r. p * q - r \\<in> ideal polynomial_bool)\\<close>"], ["", "definition check_add :: \\<open>(nat, int mpoly) fmap \\<Rightarrow> nat set \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> int mpoly \\<Rightarrow> bool nres\\<close> where\n  \\<open>check_add A \\<V> p q i r =\n     SPEC(\\<lambda>b. b \\<longrightarrow> p \\<in># dom_m A \\<and> q \\<in># dom_m A \\<and> i \\<notin># dom_m A \\<and> vars r \\<subseteq> \\<V> \\<and>\n            the (fmlookup A p) + the (fmlookup A q) - r \\<in>  ideal polynomial_bool)\\<close>"], ["", "definition check_mult :: \\<open>(nat, int mpoly) fmap \\<Rightarrow> nat set \\<Rightarrow> nat \\<Rightarrow> int mpoly \\<Rightarrow> nat \\<Rightarrow> int mpoly \\<Rightarrow> bool nres\\<close> where\n  \\<open>check_mult A \\<V> p q i r =\n     SPEC(\\<lambda>b. b \\<longrightarrow> p \\<in># dom_m A \\<and>i \\<notin># dom_m A \\<and> vars q \\<subseteq> \\<V> \\<and> vars r \\<subseteq> \\<V> \\<and>\n            the (fmlookup A p) * q - r \\<in>  ideal polynomial_bool)\\<close>"], ["", "definition check_extension :: \\<open>(nat, int mpoly) fmap \\<Rightarrow> nat set \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> int mpoly \\<Rightarrow> (bool) nres\\<close> where\n  \\<open>check_extension A \\<V> i v p =\n     SPEC(\\<lambda>b. b \\<longrightarrow> (i \\<notin># dom_m A \\<and>\n     (v \\<notin> \\<V> \\<and>\n           (p+Var v)\\<^sup>2 - (p+Var v) \\<in> ideal polynomial_bool \\<and>\n            vars (p+Var v) \\<subseteq> \\<V>)))\\<close>"], ["", "fun merge_status where\n  \\<open>merge_status (FAILED) _ = FAILED\\<close> |\n  \\<open>merge_status _ (FAILED) = FAILED\\<close> |\n  \\<open>merge_status FOUND _ = FOUND\\<close> |\n  \\<open>merge_status _ FOUND = FOUND\\<close> |\n  \\<open>merge_status _ _ = SUCCESS\\<close>"], ["", "type_synonym fpac_step = \\<open>nat set \\<times> (nat, int_poly) fmap\\<close>"], ["", "definition check_del :: \\<open>(nat, int mpoly) fmap \\<Rightarrow> nat \\<Rightarrow> bool nres\\<close> where\n  \\<open>check_del A p =\n     SPEC(\\<lambda>b. b \\<longrightarrow> True)\\<close>"], ["", "subsection \\<open>Algorithm\\<close>"], ["", "definition PAC_checker_step\n  ::  \\<open>int_poly \\<Rightarrow> (status \\<times> fpac_step) \\<Rightarrow> (int_poly, nat, nat) pac_step \\<Rightarrow>\n    (status \\<times> fpac_step) nres\\<close>\nwhere\n  \\<open>PAC_checker_step = (\\<lambda>spec (stat, (\\<V>, A)) st. case st of\n     Add _ _ _ _ \\<Rightarrow>\n       do {\n         r \\<leftarrow> normalize_poly_spec (pac_res st);\n        eq \\<leftarrow> check_add A \\<V> (pac_src1 st) (pac_src2 st) (new_id st) r;\n        st' \\<leftarrow> SPEC(\\<lambda>st'. (\\<not>is_failed st' \\<and> is_found st' \\<longrightarrow> r - spec \\<in> ideal polynomial_bool));\n        if eq\n        then RETURN (merge_status stat st',\n          \\<V>, fmupd (new_id st) r A)\n        else RETURN (FAILED, (\\<V>, A))\n   }\n   | Del _ \\<Rightarrow>\n       do {\n        eq \\<leftarrow> check_del A (pac_src1 st);\n        if eq\n        then RETURN (stat, (\\<V>, fmdrop (pac_src1 st) A))\n        else RETURN (FAILED, (\\<V>, A))\n   }\n   | Mult _ _ _ _ \\<Rightarrow>\n       do {\n         r \\<leftarrow> normalize_poly_spec (pac_res st);\n         q \\<leftarrow> normalize_poly_spec (pac_mult st);\n        eq \\<leftarrow> check_mult A \\<V> (pac_src1 st) q (new_id st) r;\n        st' \\<leftarrow> SPEC(\\<lambda>st'. (\\<not>is_failed st' \\<and> is_found st' \\<longrightarrow> r - spec \\<in> ideal polynomial_bool));\n        if eq\n        then RETURN (merge_status stat st',\n          \\<V>, fmupd (new_id st) r A)\n        else RETURN (FAILED, (\\<V>, A))\n   }\n   | Extension _ _ _ \\<Rightarrow>\n       do {\n         r \\<leftarrow> normalize_poly_spec (pac_res st - Var (new_var st));\n        (eq) \\<leftarrow> check_extension A \\<V> (new_id st) (new_var st) r;\n        if eq\n        then do {\n         RETURN (stat,\n          insert (new_var st) \\<V>, fmupd (new_id st) (r) A)}\n        else RETURN (FAILED, (\\<V>, A))\n   }\n )\\<close>"], ["", "definition polys_rel :: \\<open>((nat, int mpoly)fmap \\<times> _) set\\<close> where\n\\<open>polys_rel = {(A, B). B = (ran_m A)}\\<close>"], ["", "definition polys_rel_full :: \\<open>((nat set \\<times> (nat, int mpoly)fmap) \\<times> _) set\\<close> where\n  \\<open>polys_rel_full = {((\\<V>, A), (\\<V>' , B)). (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'}\\<close>"], ["", "lemma polys_rel_update_remove:\n  \\<open>x13 \\<notin>#dom_m A \\<Longrightarrow> x11 \\<in># dom_m A \\<Longrightarrow> x12 \\<in># dom_m A \\<Longrightarrow> x11 \\<noteq> x12 \\<Longrightarrow> (A,B) \\<in> polys_rel \\<Longrightarrow>\n   (fmupd x13 r (fmdrop x11 (fmdrop x12 A)),\n        add_mset r B - {#the (fmlookup A x11), the (fmlookup A x12)#})\n       \\<in> polys_rel\\<close>\n  \\<open>x13 \\<notin>#dom_m A \\<Longrightarrow> x11 \\<in># dom_m A \\<Longrightarrow> (A,B) \\<in> polys_rel \\<Longrightarrow>\n   (fmupd x13 r (fmdrop x11 A),add_mset r B - {#the (fmlookup A x11)#})\n       \\<in> polys_rel\\<close>\n  \\<open>x13 \\<notin>#dom_m A \\<Longrightarrow> (A,B) \\<in> polys_rel \\<Longrightarrow>\n   (fmupd x13 r A, add_mset r B) \\<in> polys_rel\\<close>\n  \\<open>x13 \\<in>#dom_m A \\<Longrightarrow> (A,B) \\<in> polys_rel \\<Longrightarrow>\n   (fmdrop x13 A, remove1_mset (the (fmlookup A x13)) B) \\<in> polys_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lbrakk>x13 \\<notin># dom_m A; x11 \\<in># dom_m A;\n       x12 \\<in># dom_m A; x11 \\<noteq> x12; (A, B) \\<in> polys_rel\\<rbrakk>\n      \\<Longrightarrow> (fmupd x13 r (fmdrop x11 (fmdrop x12 A)),\n                         add_mset r B -\n                         {#the (fmlookup A x11), the (fmlookup A x12)#})\n                        \\<in> polys_rel) &&&\n     (\\<lbrakk>x13 \\<notin># dom_m A; x11 \\<in># dom_m A;\n       (A, B) \\<in> polys_rel\\<rbrakk>\n      \\<Longrightarrow> (fmupd x13 r (fmdrop x11 A),\n                         remove1_mset (the (fmlookup A x11)) (add_mset r B))\n                        \\<in> polys_rel)) &&&\n    (\\<lbrakk>x13 \\<notin># dom_m A; (A, B) \\<in> polys_rel\\<rbrakk>\n     \\<Longrightarrow> (fmupd x13 r A, add_mset r B) \\<in> polys_rel) &&&\n    (\\<lbrakk>x13 \\<in># dom_m A; (A, B) \\<in> polys_rel\\<rbrakk>\n     \\<Longrightarrow> (fmdrop x13 A, remove1_mset (the (fmlookup A x13)) B)\n                       \\<in> polys_rel)", "using distinct_mset_dom[of A]"], ["proof (prove)\nusing this:\n  distinct_mset (dom_m A)\n\ngoal (1 subgoal):\n 1. ((\\<lbrakk>x13 \\<notin># dom_m A; x11 \\<in># dom_m A;\n       x12 \\<in># dom_m A; x11 \\<noteq> x12; (A, B) \\<in> polys_rel\\<rbrakk>\n      \\<Longrightarrow> (fmupd x13 r (fmdrop x11 (fmdrop x12 A)),\n                         add_mset r B -\n                         {#the (fmlookup A x11), the (fmlookup A x12)#})\n                        \\<in> polys_rel) &&&\n     (\\<lbrakk>x13 \\<notin># dom_m A; x11 \\<in># dom_m A;\n       (A, B) \\<in> polys_rel\\<rbrakk>\n      \\<Longrightarrow> (fmupd x13 r (fmdrop x11 A),\n                         remove1_mset (the (fmlookup A x11)) (add_mset r B))\n                        \\<in> polys_rel)) &&&\n    (\\<lbrakk>x13 \\<notin># dom_m A; (A, B) \\<in> polys_rel\\<rbrakk>\n     \\<Longrightarrow> (fmupd x13 r A, add_mset r B) \\<in> polys_rel) &&&\n    (\\<lbrakk>x13 \\<in># dom_m A; (A, B) \\<in> polys_rel\\<rbrakk>\n     \\<Longrightarrow> (fmdrop x13 A, remove1_mset (the (fmlookup A x13)) B)\n                       \\<in> polys_rel)", "apply (auto simp: polys_rel_def ran_m_mapsto_upd ran_m_mapsto_upd_notin\n    ran_m_fmdrop)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x13 \\<notin># dom_m A; x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     x11 \\<noteq> x12; B = ran_m A; distinct_mset (dom_m A)\\<rbrakk>\n    \\<Longrightarrow> add_mset r (ran_m A) -\n                      {#the (fmlookup A x11), the (fmlookup A x12)#} =\n                      ran_m (fmupd x13 r (fmdrop x11 (fmdrop x12 A)))\n 2. \\<lbrakk>x13 \\<notin># dom_m A; x11 \\<in># dom_m A; B = ran_m A;\n     distinct_mset (dom_m A)\\<rbrakk>\n    \\<Longrightarrow> add_mset r\n                       (remove1_mset (the (fmlookup A x11)) (ran_m A)) =\n                      ran_m (fmupd x13 r (fmdrop x11 A))", "apply (subst ran_m_mapsto_upd_notin)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>x13 \\<notin># dom_m A; x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     x11 \\<noteq> x12; B = ran_m A; distinct_mset (dom_m A)\\<rbrakk>\n    \\<Longrightarrow> x13 \\<notin># dom_m (fmdrop x11 (fmdrop x12 A))\n 2. \\<lbrakk>x13 \\<notin># dom_m A; x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     x11 \\<noteq> x12; B = ran_m A; distinct_mset (dom_m A)\\<rbrakk>\n    \\<Longrightarrow> add_mset r (ran_m A) -\n                      {#the (fmlookup A x11), the (fmlookup A x12)#} =\n                      add_mset r (ran_m (fmdrop x11 (fmdrop x12 A)))\n 3. \\<lbrakk>x13 \\<notin># dom_m A; x11 \\<in># dom_m A; B = ran_m A;\n     distinct_mset (dom_m A)\\<rbrakk>\n    \\<Longrightarrow> add_mset r\n                       (remove1_mset (the (fmlookup A x11)) (ran_m A)) =\n                      ran_m (fmupd x13 r (fmdrop x11 A))", "apply (auto dest: in_diffD dest!: multi_member_split simp: ran_m_fmdrop ran_m_fmdrop_If distinct_mset_remove1_All ran_m_def\n      add_mset_eq_add_mset removeAll_notin\n    split: if_splits intro!: image_mset_cong)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma polys_rel_in_dom_inD:\n  \\<open>(A, B) \\<in> polys_rel \\<Longrightarrow>\n    x12 \\<in># dom_m A \\<Longrightarrow>\n    the (fmlookup A x12) \\<in># B\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel; x12 \\<in># dom_m A\\<rbrakk>\n    \\<Longrightarrow> the (fmlookup A x12) \\<in># B", "by (auto simp: polys_rel_def)"], ["", "lemma PAC_Format_add_and_remove:\n  \\<open>r - x14 \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       (A, B) \\<in> polys_rel \\<Longrightarrow>\n       x12 \\<in># dom_m A \\<Longrightarrow>\n       x13 \\<notin># dom_m A \\<Longrightarrow>\n       vars r \\<subseteq> \\<V> \\<Longrightarrow>\n       2 * the (fmlookup A x12) - r \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) (\\<V>, remove1_mset (the (fmlookup A x12)) (add_mset r B))\\<close>\n   \\<open>r - x14 \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       (A, B) \\<in> polys_rel \\<Longrightarrow>\n       the (fmlookup A x11) + the (fmlookup A x12) - r \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       x11 \\<in># dom_m A \\<Longrightarrow>\n       x12 \\<in># dom_m A \\<Longrightarrow>\n       vars r \\<subseteq> \\<V> \\<Longrightarrow>\n       PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) (\\<V>, add_mset r B)\\<close>\n   \\<open>r - x14 \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       (A, B) \\<in> polys_rel \\<Longrightarrow>\n       x11 \\<in># dom_m A \\<Longrightarrow>\n       x12 \\<in># dom_m A \\<Longrightarrow>\n       the (fmlookup A x11) + the (fmlookup A x12) - r \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       vars r \\<subseteq> \\<V> \\<Longrightarrow>\n       x11 \\<noteq> x12 \\<Longrightarrow>\n       PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n        (\\<V>, add_mset r B - {#the (fmlookup A x11), the (fmlookup A x12)#})\\<close>\n   \\<open>(A, B) \\<in> polys_rel \\<Longrightarrow>\n       r - x34 \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       x11 \\<in># dom_m A \\<Longrightarrow>\n       the (fmlookup A x11) * x32 - r \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       vars x32 \\<subseteq> \\<V> \\<Longrightarrow>\n       vars r \\<subseteq> \\<V> \\<Longrightarrow>\n       PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) (\\<V>, add_mset r B)\\<close>\n   \\<open>(A, B) \\<in> polys_rel \\<Longrightarrow>\n       r - x34 \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       x11 \\<in># dom_m A \\<Longrightarrow>\n       the (fmlookup A x11) * x32 - r \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       vars x32 \\<subseteq> \\<V> \\<Longrightarrow>\n       vars r \\<subseteq> \\<V> \\<Longrightarrow>\n       PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) (\\<V>, remove1_mset (the (fmlookup A x11)) (add_mset r B))\\<close>\n  \\<open>(A, B) \\<in> polys_rel \\<Longrightarrow>\n       x12 \\<in># dom_m A \\<Longrightarrow>\n       PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) (\\<V>, remove1_mset (the (fmlookup A x12)) B)\\<close>\n   \\<open>(A, B) \\<in> polys_rel \\<Longrightarrow>\n       (p' + Var x)\\<^sup>2 - (p' + Var x) \\<in> ideal polynomial_bool \\<Longrightarrow>\n       x \\<notin> \\<V> \\<Longrightarrow>\n       x \\<notin> vars(p' + Var x) \\<Longrightarrow>\n       vars(p' + Var x) \\<subseteq> \\<V> \\<Longrightarrow>\n       PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n         (insert x \\<V>, add_mset p' B)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n       (A, B) \\<in> polys_rel; x12 \\<in># dom_m A; x13 \\<notin># dom_m A;\n       vars r \\<subseteq> \\<V>;\n       2 * the (fmlookup A x12) - r\n       \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n      \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                         (\\<V>,\n                          remove1_mset (the (fmlookup A x12))\n                           (add_mset r B))) &&&\n     (\\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n       (A, B) \\<in> polys_rel;\n       the (fmlookup A x11) + the (fmlookup A x12) - r\n       \\<in> More_Modules.ideal polynomial_bool;\n       x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n       vars r \\<subseteq> \\<V>\\<rbrakk>\n      \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                         (\\<V>, add_mset r B)) &&&\n     (\\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n       (A, B) \\<in> polys_rel; x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n       the (fmlookup A x11) + the (fmlookup A x12) - r\n       \\<in> More_Modules.ideal polynomial_bool;\n       vars r \\<subseteq> \\<V>; x11 \\<noteq> x12\\<rbrakk>\n      \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                         (\\<V>,\n                          add_mset r B -\n                          {#the (fmlookup A x11),\n                            the (fmlookup A x12)#}))) &&&\n    ((\\<lbrakk>(A, B) \\<in> polys_rel;\n       r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n       the (fmlookup A x11) * x32 - r\n       \\<in> More_Modules.ideal polynomial_bool;\n       vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n      \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                         (\\<V>, add_mset r B)) &&&\n     (\\<lbrakk>(A, B) \\<in> polys_rel;\n       r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n       the (fmlookup A x11) * x32 - r\n       \\<in> More_Modules.ideal polynomial_bool;\n       vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n      \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                         (\\<V>,\n                          remove1_mset (the (fmlookup A x11))\n                           (add_mset r B)))) &&&\n    (\\<lbrakk>(A, B) \\<in> polys_rel; x12 \\<in># dom_m A\\<rbrakk>\n     \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                        (\\<V>, remove1_mset (the (fmlookup A x12)) B)) &&&\n    (\\<lbrakk>(A, B) \\<in> polys_rel;\n      (p' + Var x)\\<^sup>2 - (p' + Var x)\n      \\<in> More_Modules.ideal polynomial_bool;\n      x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n      vars (p' + Var x) \\<subseteq> \\<V>\\<rbrakk>\n     \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                        (insert x \\<V>, add_mset p' B))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x12 \\<in># dom_m A; x13 \\<notin># dom_m A;\n     vars r \\<subseteq> \\<V>;\n     2 * the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x12)) (add_mset r B))", "apply (rule converse_rtranclp_into_rtranclp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x12 \\<in># dom_m A; x13 \\<notin># dom_m A;\n     vars r \\<subseteq> \\<V>;\n     2 * the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> PAC_Format (\\<V>, B) ?b\n 2. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x12 \\<in># dom_m A; x13 \\<notin># dom_m A;\n     vars r \\<subseteq> \\<V>;\n     2 * the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* ?b\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x12)) (add_mset r B))", "apply (rule PAC_Format.add[of \\<open>the (fmlookup A x12)\\<close> B \\<open>the (fmlookup A x12)\\<close>])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x12 \\<in># dom_m A; x13 \\<notin># dom_m A;\n     vars r \\<subseteq> \\<V>;\n     2 * the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> the (fmlookup A x12) \\<in># B\n 2. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x12 \\<in># dom_m A; x13 \\<notin># dom_m A;\n     vars r \\<subseteq> \\<V>;\n     2 * the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> the (fmlookup A x12) \\<in># B\n 3. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x12 \\<in># dom_m A; x13 \\<notin># dom_m A;\n     vars r \\<subseteq> \\<V>;\n     2 * the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> the (fmlookup A x12) + the (fmlookup A x12) - ?p'3\n                      \\<in> More_Modules.ideal polynomial_bool\n 4. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x12 \\<in># dom_m A; x13 \\<notin># dom_m A;\n     vars r \\<subseteq> \\<V>;\n     2 * the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> vars ?p'3 \\<subseteq> \\<V>\n 5. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x12 \\<in># dom_m A; x13 \\<notin># dom_m A;\n     vars r \\<subseteq> \\<V>;\n     2 * the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, add_mset ?p'3 B)\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x12)) (add_mset r B))", "apply (auto dest: polys_rel_in_dom_inD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x12 \\<in># dom_m A; x13 \\<notin># dom_m A;\n     vars r \\<subseteq> \\<V>;\n     2 * the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, add_mset r B)\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x12)) (add_mset r B))", "apply (rule converse_rtranclp_into_rtranclp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x12 \\<in># dom_m A; x13 \\<notin># dom_m A;\n     vars r \\<subseteq> \\<V>;\n     2 * the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> PAC_Format (\\<V>, add_mset r B) ?b16\n 2. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x12 \\<in># dom_m A; x13 \\<notin># dom_m A;\n     vars r \\<subseteq> \\<V>;\n     2 * the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* ?b16\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x12)) (add_mset r B))", "apply (rule PAC_Format.del[of \\<open>the (fmlookup A x12)\\<close>])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x12 \\<in># dom_m A; x13 \\<notin># dom_m A;\n     vars r \\<subseteq> \\<V>;\n     2 * the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> the (fmlookup A x12) \\<in># add_mset r B\n 2. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x12 \\<in># dom_m A; x13 \\<notin># dom_m A;\n     vars r \\<subseteq> \\<V>;\n     2 * the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>*\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x12)) (add_mset r B))\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x12)) (add_mset r B))", "apply (auto dest: polys_rel_in_dom_inD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>, add_mset r B)\n 2. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars r \\<subseteq> \\<V>; x11 \\<noteq> x12\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>,\n                        add_mset r B -\n                        {#the (fmlookup A x11), the (fmlookup A x12)#})\n 3. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>, add_mset r B)\n 4. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x11)) (add_mset r B))\n 5. \\<lbrakk>(A, B) \\<in> polys_rel; x12 \\<in># dom_m A\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>, remove1_mset (the (fmlookup A x12)) B)\n 6. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (insert x \\<V>, add_mset p' B)", "subgoal H2"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>, add_mset r B)", "apply (rule converse_rtranclp_into_rtranclp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format (\\<V>, B) ?b\n 2. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* ?b (\\<V>, add_mset r B)", "apply (rule PAC_Format.add[of \\<open>the (fmlookup A x11)\\<close> B \\<open>the (fmlookup A x12)\\<close>])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> the (fmlookup A x11) \\<in># B\n 2. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> the (fmlookup A x12) \\<in># B\n 3. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> the (fmlookup A x11) + the (fmlookup A x12) - ?p'3\n                      \\<in> More_Modules.ideal polynomial_bool\n 4. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> vars ?p'3 \\<subseteq> \\<V>\n 5. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, add_mset ?p'3 B)\n                       (\\<V>, add_mset r B)", "apply (auto dest: polys_rel_in_dom_inD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars r \\<subseteq> \\<V>; x11 \\<noteq> x12\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>,\n                        add_mset r B -\n                        {#the (fmlookup A x11), the (fmlookup A x12)#})\n 2. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>, add_mset r B)\n 3. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x11)) (add_mset r B))\n 4. \\<lbrakk>(A, B) \\<in> polys_rel; x12 \\<in># dom_m A\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>, remove1_mset (the (fmlookup A x12)) B)\n 5. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (insert x \\<V>, add_mset p' B)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars r \\<subseteq> \\<V>; x11 \\<noteq> x12\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>,\n                        add_mset r B -\n                        {#the (fmlookup A x11), the (fmlookup A x12)#})", "apply (rule rtranclp_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars r \\<subseteq> \\<V>; x11 \\<noteq> x12\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) ?y\n 2. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars r \\<subseteq> \\<V>; x11 \\<noteq> x12\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* ?y\n                       (\\<V>,\n                        add_mset r B -\n                        {#the (fmlookup A x11), the (fmlookup A x12)#})", "apply (rule H2; assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars r \\<subseteq> \\<V>; x11 \\<noteq> x12\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, add_mset r B)\n                       (\\<V>,\n                        add_mset r B -\n                        {#the (fmlookup A x11), the (fmlookup A x12)#})", "apply (rule converse_rtranclp_into_rtranclp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars r \\<subseteq> \\<V>; x11 \\<noteq> x12\\<rbrakk>\n    \\<Longrightarrow> PAC_Format (\\<V>, add_mset r B) ?b23\n 2. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars r \\<subseteq> \\<V>; x11 \\<noteq> x12\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* ?b23\n                       (\\<V>,\n                        add_mset r B -\n                        {#the (fmlookup A x11), the (fmlookup A x12)#})", "apply (rule PAC_Format.del[of \\<open>the (fmlookup A x12)\\<close>])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars r \\<subseteq> \\<V>; x11 \\<noteq> x12\\<rbrakk>\n    \\<Longrightarrow> the (fmlookup A x12) \\<in># add_mset r B\n 2. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars r \\<subseteq> \\<V>; x11 \\<noteq> x12\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>*\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x12)) (add_mset r B))\n                       (\\<V>,\n                        add_mset r B -\n                        {#the (fmlookup A x11), the (fmlookup A x12)#})", "apply (auto dest: polys_rel_in_dom_inD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars r \\<subseteq> \\<V>; x11 \\<noteq> x12\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>*\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x12)) (add_mset r B))\n                       (\\<V>,\n                        add_mset r B -\n                        {#the (fmlookup A x11), the (fmlookup A x12)#})", "apply (rule converse_rtranclp_into_rtranclp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars r \\<subseteq> \\<V>; x11 \\<noteq> x12\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x12)) (add_mset r B))\n                       ?b35\n 2. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars r \\<subseteq> \\<V>; x11 \\<noteq> x12\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* ?b35\n                       (\\<V>,\n                        add_mset r B -\n                        {#the (fmlookup A x11), the (fmlookup A x12)#})", "apply (rule PAC_Format.del[of \\<open>the (fmlookup A x11)\\<close>])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars r \\<subseteq> \\<V>; x11 \\<noteq> x12\\<rbrakk>\n    \\<Longrightarrow> the (fmlookup A x11)\n                      \\<in># remove1_mset (the (fmlookup A x12))\n                              (add_mset r B)\n 2. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars r \\<subseteq> \\<V>; x11 \\<noteq> x12\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>*\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x11))\n                         (remove1_mset (the (fmlookup A x12))\n                           (add_mset r B)))\n                       (\\<V>,\n                        add_mset r B -\n                        {#the (fmlookup A x11), the (fmlookup A x12)#})", "apply (auto dest: polys_rel_in_dom_inD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r - x14 \\<in> More_Modules.ideal polynomial_bool;\n     (A, B) \\<in> polys_rel; x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars r \\<subseteq> \\<V>; x11 \\<noteq> x12\\<rbrakk>\n    \\<Longrightarrow> the (fmlookup A x11)\n                      \\<in># remove1_mset (the (fmlookup A x12))\n                              (add_mset r B)", "apply (auto simp: polys_rel_def ran_m_def add_mset_eq_add_mset dest!: multi_member_split)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>, add_mset r B)\n 2. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x11)) (add_mset r B))\n 3. \\<lbrakk>(A, B) \\<in> polys_rel; x12 \\<in># dom_m A\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>, remove1_mset (the (fmlookup A x12)) B)\n 4. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (insert x \\<V>, add_mset p' B)", "subgoal H2"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>, add_mset r B)", "apply (rule converse_rtranclp_into_rtranclp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format (\\<V>, B) ?b\n 2. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* ?b (\\<V>, add_mset r B)", "apply (rule PAC_Format.mult[of \\<open>the (fmlookup A x11)\\<close> B \\<open>x32\\<close> r])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> the (fmlookup A x11) \\<in># B\n 2. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> the (fmlookup A x11) * x32 - r\n                      \\<in> More_Modules.ideal polynomial_bool\n 3. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> vars r \\<subseteq> \\<V>\n 4. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> vars x32 \\<subseteq> \\<V>\n 5. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, add_mset r B)\n                       (\\<V>, add_mset r B)", "apply (auto dest: polys_rel_in_dom_inD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x11)) (add_mset r B))\n 2. \\<lbrakk>(A, B) \\<in> polys_rel; x12 \\<in># dom_m A\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>, remove1_mset (the (fmlookup A x12)) B)\n 3. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (insert x \\<V>, add_mset p' B)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x11)) (add_mset r B))", "apply (rule rtranclp_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) ?y\n 2. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* ?y\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x11)) (add_mset r B))", "apply (rule H2; assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, add_mset r B)\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x11)) (add_mset r B))", "apply (rule converse_rtranclp_into_rtranclp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format (\\<V>, add_mset r B) ?b23\n 2. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* ?b23\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x11)) (add_mset r B))", "apply (rule PAC_Format.del[of \\<open>the (fmlookup A x11)\\<close>])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> the (fmlookup A x11) \\<in># add_mset r B\n 2. \\<lbrakk>(A, B) \\<in> polys_rel;\n     r - x34 \\<in> More_Modules.ideal polynomial_bool; x11 \\<in># dom_m A;\n     the (fmlookup A x11) * x32 - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     vars x32 \\<subseteq> \\<V>; vars r \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>*\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x11)) (add_mset r B))\n                       (\\<V>,\n                        remove1_mset (the (fmlookup A x11)) (add_mset r B))", "apply (auto dest: polys_rel_in_dom_inD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel; x12 \\<in># dom_m A\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>, remove1_mset (the (fmlookup A x12)) B)\n 2. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (insert x \\<V>, add_mset p' B)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel; x12 \\<in># dom_m A\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (\\<V>, remove1_mset (the (fmlookup A x12)) B)", "apply (rule converse_rtranclp_into_rtranclp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel; x12 \\<in># dom_m A\\<rbrakk>\n    \\<Longrightarrow> PAC_Format (\\<V>, B) ?b\n 2. \\<lbrakk>(A, B) \\<in> polys_rel; x12 \\<in># dom_m A\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* ?b\n                       (\\<V>, remove1_mset (the (fmlookup A x12)) B)", "apply (rule PAC_Format.del[of \\<open>the (fmlookup A x12)\\<close> B])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel; x12 \\<in># dom_m A\\<rbrakk>\n    \\<Longrightarrow> the (fmlookup A x12) \\<in># B\n 2. \\<lbrakk>(A, B) \\<in> polys_rel; x12 \\<in># dom_m A\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>*\n                       (\\<V>, remove1_mset (the (fmlookup A x12)) B)\n                       (\\<V>, remove1_mset (the (fmlookup A x12)) B)", "apply (auto dest: polys_rel_in_dom_inD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (insert x \\<V>, add_mset p' B)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                       (insert x \\<V>, add_mset p' B)", "apply (rule converse_rtranclp_into_rtranclp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format (\\<V>, B) ?b\n 2. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* ?b\n                       (insert x \\<V>, add_mset p' B)", "apply (rule PAC_Format.extend_pos[of \\<open>p' + Var x\\<close> _ x])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> (p' + Var x)\\<^sup>2 - (p' + Var x)\n                      \\<in> More_Modules.ideal polynomial_bool\n 2. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> vars (p' + Var x) \\<subseteq> \\<V>\n 3. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> x \\<notin> \\<V>\n 4. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>*\n                       (\\<V> \\<union>\n                        {x' \\<in> vars (- Var x + (p' + Var x)).\n                         x' \\<notin> \\<V>},\n                        add_mset (- Var x + (p' + Var x)) B)\n                       (insert x \\<V>, add_mset p' B)", "using coeff_monomila_in_varsD[of \\<open>p' - Var x\\<close> x]"], ["proof (prove)\nusing this:\n  MPoly_Type.coeff (p' - Var x) (monomial (Suc 0) x) \\<noteq>\n  0 \\<Longrightarrow>\n  x \\<in> vars (p' - Var x)\n\ngoal (4 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> (p' + Var x)\\<^sup>2 - (p' + Var x)\n                      \\<in> More_Modules.ideal polynomial_bool\n 2. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> vars (p' + Var x) \\<subseteq> \\<V>\n 3. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> x \\<notin> \\<V>\n 4. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>*\n                       (\\<V> \\<union>\n                        {x' \\<in> vars (- Var x + (p' + Var x)).\n                         x' \\<notin> \\<V>},\n                        add_mset (- Var x + (p' + Var x)) B)\n                       (insert x \\<V>, add_mset p' B)", "apply (auto dest: polys_rel_in_dom_inD simp: vars_in_right_only vars_subst_in_left_only)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>;\n     MPoly_Type.coeff (p' - Var x) (monomial (Suc 0) x) \\<noteq>\n     0 \\<Longrightarrow>\n     x \\<in> vars (p' - Var x)\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>*\n                       (\\<V> \\<union> {x' \\<in> vars p'. x' \\<notin> \\<V>},\n                        add_mset p' B)\n                       (insert x \\<V>, add_mset p' B)", "apply (subgoal_tac \\<open>\\<V> \\<union> {x' \\<in> vars (p'). x' \\<notin> \\<V>} = insert x \\<V>\\<close>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>;\n     MPoly_Type.coeff (p' - Var x) (monomial (Suc 0) x) \\<noteq>\n     0 \\<Longrightarrow>\n     x \\<in> vars (p' - Var x);\n     \\<V> \\<union> {x' \\<in> vars p'. x' \\<notin> \\<V>} =\n     insert x \\<V>\\<rbrakk>\n    \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>*\n                       (\\<V> \\<union> {x' \\<in> vars p'. x' \\<notin> \\<V>},\n                        add_mset p' B)\n                       (insert x \\<V>, add_mset p' B)\n 2. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>;\n     MPoly_Type.coeff (p' - Var x) (monomial (Suc 0) x) \\<noteq>\n     0 \\<Longrightarrow>\n     x \\<in> vars (p' - Var x)\\<rbrakk>\n    \\<Longrightarrow> \\<V> \\<union> {x' \\<in> vars p'. x' \\<notin> \\<V>} =\n                      insert x \\<V>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>;\n     MPoly_Type.coeff (p' - Var x) (monomial (Suc 0) x) \\<noteq>\n     0 \\<Longrightarrow>\n     x \\<in> vars (p' - Var x)\\<rbrakk>\n    \\<Longrightarrow> \\<V> \\<union> {x' \\<in> vars p'. x' \\<notin> \\<V>} =\n                      insert x \\<V>", "using coeff_monomila_in_varsD[of p' x]"], ["proof (prove)\nusing this:\n  MPoly_Type.coeff p' (monomial (Suc 0) x) \\<noteq> 0 \\<Longrightarrow>\n  x \\<in> vars p'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> \\<V>; x \\<notin> vars (p' + Var x);\n     vars (p' + Var x) \\<subseteq> \\<V>;\n     MPoly_Type.coeff (p' - Var x) (monomial (Suc 0) x) \\<noteq>\n     0 \\<Longrightarrow>\n     x \\<in> vars (p' - Var x)\\<rbrakk>\n    \\<Longrightarrow> \\<V> \\<union> {x' \\<in> vars p'. x' \\<notin> \\<V>} =\n                      insert x \\<V>", "apply (auto dest: vars_add_Var_subset vars_minus_Var_subset polys_rel_in_dom_inD simp: vars_subst_in_left_only_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> vars (p' + Var x); vars (p' + Var x) \\<subseteq> \\<V>;\n     MPoly_Type.coeff (p' - Var x) (monomial (Suc 0) x) \\<noteq>\n     0 \\<Longrightarrow>\n     x \\<in> vars (p' - Var x);\n     MPoly_Type.coeff p' (monomial (Suc 0) x) \\<noteq> 0 \\<Longrightarrow>\n     x \\<in> vars p';\n     x \\<notin> \\<V>\\<rbrakk>\n    \\<Longrightarrow> x \\<in> vars p'", "using vars_in_right_only vars_subst_in_left_only"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> vars ?q; ?x \\<notin> vars ?p\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> vars (?p + ?q)\n  ?x \\<notin> vars ?p \\<Longrightarrow> ?x \\<in> vars (?p - Var ?x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel;\n     (p' + Var x)\\<^sup>2 - (p' + Var x)\n     \\<in> More_Modules.ideal polynomial_bool;\n     x \\<notin> vars (p' + Var x); vars (p' + Var x) \\<subseteq> \\<V>;\n     MPoly_Type.coeff (p' - Var x) (monomial (Suc 0) x) \\<noteq>\n     0 \\<Longrightarrow>\n     x \\<in> vars (p' - Var x);\n     MPoly_Type.coeff p' (monomial (Suc 0) x) \\<noteq> 0 \\<Longrightarrow>\n     x \\<in> vars p';\n     x \\<notin> \\<V>\\<rbrakk>\n    \\<Longrightarrow> x \\<in> vars p'", "by force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "abbreviation status_rel :: \\<open>(status \\<times> status) set\\<close> where\n  \\<open>status_rel \\<equiv> Id\\<close>"], ["", "lemma is_merge_status[simp]:\n  \\<open>is_failed (merge_status a st') \\<longleftrightarrow> is_failed a \\<or> is_failed st'\\<close>\n  \\<open>is_found (merge_status a st') \\<longleftrightarrow> \\<not>is_failed a \\<and> \\<not>is_failed st' \\<and> (is_found a \\<or> is_found st')\\<close>\n  \\<open>is_success (merge_status a st') \\<longleftrightarrow> (is_success a \\<and> is_success st')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_failed (merge_status a st') = (is_failed a \\<or> is_failed st') &&&\n    is_found (merge_status a st') =\n    (\\<not> is_failed a \\<and>\n     \\<not> is_failed st' \\<and> (is_found a \\<or> is_found st')) &&&\n    is_success (merge_status a st') = (is_success a \\<and> is_success st')", "by (cases a; cases st'; auto; fail)+"], ["", "lemma status_rel_merge_status:\n  \\<open>(merge_status a b, SUCCESS) \\<notin> status_rel \\<longleftrightarrow>\n    (a = FAILED) \\<or> (b = FAILED) \\<or>\n    a = FOUND \\<or> (b = FOUND)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((merge_status a b, SUCCESS) \\<notin> status_rel) =\n    (a = FAILED \\<or> b = FAILED \\<or> a = FOUND \\<or> b = FOUND)", "by (cases a; cases b; auto)"], ["", "lemma Ex_status_iff:\n  \\<open>(\\<exists>a. P a) \\<longleftrightarrow> P SUCCESS \\<or> P FOUND \\<or> (P (FAILED))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a. P a) = (P SUCCESS \\<or> P FOUND \\<or> P FAILED)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>P a; \\<not> P SUCCESS; \\<not> P FAILED\\<rbrakk>\n       \\<Longrightarrow> P FOUND", "apply (case_tac a; auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma is_failed_alt_def:\n  \\<open>is_failed st' \\<longleftrightarrow> \\<not>is_success st' \\<and> \\<not>is_found st'\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_failed st' = (\\<not> is_success st' \\<and> \\<not> is_found st')", "by (cases st') auto"], ["", "lemma merge_status_eq_iff[simp]:\n  \\<open>merge_status a SUCCESS = SUCCESS \\<longleftrightarrow> a = SUCCESS\\<close>\n  \\<open>merge_status a SUCCESS = FOUND \\<longleftrightarrow> a = FOUND\\<close>\n  \\<open>merge_status SUCCESS a = SUCCESS \\<longleftrightarrow> a = SUCCESS\\<close>\n  \\<open>merge_status SUCCESS a = FOUND \\<longleftrightarrow> a = FOUND\\<close>\n  \\<open>merge_status SUCCESS a = FAILED \\<longleftrightarrow> a = FAILED\\<close>\n  \\<open>merge_status a SUCCESS = FAILED \\<longleftrightarrow> a = FAILED\\<close>\n  \\<open>merge_status FOUND a = FAILED \\<longleftrightarrow> a = FAILED\\<close>\n  \\<open>merge_status a FOUND = FAILED \\<longleftrightarrow> a = FAILED\\<close>\n  \\<open>merge_status a FOUND = SUCCESS \\<longleftrightarrow> False\\<close>\n  \\<open>merge_status a b = FOUND \\<longleftrightarrow> (a = FOUND \\<or> b = FOUND) \\<and> (a \\<noteq> FAILED \\<and> b \\<noteq> FAILED)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (((merge_status a SUCCESS = SUCCESS) = (a = SUCCESS) &&&\n      (merge_status a SUCCESS = FOUND) = (a = FOUND)) &&&\n     (merge_status SUCCESS a = SUCCESS) = (a = SUCCESS) &&&\n     (merge_status SUCCESS a = FOUND) = (a = FOUND) &&&\n     (merge_status SUCCESS a = FAILED) = (a = FAILED)) &&&\n    ((merge_status a SUCCESS = FAILED) = (a = FAILED) &&&\n     (merge_status FOUND a = FAILED) = (a = FAILED)) &&&\n    (merge_status a FOUND = FAILED) = (a = FAILED) &&&\n    (merge_status a FOUND = SUCCESS) = False &&&\n    (merge_status a b = FOUND) =\n    ((a = FOUND \\<or> b = FOUND) \\<and>\n     a \\<noteq> FAILED \\<and> b \\<noteq> FAILED)", "apply (cases a; auto; fail)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. (merge_status a b = FOUND) =\n    ((a = FOUND \\<or> b = FOUND) \\<and>\n     a \\<noteq> FAILED \\<and> b \\<noteq> FAILED)", "apply (cases a; cases b; auto; fail)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fmdrop_irrelevant: \\<open>x11 \\<notin># dom_m A \\<Longrightarrow> fmdrop x11 A = A\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. x11 \\<notin># dom_m A \\<Longrightarrow> fmdrop x11 A = A", "by (simp add: fmap_ext in_dom_m_lookup_iff)"], ["", "lemma PAC_checker_step_PAC_checker_specification2:\n  fixes a :: \\<open>status\\<close>\n  assumes AB: \\<open>((\\<V>, A),(\\<V>\\<^sub>B, B)) \\<in> polys_rel_full\\<close> and\n    \\<open>\\<not>is_failed a\\<close> and\n    [simp,intro]: \\<open>a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0)\\<close> and\n    A\\<^sub>0B: \\<open>PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B)\\<close> and\n    spec\\<^sub>0: \\<open>vars spec \\<subseteq> \\<V>\\<^sub>0\\<close>  and\n    vars_A\\<^sub>0: \\<open>\\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0\\<close>\n  shows \\<open>PAC_checker_step spec (a, (\\<V>, A)) st \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full) (PAC_checker_specification_step2 (\\<V>\\<^sub>0, A\\<^sub>0) spec (\\<V>, B))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. PAC_checker_step spec (a, \\<V>, A) st\n    \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full)\n           (PAC_checker_specification_step2 (\\<V>\\<^sub>0, A\\<^sub>0) spec\n             (\\<V>, B))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. PAC_checker_step spec (a, \\<V>, A) st\n    \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full)\n           (PAC_checker_specification_step2 (\\<V>\\<^sub>0, A\\<^sub>0) spec\n             (\\<V>, B))", "have\n    \\<open>\\<V>\\<^sub>B = \\<V>\\<close>and\n    [simp, intro]:\\<open>(A, B) \\<in> polys_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<V>\\<^sub>B = \\<V> &&& (A, B) \\<in> polys_rel", "using AB"], ["proof (prove)\nusing this:\n  ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full\n\ngoal (1 subgoal):\n 1. \\<V>\\<^sub>B = \\<V> &&& (A, B) \\<in> polys_rel", "by (auto simp: polys_rel_full_def)"], ["proof (state)\nthis:\n  \\<V>\\<^sub>B = \\<V>\n  (A, B) \\<in> polys_rel\n\ngoal (1 subgoal):\n 1. PAC_checker_step spec (a, \\<V>, A) st\n    \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full)\n           (PAC_checker_specification_step2 (\\<V>\\<^sub>0, A\\<^sub>0) spec\n             (\\<V>, B))", "have H0: \\<open>2 * the (fmlookup A x12) - r \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n          r \\<in> pac_ideal\n                (insert (the (fmlookup A x12))\n                  ((\\<lambda>x. the (fmlookup A x)) ` set_mset Aa))\\<close> for x12 r Aa"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * the (fmlookup A x12) - r\n    \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n    r \\<in> pac_ideal\n             (insert (the (fmlookup A x12))\n               ((\\<lambda>x. the (fmlookup A x)) ` set_mset Aa))", "by (metis (no_types, lifting) ab_semigroup_mult_class.mult.commute \n         diff_in_polynomial_bool_pac_idealI\n       ideal.span_base pac_idealI3 set_image_mset set_mset_add_mset_insert union_single_eq_member)+"], ["proof (state)\nthis:\n  2 * the (fmlookup A ?x12.0) - ?r\n  \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n  ?r \\<in> pac_ideal\n            (insert (the (fmlookup A ?x12.0))\n              ((\\<lambda>x. the (fmlookup A x)) ` set_mset ?Aa))\n\ngoal (1 subgoal):\n 1. PAC_checker_step spec (a, \\<V>, A) st\n    \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full)\n           (PAC_checker_specification_step2 (\\<V>\\<^sub>0, A\\<^sub>0) spec\n             (\\<V>, B))", "then"], ["proof (chain)\npicking this:\n  2 * the (fmlookup A ?x12.0) - ?r\n  \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n  ?r \\<in> pac_ideal\n            (insert (the (fmlookup A ?x12.0))\n              ((\\<lambda>x. the (fmlookup A x)) ` set_mset ?Aa))", "have H0': \\<open>\\<And>Aa. 2 * the (fmlookup A x12) - r \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n          r - spec \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n          spec \\<in> pac_ideal (insert (the (fmlookup A x12)) ((\\<lambda>x. the (fmlookup A x)) ` set_mset Aa))\\<close>\n    for r x12"], ["proof (prove)\nusing this:\n  2 * the (fmlookup A ?x12.0) - ?r\n  \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n  ?r \\<in> pac_ideal\n            (insert (the (fmlookup A ?x12.0))\n              ((\\<lambda>x. the (fmlookup A x)) ` set_mset ?Aa))\n\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>2 * the (fmlookup A x12) - r\n                \\<in> More_Modules.ideal polynomial_bool;\n        r - spec \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n       \\<Longrightarrow> spec\n                         \\<in> pac_ideal\n                                (insert (the (fmlookup A x12))\n                                  ((\\<lambda>x. the (fmlookup A x)) `\n                                   set_mset Aa))", "by (metis (no_types, lifting) diff_in_polynomial_bool_pac_idealI)"], ["proof (state)\nthis:\n  \\<lbrakk>2 * the (fmlookup A ?x12.1) - ?r1\n           \\<in> More_Modules.ideal polynomial_bool;\n   ?r1 - spec \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n  \\<Longrightarrow> spec\n                    \\<in> pac_ideal\n                           (insert (the (fmlookup A ?x12.1))\n                             ((\\<lambda>x. the (fmlookup A x)) `\n                              set_mset ?Aa))\n\ngoal (1 subgoal):\n 1. PAC_checker_step spec (a, \\<V>, A) st\n    \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full)\n           (PAC_checker_specification_step2 (\\<V>\\<^sub>0, A\\<^sub>0) spec\n             (\\<V>, B))", "have H1: \\<open> x12 \\<in># dom_m A \\<Longrightarrow>\n       2 * the (fmlookup A x12) - r \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       r - spec \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       vars spec \\<subseteq> vars r \\<Longrightarrow>\n       spec \\<in> pac_ideal (set_mset B)\\<close> for x12 r"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x12 \\<in># dom_m A;\n     2 * the (fmlookup A x12) - r \\<in> More_Modules.ideal polynomial_bool;\n     r - spec \\<in> More_Modules.ideal polynomial_bool;\n     vars spec \\<subseteq> vars r\\<rbrakk>\n    \\<Longrightarrow> spec \\<in> pac_ideal (set_mset B)", "using \\<open>(A,B) \\<in> polys_rel\\<close>\n      ideal.span_add[OF ideal.span_add[OF ideal.span_neg ideal.span_neg,\n         of \\<open>the (fmlookup A x12)\\<close> _  \\<open>the (fmlookup A x12)\\<close>],\n      of \\<open>set_mset B \\<union> polynomial_bool\\<close> \\<open>2 * the (fmlookup A x12) - r\\<close>]"], ["proof (prove)\nusing this:\n  (A, B) \\<in> polys_rel\n  \\<lbrakk>the (fmlookup A x12)\n           \\<in> More_Modules.ideal (set_mset B \\<union> polynomial_bool);\n   the (fmlookup A x12)\n   \\<in> More_Modules.ideal (set_mset B \\<union> polynomial_bool);\n   2 * the (fmlookup A x12) - r\n   \\<in> More_Modules.ideal (set_mset B \\<union> polynomial_bool)\\<rbrakk>\n  \\<Longrightarrow> - the (fmlookup A x12) + - the (fmlookup A x12) +\n                    (2 * the (fmlookup A x12) - r)\n                    \\<in> More_Modules.ideal\n                           (set_mset B \\<union> polynomial_bool)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x12 \\<in># dom_m A;\n     2 * the (fmlookup A x12) - r \\<in> More_Modules.ideal polynomial_bool;\n     r - spec \\<in> More_Modules.ideal polynomial_bool;\n     vars spec \\<subseteq> vars r\\<rbrakk>\n    \\<Longrightarrow> spec \\<in> pac_ideal (set_mset B)", "unfolding polys_rel_def"], ["proof (prove)\nusing this:\n  (A, B) \\<in> {(A, B). B = ran_m A}\n  \\<lbrakk>the (fmlookup A x12)\n           \\<in> More_Modules.ideal (set_mset B \\<union> polynomial_bool);\n   the (fmlookup A x12)\n   \\<in> More_Modules.ideal (set_mset B \\<union> polynomial_bool);\n   2 * the (fmlookup A x12) - r\n   \\<in> More_Modules.ideal (set_mset B \\<union> polynomial_bool)\\<rbrakk>\n  \\<Longrightarrow> - the (fmlookup A x12) + - the (fmlookup A x12) +\n                    (2 * the (fmlookup A x12) - r)\n                    \\<in> More_Modules.ideal\n                           (set_mset B \\<union> polynomial_bool)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x12 \\<in># dom_m A;\n     2 * the (fmlookup A x12) - r \\<in> More_Modules.ideal polynomial_bool;\n     r - spec \\<in> More_Modules.ideal polynomial_bool;\n     vars spec \\<subseteq> vars r\\<rbrakk>\n    \\<Longrightarrow> spec \\<in> pac_ideal (set_mset B)", "by (auto dest!: multi_member_split simp: ran_m_def \n         intro: H0')"], ["proof (state)\nthis:\n  \\<lbrakk>?x12.0 \\<in># dom_m A;\n   2 * the (fmlookup A ?x12.0) - ?r\n   \\<in> More_Modules.ideal polynomial_bool;\n   ?r - spec \\<in> More_Modules.ideal polynomial_bool;\n   vars spec \\<subseteq> vars ?r\\<rbrakk>\n  \\<Longrightarrow> spec \\<in> pac_ideal (set_mset B)\n\ngoal (1 subgoal):\n 1. PAC_checker_step spec (a, \\<V>, A) st\n    \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full)\n           (PAC_checker_specification_step2 (\\<V>\\<^sub>0, A\\<^sub>0) spec\n             (\\<V>, B))", "have H2': \\<open>the (fmlookup A x11) + the (fmlookup A x12) - r \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       B = add_mset (the (fmlookup A x11)) {#the (fmlookup A x). x \\<in># Aa#} \\<Longrightarrow>\n       (the (fmlookup A x11) + the (fmlookup A x12) - r\n        \\<in> More_Modules.ideal\n            (insert (the (fmlookup A x11))\n              ((\\<lambda>x. the (fmlookup A x)) ` set_mset Aa \\<union> polynomial_bool)) \\<Longrightarrow>\n        - r\n        \\<in> More_Modules.ideal\n            (insert (the (fmlookup A x11))\n              ((\\<lambda>x. the (fmlookup A x)) ` set_mset Aa \\<union> polynomial_bool))) \\<Longrightarrow>\n       r \\<in> pac_ideal (insert (the (fmlookup A x11)) ((\\<lambda>x. the (fmlookup A x)) ` set_mset Aa))\\<close>\n     for r x12 x11 A Aa"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>the (fmlookup A x11) + the (fmlookup A x12) - r\n             \\<in> More_Modules.ideal polynomial_bool;\n     B =\n     add_mset (the (fmlookup A x11)) {#the (fmlookup A x). x \\<in># Aa#};\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal\n            (insert (the (fmlookup A x11))\n              ((\\<lambda>x. the (fmlookup A x)) ` set_mset Aa \\<union>\n               polynomial_bool)) \\<Longrightarrow>\n     - r\n     \\<in> More_Modules.ideal\n            (insert (the (fmlookup A x11))\n              ((\\<lambda>x. the (fmlookup A x)) ` set_mset Aa \\<union>\n               polynomial_bool))\\<rbrakk>\n    \\<Longrightarrow> r \\<in> pac_ideal\n                               (insert (the (fmlookup A x11))\n                                 ((\\<lambda>x. the (fmlookup A x)) `\n                                  set_mset Aa))", "by (metis (mono_tags, lifting) Un_insert_left diff_diff_eq2 diff_in_polynomial_bool_pac_idealI diff_zero\n       ideal.span_diff ideal.span_neg minus_diff_eq pac_idealI1 pac_ideal_def set_image_mset\n       set_mset_add_mset_insert union_single_eq_member)"], ["proof (state)\nthis:\n  \\<lbrakk>the (fmlookup ?A1 ?x11.1) + the (fmlookup ?A1 ?x12.1) - ?r1\n           \\<in> More_Modules.ideal polynomial_bool;\n   B =\n   add_mset (the (fmlookup ?A1 ?x11.1))\n    {#the (fmlookup ?A1 x). x \\<in># ?Aa1#};\n   the (fmlookup ?A1 ?x11.1) + the (fmlookup ?A1 ?x12.1) - ?r1\n   \\<in> More_Modules.ideal\n          (insert (the (fmlookup ?A1 ?x11.1))\n            ((\\<lambda>x. the (fmlookup ?A1 x)) ` set_mset ?Aa1 \\<union>\n             polynomial_bool)) \\<Longrightarrow>\n   - ?r1\n   \\<in> More_Modules.ideal\n          (insert (the (fmlookup ?A1 ?x11.1))\n            ((\\<lambda>x. the (fmlookup ?A1 x)) ` set_mset ?Aa1 \\<union>\n             polynomial_bool))\\<rbrakk>\n  \\<Longrightarrow> ?r1\n                    \\<in> pac_ideal\n                           (insert (the (fmlookup ?A1 ?x11.1))\n                             ((\\<lambda>x. the (fmlookup ?A1 x)) `\n                              set_mset ?Aa1))\n\ngoal (1 subgoal):\n 1. PAC_checker_step spec (a, \\<V>, A) st\n    \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full)\n           (PAC_checker_specification_step2 (\\<V>\\<^sub>0, A\\<^sub>0) spec\n             (\\<V>, B))", "have H2: \\<open>x11 \\<in># dom_m A \\<Longrightarrow>\n       x12 \\<in># dom_m A \\<Longrightarrow>\n       the (fmlookup A x11) + the (fmlookup A x12) - r\n       \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       r - spec \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       spec \\<in> pac_ideal (set_mset B)\\<close>  for x12 r x11"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     r - spec \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> spec \\<in> pac_ideal (set_mset B)", "using \\<open>(A,B) \\<in> polys_rel\\<close>\n      ideal.span_add[OF ideal.span_add[OF ideal.span_neg ideal.span_neg,\n         of \\<open>the (fmlookup A x11)\\<close> _  \\<open>the (fmlookup A x12)\\<close>],\n      of \\<open>set_mset B \\<union> polynomial_bool\\<close> \\<open>the (fmlookup A x11) + the (fmlookup A x12) - r\\<close>]"], ["proof (prove)\nusing this:\n  (A, B) \\<in> polys_rel\n  \\<lbrakk>the (fmlookup A x11)\n           \\<in> More_Modules.ideal (set_mset B \\<union> polynomial_bool);\n   the (fmlookup A x12)\n   \\<in> More_Modules.ideal (set_mset B \\<union> polynomial_bool);\n   the (fmlookup A x11) + the (fmlookup A x12) - r\n   \\<in> More_Modules.ideal (set_mset B \\<union> polynomial_bool)\\<rbrakk>\n  \\<Longrightarrow> - the (fmlookup A x11) + - the (fmlookup A x12) +\n                    (the (fmlookup A x11) + the (fmlookup A x12) - r)\n                    \\<in> More_Modules.ideal\n                           (set_mset B \\<union> polynomial_bool)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     r - spec \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> spec \\<in> pac_ideal (set_mset B)", "unfolding polys_rel_def"], ["proof (prove)\nusing this:\n  (A, B) \\<in> {(A, B). B = ran_m A}\n  \\<lbrakk>the (fmlookup A x11)\n           \\<in> More_Modules.ideal (set_mset B \\<union> polynomial_bool);\n   the (fmlookup A x12)\n   \\<in> More_Modules.ideal (set_mset B \\<union> polynomial_bool);\n   the (fmlookup A x11) + the (fmlookup A x12) - r\n   \\<in> More_Modules.ideal (set_mset B \\<union> polynomial_bool)\\<rbrakk>\n  \\<Longrightarrow> - the (fmlookup A x11) + - the (fmlookup A x12) +\n                    (the (fmlookup A x11) + the (fmlookup A x12) - r)\n                    \\<in> More_Modules.ideal\n                           (set_mset B \\<union> polynomial_bool)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x11 \\<in># dom_m A; x12 \\<in># dom_m A;\n     the (fmlookup A x11) + the (fmlookup A x12) - r\n     \\<in> More_Modules.ideal polynomial_bool;\n     r - spec \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> spec \\<in> pac_ideal (set_mset B)", "by (subgoal_tac \\<open>r \\<in> pac_ideal (set_mset B)\\<close>)\n       (auto dest!: multi_member_split simp: ran_m_def ideal.span_base \n         intro: diff_in_polynomial_bool_pac_idealI simp: H2')"], ["proof (state)\nthis:\n  \\<lbrakk>?x11.1 \\<in># dom_m A; ?x12.1 \\<in># dom_m A;\n   the (fmlookup A ?x11.1) + the (fmlookup A ?x12.1) - ?r1\n   \\<in> More_Modules.ideal polynomial_bool;\n   ?r1 - spec \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n  \\<Longrightarrow> spec \\<in> pac_ideal (set_mset B)\n\ngoal (1 subgoal):\n 1. PAC_checker_step spec (a, \\<V>, A) st\n    \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full)\n           (PAC_checker_specification_step2 (\\<V>\\<^sub>0, A\\<^sub>0) spec\n             (\\<V>, B))", "have H3': \\<open>the (fmlookup A x12) * q - r \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n          r - spec \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n          r \\<in> pac_ideal (insert (the (fmlookup A x12)) ((\\<lambda>x. the (fmlookup A x)) ` set_mset Aa))\\<close>\n     for Aa x12 r q"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>the (fmlookup A x12) * q - r\n             \\<in> More_Modules.ideal polynomial_bool;\n     r - spec \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> r \\<in> pac_ideal\n                               (insert (the (fmlookup A x12))\n                                 ((\\<lambda>x. the (fmlookup A x)) `\n                                  set_mset Aa))", "by (metis (no_types, lifting) ab_semigroup_mult_class.mult.commute diff_in_polynomial_bool_pac_idealI\n       ideal.span_base pac_idealI3 set_image_mset set_mset_add_mset_insert union_single_eq_member)"], ["proof (state)\nthis:\n  \\<lbrakk>the (fmlookup A ?x12.1) * ?q1 - ?r1\n           \\<in> More_Modules.ideal polynomial_bool;\n   ?r1 - spec \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n  \\<Longrightarrow> ?r1\n                    \\<in> pac_ideal\n                           (insert (the (fmlookup A ?x12.1))\n                             ((\\<lambda>x. the (fmlookup A x)) `\n                              set_mset ?Aa1))\n\ngoal (1 subgoal):\n 1. PAC_checker_step spec (a, \\<V>, A) st\n    \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full)\n           (PAC_checker_specification_step2 (\\<V>\\<^sub>0, A\\<^sub>0) spec\n             (\\<V>, B))", "have H3: \\<open>x12 \\<in># dom_m A \\<Longrightarrow>\n       the (fmlookup A x12) * q - r \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       r - spec \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       spec \\<in> pac_ideal (set_mset B)\\<close> for x12 r q"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x12 \\<in># dom_m A;\n     the (fmlookup A x12) * q - r \\<in> More_Modules.ideal polynomial_bool;\n     r - spec \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> spec \\<in> pac_ideal (set_mset B)", "using \\<open>(A,B) \\<in> polys_rel\\<close>\n      ideal.span_add[OF ideal.span_add[OF ideal.span_neg ideal.span_neg,\n         of \\<open>the (fmlookup A x12)\\<close> _  \\<open>the (fmlookup A x12)\\<close>],\n      of \\<open>set_mset B \\<union> polynomial_bool\\<close> \\<open>2 * the (fmlookup A x12) - r\\<close>]"], ["proof (prove)\nusing this:\n  (A, B) \\<in> polys_rel\n  \\<lbrakk>the (fmlookup A x12)\n           \\<in> More_Modules.ideal (set_mset B \\<union> polynomial_bool);\n   the (fmlookup A x12)\n   \\<in> More_Modules.ideal (set_mset B \\<union> polynomial_bool);\n   2 * the (fmlookup A x12) - r\n   \\<in> More_Modules.ideal (set_mset B \\<union> polynomial_bool)\\<rbrakk>\n  \\<Longrightarrow> - the (fmlookup A x12) + - the (fmlookup A x12) +\n                    (2 * the (fmlookup A x12) - r)\n                    \\<in> More_Modules.ideal\n                           (set_mset B \\<union> polynomial_bool)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x12 \\<in># dom_m A;\n     the (fmlookup A x12) * q - r \\<in> More_Modules.ideal polynomial_bool;\n     r - spec \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> spec \\<in> pac_ideal (set_mset B)", "unfolding polys_rel_def"], ["proof (prove)\nusing this:\n  (A, B) \\<in> {(A, B). B = ran_m A}\n  \\<lbrakk>the (fmlookup A x12)\n           \\<in> More_Modules.ideal (set_mset B \\<union> polynomial_bool);\n   the (fmlookup A x12)\n   \\<in> More_Modules.ideal (set_mset B \\<union> polynomial_bool);\n   2 * the (fmlookup A x12) - r\n   \\<in> More_Modules.ideal (set_mset B \\<union> polynomial_bool)\\<rbrakk>\n  \\<Longrightarrow> - the (fmlookup A x12) + - the (fmlookup A x12) +\n                    (2 * the (fmlookup A x12) - r)\n                    \\<in> More_Modules.ideal\n                           (set_mset B \\<union> polynomial_bool)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x12 \\<in># dom_m A;\n     the (fmlookup A x12) * q - r \\<in> More_Modules.ideal polynomial_bool;\n     r - spec \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> spec \\<in> pac_ideal (set_mset B)", "by (subgoal_tac \\<open>r \\<in> pac_ideal (set_mset B)\\<close>)\n       (auto dest!: multi_member_split simp: ran_m_def H3'\n         intro: diff_in_polynomial_bool_pac_idealI)"], ["proof (state)\nthis:\n  \\<lbrakk>?x12.1 \\<in># dom_m A;\n   the (fmlookup A ?x12.1) * ?q1 - ?r1\n   \\<in> More_Modules.ideal polynomial_bool;\n   ?r1 - spec \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n  \\<Longrightarrow> spec \\<in> pac_ideal (set_mset B)\n\ngoal (1 subgoal):\n 1. PAC_checker_step spec (a, \\<V>, A) st\n    \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full)\n           (PAC_checker_specification_step2 (\\<V>\\<^sub>0, A\\<^sub>0) spec\n             (\\<V>, B))", "have [intro]: \\<open>spec \\<in> pac_ideal (set_mset B) \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0)\\<close> and\n    vars_B: \\<open>\\<Union> (vars ` set_mset B) \\<subseteq> \\<V>\\<close>and\n    vars_B: \\<open>\\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (spec \\<in> pac_ideal (set_mset B) \\<Longrightarrow>\n     spec \\<in> pac_ideal (set_mset A\\<^sub>0)) &&&\n    \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> &&&\n    \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>", "using rtranclp_PAC_Format_subset_ideal[OF A\\<^sub>0B  vars_A\\<^sub>0] spec\\<^sub>0 \\<open>(A, B) \\<in> polys_rel\\<close>[unfolded polys_rel_def, simplified]"], ["proof (prove)\nusing this:\n  restricted_ideal_to\\<^sub>I \\<V>\\<^sub>0 B\n  \\<subseteq> restricted_ideal_to\\<^sub>I \\<V>\\<^sub>0 A\\<^sub>0 \\<and>\n  \\<V>\\<^sub>0 \\<subseteq> \\<V> \\<and>\n  \\<Union> (vars ` set_mset B) \\<subseteq> \\<V>\n  vars spec \\<subseteq> \\<V>\\<^sub>0\n  B = ran_m A\n\ngoal (1 subgoal):\n 1. (spec \\<in> pac_ideal (set_mset B) \\<Longrightarrow>\n     spec \\<in> pac_ideal (set_mset A\\<^sub>0)) &&&\n    \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> &&&\n    \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>", "by (smt in_mono mem_Collect_eq restricted_ideal_to_def)+"], ["proof (state)\nthis:\n  spec \\<in> pac_ideal (set_mset B) \\<Longrightarrow>\n  spec \\<in> pac_ideal (set_mset A\\<^sub>0)\n  \\<Union> (vars ` set_mset B) \\<subseteq> \\<V>\n  \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. PAC_checker_step spec (a, \\<V>, A) st\n    \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full)\n           (PAC_checker_specification_step2 (\\<V>\\<^sub>0, A\\<^sub>0) spec\n             (\\<V>, B))", "have eq_successI: \\<open>st' \\<noteq> FAILED \\<Longrightarrow>\n       st' \\<noteq> FOUND \\<Longrightarrow> st' = SUCCESS\\<close> for st'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st' \\<noteq> FAILED; st' \\<noteq> FOUND\\<rbrakk>\n    \\<Longrightarrow> st' = SUCCESS", "by (cases st') auto"], ["proof (state)\nthis:\n  \\<lbrakk>?st'1 \\<noteq> FAILED; ?st'1 \\<noteq> FOUND\\<rbrakk>\n  \\<Longrightarrow> ?st'1 = SUCCESS\n\ngoal (1 subgoal):\n 1. PAC_checker_step spec (a, \\<V>, A) st\n    \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full)\n           (PAC_checker_specification_step2 (\\<V>\\<^sub>0, A\\<^sub>0) spec\n             (\\<V>, B))", "have vars_diff_inv: \\<open>vars (Var x2 - r) = vars (r - Var x2 :: int mpoly)\\<close> for x2 r"], ["proof (prove)\ngoal (1 subgoal):\n 1. vars (Var x2 - r) = vars (r - Var x2)", "using vars_uminus[of \\<open>Var x2 - r\\<close>]"], ["proof (prove)\nusing this:\n  vars (- (Var x2 - r)) = vars (Var x2 - r)\n\ngoal (1 subgoal):\n 1. vars (Var x2 - r) = vars (r - Var x2)", "by (auto simp del: vars_uminus)"], ["proof (state)\nthis:\n  vars (Var ?x2.1 - ?r1) = vars (?r1 - Var ?x2.1)\n\ngoal (1 subgoal):\n 1. PAC_checker_step spec (a, \\<V>, A) st\n    \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full)\n           (PAC_checker_specification_step2 (\\<V>\\<^sub>0, A\\<^sub>0) spec\n             (\\<V>, B))", "have vars_add_inv: \\<open>vars (Var x2 + r) = vars (r + Var x2 :: int mpoly)\\<close> for x2 r"], ["proof (prove)\ngoal (1 subgoal):\n 1. vars (Var x2 + r) = vars (r + Var x2)", "unfolding add.commute[of \\<open>Var x2\\<close> r]"], ["proof (prove)\ngoal (1 subgoal):\n 1. vars (r + Var x2) = vars (r + Var x2)", ".."], ["proof (state)\nthis:\n  vars (Var ?x2.1 + ?r1) = vars (?r1 + Var ?x2.1)\n\ngoal (1 subgoal):\n 1. PAC_checker_step spec (a, \\<V>, A) st\n    \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full)\n           (PAC_checker_specification_step2 (\\<V>\\<^sub>0, A\\<^sub>0) spec\n             (\\<V>, B))", "have [iff]: \\<open>a \\<noteq> FAILED\\<close> and\n    [intro]: \\<open>a \\<noteq> SUCCESS \\<Longrightarrow> a = FOUND\\<close> and\n    [simp]: \\<open>merge_status a FOUND = FOUND\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> FAILED &&&\n    (a \\<noteq> SUCCESS \\<Longrightarrow> a = FOUND) &&&\n    merge_status a FOUND = FOUND", "using assms(2)"], ["proof (prove)\nusing this:\n  \\<not> is_failed a\n\ngoal (1 subgoal):\n 1. a \\<noteq> FAILED &&&\n    (a \\<noteq> SUCCESS \\<Longrightarrow> a = FOUND) &&&\n    merge_status a FOUND = FOUND", "by (cases a; auto)+"], ["proof (state)\nthis:\n  a \\<noteq> FAILED\n  a \\<noteq> SUCCESS \\<Longrightarrow> a = FOUND\n  merge_status a FOUND = FOUND\n\ngoal (1 subgoal):\n 1. PAC_checker_step spec (a, \\<V>, A) st\n    \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full)\n           (PAC_checker_specification_step2 (\\<V>\\<^sub>0, A\\<^sub>0) spec\n             (\\<V>, B))", "note [[goals_limit=1]]"], ["proof (state)\nthis:\n  TERM _\n\ngoal (1 subgoal):\n 1. PAC_checker_step spec (a, \\<V>, A) st\n    \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full)\n           (PAC_checker_specification_step2 (\\<V>\\<^sub>0, A\\<^sub>0) spec\n             (\\<V>, B))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. PAC_checker_step spec (a, \\<V>, A) st\n    \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full)\n           (PAC_checker_specification_step2 (\\<V>\\<^sub>0, A\\<^sub>0) spec\n             (\\<V>, B))", "unfolding PAC_checker_step_def PAC_checker_specification_step_spec_def\n      normalize_poly_spec_alt_def check_mult_def check_add_def\n      check_extension_def polys_rel_full_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case (a, \\<V>, A) of\n     (stat, \\<V>, A) \\<Rightarrow>\n       \\<lambda>st.\n          case st of\n          Add x xa xb xc \\<Rightarrow>\n            SPEC\n             (\\<lambda>r.\n                 r - pac_res st\n                 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars (pac_res st)) \\<bind>\n            (\\<lambda>r.\n                SPEC\n                 (\\<lambda>b.\n                     b \\<longrightarrow>\n                     pac_src1 st \\<in># dom_m A \\<and>\n                     pac_src2 st \\<in># dom_m A \\<and>\n                     new_id st \\<notin># dom_m A \\<and>\n                     vars r \\<subseteq> \\<V> \\<and>\n                     the (fmlookup A (pac_src1 st)) +\n                     the (fmlookup A (pac_src2 st)) -\n                     r\n                     \\<in> More_Modules.ideal polynomial_bool) \\<bind>\n                (\\<lambda>eq.\n                    SPEC\n                     (\\<lambda>st'.\n                         \\<not> is_failed st' \\<and>\n                         is_found st' \\<longrightarrow>\n                         r - spec\n                         \\<in> More_Modules.ideal polynomial_bool) \\<bind>\n                    (\\<lambda>st'.\n                        if eq\n                        then RETURN\n                              (merge_status stat st', \\<V>,\n                               fmupd (new_id st) r A)\n                        else RETURN (FAILED, \\<V>, A))))\n          | Mult x xa xb xc \\<Rightarrow>\n              SPEC\n               (\\<lambda>r.\n                   r - pac_res st\n                   \\<in> More_Modules.ideal polynomial_bool \\<and>\n                   vars r \\<subseteq> vars (pac_res st)) \\<bind>\n              (\\<lambda>r.\n                  SPEC\n                   (\\<lambda>r.\n                       r - pac_mult st\n                       \\<in> More_Modules.ideal polynomial_bool \\<and>\n                       vars r \\<subseteq> vars (pac_mult st)) \\<bind>\n                  (\\<lambda>q.\n                      SPEC\n                       (\\<lambda>b.\n                           b \\<longrightarrow>\n                           pac_src1 st \\<in># dom_m A \\<and>\n                           new_id st \\<notin># dom_m A \\<and>\n                           vars q \\<subseteq> \\<V> \\<and>\n                           vars r \\<subseteq> \\<V> \\<and>\n                           the (fmlookup A (pac_src1 st)) * q - r\n                           \\<in> More_Modules.ideal polynomial_bool) \\<bind>\n                      (\\<lambda>eq.\n                          SPEC\n                           (\\<lambda>st'.\n                               \\<not> is_failed st' \\<and>\n                               is_found st' \\<longrightarrow>\n                               r - spec\n                               \\<in> More_Modules.ideal\npolynomial_bool) \\<bind>\n                          (\\<lambda>st'.\n                              if eq\n                              then RETURN\n                                    (merge_status stat st', \\<V>,\n                                     fmupd (new_id st) r A)\n                              else RETURN (FAILED, \\<V>, A)))))\n          | Extension x xa xb \\<Rightarrow>\n              SPEC\n               (\\<lambda>r.\n                   r - (pac_res st - Var (new_var st))\n                   \\<in> More_Modules.ideal polynomial_bool \\<and>\n                   vars r\n                   \\<subseteq> vars (pac_res st - Var (new_var st))) \\<bind>\n              (\\<lambda>r.\n                  SPEC\n                   (\\<lambda>b.\n                       b \\<longrightarrow>\n                       new_id st \\<notin># dom_m A \\<and>\n                       new_var st \\<notin> \\<V> \\<and>\n                       (r + Var (new_var st))\\<^sup>2 -\n                       (r + Var (new_var st))\n                       \\<in> More_Modules.ideal polynomial_bool \\<and>\n                       vars (r + Var (new_var st)) \\<subseteq> \\<V>) \\<bind>\n                  (\\<lambda>eq.\n                      if eq\n                      then RETURN\n                            (stat, insert (new_var st) \\<V>,\n                             fmupd (new_id st) r A)\n                      else RETURN (FAILED, \\<V>, A)))\n          | Del x \\<Rightarrow>\n              check_del A (pac_src1 st) \\<bind>\n              (\\<lambda>eq.\n                  if eq then RETURN (stat, \\<V>, fmdrop (pac_src1 st) A)\n                  else RETURN (FAILED, \\<V>, A)))\n     st\n    \\<le> \\<Down>\n           (status_rel \\<times>\\<^sub>r\n            {((\\<V>, A), \\<V>', B).\n             (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n           (SPEC\n             ((case (\\<V>\\<^sub>0, A\\<^sub>0) of\n               (\\<V>\\<^sub>0, A\\<^sub>0) \\<Rightarrow>\n                 \\<lambda>spec (\\<V>, A) (b, B).\n                    (is_success b \\<longrightarrow>\n                     \\<Union> (vars ` set_mset A\\<^sub>0)\n                     \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                     \\<Union> (vars ` set_mset A) \\<subseteq> \\<V> \\<and>\n                     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                      (\\<V>, A) \\<and>\n                     PAC_Format\\<^sup>*\\<^sup>* (\\<V>, A) B) \\<and>\n                    (is_found b \\<longrightarrow>\n                     \\<Union> (vars ` set_mset A\\<^sub>0)\n                     \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                     \\<Union> (vars ` set_mset A) \\<subseteq> \\<V> \\<and>\n                     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                      (\\<V>, A) \\<and>\n                     PAC_Format\\<^sup>*\\<^sup>* (\\<V>, A) B \\<and>\n                     spec \\<in> pac_ideal (set_mset A\\<^sub>0)))\n               spec (\\<V>, B)))", "apply (cases st)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x11 x12 x13 x14.\n       st = Add x11 x12 x13 x14 \\<Longrightarrow>\n       (case (a, \\<V>, A) of\n        (stat, \\<V>, A) \\<Rightarrow>\n          \\<lambda>st.\n             case st of\n             Add x xa xb xc \\<Rightarrow>\n               SPEC\n                (\\<lambda>r.\n                    r - pac_res st\n                    \\<in> More_Modules.ideal polynomial_bool \\<and>\n                    vars r \\<subseteq> vars (pac_res st)) \\<bind>\n               (\\<lambda>r.\n                   SPEC\n                    (\\<lambda>b.\n                        b \\<longrightarrow>\n                        pac_src1 st \\<in># dom_m A \\<and>\n                        pac_src2 st \\<in># dom_m A \\<and>\n                        new_id st \\<notin># dom_m A \\<and>\n                        vars r \\<subseteq> \\<V> \\<and>\n                        the (fmlookup A (pac_src1 st)) +\n                        the (fmlookup A (pac_src2 st)) -\n                        r\n                        \\<in> More_Modules.ideal polynomial_bool) \\<bind>\n                   (\\<lambda>eq.\n                       SPEC\n                        (\\<lambda>st'.\n                            \\<not> is_failed st' \\<and>\n                            is_found st' \\<longrightarrow>\n                            r - spec\n                            \\<in> More_Modules.ideal\n                                   polynomial_bool) \\<bind>\n                       (\\<lambda>st'.\n                           if eq\n                           then RETURN\n                                 (merge_status stat st', \\<V>,\n                                  fmupd (new_id st) r A)\n                           else RETURN (FAILED, \\<V>, A))))\n             | Mult x xa xb xc \\<Rightarrow>\n                 SPEC\n                  (\\<lambda>r.\n                      r - pac_res st\n                      \\<in> More_Modules.ideal polynomial_bool \\<and>\n                      vars r \\<subseteq> vars (pac_res st)) \\<bind>\n                 (\\<lambda>r.\n                     SPEC\n                      (\\<lambda>r.\n                          r - pac_mult st\n                          \\<in> More_Modules.ideal polynomial_bool \\<and>\n                          vars r \\<subseteq> vars (pac_mult st)) \\<bind>\n                     (\\<lambda>q.\n                         SPEC\n                          (\\<lambda>b.\n                              b \\<longrightarrow>\n                              pac_src1 st \\<in># dom_m A \\<and>\n                              new_id st \\<notin># dom_m A \\<and>\n                              vars q \\<subseteq> \\<V> \\<and>\n                              vars r \\<subseteq> \\<V> \\<and>\n                              the (fmlookup A (pac_src1 st)) * q - r\n                              \\<in> More_Modules.ideal\n                                     polynomial_bool) \\<bind>\n                         (\\<lambda>eq.\n                             SPEC\n                              (\\<lambda>st'.\n                                  \\<not> is_failed st' \\<and>\n                                  is_found st' \\<longrightarrow>\n                                  r - spec\n                                  \\<in> More_Modules.ideal\n   polynomial_bool) \\<bind>\n                             (\\<lambda>st'.\n                                 if eq\n                                 then RETURN\n (merge_status stat st', \\<V>, fmupd (new_id st) r A)\n                                 else RETURN (FAILED, \\<V>, A)))))\n             | Extension x xa xb \\<Rightarrow>\n                 SPEC\n                  (\\<lambda>r.\n                      r - (pac_res st - Var (new_var st))\n                      \\<in> More_Modules.ideal polynomial_bool \\<and>\n                      vars r\n                      \\<subseteq> vars\n                                   (pac_res st - Var (new_var st))) \\<bind>\n                 (\\<lambda>r.\n                     SPEC\n                      (\\<lambda>b.\n                          b \\<longrightarrow>\n                          new_id st \\<notin># dom_m A \\<and>\n                          new_var st \\<notin> \\<V> \\<and>\n                          (r + Var (new_var st))\\<^sup>2 -\n                          (r + Var (new_var st))\n                          \\<in> More_Modules.ideal polynomial_bool \\<and>\n                          vars (r + Var (new_var st))\n                          \\<subseteq> \\<V>) \\<bind>\n                     (\\<lambda>eq.\n                         if eq\n                         then RETURN\n                               (stat, insert (new_var st) \\<V>,\n                                fmupd (new_id st) r A)\n                         else RETURN (FAILED, \\<V>, A)))\n             | Del x \\<Rightarrow>\n                 check_del A (pac_src1 st) \\<bind>\n                 (\\<lambda>eq.\n                     if eq then RETURN (stat, \\<V>, fmdrop (pac_src1 st) A)\n                     else RETURN (FAILED, \\<V>, A)))\n        st\n       \\<le> \\<Down>\n              (status_rel \\<times>\\<^sub>r\n               {((\\<V>, A), \\<V>', B).\n                (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n              (SPEC\n                ((case (\\<V>\\<^sub>0, A\\<^sub>0) of\n                  (\\<V>\\<^sub>0, A\\<^sub>0) \\<Rightarrow>\n                    \\<lambda>spec (\\<V>, A) (b, B).\n                       (is_success b \\<longrightarrow>\n                        \\<Union> (vars ` set_mset A\\<^sub>0)\n                        \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                        \\<Union> (vars ` set_mset A) \\<subseteq> \\<V> \\<and>\n                        PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                         (\\<V>, A) \\<and>\n                        PAC_Format\\<^sup>*\\<^sup>* (\\<V>, A) B) \\<and>\n                       (is_found b \\<longrightarrow>\n                        \\<Union> (vars ` set_mset A\\<^sub>0)\n                        \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                        \\<Union> (vars ` set_mset A) \\<subseteq> \\<V> \\<and>\n                        PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                         (\\<V>, A) \\<and>\n                        PAC_Format\\<^sup>*\\<^sup>* (\\<V>, A) B \\<and>\n                        spec \\<in> pac_ideal (set_mset A\\<^sub>0)))\n                  spec (\\<V>, B)))\nA total of 4 subgoals...", "apply clarsimp_all"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x11 x12 x13 x14.\n       st = Add x11 x12 x13 x14 \\<Longrightarrow>\n       SPEC\n        (\\<lambda>r.\n            r - x14 \\<in> More_Modules.ideal polynomial_bool \\<and>\n            vars r \\<subseteq> vars x14) \\<bind>\n       (\\<lambda>r.\n           SPEC\n            (\\<lambda>b.\n                b \\<longrightarrow>\n                x11 \\<in># dom_m A \\<and>\n                x12 \\<in># dom_m A \\<and>\n                x13 \\<notin># dom_m A \\<and>\n                vars r \\<subseteq> \\<V> \\<and>\n                the (fmlookup A x11) + the (fmlookup A x12) - r\n                \\<in> More_Modules.ideal polynomial_bool) \\<bind>\n           (\\<lambda>eq.\n               SPEC\n                (\\<lambda>st'.\n                    \\<not> is_failed st' \\<and>\n                    is_found st' \\<longrightarrow>\n                    r - spec\n                    \\<in> More_Modules.ideal polynomial_bool) \\<bind>\n               (\\<lambda>st'.\n                   if eq\n                   then RETURN\n                         (merge_status a st', \\<V>,\n                          fmupd (new_id (Add x11 x12 x13 x14)) r A)\n                   else RETURN (FAILED, \\<V>, A))))\n       \\<le> \\<Down>\n              (status_rel \\<times>\\<^sub>r\n               {((\\<V>, A), \\<V>', B).\n                (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n              (SPEC\n                (\\<lambda>(b, Ba).\n                    (is_success b \\<longrightarrow>\n                     \\<Union> (vars ` set_mset A\\<^sub>0)\n                     \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                     \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n                     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                      (\\<V>, B) \\<and>\n                     PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                    (is_found b \\<longrightarrow>\n                     \\<Union> (vars ` set_mset A\\<^sub>0)\n                     \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                     \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n                     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                      (\\<V>, B) \\<and>\n                     PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                     spec \\<in> pac_ideal (set_mset A\\<^sub>0))))\nA total of 4 subgoals...", "subgoal for x11 x12 x13 x14"], ["proof (prove)\ngoal (1 subgoal):\n 1. st = Add x11 x12 x13 x14 \\<Longrightarrow>\n    SPEC\n     (\\<lambda>r.\n         r - x14 \\<in> More_Modules.ideal polynomial_bool \\<and>\n         vars r \\<subseteq> vars x14) \\<bind>\n    (\\<lambda>r.\n        SPEC\n         (\\<lambda>b.\n             b \\<longrightarrow>\n             x11 \\<in># dom_m A \\<and>\n             x12 \\<in># dom_m A \\<and>\n             x13 \\<notin># dom_m A \\<and>\n             vars r \\<subseteq> \\<V> \\<and>\n             the (fmlookup A x11) + the (fmlookup A x12) - r\n             \\<in> More_Modules.ideal polynomial_bool) \\<bind>\n        (\\<lambda>eq.\n            SPEC\n             (\\<lambda>st'.\n                 \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n                 r - spec \\<in> More_Modules.ideal polynomial_bool) \\<bind>\n            (\\<lambda>st'.\n                if eq\n                then RETURN\n                      (merge_status a st', \\<V>,\n                       fmupd (new_id (Add x11 x12 x13 x14)) r A)\n                else RETURN (FAILED, \\<V>, A))))\n    \\<le> \\<Down>\n           (status_rel \\<times>\\<^sub>r\n            {((\\<V>, A), \\<V>', B).\n             (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n           (SPEC\n             (\\<lambda>(b, Ba).\n                 (is_success b \\<longrightarrow>\n                  \\<Union> (vars ` set_mset A\\<^sub>0)\n                  \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                  \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n                  PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                   (\\<V>, B) \\<and>\n                  PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                 (is_found b \\<longrightarrow>\n                  \\<Union> (vars ` set_mset A\\<^sub>0)\n                  \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                  \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n                  PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                   (\\<V>, B) \\<and>\n                  PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                  spec \\<in> pac_ideal (set_mset A\\<^sub>0))))", "apply (refine_vcg lhs_step_If)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r eqa st'.\n       \\<lbrakk>st = Add x11 x12 x13 x14;\n        r \\<in> {r. r - x14 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                    vars r \\<subseteq> vars x14};\n        eqa\n        \\<in> {b. b \\<longrightarrow>\n                  x11 \\<in># dom_m A \\<and>\n                  x12 \\<in># dom_m A \\<and>\n                  x13 \\<notin># dom_m A \\<and>\n                  vars r \\<subseteq> \\<V> \\<and>\n                  the (fmlookup A x11) + the (fmlookup A x12) - r\n                  \\<in> More_Modules.ideal polynomial_bool};\n        st'\n        \\<in> {st'.\n               \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n               r - spec \\<in> More_Modules.ideal polynomial_bool};\n        eqa\\<rbrakk>\n       \\<Longrightarrow> RETURN\n                          (merge_status a st', \\<V>,\n                           fmupd (new_id (Add x11 x12 x13 x14)) r A)\n                         \\<le> \\<Down>\n                                (status_rel \\<times>\\<^sub>r\n                                 {((\\<V>, A), \\<V>', B).\n                                  (A, B) \\<in> polys_rel \\<and>\n                                  \\<V> = \\<V>'})\n                                (SPEC\n                                  (\\<lambda>(b, Ba).\n(is_success b \\<longrightarrow>\n \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0 \\<and>\n \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n(is_found b \\<longrightarrow>\n \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0 \\<and>\n \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n spec \\<in> pac_ideal (set_mset A\\<^sub>0))))\nA total of 2 subgoals...", "subgoal for r eqa st'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Add x11 x12 x13 x14;\n     r \\<in> {r. r - x14 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars x14};\n     eqa\n     \\<in> {b. b \\<longrightarrow>\n               x11 \\<in># dom_m A \\<and>\n               x12 \\<in># dom_m A \\<and>\n               x13 \\<notin># dom_m A \\<and>\n               vars r \\<subseteq> \\<V> \\<and>\n               the (fmlookup A x11) + the (fmlookup A x12) - r\n               \\<in> More_Modules.ideal polynomial_bool};\n     st'\n     \\<in> {st'.\n            \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n            r - spec \\<in> More_Modules.ideal polynomial_bool};\n     eqa\\<rbrakk>\n    \\<Longrightarrow> RETURN\n                       (merge_status a st', \\<V>,\n                        fmupd (new_id (Add x11 x12 x13 x14)) r A)\n                      \\<le> \\<Down>\n                             (status_rel \\<times>\\<^sub>r\n                              {((\\<V>, A), \\<V>', B).\n                               (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n                             (SPEC\n                               (\\<lambda>(b, Ba).\n                                   (is_success b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba) \\<and>\n                                   (is_found b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba \\<and>\n                                    spec\n                                    \\<in> pac_ideal (set_mset A\\<^sub>0))))", "using assms vars_B"], ["proof (prove)\nusing this:\n  ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full\n  \\<not> is_failed a\n  a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0)\n  PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B)\n  vars spec \\<subseteq> \\<V>\\<^sub>0\n  \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0\n  \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Add x11 x12 x13 x14;\n     r \\<in> {r. r - x14 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars x14};\n     eqa\n     \\<in> {b. b \\<longrightarrow>\n               x11 \\<in># dom_m A \\<and>\n               x12 \\<in># dom_m A \\<and>\n               x13 \\<notin># dom_m A \\<and>\n               vars r \\<subseteq> \\<V> \\<and>\n               the (fmlookup A x11) + the (fmlookup A x12) - r\n               \\<in> More_Modules.ideal polynomial_bool};\n     st'\n     \\<in> {st'.\n            \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n            r - spec \\<in> More_Modules.ideal polynomial_bool};\n     eqa\\<rbrakk>\n    \\<Longrightarrow> RETURN\n                       (merge_status a st', \\<V>,\n                        fmupd (new_id (Add x11 x12 x13 x14)) r A)\n                      \\<le> \\<Down>\n                             (status_rel \\<times>\\<^sub>r\n                              {((\\<V>, A), \\<V>', B).\n                               (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n                             (SPEC\n                               (\\<lambda>(b, Ba).\n                                   (is_success b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba) \\<and>\n                                   (is_found b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba \\<and>\n                                    spec\n                                    \\<in> pac_ideal (set_mset A\\<^sub>0))))", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Add x11 x12 x13 x14;\n     r \\<in> {r. r - x14 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars x14};\n     eqa\n     \\<in> {b. b \\<longrightarrow>\n               x11 \\<in># dom_m A \\<and>\n               x12 \\<in># dom_m A \\<and>\n               x13 \\<notin># dom_m A \\<and>\n               vars r \\<subseteq> \\<V> \\<and>\n               the (fmlookup A x11) + the (fmlookup A x12) - r\n               \\<in> More_Modules.ideal polynomial_bool};\n     st'\n     \\<in> {st'.\n            \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n            r - spec \\<in> More_Modules.ideal polynomial_bool};\n     eqa; ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full;\n     \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0);\n     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B);\n     vars spec \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> RETURN\n                       (merge_status a st', \\<V>,\n                        fmupd (new_id (Add x11 x12 x13 x14)) r A)\n                      \\<le> \\<Down>\n                             (status_rel \\<times>\\<^sub>r\n                              {((\\<V>, A), \\<V>', B).\n                               (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n                             (SPEC\n                               (\\<lambda>(b, Ba).\n                                   (is_success b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba) \\<and>\n                                   (is_found b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba \\<and>\n                                    spec\n                                    \\<in> pac_ideal (set_mset A\\<^sub>0))))", "apply (rule RETURN_SPEC_refine)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Add x11 x12 x13 x14;\n     r \\<in> {r. r - x14 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars x14};\n     eqa\n     \\<in> {b. b \\<longrightarrow>\n               x11 \\<in># dom_m A \\<and>\n               x12 \\<in># dom_m A \\<and>\n               x13 \\<notin># dom_m A \\<and>\n               vars r \\<subseteq> \\<V> \\<and>\n               the (fmlookup A x11) + the (fmlookup A x12) - r\n               \\<in> More_Modules.ideal polynomial_bool};\n     st'\n     \\<in> {st'.\n            \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n            r - spec \\<in> More_Modules.ideal polynomial_bool};\n     eqa; ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full;\n     \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0);\n     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B);\n     vars spec \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x'.\n                         ((merge_status a st', \\<V>,\n                           fmupd (new_id (Add x11 x12 x13 x14)) r A),\n                          x')\n                         \\<in> status_rel \\<times>\\<^sub>r\n                               {((\\<V>, A), \\<V>', B).\n                                (A, B) \\<in> polys_rel \\<and>\n                                \\<V> = \\<V>'} \\<and>\n                         (case x' of\n                          (b, Ba) \\<Rightarrow>\n                            (is_success b \\<longrightarrow>\n                             \\<Union> (vars ` set_mset A\\<^sub>0)\n                             \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                             \\<Union> (vars ` set_mset B)\n                             \\<subseteq> \\<V> \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>*\n                              (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                            (is_found b \\<longrightarrow>\n                             \\<Union> (vars ` set_mset A\\<^sub>0)\n                             \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                             \\<Union> (vars ` set_mset B)\n                             \\<subseteq> \\<V> \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>*\n                              (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                             spec \\<in> pac_ideal (set_mset A\\<^sub>0)))", "apply (rule_tac x = \\<open>(merge_status a st',\\<V>,add_mset r B)\\<close> in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Add x11 x12 x13 x14;\n     r \\<in> {r. r - x14 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars x14};\n     eqa\n     \\<in> {b. b \\<longrightarrow>\n               x11 \\<in># dom_m A \\<and>\n               x12 \\<in># dom_m A \\<and>\n               x13 \\<notin># dom_m A \\<and>\n               vars r \\<subseteq> \\<V> \\<and>\n               the (fmlookup A x11) + the (fmlookup A x12) - r\n               \\<in> More_Modules.ideal polynomial_bool};\n     st'\n     \\<in> {st'.\n            \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n            r - spec \\<in> More_Modules.ideal polynomial_bool};\n     eqa; ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full;\n     \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0);\n     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B);\n     vars spec \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> ((merge_status a st', \\<V>,\n                        fmupd (new_id (Add x11 x12 x13 x14)) r A),\n                       merge_status a st', \\<V>, add_mset r B)\n                      \\<in> status_rel \\<times>\\<^sub>r\n                            {((\\<V>, A), \\<V>', B).\n                             (A, B) \\<in> polys_rel \\<and>\n                             \\<V> = \\<V>'} \\<and>\n                      (case (merge_status a st', \\<V>, add_mset r B) of\n                       (b, Ba) \\<Rightarrow>\n                         (is_success b \\<longrightarrow>\n                          \\<Union> (vars ` set_mset A\\<^sub>0)\n                          \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                          \\<Union> (vars ` set_mset B)\n                          \\<subseteq> \\<V> \\<and>\n                          PAC_Format\\<^sup>*\\<^sup>*\n                           (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                          PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                         (is_found b \\<longrightarrow>\n                          \\<Union> (vars ` set_mset A\\<^sub>0)\n                          \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                          \\<Union> (vars ` set_mset B)\n                          \\<subseteq> \\<V> \\<and>\n                          PAC_Format\\<^sup>*\\<^sup>*\n                           (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                          PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                          spec \\<in> pac_ideal (set_mset A\\<^sub>0)))", "by (auto simp: polys_rel_update_remove ran_m_mapsto_upd_notin\n          intro: PAC_Format_add_and_remove H2 dest: rtranclp_PAC_Format_subset_ideal)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r eqa st'.\n       \\<lbrakk>st = Add x11 x12 x13 x14;\n        r \\<in> {r. r - x14 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                    vars r \\<subseteq> vars x14};\n        eqa\n        \\<in> {b. b \\<longrightarrow>\n                  x11 \\<in># dom_m A \\<and>\n                  x12 \\<in># dom_m A \\<and>\n                  x13 \\<notin># dom_m A \\<and>\n                  vars r \\<subseteq> \\<V> \\<and>\n                  the (fmlookup A x11) + the (fmlookup A x12) - r\n                  \\<in> More_Modules.ideal polynomial_bool};\n        st'\n        \\<in> {st'.\n               \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n               r - spec \\<in> More_Modules.ideal polynomial_bool};\n        \\<not> eqa\\<rbrakk>\n       \\<Longrightarrow> RETURN (FAILED, \\<V>, A)\n                         \\<le> \\<Down>\n                                (status_rel \\<times>\\<^sub>r\n                                 {((\\<V>, A), \\<V>', B).\n                                  (A, B) \\<in> polys_rel \\<and>\n                                  \\<V> = \\<V>'})\n                                (SPEC\n                                  (\\<lambda>(b, Ba).\n(is_success b \\<longrightarrow>\n \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0 \\<and>\n \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n(is_found b \\<longrightarrow>\n \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0 \\<and>\n \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n spec \\<in> pac_ideal (set_mset A\\<^sub>0))))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Add x11 x12 x13 x14;\n     r_ \\<in> {r. r - x14 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                  vars r \\<subseteq> vars x14};\n     eqa_\n     \\<in> {b. b \\<longrightarrow>\n               x11 \\<in># dom_m A \\<and>\n               x12 \\<in># dom_m A \\<and>\n               x13 \\<notin># dom_m A \\<and>\n               vars r_ \\<subseteq> \\<V> \\<and>\n               the (fmlookup A x11) + the (fmlookup A x12) - r_\n               \\<in> More_Modules.ideal polynomial_bool};\n     st'_\n     \\<in> {st'.\n            \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n            r_ - spec \\<in> More_Modules.ideal polynomial_bool};\n     \\<not> eqa_\\<rbrakk>\n    \\<Longrightarrow> RETURN (FAILED, \\<V>, A)\n                      \\<le> \\<Down>\n                             (status_rel \\<times>\\<^sub>r\n                              {((\\<V>, A), \\<V>', B).\n                               (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n                             (SPEC\n                               (\\<lambda>(b, Ba).\n                                   (is_success b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba) \\<and>\n                                   (is_found b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba \\<and>\n                                    spec\n                                    \\<in> pac_ideal (set_mset A\\<^sub>0))))", "by (rule RETURN_SPEC_refine)\n         (auto simp: Ex_status_iff dest: rtranclp_PAC_Format_subset_ideal)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x21 x22 x23 x24.\n       st = Mult x21 x22 x23 x24 \\<Longrightarrow>\n       SPEC\n        (\\<lambda>r.\n            r - x24 \\<in> More_Modules.ideal polynomial_bool \\<and>\n            vars r \\<subseteq> vars x24) \\<bind>\n       (\\<lambda>r.\n           SPEC\n            (\\<lambda>r.\n                r - x22 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                vars r \\<subseteq> vars x22) \\<bind>\n           (\\<lambda>q.\n               SPEC\n                (\\<lambda>b.\n                    b \\<longrightarrow>\n                    x21 \\<in># dom_m A \\<and>\n                    x23 \\<notin># dom_m A \\<and>\n                    vars q \\<subseteq> \\<V> \\<and>\n                    vars r \\<subseteq> \\<V> \\<and>\n                    the (fmlookup A x21) * q - r\n                    \\<in> More_Modules.ideal polynomial_bool) \\<bind>\n               (\\<lambda>eq.\n                   SPEC\n                    (\\<lambda>st'.\n                        \\<not> is_failed st' \\<and>\n                        is_found st' \\<longrightarrow>\n                        r - spec\n                        \\<in> More_Modules.ideal polynomial_bool) \\<bind>\n                   (\\<lambda>st'.\n                       if eq\n                       then RETURN\n                             (merge_status a st', \\<V>,\n                              fmupd (new_id (Mult x21 x22 x23 x24)) r A)\n                       else RETURN (FAILED, \\<V>, A)))))\n       \\<le> \\<Down>\n              (status_rel \\<times>\\<^sub>r\n               {((\\<V>, A), \\<V>', B).\n                (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n              (SPEC\n                (\\<lambda>(b, Ba).\n                    (is_success b \\<longrightarrow>\n                     \\<Union> (vars ` set_mset A\\<^sub>0)\n                     \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                     \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n                     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                      (\\<V>, B) \\<and>\n                     PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                    (is_found b \\<longrightarrow>\n                     \\<Union> (vars ` set_mset A\\<^sub>0)\n                     \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                     \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n                     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                      (\\<V>, B) \\<and>\n                     PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                     spec \\<in> pac_ideal (set_mset A\\<^sub>0))))\nA total of 3 subgoals...", "subgoal for x11 x12 x13 x14"], ["proof (prove)\ngoal (1 subgoal):\n 1. st = Mult x11 x12 x13 x14 \\<Longrightarrow>\n    SPEC\n     (\\<lambda>r.\n         r - x14 \\<in> More_Modules.ideal polynomial_bool \\<and>\n         vars r \\<subseteq> vars x14) \\<bind>\n    (\\<lambda>r.\n        SPEC\n         (\\<lambda>r.\n             r - x12 \\<in> More_Modules.ideal polynomial_bool \\<and>\n             vars r \\<subseteq> vars x12) \\<bind>\n        (\\<lambda>q.\n            SPEC\n             (\\<lambda>b.\n                 b \\<longrightarrow>\n                 x11 \\<in># dom_m A \\<and>\n                 x13 \\<notin># dom_m A \\<and>\n                 vars q \\<subseteq> \\<V> \\<and>\n                 vars r \\<subseteq> \\<V> \\<and>\n                 the (fmlookup A x11) * q - r\n                 \\<in> More_Modules.ideal polynomial_bool) \\<bind>\n            (\\<lambda>eq.\n                SPEC\n                 (\\<lambda>st'.\n                     \\<not> is_failed st' \\<and>\n                     is_found st' \\<longrightarrow>\n                     r - spec\n                     \\<in> More_Modules.ideal polynomial_bool) \\<bind>\n                (\\<lambda>st'.\n                    if eq\n                    then RETURN\n                          (merge_status a st', \\<V>,\n                           fmupd (new_id (Mult x11 x12 x13 x14)) r A)\n                    else RETURN (FAILED, \\<V>, A)))))\n    \\<le> \\<Down>\n           (status_rel \\<times>\\<^sub>r\n            {((\\<V>, A), \\<V>', B).\n             (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n           (SPEC\n             (\\<lambda>(b, Ba).\n                 (is_success b \\<longrightarrow>\n                  \\<Union> (vars ` set_mset A\\<^sub>0)\n                  \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                  \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n                  PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                   (\\<V>, B) \\<and>\n                  PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                 (is_found b \\<longrightarrow>\n                  \\<Union> (vars ` set_mset A\\<^sub>0)\n                  \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                  \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n                  PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                   (\\<V>, B) \\<and>\n                  PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                  spec \\<in> pac_ideal (set_mset A\\<^sub>0))))", "apply (refine_vcg lhs_step_If)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r q eqa st'.\n       \\<lbrakk>st = Mult x11 x12 x13 x14;\n        r \\<in> {r. r - x14 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                    vars r \\<subseteq> vars x14};\n        q \\<in> {r. r - x12 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                    vars r \\<subseteq> vars x12};\n        eqa\n        \\<in> {b. b \\<longrightarrow>\n                  x11 \\<in># dom_m A \\<and>\n                  x13 \\<notin># dom_m A \\<and>\n                  vars q \\<subseteq> \\<V> \\<and>\n                  vars r \\<subseteq> \\<V> \\<and>\n                  the (fmlookup A x11) * q - r\n                  \\<in> More_Modules.ideal polynomial_bool};\n        st'\n        \\<in> {st'.\n               \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n               r - spec \\<in> More_Modules.ideal polynomial_bool};\n        eqa\\<rbrakk>\n       \\<Longrightarrow> RETURN\n                          (merge_status a st', \\<V>,\n                           fmupd (new_id (Mult x11 x12 x13 x14)) r A)\n                         \\<le> \\<Down>\n                                (status_rel \\<times>\\<^sub>r\n                                 {((\\<V>, A), \\<V>', B).\n                                  (A, B) \\<in> polys_rel \\<and>\n                                  \\<V> = \\<V>'})\n                                (SPEC\n                                  (\\<lambda>(b, Ba).\n(is_success b \\<longrightarrow>\n \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0 \\<and>\n \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n(is_found b \\<longrightarrow>\n \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0 \\<and>\n \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n spec \\<in> pac_ideal (set_mset A\\<^sub>0))))\nA total of 2 subgoals...", "subgoal for r q eqa st'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Mult x11 x12 x13 x14;\n     r \\<in> {r. r - x14 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars x14};\n     q \\<in> {r. r - x12 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars x12};\n     eqa\n     \\<in> {b. b \\<longrightarrow>\n               x11 \\<in># dom_m A \\<and>\n               x13 \\<notin># dom_m A \\<and>\n               vars q \\<subseteq> \\<V> \\<and>\n               vars r \\<subseteq> \\<V> \\<and>\n               the (fmlookup A x11) * q - r\n               \\<in> More_Modules.ideal polynomial_bool};\n     st'\n     \\<in> {st'.\n            \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n            r - spec \\<in> More_Modules.ideal polynomial_bool};\n     eqa\\<rbrakk>\n    \\<Longrightarrow> RETURN\n                       (merge_status a st', \\<V>,\n                        fmupd (new_id (Mult x11 x12 x13 x14)) r A)\n                      \\<le> \\<Down>\n                             (status_rel \\<times>\\<^sub>r\n                              {((\\<V>, A), \\<V>', B).\n                               (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n                             (SPEC\n                               (\\<lambda>(b, Ba).\n                                   (is_success b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba) \\<and>\n                                   (is_found b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba \\<and>\n                                    spec\n                                    \\<in> pac_ideal (set_mset A\\<^sub>0))))", "using assms vars_B"], ["proof (prove)\nusing this:\n  ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full\n  \\<not> is_failed a\n  a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0)\n  PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B)\n  vars spec \\<subseteq> \\<V>\\<^sub>0\n  \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0\n  \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Mult x11 x12 x13 x14;\n     r \\<in> {r. r - x14 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars x14};\n     q \\<in> {r. r - x12 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars x12};\n     eqa\n     \\<in> {b. b \\<longrightarrow>\n               x11 \\<in># dom_m A \\<and>\n               x13 \\<notin># dom_m A \\<and>\n               vars q \\<subseteq> \\<V> \\<and>\n               vars r \\<subseteq> \\<V> \\<and>\n               the (fmlookup A x11) * q - r\n               \\<in> More_Modules.ideal polynomial_bool};\n     st'\n     \\<in> {st'.\n            \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n            r - spec \\<in> More_Modules.ideal polynomial_bool};\n     eqa\\<rbrakk>\n    \\<Longrightarrow> RETURN\n                       (merge_status a st', \\<V>,\n                        fmupd (new_id (Mult x11 x12 x13 x14)) r A)\n                      \\<le> \\<Down>\n                             (status_rel \\<times>\\<^sub>r\n                              {((\\<V>, A), \\<V>', B).\n                               (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n                             (SPEC\n                               (\\<lambda>(b, Ba).\n                                   (is_success b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba) \\<and>\n                                   (is_found b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba \\<and>\n                                    spec\n                                    \\<in> pac_ideal (set_mset A\\<^sub>0))))", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Mult x11 x12 x13 x14;\n     r \\<in> {r. r - x14 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars x14};\n     q \\<in> {r. r - x12 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars x12};\n     eqa\n     \\<in> {b. b \\<longrightarrow>\n               x11 \\<in># dom_m A \\<and>\n               x13 \\<notin># dom_m A \\<and>\n               vars q \\<subseteq> \\<V> \\<and>\n               vars r \\<subseteq> \\<V> \\<and>\n               the (fmlookup A x11) * q - r\n               \\<in> More_Modules.ideal polynomial_bool};\n     st'\n     \\<in> {st'.\n            \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n            r - spec \\<in> More_Modules.ideal polynomial_bool};\n     eqa; ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full;\n     \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0);\n     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B);\n     vars spec \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> RETURN\n                       (merge_status a st', \\<V>,\n                        fmupd (new_id (Mult x11 x12 x13 x14)) r A)\n                      \\<le> \\<Down>\n                             (status_rel \\<times>\\<^sub>r\n                              {((\\<V>, A), \\<V>', B).\n                               (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n                             (SPEC\n                               (\\<lambda>(b, Ba).\n                                   (is_success b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba) \\<and>\n                                   (is_found b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba \\<and>\n                                    spec\n                                    \\<in> pac_ideal (set_mset A\\<^sub>0))))", "apply (rule RETURN_SPEC_refine)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Mult x11 x12 x13 x14;\n     r \\<in> {r. r - x14 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars x14};\n     q \\<in> {r. r - x12 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars x12};\n     eqa\n     \\<in> {b. b \\<longrightarrow>\n               x11 \\<in># dom_m A \\<and>\n               x13 \\<notin># dom_m A \\<and>\n               vars q \\<subseteq> \\<V> \\<and>\n               vars r \\<subseteq> \\<V> \\<and>\n               the (fmlookup A x11) * q - r\n               \\<in> More_Modules.ideal polynomial_bool};\n     st'\n     \\<in> {st'.\n            \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n            r - spec \\<in> More_Modules.ideal polynomial_bool};\n     eqa; ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full;\n     \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0);\n     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B);\n     vars spec \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x'.\n                         ((merge_status a st', \\<V>,\n                           fmupd (new_id (Mult x11 x12 x13 x14)) r A),\n                          x')\n                         \\<in> status_rel \\<times>\\<^sub>r\n                               {((\\<V>, A), \\<V>', B).\n                                (A, B) \\<in> polys_rel \\<and>\n                                \\<V> = \\<V>'} \\<and>\n                         (case x' of\n                          (b, Ba) \\<Rightarrow>\n                            (is_success b \\<longrightarrow>\n                             \\<Union> (vars ` set_mset A\\<^sub>0)\n                             \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                             \\<Union> (vars ` set_mset B)\n                             \\<subseteq> \\<V> \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>*\n                              (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                            (is_found b \\<longrightarrow>\n                             \\<Union> (vars ` set_mset A\\<^sub>0)\n                             \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                             \\<Union> (vars ` set_mset B)\n                             \\<subseteq> \\<V> \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>*\n                              (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                             spec \\<in> pac_ideal (set_mset A\\<^sub>0)))", "apply (rule_tac x = \\<open>(merge_status a st',\\<V>,add_mset r B)\\<close> in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Mult x11 x12 x13 x14;\n     r \\<in> {r. r - x14 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars x14};\n     q \\<in> {r. r - x12 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars x12};\n     eqa\n     \\<in> {b. b \\<longrightarrow>\n               x11 \\<in># dom_m A \\<and>\n               x13 \\<notin># dom_m A \\<and>\n               vars q \\<subseteq> \\<V> \\<and>\n               vars r \\<subseteq> \\<V> \\<and>\n               the (fmlookup A x11) * q - r\n               \\<in> More_Modules.ideal polynomial_bool};\n     st'\n     \\<in> {st'.\n            \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n            r - spec \\<in> More_Modules.ideal polynomial_bool};\n     eqa; ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full;\n     \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0);\n     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B);\n     vars spec \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> ((merge_status a st', \\<V>,\n                        fmupd (new_id (Mult x11 x12 x13 x14)) r A),\n                       merge_status a st', \\<V>, add_mset r B)\n                      \\<in> status_rel \\<times>\\<^sub>r\n                            {((\\<V>, A), \\<V>', B).\n                             (A, B) \\<in> polys_rel \\<and>\n                             \\<V> = \\<V>'} \\<and>\n                      (case (merge_status a st', \\<V>, add_mset r B) of\n                       (b, Ba) \\<Rightarrow>\n                         (is_success b \\<longrightarrow>\n                          \\<Union> (vars ` set_mset A\\<^sub>0)\n                          \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                          \\<Union> (vars ` set_mset B)\n                          \\<subseteq> \\<V> \\<and>\n                          PAC_Format\\<^sup>*\\<^sup>*\n                           (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                          PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                         (is_found b \\<longrightarrow>\n                          \\<Union> (vars ` set_mset A\\<^sub>0)\n                          \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                          \\<Union> (vars ` set_mset B)\n                          \\<subseteq> \\<V> \\<and>\n                          PAC_Format\\<^sup>*\\<^sup>*\n                           (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                          PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                          spec \\<in> pac_ideal (set_mset A\\<^sub>0)))", "by (auto intro: polys_rel_update_remove intro: PAC_Format_add_and_remove(3-) H3\n           dest: rtranclp_PAC_Format_subset_ideal)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r q eqa st'.\n       \\<lbrakk>st = Mult x11 x12 x13 x14;\n        r \\<in> {r. r - x14 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                    vars r \\<subseteq> vars x14};\n        q \\<in> {r. r - x12 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                    vars r \\<subseteq> vars x12};\n        eqa\n        \\<in> {b. b \\<longrightarrow>\n                  x11 \\<in># dom_m A \\<and>\n                  x13 \\<notin># dom_m A \\<and>\n                  vars q \\<subseteq> \\<V> \\<and>\n                  vars r \\<subseteq> \\<V> \\<and>\n                  the (fmlookup A x11) * q - r\n                  \\<in> More_Modules.ideal polynomial_bool};\n        st'\n        \\<in> {st'.\n               \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n               r - spec \\<in> More_Modules.ideal polynomial_bool};\n        \\<not> eqa\\<rbrakk>\n       \\<Longrightarrow> RETURN (FAILED, \\<V>, A)\n                         \\<le> \\<Down>\n                                (status_rel \\<times>\\<^sub>r\n                                 {((\\<V>, A), \\<V>', B).\n                                  (A, B) \\<in> polys_rel \\<and>\n                                  \\<V> = \\<V>'})\n                                (SPEC\n                                  (\\<lambda>(b, Ba).\n(is_success b \\<longrightarrow>\n \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0 \\<and>\n \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n(is_found b \\<longrightarrow>\n \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0 \\<and>\n \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n spec \\<in> pac_ideal (set_mset A\\<^sub>0))))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Mult x11 x12 x13 x14;\n     r_ \\<in> {r. r - x14 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                  vars r \\<subseteq> vars x14};\n     q_ \\<in> {r. r - x12 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                  vars r \\<subseteq> vars x12};\n     eqa_\n     \\<in> {b. b \\<longrightarrow>\n               x11 \\<in># dom_m A \\<and>\n               x13 \\<notin># dom_m A \\<and>\n               vars q_ \\<subseteq> \\<V> \\<and>\n               vars r_ \\<subseteq> \\<V> \\<and>\n               the (fmlookup A x11) * q_ - r_\n               \\<in> More_Modules.ideal polynomial_bool};\n     st'_\n     \\<in> {st'.\n            \\<not> is_failed st' \\<and> is_found st' \\<longrightarrow>\n            r_ - spec \\<in> More_Modules.ideal polynomial_bool};\n     \\<not> eqa_\\<rbrakk>\n    \\<Longrightarrow> RETURN (FAILED, \\<V>, A)\n                      \\<le> \\<Down>\n                             (status_rel \\<times>\\<^sub>r\n                              {((\\<V>, A), \\<V>', B).\n                               (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n                             (SPEC\n                               (\\<lambda>(b, Ba).\n                                   (is_success b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba) \\<and>\n                                   (is_found b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba \\<and>\n                                    spec\n                                    \\<in> pac_ideal (set_mset A\\<^sub>0))))", "by (rule RETURN_SPEC_refine)\n          (auto simp: Ex_status_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x31 x32 x33.\n       st = Extension x31 x32 x33 \\<Longrightarrow>\n       SPEC\n        (\\<lambda>r.\n            r - (x33 - Var x32)\n            \\<in> More_Modules.ideal polynomial_bool \\<and>\n            vars r \\<subseteq> vars (x33 - Var x32)) \\<bind>\n       (\\<lambda>r.\n           SPEC\n            (\\<lambda>b.\n                b \\<longrightarrow>\n                x31 \\<notin># dom_m A \\<and>\n                x32 \\<notin> \\<V> \\<and>\n                (r + Var x32)\\<^sup>2 - (r + Var x32)\n                \\<in> More_Modules.ideal polynomial_bool \\<and>\n                vars (r + Var x32) \\<subseteq> \\<V>) \\<bind>\n           (\\<lambda>eq.\n               if eq\n               then RETURN\n                     (a, insert (new_var (Extension x31 x32 x33)) \\<V>,\n                      fmupd (new_id (Extension x31 x32 x33)) r A)\n               else RETURN (FAILED, \\<V>, A)))\n       \\<le> \\<Down>\n              (status_rel \\<times>\\<^sub>r\n               {((\\<V>, A), \\<V>', B).\n                (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n              (SPEC\n                (\\<lambda>(b, Ba).\n                    (is_success b \\<longrightarrow>\n                     \\<Union> (vars ` set_mset A\\<^sub>0)\n                     \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                     \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n                     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                      (\\<V>, B) \\<and>\n                     PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                    (is_found b \\<longrightarrow>\n                     \\<Union> (vars ` set_mset A\\<^sub>0)\n                     \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                     \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n                     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                      (\\<V>, B) \\<and>\n                     PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                     spec \\<in> pac_ideal (set_mset A\\<^sub>0))))\nA total of 2 subgoals...", "subgoal for x31 x32 x34"], ["proof (prove)\ngoal (1 subgoal):\n 1. st = Extension x31 x32 x34 \\<Longrightarrow>\n    SPEC\n     (\\<lambda>r.\n         r - (x34 - Var x32) \\<in> More_Modules.ideal polynomial_bool \\<and>\n         vars r \\<subseteq> vars (x34 - Var x32)) \\<bind>\n    (\\<lambda>r.\n        SPEC\n         (\\<lambda>b.\n             b \\<longrightarrow>\n             x31 \\<notin># dom_m A \\<and>\n             x32 \\<notin> \\<V> \\<and>\n             (r + Var x32)\\<^sup>2 - (r + Var x32)\n             \\<in> More_Modules.ideal polynomial_bool \\<and>\n             vars (r + Var x32) \\<subseteq> \\<V>) \\<bind>\n        (\\<lambda>eq.\n            if eq\n            then RETURN\n                  (a, insert (new_var (Extension x31 x32 x34)) \\<V>,\n                   fmupd (new_id (Extension x31 x32 x34)) r A)\n            else RETURN (FAILED, \\<V>, A)))\n    \\<le> \\<Down>\n           (status_rel \\<times>\\<^sub>r\n            {((\\<V>, A), \\<V>', B).\n             (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n           (SPEC\n             (\\<lambda>(b, Ba).\n                 (is_success b \\<longrightarrow>\n                  \\<Union> (vars ` set_mset A\\<^sub>0)\n                  \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                  \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n                  PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                   (\\<V>, B) \\<and>\n                  PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                 (is_found b \\<longrightarrow>\n                  \\<Union> (vars ` set_mset A\\<^sub>0)\n                  \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                  \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n                  PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                   (\\<V>, B) \\<and>\n                  PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                  spec \\<in> pac_ideal (set_mset A\\<^sub>0))))", "apply (refine_vcg lhs_step_If)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r eqa.\n       \\<lbrakk>st = Extension x31 x32 x34;\n        r \\<in> {r. r - (x34 - Var x32)\n                    \\<in> More_Modules.ideal polynomial_bool \\<and>\n                    vars r \\<subseteq> vars (x34 - Var x32)};\n        eqa\n        \\<in> {b. b \\<longrightarrow>\n                  x31 \\<notin># dom_m A \\<and>\n                  x32 \\<notin> \\<V> \\<and>\n                  (r + Var x32)\\<^sup>2 - (r + Var x32)\n                  \\<in> More_Modules.ideal polynomial_bool \\<and>\n                  vars (r + Var x32) \\<subseteq> \\<V>};\n        eqa\\<rbrakk>\n       \\<Longrightarrow> RETURN\n                          (a, insert (new_var (Extension x31 x32 x34)) \\<V>,\n                           fmupd (new_id (Extension x31 x32 x34)) r A)\n                         \\<le> \\<Down>\n                                (status_rel \\<times>\\<^sub>r\n                                 {((\\<V>, A), \\<V>', B).\n                                  (A, B) \\<in> polys_rel \\<and>\n                                  \\<V> = \\<V>'})\n                                (SPEC\n                                  (\\<lambda>(b, Ba).\n(is_success b \\<longrightarrow>\n \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0 \\<and>\n \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n(is_found b \\<longrightarrow>\n \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0 \\<and>\n \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n spec \\<in> pac_ideal (set_mset A\\<^sub>0))))\nA total of 2 subgoals...", "subgoal for r x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Extension x31 x32 x34;\n     r \\<in> {r. r - (x34 - Var x32)\n                 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars (x34 - Var x32)};\n     x \\<in> {b. b \\<longrightarrow>\n                 x31 \\<notin># dom_m A \\<and>\n                 x32 \\<notin> \\<V> \\<and>\n                 (r + Var x32)\\<^sup>2 - (r + Var x32)\n                 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars (r + Var x32) \\<subseteq> \\<V>};\n     x\\<rbrakk>\n    \\<Longrightarrow> RETURN\n                       (a, insert (new_var (Extension x31 x32 x34)) \\<V>,\n                        fmupd (new_id (Extension x31 x32 x34)) r A)\n                      \\<le> \\<Down>\n                             (status_rel \\<times>\\<^sub>r\n                              {((\\<V>, A), \\<V>', B).\n                               (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n                             (SPEC\n                               (\\<lambda>(b, Ba).\n                                   (is_success b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba) \\<and>\n                                   (is_found b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba \\<and>\n                                    spec\n                                    \\<in> pac_ideal (set_mset A\\<^sub>0))))", "using assms vars_B"], ["proof (prove)\nusing this:\n  ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full\n  \\<not> is_failed a\n  a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0)\n  PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B)\n  vars spec \\<subseteq> \\<V>\\<^sub>0\n  \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0\n  \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Extension x31 x32 x34;\n     r \\<in> {r. r - (x34 - Var x32)\n                 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars (x34 - Var x32)};\n     x \\<in> {b. b \\<longrightarrow>\n                 x31 \\<notin># dom_m A \\<and>\n                 x32 \\<notin> \\<V> \\<and>\n                 (r + Var x32)\\<^sup>2 - (r + Var x32)\n                 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars (r + Var x32) \\<subseteq> \\<V>};\n     x\\<rbrakk>\n    \\<Longrightarrow> RETURN\n                       (a, insert (new_var (Extension x31 x32 x34)) \\<V>,\n                        fmupd (new_id (Extension x31 x32 x34)) r A)\n                      \\<le> \\<Down>\n                             (status_rel \\<times>\\<^sub>r\n                              {((\\<V>, A), \\<V>', B).\n                               (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n                             (SPEC\n                               (\\<lambda>(b, Ba).\n                                   (is_success b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba) \\<and>\n                                   (is_found b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba \\<and>\n                                    spec\n                                    \\<in> pac_ideal (set_mset A\\<^sub>0))))", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Extension x31 x32 x34;\n     r \\<in> {r. r - (x34 - Var x32)\n                 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars (x34 - Var x32)};\n     x \\<in> {b. b \\<longrightarrow>\n                 x31 \\<notin># dom_m A \\<and>\n                 x32 \\<notin> \\<V> \\<and>\n                 (r + Var x32)\\<^sup>2 - (r + Var x32)\n                 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars (r + Var x32) \\<subseteq> \\<V>};\n     x; ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full;\n     \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0);\n     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B);\n     vars spec \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> RETURN\n                       (a, insert (new_var (Extension x31 x32 x34)) \\<V>,\n                        fmupd (new_id (Extension x31 x32 x34)) r A)\n                      \\<le> \\<Down>\n                             (status_rel \\<times>\\<^sub>r\n                              {((\\<V>, A), \\<V>', B).\n                               (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n                             (SPEC\n                               (\\<lambda>(b, Ba).\n                                   (is_success b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba) \\<and>\n                                   (is_found b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba \\<and>\n                                    spec\n                                    \\<in> pac_ideal (set_mset A\\<^sub>0))))", "apply (rule RETURN_SPEC_refine)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Extension x31 x32 x34;\n     r \\<in> {r. r - (x34 - Var x32)\n                 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars (x34 - Var x32)};\n     x \\<in> {b. b \\<longrightarrow>\n                 x31 \\<notin># dom_m A \\<and>\n                 x32 \\<notin> \\<V> \\<and>\n                 (r + Var x32)\\<^sup>2 - (r + Var x32)\n                 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars (r + Var x32) \\<subseteq> \\<V>};\n     x; ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full;\n     \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0);\n     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B);\n     vars spec \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x'.\n                         ((a, insert (new_var (Extension x31 x32 x34)) \\<V>,\n                           fmupd (new_id (Extension x31 x32 x34)) r A),\n                          x')\n                         \\<in> status_rel \\<times>\\<^sub>r\n                               {((\\<V>, A), \\<V>', B).\n                                (A, B) \\<in> polys_rel \\<and>\n                                \\<V> = \\<V>'} \\<and>\n                         (case x' of\n                          (b, Ba) \\<Rightarrow>\n                            (is_success b \\<longrightarrow>\n                             \\<Union> (vars ` set_mset A\\<^sub>0)\n                             \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                             \\<Union> (vars ` set_mset B)\n                             \\<subseteq> \\<V> \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>*\n                              (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                            (is_found b \\<longrightarrow>\n                             \\<Union> (vars ` set_mset A\\<^sub>0)\n                             \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                             \\<Union> (vars ` set_mset B)\n                             \\<subseteq> \\<V> \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>*\n                              (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                             spec \\<in> pac_ideal (set_mset A\\<^sub>0)))", "apply (rule_tac x = \\<open>(a,insert x32 \\<V>, add_mset r B)\\<close> in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Extension x31 x32 x34;\n     r \\<in> {r. r - (x34 - Var x32)\n                 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars r \\<subseteq> vars (x34 - Var x32)};\n     x \\<in> {b. b \\<longrightarrow>\n                 x31 \\<notin># dom_m A \\<and>\n                 x32 \\<notin> \\<V> \\<and>\n                 (r + Var x32)\\<^sup>2 - (r + Var x32)\n                 \\<in> More_Modules.ideal polynomial_bool \\<and>\n                 vars (r + Var x32) \\<subseteq> \\<V>};\n     x; ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full;\n     \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0);\n     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B);\n     vars spec \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> ((a, insert (new_var (Extension x31 x32 x34)) \\<V>,\n                        fmupd (new_id (Extension x31 x32 x34)) r A),\n                       a, insert x32 \\<V>, add_mset r B)\n                      \\<in> status_rel \\<times>\\<^sub>r\n                            {((\\<V>, A), \\<V>', B).\n                             (A, B) \\<in> polys_rel \\<and>\n                             \\<V> = \\<V>'} \\<and>\n                      (case (a, insert x32 \\<V>, add_mset r B) of\n                       (b, Ba) \\<Rightarrow>\n                         (is_success b \\<longrightarrow>\n                          \\<Union> (vars ` set_mset A\\<^sub>0)\n                          \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                          \\<Union> (vars ` set_mset B)\n                          \\<subseteq> \\<V> \\<and>\n                          PAC_Format\\<^sup>*\\<^sup>*\n                           (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                          PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                         (is_found b \\<longrightarrow>\n                          \\<Union> (vars ` set_mset A\\<^sub>0)\n                          \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                          \\<Union> (vars ` set_mset B)\n                          \\<subseteq> \\<V> \\<and>\n                          PAC_Format\\<^sup>*\\<^sup>*\n                           (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                          PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                          spec \\<in> pac_ideal (set_mset A\\<^sub>0)))", "apply (auto simp: intro!: polys_rel_update_remove PAC_Format_add_and_remove(5-)\n           dest: rtranclp_PAC_Format_subset_ideal)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r eqa.\n       \\<lbrakk>st = Extension x31 x32 x34;\n        r \\<in> {r. r - (x34 - Var x32)\n                    \\<in> More_Modules.ideal polynomial_bool \\<and>\n                    vars r \\<subseteq> vars (x34 - Var x32)};\n        eqa\n        \\<in> {b. b \\<longrightarrow>\n                  x31 \\<notin># dom_m A \\<and>\n                  x32 \\<notin> \\<V> \\<and>\n                  (r + Var x32)\\<^sup>2 - (r + Var x32)\n                  \\<in> More_Modules.ideal polynomial_bool \\<and>\n                  vars (r + Var x32) \\<subseteq> \\<V>};\n        \\<not> eqa\\<rbrakk>\n       \\<Longrightarrow> RETURN (FAILED, \\<V>, A)\n                         \\<le> \\<Down>\n                                (status_rel \\<times>\\<^sub>r\n                                 {((\\<V>, A), \\<V>', B).\n                                  (A, B) \\<in> polys_rel \\<and>\n                                  \\<V> = \\<V>'})\n                                (SPEC\n                                  (\\<lambda>(b, Ba).\n(is_success b \\<longrightarrow>\n \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0 \\<and>\n \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n(is_found b \\<longrightarrow>\n \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0 \\<and>\n \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n spec \\<in> pac_ideal (set_mset A\\<^sub>0))))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Extension x31 x32 x34;\n     r_ \\<in> {r. r - (x34 - Var x32)\n                  \\<in> More_Modules.ideal polynomial_bool \\<and>\n                  vars r \\<subseteq> vars (x34 - Var x32)};\n     eqa_\n     \\<in> {b. b \\<longrightarrow>\n               x31 \\<notin># dom_m A \\<and>\n               x32 \\<notin> \\<V> \\<and>\n               (r_ + Var x32)\\<^sup>2 - (r_ + Var x32)\n               \\<in> More_Modules.ideal polynomial_bool \\<and>\n               vars (r_ + Var x32) \\<subseteq> \\<V>};\n     \\<not> eqa_\\<rbrakk>\n    \\<Longrightarrow> RETURN (FAILED, \\<V>, A)\n                      \\<le> \\<Down>\n                             (status_rel \\<times>\\<^sub>r\n                              {((\\<V>, A), \\<V>', B).\n                               (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n                             (SPEC\n                               (\\<lambda>(b, Ba).\n                                   (is_success b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba) \\<and>\n                                   (is_found b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba \\<and>\n                                    spec\n                                    \\<in> pac_ideal (set_mset A\\<^sub>0))))", "by (rule RETURN_SPEC_refine)\n          (auto simp: Ex_status_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x4.\n       st = Del x4 \\<Longrightarrow>\n       check_del A x4 \\<bind>\n       (\\<lambda>eq.\n           if eq then RETURN (a, \\<V>, fmdrop (pac_src1 (Del x4)) A)\n           else RETURN (FAILED, \\<V>, A))\n       \\<le> \\<Down>\n              (status_rel \\<times>\\<^sub>r\n               {((\\<V>, A), \\<V>', B).\n                (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n              (SPEC\n                (\\<lambda>(b, Ba).\n                    (is_success b \\<longrightarrow>\n                     \\<Union> (vars ` set_mset A\\<^sub>0)\n                     \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                     \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n                     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                      (\\<V>, B) \\<and>\n                     PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                    (is_found b \\<longrightarrow>\n                     \\<Union> (vars ` set_mset A\\<^sub>0)\n                     \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                     \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n                     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                      (\\<V>, B) \\<and>\n                     PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                     spec \\<in> pac_ideal (set_mset A\\<^sub>0))))", "subgoal for x11"], ["proof (prove)\ngoal (1 subgoal):\n 1. st = Del x11 \\<Longrightarrow>\n    check_del A x11 \\<bind>\n    (\\<lambda>eq.\n        if eq then RETURN (a, \\<V>, fmdrop (pac_src1 (Del x11)) A)\n        else RETURN (FAILED, \\<V>, A))\n    \\<le> \\<Down>\n           (status_rel \\<times>\\<^sub>r\n            {((\\<V>, A), \\<V>', B).\n             (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n           (SPEC\n             (\\<lambda>(b, Ba).\n                 (is_success b \\<longrightarrow>\n                  \\<Union> (vars ` set_mset A\\<^sub>0)\n                  \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                  \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n                  PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                   (\\<V>, B) \\<and>\n                  PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                 (is_found b \\<longrightarrow>\n                  \\<Union> (vars ` set_mset A\\<^sub>0)\n                  \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                  \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n                  PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                   (\\<V>, B) \\<and>\n                  PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                  spec \\<in> pac_ideal (set_mset A\\<^sub>0))))", "unfolding check_del_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. st = Del x11 \\<Longrightarrow>\n    SPEC (\\<lambda>b. b \\<longrightarrow> True) \\<bind>\n    (\\<lambda>eq.\n        if eq then RETURN (a, \\<V>, fmdrop (pac_src1 (Del x11)) A)\n        else RETURN (FAILED, \\<V>, A))\n    \\<le> \\<Down>\n           (status_rel \\<times>\\<^sub>r\n            {((\\<V>, A), \\<V>', B).\n             (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n           (SPEC\n             (\\<lambda>(b, Ba).\n                 (is_success b \\<longrightarrow>\n                  \\<Union> (vars ` set_mset A\\<^sub>0)\n                  \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                  \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n                  PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                   (\\<V>, B) \\<and>\n                  PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                 (is_found b \\<longrightarrow>\n                  \\<Union> (vars ` set_mset A\\<^sub>0)\n                  \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                  \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n                  PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n                   (\\<V>, B) \\<and>\n                  PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                  spec \\<in> pac_ideal (set_mset A\\<^sub>0))))", "apply (refine_vcg lhs_step_If)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>eqa.\n       \\<lbrakk>st = Del x11; eqa \\<in> {b. b \\<longrightarrow> True};\n        eqa\\<rbrakk>\n       \\<Longrightarrow> RETURN (a, \\<V>, fmdrop (pac_src1 (Del x11)) A)\n                         \\<le> \\<Down>\n                                (status_rel \\<times>\\<^sub>r\n                                 {((\\<V>, A), \\<V>', B).\n                                  (A, B) \\<in> polys_rel \\<and>\n                                  \\<V> = \\<V>'})\n                                (SPEC\n                                  (\\<lambda>(b, Ba).\n(is_success b \\<longrightarrow>\n \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0 \\<and>\n \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n(is_found b \\<longrightarrow>\n \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0 \\<and>\n \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n spec \\<in> pac_ideal (set_mset A\\<^sub>0))))\nA total of 2 subgoals...", "subgoal for eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Del x11; eq \\<in> {b. b \\<longrightarrow> True};\n     eq\\<rbrakk>\n    \\<Longrightarrow> RETURN (a, \\<V>, fmdrop (pac_src1 (Del x11)) A)\n                      \\<le> \\<Down>\n                             (status_rel \\<times>\\<^sub>r\n                              {((\\<V>, A), \\<V>', B).\n                               (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n                             (SPEC\n                               (\\<lambda>(b, Ba).\n                                   (is_success b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba) \\<and>\n                                   (is_found b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba \\<and>\n                                    spec\n                                    \\<in> pac_ideal (set_mset A\\<^sub>0))))", "using assms vars_B"], ["proof (prove)\nusing this:\n  ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full\n  \\<not> is_failed a\n  a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0)\n  PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B)\n  vars spec \\<subseteq> \\<V>\\<^sub>0\n  \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0\n  \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Del x11; eq \\<in> {b. b \\<longrightarrow> True};\n     eq\\<rbrakk>\n    \\<Longrightarrow> RETURN (a, \\<V>, fmdrop (pac_src1 (Del x11)) A)\n                      \\<le> \\<Down>\n                             (status_rel \\<times>\\<^sub>r\n                              {((\\<V>, A), \\<V>', B).\n                               (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n                             (SPEC\n                               (\\<lambda>(b, Ba).\n                                   (is_success b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba) \\<and>\n                                   (is_found b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba \\<and>\n                                    spec\n                                    \\<in> pac_ideal (set_mset A\\<^sub>0))))", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Del x11; eq \\<in> {b. b \\<longrightarrow> True}; eq;\n     ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full; \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0);\n     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B);\n     vars spec \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> RETURN (a, \\<V>, fmdrop (pac_src1 (Del x11)) A)\n                      \\<le> \\<Down>\n                             (status_rel \\<times>\\<^sub>r\n                              {((\\<V>, A), \\<V>', B).\n                               (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n                             (SPEC\n                               (\\<lambda>(b, Ba).\n                                   (is_success b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba) \\<and>\n                                   (is_found b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba \\<and>\n                                    spec\n                                    \\<in> pac_ideal (set_mset A\\<^sub>0))))", "apply (rule RETURN_SPEC_refine)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Del x11; eq \\<in> {b. b \\<longrightarrow> True}; eq;\n     ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full; \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0);\n     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B);\n     vars spec \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x'.\n                         ((a, \\<V>, fmdrop (pac_src1 (Del x11)) A), x')\n                         \\<in> status_rel \\<times>\\<^sub>r\n                               {((\\<V>, A), \\<V>', B).\n                                (A, B) \\<in> polys_rel \\<and>\n                                \\<V> = \\<V>'} \\<and>\n                         (case x' of\n                          (b, Ba) \\<Rightarrow>\n                            (is_success b \\<longrightarrow>\n                             \\<Union> (vars ` set_mset A\\<^sub>0)\n                             \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                             \\<Union> (vars ` set_mset B)\n                             \\<subseteq> \\<V> \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>*\n                              (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                            (is_found b \\<longrightarrow>\n                             \\<Union> (vars ` set_mset A\\<^sub>0)\n                             \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                             \\<Union> (vars ` set_mset B)\n                             \\<subseteq> \\<V> \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>*\n                              (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                             spec \\<in> pac_ideal (set_mset A\\<^sub>0)))", "apply (cases \\<open>x11 \\<in># dom_m A\\<close>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>st = Del x11; eq \\<in> {b. b \\<longrightarrow> True}; eq;\n     ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full; \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0);\n     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B);\n     vars spec \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>;\n     x11 \\<in># dom_m A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x'.\n                         ((a, \\<V>, fmdrop (pac_src1 (Del x11)) A), x')\n                         \\<in> status_rel \\<times>\\<^sub>r\n                               {((\\<V>, A), \\<V>', B).\n                                (A, B) \\<in> polys_rel \\<and>\n                                \\<V> = \\<V>'} \\<and>\n                         (case x' of\n                          (b, Ba) \\<Rightarrow>\n                            (is_success b \\<longrightarrow>\n                             \\<Union> (vars ` set_mset A\\<^sub>0)\n                             \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                             \\<Union> (vars ` set_mset B)\n                             \\<subseteq> \\<V> \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>*\n                              (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                            (is_found b \\<longrightarrow>\n                             \\<Union> (vars ` set_mset A\\<^sub>0)\n                             \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                             \\<Union> (vars ` set_mset B)\n                             \\<subseteq> \\<V> \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>*\n                              (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                             spec \\<in> pac_ideal (set_mset A\\<^sub>0)))\nA total of 2 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Del x11; eq \\<in> {b. b \\<longrightarrow> True}; eq;\n     ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full; \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0);\n     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B);\n     vars spec \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>;\n     x11 \\<in># dom_m A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x'.\n                         ((a, \\<V>, fmdrop (pac_src1 (Del x11)) A), x')\n                         \\<in> status_rel \\<times>\\<^sub>r\n                               {((\\<V>, A), \\<V>', B).\n                                (A, B) \\<in> polys_rel \\<and>\n                                \\<V> = \\<V>'} \\<and>\n                         (case x' of\n                          (b, Ba) \\<Rightarrow>\n                            (is_success b \\<longrightarrow>\n                             \\<Union> (vars ` set_mset A\\<^sub>0)\n                             \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                             \\<Union> (vars ` set_mset B)\n                             \\<subseteq> \\<V> \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>*\n                              (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                            (is_found b \\<longrightarrow>\n                             \\<Union> (vars ` set_mset A\\<^sub>0)\n                             \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                             \\<Union> (vars ` set_mset B)\n                             \\<subseteq> \\<V> \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>*\n                              (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                             spec \\<in> pac_ideal (set_mset A\\<^sub>0)))", "apply (rule_tac x = \\<open>(a,\\<V>, remove1_mset (the (fmlookup A x11)) B)\\<close> in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Del x11; eq \\<in> {b. b \\<longrightarrow> True}; eq;\n     ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full; \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0);\n     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B);\n     vars spec \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>;\n     x11 \\<in># dom_m A\\<rbrakk>\n    \\<Longrightarrow> ((a, \\<V>, fmdrop (pac_src1 (Del x11)) A), a, \\<V>,\n                       remove1_mset (the (fmlookup A x11)) B)\n                      \\<in> status_rel \\<times>\\<^sub>r\n                            {((\\<V>, A), \\<V>', B).\n                             (A, B) \\<in> polys_rel \\<and>\n                             \\<V> = \\<V>'} \\<and>\n                      (case (a, \\<V>,\n                             remove1_mset (the (fmlookup A x11)) B) of\n                       (b, Ba) \\<Rightarrow>\n                         (is_success b \\<longrightarrow>\n                          \\<Union> (vars ` set_mset A\\<^sub>0)\n                          \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                          \\<Union> (vars ` set_mset B)\n                          \\<subseteq> \\<V> \\<and>\n                          PAC_Format\\<^sup>*\\<^sup>*\n                           (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                          PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                         (is_found b \\<longrightarrow>\n                          \\<Union> (vars ` set_mset A\\<^sub>0)\n                          \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                          \\<Union> (vars ` set_mset B)\n                          \\<subseteq> \\<V> \\<and>\n                          PAC_Format\\<^sup>*\\<^sup>*\n                           (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                          PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                          spec \\<in> pac_ideal (set_mset A\\<^sub>0)))", "apply (auto simp: polys_rel_update_remove PAC_Format_add_and_remove\n               is_failed_def is_success_def is_found_def\n            dest!: eq_successI\n            split: if_splits\n            dest: rtranclp_PAC_Format_subset_ideal\n            intro: PAC_Format_add_and_remove H3)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Del x11; eq \\<in> {b. b \\<longrightarrow> True}; eq;\n     ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full; \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0);\n     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B);\n     vars spec \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>;\n     x11 \\<notin># dom_m A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x'.\n                         ((a, \\<V>, fmdrop (pac_src1 (Del x11)) A), x')\n                         \\<in> status_rel \\<times>\\<^sub>r\n                               {((\\<V>, A), \\<V>', B).\n                                (A, B) \\<in> polys_rel \\<and>\n                                \\<V> = \\<V>'} \\<and>\n                         (case x' of\n                          (b, Ba) \\<Rightarrow>\n                            (is_success b \\<longrightarrow>\n                             \\<Union> (vars ` set_mset A\\<^sub>0)\n                             \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                             \\<Union> (vars ` set_mset B)\n                             \\<subseteq> \\<V> \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>*\n                              (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                            (is_found b \\<longrightarrow>\n                             \\<Union> (vars ` set_mset A\\<^sub>0)\n                             \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                             \\<Union> (vars ` set_mset B)\n                             \\<subseteq> \\<V> \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>*\n                              (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                             spec \\<in> pac_ideal (set_mset A\\<^sub>0)))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Del x11; eq \\<in> {b. b \\<longrightarrow> True}; eq;\n     ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full; \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0);\n     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B);\n     vars spec \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>;\n     x11 \\<notin># dom_m A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x'.\n                         ((a, \\<V>, fmdrop (pac_src1 (Del x11)) A), x')\n                         \\<in> status_rel \\<times>\\<^sub>r\n                               {((\\<V>, A), \\<V>', B).\n                                (A, B) \\<in> polys_rel \\<and>\n                                \\<V> = \\<V>'} \\<and>\n                         (case x' of\n                          (b, Ba) \\<Rightarrow>\n                            (is_success b \\<longrightarrow>\n                             \\<Union> (vars ` set_mset A\\<^sub>0)\n                             \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                             \\<Union> (vars ` set_mset B)\n                             \\<subseteq> \\<V> \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>*\n                              (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                            (is_found b \\<longrightarrow>\n                             \\<Union> (vars ` set_mset A\\<^sub>0)\n                             \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                             \\<Union> (vars ` set_mset B)\n                             \\<subseteq> \\<V> \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>*\n                              (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                             PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                             spec \\<in> pac_ideal (set_mset A\\<^sub>0)))", "apply (rule_tac x = \\<open>(a,\\<V>, B)\\<close> in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Del x11; eq \\<in> {b. b \\<longrightarrow> True}; eq;\n     ((\\<V>, A), \\<V>\\<^sub>B, B) \\<in> polys_rel_full; \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset A\\<^sub>0);\n     PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B);\n     vars spec \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0;\n     \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>;\n     x11 \\<notin># dom_m A\\<rbrakk>\n    \\<Longrightarrow> ((a, \\<V>, fmdrop (pac_src1 (Del x11)) A), a, \\<V>, B)\n                      \\<in> status_rel \\<times>\\<^sub>r\n                            {((\\<V>, A), \\<V>', B).\n                             (A, B) \\<in> polys_rel \\<and>\n                             \\<V> = \\<V>'} \\<and>\n                      (case (a, \\<V>, B) of\n                       (b, Ba) \\<Rightarrow>\n                         (is_success b \\<longrightarrow>\n                          \\<Union> (vars ` set_mset A\\<^sub>0)\n                          \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                          \\<Union> (vars ` set_mset B)\n                          \\<subseteq> \\<V> \\<and>\n                          PAC_Format\\<^sup>*\\<^sup>*\n                           (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                          PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n                         (is_found b \\<longrightarrow>\n                          \\<Union> (vars ` set_mset A\\<^sub>0)\n                          \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                          \\<Union> (vars ` set_mset B)\n                          \\<subseteq> \\<V> \\<and>\n                          PAC_Format\\<^sup>*\\<^sup>*\n                           (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n                          PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n                          spec \\<in> pac_ideal (set_mset A\\<^sub>0)))", "apply (auto simp: fmdrop_irrelevant\n               is_failed_def is_success_def is_found_def\n            dest!: eq_successI\n            split: if_splits\n            dest: rtranclp_PAC_Format_subset_ideal\n            intro: PAC_Format_add_and_remove)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>eqa.\n       \\<lbrakk>st = Del x11; eqa \\<in> {b. b \\<longrightarrow> True};\n        \\<not> eqa\\<rbrakk>\n       \\<Longrightarrow> RETURN (FAILED, \\<V>, A)\n                         \\<le> \\<Down>\n                                (status_rel \\<times>\\<^sub>r\n                                 {((\\<V>, A), \\<V>', B).\n                                  (A, B) \\<in> polys_rel \\<and>\n                                  \\<V> = \\<V>'})\n                                (SPEC\n                                  (\\<lambda>(b, Ba).\n(is_success b \\<longrightarrow>\n \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0 \\<and>\n \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba) \\<and>\n(is_found b \\<longrightarrow>\n \\<Union> (vars ` set_mset A\\<^sub>0) \\<subseteq> \\<V>\\<^sub>0 \\<and>\n \\<Union> (vars ` set_mset B) \\<subseteq> \\<V> \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0) (\\<V>, B) \\<and>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B) Ba \\<and>\n spec \\<in> pac_ideal (set_mset A\\<^sub>0))))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st = Del x11; eqa_ \\<in> {b. b \\<longrightarrow> True};\n     \\<not> eqa_\\<rbrakk>\n    \\<Longrightarrow> RETURN (FAILED, \\<V>, A)\n                      \\<le> \\<Down>\n                             (status_rel \\<times>\\<^sub>r\n                              {((\\<V>, A), \\<V>', B).\n                               (A, B) \\<in> polys_rel \\<and> \\<V> = \\<V>'})\n                             (SPEC\n                               (\\<lambda>(b, Ba).\n                                   (is_success b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba) \\<and>\n                                   (is_found b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A\\<^sub>0)\n                                    \\<subseteq> \\<V>\\<^sub>0 \\<and>\n                                    \\<Union> (vars ` set_mset B)\n                                    \\<subseteq> \\<V> \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>*\n                                     (\\<V>\\<^sub>0, A\\<^sub>0)\n                                     (\\<V>, B) \\<and>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, B)\n                                     Ba \\<and>\n                                    spec\n                                    \\<in> pac_ideal (set_mset A\\<^sub>0))))", "by (rule RETURN_SPEC_refine)\n          (auto simp: Ex_status_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  PAC_checker_step spec (a, \\<V>, A) st\n  \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full)\n         (PAC_checker_specification_step2 (\\<V>\\<^sub>0, A\\<^sub>0) spec\n           (\\<V>, B))\n\ngoal:\nNo subgoals!", "qed"], ["", "definition PAC_checker\n  :: \\<open>int_poly \\<Rightarrow> fpac_step \\<Rightarrow> status \\<Rightarrow> (int_poly, nat, nat) pac_step list \\<Rightarrow>\n    (status \\<times> fpac_step) nres\\<close>\nwhere\n  \\<open>PAC_checker spec A b st = do {\n    (S, _) \\<leftarrow> WHILE\\<^sub>T\n       (\\<lambda>((b :: status, A :: fpac_step), st). \\<not>is_failed b \\<and> st \\<noteq> [])\n       (\\<lambda>((bA), st). do {\n          ASSERT(st \\<noteq> []);\n          S \\<leftarrow> PAC_checker_step spec (bA) (hd st);\n          RETURN (S, tl st)\n        })\n      ((b, A), st);\n    RETURN S\n  }\\<close>"], ["", "lemma PAC_checker_specification_spec_trans:\n  \\<open>PAC_checker_specification_spec spec A (st, x2) \\<Longrightarrow>\n    PAC_checker_specification_step_spec A spec x2 (st', x1a) \\<Longrightarrow>\n    PAC_checker_specification_spec spec A (st', x1a)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>PAC_checker_specification_spec spec A (st, x2);\n     PAC_checker_specification_step_spec A spec x2 (st', x1a)\\<rbrakk>\n    \\<Longrightarrow> PAC_checker_specification_spec spec A (st', x1a)", "unfolding PAC_checker_specification_spec_def\n   PAC_checker_specification_step_spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(case A of\n              (\\<V>, A) \\<Rightarrow>\n                \\<lambda>(b, B).\n                   (\\<not> is_failed b \\<longrightarrow>\n                    \\<Union> (vars ` set_mset A) \\<subseteq> \\<V>) \\<and>\n                   (is_success b \\<longrightarrow>\n                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, A) B) \\<and>\n                   (is_found b \\<longrightarrow>\n                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, A) B \\<and>\n                    spec \\<in> pac_ideal (set_mset A)))\n              (st, x2);\n     (case A of\n      (\\<V>\\<^sub>0, A\\<^sub>0) \\<Rightarrow>\n        \\<lambda>spec (\\<V>, A) (b, B).\n           (is_success b \\<longrightarrow>\n            \\<Union> (vars ` set_mset A\\<^sub>0)\n            \\<subseteq> \\<V>\\<^sub>0 \\<and>\n            \\<Union> (vars ` set_mset A) \\<subseteq> \\<V> \\<and>\n            PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n             (\\<V>, A) \\<and>\n            PAC_Format\\<^sup>*\\<^sup>* (\\<V>, A) B) \\<and>\n           (is_found b \\<longrightarrow>\n            \\<Union> (vars ` set_mset A\\<^sub>0)\n            \\<subseteq> \\<V>\\<^sub>0 \\<and>\n            \\<Union> (vars ` set_mset A) \\<subseteq> \\<V> \\<and>\n            PAC_Format\\<^sup>*\\<^sup>* (\\<V>\\<^sub>0, A\\<^sub>0)\n             (\\<V>, A) \\<and>\n            PAC_Format\\<^sup>*\\<^sup>* (\\<V>, A) B \\<and>\n            spec \\<in> pac_ideal (set_mset A\\<^sub>0)))\n      spec x2 (st', x1a)\\<rbrakk>\n    \\<Longrightarrow> (case A of\n                       (\\<V>, A) \\<Rightarrow>\n                         \\<lambda>(b, B).\n                            (\\<not> is_failed b \\<longrightarrow>\n                             \\<Union> (vars ` set_mset A)\n                             \\<subseteq> \\<V>) \\<and>\n                            (is_success b \\<longrightarrow>\n                             PAC_Format\\<^sup>*\\<^sup>* (\\<V>, A) B) \\<and>\n                            (is_found b \\<longrightarrow>\n                             PAC_Format\\<^sup>*\\<^sup>* (\\<V>, A) B \\<and>\n                             spec \\<in> pac_ideal (set_mset A)))\n                       (st', x1a)", "apply auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>\\<V> Aa x y xa xb.\n       \\<lbrakk>A = (\\<V>, Aa); x2 = (x, y); is_failed st;\n        \\<not> is_success st'; \\<not> is_found st'; \\<not> is_success st;\n        \\<not> is_found st; \\<not> is_failed st'; xb \\<in># Aa;\n        xa \\<in> vars xb\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> \\<V>\n 2. \\<And>\\<V> Aa x y xa xb.\n       \\<lbrakk>A = (\\<V>, Aa); x2 = (x, y); is_failed st;\n        \\<not> is_success st'; \\<not> is_found st'; \\<not> is_success st;\n        PAC_Format\\<^sup>*\\<^sup>* (\\<V>, Aa) (x, y);\n        spec \\<in> pac_ideal (set_mset Aa); \\<not> is_failed st';\n        xb \\<in># Aa; xa \\<in> vars xb\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> \\<V>\n 3. \\<And>\\<V> Aa x y xa xb.\n       \\<lbrakk>A = (\\<V>, Aa); x2 = (x, y); is_failed st;\n        \\<not> is_success st'; \\<not> is_found st';\n        PAC_Format\\<^sup>*\\<^sup>* (\\<V>, Aa) (x, y); \\<not> is_found st;\n        \\<not> is_failed st'; xb \\<in># Aa; xa \\<in> vars xb\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> \\<V>\n 4. \\<And>\\<V> Aa x y xa xb.\n       \\<lbrakk>A = (\\<V>, Aa); x2 = (x, y); is_failed st;\n        \\<not> is_success st'; \\<not> is_found st';\n        PAC_Format\\<^sup>*\\<^sup>* (\\<V>, Aa) (x, y);\n        spec \\<in> pac_ideal (set_mset Aa); \\<not> is_failed st';\n        xb \\<in># Aa; xa \\<in> vars xb\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> \\<V>", "using is_failed_alt_def"], ["proof (prove)\nusing this:\n  is_failed ?st' = (\\<not> is_success ?st' \\<and> \\<not> is_found ?st')\n\ngoal (4 subgoals):\n 1. \\<And>\\<V> Aa x y xa xb.\n       \\<lbrakk>A = (\\<V>, Aa); x2 = (x, y); is_failed st;\n        \\<not> is_success st'; \\<not> is_found st'; \\<not> is_success st;\n        \\<not> is_found st; \\<not> is_failed st'; xb \\<in># Aa;\n        xa \\<in> vars xb\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> \\<V>\n 2. \\<And>\\<V> Aa x y xa xb.\n       \\<lbrakk>A = (\\<V>, Aa); x2 = (x, y); is_failed st;\n        \\<not> is_success st'; \\<not> is_found st'; \\<not> is_success st;\n        PAC_Format\\<^sup>*\\<^sup>* (\\<V>, Aa) (x, y);\n        spec \\<in> pac_ideal (set_mset Aa); \\<not> is_failed st';\n        xb \\<in># Aa; xa \\<in> vars xb\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> \\<V>\n 3. \\<And>\\<V> Aa x y xa xb.\n       \\<lbrakk>A = (\\<V>, Aa); x2 = (x, y); is_failed st;\n        \\<not> is_success st'; \\<not> is_found st';\n        PAC_Format\\<^sup>*\\<^sup>* (\\<V>, Aa) (x, y); \\<not> is_found st;\n        \\<not> is_failed st'; xb \\<in># Aa; xa \\<in> vars xb\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> \\<V>\n 4. \\<And>\\<V> Aa x y xa xb.\n       \\<lbrakk>A = (\\<V>, Aa); x2 = (x, y); is_failed st;\n        \\<not> is_success st'; \\<not> is_found st';\n        PAC_Format\\<^sup>*\\<^sup>* (\\<V>, Aa) (x, y);\n        spec \\<in> pac_ideal (set_mset Aa); \\<not> is_failed st';\n        xb \\<in># Aa; xa \\<in> vars xb\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> \\<V>", "apply blast+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma RES_SPEC_eq:\n  \\<open>RES \\<Phi> = SPEC(\\<lambda>P. P \\<in> \\<Phi>)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. RES \\<Phi> = SPEC (\\<lambda>P. P \\<in> \\<Phi>)", "by auto"], ["", "lemma is_failed_is_success_completeD:\n  \\<open>\\<not> is_failed x \\<Longrightarrow> \\<not>is_success x \\<Longrightarrow> is_found x\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> is_failed x; \\<not> is_success x\\<rbrakk>\n    \\<Longrightarrow> is_found x", "by (cases x) auto"], ["", "lemma PAC_checker_PAC_checker_specification2:\n  \\<open>(A, B) \\<in>  polys_rel_full \\<Longrightarrow>\n    \\<not>is_failed a \\<Longrightarrow>\n    (a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B))) \\<Longrightarrow>\n    \\<Union>(vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B \\<Longrightarrow>\n    vars spec \\<subseteq> fst B \\<Longrightarrow>\n  PAC_checker spec A a st \\<le> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full) (PAC_checker_specification2 spec B)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n     \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n     vars spec \\<subseteq> fst B\\<rbrakk>\n    \\<Longrightarrow> PAC_checker spec A a st\n                      \\<le> \\<Down>\n                             (status_rel \\<times>\\<^sub>r polys_rel_full)\n                             (PAC_checker_specification2 spec B)", "unfolding PAC_checker_def conc_fun_RES"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n     \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n     vars spec \\<subseteq> fst B\\<rbrakk>\n    \\<Longrightarrow> WHILE\\<^sub>T\n                       (\\<lambda>((b, A), st).\n                           \\<not> is_failed b \\<and> st \\<noteq> [])\n                       (\\<lambda>(bA, st).\n                           ASSERT (st \\<noteq> []) \\<bind>\n                           (\\<lambda>_.\n                               PAC_checker_step spec bA\n                                (lead_coeff st) \\<bind>\n                               (\\<lambda>S. RETURN (S, tl st))))\n                       ((a, A), st) \\<bind>\n                      (\\<lambda>(S, uu_). RETURN S)\n                      \\<le> RES ((status_rel \\<times>\\<^sub>r\n                                  polys_rel_full)\\<inverse> ``\n                                 Collect\n                                  (PAC_checker_specification_spec spec B))", "apply (subst RES_SPEC_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n     \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n     vars spec \\<subseteq> fst B\\<rbrakk>\n    \\<Longrightarrow> WHILE\\<^sub>T\n                       (\\<lambda>((b, A), st).\n                           \\<not> is_failed b \\<and> st \\<noteq> [])\n                       (\\<lambda>(bA, st).\n                           ASSERT (st \\<noteq> []) \\<bind>\n                           (\\<lambda>_.\n                               PAC_checker_step spec bA\n                                (lead_coeff st) \\<bind>\n                               (\\<lambda>S. RETURN (S, tl st))))\n                       ((a, A), st) \\<bind>\n                      (\\<lambda>(S, uu_). RETURN S)\n                      \\<le> SPEC\n                             (\\<lambda>P.\n                                 P \\<in> (status_rel \\<times>\\<^sub>r\n    polys_rel_full)\\<inverse> ``\n   Collect (PAC_checker_specification_spec spec B))", "apply (refine_vcg WHILET_rule[where\n      I = \\<open>\\<lambda>((bB), st). bB \\<in> (status_rel \\<times>\\<^sub>r polys_rel_full)\\<inverse> ``\n                      Collect (PAC_checker_specification_spec spec B)\\<close>\n    and R = \\<open>measure (\\<lambda>(_, st).  Suc (length st))\\<close>])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n     \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n     vars spec \\<subseteq> fst B\\<rbrakk>\n    \\<Longrightarrow> wf (measure (\\<lambda>(uu_, st). Suc (length st)))\n 2. \\<And>x1 x2.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; ((a, A), st) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> x1 \\<in> (status_rel \\<times>\\<^sub>r\n                                   polys_rel_full)\\<inverse> ``\n                                  Collect\n                                   (PAC_checker_specification_spec spec B)\n 3. \\<And>s aa b.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B;\n        case s of\n        (bB, st) \\<Rightarrow>\n          bB \\<in> (status_rel \\<times>\\<^sub>r polys_rel_full)\\<inverse> ``\n                   Collect (PAC_checker_specification_spec spec B);\n        case s of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        s = (aa, b)\\<rbrakk>\n       \\<Longrightarrow> b \\<noteq> []\n 4. \\<And>s aa b.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B;\n        case s of\n        (bB, st) \\<Rightarrow>\n          bB \\<in> (status_rel \\<times>\\<^sub>r polys_rel_full)\\<inverse> ``\n                   Collect (PAC_checker_specification_spec spec B);\n        case s of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        s = (aa, b); b \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> PAC_checker_step spec aa (lead_coeff b)\n                         \\<le> SPEC\n                                (\\<lambda>S.\n                                    RETURN (S, tl b)\n                                    \\<le> SPEC\n     (\\<lambda>s'.\n         (case s' of\n          (bB, st) \\<Rightarrow>\n            bB \\<in> (status_rel \\<times>\\<^sub>r\n                      polys_rel_full)\\<inverse> ``\n                     Collect (PAC_checker_specification_spec spec B)) \\<and>\n         (s', s) \\<in> measure (\\<lambda>(uu_, st). Suc (length st))))\n 5. \\<And>s aa b.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B;\n        case s of\n        (bB, st) \\<Rightarrow>\n          bB \\<in> (status_rel \\<times>\\<^sub>r polys_rel_full)\\<inverse> ``\n                   Collect (PAC_checker_specification_spec spec B);\n        \\<not> (case s of\n                (x, xa) \\<Rightarrow>\n                  (case x of\n                   (b, A) \\<Rightarrow>\n                     \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n                   xa);\n        s = (aa, b)\\<rbrakk>\n       \\<Longrightarrow> aa \\<in> (status_rel \\<times>\\<^sub>r\n                                   polys_rel_full)\\<inverse> ``\n                                  Collect\n                                   (PAC_checker_specification_spec spec B)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n     \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n     vars spec \\<subseteq> fst B\\<rbrakk>\n    \\<Longrightarrow> wf (measure (\\<lambda>(uu_, st). Suc (length st)))", "by auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; ((a, A), st) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> x1 \\<in> (status_rel \\<times>\\<^sub>r\n                                   polys_rel_full)\\<inverse> ``\n                                  Collect\n                                   (PAC_checker_specification_spec spec B)\n 2. \\<And>s aa b.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B;\n        case s of\n        (bB, st) \\<Rightarrow>\n          bB \\<in> (status_rel \\<times>\\<^sub>r polys_rel_full)\\<inverse> ``\n                   Collect (PAC_checker_specification_spec spec B);\n        case s of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        s = (aa, b)\\<rbrakk>\n       \\<Longrightarrow> b \\<noteq> []\n 3. \\<And>s aa b.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B;\n        case s of\n        (bB, st) \\<Rightarrow>\n          bB \\<in> (status_rel \\<times>\\<^sub>r polys_rel_full)\\<inverse> ``\n                   Collect (PAC_checker_specification_spec spec B);\n        case s of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        s = (aa, b); b \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> PAC_checker_step spec aa (lead_coeff b)\n                         \\<le> SPEC\n                                (\\<lambda>S.\n                                    RETURN (S, tl b)\n                                    \\<le> SPEC\n     (\\<lambda>s'.\n         (case s' of\n          (bB, st) \\<Rightarrow>\n            bB \\<in> (status_rel \\<times>\\<^sub>r\n                      polys_rel_full)\\<inverse> ``\n                     Collect (PAC_checker_specification_spec spec B)) \\<and>\n         (s', s) \\<in> measure (\\<lambda>(uu_, st). Suc (length st))))\n 4. \\<And>s aa b.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B;\n        case s of\n        (bB, st) \\<Rightarrow>\n          bB \\<in> (status_rel \\<times>\\<^sub>r polys_rel_full)\\<inverse> ``\n                   Collect (PAC_checker_specification_spec spec B);\n        \\<not> (case s of\n                (x, xa) \\<Rightarrow>\n                  (case x of\n                   (b, A) \\<Rightarrow>\n                     \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n                   xa);\n        s = (aa, b)\\<rbrakk>\n       \\<Longrightarrow> aa \\<in> (status_rel \\<times>\\<^sub>r\n                                   polys_rel_full)\\<inverse> ``\n                                  Collect\n                                   (PAC_checker_specification_spec spec B)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n     \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n     vars spec \\<subseteq> fst B; ((a, A), st) = (x1_, x2_)\\<rbrakk>\n    \\<Longrightarrow> x1_\n                      \\<in> (status_rel \\<times>\\<^sub>r\n                             polys_rel_full)\\<inverse> ``\n                            Collect (PAC_checker_specification_spec spec B)", "apply (auto simp: PAC_checker_specification_spec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n     \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n     vars spec \\<subseteq> fst B; st = x2_; x1_ = (a, A)\\<rbrakk>\n    \\<Longrightarrow> (a, A)\n                      \\<in> (status_rel \\<times>\\<^sub>r\n                             polys_rel_full\\<inverse>) ``\n                            Collect\n                             (case B of\n                              (\\<V>, A) \\<Rightarrow>\n                                \\<lambda>(b, B).\n                                   (\\<not> is_failed b \\<longrightarrow>\n                                    \\<Union> (vars ` set_mset A)\n                                    \\<subseteq> \\<V>) \\<and>\n                                   (is_success b \\<longrightarrow>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, A)\n                                     B) \\<and>\n                                   (is_found b \\<longrightarrow>\n                                    PAC_Format\\<^sup>*\\<^sup>* (\\<V>, A)\n                                     B \\<and>\n                                    spec \\<in> pac_ideal (set_mset A)))", "apply (cases B; cases A)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b aaa ba.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; st = x2_; x1_ = (a, A); B = (aa, b);\n        A = (aaa, ba)\\<rbrakk>\n       \\<Longrightarrow> (a, A)\n                         \\<in> (status_rel \\<times>\\<^sub>r\n                                polys_rel_full\\<inverse>) ``\n                               Collect\n                                (case B of\n                                 (\\<V>, A) \\<Rightarrow>\n                                   \\<lambda>(b, B).\n(\\<not> is_failed b \\<longrightarrow>\n \\<Union> (vars ` set_mset A) \\<subseteq> \\<V>) \\<and>\n(is_success b \\<longrightarrow>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>, A) B) \\<and>\n(is_found b \\<longrightarrow>\n PAC_Format\\<^sup>*\\<^sup>* (\\<V>, A) B \\<and>\n spec \\<in> pac_ideal (set_mset A)))", "apply (auto simp:polys_rel_def polys_rel_full_def Image_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s aa b.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B;\n        case s of\n        (bB, st) \\<Rightarrow>\n          bB \\<in> (status_rel \\<times>\\<^sub>r polys_rel_full)\\<inverse> ``\n                   Collect (PAC_checker_specification_spec spec B);\n        case s of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        s = (aa, b)\\<rbrakk>\n       \\<Longrightarrow> b \\<noteq> []\n 2. \\<And>s aa b.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B;\n        case s of\n        (bB, st) \\<Rightarrow>\n          bB \\<in> (status_rel \\<times>\\<^sub>r polys_rel_full)\\<inverse> ``\n                   Collect (PAC_checker_specification_spec spec B);\n        case s of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        s = (aa, b); b \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> PAC_checker_step spec aa (lead_coeff b)\n                         \\<le> SPEC\n                                (\\<lambda>S.\n                                    RETURN (S, tl b)\n                                    \\<le> SPEC\n     (\\<lambda>s'.\n         (case s' of\n          (bB, st) \\<Rightarrow>\n            bB \\<in> (status_rel \\<times>\\<^sub>r\n                      polys_rel_full)\\<inverse> ``\n                     Collect (PAC_checker_specification_spec spec B)) \\<and>\n         (s', s) \\<in> measure (\\<lambda>(uu_, st). Suc (length st))))\n 3. \\<And>s aa b.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B;\n        case s of\n        (bB, st) \\<Rightarrow>\n          bB \\<in> (status_rel \\<times>\\<^sub>r polys_rel_full)\\<inverse> ``\n                   Collect (PAC_checker_specification_spec spec B);\n        \\<not> (case s of\n                (x, xa) \\<Rightarrow>\n                  (case x of\n                   (b, A) \\<Rightarrow>\n                     \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n                   xa);\n        s = (aa, b)\\<rbrakk>\n       \\<Longrightarrow> aa \\<in> (status_rel \\<times>\\<^sub>r\n                                   polys_rel_full)\\<inverse> ``\n                                  Collect\n                                   (PAC_checker_specification_spec spec B)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n     \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n     vars spec \\<subseteq> fst B;\n     case s_ of\n     (bB, st) \\<Rightarrow>\n       bB \\<in> (status_rel \\<times>\\<^sub>r polys_rel_full)\\<inverse> ``\n                Collect (PAC_checker_specification_spec spec B);\n     case s_ of\n     (x, xa) \\<Rightarrow>\n       (case x of\n        (b, A) \\<Rightarrow>\n          \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n        xa;\n     s_ = (aa_, b_)\\<rbrakk>\n    \\<Longrightarrow> b_ \\<noteq> []", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s aa b.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B;\n        case s of\n        (bB, st) \\<Rightarrow>\n          bB \\<in> (status_rel \\<times>\\<^sub>r polys_rel_full)\\<inverse> ``\n                   Collect (PAC_checker_specification_spec spec B);\n        case s of\n        (x, xa) \\<Rightarrow>\n          (case x of\n           (b, A) \\<Rightarrow>\n             \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n           xa;\n        s = (aa, b); b \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> PAC_checker_step spec aa (lead_coeff b)\n                         \\<le> SPEC\n                                (\\<lambda>S.\n                                    RETURN (S, tl b)\n                                    \\<le> SPEC\n     (\\<lambda>s'.\n         (case s' of\n          (bB, st) \\<Rightarrow>\n            bB \\<in> (status_rel \\<times>\\<^sub>r\n                      polys_rel_full)\\<inverse> ``\n                     Collect (PAC_checker_specification_spec spec B)) \\<and>\n         (s', s) \\<in> measure (\\<lambda>(uu_, st). Suc (length st))))\n 2. \\<And>s aa b.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B;\n        case s of\n        (bB, st) \\<Rightarrow>\n          bB \\<in> (status_rel \\<times>\\<^sub>r polys_rel_full)\\<inverse> ``\n                   Collect (PAC_checker_specification_spec spec B);\n        \\<not> (case s of\n                (x, xa) \\<Rightarrow>\n                  (case x of\n                   (b, A) \\<Rightarrow>\n                     \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n                   xa);\n        s = (aa, b)\\<rbrakk>\n       \\<Longrightarrow> aa \\<in> (status_rel \\<times>\\<^sub>r\n                                   polys_rel_full)\\<inverse> ``\n                                  Collect\n                                   (PAC_checker_specification_spec spec B)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n     \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n     vars spec \\<subseteq> fst B;\n     case s_ of\n     (bB, st) \\<Rightarrow>\n       bB \\<in> (status_rel \\<times>\\<^sub>r polys_rel_full)\\<inverse> ``\n                Collect (PAC_checker_specification_spec spec B);\n     case s_ of\n     (x, xa) \\<Rightarrow>\n       (case x of\n        (b, A) \\<Rightarrow>\n          \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n        xa;\n     s_ = (aa_, b_); b_ \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> PAC_checker_step spec aa_ (lead_coeff b_)\n                      \\<le> SPEC\n                             (\\<lambda>S.\n                                 RETURN (S, tl b_)\n                                 \\<le> SPEC\n  (\\<lambda>s'.\n      (case s' of\n       (bB, st) \\<Rightarrow>\n         bB \\<in> (status_rel \\<times>\\<^sub>r polys_rel_full)\\<inverse> ``\n                  Collect (PAC_checker_specification_spec spec B)) \\<and>\n      (s', s_) \\<in> measure (\\<lambda>(uu_, st). Suc (length st))))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ab aaa ba aba baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> PAC_checker_step spec (ab, aba, baa)\n                          (lead_coeff b_)\n                         \\<le> RES ((status_rel \\<times>\\<^sub>r\n                                     polys_rel_full\\<inverse>) ``\n                                    Collect\n                                     (PAC_checker_specification_spec spec\n B))", "apply (rule\n     PAC_checker_step_PAC_checker_specification2[of _ _ _ _ _ _ _ \\<open>fst B\\<close>, THEN order_trans])"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>ab aaa ba aba baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> ((aba, baa), ?\\<V>\\<^sub>B11 ab aaa ba aba baa,\n                          ?B11 ab aaa ba aba baa)\n                         \\<in> polys_rel_full\n 2. \\<And>ab aaa ba aba baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> \\<not> is_failed ab\n 3. \\<And>ab aaa ba aba baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> []; ab = FOUND\\<rbrakk>\n       \\<Longrightarrow> spec\n                         \\<in> pac_ideal\n                                (set_mset (?A\\<^sub>011 ab aaa ba aba baa))\n 4. \\<And>ab aaa ba aba baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>*\n                          (fst B, ?A\\<^sub>011 ab aaa ba aba baa)\n                          (aba, ?B11 ab aaa ba aba baa)\n 5. \\<And>ab aaa ba aba baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> vars spec \\<subseteq> fst B\n 6. \\<And>ab aaa ba aba baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars ` set_mset (?A\\<^sub>011 ab aaa ba aba baa))\n                         \\<subseteq> fst B\n 7. \\<And>ab aaa ba aba baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> \\<Down>\n                          (status_rel \\<times>\\<^sub>r polys_rel_full)\n                          (PAC_checker_specification_step2\n                            (fst B, ?A\\<^sub>011 ab aaa ba aba baa) spec\n                            (aba, ?B11 ab aaa ba aba baa))\n                         \\<le> RES ((status_rel \\<times>\\<^sub>r\n                                     polys_rel_full\\<inverse>) ``\n                                    Collect\n                                     (PAC_checker_specification_spec spec\n B))", "apply assumption"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>ab aaa ba aba baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> \\<not> is_failed ab\n 2. \\<And>ab aaa ba aba baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> []; ab = FOUND\\<rbrakk>\n       \\<Longrightarrow> spec\n                         \\<in> pac_ideal\n                                (set_mset (?A\\<^sub>011 ab aaa ba aba baa))\n 3. \\<And>ab aaa ba aba baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>*\n                          (fst B, ?A\\<^sub>011 ab aaa ba aba baa) (aba, ba)\n 4. \\<And>ab aaa ba aba baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> vars spec \\<subseteq> fst B\n 5. \\<And>ab aaa ba aba baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars ` set_mset (?A\\<^sub>011 ab aaa ba aba baa))\n                         \\<subseteq> fst B\n 6. \\<And>ab aaa ba aba baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> \\<Down>\n                          (status_rel \\<times>\\<^sub>r polys_rel_full)\n                          (PAC_checker_specification_step2\n                            (fst B, ?A\\<^sub>011 ab aaa ba aba baa) spec\n                            (aba, ba))\n                         \\<le> RES ((status_rel \\<times>\\<^sub>r\n                                     polys_rel_full\\<inverse>) ``\n                                    Collect\n                                     (PAC_checker_specification_spec spec\n B))", "apply assumption"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ab aaa ba aba baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> []; ab = FOUND\\<rbrakk>\n       \\<Longrightarrow> spec\n                         \\<in> pac_ideal\n                                (set_mset (?A\\<^sub>011 ab aaa ba aba baa))\n 2. \\<And>ab aaa ba aba baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>*\n                          (fst B, ?A\\<^sub>011 ab aaa ba aba baa) (aba, ba)\n 3. \\<And>ab aaa ba aba baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> vars spec \\<subseteq> fst B\n 4. \\<And>ab aaa ba aba baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars ` set_mset (?A\\<^sub>011 ab aaa ba aba baa))\n                         \\<subseteq> fst B\n 5. \\<And>ab aaa ba aba baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> \\<Down>\n                          (status_rel \\<times>\\<^sub>r polys_rel_full)\n                          (PAC_checker_specification_step2\n                            (fst B, ?A\\<^sub>011 ab aaa ba aba baa) spec\n                            (aba, ba))\n                         \\<le> RES ((status_rel \\<times>\\<^sub>r\n                                     polys_rel_full\\<inverse>) ``\n                                    Collect\n                                     (PAC_checker_specification_spec spec\n B))", "apply (auto intro: PAC_checker_specification_spec_trans simp: conc_fun_RES)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>aaa ba ab baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((FOUND, ab, baa), b_);\n        ((ab, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (FOUND, ab, baa);\n        PAC_checker_specification_spec spec B (FOUND, aaa, ba);\n        b_ \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (ran_m (snd A)))\n 2. \\<And>ab aaa ba aba baa.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> PAC_Format\\<^sup>*\\<^sup>* (fst B, ran_m (snd A))\n                          (aba, ba)\n 3. \\<And>ab aaa ba aba baa ac ad bb af bc.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> [];\n        ((ad, bb), af, bc) \\<in> polys_rel_full;\n        PAC_checker_specification_step_spec (fst B, ran_m (snd A)) spec\n         (aba, ba) (ac, af, bc)\\<rbrakk>\n       \\<Longrightarrow> (ac, ad, bb)\n                         \\<in> (status_rel \\<times>\\<^sub>r\n                                polys_rel_full\\<inverse>) ``\n                               Collect\n                                (PAC_checker_specification_spec spec B)", "apply (auto simp: PAC_checker_specification_spec_def polys_rel_full_def polys_rel_def\n       dest: PAC_Format_subset_ideal\n       dest: is_failed_is_success_completeD; fail)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ab aaa ba aba baa ac ad bb af bc.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B; s_ = ((ab, aba, baa), b_);\n        ((aba, baa), aaa, ba) \\<in> polys_rel_full; aa_ = (ab, aba, baa);\n        PAC_checker_specification_spec spec B (ab, aaa, ba);\n        \\<not> is_failed ab; b_ \\<noteq> [];\n        ((ad, bb), af, bc) \\<in> polys_rel_full;\n        PAC_checker_specification_step_spec (fst B, ran_m (snd A)) spec\n         (aba, ba) (ac, af, bc)\\<rbrakk>\n       \\<Longrightarrow> (ac, ad, bb)\n                         \\<in> (status_rel \\<times>\\<^sub>r\n                                polys_rel_full\\<inverse>) ``\n                               Collect\n                                (PAC_checker_specification_spec spec B)", "by (auto simp: Image_iff intro: PAC_checker_specification_spec_trans\n        simp: polys_rel_def polys_rel_full_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s aa b.\n       \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n        a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n        \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n        vars spec \\<subseteq> fst B;\n        case s of\n        (bB, st) \\<Rightarrow>\n          bB \\<in> (status_rel \\<times>\\<^sub>r polys_rel_full)\\<inverse> ``\n                   Collect (PAC_checker_specification_spec spec B);\n        \\<not> (case s of\n                (x, xa) \\<Rightarrow>\n                  (case x of\n                   (b, A) \\<Rightarrow>\n                     \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n                   xa);\n        s = (aa, b)\\<rbrakk>\n       \\<Longrightarrow> aa \\<in> (status_rel \\<times>\\<^sub>r\n                                   polys_rel_full)\\<inverse> ``\n                                  Collect\n                                   (PAC_checker_specification_spec spec B)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(A, B) \\<in> polys_rel_full; \\<not> is_failed a;\n     a = FOUND \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (snd B));\n     \\<Union> (vars ` set_mset (ran_m (snd A))) \\<subseteq> fst B;\n     vars spec \\<subseteq> fst B;\n     case s_ of\n     (bB, st) \\<Rightarrow>\n       bB \\<in> (status_rel \\<times>\\<^sub>r polys_rel_full)\\<inverse> ``\n                Collect (PAC_checker_specification_spec spec B);\n     \\<not> (case s_ of\n             (x, xa) \\<Rightarrow>\n               (case x of\n                (b, A) \\<Rightarrow>\n                  \\<lambda>st. \\<not> is_failed b \\<and> st \\<noteq> [])\n                xa);\n     s_ = (aa_, b_)\\<rbrakk>\n    \\<Longrightarrow> aa_\n                      \\<in> (status_rel \\<times>\\<^sub>r\n                             polys_rel_full)\\<inverse> ``\n                            Collect (PAC_checker_specification_spec spec B)", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition remap_polys_polynomial_bool :: \\<open>int mpoly \\<Rightarrow> nat set \\<Rightarrow> (nat, int_poly) fmap \\<Rightarrow> (status \\<times> fpac_step) nres\\<close> where\n\\<open>remap_polys_polynomial_bool spec = (\\<lambda>\\<V> A.\n   SPEC(\\<lambda>(st, \\<V>', A'). (\\<not>is_failed st \\<longrightarrow>\n      dom_m A = dom_m A' \\<and>\n      (\\<forall>i \\<in># dom_m A. the (fmlookup A i) - the (fmlookup A' i) \\<in> ideal polynomial_bool) \\<and>\n      \\<Union>(vars ` set_mset (ran_m A)) \\<subseteq> \\<V>' \\<and>\n      \\<Union>(vars ` set_mset (ran_m A')) \\<subseteq> \\<V>') \\<and>\n    (st = FOUND \\<longrightarrow> spec \\<in># ran_m A')))\\<close>"], ["", "definition remap_polys_change_all :: \\<open>int mpoly \\<Rightarrow> nat set \\<Rightarrow> (nat, int_poly) fmap \\<Rightarrow> (status \\<times> fpac_step) nres\\<close> where\n\\<open>remap_polys_change_all spec = (\\<lambda>\\<V> A. SPEC (\\<lambda>(st, \\<V>', A').\n    (\\<not>is_failed st \\<longrightarrow>\n      pac_ideal (set_mset (ran_m A)) = pac_ideal (set_mset (ran_m A')) \\<and>\n      \\<Union>(vars ` set_mset (ran_m A)) \\<subseteq> \\<V>' \\<and>\n      \\<Union>(vars ` set_mset (ran_m A')) \\<subseteq> \\<V>') \\<and>\n    (st = FOUND \\<longrightarrow> spec \\<in># ran_m A')))\\<close>"], ["", "lemma fmap_eq_dom_iff:\n  \\<open>A = A' \\<longleftrightarrow> dom_m A = dom_m A' \\<and> (\\<forall>i \\<in># dom_m A. the (fmlookup A i) = the (fmlookup A' i))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A = A') =\n    (dom_m A = dom_m A' \\<and>\n     (\\<forall>i\\<in>#dom_m A. the (fmlookup A i) = the (fmlookup A' i)))", "by (metis fmap_ext in_dom_m_lookup_iff option.expand)"], ["", "lemma ideal_remap_incl:\n  \\<open>finite A' \\<Longrightarrow> (\\<forall>a'\\<in>A'. \\<exists>a\\<in>A. a-a' \\<in> B) \\<Longrightarrow> ideal (A' \\<union> B) \\<subseteq> ideal (A \\<union> B)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A';\n     \\<forall>a'\\<in>A'. \\<exists>a\\<in>A. a - a' \\<in> B\\<rbrakk>\n    \\<Longrightarrow> More_Modules.ideal (A' \\<union> B)\n                      \\<subseteq> More_Modules.ideal (A \\<union> B)", "apply (induction A' rule: finite_induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>a'\\<in>{}. \\<exists>a\\<in>A. a - a' \\<in> B \\<Longrightarrow>\n    More_Modules.ideal ({} \\<union> B)\n    \\<subseteq> More_Modules.ideal (A \\<union> B)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<forall>a'\\<in>F.\n           \\<exists>a\\<in>A. a - a' \\<in> B \\<Longrightarrow>\n        More_Modules.ideal (F \\<union> B)\n        \\<subseteq> More_Modules.ideal (A \\<union> B);\n        \\<forall>a'\\<in>insert x F.\n           \\<exists>a\\<in>A. a - a' \\<in> B\\<rbrakk>\n       \\<Longrightarrow> More_Modules.ideal (insert x F \\<union> B)\n                         \\<subseteq> More_Modules.ideal (A \\<union> B)", "apply (auto intro: ideal.span_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> More_Modules.ideal B \\<Longrightarrow>\n       x \\<in> More_Modules.ideal (A \\<union> B)\n 2. \\<And>x F xa a.\n       \\<lbrakk>finite F; x \\<notin> F;\n        More_Modules.ideal (F \\<union> B)\n        \\<subseteq> More_Modules.ideal (A \\<union> B);\n        xa \\<in> More_Modules.ideal (insert x (F \\<union> B));\n        \\<forall>a'\\<in>F. \\<exists>a\\<in>A. a - a' \\<in> B; a \\<in> A;\n        a - x \\<in> B\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> More_Modules.ideal (A \\<union> B)", "using ideal.span_mono sup_ge2"], ["proof (prove)\nusing this:\n  ?A \\<subseteq> ?B \\<Longrightarrow>\n  More_Modules.ideal ?A \\<subseteq> More_Modules.ideal ?B\n  ?y \\<le> sup ?x ?y\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> More_Modules.ideal B \\<Longrightarrow>\n       x \\<in> More_Modules.ideal (A \\<union> B)\n 2. \\<And>x F xa a.\n       \\<lbrakk>finite F; x \\<notin> F;\n        More_Modules.ideal (F \\<union> B)\n        \\<subseteq> More_Modules.ideal (A \\<union> B);\n        xa \\<in> More_Modules.ideal (insert x (F \\<union> B));\n        \\<forall>a'\\<in>F. \\<exists>a\\<in>A. a - a' \\<in> B; a \\<in> A;\n        a - x \\<in> B\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> More_Modules.ideal (A \\<union> B)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x F xa a.\n       \\<lbrakk>finite F; x \\<notin> F;\n        More_Modules.ideal (F \\<union> B)\n        \\<subseteq> More_Modules.ideal (A \\<union> B);\n        xa \\<in> More_Modules.ideal (insert x (F \\<union> B));\n        \\<forall>a'\\<in>F. \\<exists>a\\<in>A. a - a' \\<in> B; a \\<in> A;\n        a - x \\<in> B\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> More_Modules.ideal (A \\<union> B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F xa a.\n       \\<lbrakk>finite F; x \\<notin> F;\n        More_Modules.ideal (F \\<union> B)\n        \\<subseteq> More_Modules.ideal (A \\<union> B);\n        xa \\<in> More_Modules.ideal (insert x (F \\<union> B));\n        \\<forall>a'\\<in>F. \\<exists>a\\<in>A. a - a' \\<in> B; a \\<in> A;\n        a - x \\<in> B\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> More_Modules.ideal (A \\<union> B)", "fix x :: 'a and F :: \"'a set\" and xa :: 'a and a :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F xa a.\n       \\<lbrakk>finite F; x \\<notin> F;\n        More_Modules.ideal (F \\<union> B)\n        \\<subseteq> More_Modules.ideal (A \\<union> B);\n        xa \\<in> More_Modules.ideal (insert x (F \\<union> B));\n        \\<forall>a'\\<in>F. \\<exists>a\\<in>A. a - a' \\<in> B; a \\<in> A;\n        a - x \\<in> B\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> More_Modules.ideal (A \\<union> B)", "assume a1: \"a \\<in> A\""], ["proof (state)\nthis:\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x F xa a.\n       \\<lbrakk>finite F; x \\<notin> F;\n        More_Modules.ideal (F \\<union> B)\n        \\<subseteq> More_Modules.ideal (A \\<union> B);\n        xa \\<in> More_Modules.ideal (insert x (F \\<union> B));\n        \\<forall>a'\\<in>F. \\<exists>a\\<in>A. a - a' \\<in> B; a \\<in> A;\n        a - x \\<in> B\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> More_Modules.ideal (A \\<union> B)", "assume a2: \"a - x \\<in> B\""], ["proof (state)\nthis:\n  a - x \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>x F xa a.\n       \\<lbrakk>finite F; x \\<notin> F;\n        More_Modules.ideal (F \\<union> B)\n        \\<subseteq> More_Modules.ideal (A \\<union> B);\n        xa \\<in> More_Modules.ideal (insert x (F \\<union> B));\n        \\<forall>a'\\<in>F. \\<exists>a\\<in>A. a - a' \\<in> B; a \\<in> A;\n        a - x \\<in> B\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> More_Modules.ideal (A \\<union> B)", "assume a3: \"xa \\<in> More_Modules.ideal (insert x (F \\<union> B))\""], ["proof (state)\nthis:\n  xa \\<in> More_Modules.ideal (insert x (F \\<union> B))\n\ngoal (1 subgoal):\n 1. \\<And>x F xa a.\n       \\<lbrakk>finite F; x \\<notin> F;\n        More_Modules.ideal (F \\<union> B)\n        \\<subseteq> More_Modules.ideal (A \\<union> B);\n        xa \\<in> More_Modules.ideal (insert x (F \\<union> B));\n        \\<forall>a'\\<in>F. \\<exists>a\\<in>A. a - a' \\<in> B; a \\<in> A;\n        a - x \\<in> B\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> More_Modules.ideal (A \\<union> B)", "assume a4: \"More_Modules.ideal (F \\<union> B) \\<subseteq> More_Modules.ideal (A \\<union> B)\""], ["proof (state)\nthis:\n  More_Modules.ideal (F \\<union> B)\n  \\<subseteq> More_Modules.ideal (A \\<union> B)\n\ngoal (1 subgoal):\n 1. \\<And>x F xa a.\n       \\<lbrakk>finite F; x \\<notin> F;\n        More_Modules.ideal (F \\<union> B)\n        \\<subseteq> More_Modules.ideal (A \\<union> B);\n        xa \\<in> More_Modules.ideal (insert x (F \\<union> B));\n        \\<forall>a'\\<in>F. \\<exists>a\\<in>A. a - a' \\<in> B; a \\<in> A;\n        a - x \\<in> B\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> More_Modules.ideal (A \\<union> B)", "have \"x \\<in> More_Modules.ideal (A \\<union> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> More_Modules.ideal (A \\<union> B)", "using a2 a1"], ["proof (prove)\nusing this:\n  a - x \\<in> B\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> More_Modules.ideal (A \\<union> B)", "by (metis (no_types, lifting) Un_upper1 Un_upper2 add_diff_cancel_left' diff_add_cancel\n        ideal.module_axioms ideal.span_diff in_mono module.span_superset)"], ["proof (state)\nthis:\n  x \\<in> More_Modules.ideal (A \\<union> B)\n\ngoal (1 subgoal):\n 1. \\<And>x F xa a.\n       \\<lbrakk>finite F; x \\<notin> F;\n        More_Modules.ideal (F \\<union> B)\n        \\<subseteq> More_Modules.ideal (A \\<union> B);\n        xa \\<in> More_Modules.ideal (insert x (F \\<union> B));\n        \\<forall>a'\\<in>F. \\<exists>a\\<in>A. a - a' \\<in> B; a \\<in> A;\n        a - x \\<in> B\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> More_Modules.ideal (A \\<union> B)", "then"], ["proof (chain)\npicking this:\n  x \\<in> More_Modules.ideal (A \\<union> B)", "show \"xa \\<in> More_Modules.ideal (A \\<union> B)\""], ["proof (prove)\nusing this:\n  x \\<in> More_Modules.ideal (A \\<union> B)\n\ngoal (1 subgoal):\n 1. xa \\<in> More_Modules.ideal (A \\<union> B)", "using a4 a3 ideal.span_insert_subset"], ["proof (prove)\nusing this:\n  x \\<in> More_Modules.ideal (A \\<union> B)\n  More_Modules.ideal (F \\<union> B)\n  \\<subseteq> More_Modules.ideal (A \\<union> B)\n  xa \\<in> More_Modules.ideal (insert x (F \\<union> B))\n  \\<lbrakk>More_Modules.ideal ?A \\<subseteq> More_Modules.ideal ?B;\n   ?r \\<in> More_Modules.ideal ?B\\<rbrakk>\n  \\<Longrightarrow> More_Modules.ideal (insert ?r ?A)\n                    \\<subseteq> More_Modules.ideal ?B\n\ngoal (1 subgoal):\n 1. xa \\<in> More_Modules.ideal (A \\<union> B)", "by blast"], ["proof (state)\nthis:\n  xa \\<in> More_Modules.ideal (A \\<union> B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pac_ideal_remap_eq:\n  \\<open>dom_m b = dom_m ba \\<Longrightarrow>\n       \\<forall>i\\<in>#dom_m ba.\n          the (fmlookup b i) - the (fmlookup ba i)\n          \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n     pac_ideal ((\\<lambda>x. the (fmlookup b x)) ` set_mset (dom_m ba)) = pac_ideal ((\\<lambda>x. the (fmlookup ba x)) ` set_mset (dom_m ba))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dom_m b = dom_m ba;\n     \\<forall>i\\<in>#dom_m ba.\n        the (fmlookup b i) - the (fmlookup ba i)\n        \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> pac_ideal\n                       ((\\<lambda>x. the (fmlookup b x)) `\n                        set_mset (dom_m ba)) =\n                      pac_ideal\n                       ((\\<lambda>x. the (fmlookup ba x)) `\n                        set_mset (dom_m ba))", "unfolding pac_ideal_alt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dom_m b = dom_m ba;\n     \\<forall>i\\<in>#dom_m ba.\n        the (fmlookup b i) - the (fmlookup ba i)\n        \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> More_Modules.ideal\n                       ((\\<lambda>x. the (fmlookup b x)) `\n                        set_mset (dom_m ba) \\<union>\n                        More_Modules.ideal polynomial_bool) =\n                      More_Modules.ideal\n                       ((\\<lambda>x. the (fmlookup ba x)) `\n                        set_mset (dom_m ba) \\<union>\n                        More_Modules.ideal polynomial_bool)", "apply standard"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>dom_m b = dom_m ba;\n     \\<forall>i\\<in>#dom_m ba.\n        the (fmlookup b i) - the (fmlookup ba i)\n        \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> More_Modules.ideal\n                       ((\\<lambda>x. the (fmlookup b x)) `\n                        set_mset (dom_m ba) \\<union>\n                        More_Modules.ideal polynomial_bool)\n                      \\<subseteq> More_Modules.ideal\n                                   ((\\<lambda>x. the (fmlookup ba x)) `\n                                    set_mset (dom_m ba) \\<union>\n                                    More_Modules.ideal polynomial_bool)\n 2. \\<lbrakk>dom_m b = dom_m ba;\n     \\<forall>i\\<in>#dom_m ba.\n        the (fmlookup b i) - the (fmlookup ba i)\n        \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> More_Modules.ideal\n                       ((\\<lambda>x. the (fmlookup ba x)) `\n                        set_mset (dom_m ba) \\<union>\n                        More_Modules.ideal polynomial_bool)\n                      \\<subseteq> More_Modules.ideal\n                                   ((\\<lambda>x. the (fmlookup b x)) `\n                                    set_mset (dom_m ba) \\<union>\n                                    More_Modules.ideal polynomial_bool)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dom_m b = dom_m ba;\n     \\<forall>i\\<in>#dom_m ba.\n        the (fmlookup b i) - the (fmlookup ba i)\n        \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> More_Modules.ideal\n                       ((\\<lambda>x. the (fmlookup b x)) `\n                        set_mset (dom_m ba) \\<union>\n                        More_Modules.ideal polynomial_bool)\n                      \\<subseteq> More_Modules.ideal\n                                   ((\\<lambda>x. the (fmlookup ba x)) `\n                                    set_mset (dom_m ba) \\<union>\n                                    More_Modules.ideal polynomial_bool)", "apply (rule ideal_remap_incl)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>dom_m b = dom_m ba;\n     \\<forall>i\\<in>#dom_m ba.\n        the (fmlookup b i) - the (fmlookup ba i)\n        \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> finite\n                       ((\\<lambda>x. the (fmlookup b x)) `\n                        set_mset (dom_m ba))\n 2. \\<lbrakk>dom_m b = dom_m ba;\n     \\<forall>i\\<in>#dom_m ba.\n        the (fmlookup b i) - the (fmlookup ba i)\n        \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a'\\<in>(\\<lambda>x. the (fmlookup b x)) `\nset_mset (dom_m ba).\n                         \\<exists>a\\<in>(\\<lambda>x. the (fmlookup ba x)) `\n  set_mset (dom_m ba).\n                            a - a' \\<in> More_Modules.ideal polynomial_bool", "apply (auto dest!: multi_member_split\n      dest: ideal.span_neg)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a' A.\n       \\<lbrakk>dom_m b = add_mset a' A; dom_m ba = add_mset a' A;\n        the (fmlookup b a') - the (fmlookup ba a')\n        \\<in> More_Modules.ideal polynomial_bool;\n        \\<forall>i\\<in>#A.\n           the (fmlookup b i) - the (fmlookup ba i)\n           \\<in> More_Modules.ideal polynomial_bool;\n        \\<forall>a\\<in>#A.\n           the (fmlookup ba a) - the (fmlookup b a')\n           \\<notin> More_Modules.ideal polynomial_bool\\<rbrakk>\n       \\<Longrightarrow> the (fmlookup ba a') - the (fmlookup b a')\n                         \\<in> More_Modules.ideal polynomial_bool", "apply (drule ideal.span_neg)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a' A.\n       \\<lbrakk>dom_m b = add_mset a' A; dom_m ba = add_mset a' A;\n        \\<forall>i\\<in>#A.\n           the (fmlookup b i) - the (fmlookup ba i)\n           \\<in> More_Modules.ideal polynomial_bool;\n        \\<forall>a\\<in>#A.\n           the (fmlookup ba a) - the (fmlookup b a')\n           \\<notin> More_Modules.ideal polynomial_bool;\n        - (the (fmlookup b a') - the (fmlookup ba a'))\n        \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n       \\<Longrightarrow> the (fmlookup ba a') - the (fmlookup b a')\n                         \\<in> More_Modules.ideal polynomial_bool", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dom_m b = dom_m ba;\n     \\<forall>i\\<in>#dom_m ba.\n        the (fmlookup b i) - the (fmlookup ba i)\n        \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> More_Modules.ideal\n                       ((\\<lambda>x. the (fmlookup ba x)) `\n                        set_mset (dom_m ba) \\<union>\n                        More_Modules.ideal polynomial_bool)\n                      \\<subseteq> More_Modules.ideal\n                                   ((\\<lambda>x. the (fmlookup b x)) `\n                                    set_mset (dom_m ba) \\<union>\n                                    More_Modules.ideal polynomial_bool)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dom_m b = dom_m ba;\n     \\<forall>i\\<in>#dom_m ba.\n        the (fmlookup b i) - the (fmlookup ba i)\n        \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n    \\<Longrightarrow> More_Modules.ideal\n                       ((\\<lambda>x. the (fmlookup ba x)) `\n                        set_mset (dom_m ba) \\<union>\n                        More_Modules.ideal polynomial_bool)\n                      \\<subseteq> More_Modules.ideal\n                                   ((\\<lambda>x. the (fmlookup b x)) `\n                                    set_mset (dom_m ba) \\<union>\n                                    More_Modules.ideal polynomial_bool)", "by (rule ideal_remap_incl)\n     (auto dest!: multi_member_split)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma remap_polys_polynomial_bool_remap_polys_change_all:\n  \\<open>remap_polys_polynomial_bool spec \\<V> A \\<le> remap_polys_change_all spec \\<V> A\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. remap_polys_polynomial_bool spec \\<V> A\n    \\<le> remap_polys_change_all spec \\<V> A", "unfolding remap_polys_polynomial_bool_def remap_polys_change_all_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>(st, \\<V>', A').\n         (\\<not> is_failed st \\<longrightarrow>\n          dom_m A = dom_m A' \\<and>\n          (\\<forall>i\\<in>#dom_m A.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>' \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V>') \\<and>\n         (st = FOUND \\<longrightarrow> spec \\<in># ran_m A'))\n    \\<le> SPEC\n           (\\<lambda>(st, \\<V>', A').\n               (\\<not> is_failed st \\<longrightarrow>\n                pac_ideal (set_mset (ran_m A)) =\n                pac_ideal (set_mset (ran_m A')) \\<and>\n                \\<Union> (vars ` set_mset (ran_m A))\n                \\<subseteq> \\<V>' \\<and>\n                \\<Union> (vars ` set_mset (ran_m A'))\n                \\<subseteq> \\<V>') \\<and>\n               (st = FOUND \\<longrightarrow> spec \\<in># ran_m A'))", "apply (simp add: ideal.span_zero fmap_eq_dom_iff ideal.span_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(st, \\<V>', A').\n     (\\<not> is_failed st \\<longrightarrow>\n      dom_m A = dom_m A' \\<and>\n      (\\<forall>i\\<in>#dom_m A.\n          the (fmlookup A i) - the (fmlookup A' i)\n          \\<in> More_Modules.ideal polynomial_bool) \\<and>\n      \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>' \\<and>\n      \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V>') \\<and>\n     (st = FOUND \\<longrightarrow> spec \\<in># ran_m A')}\n    \\<subseteq> {(st, \\<V>', A').\n                 (\\<not> is_failed st \\<longrightarrow>\n                  pac_ideal (set_mset (ran_m A)) =\n                  pac_ideal (set_mset (ran_m A')) \\<and>\n                  \\<Union> (vars ` set_mset (ran_m A))\n                  \\<subseteq> \\<V>' \\<and>\n                  \\<Union> (vars ` set_mset (ran_m A'))\n                  \\<subseteq> \\<V>') \\<and>\n                 (st = FOUND \\<longrightarrow> spec \\<in># ran_m A')}", "apply (auto dest: multi_member_split simp: ran_m_def ideal.span_base pac_ideal_remap_eq\n    add_mset_eq_add_mset\n    eq_commute[of \\<open>add_mset _ _\\<close> \\<open>dom_m (A :: (nat, int mpoly)fmap)\\<close> for A])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition remap_polys :: \\<open>int mpoly \\<Rightarrow> nat set \\<Rightarrow> (nat, int_poly) fmap \\<Rightarrow> (status \\<times> fpac_step) nres\\<close> where\n  \\<open>remap_polys spec = (\\<lambda>\\<V> A. do{\n   dom \\<leftarrow> SPEC(\\<lambda>dom. set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom);\n\n   failed \\<leftarrow> SPEC(\\<lambda>_::bool. True);\n   if failed\n   then do {\n      RETURN (FAILED, \\<V>, fmempty)\n   }\n   else do {\n     (b, N) \\<leftarrow> FOREACH dom\n       (\\<lambda>i (b, \\<V>, A').\n          if i \\<in># dom_m A\n          then do {\n            p \\<leftarrow> SPEC(\\<lambda>p. the (fmlookup A i) - p \\<in> ideal polynomial_bool \\<and> vars p \\<subseteq> vars (the (fmlookup A i)));\n            eq \\<leftarrow> SPEC(\\<lambda>eq. eq \\<longrightarrow> p = spec);\n            \\<V> \\<leftarrow> SPEC(\\<lambda>\\<V>'. \\<V> \\<union> vars (the (fmlookup A i)) \\<subseteq> \\<V>');\n            RETURN(b \\<or> eq, \\<V>, fmupd i p A')\n          } else RETURN (b, \\<V>, A'))\n       (False, \\<V>, fmempty);\n       RETURN (if b then FOUND else SUCCESS, N)\n     }\n   })\\<close>"], ["", "lemma remap_polys_spec:\n  \\<open>remap_polys spec \\<V> A \\<le> remap_polys_polynomial_bool spec \\<V> A\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. remap_polys spec \\<V> A \\<le> remap_polys_polynomial_bool spec \\<V> A", "unfolding remap_polys_def remap_polys_polynomial_bool_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>dom.\n         set_mset (dom_m A) \\<subseteq> dom \\<and> finite dom) \\<bind>\n    (\\<lambda>dom.\n        SPEC (\\<lambda>_. True) \\<bind>\n        (\\<lambda>failed.\n            if failed then RETURN (FAILED, \\<V>, fmempty)\n            else FOREACH dom\n                  (\\<lambda>i (b, \\<V>, A').\n                      if i \\<in># dom_m A\n                      then SPEC\n                            (\\<lambda>p.\n                                the (fmlookup A i) - p\n                                \\<in> More_Modules.ideal\n polynomial_bool \\<and>\n                                vars p\n                                \\<subseteq> vars\n       (the (fmlookup A i))) \\<bind>\n                           (\\<lambda>p.\n                               SPEC\n                                (\\<lambda>eqa.\n                                    eqa \\<longrightarrow> p = spec) \\<bind>\n                               (\\<lambda>eq.\n                                   SPEC\n                                    ((\\<subseteq>)\n(\\<V> \\<union> vars (the (fmlookup A i)))) \\<bind>\n                                   (\\<lambda>\\<V>.\n RETURN (b \\<or> eq, \\<V>, fmupd i p A'))))\n                      else RETURN (b, \\<V>, A'))\n                  (False, \\<V>, fmempty) \\<bind>\n                 (\\<lambda>(b, N).\n                     RETURN (if b then FOUND else SUCCESS, N))))\n    \\<le> SPEC\n           (\\<lambda>(st, \\<V>', A').\n               (\\<not> is_failed st \\<longrightarrow>\n                dom_m A = dom_m A' \\<and>\n                (\\<forall>i\\<in>#dom_m A.\n                    the (fmlookup A i) - the (fmlookup A' i)\n                    \\<in> More_Modules.ideal polynomial_bool) \\<and>\n                \\<Union> (vars ` set_mset (ran_m A))\n                \\<subseteq> \\<V>' \\<and>\n                \\<Union> (vars ` set_mset (ran_m A'))\n                \\<subseteq> \\<V>') \\<and>\n               (st = FOUND \\<longrightarrow> spec \\<in># ran_m A'))", "apply (refine_vcg FOREACH_rule[where\n    I = \\<open>\\<lambda>dom (b, \\<V>, A').\n      set_mset (dom_m A') =  set_mset (dom_m A) - dom \\<and>\n      (\\<forall>i \\<in> set_mset (dom_m A) - dom. the (fmlookup A i) - the (fmlookup A' i) \\<in> ideal polynomial_bool) \\<and>\n     \\<Union>(vars ` set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A))) \\<subseteq> \\<V> \\<and>\n     \\<Union>(vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n      (b \\<longrightarrow> spec \\<in># ran_m A')\\<close>])"], ["proof (prove)\ngoal (26 subgoals):\n 1. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True; xa;\n        x2 = (x1a, x2a); (FAILED, \\<V>, fmempty) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> dom_m A = dom_m x2a\n 2. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True; xa;\n        x2 = (x1a, x2a); (FAILED, \\<V>, fmempty) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>#dom_m A.\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 3. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True; xa;\n        x2 = (x1a, x2a); (FAILED, \\<V>, fmempty) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m A))\n                         \\<subseteq> x1a\n 4. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True; xa;\n        x2 = (x1a, x2a); (FAILED, \\<V>, fmempty) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 5. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True; xa;\n        x2 = (x1a, x2a); (FAILED, \\<V>, fmempty) = (x1, x2);\n        x1 = FOUND\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 6. \\<And>x xa.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa\\<rbrakk>\n       \\<Longrightarrow> finite x\n 7. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) = set_mset (dom_m A) - x\n 8. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - x.\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 9. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 10. \\<And>x xa x1 x2 x1a x2a.\n        \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n         \\<not> xa; x2 = (x1a, x2a);\n         (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n        \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                          \\<subseteq> x1a\nA total of 26 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True; xa_;\n     x2_ = (x1a_, x2a_); (FAILED, \\<V>, fmempty) = (x1_, x2_);\n     \\<not> is_failed x1_\\<rbrakk>\n    \\<Longrightarrow> dom_m A = dom_m x2a_", "by auto"], ["proof (prove)\ngoal (25 subgoals):\n 1. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True; xa;\n        x2 = (x1a, x2a); (FAILED, \\<V>, fmempty) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>#dom_m A.\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 2. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True; xa;\n        x2 = (x1a, x2a); (FAILED, \\<V>, fmempty) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m A))\n                         \\<subseteq> x1a\n 3. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True; xa;\n        x2 = (x1a, x2a); (FAILED, \\<V>, fmempty) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 4. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True; xa;\n        x2 = (x1a, x2a); (FAILED, \\<V>, fmempty) = (x1, x2);\n        x1 = FOUND\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 5. \\<And>x xa.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa\\<rbrakk>\n       \\<Longrightarrow> finite x\n 6. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) = set_mset (dom_m A) - x\n 7. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - x.\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 8. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 9. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 10. \\<And>x xa x1 x2 x1a x2a.\n        \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n         \\<not> xa; x2 = (x1a, x2a); (False, \\<V>, fmempty) = (x1, x2);\n         x1\\<rbrakk>\n        \\<Longrightarrow> spec \\<in># ran_m x2a\nA total of 25 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True; xa_;\n     x2_ = (x1a_, x2a_); (FAILED, \\<V>, fmempty) = (x1_, x2_);\n     \\<not> is_failed x1_\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<in>#dom_m A.\n                         the (fmlookup A i) - the (fmlookup x2a_ i)\n                         \\<in> More_Modules.ideal polynomial_bool", "by auto"], ["proof (prove)\ngoal (24 subgoals):\n 1. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True; xa;\n        x2 = (x1a, x2a); (FAILED, \\<V>, fmempty) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m A))\n                         \\<subseteq> x1a\n 2. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True; xa;\n        x2 = (x1a, x2a); (FAILED, \\<V>, fmempty) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 3. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True; xa;\n        x2 = (x1a, x2a); (FAILED, \\<V>, fmempty) = (x1, x2);\n        x1 = FOUND\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 4. \\<And>x xa.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa\\<rbrakk>\n       \\<Longrightarrow> finite x\n 5. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) = set_mset (dom_m A) - x\n 6. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - x.\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 7. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 8. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 9. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a); (False, \\<V>, fmempty) = (x1, x2);\n        x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 10. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n        \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n         \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n         case \\<sigma> of\n         (b, \\<V>, A') \\<Rightarrow>\n           set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n           (\\<forall>i\\<in>set_mset (dom_m A) - it.\n               the (fmlookup A i) - the (fmlookup A' i)\n               \\<in> More_Modules.ideal polynomial_bool) \\<and>\n           \\<Union>\n            (vars `\n             set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n           \\<subseteq> \\<V> \\<and>\n           \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n           (b \\<longrightarrow> spec \\<in># ran_m A');\n         \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n         the (fmlookup A xb) - xc\n         \\<in> More_Modules.ideal polynomial_bool \\<and>\n         vars xc \\<subseteq> vars (the (fmlookup A xb));\n         xd \\<longrightarrow> xc = spec;\n         aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n         x2 = (x1a, x2a);\n         (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n        \\<Longrightarrow> set_mset (dom_m x2a) =\n                          set_mset (dom_m A) - (it - {xb})\nA total of 24 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True; xa_;\n     x2_ = (x1a_, x2a_); (FAILED, \\<V>, fmempty) = (x1_, x2_);\n     \\<not> is_failed x1_\\<rbrakk>\n    \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> x1a_", "by auto"], ["proof (prove)\ngoal (23 subgoals):\n 1. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True; xa;\n        x2 = (x1a, x2a); (FAILED, \\<V>, fmempty) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 2. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True; xa;\n        x2 = (x1a, x2a); (FAILED, \\<V>, fmempty) = (x1, x2);\n        x1 = FOUND\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 3. \\<And>x xa.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa\\<rbrakk>\n       \\<Longrightarrow> finite x\n 4. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) = set_mset (dom_m A) - x\n 5. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - x.\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 6. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 7. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 8. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a); (False, \\<V>, fmempty) = (x1, x2);\n        x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 9. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) =\n                         set_mset (dom_m A) - (it - {xb})\n 10. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n        \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n         \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n         case \\<sigma> of\n         (b, \\<V>, A') \\<Rightarrow>\n           set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n           (\\<forall>i\\<in>set_mset (dom_m A) - it.\n               the (fmlookup A i) - the (fmlookup A' i)\n               \\<in> More_Modules.ideal polynomial_bool) \\<and>\n           \\<Union>\n            (vars `\n             set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n           \\<subseteq> \\<V> \\<and>\n           \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n           (b \\<longrightarrow> spec \\<in># ran_m A');\n         \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n         the (fmlookup A xb) - xc\n         \\<in> More_Modules.ideal polynomial_bool \\<and>\n         vars xc \\<subseteq> vars (the (fmlookup A xb));\n         xd \\<longrightarrow> xc = spec;\n         aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n         x2 = (x1a, x2a);\n         (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n        \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it - {xb}).\n                             the (fmlookup A i) - the (fmlookup x2a i)\n                             \\<in> More_Modules.ideal polynomial_bool\nA total of 23 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True; xa_;\n     x2_ = (x1a_, x2a_); (FAILED, \\<V>, fmempty) = (x1_, x2_);\n     \\<not> is_failed x1_\\<rbrakk>\n    \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a_))\n                      \\<subseteq> x1a_", "by auto"], ["proof (prove)\ngoal (22 subgoals):\n 1. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True; xa;\n        x2 = (x1a, x2a); (FAILED, \\<V>, fmempty) = (x1, x2);\n        x1 = FOUND\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 2. \\<And>x xa.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa\\<rbrakk>\n       \\<Longrightarrow> finite x\n 3. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) = set_mset (dom_m A) - x\n 4. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - x.\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 5. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 6. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 7. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a); (False, \\<V>, fmempty) = (x1, x2);\n        x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 8. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) =\n                         set_mset (dom_m A) - (it - {xb})\n 9. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it - {xb}).\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 10. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n        \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n         \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n         case \\<sigma> of\n         (b, \\<V>, A') \\<Rightarrow>\n           set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n           (\\<forall>i\\<in>set_mset (dom_m A) - it.\n               the (fmlookup A i) - the (fmlookup A' i)\n               \\<in> More_Modules.ideal polynomial_bool) \\<and>\n           \\<Union>\n            (vars `\n             set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n           \\<subseteq> \\<V> \\<and>\n           \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n           (b \\<longrightarrow> spec \\<in># ran_m A');\n         \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n         the (fmlookup A xb) - xc\n         \\<in> More_Modules.ideal polynomial_bool \\<and>\n         vars xc \\<subseteq> vars (the (fmlookup A xb));\n         xd \\<longrightarrow> xc = spec;\n         aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n         x2 = (x1a, x2a);\n         (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n        \\<Longrightarrow> \\<Union>\n                           (vars `\n                            set_mset\n                             (ran_m\n                               (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                          \\<subseteq> x1a\nA total of 22 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True; xa_;\n     x2_ = (x1a_, x2a_); (FAILED, \\<V>, fmempty) = (x1_, x2_);\n     x1_ = FOUND\\<rbrakk>\n    \\<Longrightarrow> spec \\<in># ran_m x2a_", "by auto"], ["proof (prove)\ngoal (21 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa\\<rbrakk>\n       \\<Longrightarrow> finite x\n 2. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) = set_mset (dom_m A) - x\n 3. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - x.\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 4. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 5. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 6. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a); (False, \\<V>, fmempty) = (x1, x2);\n        x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 7. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) =\n                         set_mset (dom_m A) - (it - {xb})\n 8. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it - {xb}).\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 9. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 10. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n        \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n         \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n         case \\<sigma> of\n         (b, \\<V>, A') \\<Rightarrow>\n           set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n           (\\<forall>i\\<in>set_mset (dom_m A) - it.\n               the (fmlookup A i) - the (fmlookup A' i)\n               \\<in> More_Modules.ideal polynomial_bool) \\<and>\n           \\<Union>\n            (vars `\n             set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n           \\<subseteq> \\<V> \\<and>\n           \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n           (b \\<longrightarrow> spec \\<in># ran_m A');\n         \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n         the (fmlookup A xb) - xc\n         \\<in> More_Modules.ideal polynomial_bool \\<and>\n         vars xc \\<subseteq> vars (the (fmlookup A xb));\n         xd \\<longrightarrow> xc = spec;\n         aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n         x2 = (x1a, x2a);\n         (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n        \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                          \\<subseteq> x1a\nA total of 21 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_\\<rbrakk>\n    \\<Longrightarrow> finite x_", "by auto"], ["proof (prove)\ngoal (20 subgoals):\n 1. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) = set_mset (dom_m A) - x\n 2. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - x.\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 3. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 4. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 5. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a); (False, \\<V>, fmempty) = (x1, x2);\n        x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 6. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) =\n                         set_mset (dom_m A) - (it - {xb})\n 7. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it - {xb}).\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 8. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 9. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 10. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n        \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n         \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n         case \\<sigma> of\n         (b, \\<V>, A') \\<Rightarrow>\n           set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n           (\\<forall>i\\<in>set_mset (dom_m A) - it.\n               the (fmlookup A i) - the (fmlookup A' i)\n               \\<in> More_Modules.ideal polynomial_bool) \\<and>\n           \\<Union>\n            (vars `\n             set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n           \\<subseteq> \\<V> \\<and>\n           \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n           (b \\<longrightarrow> spec \\<in># ran_m A');\n         \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n         the (fmlookup A xb) - xc\n         \\<in> More_Modules.ideal polynomial_bool \\<and>\n         vars xc \\<subseteq> vars (the (fmlookup A xb));\n         xd \\<longrightarrow> xc = spec;\n         aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n         x2 = (x1a, x2a); (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2);\n         x1\\<rbrakk>\n        \\<Longrightarrow> spec \\<in># ran_m x2a\nA total of 20 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_; x2_ = (x1a_, x2a_);\n     (False, \\<V>, fmempty) = (x1_, x2_)\\<rbrakk>\n    \\<Longrightarrow> set_mset (dom_m x2a_) = set_mset (dom_m A) - x_", "by auto"], ["proof (prove)\ngoal (19 subgoals):\n 1. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - x.\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 2. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 3. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 4. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a); (False, \\<V>, fmempty) = (x1, x2);\n        x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 5. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) =\n                         set_mset (dom_m A) - (it - {xb})\n 6. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it - {xb}).\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 7. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 8. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 9. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a); (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2);\n        x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 10. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n        \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n         \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n         case \\<sigma> of\n         (b, \\<V>, A') \\<Rightarrow>\n           set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n           (\\<forall>i\\<in>set_mset (dom_m A) - it.\n               the (fmlookup A i) - the (fmlookup A' i)\n               \\<in> More_Modules.ideal polynomial_bool) \\<and>\n           \\<Union>\n            (vars `\n             set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n           \\<subseteq> \\<V> \\<and>\n           \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n           (b \\<longrightarrow> spec \\<in># ran_m A');\n         \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n         x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n        \\<Longrightarrow> set_mset (dom_m x2a) =\n                          set_mset (dom_m A) - (it - {xb})\nA total of 19 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_; x2_ = (x1a_, x2a_);\n     (False, \\<V>, fmempty) = (x1_, x2_)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - x_.\n                         the (fmlookup A i) - the (fmlookup x2a_ i)\n                         \\<in> More_Modules.ideal polynomial_bool", "by auto"], ["proof (prove)\ngoal (18 subgoals):\n 1. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 2. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 3. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a); (False, \\<V>, fmempty) = (x1, x2);\n        x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 4. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) =\n                         set_mset (dom_m A) - (it - {xb})\n 5. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it - {xb}).\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 6. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 7. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 8. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a); (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2);\n        x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 9. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) =\n                         set_mset (dom_m A) - (it - {xb})\n 10. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n        \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n         \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n         case \\<sigma> of\n         (b, \\<V>, A') \\<Rightarrow>\n           set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n           (\\<forall>i\\<in>set_mset (dom_m A) - it.\n               the (fmlookup A i) - the (fmlookup A' i)\n               \\<in> More_Modules.ideal polynomial_bool) \\<and>\n           \\<Union>\n            (vars `\n             set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n           \\<subseteq> \\<V> \\<and>\n           \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n           (b \\<longrightarrow> spec \\<in># ran_m A');\n         \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n         x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n        \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it - {xb}).\n                             the (fmlookup A i) - the (fmlookup x2a i)\n                             \\<in> More_Modules.ideal polynomial_bool\nA total of 18 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_; x2_ = (x1a_, x2a_);\n     (False, \\<V>, fmempty) = (x1_, x2_)\\<rbrakk>\n    \\<Longrightarrow> \\<Union>\n                       (vars `\n                        set_mset\n                         (ran_m (fmrestrict_set (set_mset (dom_m x2a_)) A)))\n                      \\<subseteq> x1a_", "by auto"], ["proof (prove)\ngoal (17 subgoals):\n 1. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a);\n        (False, \\<V>, fmempty) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 2. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a); (False, \\<V>, fmempty) = (x1, x2);\n        x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 3. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) =\n                         set_mset (dom_m A) - (it - {xb})\n 4. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it - {xb}).\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 5. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 6. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 7. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a); (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2);\n        x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 8. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) =\n                         set_mset (dom_m A) - (it - {xb})\n 9. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it - {xb}).\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 10. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n        \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n         \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n         case \\<sigma> of\n         (b, \\<V>, A') \\<Rightarrow>\n           set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n           (\\<forall>i\\<in>set_mset (dom_m A) - it.\n               the (fmlookup A i) - the (fmlookup A' i)\n               \\<in> More_Modules.ideal polynomial_bool) \\<and>\n           \\<Union>\n            (vars `\n             set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n           \\<subseteq> \\<V> \\<and>\n           \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n           (b \\<longrightarrow> spec \\<in># ran_m A');\n         \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n         x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n        \\<Longrightarrow> \\<Union>\n                           (vars `\n                            set_mset\n                             (ran_m\n                               (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                          \\<subseteq> x1a\nA total of 17 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_; x2_ = (x1a_, x2a_);\n     (False, \\<V>, fmempty) = (x1_, x2_)\\<rbrakk>\n    \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a_))\n                      \\<subseteq> x1a_", "using ideal.span_add"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> More_Modules.ideal ?S;\n   ?y \\<in> More_Modules.ideal ?S\\<rbrakk>\n  \\<Longrightarrow> ?x + ?y \\<in> More_Modules.ideal ?S\n\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_; x2_ = (x1a_, x2a_);\n     (False, \\<V>, fmempty) = (x1_, x2_)\\<rbrakk>\n    \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a_))\n                      \\<subseteq> x1a_", "by auto"], ["proof (prove)\ngoal (16 subgoals):\n 1. \\<And>x xa x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; x2 = (x1a, x2a); (False, \\<V>, fmempty) = (x1, x2);\n        x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 2. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) =\n                         set_mset (dom_m A) - (it - {xb})\n 3. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it - {xb}).\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 4. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 5. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 6. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a); (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2);\n        x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 7. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) =\n                         set_mset (dom_m A) - (it - {xb})\n 8. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it - {xb}).\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 9. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 10. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n        \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n         \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n         case \\<sigma> of\n         (b, \\<V>, A') \\<Rightarrow>\n           set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n           (\\<forall>i\\<in>set_mset (dom_m A) - it.\n               the (fmlookup A i) - the (fmlookup A' i)\n               \\<in> More_Modules.ideal polynomial_bool) \\<and>\n           \\<Union>\n            (vars `\n             set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n           \\<subseteq> \\<V> \\<and>\n           \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n           (b \\<longrightarrow> spec \\<in># ran_m A');\n         \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n         x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n        \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                          \\<subseteq> x1a\nA total of 16 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_; x2_ = (x1a_, x2a_); (False, \\<V>, fmempty) = (x1_, x2_);\n     x1_\\<rbrakk>\n    \\<Longrightarrow> spec \\<in># ran_m x2a_", "by auto"], ["proof (prove)\ngoal (15 subgoals):\n 1. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) =\n                         set_mset (dom_m A) - (it - {xb})\n 2. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it - {xb}).\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 3. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 4. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 5. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a); (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2);\n        x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 6. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) =\n                         set_mset (dom_m A) - (it - {xb})\n 7. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it - {xb}).\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 8. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 9. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 10. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n        \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n         \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n         case \\<sigma> of\n         (b, \\<V>, A') \\<Rightarrow>\n           set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n           (\\<forall>i\\<in>set_mset (dom_m A) - it.\n               the (fmlookup A i) - the (fmlookup A' i)\n               \\<in> More_Modules.ideal polynomial_bool) \\<and>\n           \\<Union>\n            (vars `\n             set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n           \\<subseteq> \\<V> \\<and>\n           \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n           (b \\<longrightarrow> spec \\<in># ran_m A');\n         \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n         x2 = (x1a, x2a); (a, aa, ba) = (x1, x2); x1\\<rbrakk>\n        \\<Longrightarrow> spec \\<in># ran_m x2a\nA total of 15 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_; xb_ \\<in> it_; it_ \\<subseteq> x_;\n     case \\<sigma>_ of\n     (b, \\<V>, A') \\<Rightarrow>\n       set_mset (dom_m A') = set_mset (dom_m A) - it_ \\<and>\n       (\\<forall>i\\<in>set_mset (dom_m A) - it_.\n           the (fmlookup A i) - the (fmlookup A' i)\n           \\<in> More_Modules.ideal polynomial_bool) \\<and>\n       \\<Union>\n        (vars ` set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n       \\<subseteq> \\<V> \\<and>\n       \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n       (b \\<longrightarrow> spec \\<in># ran_m A');\n     \\<sigma>_ = (a_, b_); b_ = (aa_, ba_); xb_ \\<in># dom_m A;\n     the (fmlookup A xb_) - xc_\n     \\<in> More_Modules.ideal polynomial_bool \\<and>\n     vars xc_ \\<subseteq> vars (the (fmlookup A xb_));\n     xd_ \\<longrightarrow> xc_ = spec;\n     aa_ \\<union> vars (the (fmlookup A xb_)) \\<subseteq> xe_;\n     x2_ = (x1a_, x2a_);\n     (a_ \\<or> xd_, xe_, fmupd xb_ xc_ ba_) = (x1_, x2_)\\<rbrakk>\n    \\<Longrightarrow> set_mset (dom_m x2a_) =\n                      set_mset (dom_m A) - (it_ - {xb_})", "by auto"], ["proof (prove)\ngoal (14 subgoals):\n 1. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it - {xb}).\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 2. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 3. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 4. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a); (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2);\n        x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 5. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) =\n                         set_mset (dom_m A) - (it - {xb})\n 6. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it - {xb}).\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 7. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 8. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 9. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2); x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 10. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n        \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n         \\<not> xa;\n         case \\<sigma> of\n         (b, \\<V>, A') \\<Rightarrow>\n           set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n           (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n               the (fmlookup A i) - the (fmlookup A' i)\n               \\<in> More_Modules.ideal polynomial_bool) \\<and>\n           \\<Union>\n            (vars `\n             set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n           \\<subseteq> \\<V> \\<and>\n           \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n           (b \\<longrightarrow> spec \\<in># ran_m A');\n         \\<sigma> = (a, b); x2 = (x1a, x2a);\n         (if a then FOUND else SUCCESS, b) = (x1, x2);\n         \\<not> is_failed x1\\<rbrakk>\n        \\<Longrightarrow> dom_m A = dom_m x2a\nA total of 14 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_; xb_ \\<in> it_; it_ \\<subseteq> x_;\n     case \\<sigma>_ of\n     (b, \\<V>, A') \\<Rightarrow>\n       set_mset (dom_m A') = set_mset (dom_m A) - it_ \\<and>\n       (\\<forall>i\\<in>set_mset (dom_m A) - it_.\n           the (fmlookup A i) - the (fmlookup A' i)\n           \\<in> More_Modules.ideal polynomial_bool) \\<and>\n       \\<Union>\n        (vars ` set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n       \\<subseteq> \\<V> \\<and>\n       \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n       (b \\<longrightarrow> spec \\<in># ran_m A');\n     \\<sigma>_ = (a_, b_); b_ = (aa_, ba_); xb_ \\<in># dom_m A;\n     the (fmlookup A xb_) - xc_\n     \\<in> More_Modules.ideal polynomial_bool \\<and>\n     vars xc_ \\<subseteq> vars (the (fmlookup A xb_));\n     xd_ \\<longrightarrow> xc_ = spec;\n     aa_ \\<union> vars (the (fmlookup A xb_)) \\<subseteq> xe_;\n     x2_ = (x1a_, x2a_);\n     (a_ \\<or> xd_, xe_, fmupd xb_ xc_ ba_) = (x1_, x2_)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it_ - {xb_}).\n                         the (fmlookup A i) - the (fmlookup x2a_ i)\n                         \\<in> More_Modules.ideal polynomial_bool", "by clarsimp auto"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 2. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 3. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a); (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2);\n        x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 4. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) =\n                         set_mset (dom_m A) - (it - {xb})\n 5. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it - {xb}).\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 6. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 7. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 8. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2); x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 9. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> dom_m A = dom_m x2a\n 10. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n        \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n         \\<not> xa;\n         case \\<sigma> of\n         (b, \\<V>, A') \\<Rightarrow>\n           set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n           (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n               the (fmlookup A i) - the (fmlookup A' i)\n               \\<in> More_Modules.ideal polynomial_bool) \\<and>\n           \\<Union>\n            (vars `\n             set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n           \\<subseteq> \\<V> \\<and>\n           \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n           (b \\<longrightarrow> spec \\<in># ran_m A');\n         \\<sigma> = (a, b); x2 = (x1a, x2a);\n         (if a then FOUND else SUCCESS, b) = (x1, x2);\n         \\<not> is_failed x1\\<rbrakk>\n        \\<Longrightarrow> \\<forall>i\\<in>#dom_m A.\n                             the (fmlookup A i) - the (fmlookup x2a i)\n                             \\<in> More_Modules.ideal polynomial_bool\nA total of 13 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_; xb_ \\<in> it_; it_ \\<subseteq> x_;\n     case \\<sigma>_ of\n     (b, \\<V>, A') \\<Rightarrow>\n       set_mset (dom_m A') = set_mset (dom_m A) - it_ \\<and>\n       (\\<forall>i\\<in>set_mset (dom_m A) - it_.\n           the (fmlookup A i) - the (fmlookup A' i)\n           \\<in> More_Modules.ideal polynomial_bool) \\<and>\n       \\<Union>\n        (vars ` set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n       \\<subseteq> \\<V> \\<and>\n       \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n       (b \\<longrightarrow> spec \\<in># ran_m A');\n     \\<sigma>_ = (a_, b_); b_ = (aa_, ba_); xb_ \\<in># dom_m A;\n     the (fmlookup A xb_) - xc_\n     \\<in> More_Modules.ideal polynomial_bool \\<and>\n     vars xc_ \\<subseteq> vars (the (fmlookup A xb_));\n     xd_ \\<longrightarrow> xc_ = spec;\n     aa_ \\<union> vars (the (fmlookup A xb_)) \\<subseteq> xe_;\n     x2_ = (x1a_, x2a_);\n     (a_ \\<or> xd_, xe_, fmupd xb_ xc_ ba_) = (x1_, x2_)\\<rbrakk>\n    \\<Longrightarrow> \\<Union>\n                       (vars `\n                        set_mset\n                         (ran_m (fmrestrict_set (set_mset (dom_m x2a_)) A)))\n                      \\<subseteq> x1a_", "supply[[goals_limit=1]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_; xb_ \\<in> it_; it_ \\<subseteq> x_;\n     case \\<sigma>_ of\n     (b, \\<V>, A') \\<Rightarrow>\n       set_mset (dom_m A') = set_mset (dom_m A) - it_ \\<and>\n       (\\<forall>i\\<in>set_mset (dom_m A) - it_.\n           the (fmlookup A i) - the (fmlookup A' i)\n           \\<in> More_Modules.ideal polynomial_bool) \\<and>\n       \\<Union>\n        (vars ` set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n       \\<subseteq> \\<V> \\<and>\n       \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n       (b \\<longrightarrow> spec \\<in># ran_m A');\n     \\<sigma>_ = (a_, b_); b_ = (aa_, ba_); xb_ \\<in># dom_m A;\n     the (fmlookup A xb_) - xc_\n     \\<in> More_Modules.ideal polynomial_bool \\<and>\n     vars xc_ \\<subseteq> vars (the (fmlookup A xb_));\n     xd_ \\<longrightarrow> xc_ = spec;\n     aa_ \\<union> vars (the (fmlookup A xb_)) \\<subseteq> xe_;\n     x2_ = (x1a_, x2a_);\n     (a_ \\<or> xd_, xe_, fmupd xb_ xc_ ba_) = (x1_, x2_)\\<rbrakk>\n    \\<Longrightarrow> \\<Union>\n                       (vars `\n                        set_mset\n                         (ran_m (fmrestrict_set (set_mset (dom_m x2a_)) A)))\n                      \\<subseteq> x1a_", "by (auto simp add: ran_m_mapsto_upd_notin dom_m_fmrestrict_set' subset_eq)"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a);\n        (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 2. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a); (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2);\n        x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 3. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) =\n                         set_mset (dom_m A) - (it - {xb})\n 4. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it - {xb}).\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 5. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 6. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 7. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2); x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 8. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> dom_m A = dom_m x2a\n 9. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>#dom_m A.\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 10. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n        \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n         \\<not> xa;\n         case \\<sigma> of\n         (b, \\<V>, A') \\<Rightarrow>\n           set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n           (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n               the (fmlookup A i) - the (fmlookup A' i)\n               \\<in> More_Modules.ideal polynomial_bool) \\<and>\n           \\<Union>\n            (vars `\n             set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n           \\<subseteq> \\<V> \\<and>\n           \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n           (b \\<longrightarrow> spec \\<in># ran_m A');\n         \\<sigma> = (a, b); x2 = (x1a, x2a);\n         (if a then FOUND else SUCCESS, b) = (x1, x2);\n         \\<not> is_failed x1\\<rbrakk>\n        \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m A))\n                          \\<subseteq> x1a\nA total of 12 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_; xb_ \\<in> it_; it_ \\<subseteq> x_;\n     case \\<sigma>_ of\n     (b, \\<V>, A') \\<Rightarrow>\n       set_mset (dom_m A') = set_mset (dom_m A) - it_ \\<and>\n       (\\<forall>i\\<in>set_mset (dom_m A) - it_.\n           the (fmlookup A i) - the (fmlookup A' i)\n           \\<in> More_Modules.ideal polynomial_bool) \\<and>\n       \\<Union>\n        (vars ` set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n       \\<subseteq> \\<V> \\<and>\n       \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n       (b \\<longrightarrow> spec \\<in># ran_m A');\n     \\<sigma>_ = (a_, b_); b_ = (aa_, ba_); xb_ \\<in># dom_m A;\n     the (fmlookup A xb_) - xc_\n     \\<in> More_Modules.ideal polynomial_bool \\<and>\n     vars xc_ \\<subseteq> vars (the (fmlookup A xb_));\n     xd_ \\<longrightarrow> xc_ = spec;\n     aa_ \\<union> vars (the (fmlookup A xb_)) \\<subseteq> xe_;\n     x2_ = (x1a_, x2a_);\n     (a_ \\<or> xd_, xe_, fmupd xb_ xc_ ba_) = (x1_, x2_)\\<rbrakk>\n    \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a_))\n                      \\<subseteq> x1a_", "supply[[goals_limit=1]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_; xb_ \\<in> it_; it_ \\<subseteq> x_;\n     case \\<sigma>_ of\n     (b, \\<V>, A') \\<Rightarrow>\n       set_mset (dom_m A') = set_mset (dom_m A) - it_ \\<and>\n       (\\<forall>i\\<in>set_mset (dom_m A) - it_.\n           the (fmlookup A i) - the (fmlookup A' i)\n           \\<in> More_Modules.ideal polynomial_bool) \\<and>\n       \\<Union>\n        (vars ` set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n       \\<subseteq> \\<V> \\<and>\n       \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n       (b \\<longrightarrow> spec \\<in># ran_m A');\n     \\<sigma>_ = (a_, b_); b_ = (aa_, ba_); xb_ \\<in># dom_m A;\n     the (fmlookup A xb_) - xc_\n     \\<in> More_Modules.ideal polynomial_bool \\<and>\n     vars xc_ \\<subseteq> vars (the (fmlookup A xb_));\n     xd_ \\<longrightarrow> xc_ = spec;\n     aa_ \\<union> vars (the (fmlookup A xb_)) \\<subseteq> xe_;\n     x2_ = (x1a_, x2a_);\n     (a_ \\<or> xd_, xe_, fmupd xb_ xc_ ba_) = (x1_, x2_)\\<rbrakk>\n    \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a_))\n                      \\<subseteq> x1a_", "by (auto simp add: ran_m_mapsto_upd_notin dom_m_fmrestrict_set' subset_eq)"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>x xa xb it \\<sigma> a b aa ba xc xd xe x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<in># dom_m A;\n        the (fmlookup A xb) - xc\n        \\<in> More_Modules.ideal polynomial_bool \\<and>\n        vars xc \\<subseteq> vars (the (fmlookup A xb));\n        xd \\<longrightarrow> xc = spec;\n        aa \\<union> vars (the (fmlookup A xb)) \\<subseteq> xe;\n        x2 = (x1a, x2a); (a \\<or> xd, xe, fmupd xb xc ba) = (x1, x2);\n        x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 2. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) =\n                         set_mset (dom_m A) - (it - {xb})\n 3. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it - {xb}).\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 4. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 5. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 6. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2); x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 7. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> dom_m A = dom_m x2a\n 8. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>#dom_m A.\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 9. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m A))\n                         \\<subseteq> x1a\n 10. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n        \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n         \\<not> xa;\n         case \\<sigma> of\n         (b, \\<V>, A') \\<Rightarrow>\n           set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n           (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n               the (fmlookup A i) - the (fmlookup A' i)\n               \\<in> More_Modules.ideal polynomial_bool) \\<and>\n           \\<Union>\n            (vars `\n             set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n           \\<subseteq> \\<V> \\<and>\n           \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n           (b \\<longrightarrow> spec \\<in># ran_m A');\n         \\<sigma> = (a, b); x2 = (x1a, x2a);\n         (if a then FOUND else SUCCESS, b) = (x1, x2);\n         \\<not> is_failed x1\\<rbrakk>\n        \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                          \\<subseteq> x1a\nA total of 11 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_; xb_ \\<in> it_; it_ \\<subseteq> x_;\n     case \\<sigma>_ of\n     (b, \\<V>, A') \\<Rightarrow>\n       set_mset (dom_m A') = set_mset (dom_m A) - it_ \\<and>\n       (\\<forall>i\\<in>set_mset (dom_m A) - it_.\n           the (fmlookup A i) - the (fmlookup A' i)\n           \\<in> More_Modules.ideal polynomial_bool) \\<and>\n       \\<Union>\n        (vars ` set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n       \\<subseteq> \\<V> \\<and>\n       \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n       (b \\<longrightarrow> spec \\<in># ran_m A');\n     \\<sigma>_ = (a_, b_); b_ = (aa_, ba_); xb_ \\<in># dom_m A;\n     the (fmlookup A xb_) - xc_\n     \\<in> More_Modules.ideal polynomial_bool \\<and>\n     vars xc_ \\<subseteq> vars (the (fmlookup A xb_));\n     xd_ \\<longrightarrow> xc_ = spec;\n     aa_ \\<union> vars (the (fmlookup A xb_)) \\<subseteq> xe_;\n     x2_ = (x1a_, x2a_);\n     (a_ \\<or> xd_, xe_, fmupd xb_ xc_ ba_) = (x1_, x2_); x1_\\<rbrakk>\n    \\<Longrightarrow> spec \\<in># ran_m x2a_", "by (auto simp: ran_m_mapsto_upd_notin)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> set_mset (dom_m x2a) =\n                         set_mset (dom_m A) - (it - {xb})\n 2. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it - {xb}).\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 3. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 4. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 5. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2); x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 6. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> dom_m A = dom_m x2a\n 7. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>#dom_m A.\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 8. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m A))\n                         \\<subseteq> x1a\n 9. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 10. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n        \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n         \\<not> xa;\n         case \\<sigma> of\n         (b, \\<V>, A') \\<Rightarrow>\n           set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n           (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n               the (fmlookup A i) - the (fmlookup A' i)\n               \\<in> More_Modules.ideal polynomial_bool) \\<and>\n           \\<Union>\n            (vars `\n             set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n           \\<subseteq> \\<V> \\<and>\n           \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n           (b \\<longrightarrow> spec \\<in># ran_m A');\n         \\<sigma> = (a, b); x2 = (x1a, x2a);\n         (if a then FOUND else SUCCESS, b) = (x1, x2); x1 = FOUND\\<rbrakk>\n        \\<Longrightarrow> spec \\<in># ran_m x2a", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_; xb_ \\<in> it_; it_ \\<subseteq> x_;\n     case \\<sigma>_ of\n     (b, \\<V>, A') \\<Rightarrow>\n       set_mset (dom_m A') = set_mset (dom_m A) - it_ \\<and>\n       (\\<forall>i\\<in>set_mset (dom_m A) - it_.\n           the (fmlookup A i) - the (fmlookup A' i)\n           \\<in> More_Modules.ideal polynomial_bool) \\<and>\n       \\<Union>\n        (vars ` set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n       \\<subseteq> \\<V> \\<and>\n       \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n       (b \\<longrightarrow> spec \\<in># ran_m A');\n     \\<sigma>_ = (a_, b_); b_ = (aa_, ba_); xb_ \\<notin># dom_m A;\n     x2_ = (x1a_, x2a_); (a_, aa_, ba_) = (x1_, x2_)\\<rbrakk>\n    \\<Longrightarrow> set_mset (dom_m x2a_) =\n                      set_mset (dom_m A) - (it_ - {xb_})", "by auto"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it - {xb}).\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 2. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 3. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 4. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2); x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 5. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> dom_m A = dom_m x2a\n 6. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>#dom_m A.\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 7. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m A))\n                         \\<subseteq> x1a\n 8. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 9. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2); x1 = FOUND\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_; xb_ \\<in> it_; it_ \\<subseteq> x_;\n     case \\<sigma>_ of\n     (b, \\<V>, A') \\<Rightarrow>\n       set_mset (dom_m A') = set_mset (dom_m A) - it_ \\<and>\n       (\\<forall>i\\<in>set_mset (dom_m A) - it_.\n           the (fmlookup A i) - the (fmlookup A' i)\n           \\<in> More_Modules.ideal polynomial_bool) \\<and>\n       \\<Union>\n        (vars ` set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n       \\<subseteq> \\<V> \\<and>\n       \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n       (b \\<longrightarrow> spec \\<in># ran_m A');\n     \\<sigma>_ = (a_, b_); b_ = (aa_, ba_); xb_ \\<notin># dom_m A;\n     x2_ = (x1a_, x2a_); (a_, aa_, ba_) = (x1_, x2_)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<in>set_mset (dom_m A) - (it_ - {xb_}).\n                         the (fmlookup A i) - the (fmlookup x2a_ i)\n                         \\<in> More_Modules.ideal polynomial_bool", "by auto"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars `\n                           set_mset\n                            (ran_m\n                              (fmrestrict_set (set_mset (dom_m x2a)) A)))\n                         \\<subseteq> x1a\n 2. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 3. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2); x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 4. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> dom_m A = dom_m x2a\n 5. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>#dom_m A.\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 6. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m A))\n                         \\<subseteq> x1a\n 7. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 8. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2); x1 = FOUND\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_; xb_ \\<in> it_; it_ \\<subseteq> x_;\n     case \\<sigma>_ of\n     (b, \\<V>, A') \\<Rightarrow>\n       set_mset (dom_m A') = set_mset (dom_m A) - it_ \\<and>\n       (\\<forall>i\\<in>set_mset (dom_m A) - it_.\n           the (fmlookup A i) - the (fmlookup A' i)\n           \\<in> More_Modules.ideal polynomial_bool) \\<and>\n       \\<Union>\n        (vars ` set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n       \\<subseteq> \\<V> \\<and>\n       \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n       (b \\<longrightarrow> spec \\<in># ran_m A');\n     \\<sigma>_ = (a_, b_); b_ = (aa_, ba_); xb_ \\<notin># dom_m A;\n     x2_ = (x1a_, x2a_); (a_, aa_, ba_) = (x1_, x2_)\\<rbrakk>\n    \\<Longrightarrow> \\<Union>\n                       (vars `\n                        set_mset\n                         (ran_m (fmrestrict_set (set_mset (dom_m x2a_)) A)))\n                      \\<subseteq> x1a_", "by (auto simp add: ran_m_mapsto_upd_notin dom_m_fmrestrict_set' subset_eq)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 2. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2); x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 3. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> dom_m A = dom_m x2a\n 4. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>#dom_m A.\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 5. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m A))\n                         \\<subseteq> x1a\n 6. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 7. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2); x1 = FOUND\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_; xb_ \\<in> it_; it_ \\<subseteq> x_;\n     case \\<sigma>_ of\n     (b, \\<V>, A') \\<Rightarrow>\n       set_mset (dom_m A') = set_mset (dom_m A) - it_ \\<and>\n       (\\<forall>i\\<in>set_mset (dom_m A) - it_.\n           the (fmlookup A i) - the (fmlookup A' i)\n           \\<in> More_Modules.ideal polynomial_bool) \\<and>\n       \\<Union>\n        (vars ` set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n       \\<subseteq> \\<V> \\<and>\n       \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n       (b \\<longrightarrow> spec \\<in># ran_m A');\n     \\<sigma>_ = (a_, b_); b_ = (aa_, ba_); xb_ \\<notin># dom_m A;\n     x2_ = (x1a_, x2a_); (a_, aa_, ba_) = (x1_, x2_)\\<rbrakk>\n    \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a_))\n                      \\<subseteq> x1a_", "by (auto simp add: ran_m_mapsto_upd_notin dom_m_fmrestrict_set' subset_eq)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x xa xb it \\<sigma> a b aa ba x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa; xb \\<in> it; it \\<subseteq> x;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - it \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - it.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); b = (aa, ba); xb \\<notin># dom_m A;\n        x2 = (x1a, x2a); (a, aa, ba) = (x1, x2); x1\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a\n 2. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> dom_m A = dom_m x2a\n 3. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>#dom_m A.\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 4. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m A))\n                         \\<subseteq> x1a\n 5. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 6. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2); x1 = FOUND\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_; xb_ \\<in> it_; it_ \\<subseteq> x_;\n     case \\<sigma>_ of\n     (b, \\<V>, A') \\<Rightarrow>\n       set_mset (dom_m A') = set_mset (dom_m A) - it_ \\<and>\n       (\\<forall>i\\<in>set_mset (dom_m A) - it_.\n           the (fmlookup A i) - the (fmlookup A' i)\n           \\<in> More_Modules.ideal polynomial_bool) \\<and>\n       \\<Union>\n        (vars ` set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n       \\<subseteq> \\<V> \\<and>\n       \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n       (b \\<longrightarrow> spec \\<in># ran_m A');\n     \\<sigma>_ = (a_, b_); b_ = (aa_, ba_); xb_ \\<notin># dom_m A;\n     x2_ = (x1a_, x2a_); (a_, aa_, ba_) = (x1_, x2_); x1_\\<rbrakk>\n    \\<Longrightarrow> spec \\<in># ran_m x2a_", "by auto"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> dom_m A = dom_m x2a\n 2. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>#dom_m A.\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 3. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m A))\n                         \\<subseteq> x1a\n 4. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 5. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2); x1 = FOUND\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_;\n     case \\<sigma>_ of\n     (b, \\<V>, A') \\<Rightarrow>\n       set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n       (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n           the (fmlookup A i) - the (fmlookup A' i)\n           \\<in> More_Modules.ideal polynomial_bool) \\<and>\n       \\<Union>\n        (vars ` set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n       \\<subseteq> \\<V> \\<and>\n       \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n       (b \\<longrightarrow> spec \\<in># ran_m A');\n     \\<sigma>_ = (a_, b_); x2_ = (x1a_, x2a_);\n     (if a_ then FOUND else SUCCESS, b_) = (x1_, x2_);\n     \\<not> is_failed x1_\\<rbrakk>\n    \\<Longrightarrow> dom_m A = dom_m x2a_", "by (auto simp: distinct_set_mset_eq_iff[symmetric] distinct_mset_dom)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<in>#dom_m A.\n                            the (fmlookup A i) - the (fmlookup x2a i)\n                            \\<in> More_Modules.ideal polynomial_bool\n 2. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m A))\n                         \\<subseteq> x1a\n 3. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 4. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2); x1 = FOUND\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_;\n     case \\<sigma>_ of\n     (b, \\<V>, A') \\<Rightarrow>\n       set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n       (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n           the (fmlookup A i) - the (fmlookup A' i)\n           \\<in> More_Modules.ideal polynomial_bool) \\<and>\n       \\<Union>\n        (vars ` set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n       \\<subseteq> \\<V> \\<and>\n       \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n       (b \\<longrightarrow> spec \\<in># ran_m A');\n     \\<sigma>_ = (a_, b_); x2_ = (x1a_, x2a_);\n     (if a_ then FOUND else SUCCESS, b_) = (x1_, x2_);\n     \\<not> is_failed x1_\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<in>#dom_m A.\n                         the (fmlookup A i) - the (fmlookup x2a_ i)\n                         \\<in> More_Modules.ideal polynomial_bool", "by (auto simp: distinct_set_mset_eq_iff[symmetric] distinct_mset_dom)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m A))\n                         \\<subseteq> x1a\n 2. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 3. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2); x1 = FOUND\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_;\n     case \\<sigma>_ of\n     (b, \\<V>, A') \\<Rightarrow>\n       set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n       (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n           the (fmlookup A i) - the (fmlookup A' i)\n           \\<in> More_Modules.ideal polynomial_bool) \\<and>\n       \\<Union>\n        (vars ` set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n       \\<subseteq> \\<V> \\<and>\n       \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n       (b \\<longrightarrow> spec \\<in># ran_m A');\n     \\<sigma>_ = (a_, b_); x2_ = (x1a_, x2a_);\n     (if a_ then FOUND else SUCCESS, b_) = (x1_, x2_);\n     \\<not> is_failed x1_\\<rbrakk>\n    \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> x1a_", "by (auto simp add: ran_m_mapsto_upd_notin dom_m_fmrestrict_set' subset_eq\n       fmlookup_restrict_set_id')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2);\n        \\<not> is_failed x1\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a))\n                         \\<subseteq> x1a\n 2. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2); x1 = FOUND\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_;\n     case \\<sigma>_ of\n     (b, \\<V>, A') \\<Rightarrow>\n       set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n       (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n           the (fmlookup A i) - the (fmlookup A' i)\n           \\<in> More_Modules.ideal polynomial_bool) \\<and>\n       \\<Union>\n        (vars ` set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n       \\<subseteq> \\<V> \\<and>\n       \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n       (b \\<longrightarrow> spec \\<in># ran_m A');\n     \\<sigma>_ = (a_, b_); x2_ = (x1a_, x2a_);\n     (if a_ then FOUND else SUCCESS, b_) = (x1_, x2_);\n     \\<not> is_failed x1_\\<rbrakk>\n    \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m x2a_))\n                      \\<subseteq> x1a_", "by (auto simp add: ran_m_mapsto_upd_notin dom_m_fmrestrict_set' subset_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa \\<sigma> a b x1 x2 x1a x2a.\n       \\<lbrakk>set_mset (dom_m A) \\<subseteq> x \\<and> finite x; True;\n        \\<not> xa;\n        case \\<sigma> of\n        (b, \\<V>, A') \\<Rightarrow>\n          set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n          (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n              the (fmlookup A i) - the (fmlookup A' i)\n              \\<in> More_Modules.ideal polynomial_bool) \\<and>\n          \\<Union>\n           (vars `\n            set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n          \\<subseteq> \\<V> \\<and>\n          \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n          (b \\<longrightarrow> spec \\<in># ran_m A');\n        \\<sigma> = (a, b); x2 = (x1a, x2a);\n        (if a then FOUND else SUCCESS, b) = (x1, x2); x1 = FOUND\\<rbrakk>\n       \\<Longrightarrow> spec \\<in># ran_m x2a", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset (dom_m A) \\<subseteq> x_ \\<and> finite x_; True;\n     \\<not> xa_;\n     case \\<sigma>_ of\n     (b, \\<V>, A') \\<Rightarrow>\n       set_mset (dom_m A') = set_mset (dom_m A) - {} \\<and>\n       (\\<forall>i\\<in>set_mset (dom_m A) - {}.\n           the (fmlookup A i) - the (fmlookup A' i)\n           \\<in> More_Modules.ideal polynomial_bool) \\<and>\n       \\<Union>\n        (vars ` set_mset (ran_m (fmrestrict_set (set_mset (dom_m A')) A)))\n       \\<subseteq> \\<V> \\<and>\n       \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V> \\<and>\n       (b \\<longrightarrow> spec \\<in># ran_m A');\n     \\<sigma>_ = (a_, b_); x2_ = (x1a_, x2a_);\n     (if a_ then FOUND else SUCCESS, b_) = (x1_, x2_); x1_ = FOUND\\<rbrakk>\n    \\<Longrightarrow> spec \\<in># ran_m x2a_", "by (auto simp add: ran_m_mapsto_upd_notin dom_m_fmrestrict_set' subset_eq\n       fmlookup_restrict_set_id')"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \\<open>Full Checker\\<close>"], ["", "definition full_checker\n  :: \\<open>int_poly \\<Rightarrow> (nat, int_poly) fmap \\<Rightarrow> (int_poly, nat,nat) pac_step list \\<Rightarrow> (status \\<times> _) nres\\<close>\n where\n  \\<open>full_checker spec0 A pac = do {\n     spec \\<leftarrow> normalize_poly_spec spec0;\n     (st, \\<V>, A) \\<leftarrow> remap_polys_change_all spec {} A;\n     if is_failed st then\n     RETURN (st, \\<V>, A)\n     else do {\n       \\<V> \\<leftarrow> SPEC(\\<lambda>\\<V>'. \\<V> \\<union> vars spec0 \\<subseteq> \\<V>');\n       PAC_checker spec (\\<V>, A) st pac\n    }\n}\\<close>"], ["", "lemma restricted_ideal_to_mono:\n  \\<open>restricted_ideal_to\\<^sub>I \\<V> I \\<subseteq> restricted_ideal_to\\<^sub>I \\<V>' J \\<Longrightarrow>\n  \\<U> \\<subseteq> \\<V> \\<Longrightarrow>\n   restricted_ideal_to\\<^sub>I \\<U> I \\<subseteq> restricted_ideal_to\\<^sub>I \\<U>  J\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>restricted_ideal_to\\<^sub>I \\<V> I\n             \\<subseteq> restricted_ideal_to\\<^sub>I \\<V>' J;\n     \\<U> \\<subseteq> \\<V>\\<rbrakk>\n    \\<Longrightarrow> restricted_ideal_to\\<^sub>I \\<U> I\n                      \\<subseteq> restricted_ideal_to\\<^sub>I \\<U> J", "by (auto simp: restricted_ideal_to_def)"], ["", "lemma pac_ideal_idemp: \\<open>pac_ideal (pac_ideal A) = pac_ideal A\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. pac_ideal (pac_ideal A) = pac_ideal A", "by (metis dual_order.antisym ideal.span_subset_spanI ideal.span_superset le_sup_iff pac_ideal_def)"], ["", "lemma full_checker_spec:\n  assumes \\<open>(A, A') \\<in> polys_rel\\<close>\n  shows\n      \\<open>full_checker spec A pac \\<le> \\<Down>{((st, G), (st', G')). (st, st') \\<in> status_rel \\<and>\n           (st \\<noteq> FAILED \\<longrightarrow> (G, G') \\<in> polys_rel_full)}\n        (PAC_checker_specification spec (A'))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. full_checker spec A pac\n    \\<le> \\<Down>\n           {((st, G), st', G').\n            (st, st') \\<in> status_rel \\<and>\n            (st \\<noteq> FAILED \\<longrightarrow>\n             (G, G') \\<in> polys_rel_full)}\n           (PAC_checker_specification spec A')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. full_checker spec A pac\n    \\<le> \\<Down>\n           {((st, G), st', G').\n            (st, st') \\<in> status_rel \\<and>\n            (st \\<noteq> FAILED \\<longrightarrow>\n             (G, G') \\<in> polys_rel_full)}\n           (PAC_checker_specification spec A')", "have H: \\<open>set_mset b \\<subseteq> pac_ideal (set_mset (ran_m A)) \\<Longrightarrow>\n       x \\<in> pac_ideal (set_mset b) \\<Longrightarrow> x \\<in> pac_ideal (set_mset A')\\<close> for b x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset b \\<subseteq> pac_ideal (set_mset (ran_m A));\n     x \\<in> pac_ideal (set_mset b)\\<rbrakk>\n    \\<Longrightarrow> x \\<in> pac_ideal (set_mset A')", "using assms"], ["proof (prove)\nusing this:\n  (A, A') \\<in> polys_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset b \\<subseteq> pac_ideal (set_mset (ran_m A));\n     x \\<in> pac_ideal (set_mset b)\\<rbrakk>\n    \\<Longrightarrow> x \\<in> pac_ideal (set_mset A')", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_mset b \\<subseteq> pac_ideal (set_mset (ran_m A));\n     x \\<in> pac_ideal (set_mset b); (A, A') \\<in> polys_rel\\<rbrakk>\n    \\<Longrightarrow> x \\<in> pac_ideal (set_mset A')", "by (drule pac_ideal_mono) (auto simp: polys_rel_def pac_ideal_idemp)"], ["proof (state)\nthis:\n  \\<lbrakk>set_mset ?b \\<subseteq> pac_ideal (set_mset (ran_m A));\n   ?x \\<in> pac_ideal (set_mset ?b)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> pac_ideal (set_mset A')\n\ngoal (1 subgoal):\n 1. full_checker spec A pac\n    \\<le> \\<Down>\n           {((st, G), st', G').\n            (st, st') \\<in> status_rel \\<and>\n            (st \\<noteq> FAILED \\<longrightarrow>\n             (G, G') \\<in> polys_rel_full)}\n           (PAC_checker_specification spec A')", "have 1: \\<open>x \\<in> {(st, \\<V>', A').\n          ( \\<not> is_failed st \\<longrightarrow> pac_ideal (set_mset (ran_m x2)) =\n              pac_ideal (set_mset (ran_m A')) \\<and>\n              \\<Union> (vars ` set_mset (ran_m ABC)) \\<subseteq> \\<V>' \\<and>\n              \\<Union> (vars ` set_mset (ran_m A')) \\<subseteq> \\<V>') \\<and>\n            (st = FOUND \\<longrightarrow> speca \\<in># ran_m A')} \\<Longrightarrow>\n         x = (st, x') \\<Longrightarrow> x' = (\\<V>, Aa) \\<Longrightarrow>((\\<V>', Aa), \\<V>', ran_m Aa) \\<in> polys_rel_full\\<close> for Aa speca x2 st x \\<V>' \\<V> x' ABC"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> {(st, \\<V>', A').\n                      (\\<not> is_failed st \\<longrightarrow>\n                       pac_ideal (set_mset (ran_m x2)) =\n                       pac_ideal (set_mset (ran_m A')) \\<and>\n                       \\<Union> (vars ` set_mset (ran_m ABC))\n                       \\<subseteq> \\<V>' \\<and>\n                       \\<Union> (vars ` set_mset (ran_m A'))\n                       \\<subseteq> \\<V>') \\<and>\n                      (st = FOUND \\<longrightarrow> speca \\<in># ran_m A')};\n     x = (st, x'); x' = (\\<V>, Aa)\\<rbrakk>\n    \\<Longrightarrow> ((\\<V>', Aa), \\<V>', ran_m Aa) \\<in> polys_rel_full", "by (auto simp: polys_rel_def polys_rel_full_def)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> {(st, \\<V>', A').\n                     (\\<not> is_failed st \\<longrightarrow>\n                      pac_ideal (set_mset (ran_m ?x2.0)) =\n                      pac_ideal (set_mset (ran_m A')) \\<and>\n                      \\<Union> (vars ` set_mset (ran_m ?ABC))\n                      \\<subseteq> \\<V>' \\<and>\n                      \\<Union> (vars ` set_mset (ran_m A'))\n                      \\<subseteq> \\<V>') \\<and>\n                     (st = FOUND \\<longrightarrow> ?speca \\<in># ran_m A')};\n   ?x = (?st, ?x'); ?x' = (?\\<V>, ?Aa)\\<rbrakk>\n  \\<Longrightarrow> ((?\\<V>', ?Aa), ?\\<V>', ran_m ?Aa) \\<in> polys_rel_full\n\ngoal (1 subgoal):\n 1. full_checker spec A pac\n    \\<le> \\<Down>\n           {((st, G), st', G').\n            (st, st') \\<in> status_rel \\<and>\n            (st \\<noteq> FAILED \\<longrightarrow>\n             (G, G') \\<in> polys_rel_full)}\n           (PAC_checker_specification spec A')", "have H1: \\<open>\\<And>a aa b xa x x1a x1 x2 speca.\n       vars spec \\<subseteq> x1b \\<Longrightarrow>\n       \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> x1b \\<Longrightarrow>\n       \\<Union> (vars ` set_mset (ran_m x2a)) \\<subseteq> x1b \\<Longrightarrow>\n       restricted_ideal_to\\<^sub>I x1b b \\<subseteq> restricted_ideal_to\\<^sub>I x1b (ran_m x2a) \\<Longrightarrow>\n       xa \\<in> restricted_ideal_to\\<^sub>I (\\<Union> (vars ` set_mset (ran_m A)) \\<union> vars spec) b \\<Longrightarrow>\n       xa \\<in> restricted_ideal_to\\<^sub>I (\\<Union> (vars ` set_mset (ran_m A)) \\<union> vars spec) (ran_m x2a)\\<close>\n    for x1b b xa x2a"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa b xa x x1a x1 x2 speca.\n       \\<lbrakk>vars spec \\<subseteq> x1b;\n        \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> x1b;\n        \\<Union> (vars ` set_mset (ran_m x2a)) \\<subseteq> x1b;\n        restricted_ideal_to\\<^sub>I x1b b\n        \\<subseteq> restricted_ideal_to\\<^sub>I x1b (ran_m x2a);\n        xa \\<in> restricted_ideal_to\\<^sub>I\n                  (\\<Union> (vars ` set_mset (ran_m A)) \\<union> vars spec)\n                  b\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> restricted_ideal_to\\<^sub>I\n                                   (\\<Union>\n                                     (vars ` set_mset (ran_m A)) \\<union>\n                                    vars spec)\n                                   (ran_m x2a)", "by (drule restricted_ideal_to_mono[of _ _ _ _ \\<open>\\<Union> (vars ` set_mset (ran_m A)) \\<union> vars spec\\<close>])\n      auto"], ["proof (state)\nthis:\n  \\<lbrakk>vars spec \\<subseteq> ?x1b2;\n   \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> ?x1b2;\n   \\<Union> (vars ` set_mset (ran_m ?x2a2)) \\<subseteq> ?x1b2;\n   restricted_ideal_to\\<^sub>I ?x1b2 ?b1\n   \\<subseteq> restricted_ideal_to\\<^sub>I ?x1b2 (ran_m ?x2a2);\n   ?xa1\n   \\<in> restricted_ideal_to\\<^sub>I\n          (\\<Union> (vars ` set_mset (ran_m A)) \\<union> vars spec)\n          ?b1\\<rbrakk>\n  \\<Longrightarrow> ?xa1\n                    \\<in> restricted_ideal_to\\<^sub>I\n                           (\\<Union> (vars ` set_mset (ran_m A)) \\<union>\n                            vars spec)\n                           (ran_m ?x2a2)\n\ngoal (1 subgoal):\n 1. full_checker spec A pac\n    \\<le> \\<Down>\n           {((st, G), st', G').\n            (st, st') \\<in> status_rel \\<and>\n            (st \\<noteq> FAILED \\<longrightarrow>\n             (G, G') \\<in> polys_rel_full)}\n           (PAC_checker_specification spec A')", "have H2: \\<open>\\<And>a aa b speca x2 x1a x1b x2a.\n       spec - speca \\<in> More_Modules.ideal polynomial_bool \\<Longrightarrow>\n       vars spec \\<subseteq> x1b \\<Longrightarrow>\n       \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> x1b \\<Longrightarrow>\n       \\<Union> (vars ` set_mset (ran_m x2a)) \\<subseteq> x1b \\<Longrightarrow>\n       speca \\<in> pac_ideal (set_mset (ran_m x2a)) \\<Longrightarrow>\n       restricted_ideal_to\\<^sub>I x1b b \\<subseteq> restricted_ideal_to\\<^sub>I x1b (ran_m x2a) \\<Longrightarrow>\n       spec \\<in> pac_ideal (set_mset (ran_m x2a))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa b speca x2 x1a x1b x2a.\n       \\<lbrakk>spec - speca \\<in> More_Modules.ideal polynomial_bool;\n        vars spec \\<subseteq> x1b;\n        \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> x1b;\n        \\<Union> (vars ` set_mset (ran_m x2a)) \\<subseteq> x1b;\n        speca \\<in> pac_ideal (set_mset (ran_m x2a));\n        restricted_ideal_to\\<^sub>I x1b b\n        \\<subseteq> restricted_ideal_to\\<^sub>I x1b (ran_m x2a)\\<rbrakk>\n       \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (ran_m x2a))", "by (metis (no_types, lifting) group_eq_aux ideal.span_add ideal.span_base in_mono\n        pac_ideal_alt_def sup.cobounded2)"], ["proof (state)\nthis:\n  \\<lbrakk>spec - ?speca2 \\<in> More_Modules.ideal polynomial_bool;\n   vars spec \\<subseteq> ?x1b2;\n   \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> ?x1b2;\n   \\<Union> (vars ` set_mset (ran_m ?x2a2)) \\<subseteq> ?x1b2;\n   ?speca2 \\<in> pac_ideal (set_mset (ran_m ?x2a2));\n   restricted_ideal_to\\<^sub>I ?x1b2 ?b2\n   \\<subseteq> restricted_ideal_to\\<^sub>I ?x1b2 (ran_m ?x2a2)\\<rbrakk>\n  \\<Longrightarrow> spec \\<in> pac_ideal (set_mset (ran_m ?x2a2))\n\ngoal (1 subgoal):\n 1. full_checker spec A pac\n    \\<le> \\<Down>\n           {((st, G), st', G').\n            (st, st') \\<in> status_rel \\<and>\n            (st \\<noteq> FAILED \\<longrightarrow>\n             (G, G') \\<in> polys_rel_full)}\n           (PAC_checker_specification spec A')", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. full_checker spec A pac\n    \\<le> \\<Down>\n           {((st, G), st', G').\n            (st, st') \\<in> status_rel \\<and>\n            (st \\<noteq> FAILED \\<longrightarrow>\n             (G, G') \\<in> polys_rel_full)}\n           (PAC_checker_specification spec A')", "supply[[goals_limit=1]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. full_checker spec A pac\n    \\<le> \\<Down>\n           {((st, G), st', G').\n            (st, st') \\<in> status_rel \\<and>\n            (st \\<noteq> FAILED \\<longrightarrow>\n             (G, G') \\<in> polys_rel_full)}\n           (PAC_checker_specification spec A')", "unfolding full_checker_def normalize_poly_spec_def\n      PAC_checker_specification_def remap_polys_change_all_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>r.\n         spec - r \\<in> More_Modules.ideal polynomial_bool \\<and>\n         vars r \\<subseteq> vars spec) \\<bind>\n    (\\<lambda>speca.\n        SPEC\n         (\\<lambda>(st, \\<V>', A').\n             (\\<not> is_failed st \\<longrightarrow>\n              pac_ideal (set_mset (ran_m A)) =\n              pac_ideal (set_mset (ran_m A')) \\<and>\n              \\<Union> (vars ` set_mset (ran_m A)) \\<subseteq> \\<V>' \\<and>\n              \\<Union> (vars ` set_mset (ran_m A'))\n              \\<subseteq> \\<V>') \\<and>\n             (st = FOUND \\<longrightarrow> speca \\<in># ran_m A')) \\<bind>\n        (\\<lambda>(st, \\<V>, A).\n            if is_failed st then RETURN (st, \\<V>, A)\n            else SPEC ((\\<subseteq>) (\\<V> \\<union> vars spec)) \\<bind>\n                 (\\<lambda>\\<V>. PAC_checker speca (\\<V>, A) st pac)))\n    \\<le> \\<Down>\n           {((st, G), st', G').\n            (st, st') \\<in> status_rel \\<and>\n            (st \\<noteq> FAILED \\<longrightarrow>\n             (G, G') \\<in> polys_rel_full)}\n           (SPEC\n             (\\<lambda>(b, \\<V>, B).\n                 (\\<not> is_failed b \\<longrightarrow>\n                  restricted_ideal_to\\<^sub>I\n                   (\\<Union> (vars ` set_mset A') \\<union> vars spec) B\n                  \\<subseteq> restricted_ideal_to\\<^sub>I\n                               (\\<Union> (vars ` set_mset A') \\<union>\n                                vars spec)\n                               A') \\<and>\n                 (is_found b \\<longrightarrow>\n                  spec \\<in> pac_ideal (set_mset A'))))", "apply (refine_vcg PAC_checker_PAC_checker_specification2[THEN order_trans, of _ _]\n      lhs_step_If)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>speca x x1 x2 x1a x2a.\n       \\<lbrakk>speca\n                \\<in> {r. spec - r\n                          \\<in> More_Modules.ideal polynomial_bool \\<and>\n                          vars r \\<subseteq> vars spec};\n        x \\<in> {(st, \\<V>', A').\n                 (\\<not> is_failed st \\<longrightarrow>\n                  pac_ideal (set_mset (ran_m A)) =\n                  pac_ideal (set_mset (ran_m A')) \\<and>\n                  \\<Union> (vars ` set_mset (ran_m A))\n                  \\<subseteq> \\<V>' \\<and>\n                  \\<Union> (vars ` set_mset (ran_m A'))\n                  \\<subseteq> \\<V>') \\<and>\n                 (st = FOUND \\<longrightarrow> speca \\<in># ran_m A')};\n        x2 = (x1a, x2a); x = (x1, x2); is_failed x1\\<rbrakk>\n       \\<Longrightarrow> RETURN (x1, x1a, x2a)\n                         \\<le> \\<Down>\n                                {((st, G), st', G').\n                                 (st, st') \\<in> status_rel \\<and>\n                                 (st \\<noteq> FAILED \\<longrightarrow>\n                                  (G, G') \\<in> polys_rel_full)}\n                                (SPEC\n                                  (\\<lambda>(b, \\<V>, B).\n(\\<not> is_failed b \\<longrightarrow>\n restricted_ideal_to\\<^sub>I\n  (\\<Union> (vars ` set_mset A') \\<union> vars spec) B\n \\<subseteq> restricted_ideal_to\\<^sub>I\n              (\\<Union> (vars ` set_mset A') \\<union> vars spec) A') \\<and>\n(is_found b \\<longrightarrow> spec \\<in> pac_ideal (set_mset A'))))\nA total of 6 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>speca_\n             \\<in> {r. spec - r\n                       \\<in> More_Modules.ideal polynomial_bool \\<and>\n                       vars r \\<subseteq> vars spec};\n     x_ \\<in> {(st, \\<V>', A').\n               (\\<not> is_failed st \\<longrightarrow>\n                pac_ideal (set_mset (ran_m A)) =\n                pac_ideal (set_mset (ran_m A')) \\<and>\n                \\<Union> (vars ` set_mset (ran_m A))\n                \\<subseteq> \\<V>' \\<and>\n                \\<Union> (vars ` set_mset (ran_m A'))\n                \\<subseteq> \\<V>') \\<and>\n               (st = FOUND \\<longrightarrow> speca_ \\<in># ran_m A')};\n     x2_ = (x1a_, x2a_); x_ = (x1_, x2_); is_failed x1_\\<rbrakk>\n    \\<Longrightarrow> RETURN (x1_, x1a_, x2a_)\n                      \\<le> \\<Down>\n                             {((st, G), st', G').\n                              (st, st') \\<in> status_rel \\<and>\n                              (st \\<noteq> FAILED \\<longrightarrow>\n                               (G, G') \\<in> polys_rel_full)}\n                             (SPEC\n                               (\\<lambda>(b, \\<V>, B).\n                                   (\\<not> is_failed b \\<longrightarrow>\n                                    restricted_ideal_to\\<^sub>I\n                                     (\\<Union> (vars ` set_mset A') \\<union>\nvars spec)\n                                     B\n                                    \\<subseteq> restricted_ideal_to\\<^sub>I\n           (\\<Union> (vars ` set_mset A') \\<union> vars spec) A') \\<and>\n                                   (is_found b \\<longrightarrow>\n                                    spec \\<in> pac_ideal (set_mset A'))))", "by (auto simp: is_failed_def RETURN_RES_refine_iff)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>speca x x1 x2 x1a x2a \\<V>.\n       \\<lbrakk>speca\n                \\<in> {r. spec - r\n                          \\<in> More_Modules.ideal polynomial_bool \\<and>\n                          vars r \\<subseteq> vars spec};\n        x \\<in> {(st, \\<V>', A').\n                 (\\<not> is_failed st \\<longrightarrow>\n                  pac_ideal (set_mset (ran_m A)) =\n                  pac_ideal (set_mset (ran_m A')) \\<and>\n                  \\<Union> (vars ` set_mset (ran_m A))\n                  \\<subseteq> \\<V>' \\<and>\n                  \\<Union> (vars ` set_mset (ran_m A'))\n                  \\<subseteq> \\<V>') \\<and>\n                 (st = FOUND \\<longrightarrow> speca \\<in># ran_m A')};\n        x2 = (x1a, x2a); x = (x1, x2); \\<not> is_failed x1;\n        \\<V> \\<in> Collect ((\\<subseteq>) (x1a \\<union> vars spec))\\<rbrakk>\n       \\<Longrightarrow> ((\\<V>, x2a), ?B25 speca x x1 x2 x1a x2a \\<V>)\n                         \\<in> polys_rel_full\nA total of 5 subgoals...", "apply (rule 1; assumption)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>speca x x1 x2 x1a x2a \\<V>.\n       \\<lbrakk>speca\n                \\<in> {r. spec - r\n                          \\<in> More_Modules.ideal polynomial_bool \\<and>\n                          vars r \\<subseteq> vars spec};\n        x \\<in> {(st, \\<V>', A').\n                 (\\<not> is_failed st \\<longrightarrow>\n                  pac_ideal (set_mset (ran_m A)) =\n                  pac_ideal (set_mset (ran_m A')) \\<and>\n                  \\<Union> (vars ` set_mset (ran_m A))\n                  \\<subseteq> \\<V>' \\<and>\n                  \\<Union> (vars ` set_mset (ran_m A'))\n                  \\<subseteq> \\<V>') \\<and>\n                 (st = FOUND \\<longrightarrow> speca \\<in># ran_m A')};\n        x2 = (x1a, x2a); x = (x1, x2); \\<not> is_failed x1;\n        \\<V> \\<in> Collect ((\\<subseteq>) (x1a \\<union> vars spec));\n        x1 = FOUND\\<rbrakk>\n       \\<Longrightarrow> speca\n                         \\<in> pac_ideal (set_mset (snd (\\<V>, ran_m x2a)))\nA total of 4 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>speca_\n             \\<in> {r. spec - r\n                       \\<in> More_Modules.ideal polynomial_bool \\<and>\n                       vars r \\<subseteq> vars spec};\n     x_ \\<in> {(st, \\<V>', A').\n               (\\<not> is_failed st \\<longrightarrow>\n                pac_ideal (set_mset (ran_m A)) =\n                pac_ideal (set_mset (ran_m A')) \\<and>\n                \\<Union> (vars ` set_mset (ran_m A))\n                \\<subseteq> \\<V>' \\<and>\n                \\<Union> (vars ` set_mset (ran_m A'))\n                \\<subseteq> \\<V>') \\<and>\n               (st = FOUND \\<longrightarrow> speca_ \\<in># ran_m A')};\n     x2_ = (x1a_, x2a_); x_ = (x1_, x2_); \\<not> is_failed x1_;\n     \\<V>_ \\<in> Collect ((\\<subseteq>) (x1a_ \\<union> vars spec));\n     x1_ = FOUND\\<rbrakk>\n    \\<Longrightarrow> speca_\n                      \\<in> pac_ideal (set_mset (snd (\\<V>_, ran_m x2a_)))", "using fmap_ext assms"], ["proof (prove)\nusing this:\n  (\\<And>x. fmlookup ?m x = fmlookup ?n x) \\<Longrightarrow> ?m = ?n\n  (A, A') \\<in> polys_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>speca_\n             \\<in> {r. spec - r\n                       \\<in> More_Modules.ideal polynomial_bool \\<and>\n                       vars r \\<subseteq> vars spec};\n     x_ \\<in> {(st, \\<V>', A').\n               (\\<not> is_failed st \\<longrightarrow>\n                pac_ideal (set_mset (ran_m A)) =\n                pac_ideal (set_mset (ran_m A')) \\<and>\n                \\<Union> (vars ` set_mset (ran_m A))\n                \\<subseteq> \\<V>' \\<and>\n                \\<Union> (vars ` set_mset (ran_m A'))\n                \\<subseteq> \\<V>') \\<and>\n               (st = FOUND \\<longrightarrow> speca_ \\<in># ran_m A')};\n     x2_ = (x1a_, x2a_); x_ = (x1_, x2_); \\<not> is_failed x1_;\n     \\<V>_ \\<in> Collect ((\\<subseteq>) (x1a_ \\<union> vars spec));\n     x1_ = FOUND\\<rbrakk>\n    \\<Longrightarrow> speca_\n                      \\<in> pac_ideal (set_mset (snd (\\<V>_, ran_m x2a_)))", "by (auto simp: polys_rel_def ran_m_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>speca x x1 x2 x1a x2a \\<V>.\n       \\<lbrakk>speca\n                \\<in> {r. spec - r\n                          \\<in> More_Modules.ideal polynomial_bool \\<and>\n                          vars r \\<subseteq> vars spec};\n        x \\<in> {(st, \\<V>', A').\n                 (\\<not> is_failed st \\<longrightarrow>\n                  pac_ideal (set_mset (ran_m A)) =\n                  pac_ideal (set_mset (ran_m A')) \\<and>\n                  \\<Union> (vars ` set_mset (ran_m A))\n                  \\<subseteq> \\<V>' \\<and>\n                  \\<Union> (vars ` set_mset (ran_m A'))\n                  \\<subseteq> \\<V>') \\<and>\n                 (st = FOUND \\<longrightarrow> speca \\<in># ran_m A')};\n        x2 = (x1a, x2a); x = (x1, x2); \\<not> is_failed x1;\n        \\<V> \\<in> Collect ((\\<subseteq>) (x1a \\<union> vars spec))\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\n                          (vars ` set_mset (ran_m (snd (\\<V>, x2a))))\n                         \\<subseteq> fst (\\<V>, ran_m x2a)\nA total of 3 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>speca_\n             \\<in> {r. spec - r\n                       \\<in> More_Modules.ideal polynomial_bool \\<and>\n                       vars r \\<subseteq> vars spec};\n     x_ \\<in> {(st, \\<V>', A').\n               (\\<not> is_failed st \\<longrightarrow>\n                pac_ideal (set_mset (ran_m A)) =\n                pac_ideal (set_mset (ran_m A')) \\<and>\n                \\<Union> (vars ` set_mset (ran_m A))\n                \\<subseteq> \\<V>' \\<and>\n                \\<Union> (vars ` set_mset (ran_m A'))\n                \\<subseteq> \\<V>') \\<and>\n               (st = FOUND \\<longrightarrow> speca_ \\<in># ran_m A')};\n     x2_ = (x1a_, x2a_); x_ = (x1_, x2_); \\<not> is_failed x1_;\n     \\<V>_ \\<in> Collect ((\\<subseteq>) (x1a_ \\<union> vars spec))\\<rbrakk>\n    \\<Longrightarrow> \\<Union> (vars ` set_mset (ran_m (snd (\\<V>_, x2a_))))\n                      \\<subseteq> fst (\\<V>_, ran_m x2a_)", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>speca x x1 x2 x1a x2a \\<V>.\n       \\<lbrakk>speca\n                \\<in> {r. spec - r\n                          \\<in> More_Modules.ideal polynomial_bool \\<and>\n                          vars r \\<subseteq> vars spec};\n        x \\<in> {(st, \\<V>', A').\n                 (\\<not> is_failed st \\<longrightarrow>\n                  pac_ideal (set_mset (ran_m A)) =\n                  pac_ideal (set_mset (ran_m A')) \\<and>\n                  \\<Union> (vars ` set_mset (ran_m A))\n                  \\<subseteq> \\<V>' \\<and>\n                  \\<Union> (vars ` set_mset (ran_m A'))\n                  \\<subseteq> \\<V>') \\<and>\n                 (st = FOUND \\<longrightarrow> speca \\<in># ran_m A')};\n        x2 = (x1a, x2a); x = (x1, x2); \\<not> is_failed x1;\n        \\<V> \\<in> Collect ((\\<subseteq>) (x1a \\<union> vars spec))\\<rbrakk>\n       \\<Longrightarrow> vars speca \\<subseteq> fst (\\<V>, ran_m x2a)\nA total of 2 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>speca_\n             \\<in> {r. spec - r\n                       \\<in> More_Modules.ideal polynomial_bool \\<and>\n                       vars r \\<subseteq> vars spec};\n     x_ \\<in> {(st, \\<V>', A').\n               (\\<not> is_failed st \\<longrightarrow>\n                pac_ideal (set_mset (ran_m A)) =\n                pac_ideal (set_mset (ran_m A')) \\<and>\n                \\<Union> (vars ` set_mset (ran_m A))\n                \\<subseteq> \\<V>' \\<and>\n                \\<Union> (vars ` set_mset (ran_m A'))\n                \\<subseteq> \\<V>') \\<and>\n               (st = FOUND \\<longrightarrow> speca_ \\<in># ran_m A')};\n     x2_ = (x1a_, x2a_); x_ = (x1_, x2_); \\<not> is_failed x1_;\n     \\<V>_ \\<in> Collect ((\\<subseteq>) (x1a_ \\<union> vars spec))\\<rbrakk>\n    \\<Longrightarrow> vars speca_ \\<subseteq> fst (\\<V>_, ran_m x2a_)", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>speca x x1 x2 x1a x2a \\<V>.\n       \\<lbrakk>speca\n                \\<in> {r. spec - r\n                          \\<in> More_Modules.ideal polynomial_bool \\<and>\n                          vars r \\<subseteq> vars spec};\n        x \\<in> {(st, \\<V>', A').\n                 (\\<not> is_failed st \\<longrightarrow>\n                  pac_ideal (set_mset (ran_m A)) =\n                  pac_ideal (set_mset (ran_m A')) \\<and>\n                  \\<Union> (vars ` set_mset (ran_m A))\n                  \\<subseteq> \\<V>' \\<and>\n                  \\<Union> (vars ` set_mset (ran_m A'))\n                  \\<subseteq> \\<V>') \\<and>\n                 (st = FOUND \\<longrightarrow> speca \\<in># ran_m A')};\n        x2 = (x1a, x2a); x = (x1, x2); \\<not> is_failed x1;\n        \\<V> \\<in> Collect ((\\<subseteq>) (x1a \\<union> vars spec))\\<rbrakk>\n       \\<Longrightarrow> \\<Down>\n                          (status_rel \\<times>\\<^sub>r polys_rel_full)\n                          (PAC_checker_specification2 speca\n                            (\\<V>, ran_m x2a))\n                         \\<le> \\<Down>\n                                {((st, G), st', G').\n                                 (st, st') \\<in> status_rel \\<and>\n                                 (st \\<noteq> FAILED \\<longrightarrow>\n                                  (G, G') \\<in> polys_rel_full)}\n                                (SPEC\n                                  (\\<lambda>(b, \\<V>, B).\n(\\<not> is_failed b \\<longrightarrow>\n restricted_ideal_to\\<^sub>I\n  (\\<Union> (vars ` set_mset A') \\<union> vars spec) B\n \\<subseteq> restricted_ideal_to\\<^sub>I\n              (\\<Union> (vars ` set_mset A') \\<union> vars spec) A') \\<and>\n(is_found b \\<longrightarrow> spec \\<in> pac_ideal (set_mset A'))))", "subgoal for speca x1 x2 x x1a x2a x1b"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>speca\n             \\<in> {r. spec - r\n                       \\<in> More_Modules.ideal polynomial_bool \\<and>\n                       vars r \\<subseteq> vars spec};\n     x1 \\<in> {(st, \\<V>', A').\n               (\\<not> is_failed st \\<longrightarrow>\n                pac_ideal (set_mset (ran_m A)) =\n                pac_ideal (set_mset (ran_m A')) \\<and>\n                \\<Union> (vars ` set_mset (ran_m A))\n                \\<subseteq> \\<V>' \\<and>\n                \\<Union> (vars ` set_mset (ran_m A'))\n                \\<subseteq> \\<V>') \\<and>\n               (st = FOUND \\<longrightarrow> speca \\<in># ran_m A')};\n     x = (x1a, x2a); x1 = (x2, x); \\<not> is_failed x2;\n     x1b \\<in> Collect ((\\<subseteq>) (x1a \\<union> vars spec))\\<rbrakk>\n    \\<Longrightarrow> \\<Down> (status_rel \\<times>\\<^sub>r polys_rel_full)\n                       (PAC_checker_specification2 speca (x1b, ran_m x2a))\n                      \\<le> \\<Down>\n                             {((st, G), st', G').\n                              (st, st') \\<in> status_rel \\<and>\n                              (st \\<noteq> FAILED \\<longrightarrow>\n                               (G, G') \\<in> polys_rel_full)}\n                             (SPEC\n                               (\\<lambda>(b, \\<V>, B).\n                                   (\\<not> is_failed b \\<longrightarrow>\n                                    restricted_ideal_to\\<^sub>I\n                                     (\\<Union> (vars ` set_mset A') \\<union>\nvars spec)\n                                     B\n                                    \\<subseteq> restricted_ideal_to\\<^sub>I\n           (\\<Union> (vars ` set_mset A') \\<union> vars spec) A') \\<and>\n                                   (is_found b \\<longrightarrow>\n                                    spec \\<in> pac_ideal (set_mset A'))))", "apply (rule ref_two_step[OF conc_fun_R_mono])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>speca\n             \\<in> {r. spec - r\n                       \\<in> More_Modules.ideal polynomial_bool \\<and>\n                       vars r \\<subseteq> vars spec};\n     x1 \\<in> {(st, \\<V>', A').\n               (\\<not> is_failed st \\<longrightarrow>\n                pac_ideal (set_mset (ran_m A)) =\n                pac_ideal (set_mset (ran_m A')) \\<and>\n                \\<Union> (vars ` set_mset (ran_m A))\n                \\<subseteq> \\<V>' \\<and>\n                \\<Union> (vars ` set_mset (ran_m A'))\n                \\<subseteq> \\<V>') \\<and>\n               (st = FOUND \\<longrightarrow> speca \\<in># ran_m A')};\n     x = (x1a, x2a); x1 = (x2, x); \\<not> is_failed x2;\n     x1b \\<in> Collect ((\\<subseteq>) (x1a \\<union> vars spec))\\<rbrakk>\n    \\<Longrightarrow> status_rel \\<times>\\<^sub>r polys_rel_full\n                      \\<subseteq> {((st, G), st', G').\n                                   (st, st') \\<in> status_rel \\<and>\n                                   (st \\<noteq> FAILED \\<longrightarrow>\n                                    (G, G') \\<in> polys_rel_full)}\nA total of 2 subgoals...", "apply auto[]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>speca\n             \\<in> {r. spec - r\n                       \\<in> More_Modules.ideal polynomial_bool \\<and>\n                       vars r \\<subseteq> vars spec};\n     x1 \\<in> {(st, \\<V>', A').\n               (\\<not> is_failed st \\<longrightarrow>\n                pac_ideal (set_mset (ran_m A)) =\n                pac_ideal (set_mset (ran_m A')) \\<and>\n                \\<Union> (vars ` set_mset (ran_m A))\n                \\<subseteq> \\<V>' \\<and>\n                \\<Union> (vars ` set_mset (ran_m A'))\n                \\<subseteq> \\<V>') \\<and>\n               (st = FOUND \\<longrightarrow> speca \\<in># ran_m A')};\n     x = (x1a, x2a); x1 = (x2, x); \\<not> is_failed x2;\n     x1b \\<in> Collect ((\\<subseteq>) (x1a \\<union> vars spec))\\<rbrakk>\n    \\<Longrightarrow> PAC_checker_specification2 speca (x1b, ran_m x2a)\n                      \\<le> SPEC\n                             (\\<lambda>(b, \\<V>, B).\n                                 (\\<not> is_failed b \\<longrightarrow>\n                                  restricted_ideal_to\\<^sub>I\n                                   (\\<Union> (vars ` set_mset A') \\<union>\n                                    vars spec)\n                                   B\n                                  \\<subseteq> restricted_ideal_to\\<^sub>I\n         (\\<Union> (vars ` set_mset A') \\<union> vars spec) A') \\<and>\n                                 (is_found b \\<longrightarrow>\n                                  spec \\<in> pac_ideal (set_mset A')))", "using assms"], ["proof (prove)\nusing this:\n  (A, A') \\<in> polys_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>speca\n             \\<in> {r. spec - r\n                       \\<in> More_Modules.ideal polynomial_bool \\<and>\n                       vars r \\<subseteq> vars spec};\n     x1 \\<in> {(st, \\<V>', A').\n               (\\<not> is_failed st \\<longrightarrow>\n                pac_ideal (set_mset (ran_m A)) =\n                pac_ideal (set_mset (ran_m A')) \\<and>\n                \\<Union> (vars ` set_mset (ran_m A))\n                \\<subseteq> \\<V>' \\<and>\n                \\<Union> (vars ` set_mset (ran_m A'))\n                \\<subseteq> \\<V>') \\<and>\n               (st = FOUND \\<longrightarrow> speca \\<in># ran_m A')};\n     x = (x1a, x2a); x1 = (x2, x); \\<not> is_failed x2;\n     x1b \\<in> Collect ((\\<subseteq>) (x1a \\<union> vars spec))\\<rbrakk>\n    \\<Longrightarrow> PAC_checker_specification2 speca (x1b, ran_m x2a)\n                      \\<le> SPEC\n                             (\\<lambda>(b, \\<V>, B).\n                                 (\\<not> is_failed b \\<longrightarrow>\n                                  restricted_ideal_to\\<^sub>I\n                                   (\\<Union> (vars ` set_mset A') \\<union>\n                                    vars spec)\n                                   B\n                                  \\<subseteq> restricted_ideal_to\\<^sub>I\n         (\\<Union> (vars ` set_mset A') \\<union> vars spec) A') \\<and>\n                                 (is_found b \\<longrightarrow>\n                                  spec \\<in> pac_ideal (set_mset A')))", "by (auto simp add: PAC_checker_specification_spec_def conc_fun_RES polys_rel_def H1 H2\n          polys_rel_full_def\n          dest!: rtranclp_PAC_Format_subset_ideal dest: is_failed_is_success_completeD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  full_checker spec A pac\n  \\<le> \\<Down>\n         {((st, G), st', G').\n          (st, st') \\<in> status_rel \\<and>\n          (st \\<noteq> FAILED \\<longrightarrow>\n           (G, G') \\<in> polys_rel_full)}\n         (PAC_checker_specification spec A')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma full_checker_spec':\n  shows\n    \\<open>(uncurry2 full_checker, uncurry2 (\\<lambda>spec A _. PAC_checker_specification spec A)) \\<in>\n       (Id \\<times>\\<^sub>r polys_rel) \\<times>\\<^sub>r Id \\<rightarrow>\\<^sub>f \\<langle>{((st, G), (st', G')). (st, st') \\<in> status_rel \\<and>\n           (st \\<noteq> FAILED \\<longrightarrow> (G, G') \\<in> polys_rel_full)}\\<rangle>nres_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (uncurry2 full_checker,\n     uncurry2 (\\<lambda>spec A _. PAC_checker_specification spec A))\n    \\<in> (Id \\<times>\\<^sub>r polys_rel) \\<times>\\<^sub>r\n          Id \\<rightarrow>\\<^sub>f \\<langle>{((st, G), st', G').\n       (st, st') \\<in> status_rel \\<and>\n       (st \\<noteq> FAILED \\<longrightarrow>\n        (G, G') \\<in> polys_rel_full)}\\<rangle>nres_rel", "using full_checker_spec"], ["proof (prove)\nusing this:\n  (?A, ?A') \\<in> polys_rel \\<Longrightarrow>\n  full_checker ?spec ?A ?pac\n  \\<le> \\<Down>\n         {((st, G), st', G').\n          (st, st') \\<in> status_rel \\<and>\n          (st \\<noteq> FAILED \\<longrightarrow>\n           (G, G') \\<in> polys_rel_full)}\n         (PAC_checker_specification ?spec ?A')\n\ngoal (1 subgoal):\n 1. (uncurry2 full_checker,\n     uncurry2 (\\<lambda>spec A _. PAC_checker_specification spec A))\n    \\<in> (Id \\<times>\\<^sub>r polys_rel) \\<times>\\<^sub>r\n          Id \\<rightarrow>\\<^sub>f \\<langle>{((st, G), st', G').\n       (st, st') \\<in> status_rel \\<and>\n       (st \\<noteq> FAILED \\<longrightarrow>\n        (G, G') \\<in> polys_rel_full)}\\<rangle>nres_rel", "by (auto intro!: frefI nres_relI)"], ["", "end"]]}