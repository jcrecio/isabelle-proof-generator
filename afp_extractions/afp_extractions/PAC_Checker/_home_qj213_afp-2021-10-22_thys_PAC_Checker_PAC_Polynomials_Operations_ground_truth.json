{"file_name": "/home/qj213/afp-2021-10-22/thys/PAC_Checker/PAC_Polynomials_Operations.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/PAC_Checker", "problem_names": ["lemma nonzero_coeffs_simps[simp]:\n  \\<open>nonzero_coeffs {#}\\<close>\n  \\<open>nonzero_coeffs (add_mset (xs, n) a) \\<longleftrightarrow> nonzero_coeffs a \\<and> n \\<noteq> 0\\<close>", "lemma nonzero_coeffsD:\n  \\<open>nonzero_coeffs a \\<Longrightarrow> (x, n) \\<in># a \\<Longrightarrow> n \\<noteq> 0\\<close>", "lemma sorted_poly_list_rel_ConsD:\n  \\<open>((ys, n) # p, a) \\<in> sorted_poly_list_rel S \\<Longrightarrow> (p, remove1_mset (mset ys, n) a) \\<in> sorted_poly_list_rel S \\<and>\n    (mset ys, n) \\<in># a \\<and> (\\<forall>x \\<in> set p. S ys (fst x)) \\<and> sorted_wrt (rel2p var_order_rel) ys \\<and>\n    distinct ys \\<and> ys \\<notin> set (map fst p) \\<and> n \\<noteq> 0 \\<and> nonzero_coeffs a\\<close>", "lemma sorted_poly_list_rel_Cons_iff:\n  \\<open>((ys, n) # p, a) \\<in> sorted_poly_list_rel S \\<longleftrightarrow> (p, remove1_mset (mset ys, n) a) \\<in> sorted_poly_list_rel S \\<and>\n    (mset ys, n) \\<in># a \\<and> (\\<forall>x \\<in> set p. S ys (fst x)) \\<and> sorted_wrt (rel2p var_order_rel) ys \\<and>\n    distinct ys \\<and> ys \\<notin> set (map fst p) \\<and> n \\<noteq> 0 \\<and> nonzero_coeffs a\\<close>", "lemma sorted_repeat_poly_list_rel_ConsD:\n  \\<open>((ys, n) # p, a) \\<in> sorted_repeat_poly_list_rel S \\<Longrightarrow> (p, remove1_mset (mset ys, n) a) \\<in> sorted_repeat_poly_list_rel S \\<and>\n    (mset ys, n) \\<in># a \\<and> (\\<forall>x \\<in> set p. S ys (fst x)) \\<and> sorted_wrt (rel2p var_order_rel) ys \\<and>\n    distinct ys \\<and> n \\<noteq> 0 \\<and> nonzero_coeffs a\\<close>", "lemma sorted_repeat_poly_list_rel_Cons_iff:\n  \\<open>((ys, n) # p, a) \\<in> sorted_repeat_poly_list_rel S \\<longleftrightarrow> (p, remove1_mset (mset ys, n) a) \\<in> sorted_repeat_poly_list_rel S \\<and>\n    (mset ys, n) \\<in># a \\<and> (\\<forall>x \\<in> set p. S ys (fst x)) \\<and> sorted_wrt (rel2p var_order_rel) ys \\<and>\n    distinct ys \\<and> n \\<noteq> 0 \\<and> nonzero_coeffs a\\<close>", "lemma add_poly_p_add_mset_sum_0:\n   \\<open>n + m = 0 \\<Longrightarrow>add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n           add_poly_p\\<^sup>*\\<^sup>*\n            (add_mset (mset ys, n) A, add_mset (mset ys, m) Aa, {#})\n            ({#}, {#}, r)\\<close>", "lemma monoms_add_poly_l'D:\n  \\<open>(aa, ba) \\<in> set (add_poly_l' x) \\<Longrightarrow> aa \\<in> fst ` set (fst x) \\<or> aa \\<in> fst ` set (snd x)\\<close>", "lemma add_poly_p_add_to_result:\n  \\<open>add_poly_p\\<^sup>*\\<^sup>* (A, B, r) (A', B', r') \\<Longrightarrow>\n       add_poly_p\\<^sup>*\\<^sup>*\n        (A, B, p + r) (A', B', p + r')\\<close>", "lemma add_poly_p_add_mset_comb:\n  \\<open>add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n       add_poly_p\\<^sup>*\\<^sup>*\n        (add_mset (xs, n) A, Aa, {#})\n        ({#}, {#}, add_mset (xs, n) r)\\<close>", "lemma add_poly_p_add_mset_comb2:\n  \\<open>add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n       add_poly_p\\<^sup>*\\<^sup>*\n        (add_mset (ys, n) A, add_mset (ys, m) Aa, {#})\n        ({#}, {#}, add_mset (ys, n + m) r)\\<close>", "lemma add_poly_p_add_mset_comb3:\n  \\<open>add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n       add_poly_p\\<^sup>*\\<^sup>*\n        (A, add_mset (ys, m) Aa, {#})\n        ({#}, {#}, add_mset (ys, m) r)\\<close>", "lemma total_on_lexord:\n  \\<open>Relation.total_on UNIV R \\<Longrightarrow> Relation.total_on UNIV (lexord R)\\<close>", "lemma antisym_lexord:\n  \\<open>antisym R \\<Longrightarrow> irrefl R \\<Longrightarrow> antisym (lexord R)\\<close>", "lemma less_than_char_linear:\n  \\<open>(a, b) \\<in> less_than_char \\<or>\n           a = b \\<or> (b, a) \\<in> less_than_char\\<close>", "lemma total_on_lexord_less_than_char_linear:\n  \\<open>xs \\<noteq> ys \\<Longrightarrow> (xs, ys) \\<notin> lexord (lexord less_than_char) \\<longleftrightarrow>\n       (ys, xs) \\<in> lexord (lexord less_than_char)\\<close>", "lemma sorted_poly_list_rel_nonzeroD:\n  \\<open>(p, r) \\<in> sorted_poly_list_rel term_order \\<Longrightarrow>\n       nonzero_coeffs (r)\\<close>\n  \\<open>(p, r) \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char))) \\<Longrightarrow>\n       nonzero_coeffs (r)\\<close>", "lemma add_poly_l'_add_poly_p:\n  assumes \\<open>(pq, pq') \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel\\<close>\n  shows \\<open>\\<exists>r. (add_poly_l' pq, r) \\<in> sorted_poly_rel \\<and>\n                        add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#}) ({#}, {#}, r)\\<close>", "lemma add_poly_l_add_poly:\n  \\<open>add_poly_l x = RETURN (add_poly_l' x)\\<close>", "lemma add_poly_l_spec:\n  \\<open>(add_poly_l, uncurry (\\<lambda>p q. SPEC(\\<lambda>r. add_poly_p\\<^sup>*\\<^sup>* (p, q, {#}) ({#}, {#}, r)))) \\<in>\n    sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel \\<rightarrow>\\<^sub>f \\<langle>sorted_poly_rel\\<rangle>nres_rel\\<close>", "lemma sort_poly_spec_id:\n  assumes \\<open>(p, p') \\<in> unsorted_poly_rel\\<close>\n  shows \\<open>sort_poly_spec p \\<le> \\<Down> (sorted_repeat_poly_rel) (RETURN p')\\<close>", "lemma term_poly_list_rel_empty_iff[simp]:\n  \\<open>([], q') \\<in> term_poly_list_rel \\<longleftrightarrow> q' = {#}\\<close>", "lemma mset_eqD_set_mset: \\<open>mset xs = A \\<Longrightarrow> set xs = set_mset A\\<close>", "lemma term_poly_list_rel_Cons_iff:\n  \\<open>(y # p, p') \\<in> term_poly_list_rel \\<longleftrightarrow>\n    (p, remove1_mset y p') \\<in> term_poly_list_rel \\<and>\n    y \\<in># p' \\<and> y \\<notin> set p \\<and> y \\<notin># remove1_mset y p' \\<and>\n  (\\<forall>x\\<in>#mset p. (y, x) \\<in> var_order_rel)\\<close>", "lemma var_order_rel_antisym[simp]:\n  \\<open>(y, y) \\<notin> var_order_rel\\<close>", "lemma term_poly_list_rel_remdups_mset:\n  \\<open>(p, p') \\<in> term_poly_list_rel \\<Longrightarrow>\n    (p, remdups_mset p') \\<in> term_poly_list_rel\\<close>", "lemma var_notin_notin_mult_monomsD:\n  \\<open>y \\<in> set (mult_monoms p q) \\<Longrightarrow> y \\<in> set p \\<or> y \\<in> set q\\<close>", "lemma term_poly_list_rel_set_mset:\n  \\<open>(p, q) \\<in> term_poly_list_rel \\<Longrightarrow> set p = set_mset q\\<close>", "lemma mult_monoms_spec:\n  \\<open>(mult_monoms, (\\<lambda>a b. remdups_mset (a + b))) \\<in> term_poly_list_rel \\<rightarrow> term_poly_list_rel \\<rightarrow> term_poly_list_rel\\<close>", "lemma map_append_alt_def:\n  \\<open>map_append f b xs = map f xs @ b\\<close>", "lemma foldl_append_empty:\n  \\<open>NO_MATCH [] xs \\<Longrightarrow> foldl (\\<lambda>b x. f x @ b) xs p = foldl (\\<lambda>b x. f x @ b) [] p @ xs\\<close>", "lemma poly_list_rel_empty_iff[simp]:\n  \\<open>([], r) \\<in> poly_list_rel R \\<longleftrightarrow> r = {#}\\<close>", "lemma mult_poly_raw_simp[simp]:\n  \\<open>mult_poly_raw [] q = []\\<close>\n  \\<open>mult_poly_raw (x # p) q = mult_poly_raw p q @ map (mult_monomials x) q\\<close>", "lemma sorted_poly_list_relD:\n  \\<open>(q, q') \\<in> sorted_poly_list_rel R \\<Longrightarrow> q' = (\\<lambda>(a, b). (mset a, b)) `# mset q\\<close>", "lemma list_all2_in_set_ExD:\n  \\<open>list_all2 R p q \\<Longrightarrow> x \\<in> set p \\<Longrightarrow> \\<exists>y \\<in> set q. R x y\\<close>", "lemma mult_poly_p_add_mset_same:\n  \\<open>(mult_poly_p q')\\<^sup>*\\<^sup>* (A, r) (B, r') \\<Longrightarrow> (mult_poly_p q')\\<^sup>*\\<^sup>* (add_mset x A, r) (add_mset x B, r')\\<close>", "lemma mult_poly_raw_mult_poly_p:\n  assumes \\<open>(p, p') \\<in> sorted_poly_rel\\<close> and \\<open>(q, q') \\<in> sorted_poly_rel\\<close>\n  shows \\<open>\\<exists>r. (mult_poly_raw p q, r) \\<in> unsorted_poly_rel \\<and> (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#}) ({#}, r)\\<close>", "lemma fst_normalize_polynomial_subset:\n  \\<open>mononoms (merge_coeffs p) \\<subseteq> mononoms p\\<close>", "lemma fst_normalize_polynomial_subsetD:\n  \\<open>(a, b) \\<in> set (merge_coeffs p) \\<Longrightarrow> a \\<in> mononoms p\\<close>", "lemma distinct_merge_coeffs:\n  assumes \\<open>sorted_wrt R (map fst xs)\\<close> and \\<open>transp R\\<close> \\<open>antisymp R\\<close>\n  shows \\<open>distinct (map fst (merge_coeffs xs))\\<close>", "lemma in_set_merge_coeffsD:\n  \\<open>(a, b) \\<in> set (merge_coeffs p) \\<Longrightarrow>\\<exists>b. (a, b) \\<in> set p\\<close>", "lemma rtranclp_normalize_poly_add_mset:\n  \\<open>normalize_poly_p\\<^sup>*\\<^sup>* A r \\<Longrightarrow> normalize_poly_p\\<^sup>*\\<^sup>* (add_mset x A) (add_mset x r)\\<close>", "lemma nonzero_coeffs_diff:\n  \\<open>nonzero_coeffs A \\<Longrightarrow> nonzero_coeffs (A - B)\\<close>", "lemma merge_coeffs_is_normalize_poly_p:\n  \\<open>(xs, ys) \\<in> sorted_repeat_poly_rel \\<Longrightarrow> \\<exists>r. (merge_coeffs xs, r) \\<in> sorted_poly_rel \\<and> normalize_poly_p\\<^sup>*\\<^sup>* ys r\\<close>", "lemma distinct_var_order_Id_var_order:\n  \\<open>distinct a \\<Longrightarrow> sorted_wrt (rel2p (Id \\<union> var_order_rel)) a \\<Longrightarrow>\n          sorted_wrt var_order a\\<close>", "lemma sort_all_coeffs_gen:\n  assumes \\<open>(\\<forall>xs \\<in> mononoms xs'. sorted_wrt (rel2p (var_order_rel)) xs)\\<close> and\n    \\<open>\\<forall>x \\<in> mononoms (xs @ xs'). distinct x\\<close>\n  shows \\<open>monadic_nfoldli xs (\\<lambda>_. RETURN True) (\\<lambda>(a, n) b. do {a \\<leftarrow> sort_coeff a; RETURN ((a, n) # b)}) xs' \\<le>\n     \\<Down>Id (SPEC(\\<lambda>ys. map (\\<lambda>(a,b). (mset a, b)) (rev xs @ xs') = map (\\<lambda>(a,b). (mset a, b)) (ys) \\<and>\n     (\\<forall>xs \\<in> mononoms ys. sorted_wrt (rel2p (var_order_rel)) xs)))\\<close>", "lemma sort_all_coeffs:\n  \\<open>\\<forall>x \\<in> mononoms xs. distinct x \\<Longrightarrow>\n  sort_all_coeffs xs \\<le> \\<Down> Id (shuffle_coefficients xs)\\<close>", "lemma unsorted_term_poly_list_rel_mset:\n  \\<open>(ys, aa) \\<in> unsorted_term_poly_list_rel \\<Longrightarrow> mset ys = aa\\<close>", "lemma RETURN_map_alt_def:\n  \\<open>RETURN o (map f) =\n    REC\\<^sub>T (\\<lambda>g xs.\n      case xs of\n        [] \\<Rightarrow> RETURN []\n      | x # xs \\<Rightarrow> do {xs \\<leftarrow> g xs; RETURN (f x # xs)})\\<close>", "lemma fully_unsorted_poly_rel_Cons_iff:\n  \\<open>((ys, n) # p, a) \\<in> fully_unsorted_poly_rel \\<longleftrightarrow>\n    (p, remove1_mset (mset ys, n) a) \\<in> fully_unsorted_poly_rel \\<and>\n    (mset ys, n) \\<in># a \\<and> distinct ys\\<close>", "lemma map_mset_unsorted_term_poly_list_rel:\n  \\<open>(\\<And>a. a \\<in> mononoms s \\<Longrightarrow> distinct a) \\<Longrightarrow> \\<forall>x \\<in> mononoms s. distinct x \\<Longrightarrow>\n    (\\<forall>xs \\<in> mononoms s. sorted_wrt (rel2p (Id \\<union> var_order_rel)) xs) \\<Longrightarrow>\n    (s, map (\\<lambda>(a, y). (mset a, y)) s)\n          \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel\\<close>", "lemma list_rel_unsorted_term_poly_list_relD:\n  \\<open>(p, y) \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel \\<Longrightarrow>\n   mset y = (\\<lambda>(a, y). (mset a, y)) `# mset p \\<and> (\\<forall>x \\<in> mononoms p. distinct x)\\<close>", "lemma shuffle_terms_distinct_iff:\n  assumes \\<open>map (\\<lambda>(a, y). (mset a, y)) p = map (\\<lambda>(a, y). (mset a, y)) s\\<close>\n  shows \\<open>(\\<forall>x\\<in>set p. distinct (fst x)) \\<longleftrightarrow> (\\<forall>x\\<in>set s. distinct (fst x))\\<close>", "lemma\n  \\<open>(p, y) \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel \\<Longrightarrow>\n       (a, b) \\<in> set p \\<Longrightarrow>  distinct a\\<close>", "lemma sort_all_coeffs_unsorted_poly_rel_with0:\n  assumes \\<open>(p, p') \\<in> fully_unsorted_poly_rel\\<close>\n  shows \\<open>sort_all_coeffs p \\<le> \\<Down> (unsorted_poly_rel_with0) (RETURN p')\\<close>", "lemma sort_poly_spec_id':\n  assumes \\<open>(p, p') \\<in> unsorted_poly_rel_with0\\<close>\n  shows \\<open>sort_poly_spec p \\<le> \\<Down> (sorted_repeat_poly_rel_with0) (RETURN p')\\<close>", "lemma sorted_repeat_poly_list_rel_with0_wrt_ConsD:\n  \\<open>((ys, n) # p, a) \\<in> sorted_repeat_poly_list_rel_with0_wrt S term_poly_list_rel \\<Longrightarrow>\n     (p, remove1_mset (mset ys, n) a) \\<in> sorted_repeat_poly_list_rel_with0_wrt S term_poly_list_rel \\<and>\n    (mset ys, n) \\<in># a \\<and> (\\<forall>x \\<in> set p. S ys (fst x)) \\<and> sorted_wrt (rel2p var_order_rel) ys \\<and>\n    distinct ys\\<close>", "lemma sorted_repeat_poly_list_rel_with0_wrtl_Cons_iff:\n  \\<open>((ys, n) # p, a) \\<in> sorted_repeat_poly_list_rel_with0_wrt S term_poly_list_rel \\<longleftrightarrow>\n    (p, remove1_mset (mset ys, n) a) \\<in> sorted_repeat_poly_list_rel_with0_wrt S term_poly_list_rel \\<and>\n    (mset ys, n) \\<in># a \\<and> (\\<forall>x \\<in> set p. S ys (fst x)) \\<and> sorted_wrt (rel2p var_order_rel) ys \\<and>\n    distinct ys\\<close>", "lemma fst_normalize0_polynomial_subsetD:\n  \\<open>(a, b) \\<in> set (merge_coeffs0 p) \\<Longrightarrow> a \\<in> mononoms p\\<close>", "lemma in_set_merge_coeffs0D:\n  \\<open>(a, b) \\<in> set (merge_coeffs0 p) \\<Longrightarrow>\\<exists>b. (a, b) \\<in> set p\\<close>", "lemma merge_coeffs0_is_normalize_poly_p:\n  \\<open>(xs, ys) \\<in> sorted_repeat_poly_rel_with0 \\<Longrightarrow> \\<exists>r. (merge_coeffs0 xs, r) \\<in> sorted_poly_rel \\<and> normalize_poly_p\\<^sup>*\\<^sup>* ys r\\<close>", "lemma set_sorted_remdups[simp]:\n  \\<open>set (sorted_remdups xs) = set xs\\<close>", "lemma distinct_sorted_remdups:\n  \\<open>sorted_wrt R xs \\<Longrightarrow> transp R \\<Longrightarrow> Restricted_Predicates.total_on R UNIV \\<Longrightarrow>\n    antisymp R \\<Longrightarrow> distinct (sorted_remdups xs)\\<close>", "lemma full_normalize_poly_normalize_poly_p:\n  assumes \\<open>(p, p') \\<in> fully_unsorted_poly_rel\\<close>\n  shows \\<open>full_normalize_poly p \\<le> \\<Down> (sorted_poly_rel) (SPEC (\\<lambda>r. normalize_poly_p\\<^sup>*\\<^sup>* p' r))\\<close>\n  (is \\<open>?A \\<le> \\<Down> ?R ?B\\<close>)", "lemma normalize_poly_normalize_poly_p:\n  assumes \\<open>(p, p') \\<in> unsorted_poly_rel\\<close>\n  shows \\<open>normalize_poly p \\<le> \\<Down> (sorted_poly_rel) (SPEC (\\<lambda>r. normalize_poly_p\\<^sup>*\\<^sup>* p' r))\\<close>", "lemma unsorted_poly_rel_fully_unsorted_poly_rel:\n  \\<open>unsorted_poly_rel \\<subseteq> fully_unsorted_poly_rel\\<close>", "lemma mult_poly_full_mult_poly_p':\n  assumes \\<open>(p, p') \\<in> sorted_poly_rel\\<close> \\<open>(q, q') \\<in> sorted_poly_rel\\<close>\n  shows \\<open>mult_poly_full p q \\<le> \\<Down> (sorted_poly_rel) (mult_poly_p' p' q')\\<close>", "lemma add_poly_l_add_poly_p':\n  assumes \\<open>(p, p') \\<in> sorted_poly_rel\\<close> \\<open>(q, q') \\<in> sorted_poly_rel\\<close>\n  shows \\<open>add_poly_l (p, q) \\<le> \\<Down> (sorted_poly_rel) (add_poly_p' p' q')\\<close>", "lemma normalize_poly_p_normalize_poly_spec:\n  \\<open>(p, p') \\<in> mset_poly_rel \\<Longrightarrow>\n    SPEC (\\<lambda>r. normalize_poly_p\\<^sup>*\\<^sup>* p r) \\<le> \\<Down>mset_poly_rel (normalize_poly_spec p')\\<close>", "lemma mult_poly_p'_mult_poly_spec:\n  \\<open>(p, p') \\<in> mset_poly_rel \\<Longrightarrow> (q, q') \\<in> mset_poly_rel \\<Longrightarrow>\n  mult_poly_p' p q \\<le> \\<Down>mset_poly_rel (mult_poly_spec p' q')\\<close>", "lemma add_poly_p'_add_poly_spec:\n  \\<open>(p, p') \\<in> mset_poly_rel \\<Longrightarrow> (q, q') \\<in> mset_poly_rel \\<Longrightarrow>\n  add_poly_p' p q \\<le> \\<Down>mset_poly_rel (add_poly_spec p' q')\\<close>", "lemma term_poly_list_rel_same_rightD:\n  \\<open>(a, aa) \\<in> term_poly_list_rel \\<Longrightarrow> (a, ab) \\<in> term_poly_list_rel \\<Longrightarrow> aa = ab\\<close>", "lemma list_rel_term_poly_list_rel_same_rightD:\n  \\<open>(xa, y) \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel \\<Longrightarrow>\n   (xa, ya) \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel \\<Longrightarrow>\n    y = ya\\<close>", "lemma weak_equality_l_weak_equality_spec:\n  \\<open>(uncurry weak_equality_l, uncurry weak_equality_spec) \\<in>\n    sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel \\<rightarrow>\\<^sub>f \\<langle>bool_rel\\<rangle>nres_rel\\<close>"], "translations": [["", "lemma nonzero_coeffs_simps[simp]:\n  \\<open>nonzero_coeffs {#}\\<close>\n  \\<open>nonzero_coeffs (add_mset (xs, n) a) \\<longleftrightarrow> nonzero_coeffs a \\<and> n \\<noteq> 0\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. nonzero_coeffs {#} &&&\n    nonzero_coeffs (add_mset (xs, n) a) =\n    (nonzero_coeffs a \\<and> n \\<noteq> (0::'d))", "by (auto simp: nonzero_coeffs_def)"], ["", "lemma nonzero_coeffsD:\n  \\<open>nonzero_coeffs a \\<Longrightarrow> (x, n) \\<in># a \\<Longrightarrow> n \\<noteq> 0\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nonzero_coeffs a; (x, n) \\<in># a\\<rbrakk>\n    \\<Longrightarrow> n \\<noteq> (0::'b)", "by (auto simp: nonzero_coeffs_def)"], ["", "lemma sorted_poly_list_rel_ConsD:\n  \\<open>((ys, n) # p, a) \\<in> sorted_poly_list_rel S \\<Longrightarrow> (p, remove1_mset (mset ys, n) a) \\<in> sorted_poly_list_rel S \\<and>\n    (mset ys, n) \\<in># a \\<and> (\\<forall>x \\<in> set p. S ys (fst x)) \\<and> sorted_wrt (rel2p var_order_rel) ys \\<and>\n    distinct ys \\<and> ys \\<notin> set (map fst p) \\<and> n \\<noteq> 0 \\<and> nonzero_coeffs a\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((ys, n) # p, a) \\<in> sorted_poly_list_rel S \\<Longrightarrow>\n    (p, remove1_mset (mset ys, n) a) \\<in> sorted_poly_list_rel S \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and>\n    distinct ys \\<and>\n    ys \\<notin> set (map fst p) \\<and> n \\<noteq> 0 \\<and> nonzero_coeffs a", "unfolding sorted_poly_list_rel_wrt_def prod.case mem_Collect_eq\n    list_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((ys, n) # p, a)\n    \\<in> {(x, y).\n           list_all2\n            (\\<lambda>x x'.\n                (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n            x y} O\n          list_mset_rel \\<and>\n    sorted_wrt S (map fst ((ys, n) # p)) \\<and>\n    distinct (map fst ((ys, n) # p)) \\<and>\n    0 \\<notin># snd `# a \\<Longrightarrow>\n    ((p, remove1_mset (mset ys, n) a)\n     \\<in> {(x, y).\n            list_all2\n             (\\<lambda>x x'.\n                 (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n             x y} O\n           list_mset_rel \\<and>\n     sorted_wrt S (map fst p) \\<and>\n     distinct (map fst p) \\<and>\n     0 \\<notin># snd `# remove1_mset (mset ys, n) a) \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and>\n    distinct ys \\<and>\n    ys \\<notin> set (map fst p) \\<and> n \\<noteq> 0 \\<and> nonzero_coeffs a", "apply (clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         ((ys, n) # p) y;\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        ys \\<notin> fst ` set p; distinct (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> (p, remove1_mset (mset ys, n) a)\n                         \\<in> {(x, y).\n                                list_all2\n                                 (\\<lambda>x x'.\n                                     (x, x')\n                                     \\<in> term_poly_list_rel \\<times>\\<^sub>r\n     int_rel)\n                                 x y} O\n                               list_mset_rel \\<and>\n                         0 \\<notin> snd `\n                                    set_mset\n                                     (remove1_mset (mset ys, n) a) \\<and>\n                         (mset ys, n) \\<in># a \\<and>\n                         sorted_wrt var_order ys \\<and>\n                         distinct ys \\<and>\n                         n \\<noteq> 0 \\<and> nonzero_coeffs a", "apply (subst (asm) list.rel_sel)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        ys \\<notin> fst ` set p; distinct (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> (p, remove1_mset (mset ys, n) a)\n                         \\<in> {(x, y).\n                                list_all2\n                                 (\\<lambda>x x'.\n                                     (x, x')\n                                     \\<in> term_poly_list_rel \\<times>\\<^sub>r\n     int_rel)\n                                 x y} O\n                               list_mset_rel \\<and>\n                         0 \\<notin> snd `\n                                    set_mset\n                                     (remove1_mset (mset ys, n) a) \\<and>\n                         (mset ys, n) \\<in># a \\<and>\n                         sorted_wrt var_order ys \\<and>\n                         distinct ys \\<and>\n                         n \\<noteq> 0 \\<and> nonzero_coeffs a", "apply (intro conjI)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        ys \\<notin> fst ` set p; distinct (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> (p, remove1_mset (mset ys, n) a)\n                         \\<in> {(x, y).\n                                list_all2\n                                 (\\<lambda>x x'.\n                                     (x, x')\n                                     \\<in> term_poly_list_rel \\<times>\\<^sub>r\n     int_rel)\n                                 x y} O\n                               list_mset_rel\n 2. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        ys \\<notin> fst ` set p; distinct (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> 0 \\<notin> snd `\n                                    set_mset (remove1_mset (mset ys, n) a)\n 3. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        ys \\<notin> fst ` set p; distinct (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> (mset ys, n) \\<in># a\n 4. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        ys \\<notin> fst ` set p; distinct (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> sorted_wrt var_order ys\n 5. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        ys \\<notin> fst ` set p; distinct (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> distinct ys\n 6. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        ys \\<notin> fst ` set p; distinct (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> n \\<noteq> 0\n 7. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        ys \\<notin> fst ` set p; distinct (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> nonzero_coeffs a", "apply (rename_tac y, rule_tac b = \\<open>tl y\\<close> in relcompI)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        ys \\<notin> fst ` set p; distinct (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> (p, tl y)\n                         \\<in> {(x, y).\n                                list_all2\n                                 (\\<lambda>x x'.\n                                     (x, x')\n                                     \\<in> term_poly_list_rel \\<times>\\<^sub>r\n     int_rel)\n                                 x y}\n 2. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        ys \\<notin> fst ` set p; distinct (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> (tl y, remove1_mset (mset ys, n) a)\n                         \\<in> list_mset_rel\n 3. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        ys \\<notin> fst ` set p; distinct (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> 0 \\<notin> snd `\n                                    set_mset (remove1_mset (mset ys, n) a)\n 4. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        ys \\<notin> fst ` set p; distinct (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> (mset ys, n) \\<in># a\n 5. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        ys \\<notin> fst ` set p; distinct (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> sorted_wrt var_order ys\n 6. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        ys \\<notin> fst ` set p; distinct (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> distinct ys\n 7. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        ys \\<notin> fst ` set p; distinct (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> n \\<noteq> 0\n 8. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        ys \\<notin> fst ` set p; distinct (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> nonzero_coeffs a", "apply (auto simp: sorted_poly_list_rel_wrt_def list_mset_rel_def br_def\n    list.tl_def term_poly_list_rel_def nonzero_coeffs_def split: list.splits)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma sorted_poly_list_rel_Cons_iff:\n  \\<open>((ys, n) # p, a) \\<in> sorted_poly_list_rel S \\<longleftrightarrow> (p, remove1_mset (mset ys, n) a) \\<in> sorted_poly_list_rel S \\<and>\n    (mset ys, n) \\<in># a \\<and> (\\<forall>x \\<in> set p. S ys (fst x)) \\<and> sorted_wrt (rel2p var_order_rel) ys \\<and>\n    distinct ys \\<and> ys \\<notin> set (map fst p) \\<and> n \\<noteq> 0 \\<and> nonzero_coeffs a\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (((ys, n) # p, a) \\<in> sorted_poly_list_rel S) =\n    ((p, remove1_mset (mset ys, n) a) \\<in> sorted_poly_list_rel S \\<and>\n     (mset ys, n) \\<in># a \\<and>\n     (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n     sorted_wrt var_order ys \\<and>\n     distinct ys \\<and>\n     ys \\<notin> set (map fst p) \\<and>\n     n \\<noteq> 0 \\<and> nonzero_coeffs a)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((ys, n) # p, a) \\<in> sorted_poly_list_rel S \\<Longrightarrow>\n    (p, remove1_mset (mset ys, n) a) \\<in> sorted_poly_list_rel S \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and>\n    distinct ys \\<and>\n    ys \\<notin> set (map fst p) \\<and> n \\<noteq> 0 \\<and> nonzero_coeffs a\n 2. (p, remove1_mset (mset ys, n) a) \\<in> sorted_poly_list_rel S \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and>\n    distinct ys \\<and>\n    ys \\<notin> set (map fst p) \\<and>\n    n \\<noteq> 0 \\<and> nonzero_coeffs a \\<Longrightarrow>\n    ((ys, n) # p, a) \\<in> sorted_poly_list_rel S", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((ys, n) # p, a) \\<in> sorted_poly_list_rel S \\<Longrightarrow>\n    (p, remove1_mset (mset ys, n) a) \\<in> sorted_poly_list_rel S \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and>\n    distinct ys \\<and>\n    ys \\<notin> set (map fst p) \\<and> n \\<noteq> 0 \\<and> nonzero_coeffs a", "by (auto dest!: sorted_poly_list_rel_ConsD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, remove1_mset (mset ys, n) a) \\<in> sorted_poly_list_rel S \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and>\n    distinct ys \\<and>\n    ys \\<notin> set (map fst p) \\<and>\n    n \\<noteq> 0 \\<and> nonzero_coeffs a \\<Longrightarrow>\n    ((ys, n) # p, a) \\<in> sorted_poly_list_rel S", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, remove1_mset (mset ys, n) a) \\<in> sorted_poly_list_rel S \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and>\n    distinct ys \\<and>\n    ys \\<notin> set (map fst p) \\<and>\n    n \\<noteq> 0 \\<and> nonzero_coeffs a \\<Longrightarrow>\n    ((ys, n) # p, a) \\<in> sorted_poly_list_rel S", "unfolding sorted_poly_list_rel_wrt_def prod.case mem_Collect_eq\n      list_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((p, remove1_mset (mset ys, n) a)\n     \\<in> {(x, y).\n            list_all2\n             (\\<lambda>x x'.\n                 (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n             x y} O\n           list_mset_rel \\<and>\n     sorted_wrt S (map fst p) \\<and>\n     distinct (map fst p) \\<and>\n     0 \\<notin># snd `# remove1_mset (mset ys, n) a) \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and>\n    distinct ys \\<and>\n    ys \\<notin> set (map fst p) \\<and>\n    n \\<noteq> 0 \\<and> nonzero_coeffs a \\<Longrightarrow>\n    ((ys, n) # p, a)\n    \\<in> {(x, y).\n           list_all2\n            (\\<lambda>x x'.\n                (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n            x y} O\n          list_mset_rel \\<and>\n    sorted_wrt S (map fst ((ys, n) # p)) \\<and>\n    distinct (map fst ((ys, n) # p)) \\<and> 0 \\<notin># snd `# a", "apply (clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>(y, remove1_mset (mset ys, n) a) \\<in> list_mset_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p y;\n        sorted_wrt S (map fst p); distinct (map fst p);\n        0 \\<notin> snd ` set_mset (remove1_mset (mset ys, n) a);\n        (mset ys, n) \\<in># a; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt var_order ys; distinct ys; ys \\<notin> fst ` set p;\n        n \\<noteq> 0; nonzero_coeffs a\\<rbrakk>\n       \\<Longrightarrow> ((ys, n) # p, a)\n                         \\<in> {(x, y).\n                                list_all2\n                                 (\\<lambda>x x'.\n                                     (x, x')\n                                     \\<in> term_poly_list_rel \\<times>\\<^sub>r\n     int_rel)\n                                 x y} O\n                               list_mset_rel \\<and>\n                         0 \\<notin> snd ` set_mset a", "apply (intro conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(y, remove1_mset (mset ys, n) a) \\<in> list_mset_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p y;\n        sorted_wrt S (map fst p); distinct (map fst p);\n        0 \\<notin> snd ` set_mset (remove1_mset (mset ys, n) a);\n        (mset ys, n) \\<in># a; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt var_order ys; distinct ys; ys \\<notin> fst ` set p;\n        n \\<noteq> 0; nonzero_coeffs a\\<rbrakk>\n       \\<Longrightarrow> ((ys, n) # p, a)\n                         \\<in> {(x, y).\n                                list_all2\n                                 (\\<lambda>x x'.\n                                     (x, x')\n                                     \\<in> term_poly_list_rel \\<times>\\<^sub>r\n     int_rel)\n                                 x y} O\n                               list_mset_rel\n 2. \\<And>y.\n       \\<lbrakk>(y, remove1_mset (mset ys, n) a) \\<in> list_mset_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p y;\n        sorted_wrt S (map fst p); distinct (map fst p);\n        0 \\<notin> snd ` set_mset (remove1_mset (mset ys, n) a);\n        (mset ys, n) \\<in># a; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt var_order ys; distinct ys; ys \\<notin> fst ` set p;\n        n \\<noteq> 0; nonzero_coeffs a\\<rbrakk>\n       \\<Longrightarrow> 0 \\<notin> snd ` set_mset a", "apply (rename_tac y; rule_tac b = \\<open>(mset ys, n) # y\\<close> in relcompI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(y, remove1_mset (mset ys, n) a) \\<in> list_mset_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p y;\n        sorted_wrt S (map fst p); distinct (map fst p);\n        0 \\<notin> snd ` set_mset (remove1_mset (mset ys, n) a);\n        (mset ys, n) \\<in># a; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt var_order ys; distinct ys; ys \\<notin> fst ` set p;\n        n \\<noteq> 0; nonzero_coeffs a\\<rbrakk>\n       \\<Longrightarrow> ((ys, n) # p, (mset ys, n) # y)\n                         \\<in> {(x, y).\n                                list_all2\n                                 (\\<lambda>x x'.\n                                     (x, x')\n                                     \\<in> term_poly_list_rel \\<times>\\<^sub>r\n     int_rel)\n                                 x y}\n 2. \\<And>y.\n       \\<lbrakk>(y, remove1_mset (mset ys, n) a) \\<in> list_mset_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p y;\n        sorted_wrt S (map fst p); distinct (map fst p);\n        0 \\<notin> snd ` set_mset (remove1_mset (mset ys, n) a);\n        (mset ys, n) \\<in># a; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt var_order ys; distinct ys; ys \\<notin> fst ` set p;\n        n \\<noteq> 0; nonzero_coeffs a\\<rbrakk>\n       \\<Longrightarrow> ((mset ys, n) # y, a) \\<in> list_mset_rel\n 3. \\<And>y.\n       \\<lbrakk>(y, remove1_mset (mset ys, n) a) \\<in> list_mset_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p y;\n        sorted_wrt S (map fst p); distinct (map fst p);\n        0 \\<notin> snd ` set_mset (remove1_mset (mset ys, n) a);\n        (mset ys, n) \\<in># a; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt var_order ys; distinct ys; ys \\<notin> fst ` set p;\n        n \\<noteq> 0; nonzero_coeffs a\\<rbrakk>\n       \\<Longrightarrow> 0 \\<notin> snd ` set_mset a", "by (auto simp: sorted_poly_list_rel_wrt_def list_mset_rel_def br_def\n        term_poly_list_rel_def add_mset_eq_add_mset eq_commute[of _ \\<open>mset _\\<close>]\n        nonzero_coeffs_def\n      dest!: multi_member_split)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma sorted_repeat_poly_list_rel_ConsD:\n  \\<open>((ys, n) # p, a) \\<in> sorted_repeat_poly_list_rel S \\<Longrightarrow> (p, remove1_mset (mset ys, n) a) \\<in> sorted_repeat_poly_list_rel S \\<and>\n    (mset ys, n) \\<in># a \\<and> (\\<forall>x \\<in> set p. S ys (fst x)) \\<and> sorted_wrt (rel2p var_order_rel) ys \\<and>\n    distinct ys \\<and> n \\<noteq> 0 \\<and> nonzero_coeffs a\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((ys, n) # p, a) \\<in> sorted_repeat_poly_list_rel S \\<Longrightarrow>\n    (p, remove1_mset (mset ys, n) a)\n    \\<in> sorted_repeat_poly_list_rel S \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and>\n    distinct ys \\<and> n \\<noteq> 0 \\<and> nonzero_coeffs a", "unfolding sorted_repeat_poly_list_rel_wrt_def prod.case mem_Collect_eq\n    list_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((ys, n) # p, a)\n    \\<in> {(x, y).\n           list_all2\n            (\\<lambda>x x'.\n                (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n            x y} O\n          list_mset_rel \\<and>\n    sorted_wrt S (map fst ((ys, n) # p)) \\<and>\n    0 \\<notin># snd `# a \\<Longrightarrow>\n    ((p, remove1_mset (mset ys, n) a)\n     \\<in> {(x, y).\n            list_all2\n             (\\<lambda>x x'.\n                 (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n             x y} O\n           list_mset_rel \\<and>\n     sorted_wrt S (map fst p) \\<and>\n     0 \\<notin># snd `# remove1_mset (mset ys, n) a) \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and>\n    distinct ys \\<and> n \\<noteq> 0 \\<and> nonzero_coeffs a", "apply (clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         ((ys, n) # p) y;\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> (p, remove1_mset (mset ys, n) a)\n                         \\<in> {(x, y).\n                                list_all2\n                                 (\\<lambda>x x'.\n                                     (x, x')\n                                     \\<in> term_poly_list_rel \\<times>\\<^sub>r\n     int_rel)\n                                 x y} O\n                               list_mset_rel \\<and>\n                         0 \\<notin> snd `\n                                    set_mset\n                                     (remove1_mset (mset ys, n) a) \\<and>\n                         (mset ys, n) \\<in># a \\<and>\n                         sorted_wrt var_order ys \\<and>\n                         distinct ys \\<and>\n                         n \\<noteq> 0 \\<and> nonzero_coeffs a", "apply (subst (asm) list.rel_sel)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> (p, remove1_mset (mset ys, n) a)\n                         \\<in> {(x, y).\n                                list_all2\n                                 (\\<lambda>x x'.\n                                     (x, x')\n                                     \\<in> term_poly_list_rel \\<times>\\<^sub>r\n     int_rel)\n                                 x y} O\n                               list_mset_rel \\<and>\n                         0 \\<notin> snd `\n                                    set_mset\n                                     (remove1_mset (mset ys, n) a) \\<and>\n                         (mset ys, n) \\<in># a \\<and>\n                         sorted_wrt var_order ys \\<and>\n                         distinct ys \\<and>\n                         n \\<noteq> 0 \\<and> nonzero_coeffs a", "apply (intro conjI)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> (p, remove1_mset (mset ys, n) a)\n                         \\<in> {(x, y).\n                                list_all2\n                                 (\\<lambda>x x'.\n                                     (x, x')\n                                     \\<in> term_poly_list_rel \\<times>\\<^sub>r\n     int_rel)\n                                 x y} O\n                               list_mset_rel\n 2. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> 0 \\<notin> snd `\n                                    set_mset (remove1_mset (mset ys, n) a)\n 3. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> (mset ys, n) \\<in># a\n 4. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> sorted_wrt var_order ys\n 5. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> distinct ys\n 6. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> n \\<noteq> 0\n 7. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> nonzero_coeffs a", "apply (rename_tac y, rule_tac b = \\<open>tl y\\<close> in relcompI)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> (p, tl y)\n                         \\<in> {(x, y).\n                                list_all2\n                                 (\\<lambda>x x'.\n                                     (x, x')\n                                     \\<in> term_poly_list_rel \\<times>\\<^sub>r\n     int_rel)\n                                 x y}\n 2. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> (tl y, remove1_mset (mset ys, n) a)\n                         \\<in> list_mset_rel\n 3. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> 0 \\<notin> snd `\n                                    set_mset (remove1_mset (mset ys, n) a)\n 4. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> (mset ys, n) \\<in># a\n 5. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> sorted_wrt var_order ys\n 6. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> distinct ys\n 7. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> n \\<noteq> 0\n 8. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset a\\<rbrakk>\n       \\<Longrightarrow> nonzero_coeffs a", "apply (auto simp: sorted_poly_list_rel_wrt_def list_mset_rel_def br_def\n    list.tl_def term_poly_list_rel_def nonzero_coeffs_def split: list.splits)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma sorted_repeat_poly_list_rel_Cons_iff:\n  \\<open>((ys, n) # p, a) \\<in> sorted_repeat_poly_list_rel S \\<longleftrightarrow> (p, remove1_mset (mset ys, n) a) \\<in> sorted_repeat_poly_list_rel S \\<and>\n    (mset ys, n) \\<in># a \\<and> (\\<forall>x \\<in> set p. S ys (fst x)) \\<and> sorted_wrt (rel2p var_order_rel) ys \\<and>\n    distinct ys \\<and> n \\<noteq> 0 \\<and> nonzero_coeffs a\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (((ys, n) # p, a) \\<in> sorted_repeat_poly_list_rel S) =\n    ((p, remove1_mset (mset ys, n) a)\n     \\<in> sorted_repeat_poly_list_rel S \\<and>\n     (mset ys, n) \\<in># a \\<and>\n     (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n     sorted_wrt var_order ys \\<and>\n     distinct ys \\<and> n \\<noteq> 0 \\<and> nonzero_coeffs a)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((ys, n) # p, a) \\<in> sorted_repeat_poly_list_rel S \\<Longrightarrow>\n    (p, remove1_mset (mset ys, n) a)\n    \\<in> sorted_repeat_poly_list_rel S \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and>\n    distinct ys \\<and> n \\<noteq> 0 \\<and> nonzero_coeffs a\n 2. (p, remove1_mset (mset ys, n) a)\n    \\<in> sorted_repeat_poly_list_rel S \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and>\n    distinct ys \\<and>\n    n \\<noteq> 0 \\<and> nonzero_coeffs a \\<Longrightarrow>\n    ((ys, n) # p, a) \\<in> sorted_repeat_poly_list_rel S", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((ys, n) # p, a) \\<in> sorted_repeat_poly_list_rel S \\<Longrightarrow>\n    (p, remove1_mset (mset ys, n) a)\n    \\<in> sorted_repeat_poly_list_rel S \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and>\n    distinct ys \\<and> n \\<noteq> 0 \\<and> nonzero_coeffs a", "by (auto dest!: sorted_repeat_poly_list_rel_ConsD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, remove1_mset (mset ys, n) a)\n    \\<in> sorted_repeat_poly_list_rel S \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and>\n    distinct ys \\<and>\n    n \\<noteq> 0 \\<and> nonzero_coeffs a \\<Longrightarrow>\n    ((ys, n) # p, a) \\<in> sorted_repeat_poly_list_rel S", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, remove1_mset (mset ys, n) a)\n    \\<in> sorted_repeat_poly_list_rel S \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and>\n    distinct ys \\<and>\n    n \\<noteq> 0 \\<and> nonzero_coeffs a \\<Longrightarrow>\n    ((ys, n) # p, a) \\<in> sorted_repeat_poly_list_rel S", "unfolding sorted_repeat_poly_list_rel_wrt_def prod.case mem_Collect_eq\n      list_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((p, remove1_mset (mset ys, n) a)\n     \\<in> {(x, y).\n            list_all2\n             (\\<lambda>x x'.\n                 (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n             x y} O\n           list_mset_rel \\<and>\n     sorted_wrt S (map fst p) \\<and>\n     0 \\<notin># snd `# remove1_mset (mset ys, n) a) \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and>\n    distinct ys \\<and>\n    n \\<noteq> 0 \\<and> nonzero_coeffs a \\<Longrightarrow>\n    ((ys, n) # p, a)\n    \\<in> {(x, y).\n           list_all2\n            (\\<lambda>x x'.\n                (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n            x y} O\n          list_mset_rel \\<and>\n    sorted_wrt S (map fst ((ys, n) # p)) \\<and> 0 \\<notin># snd `# a", "apply (clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>(y, remove1_mset (mset ys, n) a) \\<in> list_mset_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p y;\n        sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset (remove1_mset (mset ys, n) a);\n        (mset ys, n) \\<in># a; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt var_order ys; distinct ys; n \\<noteq> 0;\n        nonzero_coeffs a\\<rbrakk>\n       \\<Longrightarrow> ((ys, n) # p, a)\n                         \\<in> {(x, y).\n                                list_all2\n                                 (\\<lambda>x x'.\n                                     (x, x')\n                                     \\<in> term_poly_list_rel \\<times>\\<^sub>r\n     int_rel)\n                                 x y} O\n                               list_mset_rel \\<and>\n                         0 \\<notin> snd ` set_mset a", "apply (intro conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(y, remove1_mset (mset ys, n) a) \\<in> list_mset_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p y;\n        sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset (remove1_mset (mset ys, n) a);\n        (mset ys, n) \\<in># a; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt var_order ys; distinct ys; n \\<noteq> 0;\n        nonzero_coeffs a\\<rbrakk>\n       \\<Longrightarrow> ((ys, n) # p, a)\n                         \\<in> {(x, y).\n                                list_all2\n                                 (\\<lambda>x x'.\n                                     (x, x')\n                                     \\<in> term_poly_list_rel \\<times>\\<^sub>r\n     int_rel)\n                                 x y} O\n                               list_mset_rel\n 2. \\<And>y.\n       \\<lbrakk>(y, remove1_mset (mset ys, n) a) \\<in> list_mset_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p y;\n        sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset (remove1_mset (mset ys, n) a);\n        (mset ys, n) \\<in># a; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt var_order ys; distinct ys; n \\<noteq> 0;\n        nonzero_coeffs a\\<rbrakk>\n       \\<Longrightarrow> 0 \\<notin> snd ` set_mset a", "apply (rename_tac y, rule_tac b = \\<open>(mset ys, n) # y\\<close> in relcompI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(y, remove1_mset (mset ys, n) a) \\<in> list_mset_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p y;\n        sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset (remove1_mset (mset ys, n) a);\n        (mset ys, n) \\<in># a; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt var_order ys; distinct ys; n \\<noteq> 0;\n        nonzero_coeffs a\\<rbrakk>\n       \\<Longrightarrow> ((ys, n) # p, (mset ys, n) # y)\n                         \\<in> {(x, y).\n                                list_all2\n                                 (\\<lambda>x x'.\n                                     (x, x')\n                                     \\<in> term_poly_list_rel \\<times>\\<^sub>r\n     int_rel)\n                                 x y}\n 2. \\<And>y.\n       \\<lbrakk>(y, remove1_mset (mset ys, n) a) \\<in> list_mset_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p y;\n        sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset (remove1_mset (mset ys, n) a);\n        (mset ys, n) \\<in># a; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt var_order ys; distinct ys; n \\<noteq> 0;\n        nonzero_coeffs a\\<rbrakk>\n       \\<Longrightarrow> ((mset ys, n) # y, a) \\<in> list_mset_rel\n 3. \\<And>y.\n       \\<lbrakk>(y, remove1_mset (mset ys, n) a) \\<in> list_mset_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p y;\n        sorted_wrt S (map fst p);\n        0 \\<notin> snd ` set_mset (remove1_mset (mset ys, n) a);\n        (mset ys, n) \\<in># a; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt var_order ys; distinct ys; n \\<noteq> 0;\n        nonzero_coeffs a\\<rbrakk>\n       \\<Longrightarrow> 0 \\<notin> snd ` set_mset a", "by (auto simp: sorted_repeat_poly_list_rel_wrt_def list_mset_rel_def br_def\n        term_poly_list_rel_def add_mset_eq_add_mset eq_commute[of _ \\<open>mset _\\<close>]\n        nonzero_coeffs_def\n      dest!: multi_member_split)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma add_poly_p_add_mset_sum_0:\n   \\<open>n + m = 0 \\<Longrightarrow>add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n           add_poly_p\\<^sup>*\\<^sup>*\n            (add_mset (mset ys, n) A, add_mset (mset ys, m) Aa, {#})\n            ({#}, {#}, r)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n + m = 0;\n     add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r)\\<rbrakk>\n    \\<Longrightarrow> add_poly_p\\<^sup>*\\<^sup>*\n                       (add_mset (mset ys, n) A, add_mset (mset ys, m) Aa,\n                        {#})\n                       ({#}, {#}, r)", "apply (rule converse_rtranclp_into_rtranclp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n + m = 0;\n     add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r)\\<rbrakk>\n    \\<Longrightarrow> add_poly_p\n                       (add_mset (mset ys, n) A, add_mset (mset ys, m) Aa,\n                        {#})\n                       ?b\n 2. \\<lbrakk>n + m = 0;\n     add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r)\\<rbrakk>\n    \\<Longrightarrow> add_poly_p\\<^sup>*\\<^sup>* ?b ({#}, {#}, r)", "apply (rule add_poly_p.add_new_coeff_r)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n + m = 0;\n     add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r)\\<rbrakk>\n    \\<Longrightarrow> add_poly_p\\<^sup>*\\<^sup>*\n                       (add_mset (mset ys, n) A, Aa, {#(mset ys, m)#})\n                       ({#}, {#}, r)", "apply (rule converse_rtranclp_into_rtranclp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n + m = 0;\n     add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r)\\<rbrakk>\n    \\<Longrightarrow> add_poly_p\n                       (add_mset (mset ys, n) A, Aa, {#(mset ys, m)#}) ?b4\n 2. \\<lbrakk>n + m = 0;\n     add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r)\\<rbrakk>\n    \\<Longrightarrow> add_poly_p\\<^sup>*\\<^sup>* ?b4 ({#}, {#}, r)", "apply (rule add_poly_p.add_same_coeff_l)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n + m = 0;\n     add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r)\\<rbrakk>\n    \\<Longrightarrow> add_poly_p\\<^sup>*\\<^sup>*\n                       (A, Aa, {#(mset ys, n + m)#}) ({#}, {#}, r)", "apply (rule converse_rtranclp_into_rtranclp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n + m = 0;\n     add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r)\\<rbrakk>\n    \\<Longrightarrow> add_poly_p (A, Aa, {#(mset ys, n + m)#}) ?b8\n 2. \\<lbrakk>n + m = 0;\n     add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r)\\<rbrakk>\n    \\<Longrightarrow> add_poly_p\\<^sup>*\\<^sup>* ?b8 ({#}, {#}, r)", "apply (auto intro: add_poly_p.rem_0_coeff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma monoms_add_poly_l'D:\n  \\<open>(aa, ba) \\<in> set (add_poly_l' x) \\<Longrightarrow> aa \\<in> fst ` set (fst x) \\<or> aa \\<in> fst ` set (snd x)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (aa, ba) \\<in> set (add_poly_l' x) \\<Longrightarrow>\n    aa \\<in> fst ` set (fst x) \\<or> aa \\<in> fst ` set (snd x)", "by (induction x rule: add_poly_l'.induct)\n    (auto split: if_splits)"], ["", "lemma add_poly_p_add_to_result:\n  \\<open>add_poly_p\\<^sup>*\\<^sup>* (A, B, r) (A', B', r') \\<Longrightarrow>\n       add_poly_p\\<^sup>*\\<^sup>*\n        (A, B, p + r) (A', B', p + r')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. add_poly_p\\<^sup>*\\<^sup>* (A, B, r) (A', B', r') \\<Longrightarrow>\n    add_poly_p\\<^sup>*\\<^sup>* (A, B, p + r) (A', B', p + r')", "apply (induction rule: rtranclp_induct[of add_poly_p \\<open>(_, _, _)\\<close> \\<open>(_, _, _)\\<close>, split_format(complete), of for r])"], ["proof (prove)\ngoal (2 subgoals):\n 1. add_poly_p\\<^sup>*\\<^sup>* (A, B, p + r) (A, B, p + r)\n 2. \\<And>a aa b ab ac ba.\n       \\<lbrakk>add_poly_p\\<^sup>*\\<^sup>* (A, B, r) (a, aa, b);\n        add_poly_p (a, aa, b) (ab, ac, ba);\n        add_poly_p\\<^sup>*\\<^sup>* (A, B, p + r) (a, aa, p + b)\\<rbrakk>\n       \\<Longrightarrow> add_poly_p\\<^sup>*\\<^sup>* (A, B, p + r)\n                          (ab, ac, p + ba)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. add_poly_p\\<^sup>*\\<^sup>* (A, B, p + r) (A, B, p + r)", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>add_poly_p\\<^sup>*\\<^sup>* (A, B, r) (a, aa, b);\n        add_poly_p (a, aa, b) (ab, ac, ba);\n        add_poly_p\\<^sup>*\\<^sup>* (A, B, p + r) (a, aa, p + b)\\<rbrakk>\n       \\<Longrightarrow> add_poly_p\\<^sup>*\\<^sup>* (A, B, p + r)\n                          (ab, ac, p + ba)", "by (elim add_poly_pE)\n   (metis (no_types, lifting) Pair_inject add_poly_p.intros rtranclp.simps union_mset_add_mset_right)+"], ["", "lemma add_poly_p_add_mset_comb:\n  \\<open>add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n       add_poly_p\\<^sup>*\\<^sup>*\n        (add_mset (xs, n) A, Aa, {#})\n        ({#}, {#}, add_mset (xs, n) r)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n    add_poly_p\\<^sup>*\\<^sup>* (add_mset (xs, n) A, Aa, {#})\n     ({#}, {#}, add_mset (xs, n) r)", "apply (rule converse_rtranclp_into_rtranclp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n    add_poly_p (add_mset (xs, n) A, Aa, {#}) ?b\n 2. add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n    add_poly_p\\<^sup>*\\<^sup>* ?b ({#}, {#}, add_mset (xs, n) r)", "apply (rule add_poly_p.add_new_coeff_l)"], ["proof (prove)\ngoal (1 subgoal):\n 1. add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n    add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#(xs, n)#})\n     ({#}, {#}, add_mset (xs, n) r)", "using add_poly_p_add_to_result[of A Aa \\<open>{#}\\<close> \\<open>{#}\\<close> \\<open>{#}\\<close> r \\<open>{#(xs, n)#}\\<close>]"], ["proof (prove)\nusing this:\n  add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n  add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#(xs, n)#} + {#})\n   ({#}, {#}, {#(xs, n)#} + r)\n\ngoal (1 subgoal):\n 1. add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n    add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#(xs, n)#})\n     ({#}, {#}, add_mset (xs, n) r)", "by auto"], ["", "lemma add_poly_p_add_mset_comb2:\n  \\<open>add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n       add_poly_p\\<^sup>*\\<^sup>*\n        (add_mset (ys, n) A, add_mset (ys, m) Aa, {#})\n        ({#}, {#}, add_mset (ys, n + m) r)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n    add_poly_p\\<^sup>*\\<^sup>*\n     (add_mset (ys, n) A, add_mset (ys, m) Aa, {#})\n     ({#}, {#}, add_mset (ys, n + m) r)", "apply (rule converse_rtranclp_into_rtranclp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n    add_poly_p (add_mset (ys, n) A, add_mset (ys, m) Aa, {#}) ?b\n 2. add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n    add_poly_p\\<^sup>*\\<^sup>* ?b ({#}, {#}, add_mset (ys, n + m) r)", "apply (rule add_poly_p.add_new_coeff_r)"], ["proof (prove)\ngoal (1 subgoal):\n 1. add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n    add_poly_p\\<^sup>*\\<^sup>* (add_mset (ys, n) A, Aa, {#(ys, m)#})\n     ({#}, {#}, add_mset (ys, n + m) r)", "apply (rule converse_rtranclp_into_rtranclp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n    add_poly_p (add_mset (ys, n) A, Aa, {#(ys, m)#}) ?b4\n 2. add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n    add_poly_p\\<^sup>*\\<^sup>* ?b4 ({#}, {#}, add_mset (ys, n + m) r)", "apply (rule add_poly_p.add_same_coeff_l)"], ["proof (prove)\ngoal (1 subgoal):\n 1. add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n    add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#(ys, n + m)#})\n     ({#}, {#}, add_mset (ys, n + m) r)", "using add_poly_p_add_to_result[of A Aa \\<open>{#}\\<close> \\<open>{#}\\<close> \\<open>{#}\\<close> r \\<open>{#(ys, n+m)#}\\<close>]"], ["proof (prove)\nusing this:\n  add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n  add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#(ys, n + m)#} + {#})\n   ({#}, {#}, {#(ys, n + m)#} + r)\n\ngoal (1 subgoal):\n 1. add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n    add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#(ys, n + m)#})\n     ({#}, {#}, add_mset (ys, n + m) r)", "by auto"], ["", "lemma add_poly_p_add_mset_comb3:\n  \\<open>add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n       add_poly_p\\<^sup>*\\<^sup>*\n        (A, add_mset (ys, m) Aa, {#})\n        ({#}, {#}, add_mset (ys, m) r)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n    add_poly_p\\<^sup>*\\<^sup>* (A, add_mset (ys, m) Aa, {#})\n     ({#}, {#}, add_mset (ys, m) r)", "apply (rule converse_rtranclp_into_rtranclp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n    add_poly_p (A, add_mset (ys, m) Aa, {#}) ?b\n 2. add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n    add_poly_p\\<^sup>*\\<^sup>* ?b ({#}, {#}, add_mset (ys, m) r)", "apply (rule add_poly_p.add_new_coeff_r)"], ["proof (prove)\ngoal (1 subgoal):\n 1. add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n    add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#(ys, m)#})\n     ({#}, {#}, add_mset (ys, m) r)", "using add_poly_p_add_to_result[of A Aa \\<open>{#}\\<close> \\<open>{#}\\<close> \\<open>{#}\\<close> r \\<open>{#(ys, m)#}\\<close>]"], ["proof (prove)\nusing this:\n  add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n  add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#(ys, m)#} + {#})\n   ({#}, {#}, {#(ys, m)#} + r)\n\ngoal (1 subgoal):\n 1. add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r) \\<Longrightarrow>\n    add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#(ys, m)#})\n     ({#}, {#}, add_mset (ys, m) r)", "by auto"], ["", "lemma total_on_lexord:\n  \\<open>Relation.total_on UNIV R \\<Longrightarrow> Relation.total_on UNIV (lexord R)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. total R \\<Longrightarrow> total (lexord R)", "apply (auto simp: Relation.total_on_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<forall>x y.\n                   x \\<noteq> y \\<longrightarrow>\n                   (x, y) \\<in> R \\<or> (y, x) \\<in> R;\n        x \\<noteq> y; (y, x) \\<notin> lexord R\\<rbrakk>\n       \\<Longrightarrow> (x, y) \\<in> lexord R", "by (meson lexord_linear)"], ["", "lemma antisym_lexord:\n  \\<open>antisym R \\<Longrightarrow> irrefl R \\<Longrightarrow> antisym (lexord R)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>antisym R; irrefl R\\<rbrakk>\n    \\<Longrightarrow> antisym (lexord R)", "by (auto simp: antisym_def lexord_def irrefl_def\n    elim!: list_match_lel_lel)"], ["", "lemma less_than_char_linear:\n  \\<open>(a, b) \\<in> less_than_char \\<or>\n           a = b \\<or> (b, a) \\<in> less_than_char\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> less_than_char \\<or>\n    a = b \\<or> (b, a) \\<in> less_than_char", "by (auto simp: less_than_char_def)"], ["", "lemma total_on_lexord_less_than_char_linear:\n  \\<open>xs \\<noteq> ys \\<Longrightarrow> (xs, ys) \\<notin> lexord (lexord less_than_char) \\<longleftrightarrow>\n       (ys, xs) \\<in> lexord (lexord less_than_char)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<noteq> ys \\<Longrightarrow>\n    ((xs, ys) \\<notin> lexord (lexord less_than_char)) =\n    ((ys, xs) \\<in> lexord (lexord less_than_char))", "using lexord_linear[of \\<open>lexord less_than_char\\<close> xs ys]"], ["proof (prove)\nusing this:\n  \\<forall>a b.\n     (a, b) \\<in> lexord less_than_char \\<or>\n     a = b \\<or> (b, a) \\<in> lexord less_than_char \\<Longrightarrow>\n  (xs, ys) \\<in> lexord (lexord less_than_char) \\<or>\n  xs = ys \\<or> (ys, xs) \\<in> lexord (lexord less_than_char)\n\ngoal (1 subgoal):\n 1. xs \\<noteq> ys \\<Longrightarrow>\n    ((xs, ys) \\<notin> lexord (lexord less_than_char)) =\n    ((ys, xs) \\<in> lexord (lexord less_than_char))", "using lexord_linear[of \\<open>less_than_char\\<close>] less_than_char_linear"], ["proof (prove)\nusing this:\n  \\<forall>a b.\n     (a, b) \\<in> lexord less_than_char \\<or>\n     a = b \\<or> (b, a) \\<in> lexord less_than_char \\<Longrightarrow>\n  (xs, ys) \\<in> lexord (lexord less_than_char) \\<or>\n  xs = ys \\<or> (ys, xs) \\<in> lexord (lexord less_than_char)\n  \\<forall>a b.\n     (a, b) \\<in> less_than_char \\<or>\n     a = b \\<or> (b, a) \\<in> less_than_char \\<Longrightarrow>\n  (?x, ?y) \\<in> lexord less_than_char \\<or>\n  ?x = ?y \\<or> (?y, ?x) \\<in> lexord less_than_char\n  (?a, ?b) \\<in> less_than_char \\<or>\n  ?a = ?b \\<or> (?b, ?a) \\<in> less_than_char\n\ngoal (1 subgoal):\n 1. xs \\<noteq> ys \\<Longrightarrow>\n    ((xs, ys) \\<notin> lexord (lexord less_than_char)) =\n    ((ys, xs) \\<in> lexord (lexord less_than_char))", "using lexord_irrefl[OF irrefl_less_than_char]\n     antisym_lexord[OF antisym_lexord[OF antisym_less_than_char irrefl_less_than_char]]"], ["proof (prove)\nusing this:\n  \\<forall>a b.\n     (a, b) \\<in> lexord less_than_char \\<or>\n     a = b \\<or> (b, a) \\<in> lexord less_than_char \\<Longrightarrow>\n  (xs, ys) \\<in> lexord (lexord less_than_char) \\<or>\n  xs = ys \\<or> (ys, xs) \\<in> lexord (lexord less_than_char)\n  \\<forall>a b.\n     (a, b) \\<in> less_than_char \\<or>\n     a = b \\<or> (b, a) \\<in> less_than_char \\<Longrightarrow>\n  (?x, ?y) \\<in> lexord less_than_char \\<or>\n  ?x = ?y \\<or> (?y, ?x) \\<in> lexord less_than_char\n  (?a, ?b) \\<in> less_than_char \\<or>\n  ?a = ?b \\<or> (?b, ?a) \\<in> less_than_char\n  irrefl (lexord less_than_char)\n  irrefl (lexord less_than_char) \\<Longrightarrow>\n  antisym (lexord (lexord less_than_char))\n\ngoal (1 subgoal):\n 1. xs \\<noteq> ys \\<Longrightarrow>\n    ((xs, ys) \\<notin> lexord (lexord less_than_char)) =\n    ((ys, xs) \\<in> lexord (lexord less_than_char))", "apply (auto simp: antisym_def Relation.total_on_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma sorted_poly_list_rel_nonzeroD:\n  \\<open>(p, r) \\<in> sorted_poly_list_rel term_order \\<Longrightarrow>\n       nonzero_coeffs (r)\\<close>\n  \\<open>(p, r) \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char))) \\<Longrightarrow>\n       nonzero_coeffs (r)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((p, r) \\<in> sorted_poly_rel \\<Longrightarrow> nonzero_coeffs r) &&&\n    ((p, r)\n     \\<in> sorted_poly_list_rel\n            (rel2p (lexord (lexord less_than_char))) \\<Longrightarrow>\n     nonzero_coeffs r)", "by (auto simp: sorted_poly_list_rel_wrt_def nonzero_coeffs_def)"], ["", "lemma add_poly_l'_add_poly_p:\n  assumes \\<open>(pq, pq') \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel\\<close>\n  shows \\<open>\\<exists>r. (add_poly_l' pq, r) \\<in> sorted_poly_rel \\<and>\n                        add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#}) ({#}, {#}, r)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r.\n       (add_poly_l' pq, r) \\<in> sorted_poly_rel \\<and>\n       add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#}) ({#}, {#}, r)", "supply [[goals_limit=1]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r.\n       (add_poly_l' pq, r) \\<in> sorted_poly_rel \\<and>\n       add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#}) ({#}, {#}, r)", "using assms"], ["proof (prove)\nusing this:\n  (pq, pq') \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       (add_poly_l' pq, r) \\<in> sorted_poly_rel \\<and>\n       add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#}) ({#}, {#}, r)", "apply (induction \\<open>pq\\<close> arbitrary: pq' rule: add_poly_l'.induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p pq'.\n       ((p, []), pq')\n       \\<in> sorted_poly_rel \\<times>\\<^sub>r\n             sorted_poly_rel \\<Longrightarrow>\n       \\<exists>r.\n          (add_poly_l' (p, []), r) \\<in> sorted_poly_rel \\<and>\n          add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#}) ({#}, {#}, r)\nA total of 3 subgoals...", "subgoal for p pq'"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((p, []), pq')\n    \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel \\<Longrightarrow>\n    \\<exists>r.\n       (add_poly_l' (p, []), r) \\<in> sorted_poly_rel \\<and>\n       add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#}) ({#}, {#}, r)", "using add_poly_p_empty_l[of \\<open>fst pq'\\<close> \\<open>{#}\\<close> \\<open>{#}\\<close>]"], ["proof (prove)\nusing this:\n  add_poly_p\\<^sup>*\\<^sup>* (fst pq', {#}, {#}) ({#}, {#}, fst pq' + {#})\n\ngoal (1 subgoal):\n 1. ((p, []), pq')\n    \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel \\<Longrightarrow>\n    \\<exists>r.\n       (add_poly_l' (p, []), r) \\<in> sorted_poly_rel \\<and>\n       add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#}) ({#}, {#}, r)", "by (cases pq') (auto intro!: exI[of _ \\<open>fst pq'\\<close>])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v va pq'.\n       (([], v # va), pq')\n       \\<in> sorted_poly_rel \\<times>\\<^sub>r\n             sorted_poly_rel \\<Longrightarrow>\n       \\<exists>r.\n          (add_poly_l' ([], v # va), r) \\<in> sorted_poly_rel \\<and>\n          add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#}) ({#}, {#}, r)\nA total of 2 subgoals...", "subgoal for x p pq'"], ["proof (prove)\ngoal (1 subgoal):\n 1. (([], x # p), pq')\n    \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel \\<Longrightarrow>\n    \\<exists>r.\n       (add_poly_l' ([], x # p), r) \\<in> sorted_poly_rel \\<and>\n       add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#}) ({#}, {#}, r)", "using add_poly_p_empty_r[of  \\<open>{#}\\<close> \\<open>snd pq'\\<close> \\<open>{#}\\<close>]"], ["proof (prove)\nusing this:\n  add_poly_p\\<^sup>*\\<^sup>* ({#}, snd pq', {#}) ({#}, {#}, snd pq' + {#})\n\ngoal (1 subgoal):\n 1. (([], x # p), pq')\n    \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel \\<Longrightarrow>\n    \\<exists>r.\n       (add_poly_l' ([], x # p), r) \\<in> sorted_poly_rel \\<and>\n       add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#}) ({#}, {#}, r)", "by (cases pq')  (auto intro!: exI[of _ \\<open>snd pq'\\<close>])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xs n p ys m q pq'.\n       \\<lbrakk>\\<And>pq'.\n                   \\<lbrakk>xs = ys; n + m = 0;\n                    ((p, q), pq')\n                    \\<in> sorted_poly_rel \\<times>\\<^sub>r\n                          sorted_poly_rel\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>r.\n  (add_poly_l' (p, q), r) \\<in> sorted_poly_rel \\<and>\n  add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#}) ({#}, {#}, r);\n        \\<And>pq'.\n           \\<lbrakk>xs = ys; n + m \\<noteq> 0;\n            ((p, q), pq')\n            \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel\\<rbrakk>\n           \\<Longrightarrow> \\<exists>r.\n                                (add_poly_l' (p, q), r)\n                                \\<in> sorted_poly_rel \\<and>\n                                add_poly_p\\<^sup>*\\<^sup>*\n                                 (fst pq', snd pq', {#}) ({#}, {#}, r);\n        \\<And>pq'.\n           \\<lbrakk>xs \\<noteq> ys; (xs, ys) \\<in> term_order_rel;\n            ((p, (ys, m) # q), pq')\n            \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel\\<rbrakk>\n           \\<Longrightarrow> \\<exists>r.\n                                (add_poly_l' (p, (ys, m) # q), r)\n                                \\<in> sorted_poly_rel \\<and>\n                                add_poly_p\\<^sup>*\\<^sup>*\n                                 (fst pq', snd pq', {#}) ({#}, {#}, r);\n        \\<And>pq'.\n           \\<lbrakk>xs \\<noteq> ys; (xs, ys) \\<notin> term_order_rel;\n            (((xs, n) # p, q), pq')\n            \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel\\<rbrakk>\n           \\<Longrightarrow> \\<exists>r.\n                                (add_poly_l' ((xs, n) # p, q), r)\n                                \\<in> sorted_poly_rel \\<and>\n                                add_poly_p\\<^sup>*\\<^sup>*\n                                 (fst pq', snd pq', {#}) ({#}, {#}, r);\n        (((xs, n) # p, (ys, m) # q), pq')\n        \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            (add_poly_l' ((xs, n) # p, (ys, m) # q), r)\n                            \\<in> sorted_poly_rel \\<and>\n                            add_poly_p\\<^sup>*\\<^sup>*\n                             (fst pq', snd pq', {#}) ({#}, {#}, r)", "subgoal premises p for xs n p ys m q pq'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r.\n       (add_poly_l' ((xs, n) # p, (ys, m) # q), r)\n       \\<in> sorted_poly_rel \\<and>\n       add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#}) ({#}, {#}, r)", "apply (cases pq') \\<comment> \\<open>Isabelle does a completely stupid case distinction here\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       pq' = (a, b) \\<Longrightarrow>\n       \\<exists>r.\n          (add_poly_l' ((xs, n) # p, (ys, m) # q), r)\n          \\<in> sorted_poly_rel \\<and>\n          add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#}) ({#}, {#}, r)", "apply (cases \\<open>xs = ys\\<close>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pq' = (a, b); xs = ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            (add_poly_l' ((xs, n) # p, (ys, m) # q), r)\n                            \\<in> sorted_poly_rel \\<and>\n                            add_poly_p\\<^sup>*\\<^sup>*\n                             (fst pq', snd pq', {#}) ({#}, {#}, r)\nA total of 2 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pq' = (a_, b_); xs = ys\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (add_poly_l' ((xs, n) # p, (ys, m) # q), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#})\n                          ({#}, {#}, r)", "apply (cases \\<open>n + m = 0\\<close>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>pq' = (a_, b_); xs = ys; n + m = 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (add_poly_l' ((xs, n) # p, (ys, m) # q), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#})\n                          ({#}, {#}, r)\nA total of 2 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pq' = (a_, b_); xs = ys; n + m = 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (add_poly_l' ((xs, n) # p, (ys, m) # q), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#})\n                          ({#}, {#}, r)", "using p(1)[of \\<open>(remove1_mset (mset xs, n) (fst pq'), remove1_mset (mset ys, m)  (snd pq'))\\<close>] p(5-)"], ["proof (prove)\nusing this:\n  \\<lbrakk>xs = ys; n + m = 0;\n   ((p, q), remove1_mset (mset xs, n) (fst pq'),\n    remove1_mset (mset ys, m) (snd pq'))\n   \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       (add_poly_l' (p, q), r) \\<in> sorted_poly_rel \\<and>\n                       add_poly_p\\<^sup>*\\<^sup>*\n                        (fst (remove1_mset (mset xs, n) (fst pq'),\n                              remove1_mset (mset ys, m) (snd pq')),\n                         snd (remove1_mset (mset xs, n) (fst pq'),\n                              remove1_mset (mset ys, m) (snd pq')),\n                         {#})\n                        ({#}, {#}, r)\n  (((xs, n) # p, (ys, m) # q), pq')\n  \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pq' = (a_, b_); xs = ys; n + m = 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (add_poly_l' ((xs, n) # p, (ys, m) # q), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#})\n                          ({#}, {#}, r)", "apply (auto dest!: sorted_poly_list_rel_ConsD multi_member_split\n           )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A Aa r.\n       \\<lbrakk>pq' = (add_mset (mset ys, n) A, add_mset (mset ys, m) Aa);\n        xs = ys; n + m = 0; (p, A) \\<in> sorted_poly_rel;\n        (q, Aa) \\<in> sorted_poly_rel; a_ = add_mset (mset ys, n) A;\n        b_ = add_mset (mset ys, m) Aa;\n        \\<forall>x\\<in>set p. term_order ys (fst x);\n        \\<forall>x\\<in>set q. term_order ys (fst x);\n        sorted_wrt var_order ys; distinct ys; ys \\<notin> fst ` set p;\n        ys \\<notin> fst ` set q; nonzero_coeffs A; m \\<noteq> 0;\n        nonzero_coeffs Aa; (add_poly_l' (p, q), r) \\<in> sorted_poly_rel;\n        add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            (add_poly_l' (p, q), r)\n                            \\<in> sorted_poly_rel \\<and>\n                            add_poly_p\\<^sup>*\\<^sup>*\n                             (add_mset (mset ys, n) A,\n                              add_mset (mset ys, m) Aa, {#})\n                             ({#}, {#}, r)", "using add_poly_p_add_mset_sum_0"], ["proof (prove)\nusing this:\n  \\<lbrakk>?n + ?m = 0;\n   add_poly_p\\<^sup>*\\<^sup>* (?A, ?Aa, {#}) ({#}, {#}, ?r)\\<rbrakk>\n  \\<Longrightarrow> add_poly_p\\<^sup>*\\<^sup>*\n                     (add_mset (mset ?ys, ?n) ?A,\n                      add_mset (mset ?ys, ?m) ?Aa, {#})\n                     ({#}, {#}, ?r)\n\ngoal (1 subgoal):\n 1. \\<And>A Aa r.\n       \\<lbrakk>pq' = (add_mset (mset ys, n) A, add_mset (mset ys, m) Aa);\n        xs = ys; n + m = 0; (p, A) \\<in> sorted_poly_rel;\n        (q, Aa) \\<in> sorted_poly_rel; a_ = add_mset (mset ys, n) A;\n        b_ = add_mset (mset ys, m) Aa;\n        \\<forall>x\\<in>set p. term_order ys (fst x);\n        \\<forall>x\\<in>set q. term_order ys (fst x);\n        sorted_wrt var_order ys; distinct ys; ys \\<notin> fst ` set p;\n        ys \\<notin> fst ` set q; nonzero_coeffs A; m \\<noteq> 0;\n        nonzero_coeffs Aa; (add_poly_l' (p, q), r) \\<in> sorted_poly_rel;\n        add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            (add_poly_l' (p, q), r)\n                            \\<in> sorted_poly_rel \\<and>\n                            add_poly_p\\<^sup>*\\<^sup>*\n                             (add_mset (mset ys, n) A,\n                              add_mset (mset ys, m) Aa, {#})\n                             ({#}, {#}, r)", "by blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pq' = (a_, b_); xs = ys; n + m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (add_poly_l' ((xs, n) # p, (ys, m) # q), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#})\n                          ({#}, {#}, r)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pq' = (a_, b_); xs = ys; n + m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (add_poly_l' ((xs, n) # p, (ys, m) # q), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#})\n                          ({#}, {#}, r)", "using p(2)[of \\<open>(remove1_mset (mset xs, n) (fst pq'), remove1_mset (mset ys, m)  (snd pq'))\\<close>] p(5-)"], ["proof (prove)\nusing this:\n  \\<lbrakk>xs = ys; n + m \\<noteq> 0;\n   ((p, q), remove1_mset (mset xs, n) (fst pq'),\n    remove1_mset (mset ys, m) (snd pq'))\n   \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       (add_poly_l' (p, q), r) \\<in> sorted_poly_rel \\<and>\n                       add_poly_p\\<^sup>*\\<^sup>*\n                        (fst (remove1_mset (mset xs, n) (fst pq'),\n                              remove1_mset (mset ys, m) (snd pq')),\n                         snd (remove1_mset (mset xs, n) (fst pq'),\n                              remove1_mset (mset ys, m) (snd pq')),\n                         {#})\n                        ({#}, {#}, r)\n  (((xs, n) # p, (ys, m) # q), pq')\n  \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pq' = (a_, b_); xs = ys; n + m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (add_poly_l' ((xs, n) # p, (ys, m) # q), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#})\n                          ({#}, {#}, r)", "apply (auto dest!: sorted_poly_list_rel_ConsD multi_member_split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A Aa r.\n       \\<lbrakk>pq' = (add_mset (mset ys, n) A, add_mset (mset ys, m) Aa);\n        xs = ys; n + m \\<noteq> 0; (p, A) \\<in> sorted_poly_rel;\n        (q, Aa) \\<in> sorted_poly_rel; a_ = add_mset (mset ys, n) A;\n        b_ = add_mset (mset ys, m) Aa;\n        \\<forall>x\\<in>set p. term_order ys (fst x);\n        \\<forall>x\\<in>set q. term_order ys (fst x);\n        sorted_wrt var_order ys; distinct ys; ys \\<notin> fst ` set p;\n        ys \\<notin> fst ` set q; n \\<noteq> 0; nonzero_coeffs A;\n        m \\<noteq> 0; nonzero_coeffs Aa;\n        (add_poly_l' (p, q), r) \\<in> sorted_poly_rel;\n        add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            ((ys, n + m) # add_poly_l' (p, q), r)\n                            \\<in> sorted_poly_rel \\<and>\n                            add_poly_p\\<^sup>*\\<^sup>*\n                             (add_mset (mset ys, n) A,\n                              add_mset (mset ys, m) Aa, {#})\n                             ({#}, {#}, r)", "apply (rule_tac x = \\<open>add_mset (mset ys, n + m) r\\<close> in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A Aa r.\n       \\<lbrakk>pq' = (add_mset (mset ys, n) A, add_mset (mset ys, m) Aa);\n        xs = ys; n + m \\<noteq> 0; (p, A) \\<in> sorted_poly_rel;\n        (q, Aa) \\<in> sorted_poly_rel; a_ = add_mset (mset ys, n) A;\n        b_ = add_mset (mset ys, m) Aa;\n        \\<forall>x\\<in>set p. term_order ys (fst x);\n        \\<forall>x\\<in>set q. term_order ys (fst x);\n        sorted_wrt var_order ys; distinct ys; ys \\<notin> fst ` set p;\n        ys \\<notin> fst ` set q; n \\<noteq> 0; nonzero_coeffs A;\n        m \\<noteq> 0; nonzero_coeffs Aa;\n        (add_poly_l' (p, q), r) \\<in> sorted_poly_rel;\n        add_poly_p\\<^sup>*\\<^sup>* (A, Aa, {#}) ({#}, {#}, r)\\<rbrakk>\n       \\<Longrightarrow> ((ys, n + m) # add_poly_l' (p, q),\n                          add_mset (mset ys, n + m) r)\n                         \\<in> sorted_poly_rel \\<and>\n                         add_poly_p\\<^sup>*\\<^sup>*\n                          (add_mset (mset ys, n) A,\n                           add_mset (mset ys, m) Aa, {#})\n                          ({#}, {#}, add_mset (mset ys, n + m) r)", "apply (fastforce dest!: monoms_add_poly_l'D simp: sorted_poly_list_rel_Cons_iff rel2p_def\n           sorted_poly_list_rel_nonzeroD var_order_rel_def\n          intro: add_poly_p_add_mset_comb2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>pq' = (a, b); xs \\<noteq> ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            (add_poly_l' ((xs, n) # p, (ys, m) # q), r)\n                            \\<in> sorted_poly_rel \\<and>\n                            add_poly_p\\<^sup>*\\<^sup>*\n                             (fst pq', snd pq', {#}) ({#}, {#}, r)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pq' = (a_, b_); xs \\<noteq> ys\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (add_poly_l' ((xs, n) # p, (ys, m) # q), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#})\n                          ({#}, {#}, r)", "apply (cases \\<open>(xs, ys) \\<in> term_order_rel\\<close>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>pq' = (a_, b_); xs \\<noteq> ys;\n     (xs, ys) \\<in> term_order_rel\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (add_poly_l' ((xs, n) # p, (ys, m) # q), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#})\n                          ({#}, {#}, r)\nA total of 2 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pq' = (a_, b_); xs \\<noteq> ys;\n     (xs, ys) \\<in> term_order_rel\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (add_poly_l' ((xs, n) # p, (ys, m) # q), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#})\n                          ({#}, {#}, r)", "using p(3)[of \\<open>(remove1_mset (mset xs, n) (fst pq'), (snd pq'))\\<close>] p(5-)"], ["proof (prove)\nusing this:\n  \\<lbrakk>xs \\<noteq> ys; (xs, ys) \\<in> term_order_rel;\n   ((p, (ys, m) # q), remove1_mset (mset xs, n) (fst pq'), snd pq')\n   \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       (add_poly_l' (p, (ys, m) # q), r)\n                       \\<in> sorted_poly_rel \\<and>\n                       add_poly_p\\<^sup>*\\<^sup>*\n                        (fst (remove1_mset (mset xs, n) (fst pq'), snd pq'),\n                         snd (remove1_mset (mset xs, n) (fst pq'), snd pq'),\n                         {#})\n                        ({#}, {#}, r)\n  (((xs, n) # p, (ys, m) # q), pq')\n  \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pq' = (a_, b_); xs \\<noteq> ys;\n     (xs, ys) \\<in> term_order_rel\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (add_poly_l' ((xs, n) # p, (ys, m) # q), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#})\n                          ({#}, {#}, r)", "apply (auto dest!: multi_member_split simp: sorted_poly_list_rel_Cons_iff rel2p_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r A Aa.\n       \\<lbrakk>pq' = (add_mset (mset xs, n) A, add_mset (mset ys, m) Aa);\n        xs \\<noteq> ys; (xs, ys) \\<in> term_order_rel;\n        (p, A) \\<in> sorted_poly_rel;\n        (add_poly_l' (p, (ys, m) # q), r) \\<in> sorted_poly_rel;\n        add_poly_p\\<^sup>*\\<^sup>* (A, add_mset (mset ys, m) Aa, {#})\n         ({#}, {#}, r);\n        a_ = add_mset (mset xs, n) A;\n        \\<forall>x\\<in>set p. (xs, fst x) \\<in> term_order_rel;\n        sorted_wrt var_order xs; distinct xs; xs \\<notin> fst ` set p;\n        n \\<noteq> 0; nonzero_coeffs A; (q, Aa) \\<in> sorted_poly_rel;\n        b_ = add_mset (mset ys, m) Aa;\n        \\<forall>x\\<in>set q. (ys, fst x) \\<in> term_order_rel;\n        sorted_wrt var_order ys; distinct ys; ys \\<notin> fst ` set q;\n        m \\<noteq> 0; nonzero_coeffs Aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            (add_poly_l' (p, (ys, m) # q),\n                             remove1_mset (mset xs, n) r)\n                            \\<in> sorted_poly_rel \\<and>\n                            (mset xs, n) \\<in># r \\<and>\n                            (\\<forall>x\n\\<in>set (add_poly_l' (p, (ys, m) # q)).\n                                (xs, fst x) \\<in> term_order_rel) \\<and>\n                            xs \\<notin> fst `\n  set (add_poly_l' (p, (ys, m) # q)) \\<and>\n                            nonzero_coeffs r \\<and>\n                            add_poly_p\\<^sup>*\\<^sup>*\n                             (add_mset (mset xs, n) A,\n                              add_mset (mset ys, m) Aa, {#})\n                             ({#}, {#}, r)", "apply (rule_tac x = \\<open>add_mset (mset xs, n) r\\<close> in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r A Aa.\n       \\<lbrakk>pq' = (add_mset (mset xs, n) A, add_mset (mset ys, m) Aa);\n        xs \\<noteq> ys; (xs, ys) \\<in> term_order_rel;\n        (p, A) \\<in> sorted_poly_rel;\n        (add_poly_l' (p, (ys, m) # q), r) \\<in> sorted_poly_rel;\n        add_poly_p\\<^sup>*\\<^sup>* (A, add_mset (mset ys, m) Aa, {#})\n         ({#}, {#}, r);\n        a_ = add_mset (mset xs, n) A;\n        \\<forall>x\\<in>set p. (xs, fst x) \\<in> term_order_rel;\n        sorted_wrt var_order xs; distinct xs; xs \\<notin> fst ` set p;\n        n \\<noteq> 0; nonzero_coeffs A; (q, Aa) \\<in> sorted_poly_rel;\n        b_ = add_mset (mset ys, m) Aa;\n        \\<forall>x\\<in>set q. (ys, fst x) \\<in> term_order_rel;\n        sorted_wrt var_order ys; distinct ys; ys \\<notin> fst ` set q;\n        m \\<noteq> 0; nonzero_coeffs Aa\\<rbrakk>\n       \\<Longrightarrow> (add_poly_l' (p, (ys, m) # q),\n                          remove1_mset (mset xs, n)\n                           (add_mset (mset xs, n) r))\n                         \\<in> sorted_poly_rel \\<and>\n                         (mset xs, n) \\<in># add_mset (mset xs, n) r \\<and>\n                         (\\<forall>x\\<in>set (add_poly_l' (p, (ys, m) # q)).\n                             (xs, fst x) \\<in> term_order_rel) \\<and>\n                         xs \\<notin> fst `\n                                     set\n(add_poly_l' (p, (ys, m) # q)) \\<and>\n                         nonzero_coeffs (add_mset (mset xs, n) r) \\<and>\n                         add_poly_p\\<^sup>*\\<^sup>*\n                          (add_mset (mset xs, n) A,\n                           add_mset (mset ys, m) Aa, {#})\n                          ({#}, {#}, add_mset (mset xs, n) r)", "apply (auto dest!: monoms_add_poly_l'D)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>r A Aa aa ba.\n       \\<lbrakk>pq' = (add_mset (mset xs, n) A, add_mset (mset ys, m) Aa);\n        xs \\<noteq> ys; (xs, ys) \\<in> term_order_rel;\n        (p, A) \\<in> sorted_poly_rel;\n        (add_poly_l' (p, (ys, m) # q), r) \\<in> sorted_poly_rel;\n        add_poly_p\\<^sup>*\\<^sup>* (A, add_mset (mset ys, m) Aa, {#})\n         ({#}, {#}, r);\n        a_ = add_mset (mset xs, n) A;\n        \\<forall>x\\<in>set p. (xs, fst x) \\<in> term_order_rel;\n        sorted_wrt var_order xs; distinct xs; xs \\<notin> fst ` set p;\n        n \\<noteq> 0; nonzero_coeffs A; (q, Aa) \\<in> sorted_poly_rel;\n        b_ = add_mset (mset ys, m) Aa;\n        \\<forall>x\\<in>set q. (ys, fst x) \\<in> term_order_rel;\n        sorted_wrt var_order ys; distinct ys; ys \\<notin> fst ` set q;\n        m \\<noteq> 0; nonzero_coeffs Aa; (aa, ba) \\<in> set p\\<rbrakk>\n       \\<Longrightarrow> (xs, aa) \\<in> term_order_rel\nA total of 5 subgoals...", "apply (auto intro: lexord_trans add_poly_p_add_mset_comb simp: lexord_transI var_order_rel_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>r A Aa aa ba.\n       \\<lbrakk>pq' = (add_mset (mset xs, n) A, add_mset (mset ys, m) Aa);\n        xs \\<noteq> ys; (xs, ys) \\<in> lexord (lexord less_than_char);\n        (p, A)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        (add_poly_l' (p, (ys, m) # q), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        add_poly_p\\<^sup>*\\<^sup>* (A, add_mset (mset ys, m) Aa, {#})\n         ({#}, {#}, r);\n        a_ = add_mset (mset xs, n) A;\n        \\<forall>x\\<in>set p.\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) xs; distinct xs;\n        xs \\<notin> fst ` set p; n \\<noteq> 0; nonzero_coeffs A;\n        (q, Aa)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        b_ = add_mset (mset ys, m) Aa;\n        \\<forall>x\\<in>set q.\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) ys; distinct ys;\n        ys \\<notin> fst ` set q; m \\<noteq> 0; nonzero_coeffs Aa;\n        (aa, ba) \\<in> set q\\<rbrakk>\n       \\<Longrightarrow> (xs, aa) \\<in> lexord (lexord less_than_char)\nA total of 3 subgoals...", "apply (rule lexord_trans)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>r A Aa aa ba.\n       \\<lbrakk>pq' = (add_mset (mset xs, n) A, add_mset (mset ys, m) Aa);\n        xs \\<noteq> ys; (xs, ys) \\<in> lexord (lexord less_than_char);\n        (p, A)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        (add_poly_l' (p, (ys, m) # q), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        add_poly_p\\<^sup>*\\<^sup>* (A, add_mset (mset ys, m) Aa, {#})\n         ({#}, {#}, r);\n        a_ = add_mset (mset xs, n) A;\n        \\<forall>x\\<in>set p.\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) xs; distinct xs;\n        xs \\<notin> fst ` set p; n \\<noteq> 0; nonzero_coeffs A;\n        (q, Aa)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        b_ = add_mset (mset ys, m) Aa;\n        \\<forall>x\\<in>set q.\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) ys; distinct ys;\n        ys \\<notin> fst ` set q; m \\<noteq> 0; nonzero_coeffs Aa;\n        (aa, ba) \\<in> set q\\<rbrakk>\n       \\<Longrightarrow> (xs, ?y202 r A Aa aa ba)\n                         \\<in> lexord (lexord less_than_char)\nA total of 5 subgoals...", "apply assumption"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>r A Aa aa ba.\n       \\<lbrakk>pq' = (add_mset (mset xs, n) A, add_mset (mset ys, m) Aa);\n        xs \\<noteq> ys; (xs, ys) \\<in> lexord (lexord less_than_char);\n        (p, A)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        (add_poly_l' (p, (ys, m) # q), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        add_poly_p\\<^sup>*\\<^sup>* (A, add_mset (mset ys, m) Aa, {#})\n         ({#}, {#}, r);\n        a_ = add_mset (mset xs, n) A;\n        \\<forall>x\\<in>set p.\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) xs; distinct xs;\n        xs \\<notin> fst ` set p; n \\<noteq> 0; nonzero_coeffs A;\n        (q, Aa)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        b_ = add_mset (mset ys, m) Aa;\n        \\<forall>x\\<in>set q.\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) ys; distinct ys;\n        ys \\<notin> fst ` set q; m \\<noteq> 0; nonzero_coeffs Aa;\n        (aa, ba) \\<in> set q\\<rbrakk>\n       \\<Longrightarrow> (ys, aa) \\<in> lexord (lexord less_than_char)\nA total of 4 subgoals...", "apply (auto intro: lexord_trans add_poly_p_add_mset_comb simp: lexord_transI\n          sorted_poly_list_rel_nonzeroD var_order_rel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r A Aa ba.\n       \\<lbrakk>pq' = (add_mset (mset xs, n) A, add_mset (mset ys, m) Aa);\n        xs \\<noteq> ys; (xs, ys) \\<in> lexord (lexord less_than_char);\n        (p, A)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        (add_poly_l' (p, (ys, m) # q), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        add_poly_p\\<^sup>*\\<^sup>* (A, add_mset (mset ys, m) Aa, {#})\n         ({#}, {#}, r);\n        a_ = add_mset (mset xs, n) A;\n        \\<forall>x\\<in>set p.\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) xs; distinct xs;\n        xs \\<notin> fst ` set p; n \\<noteq> 0;\n        (q, Aa)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        b_ = add_mset (mset ys, m) Aa;\n        \\<forall>x\\<in>set q.\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) ys; distinct ys;\n        ys \\<notin> fst ` set q; m \\<noteq> 0; (xs, ba) \\<in> set q\\<rbrakk>\n       \\<Longrightarrow> False", "using total_on_lexord_less_than_char_linear"], ["proof (prove)\nusing this:\n  ?xs \\<noteq> ?ys \\<Longrightarrow>\n  ((?xs, ?ys) \\<notin> lexord (lexord less_than_char)) =\n  ((?ys, ?xs) \\<in> lexord (lexord less_than_char))\n\ngoal (1 subgoal):\n 1. \\<And>r A Aa ba.\n       \\<lbrakk>pq' = (add_mset (mset xs, n) A, add_mset (mset ys, m) Aa);\n        xs \\<noteq> ys; (xs, ys) \\<in> lexord (lexord less_than_char);\n        (p, A)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        (add_poly_l' (p, (ys, m) # q), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        add_poly_p\\<^sup>*\\<^sup>* (A, add_mset (mset ys, m) Aa, {#})\n         ({#}, {#}, r);\n        a_ = add_mset (mset xs, n) A;\n        \\<forall>x\\<in>set p.\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) xs; distinct xs;\n        xs \\<notin> fst ` set p; n \\<noteq> 0;\n        (q, Aa)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        b_ = add_mset (mset ys, m) Aa;\n        \\<forall>x\\<in>set q.\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) ys; distinct ys;\n        ys \\<notin> fst ` set q; m \\<noteq> 0; (xs, ba) \\<in> set q\\<rbrakk>\n       \\<Longrightarrow> False", "by fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pq' = (a_, b_); xs \\<noteq> ys;\n     (xs, ys) \\<notin> term_order_rel\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (add_poly_l' ((xs, n) # p, (ys, m) # q), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#})\n                          ({#}, {#}, r)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pq' = (a_, b_); xs \\<noteq> ys;\n     (xs, ys) \\<notin> term_order_rel\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (add_poly_l' ((xs, n) # p, (ys, m) # q), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#})\n                          ({#}, {#}, r)", "using p(4)[of \\<open>(fst pq', remove1_mset (mset ys, m) (snd pq'))\\<close>] p(5-)"], ["proof (prove)\nusing this:\n  \\<lbrakk>xs \\<noteq> ys; (xs, ys) \\<notin> term_order_rel;\n   (((xs, n) # p, q), fst pq', remove1_mset (mset ys, m) (snd pq'))\n   \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       (add_poly_l' ((xs, n) # p, q), r)\n                       \\<in> sorted_poly_rel \\<and>\n                       add_poly_p\\<^sup>*\\<^sup>*\n                        (fst (fst pq', remove1_mset (mset ys, m) (snd pq')),\n                         snd (fst pq', remove1_mset (mset ys, m) (snd pq')),\n                         {#})\n                        ({#}, {#}, r)\n  (((xs, n) # p, (ys, m) # q), pq')\n  \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pq' = (a_, b_); xs \\<noteq> ys;\n     (xs, ys) \\<notin> term_order_rel\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (add_poly_l' ((xs, n) # p, (ys, m) # q), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         add_poly_p\\<^sup>*\\<^sup>* (fst pq', snd pq', {#})\n                          ({#}, {#}, r)", "apply (auto dest!: multi_member_split simp: sorted_poly_list_rel_Cons_iff rel2p_def\n           var_order_rel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r A Aa.\n       \\<lbrakk>pq' = (add_mset (mset xs, n) A, add_mset (mset ys, m) Aa);\n        xs \\<noteq> ys; (xs, ys) \\<notin> lexord (lexord less_than_char);\n        (p, A)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        (add_poly_l' ((xs, n) # p, q), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        add_poly_p\\<^sup>*\\<^sup>* (add_mset (mset xs, n) A, Aa, {#})\n         ({#}, {#}, r);\n        a_ = add_mset (mset xs, n) A;\n        \\<forall>x\\<in>set p.\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) xs; distinct xs;\n        xs \\<notin> fst ` set p; n \\<noteq> 0; nonzero_coeffs A;\n        (q, Aa)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        b_ = add_mset (mset ys, m) Aa;\n        \\<forall>x\\<in>set q.\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) ys; distinct ys;\n        ys \\<notin> fst ` set q; m \\<noteq> 0; nonzero_coeffs Aa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            (add_poly_l' ((xs, n) # p, q),\n                             remove1_mset (mset ys, m) r)\n                            \\<in> sorted_poly_list_rel\n                                   (rel2p\n                                     (lexord\n (lexord less_than_char))) \\<and>\n                            (mset ys, m) \\<in># r \\<and>\n                            (\\<forall>x\n\\<in>set (add_poly_l' ((xs, n) # p, q)).\n                                (ys, fst x)\n                                \\<in> lexord (lexord less_than_char)) \\<and>\n                            ys \\<notin> fst `\n  set (add_poly_l' ((xs, n) # p, q)) \\<and>\n                            nonzero_coeffs r \\<and>\n                            add_poly_p\\<^sup>*\\<^sup>*\n                             (add_mset (mset xs, n) A,\n                              add_mset (mset ys, m) Aa, {#})\n                             ({#}, {#}, r)", "apply (rule_tac x = \\<open>add_mset (mset ys, m) r\\<close> in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r A Aa.\n       \\<lbrakk>pq' = (add_mset (mset xs, n) A, add_mset (mset ys, m) Aa);\n        xs \\<noteq> ys; (xs, ys) \\<notin> lexord (lexord less_than_char);\n        (p, A)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        (add_poly_l' ((xs, n) # p, q), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        add_poly_p\\<^sup>*\\<^sup>* (add_mset (mset xs, n) A, Aa, {#})\n         ({#}, {#}, r);\n        a_ = add_mset (mset xs, n) A;\n        \\<forall>x\\<in>set p.\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) xs; distinct xs;\n        xs \\<notin> fst ` set p; n \\<noteq> 0; nonzero_coeffs A;\n        (q, Aa)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        b_ = add_mset (mset ys, m) Aa;\n        \\<forall>x\\<in>set q.\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) ys; distinct ys;\n        ys \\<notin> fst ` set q; m \\<noteq> 0; nonzero_coeffs Aa\\<rbrakk>\n       \\<Longrightarrow> (add_poly_l' ((xs, n) # p, q),\n                          remove1_mset (mset ys, m)\n                           (add_mset (mset ys, m) r))\n                         \\<in> sorted_poly_list_rel\n                                (rel2p\n                                  (lexord (lexord less_than_char))) \\<and>\n                         (mset ys, m) \\<in># add_mset (mset ys, m) r \\<and>\n                         (\\<forall>x\\<in>set (add_poly_l' ((xs, n) # p, q)).\n                             (ys, fst x)\n                             \\<in> lexord (lexord less_than_char)) \\<and>\n                         ys \\<notin> fst `\n                                     set\n(add_poly_l' ((xs, n) # p, q)) \\<and>\n                         nonzero_coeffs (add_mset (mset ys, m) r) \\<and>\n                         add_poly_p\\<^sup>*\\<^sup>*\n                          (add_mset (mset xs, n) A,\n                           add_mset (mset ys, m) Aa, {#})\n                          ({#}, {#}, add_mset (mset ys, m) r)", "apply (auto dest!: monoms_add_poly_l'D\n          simp: total_on_lexord_less_than_char_linear)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>r A Aa aa ba.\n       \\<lbrakk>pq' = (add_mset (mset xs, n) A, add_mset (mset ys, m) Aa);\n        xs \\<noteq> ys; (ys, xs) \\<in> lexord (lexord less_than_char);\n        (p, A)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        (add_poly_l' ((xs, n) # p, q), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        add_poly_p\\<^sup>*\\<^sup>* (add_mset (mset xs, n) A, Aa, {#})\n         ({#}, {#}, r);\n        a_ = add_mset (mset xs, n) A;\n        \\<forall>x\\<in>set p.\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) xs; distinct xs;\n        xs \\<notin> fst ` set p; n \\<noteq> 0; nonzero_coeffs A;\n        (q, Aa)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        b_ = add_mset (mset ys, m) Aa;\n        \\<forall>x\\<in>set q.\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) ys; distinct ys;\n        ys \\<notin> fst ` set q; m \\<noteq> 0; nonzero_coeffs Aa;\n        (aa, ba) \\<in> set p\\<rbrakk>\n       \\<Longrightarrow> (ys, aa) \\<in> lexord (lexord less_than_char)\nA total of 5 subgoals...", "apply (auto intro: lexord_trans add_poly_p_add_mset_comb  simp: lexord_transI\n          total_on_lexord_less_than_char_linear var_order_rel_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>r A Aa aa ba.\n       \\<lbrakk>pq' = (add_mset (mset xs, n) A, add_mset (mset ys, m) Aa);\n        xs \\<noteq> ys; (ys, xs) \\<in> lexord (lexord less_than_char);\n        (p, A)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        (add_poly_l' ((xs, n) # p, q), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        add_poly_p\\<^sup>*\\<^sup>* (add_mset (mset xs, n) A, Aa, {#})\n         ({#}, {#}, r);\n        a_ = add_mset (mset xs, n) A;\n        \\<forall>x\\<in>set p.\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) xs; distinct xs;\n        xs \\<notin> fst ` set p; n \\<noteq> 0; nonzero_coeffs A;\n        (q, Aa)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        b_ = add_mset (mset ys, m) Aa;\n        \\<forall>x\\<in>set q.\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) ys; distinct ys;\n        ys \\<notin> fst ` set q; m \\<noteq> 0; nonzero_coeffs Aa;\n        (aa, ba) \\<in> set p\\<rbrakk>\n       \\<Longrightarrow> (ys, aa) \\<in> lexord (lexord less_than_char)\nA total of 4 subgoals...", "apply (rule lexord_trans)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>r A Aa aa ba.\n       \\<lbrakk>pq' = (add_mset (mset xs, n) A, add_mset (mset ys, m) Aa);\n        xs \\<noteq> ys; (ys, xs) \\<in> lexord (lexord less_than_char);\n        (p, A)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        (add_poly_l' ((xs, n) # p, q), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        add_poly_p\\<^sup>*\\<^sup>* (add_mset (mset xs, n) A, Aa, {#})\n         ({#}, {#}, r);\n        a_ = add_mset (mset xs, n) A;\n        \\<forall>x\\<in>set p.\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) xs; distinct xs;\n        xs \\<notin> fst ` set p; n \\<noteq> 0; nonzero_coeffs A;\n        (q, Aa)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        b_ = add_mset (mset ys, m) Aa;\n        \\<forall>x\\<in>set q.\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) ys; distinct ys;\n        ys \\<notin> fst ` set q; m \\<noteq> 0; nonzero_coeffs Aa;\n        (aa, ba) \\<in> set p\\<rbrakk>\n       \\<Longrightarrow> (ys, ?y76 r A Aa aa ba)\n                         \\<in> lexord (lexord less_than_char)\nA total of 6 subgoals...", "apply assumption"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>r A Aa aa ba.\n       \\<lbrakk>pq' = (add_mset (mset xs, n) A, add_mset (mset ys, m) Aa);\n        xs \\<noteq> ys; (ys, xs) \\<in> lexord (lexord less_than_char);\n        (p, A)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        (add_poly_l' ((xs, n) # p, q), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        add_poly_p\\<^sup>*\\<^sup>* (add_mset (mset xs, n) A, Aa, {#})\n         ({#}, {#}, r);\n        a_ = add_mset (mset xs, n) A;\n        \\<forall>x\\<in>set p.\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) xs; distinct xs;\n        xs \\<notin> fst ` set p; n \\<noteq> 0; nonzero_coeffs A;\n        (q, Aa)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        b_ = add_mset (mset ys, m) Aa;\n        \\<forall>x\\<in>set q.\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) ys; distinct ys;\n        ys \\<notin> fst ` set q; m \\<noteq> 0; nonzero_coeffs Aa;\n        (aa, ba) \\<in> set p\\<rbrakk>\n       \\<Longrightarrow> (xs, aa) \\<in> lexord (lexord less_than_char)\nA total of 5 subgoals...", "apply (auto intro: lexord_trans add_poly_p_add_mset_comb3 simp: lexord_transI\n          sorted_poly_list_rel_nonzeroD var_order_rel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r A Aa ba.\n       \\<lbrakk>pq' = (add_mset (mset xs, n) A, add_mset (mset ys, m) Aa);\n        xs \\<noteq> ys; (ys, xs) \\<in> lexord (lexord less_than_char);\n        (p, A)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        (add_poly_l' ((xs, n) # p, q), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        add_poly_p\\<^sup>*\\<^sup>* (add_mset (mset xs, n) A, Aa, {#})\n         ({#}, {#}, r);\n        a_ = add_mset (mset xs, n) A;\n        \\<forall>x\\<in>set p.\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) xs; distinct xs;\n        xs \\<notin> fst ` set p; n \\<noteq> 0;\n        (q, Aa)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        b_ = add_mset (mset ys, m) Aa;\n        \\<forall>x\\<in>set q.\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) ys; distinct ys;\n        ys \\<notin> fst ` set q; m \\<noteq> 0; (ys, ba) \\<in> set p\\<rbrakk>\n       \\<Longrightarrow> False", "using total_on_lexord_less_than_char_linear"], ["proof (prove)\nusing this:\n  ?xs \\<noteq> ?ys \\<Longrightarrow>\n  ((?xs, ?ys) \\<notin> lexord (lexord less_than_char)) =\n  ((?ys, ?xs) \\<in> lexord (lexord less_than_char))\n\ngoal (1 subgoal):\n 1. \\<And>r A Aa ba.\n       \\<lbrakk>pq' = (add_mset (mset xs, n) A, add_mset (mset ys, m) Aa);\n        xs \\<noteq> ys; (ys, xs) \\<in> lexord (lexord less_than_char);\n        (p, A)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        (add_poly_l' ((xs, n) # p, q), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        add_poly_p\\<^sup>*\\<^sup>* (add_mset (mset xs, n) A, Aa, {#})\n         ({#}, {#}, r);\n        a_ = add_mset (mset xs, n) A;\n        \\<forall>x\\<in>set p.\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) xs; distinct xs;\n        xs \\<notin> fst ` set p; n \\<noteq> 0;\n        (q, Aa)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        b_ = add_mset (mset ys, m) Aa;\n        \\<forall>x\\<in>set q.\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        sorted_wrt (rel2p (lexord less_than_char)) ys; distinct ys;\n        ys \\<notin> fst ` set q; m \\<noteq> 0; (ys, ba) \\<in> set p\\<rbrakk>\n       \\<Longrightarrow> False", "by fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma add_poly_l_add_poly:\n  \\<open>add_poly_l x = RETURN (add_poly_l' x)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. add_poly_l x = RETURN (add_poly_l' x)", "unfolding add_poly_l_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. REC\\<^sub>T\n     (\\<lambda>add_poly_l (p, q).\n         case (p, q) of ([], []) \\<Rightarrow> RETURN []\n         | ([], a # list) \\<Rightarrow> RETURN (a # list)\n         | ((aa, ba) # list, []) \\<Rightarrow> RETURN ((aa, ba) # list)\n         | ((aa, ba) # list, (ys, m) # qa) \\<Rightarrow>\n             if aa = ys\n             then if ba + m = 0 then add_poly_l (list, qa)\n                  else add_poly_l (list, qa) \\<bind>\n                       (\\<lambda>pq. RETURN ((aa, ba + m) # pq))\n             else if (aa, ys) \\<in> term_order_rel\n                  then add_poly_l (list, (ys, m) # qa) \\<bind>\n                       (\\<lambda>pq. RETURN ((aa, ba) # pq))\n                  else add_poly_l ((aa, ba) # list, qa) \\<bind>\n                       (\\<lambda>pq. RETURN ((ys, m) # pq)))\n     x =\n    RETURN (add_poly_l' x)", "by (induction x rule: add_poly_l'.induct)\n    (solves \\<open>subst RECT_unfold, refine_mono, simp split: list.split\\<close>)+"], ["", "lemma add_poly_l_spec:\n  \\<open>(add_poly_l, uncurry (\\<lambda>p q. SPEC(\\<lambda>r. add_poly_p\\<^sup>*\\<^sup>* (p, q, {#}) ({#}, {#}, r)))) \\<in>\n    sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel \\<rightarrow>\\<^sub>f \\<langle>sorted_poly_rel\\<rangle>nres_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (add_poly_l,\n     uncurry\n      (\\<lambda>p q.\n          SPEC\n           (\\<lambda>r.\n               add_poly_p\\<^sup>*\\<^sup>* (p, q, {#}) ({#}, {#}, r))))\n    \\<in> sorted_poly_rel \\<times>\\<^sub>r\n          sorted_poly_rel \\<rightarrow>\\<^sub>f \\<langle>sorted_poly_rel\\<rangle>nres_rel", "unfolding add_poly_l_add_poly"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. RETURN (add_poly_l' x),\n     uncurry\n      (\\<lambda>p q.\n          SPEC\n           (\\<lambda>r.\n               add_poly_p\\<^sup>*\\<^sup>* (p, q, {#}) ({#}, {#}, r))))\n    \\<in> sorted_poly_rel \\<times>\\<^sub>r\n          sorted_poly_rel \\<rightarrow>\\<^sub>f \\<langle>sorted_poly_rel\\<rangle>nres_rel", "apply (intro nres_relI frefI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>True;\n        (x, y)\n        \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel\\<rbrakk>\n       \\<Longrightarrow> RETURN (add_poly_l' x)\n                         \\<le> \\<Down> sorted_poly_rel\n                                (uncurry\n                                  (\\<lambda>p q.\nSPEC (\\<lambda>r. add_poly_p\\<^sup>*\\<^sup>* (p, q, {#}) ({#}, {#}, r)))\n                                  y)", "apply (drule add_poly_l'_add_poly_p)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>True;\n        \\<exists>r.\n           (add_poly_l' x, r) \\<in> sorted_poly_rel \\<and>\n           add_poly_p\\<^sup>*\\<^sup>* (fst y, snd y, {#})\n            ({#}, {#}, r)\\<rbrakk>\n       \\<Longrightarrow> RETURN (add_poly_l' x)\n                         \\<le> \\<Down> sorted_poly_rel\n                                (uncurry\n                                  (\\<lambda>p q.\nSPEC (\\<lambda>r. add_poly_p\\<^sup>*\\<^sup>* (p, q, {#}) ({#}, {#}, r)))\n                                  y)", "apply (auto simp: conc_fun_RES)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition sort_poly_spec :: \\<open>llist_polynomial \\<Rightarrow> llist_polynomial nres\\<close> where\n\\<open>sort_poly_spec p =\n  SPEC(\\<lambda>p'. mset p = mset p' \\<and> sorted_wrt (rel2p (Id \\<union> term_order_rel)) (map fst p'))\\<close>"], ["", "lemma sort_poly_spec_id:\n  assumes \\<open>(p, p') \\<in> unsorted_poly_rel\\<close>\n  shows \\<open>sort_poly_spec p \\<le> \\<Down> (sorted_repeat_poly_rel) (RETURN p')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. sort_poly_spec p\n    \\<le> \\<Down>\n           (sorted_repeat_poly_list_rel\n             (rel2p (Id \\<union> term_order_rel)))\n           (RETURN p')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sort_poly_spec p\n    \\<le> \\<Down>\n           (sorted_repeat_poly_list_rel\n             (rel2p (Id \\<union> term_order_rel)))\n           (RETURN p')", "obtain y where\n    py: \\<open>(p, y) \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel\\<close> and\n    p'_y: \\<open>p' = mset y\\<close> and\n    zero: \\<open>0 \\<notin># snd `# p'\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>(p, y)\n                 \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                                int_rel\\<rangle>list_rel;\n         p' = mset y; 0 \\<notin># snd `# p'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  (p, p') \\<in> unsorted_poly_rel\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>(p, y)\n                 \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                                int_rel\\<rangle>list_rel;\n         p' = mset y; 0 \\<notin># snd `# p'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding sort_poly_spec_def poly_list_rel_def sorted_poly_list_rel_wrt_def"], ["proof (prove)\nusing this:\n  (p, p')\n  \\<in> {(xs, ys).\n         (xs, ys)\n         \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                        int_rel\\<rangle>list_rel O\n               list_mset_rel \\<and>\n         0 \\<notin># snd `# ys}\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>(p, y)\n                 \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                                int_rel\\<rangle>list_rel;\n         p' = mset y; 0 \\<notin># snd `# p'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: list_mset_rel_def br_def)"], ["proof (state)\nthis:\n  (p, y)\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel\n  p' = mset y\n  0 \\<notin># snd `# p'\n\ngoal (1 subgoal):\n 1. sort_poly_spec p\n    \\<le> \\<Down>\n           (sorted_repeat_poly_list_rel\n             (rel2p (Id \\<union> term_order_rel)))\n           (RETURN p')", "then"], ["proof (chain)\npicking this:\n  (p, y)\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel\n  p' = mset y\n  0 \\<notin># snd `# p'", "have [simp]: \\<open>length y = length p\\<close>"], ["proof (prove)\nusing this:\n  (p, y)\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel\n  p' = mset y\n  0 \\<notin># snd `# p'\n\ngoal (1 subgoal):\n 1. length y = length p", "by (auto simp: list_rel_def list_all2_conv_all_nth)"], ["proof (state)\nthis:\n  length y = length p\n\ngoal (1 subgoal):\n 1. sort_poly_spec p\n    \\<le> \\<Down>\n           (sorted_repeat_poly_list_rel\n             (rel2p (Id \\<union> term_order_rel)))\n           (RETURN p')", "have H: \\<open>(x, p')\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel O list_mset_rel\\<close>\n     if px: \\<open>mset p = mset x\\<close> and \\<open>sorted_wrt (rel2p (Id \\<union> lexord var_order_rel)) (map fst x)\\<close>\n     for x :: \\<open>llist_polynomial\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "obtain f where\n      f: \\<open>bij_betw f {..<length x} {..<length p}\\<close> and\n      [simp]: \\<open>\\<And>i. i<length x \\<Longrightarrow> x ! i = p ! (f i)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>bij_betw f {..<length x} {..<length p};\n         \\<And>i. i < length x \\<Longrightarrow> x ! i = p ! f i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using px"], ["proof (prove)\nusing this:\n  mset p = mset x\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>bij_betw f {..<length x} {..<length p};\n         \\<And>i. i < length x \\<Longrightarrow> x ! i = p ! f i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>f.\n                \\<lbrakk>bij_betw f {..<length x} {..<length p};\n                 \\<And>i.\n                    i < length x \\<Longrightarrow> x ! i = p ! f i\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     mset p = mset x\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply (subst (asm)(2) eq_commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>f.\n                \\<lbrakk>bij_betw f {..<length x} {..<length p};\n                 \\<And>i.\n                    i < length x \\<Longrightarrow> x ! i = p ! f i\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     mset x = mset p\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding mset_eq_perm"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>f.\n                \\<lbrakk>bij_betw f {..<length x} {..<length p};\n                 \\<And>i.\n                    i < length x \\<Longrightarrow> x ! i = p ! f i\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x <~~> p\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (auto dest!: permutation_Ex_bij)"], ["proof (state)\nthis:\n  bij_betw f {..<length x} {..<length p}\n  ?i < length x \\<Longrightarrow> x ! ?i = p ! f ?i\n\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "let ?y = \\<open>map (\\<lambda>i. y ! f i) [0 ..< length x]\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "have \\<open>i < length y \\<Longrightarrow> (p ! f i, y ! f i) \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel\\<close> for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. i < length y \\<Longrightarrow>\n    (p ! f i, y ! f i) \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel", "using list_all2_nthD[of _ p y\n         \\<open>f i\\<close>, OF py[unfolded list_rel_def mem_Collect_eq prod.case]]\n         mset_eq_length[OF px] f"], ["proof (prove)\nusing this:\n  f i < length p \\<Longrightarrow>\n  (p ! f i, y ! f i) \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel\n  length p = length x\n  bij_betw f {..<length x} {..<length p}\n\ngoal (1 subgoal):\n 1. i < length y \\<Longrightarrow>\n    (p ! f i, y ! f i) \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel", "by (auto simp: list_rel_def list_all2_conv_all_nth bij_betw_def)"], ["proof (state)\nthis:\n  ?i < length y \\<Longrightarrow>\n  (p ! f ?i, y ! f ?i) \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel\n\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "then"], ["proof (chain)\npicking this:\n  ?i < length y \\<Longrightarrow>\n  (p ! f ?i, y ! f ?i) \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel", "have \\<open>(x, ?y) \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel\\<close> and\n      xy: \\<open>length x = length y\\<close>"], ["proof (prove)\nusing this:\n  ?i < length y \\<Longrightarrow>\n  (p ! f ?i, y ! f ?i) \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel\n\ngoal (1 subgoal):\n 1. (x, map (\\<lambda>i. y ! f i) [0..<length x])\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel &&&\n    length x = length y", "using py list_all2_nthD[of \\<open>rel2p (term_poly_list_rel \\<times>\\<^sub>r int_rel)\\<close> p y\n         \\<open>f i\\<close> for i, simplified] mset_eq_length[OF px]"], ["proof (prove)\nusing this:\n  ?i < length y \\<Longrightarrow>\n  (p ! f ?i, y ! f ?i) \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel\n  (p, y)\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel\n  \\<lbrakk>list_all2 (rel2p (term_poly_list_rel \\<times>\\<^sub>r int_rel)) p\n            y;\n   f ?i2 < length p\\<rbrakk>\n  \\<Longrightarrow> rel2p (term_poly_list_rel \\<times>\\<^sub>r int_rel)\n                     (p ! f ?i2) (y ! f ?i2)\n  length p = length x\n\ngoal (1 subgoal):\n 1. (x, map (\\<lambda>i. y ! f i) [0..<length x])\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel &&&\n    length x = length y", "by (auto simp: list_rel_def list_all2_conv_all_nth)"], ["proof (state)\nthis:\n  (x, map (\\<lambda>i. y ! f i) [0..<length x])\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel\n  length x = length y\n\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "moreover"], ["proof (state)\nthis:\n  (x, map (\\<lambda>i. y ! f i) [0..<length x])\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel\n  length x = length y\n\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "{"], ["proof (state)\nthis:\n  (x, map (\\<lambda>i. y ! f i) [0..<length x])\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel\n  length x = length y\n\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "have f: \\<open>mset_set {0..<length x} = f `# mset_set {0..<length x}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. mset_set {0..<length x} = f `# mset_set {0..<length x}", "using f mset_eq_length[OF px]"], ["proof (prove)\nusing this:\n  bij_betw f {..<length x} {..<length p}\n  length p = length x\n\ngoal (1 subgoal):\n 1. mset_set {0..<length x} = f `# mset_set {0..<length x}", "by (auto simp: bij_betw_def lessThan_atLeast0 image_mset_mset_set)"], ["proof (state)\nthis:\n  mset_set {0..<length x} = f `# mset_set {0..<length x}\n\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "have \\<open>mset y = {#y ! f x. x \\<in># mset_set {0..<length x}#}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. mset y = {#y ! f x. x \\<in># mset_set {0..<length x}#}", "by (subst drop_0[symmetric], subst mset_drop_upto, subst xy[symmetric], subst f)\n          auto"], ["proof (state)\nthis:\n  mset y = {#y ! f x. x \\<in># mset_set {0..<length x}#}\n\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "then"], ["proof (chain)\npicking this:\n  mset y = {#y ! f x. x \\<in># mset_set {0..<length x}#}", "have \\<open>(?y, p') \\<in> list_mset_rel\\<close>"], ["proof (prove)\nusing this:\n  mset y = {#y ! f x. x \\<in># mset_set {0..<length x}#}\n\ngoal (1 subgoal):\n 1. (map (\\<lambda>i. y ! f i) [0..<length x], p') \\<in> list_mset_rel", "by (auto simp: list_mset_rel_def br_def p'_y)"], ["proof (state)\nthis:\n  (map (\\<lambda>i. y ! f i) [0..<length x], p') \\<in> list_mset_rel\n\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "}"], ["proof (state)\nthis:\n  (map (\\<lambda>i. y ! f i) [0..<length x], p') \\<in> list_mset_rel\n\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "ultimately"], ["proof (chain)\npicking this:\n  (x, map (\\<lambda>i. y ! f i) [0..<length x])\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel\n  length x = length y\n  (map (\\<lambda>i. y ! f i) [0..<length x], p') \\<in> list_mset_rel", "show ?thesis"], ["proof (prove)\nusing this:\n  (x, map (\\<lambda>i. y ! f i) [0..<length x])\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel\n  length x = length y\n  (map (\\<lambda>i. y ! f i) [0..<length x], p') \\<in> list_mset_rel\n\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "by (auto intro!: relcompI[of _ ?y])"], ["proof (state)\nthis:\n  (x, p')\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel O\n        list_mset_rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>mset p = mset ?x;\n   sorted_wrt (rel2p (Id \\<union> term_order_rel)) (map fst ?x)\\<rbrakk>\n  \\<Longrightarrow> (?x, p')\n                    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                                   int_rel\\<rangle>list_rel O\n                          list_mset_rel\n\ngoal (1 subgoal):\n 1. sort_poly_spec p\n    \\<le> \\<Down>\n           (sorted_repeat_poly_list_rel\n             (rel2p (Id \\<union> term_order_rel)))\n           (RETURN p')", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sort_poly_spec p\n    \\<le> \\<Down>\n           (sorted_repeat_poly_list_rel\n             (rel2p (Id \\<union> term_order_rel)))\n           (RETURN p')", "using zero"], ["proof (prove)\nusing this:\n  0 \\<notin># snd `# p'\n\ngoal (1 subgoal):\n 1. sort_poly_spec p\n    \\<le> \\<Down>\n           (sorted_repeat_poly_list_rel\n             (rel2p (Id \\<union> term_order_rel)))\n           (RETURN p')", "unfolding sort_poly_spec_def poly_list_rel_def sorted_repeat_poly_list_rel_wrt_def"], ["proof (prove)\nusing this:\n  0 \\<notin># snd `# p'\n\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>p'.\n         mset p = mset p' \\<and>\n         sorted_wrt (rel2p (Id \\<union> term_order_rel)) (map fst p'))\n    \\<le> \\<Down>\n           {(xs, ys).\n            (xs, ys)\n            \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                           int_rel\\<rangle>list_rel O\n                  list_mset_rel \\<and>\n            sorted_wrt (rel2p (Id \\<union> term_order_rel))\n             (map fst xs) \\<and>\n            0 \\<notin># snd `# ys}\n           (RETURN p')", "by refine_rcg (auto intro: H)"], ["proof (state)\nthis:\n  sort_poly_spec p\n  \\<le> \\<Down>\n         (sorted_repeat_poly_list_rel (rel2p (Id \\<union> term_order_rel)))\n         (RETURN p')\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Multiplication\\<close>"], ["", "fun mult_monoms :: \\<open>term_poly_list \\<Rightarrow> term_poly_list \\<Rightarrow> term_poly_list\\<close> where\n  \\<open>mult_monoms p [] = p\\<close> |\n  \\<open>mult_monoms [] p = p\\<close> |\n  \\<open>mult_monoms (x # p) (y # q) =\n    (if x = y then x # mult_monoms p q\n     else if (x, y) \\<in> var_order_rel then x # mult_monoms p (y # q)\n      else y # mult_monoms (x # p) q)\\<close>"], ["", "lemma term_poly_list_rel_empty_iff[simp]:\n  \\<open>([], q') \\<in> term_poly_list_rel \\<longleftrightarrow> q' = {#}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (([], q') \\<in> term_poly_list_rel) = (q' = {#})", "by (auto simp: term_poly_list_rel_def)"], ["", "lemma mset_eqD_set_mset: \\<open>mset xs = A \\<Longrightarrow> set xs = set_mset A\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. mset xs = A \\<Longrightarrow> set xs = set_mset A", "by auto"], ["", "lemma term_poly_list_rel_Cons_iff:\n  \\<open>(y # p, p') \\<in> term_poly_list_rel \\<longleftrightarrow>\n    (p, remove1_mset y p') \\<in> term_poly_list_rel \\<and>\n    y \\<in># p' \\<and> y \\<notin> set p \\<and> y \\<notin># remove1_mset y p' \\<and>\n  (\\<forall>x\\<in>#mset p. (y, x) \\<in> var_order_rel)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((y # p, p') \\<in> term_poly_list_rel) =\n    ((p, remove1_mset y p') \\<in> term_poly_list_rel \\<and>\n     y \\<in># p' \\<and>\n     y \\<notin> set p \\<and>\n     y \\<notin># remove1_mset y p' \\<and>\n     (\\<forall>x\\<in>#mset p. (y, x) \\<in> var_order_rel))", "by (auto simp: term_poly_list_rel_def rel2p_def dest!: multi_member_split mset_eqD_set_mset)"], ["", "lemma var_order_rel_antisym[simp]:\n  \\<open>(y, y) \\<notin> var_order_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (y, y) \\<notin> var_order_rel", "by (simp add: less_than_char_def lexord_irreflexive var_order_rel_def)"], ["", "lemma term_poly_list_rel_remdups_mset:\n  \\<open>(p, p') \\<in> term_poly_list_rel \\<Longrightarrow>\n    (p, remdups_mset p') \\<in> term_poly_list_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, p') \\<in> term_poly_list_rel \\<Longrightarrow>\n    (p, remdups_mset p') \\<in> term_poly_list_rel", "by (auto simp: term_poly_list_rel_def distinct_mset_remdups_mset_id simp flip: distinct_mset_mset_distinct)"], ["", "lemma var_notin_notin_mult_monomsD:\n  \\<open>y \\<in> set (mult_monoms p q) \\<Longrightarrow> y \\<in> set p \\<or> y \\<in> set q\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> set (mult_monoms p q) \\<Longrightarrow>\n    y \\<in> set p \\<or> y \\<in> set q", "by (induction p q arbitrary: p' q' rule: mult_monoms.induct) (auto split: if_splits)"], ["", "lemma term_poly_list_rel_set_mset:\n  \\<open>(p, q) \\<in> term_poly_list_rel \\<Longrightarrow> set p = set_mset q\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, q) \\<in> term_poly_list_rel \\<Longrightarrow> set p = set_mset q", "by (auto simp: term_poly_list_rel_def)"], ["", "lemma mult_monoms_spec:\n  \\<open>(mult_monoms, (\\<lambda>a b. remdups_mset (a + b))) \\<in> term_poly_list_rel \\<rightarrow> term_poly_list_rel \\<rightarrow> term_poly_list_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (mult_monoms, \\<lambda>a b. remdups_mset (a + b))\n    \\<in> term_poly_list_rel \\<rightarrow>\n          term_poly_list_rel \\<rightarrow> term_poly_list_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (mult_monoms, \\<lambda>a b. remdups_mset (a + b))\n    \\<in> term_poly_list_rel \\<rightarrow>\n          term_poly_list_rel \\<rightarrow> term_poly_list_rel", "have [dest]: \\<open>remdups_mset (A + Aa) = add_mset y Ab \\<Longrightarrow> y \\<notin># A \\<Longrightarrow>\n       y \\<notin># Aa \\<Longrightarrow>\n       False\\<close> for Aa Ab y A"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>remdups_mset (A + Aa) = add_mset y Ab; y \\<notin># A;\n     y \\<notin># Aa\\<rbrakk>\n    \\<Longrightarrow> False", "by (metis set_mset_remdups_mset union_iff union_single_eq_member)"], ["proof (state)\nthis:\n  \\<lbrakk>remdups_mset (?A + ?Aa) = add_mset ?y ?Ab; ?y \\<notin># ?A;\n   ?y \\<notin># ?Aa\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. (mult_monoms, \\<lambda>a b. remdups_mset (a + b))\n    \\<in> term_poly_list_rel \\<rightarrow>\n          term_poly_list_rel \\<rightarrow> term_poly_list_rel", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (mult_monoms, \\<lambda>a b. remdups_mset (a + b))\n    \\<in> term_poly_list_rel \\<rightarrow>\n          term_poly_list_rel \\<rightarrow> term_poly_list_rel", "apply (intro fun_relI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a') \\<in> term_poly_list_rel;\n        (aa, a'a) \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> (mult_monoms a aa, remdups_mset (a' + a'a))\n                         \\<in> term_poly_list_rel", "apply (rename_tac p p' q q')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p p' q q'.\n       \\<lbrakk>(p, p') \\<in> term_poly_list_rel;\n        (q, q') \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> (mult_monoms p q, remdups_mset (p' + q'))\n                         \\<in> term_poly_list_rel", "subgoal for p p' q q'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(p, p') \\<in> term_poly_list_rel;\n     (q, q') \\<in> term_poly_list_rel\\<rbrakk>\n    \\<Longrightarrow> (mult_monoms p q, remdups_mset (p' + q'))\n                      \\<in> term_poly_list_rel", "apply (induction p q arbitrary: p' q' rule: mult_monoms.induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p p' q'.\n       \\<lbrakk>(p, p') \\<in> term_poly_list_rel;\n        ([], q') \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> (mult_monoms p [], remdups_mset (p' + q'))\n                         \\<in> term_poly_list_rel\n 2. \\<And>v va p' q'.\n       \\<lbrakk>([], p') \\<in> term_poly_list_rel;\n        (v # va, q') \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> (mult_monoms [] (v # va), remdups_mset (p' + q'))\n                         \\<in> term_poly_list_rel\n 3. \\<And>x p y q p' q'.\n       \\<lbrakk>\\<And>p' q'.\n                   \\<lbrakk>x = y; (p, p') \\<in> term_poly_list_rel;\n                    (q, q') \\<in> term_poly_list_rel\\<rbrakk>\n                   \\<Longrightarrow> (mult_monoms p q,\nremdups_mset (p' + q'))\n                                     \\<in> term_poly_list_rel;\n        \\<And>p' q'.\n           \\<lbrakk>x \\<noteq> y; (x, y) \\<in> var_order_rel;\n            (p, p') \\<in> term_poly_list_rel;\n            (y # q, q') \\<in> term_poly_list_rel\\<rbrakk>\n           \\<Longrightarrow> (mult_monoms p (y # q), remdups_mset (p' + q'))\n                             \\<in> term_poly_list_rel;\n        \\<And>p' q'.\n           \\<lbrakk>x \\<noteq> y; (x, y) \\<notin> var_order_rel;\n            (x # p, p') \\<in> term_poly_list_rel;\n            (q, q') \\<in> term_poly_list_rel\\<rbrakk>\n           \\<Longrightarrow> (mult_monoms (x # p) q, remdups_mset (p' + q'))\n                             \\<in> term_poly_list_rel;\n        (x # p, p') \\<in> term_poly_list_rel;\n        (y # q, q') \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> (mult_monoms (x # p) (y # q),\n                          remdups_mset (p' + q'))\n                         \\<in> term_poly_list_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(p_, p'_) \\<in> term_poly_list_rel;\n     ([], q'_) \\<in> term_poly_list_rel\\<rbrakk>\n    \\<Longrightarrow> (mult_monoms p_ [], remdups_mset (p'_ + q'_))\n                      \\<in> term_poly_list_rel", "by (auto simp: term_poly_list_rel_Cons_iff rel2p_def term_poly_list_rel_remdups_mset)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v va p' q'.\n       \\<lbrakk>([], p') \\<in> term_poly_list_rel;\n        (v # va, q') \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> (mult_monoms [] (v # va), remdups_mset (p' + q'))\n                         \\<in> term_poly_list_rel\n 2. \\<And>x p y q p' q'.\n       \\<lbrakk>\\<And>p' q'.\n                   \\<lbrakk>x = y; (p, p') \\<in> term_poly_list_rel;\n                    (q, q') \\<in> term_poly_list_rel\\<rbrakk>\n                   \\<Longrightarrow> (mult_monoms p q,\nremdups_mset (p' + q'))\n                                     \\<in> term_poly_list_rel;\n        \\<And>p' q'.\n           \\<lbrakk>x \\<noteq> y; (x, y) \\<in> var_order_rel;\n            (p, p') \\<in> term_poly_list_rel;\n            (y # q, q') \\<in> term_poly_list_rel\\<rbrakk>\n           \\<Longrightarrow> (mult_monoms p (y # q), remdups_mset (p' + q'))\n                             \\<in> term_poly_list_rel;\n        \\<And>p' q'.\n           \\<lbrakk>x \\<noteq> y; (x, y) \\<notin> var_order_rel;\n            (x # p, p') \\<in> term_poly_list_rel;\n            (q, q') \\<in> term_poly_list_rel\\<rbrakk>\n           \\<Longrightarrow> (mult_monoms (x # p) q, remdups_mset (p' + q'))\n                             \\<in> term_poly_list_rel;\n        (x # p, p') \\<in> term_poly_list_rel;\n        (y # q, q') \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> (mult_monoms (x # p) (y # q),\n                          remdups_mset (p' + q'))\n                         \\<in> term_poly_list_rel", "subgoal for x p p' q'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>([], p') \\<in> term_poly_list_rel;\n     (x # p, q') \\<in> term_poly_list_rel\\<rbrakk>\n    \\<Longrightarrow> (mult_monoms [] (x # p), remdups_mset (p' + q'))\n                      \\<in> term_poly_list_rel", "by (auto simp: term_poly_list_rel_Cons_iff rel2p_def term_poly_list_rel_remdups_mset\n      dest!: multi_member_split[of _ q'])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x p y q p' q'.\n       \\<lbrakk>\\<And>p' q'.\n                   \\<lbrakk>x = y; (p, p') \\<in> term_poly_list_rel;\n                    (q, q') \\<in> term_poly_list_rel\\<rbrakk>\n                   \\<Longrightarrow> (mult_monoms p q,\nremdups_mset (p' + q'))\n                                     \\<in> term_poly_list_rel;\n        \\<And>p' q'.\n           \\<lbrakk>x \\<noteq> y; (x, y) \\<in> var_order_rel;\n            (p, p') \\<in> term_poly_list_rel;\n            (y # q, q') \\<in> term_poly_list_rel\\<rbrakk>\n           \\<Longrightarrow> (mult_monoms p (y # q), remdups_mset (p' + q'))\n                             \\<in> term_poly_list_rel;\n        \\<And>p' q'.\n           \\<lbrakk>x \\<noteq> y; (x, y) \\<notin> var_order_rel;\n            (x # p, p') \\<in> term_poly_list_rel;\n            (q, q') \\<in> term_poly_list_rel\\<rbrakk>\n           \\<Longrightarrow> (mult_monoms (x # p) q, remdups_mset (p' + q'))\n                             \\<in> term_poly_list_rel;\n        (x # p, p') \\<in> term_poly_list_rel;\n        (y # q, q') \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> (mult_monoms (x # p) (y # q),\n                          remdups_mset (p' + q'))\n                         \\<in> term_poly_list_rel", "subgoal premises p for x p y q p' q'"], ["proof (prove)\ngoal (1 subgoal):\n 1. (mult_monoms (x # p) (y # q), remdups_mset (p' + q'))\n    \\<in> term_poly_list_rel", "apply (cases \\<open>x = y\\<close>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    (mult_monoms (x # p) (y # q), remdups_mset (p' + q'))\n    \\<in> term_poly_list_rel\n 2. x \\<noteq> y \\<Longrightarrow>\n    (mult_monoms (x # p) (y # q), remdups_mset (p' + q'))\n    \\<in> term_poly_list_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y \\<Longrightarrow>\n    (mult_monoms (x # p) (y # q), remdups_mset (p' + q'))\n    \\<in> term_poly_list_rel", "using p(1)[of \\<open>remove1_mset y p'\\<close> \\<open>remove1_mset y q'\\<close>] p(4-)"], ["proof (prove)\nusing this:\n  \\<lbrakk>x = y; (p, remove1_mset y p') \\<in> term_poly_list_rel;\n   (q, remove1_mset y q') \\<in> term_poly_list_rel\\<rbrakk>\n  \\<Longrightarrow> (mult_monoms p q,\n                     remdups_mset (remove1_mset y p' + remove1_mset y q'))\n                    \\<in> term_poly_list_rel\n  (x # p, p') \\<in> term_poly_list_rel\n  (y # q, q') \\<in> term_poly_list_rel\n\ngoal (1 subgoal):\n 1. x = y \\<Longrightarrow>\n    (mult_monoms (x # p) (y # q), remdups_mset (p' + q'))\n    \\<in> term_poly_list_rel", "by (auto simp: term_poly_list_rel_Cons_iff rel2p_def\n          dest!: var_notin_notin_mult_monomsD\n          dest!: multi_member_split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow>\n    (mult_monoms (x # p) (y # q), remdups_mset (p' + q'))\n    \\<in> term_poly_list_rel", "apply (cases \\<open>(x, y) \\<in> var_order_rel\\<close>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<noteq> y; (x, y) \\<in> var_order_rel\\<rbrakk>\n    \\<Longrightarrow> (mult_monoms (x # p) (y # q), remdups_mset (p' + q'))\n                      \\<in> term_poly_list_rel\n 2. \\<lbrakk>x \\<noteq> y; (x, y) \\<notin> var_order_rel\\<rbrakk>\n    \\<Longrightarrow> (mult_monoms (x # p) (y # q), remdups_mset (p' + q'))\n                      \\<in> term_poly_list_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y; (x, y) \\<in> var_order_rel\\<rbrakk>\n    \\<Longrightarrow> (mult_monoms (x # p) (y # q), remdups_mset (p' + q'))\n                      \\<in> term_poly_list_rel", "using p(2)[of \\<open>remove1_mset x p'\\<close> \\<open>q'\\<close>] p(4-)"], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<noteq> y; (x, y) \\<in> var_order_rel;\n   (p, remove1_mset x p') \\<in> term_poly_list_rel;\n   (y # q, q') \\<in> term_poly_list_rel\\<rbrakk>\n  \\<Longrightarrow> (mult_monoms p (y # q),\n                     remdups_mset (remove1_mset x p' + q'))\n                    \\<in> term_poly_list_rel\n  (x # p, p') \\<in> term_poly_list_rel\n  (y # q, q') \\<in> term_poly_list_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y; (x, y) \\<in> var_order_rel\\<rbrakk>\n    \\<Longrightarrow> (mult_monoms (x # p) (y # q), remdups_mset (p' + q'))\n                      \\<in> term_poly_list_rel", "apply (auto simp: term_poly_list_rel_Cons_iff\n            term_poly_list_rel_set_mset rel2p_def var_order_rel_def\n          dest!: multi_member_split[of _ p'] multi_member_split[of _ q']\n            var_notin_notin_mult_monomsD\n          split: if_splits)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>A Aa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; y \\<in># A;\n        (mult_monoms p (y # q), remdups_mset (A + Aa))\n        \\<in> term_poly_list_rel;\n        x \\<in># Aa\\<rbrakk>\n       \\<Longrightarrow> (mult_monoms p (y # q),\n                          remove1_mset x (remdups_mset (A + Aa)))\n                         \\<in> term_poly_list_rel\n 2. \\<And>A Aa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; (x, y) \\<in> lexord less_than_char; y \\<notin># A;\n        (mult_monoms p (y # q), add_mset y (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel;\n        x \\<in># Aa\\<rbrakk>\n       \\<Longrightarrow> (mult_monoms p (y # q),\n                          add_mset y\n                           (remove1_mset x (remdups_mset (A + Aa))))\n                         \\<in> term_poly_list_rel\n 3. \\<And>A Aa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<noteq> y; y \\<in># A;\n        (mult_monoms p (y # q), remdups_mset (A + Aa))\n        \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>A Aa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<noteq> y; (x, y) \\<in> lexord less_than_char; y \\<notin># A;\n        (mult_monoms p (y # q), add_mset y (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>A Aa.\n       \\<lbrakk>x \\<noteq> y; y \\<in># A;\n        (mult_monoms p (y # q), remdups_mset (A + Aa))\n        \\<in> term_poly_list_rel;\n        (p, A) \\<in> term_poly_list_rel; (q, Aa) \\<in> term_poly_list_rel;\n        p' = add_mset x A; q' = add_mset y Aa; x \\<notin># A;\n        y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<in># remove1_mset x (remdups_mset (A + Aa))\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>A Aa.\n       \\<lbrakk>x \\<noteq> y; (x, y) \\<in> lexord less_than_char;\n        y \\<notin># A;\n        (mult_monoms p (y # q), add_mset y (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel;\n        (p, A) \\<in> term_poly_list_rel; (q, Aa) \\<in> term_poly_list_rel;\n        p' = add_mset x A; q' = add_mset y Aa; x \\<notin># A;\n        y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<in># remove1_mset x (remdups_mset (A + Aa))\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>A Aa xa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; y \\<in># A;\n        (mult_monoms p (y # q), remdups_mset (A + Aa))\n        \\<in> term_poly_list_rel;\n        xa \\<in># Aa\\<rbrakk>\n       \\<Longrightarrow> (x, xa) \\<in> lexord less_than_char\n 8. \\<And>A Aa xa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; (x, y) \\<in> lexord less_than_char; y \\<notin># A;\n        (mult_monoms p (y # q), add_mset y (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel;\n        xa \\<in># Aa\\<rbrakk>\n       \\<Longrightarrow> (x, xa) \\<in> lexord less_than_char", "apply (meson lexord_cons_cons list.inject total_on_lexord_less_than_char_linear)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>A Aa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; (x, y) \\<in> lexord less_than_char; y \\<notin># A;\n        (mult_monoms p (y # q), add_mset y (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel;\n        x \\<in># Aa\\<rbrakk>\n       \\<Longrightarrow> (mult_monoms p (y # q),\n                          add_mset y\n                           (remove1_mset x (remdups_mset (A + Aa))))\n                         \\<in> term_poly_list_rel\n 2. \\<And>A Aa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<noteq> y; y \\<in># A;\n        (mult_monoms p (y # q), remdups_mset (A + Aa))\n        \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>A Aa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<noteq> y; (x, y) \\<in> lexord less_than_char; y \\<notin># A;\n        (mult_monoms p (y # q), add_mset y (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>A Aa.\n       \\<lbrakk>x \\<noteq> y; y \\<in># A;\n        (mult_monoms p (y # q), remdups_mset (A + Aa))\n        \\<in> term_poly_list_rel;\n        (p, A) \\<in> term_poly_list_rel; (q, Aa) \\<in> term_poly_list_rel;\n        p' = add_mset x A; q' = add_mset y Aa; x \\<notin># A;\n        y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<in># remove1_mset x (remdups_mset (A + Aa))\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>A Aa.\n       \\<lbrakk>x \\<noteq> y; (x, y) \\<in> lexord less_than_char;\n        y \\<notin># A;\n        (mult_monoms p (y # q), add_mset y (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel;\n        (p, A) \\<in> term_poly_list_rel; (q, Aa) \\<in> term_poly_list_rel;\n        p' = add_mset x A; q' = add_mset y Aa; x \\<notin># A;\n        y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<in># remove1_mset x (remdups_mset (A + Aa))\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>A Aa xa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; y \\<in># A;\n        (mult_monoms p (y # q), remdups_mset (A + Aa))\n        \\<in> term_poly_list_rel;\n        xa \\<in># Aa\\<rbrakk>\n       \\<Longrightarrow> (x, xa) \\<in> lexord less_than_char\n 7. \\<And>A Aa xa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; (x, y) \\<in> lexord less_than_char; y \\<notin># A;\n        (mult_monoms p (y # q), add_mset y (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel;\n        xa \\<in># Aa\\<rbrakk>\n       \\<Longrightarrow> (x, xa) \\<in> lexord less_than_char", "apply (meson lexord_cons_cons list.inject total_on_lexord_less_than_char_linear)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>A Aa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<noteq> y; y \\<in># A;\n        (mult_monoms p (y # q), remdups_mset (A + Aa))\n        \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>A Aa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<noteq> y; (x, y) \\<in> lexord less_than_char; y \\<notin># A;\n        (mult_monoms p (y # q), add_mset y (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>A Aa.\n       \\<lbrakk>x \\<noteq> y; y \\<in># A;\n        (mult_monoms p (y # q), remdups_mset (A + Aa))\n        \\<in> term_poly_list_rel;\n        (p, A) \\<in> term_poly_list_rel; (q, Aa) \\<in> term_poly_list_rel;\n        p' = add_mset x A; q' = add_mset y Aa; x \\<notin># A;\n        y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<in># remove1_mset x (remdups_mset (A + Aa))\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>A Aa.\n       \\<lbrakk>x \\<noteq> y; (x, y) \\<in> lexord less_than_char;\n        y \\<notin># A;\n        (mult_monoms p (y # q), add_mset y (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel;\n        (p, A) \\<in> term_poly_list_rel; (q, Aa) \\<in> term_poly_list_rel;\n        p' = add_mset x A; q' = add_mset y Aa; x \\<notin># A;\n        y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<in># remove1_mset x (remdups_mset (A + Aa))\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>A Aa xa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; y \\<in># A;\n        (mult_monoms p (y # q), remdups_mset (A + Aa))\n        \\<in> term_poly_list_rel;\n        xa \\<in># Aa\\<rbrakk>\n       \\<Longrightarrow> (x, xa) \\<in> lexord less_than_char\n 6. \\<And>A Aa xa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; (x, y) \\<in> lexord less_than_char; y \\<notin># A;\n        (mult_monoms p (y # q), add_mset y (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel;\n        xa \\<in># Aa\\<rbrakk>\n       \\<Longrightarrow> (x, xa) \\<in> lexord less_than_char", "apply (meson lexord_cons_cons list.inject total_on_lexord_less_than_char_linear)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>A Aa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<noteq> y; (x, y) \\<in> lexord less_than_char; y \\<notin># A;\n        (mult_monoms p (y # q), add_mset y (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>A Aa.\n       \\<lbrakk>x \\<noteq> y; y \\<in># A;\n        (mult_monoms p (y # q), remdups_mset (A + Aa))\n        \\<in> term_poly_list_rel;\n        (p, A) \\<in> term_poly_list_rel; (q, Aa) \\<in> term_poly_list_rel;\n        p' = add_mset x A; q' = add_mset y Aa; x \\<notin># A;\n        y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<in># remove1_mset x (remdups_mset (A + Aa))\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>A Aa.\n       \\<lbrakk>x \\<noteq> y; (x, y) \\<in> lexord less_than_char;\n        y \\<notin># A;\n        (mult_monoms p (y # q), add_mset y (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel;\n        (p, A) \\<in> term_poly_list_rel; (q, Aa) \\<in> term_poly_list_rel;\n        p' = add_mset x A; q' = add_mset y Aa; x \\<notin># A;\n        y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<in># remove1_mset x (remdups_mset (A + Aa))\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>A Aa xa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; y \\<in># A;\n        (mult_monoms p (y # q), remdups_mset (A + Aa))\n        \\<in> term_poly_list_rel;\n        xa \\<in># Aa\\<rbrakk>\n       \\<Longrightarrow> (x, xa) \\<in> lexord less_than_char\n 5. \\<And>A Aa xa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; (x, y) \\<in> lexord less_than_char; y \\<notin># A;\n        (mult_monoms p (y # q), add_mset y (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel;\n        xa \\<in># Aa\\<rbrakk>\n       \\<Longrightarrow> (x, xa) \\<in> lexord less_than_char", "using lexord_trans trans_less_than_char var_order_rel_antisym"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x, ?y) \\<in> lexord ?r; (?y, ?z) \\<in> lexord ?r;\n   trans ?r\\<rbrakk>\n  \\<Longrightarrow> (?x, ?z) \\<in> lexord ?r\n  trans less_than_char\n  (?y, ?y) \\<notin> var_order_rel\n\ngoal (5 subgoals):\n 1. \\<And>A Aa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<noteq> y; (x, y) \\<in> lexord less_than_char; y \\<notin># A;\n        (mult_monoms p (y # q), add_mset y (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>A Aa.\n       \\<lbrakk>x \\<noteq> y; y \\<in># A;\n        (mult_monoms p (y # q), remdups_mset (A + Aa))\n        \\<in> term_poly_list_rel;\n        (p, A) \\<in> term_poly_list_rel; (q, Aa) \\<in> term_poly_list_rel;\n        p' = add_mset x A; q' = add_mset y Aa; x \\<notin># A;\n        y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<in># remove1_mset x (remdups_mset (A + Aa))\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>A Aa.\n       \\<lbrakk>x \\<noteq> y; (x, y) \\<in> lexord less_than_char;\n        y \\<notin># A;\n        (mult_monoms p (y # q), add_mset y (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel;\n        (p, A) \\<in> term_poly_list_rel; (q, Aa) \\<in> term_poly_list_rel;\n        p' = add_mset x A; q' = add_mset y Aa; x \\<notin># A;\n        y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<in># remove1_mset x (remdups_mset (A + Aa))\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>A Aa xa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; y \\<in># A;\n        (mult_monoms p (y # q), remdups_mset (A + Aa))\n        \\<in> term_poly_list_rel;\n        xa \\<in># Aa\\<rbrakk>\n       \\<Longrightarrow> (x, xa) \\<in> lexord less_than_char\n 5. \\<And>A Aa xa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; (x, y) \\<in> lexord less_than_char; y \\<notin># A;\n        (mult_monoms p (y # q), add_mset y (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel;\n        xa \\<in># Aa\\<rbrakk>\n       \\<Longrightarrow> (x, xa) \\<in> lexord less_than_char", "unfolding var_order_rel_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x, ?y) \\<in> lexord ?r; (?y, ?z) \\<in> lexord ?r;\n   trans ?r\\<rbrakk>\n  \\<Longrightarrow> (?x, ?z) \\<in> lexord ?r\n  trans less_than_char\n  (?y, ?y) \\<notin> lexord less_than_char\n\ngoal (5 subgoals):\n 1. \\<And>A Aa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<noteq> y; (x, y) \\<in> lexord less_than_char; y \\<notin># A;\n        (mult_monoms p (y # q), add_mset y (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>A Aa.\n       \\<lbrakk>x \\<noteq> y; y \\<in># A;\n        (mult_monoms p (y # q), remdups_mset (A + Aa))\n        \\<in> term_poly_list_rel;\n        (p, A) \\<in> term_poly_list_rel; (q, Aa) \\<in> term_poly_list_rel;\n        p' = add_mset x A; q' = add_mset y Aa; x \\<notin># A;\n        y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<in># remove1_mset x (remdups_mset (A + Aa))\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>A Aa.\n       \\<lbrakk>x \\<noteq> y; (x, y) \\<in> lexord less_than_char;\n        y \\<notin># A;\n        (mult_monoms p (y # q), add_mset y (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel;\n        (p, A) \\<in> term_poly_list_rel; (q, Aa) \\<in> term_poly_list_rel;\n        p' = add_mset x A; q' = add_mset y Aa; x \\<notin># A;\n        y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char; x \\<in># Aa;\n        x \\<in># remove1_mset x (remdups_mset (A + Aa))\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>A Aa xa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; y \\<in># A;\n        (mult_monoms p (y # q), remdups_mset (A + Aa))\n        \\<in> term_poly_list_rel;\n        xa \\<in># Aa\\<rbrakk>\n       \\<Longrightarrow> (x, xa) \\<in> lexord less_than_char\n 5. \\<And>A Aa xa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; (x, y) \\<in> lexord less_than_char; y \\<notin># A;\n        (mult_monoms p (y # q), add_mset y (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel;\n        xa \\<in># Aa\\<rbrakk>\n       \\<Longrightarrow> (x, xa) \\<in> lexord less_than_char", "apply blast+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y; (x, y) \\<notin> var_order_rel\\<rbrakk>\n    \\<Longrightarrow> (mult_monoms (x # p) (y # q), remdups_mset (p' + q'))\n                      \\<in> term_poly_list_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y; (x, y) \\<notin> var_order_rel\\<rbrakk>\n    \\<Longrightarrow> (mult_monoms (x # p) (y # q), remdups_mset (p' + q'))\n                      \\<in> term_poly_list_rel", "using p(3)[of \\<open>p'\\<close> \\<open>remove1_mset y q'\\<close>] p(4-)"], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<noteq> y; (x, y) \\<notin> var_order_rel;\n   (x # p, p') \\<in> term_poly_list_rel;\n   (q, remove1_mset y q') \\<in> term_poly_list_rel\\<rbrakk>\n  \\<Longrightarrow> (mult_monoms (x # p) q,\n                     remdups_mset (p' + remove1_mset y q'))\n                    \\<in> term_poly_list_rel\n  (x # p, p') \\<in> term_poly_list_rel\n  (y # q, q') \\<in> term_poly_list_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y; (x, y) \\<notin> var_order_rel\\<rbrakk>\n    \\<Longrightarrow> (mult_monoms (x # p) (y # q), remdups_mset (p' + q'))\n                      \\<in> term_poly_list_rel", "apply (auto simp: term_poly_list_rel_Cons_iff rel2p_def\n            term_poly_list_rel_set_mset rel2p_def var_order_rel_antisym\n          dest!: multi_member_split[of _ p'] multi_member_split[of _ q']\n            var_notin_notin_mult_monomsD\n          split: if_splits)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A Aa xa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> var_order_rel;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> var_order_rel; x \\<noteq> y;\n        (x, y) \\<notin> var_order_rel; x \\<in># Aa;\n        (mult_monoms (x # p) q, remdups_mset (A + Aa))\n        \\<in> term_poly_list_rel;\n        xa \\<in># A\\<rbrakk>\n       \\<Longrightarrow> (y, xa) \\<in> var_order_rel\n 2. \\<And>A Aa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> var_order_rel;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> var_order_rel; x \\<noteq> y;\n        (x, y) \\<notin> var_order_rel; x \\<notin># Aa;\n        (mult_monoms (x # p) q, add_mset x (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> (y, x) \\<in> var_order_rel\n 3. \\<And>A Aa xa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> var_order_rel;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> var_order_rel; x \\<noteq> y;\n        (x, y) \\<notin> var_order_rel; x \\<notin># Aa;\n        (mult_monoms (x # p) q, add_mset x (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel;\n        xa \\<in># A\\<rbrakk>\n       \\<Longrightarrow> (y, xa) \\<in> var_order_rel", "using lexord_trans trans_less_than_char var_order_rel_antisym"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x, ?y) \\<in> lexord ?r; (?y, ?z) \\<in> lexord ?r;\n   trans ?r\\<rbrakk>\n  \\<Longrightarrow> (?x, ?z) \\<in> lexord ?r\n  trans less_than_char\n  (?y, ?y) \\<notin> var_order_rel\n\ngoal (3 subgoals):\n 1. \\<And>A Aa xa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> var_order_rel;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> var_order_rel; x \\<noteq> y;\n        (x, y) \\<notin> var_order_rel; x \\<in># Aa;\n        (mult_monoms (x # p) q, remdups_mset (A + Aa))\n        \\<in> term_poly_list_rel;\n        xa \\<in># A\\<rbrakk>\n       \\<Longrightarrow> (y, xa) \\<in> var_order_rel\n 2. \\<And>A Aa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> var_order_rel;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> var_order_rel; x \\<noteq> y;\n        (x, y) \\<notin> var_order_rel; x \\<notin># Aa;\n        (mult_monoms (x # p) q, add_mset x (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> (y, x) \\<in> var_order_rel\n 3. \\<And>A Aa xa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> var_order_rel;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> var_order_rel; x \\<noteq> y;\n        (x, y) \\<notin> var_order_rel; x \\<notin># Aa;\n        (mult_monoms (x # p) q, add_mset x (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel;\n        xa \\<in># A\\<rbrakk>\n       \\<Longrightarrow> (y, xa) \\<in> var_order_rel", "unfolding var_order_rel_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x, ?y) \\<in> lexord ?r; (?y, ?z) \\<in> lexord ?r;\n   trans ?r\\<rbrakk>\n  \\<Longrightarrow> (?x, ?z) \\<in> lexord ?r\n  trans less_than_char\n  (?y, ?y) \\<notin> lexord less_than_char\n\ngoal (3 subgoals):\n 1. \\<And>A Aa xa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; (x, y) \\<notin> lexord less_than_char; x \\<in># Aa;\n        (mult_monoms (x # p) q, remdups_mset (A + Aa))\n        \\<in> term_poly_list_rel;\n        xa \\<in># A\\<rbrakk>\n       \\<Longrightarrow> (y, xa) \\<in> lexord less_than_char\n 2. \\<And>A Aa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; (x, y) \\<notin> lexord less_than_char; x \\<notin># Aa;\n        (mult_monoms (x # p) q, add_mset x (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> (y, x) \\<in> lexord less_than_char\n 3. \\<And>A Aa xa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; (x, y) \\<notin> lexord less_than_char; x \\<notin># Aa;\n        (mult_monoms (x # p) q, add_mset x (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel;\n        xa \\<in># A\\<rbrakk>\n       \\<Longrightarrow> (y, xa) \\<in> lexord less_than_char", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>A Aa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; (x, y) \\<notin> lexord less_than_char; x \\<notin># Aa;\n        (mult_monoms (x # p) q, add_mset x (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel\\<rbrakk>\n       \\<Longrightarrow> (y, x) \\<in> lexord less_than_char\n 2. \\<And>A Aa xa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; (x, y) \\<notin> lexord less_than_char; x \\<notin># Aa;\n        (mult_monoms (x # p) q, add_mset x (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel;\n        xa \\<in># A\\<rbrakk>\n       \\<Longrightarrow> (y, xa) \\<in> lexord less_than_char", "apply (meson lexord_cons_cons list.inject total_on_lexord_less_than_char_linear)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A Aa xa.\n       \\<lbrakk>(p, A) \\<in> term_poly_list_rel;\n        (q, Aa) \\<in> term_poly_list_rel; p' = add_mset x A;\n        q' = add_mset y Aa; x \\<notin># A; y \\<notin># Aa;\n        \\<forall>xa\\<in>#A. (x, xa) \\<in> lexord less_than_char;\n        \\<forall>x\\<in>#Aa. (y, x) \\<in> lexord less_than_char;\n        x \\<noteq> y; (x, y) \\<notin> lexord less_than_char; x \\<notin># Aa;\n        (mult_monoms (x # p) q, add_mset x (remdups_mset (A + Aa)))\n        \\<in> term_poly_list_rel;\n        xa \\<in># A\\<rbrakk>\n       \\<Longrightarrow> (y, xa) \\<in> lexord less_than_char", "by (meson less_than_char_linear lexord_linear lexord_trans trans_less_than_char)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (mult_monoms, \\<lambda>a b. remdups_mset (a + b))\n  \\<in> term_poly_list_rel \\<rightarrow>\n        term_poly_list_rel \\<rightarrow> term_poly_list_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "definition mult_monomials :: \\<open>term_poly_list \\<times> int \\<Rightarrow> term_poly_list \\<times> int \\<Rightarrow> term_poly_list \\<times> int\\<close> where\n  \\<open>mult_monomials = (\\<lambda>(x, a) (y, b). (mult_monoms x y, a * b))\\<close>"], ["", "definition mult_poly_raw :: \\<open>llist_polynomial \\<Rightarrow> llist_polynomial \\<Rightarrow> llist_polynomial\\<close> where\n  \\<open>mult_poly_raw p q = foldl (\\<lambda>b x. map (mult_monomials x) q @ b) [] p\\<close>"], ["", "fun map_append where\n  \\<open>map_append f b [] = b\\<close> |\n  \\<open>map_append f b (x # xs) = f x # map_append f b xs\\<close>"], ["", "lemma map_append_alt_def:\n  \\<open>map_append f b xs = map f xs @ b\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. map_append f b xs = map f xs @ b", "by (induction f b xs rule: map_append.induct)\n   auto"], ["", "lemma foldl_append_empty:\n  \\<open>NO_MATCH [] xs \\<Longrightarrow> foldl (\\<lambda>b x. f x @ b) xs p = foldl (\\<lambda>b x. f x @ b) [] p @ xs\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. NO_MATCH [] xs \\<Longrightarrow>\n    foldl (\\<lambda>b x. f x @ b) xs p =\n    foldl (\\<lambda>b x. f x @ b) [] p @ xs", "apply (induction p arbitrary: xs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xs.\n       NO_MATCH [] xs \\<Longrightarrow>\n       foldl (\\<lambda>b x. f x @ b) xs [] =\n       foldl (\\<lambda>b x. f x @ b) [] [] @ xs\n 2. \\<And>a p xs.\n       \\<lbrakk>\\<And>xs.\n                   NO_MATCH [] xs \\<Longrightarrow>\n                   foldl (\\<lambda>b x. f x @ b) xs p =\n                   foldl (\\<lambda>b x. f x @ b) [] p @ xs;\n        NO_MATCH [] xs\\<rbrakk>\n       \\<Longrightarrow> foldl (\\<lambda>b x. f x @ b) xs (a # p) =\n                         foldl (\\<lambda>b x. f x @ b) [] (a # p) @ xs", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a p xs.\n       \\<lbrakk>\\<And>xs.\n                   NO_MATCH [] xs \\<Longrightarrow>\n                   foldl (\\<lambda>b x. f x @ b) xs p =\n                   foldl (\\<lambda>b x. f x @ b) [] p @ xs;\n        NO_MATCH [] xs\\<rbrakk>\n       \\<Longrightarrow> foldl (\\<lambda>b x. f x @ b) xs (a # p) =\n                         foldl (\\<lambda>b x. f x @ b) [] (a # p) @ xs", "by (metis (mono_tags, lifting) NO_MATCH_def append.assoc append_self_conv foldl_Cons)"], ["", "lemma poly_list_rel_empty_iff[simp]:\n  \\<open>([], r) \\<in> poly_list_rel R \\<longleftrightarrow> r = {#}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (([], r) \\<in> poly_list_rel R) = (r = {#})", "by (auto simp: poly_list_rel_def list_mset_rel_def br_def)"], ["", "lemma mult_poly_raw_simp[simp]:\n  \\<open>mult_poly_raw [] q = []\\<close>\n  \\<open>mult_poly_raw (x # p) q = mult_poly_raw p q @ map (mult_monomials x) q\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. PAC_Polynomials_Operations.mult_poly_raw [] q = [] &&&\n    PAC_Polynomials_Operations.mult_poly_raw (x # p) q =\n    PAC_Polynomials_Operations.mult_poly_raw p q @ map (mult_monomials x) q", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. PAC_Polynomials_Operations.mult_poly_raw [] q = []", "by (auto simp: mult_poly_raw_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. PAC_Polynomials_Operations.mult_poly_raw (x # p) q =\n    PAC_Polynomials_Operations.mult_poly_raw p q @ map (mult_monomials x) q", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. PAC_Polynomials_Operations.mult_poly_raw (x # p) q =\n    PAC_Polynomials_Operations.mult_poly_raw p q @ map (mult_monomials x) q", "by (induction p) (auto simp: mult_poly_raw_def foldl_append_empty)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma sorted_poly_list_relD:\n  \\<open>(q, q') \\<in> sorted_poly_list_rel R \\<Longrightarrow> q' = (\\<lambda>(a, b). (mset a, b)) `# mset q\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (q, q') \\<in> sorted_poly_list_rel R \\<Longrightarrow>\n    q' = {#(mset a, b). (a, b) \\<in># mset q#}", "apply (induction q arbitrary: q')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>q'.\n       ([], q') \\<in> sorted_poly_list_rel R \\<Longrightarrow>\n       q' = {#(mset a, y). (a, y) \\<in># mset []#}\n 2. \\<And>a q q'.\n       \\<lbrakk>\\<And>q'.\n                   (q, q') \\<in> sorted_poly_list_rel R \\<Longrightarrow>\n                   q' = {#(mset a, y). (a, y) \\<in># mset q#};\n        (a # q, q') \\<in> sorted_poly_list_rel R\\<rbrakk>\n       \\<Longrightarrow> q' = {#(mset a, y). (a, y) \\<in># mset (a # q)#}", "apply (auto simp: sorted_poly_list_rel_wrt_def list_mset_rel_def br_def\n    list_rel_split_right_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b q aa ys.\n       \\<lbrakk>\\<And>q'.\n                   (q, q')\n                   \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                                  int_rel\\<rangle>list_rel O\n                         {(c, a). a = mset c} \\<and>\n                   0 \\<notin> snd ` set_mset q' \\<Longrightarrow>\n                   q' =\n                   {#case x of (a, x) \\<Rightarrow> (mset a, x)\n                   . x \\<in># mset q#};\n        \\<forall>x\\<in>set q. R a (fst x); sorted_wrt R (map fst q);\n        a \\<notin> fst ` set q; distinct (map fst q);\n        (a, aa) \\<in> term_poly_list_rel;\n        (q, ys)\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        b \\<noteq> 0; 0 \\<notin> snd ` set ys\\<rbrakk>\n       \\<Longrightarrow> add_mset (aa, b) (mset ys) =\n                         add_mset (mset a, b)\n                          {#case x of (a, x) \\<Rightarrow> (mset a, x)\n                          . x \\<in># mset q#}", "apply (subst (asm)(2) term_poly_list_rel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b q aa ys.\n       \\<lbrakk>\\<And>q'.\n                   (q, q')\n                   \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                                  int_rel\\<rangle>list_rel O\n                         {(c, a). a = mset c} \\<and>\n                   0 \\<notin> snd ` set_mset q' \\<Longrightarrow>\n                   q' =\n                   {#case x of (a, x) \\<Rightarrow> (mset a, x)\n                   . x \\<in># mset q#};\n        \\<forall>x\\<in>set q. R a (fst x); sorted_wrt R (map fst q);\n        a \\<notin> fst ` set q; distinct (map fst q);\n        (a, aa)\n        \\<in> {(xs, ys).\n               ys = mset xs \\<and>\n               distinct xs \\<and> sorted_wrt var_order xs};\n        (q, ys)\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        b \\<noteq> 0; 0 \\<notin> snd ` set ys\\<rbrakk>\n       \\<Longrightarrow> add_mset (aa, b) (mset ys) =\n                         add_mset (mset a, b)\n                          {#case x of (a, x) \\<Rightarrow> (mset a, x)\n                          . x \\<in># mset q#}", "apply (simp add: relcomp.relcompI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma list_all2_in_set_ExD:\n  \\<open>list_all2 R p q \\<Longrightarrow> x \\<in> set p \\<Longrightarrow> \\<exists>y \\<in> set q. R x y\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>list_all2 R p q; x \\<in> set p\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y\\<in>set q. R x y", "by (induction p q rule: list_all2_induct)\n    auto"], ["", "inductive_cases mult_poly_p_elim: \\<open>mult_poly_p q (A, r) (B, r')\\<close>"], ["", "lemma mult_poly_p_add_mset_same:\n  \\<open>(mult_poly_p q')\\<^sup>*\\<^sup>* (A, r) (B, r') \\<Longrightarrow> (mult_poly_p q')\\<^sup>*\\<^sup>* (add_mset x A, r) (add_mset x B, r')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (mult_poly_p q')\\<^sup>*\\<^sup>* (A, r) (B, r') \\<Longrightarrow>\n    (mult_poly_p q')\\<^sup>*\\<^sup>* (add_mset x A, r) (add_mset x B, r')", "apply (induction rule: rtranclp_induct[of \\<open>mult_poly_p q'\\<close> \\<open>(_, r)\\<close> \\<open>(p', q'')\\<close> for p' q'', split_format(complete)])"], ["proof (prove)\ngoal (2 subgoals):\n 1. (mult_poly_p q')\\<^sup>*\\<^sup>* (add_mset x A, r) (add_mset x A, r)\n 2. \\<And>a b aa ba.\n       \\<lbrakk>(mult_poly_p q')\\<^sup>*\\<^sup>* (A, r) (a, b);\n        mult_poly_p q' (a, b) (aa, ba);\n        (mult_poly_p q')\\<^sup>*\\<^sup>* (add_mset x A, r)\n         (add_mset x a, b)\\<rbrakk>\n       \\<Longrightarrow> (mult_poly_p q')\\<^sup>*\\<^sup>* (add_mset x A, r)\n                          (add_mset x aa, ba)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (mult_poly_p q')\\<^sup>*\\<^sup>* (add_mset x A, r) (add_mset x A, r)", "by simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>(mult_poly_p q')\\<^sup>*\\<^sup>* (A, r) (a, b);\n        mult_poly_p q' (a, b) (aa, ba);\n        (mult_poly_p q')\\<^sup>*\\<^sup>* (add_mset x A, r)\n         (add_mset x a, b)\\<rbrakk>\n       \\<Longrightarrow> (mult_poly_p q')\\<^sup>*\\<^sup>* (add_mset x A, r)\n                          (add_mset x aa, ba)", "apply (rule rtranclp.rtrancl_into_rtrancl)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>(mult_poly_p q')\\<^sup>*\\<^sup>* (A, r) (a, b);\n        mult_poly_p q' (a, b) (aa, ba);\n        (mult_poly_p q')\\<^sup>*\\<^sup>* (add_mset x A, r)\n         (add_mset x a, b)\\<rbrakk>\n       \\<Longrightarrow> (mult_poly_p q')\\<^sup>*\\<^sup>* (add_mset x A, r)\n                          (?b3 a b aa ba)\n 2. \\<And>a b aa ba.\n       \\<lbrakk>(mult_poly_p q')\\<^sup>*\\<^sup>* (A, r) (a, b);\n        mult_poly_p q' (a, b) (aa, ba);\n        (mult_poly_p q')\\<^sup>*\\<^sup>* (add_mset x A, r)\n         (add_mset x a, b)\\<rbrakk>\n       \\<Longrightarrow> mult_poly_p q' (?b3 a b aa ba) (add_mset x aa, ba)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>(mult_poly_p q')\\<^sup>*\\<^sup>* (A, r) (a, b);\n        mult_poly_p q' (a, b) (aa, ba);\n        (mult_poly_p q')\\<^sup>*\\<^sup>* (add_mset x A, r)\n         (add_mset x a, b)\\<rbrakk>\n       \\<Longrightarrow> mult_poly_p q' (add_mset x a, b)\n                          (add_mset x aa, ba)", "by (auto elim!: mult_poly_p_elim intro: mult_poly_p.intros\n      intro: rtranclp.rtrancl_into_rtrancl simp: add_mset_commute[of x])"], ["", "lemma mult_poly_raw_mult_poly_p:\n  assumes \\<open>(p, p') \\<in> sorted_poly_rel\\<close> and \\<open>(q, q') \\<in> sorted_poly_rel\\<close>\n  shows \\<open>\\<exists>r. (mult_poly_raw p q, r) \\<in> unsorted_poly_rel \\<and> (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#}) ({#}, r)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r.\n       (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n       \\<in> unsorted_poly_rel \\<and>\n       (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#}) ({#}, r)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>r.\n       (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n       \\<in> unsorted_poly_rel \\<and>\n       (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#}) ({#}, r)", "have H: \\<open>(q, q') \\<in> sorted_poly_list_rel term_order \\<Longrightarrow> n < length q \\<Longrightarrow>\n    distinct aa \\<Longrightarrow> sorted_wrt var_order aa \\<Longrightarrow>\n    (mult_monoms aa (fst (q ! n)),\n           mset (mult_monoms aa (fst (q ! n))))\n          \\<in> term_poly_list_rel\\<close> for aa n"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(q, q') \\<in> sorted_poly_rel; n < length q; distinct aa;\n     sorted_wrt var_order aa\\<rbrakk>\n    \\<Longrightarrow> (mult_monoms aa (fst (q ! n)),\n                       mset (mult_monoms aa (fst (q ! n))))\n                      \\<in> term_poly_list_rel", "using mult_monoms_spec[unfolded fun_rel_def, simplified]"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>term_poly_list_rel.\n     case x of\n     (a, a') \\<Rightarrow>\n       \\<forall>x\\<in>term_poly_list_rel.\n          case x of\n          (aa, a'a) \\<Rightarrow>\n            (mult_monoms a aa, remdups_mset (a' + a'a))\n            \\<in> term_poly_list_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(q, q') \\<in> sorted_poly_rel; n < length q; distinct aa;\n     sorted_wrt var_order aa\\<rbrakk>\n    \\<Longrightarrow> (mult_monoms aa (fst (q ! n)),\n                       mset (mult_monoms aa (fst (q ! n))))\n                      \\<in> term_poly_list_rel", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(q, q') \\<in> sorted_poly_rel; n < length q; distinct aa;\n     sorted_wrt var_order aa;\n     \\<forall>x\\<in>term_poly_list_rel.\n        case x of\n        (a, a') \\<Rightarrow>\n          \\<forall>x\\<in>term_poly_list_rel.\n             case x of\n             (aa, a'a) \\<Rightarrow>\n               (mult_monoms a aa, remdups_mset (a' + a'a))\n               \\<in> term_poly_list_rel\\<rbrakk>\n    \\<Longrightarrow> (mult_monoms aa (fst (q ! n)),\n                       mset (mult_monoms aa (fst (q ! n))))\n                      \\<in> term_poly_list_rel", "apply (drule bspec[of _ _ \\<open>(aa, (mset aa))\\<close>])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(q, q') \\<in> sorted_poly_rel; n < length q; distinct aa;\n     sorted_wrt var_order aa\\<rbrakk>\n    \\<Longrightarrow> (aa, mset aa) \\<in> term_poly_list_rel\n 2. \\<lbrakk>(q, q') \\<in> sorted_poly_rel; n < length q; distinct aa;\n     sorted_wrt var_order aa;\n     case (aa, mset aa) of\n     (a, a') \\<Rightarrow>\n       \\<forall>x\\<in>term_poly_list_rel.\n          case x of\n          (aa, a'a) \\<Rightarrow>\n            (mult_monoms a aa, remdups_mset (a' + a'a))\n            \\<in> term_poly_list_rel\\<rbrakk>\n    \\<Longrightarrow> (mult_monoms aa (fst (q ! n)),\n                       mset (mult_monoms aa (fst (q ! n))))\n                      \\<in> term_poly_list_rel", "apply (auto simp: term_poly_list_rel_def)[]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(q, q') \\<in> sorted_poly_rel; n < length q; distinct aa;\n     sorted_wrt var_order aa;\n     case (aa, mset aa) of\n     (a, a') \\<Rightarrow>\n       \\<forall>x\\<in>term_poly_list_rel.\n          case x of\n          (aa, a'a) \\<Rightarrow>\n            (mult_monoms a aa, remdups_mset (a' + a'a))\n            \\<in> term_poly_list_rel\\<rbrakk>\n    \\<Longrightarrow> (mult_monoms aa (fst (q ! n)),\n                       mset (mult_monoms aa (fst (q ! n))))\n                      \\<in> term_poly_list_rel", "unfolding prod.case sorted_poly_list_rel_wrt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(q, q')\n             \\<in> {(xs, ys).\n                    (xs, ys)\n                    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                                   int_rel\\<rangle>list_rel O\n                          list_mset_rel \\<and>\n                    sorted_wrt term_order (map fst xs) \\<and>\n                    distinct (map fst xs) \\<and> 0 \\<notin># snd `# ys};\n     n < length q; distinct aa; sorted_wrt var_order aa;\n     \\<forall>(a, a')\\<in>term_poly_list_rel.\n        (mult_monoms aa a, remdups_mset (mset aa + a'))\n        \\<in> term_poly_list_rel\\<rbrakk>\n    \\<Longrightarrow> (mult_monoms aa (fst (q ! n)),\n                       mset (mult_monoms aa (fst (q ! n))))\n                      \\<in> term_poly_list_rel", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>n < length q; distinct aa; sorted_wrt var_order aa;\n        \\<forall>x\\<in>term_poly_list_rel.\n           case x of\n           (a, a') \\<Rightarrow>\n             (mult_monoms aa a, remdups_mset (mset aa + a'))\n             \\<in> term_poly_list_rel;\n        (q, y)\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        (y, q') \\<in> list_mset_rel; sorted_wrt term_order (map fst q);\n        distinct (map fst q); 0 \\<notin> snd ` set_mset q'\\<rbrakk>\n       \\<Longrightarrow> (mult_monoms aa (fst (q ! n)),\n                          mset (mult_monoms aa (fst (q ! n))))\n                         \\<in> term_poly_list_rel", "subgoal for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n < length q; distinct aa; sorted_wrt var_order aa;\n     \\<forall>x\\<in>term_poly_list_rel.\n        case x of\n        (a, a') \\<Rightarrow>\n          (mult_monoms aa a, remdups_mset (mset aa + a'))\n          \\<in> term_poly_list_rel;\n     (q, y)\n     \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                    int_rel\\<rangle>list_rel;\n     (y, q') \\<in> list_mset_rel; sorted_wrt term_order (map fst q);\n     distinct (map fst q); 0 \\<notin> snd ` set_mset q'\\<rbrakk>\n    \\<Longrightarrow> (mult_monoms aa (fst (q ! n)),\n                       mset (mult_monoms aa (fst (q ! n))))\n                      \\<in> term_poly_list_rel", "apply (drule bspec[of _ _ \\<open>(fst (q ! n), mset (fst (q ! n)))\\<close>])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n < length q; distinct aa; sorted_wrt var_order aa;\n     (q, y)\n     \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                    int_rel\\<rangle>list_rel;\n     (y, q') \\<in> list_mset_rel; sorted_wrt term_order (map fst q);\n     distinct (map fst q); 0 \\<notin> snd ` set_mset q'\\<rbrakk>\n    \\<Longrightarrow> (fst (q ! n), mset (fst (q ! n)))\n                      \\<in> term_poly_list_rel\n 2. \\<lbrakk>n < length q; distinct aa; sorted_wrt var_order aa;\n     (q, y)\n     \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                    int_rel\\<rangle>list_rel;\n     (y, q') \\<in> list_mset_rel; sorted_wrt term_order (map fst q);\n     distinct (map fst q); 0 \\<notin> snd ` set_mset q';\n     case (fst (q ! n), mset (fst (q ! n))) of\n     (a, a') \\<Rightarrow>\n       (mult_monoms aa a, remdups_mset (mset aa + a'))\n       \\<in> term_poly_list_rel\\<rbrakk>\n    \\<Longrightarrow> (mult_monoms aa (fst (q ! n)),\n                       mset (mult_monoms aa (fst (q ! n))))\n                      \\<in> term_poly_list_rel", "apply (cases \\<open>q ! n\\<close>; cases \\<open>y ! n\\<close>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b aaa ba.\n       \\<lbrakk>n < length q; distinct aa; sorted_wrt var_order aa;\n        (q, y)\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        (y, q') \\<in> list_mset_rel; sorted_wrt term_order (map fst q);\n        distinct (map fst q); 0 \\<notin> snd ` set_mset q'; q ! n = (a, b);\n        y ! n = (aaa, ba)\\<rbrakk>\n       \\<Longrightarrow> (fst (q ! n), mset (fst (q ! n)))\n                         \\<in> term_poly_list_rel\n 2. \\<lbrakk>n < length q; distinct aa; sorted_wrt var_order aa;\n     (q, y)\n     \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                    int_rel\\<rangle>list_rel;\n     (y, q') \\<in> list_mset_rel; sorted_wrt term_order (map fst q);\n     distinct (map fst q); 0 \\<notin> snd ` set_mset q';\n     case (fst (q ! n), mset (fst (q ! n))) of\n     (a, a') \\<Rightarrow>\n       (mult_monoms aa a, remdups_mset (mset aa + a'))\n       \\<in> term_poly_list_rel\\<rbrakk>\n    \\<Longrightarrow> (mult_monoms aa (fst (q ! n)),\n                       mset (mult_monoms aa (fst (q ! n))))\n                      \\<in> term_poly_list_rel", "using param_nth[of n y n q \\<open>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<close>]"], ["proof (prove)\nusing this:\n  \\<lbrakk>n < length y; (n, n) \\<in> nat_rel;\n   (q, y)\n   \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                  int_rel\\<rangle>list_rel\\<rbrakk>\n  \\<Longrightarrow> (q ! n, y ! n)\n                    \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel\n\ngoal (2 subgoals):\n 1. \\<And>a b aaa ba.\n       \\<lbrakk>n < length q; distinct aa; sorted_wrt var_order aa;\n        (q, y)\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        (y, q') \\<in> list_mset_rel; sorted_wrt term_order (map fst q);\n        distinct (map fst q); 0 \\<notin> snd ` set_mset q'; q ! n = (a, b);\n        y ! n = (aaa, ba)\\<rbrakk>\n       \\<Longrightarrow> (fst (q ! n), mset (fst (q ! n)))\n                         \\<in> term_poly_list_rel\n 2. \\<lbrakk>n < length q; distinct aa; sorted_wrt var_order aa;\n     (q, y)\n     \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                    int_rel\\<rangle>list_rel;\n     (y, q') \\<in> list_mset_rel; sorted_wrt term_order (map fst q);\n     distinct (map fst q); 0 \\<notin> snd ` set_mset q';\n     case (fst (q ! n), mset (fst (q ! n))) of\n     (a, a') \\<Rightarrow>\n       (mult_monoms aa a, remdups_mset (mset aa + a'))\n       \\<in> term_poly_list_rel\\<rbrakk>\n    \\<Longrightarrow> (mult_monoms aa (fst (q ! n)),\n                       mset (mult_monoms aa (fst (q ! n))))\n                      \\<in> term_poly_list_rel", "by (auto simp: list_rel_imp_same_length term_poly_list_rel_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<lbrakk>(q, q') \\<in> sorted_poly_rel; ?n < length q; distinct ?aa;\n   sorted_wrt var_order ?aa\\<rbrakk>\n  \\<Longrightarrow> (mult_monoms ?aa (fst (q ! ?n)),\n                     mset (mult_monoms ?aa (fst (q ! ?n))))\n                    \\<in> term_poly_list_rel\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n       \\<in> unsorted_poly_rel \\<and>\n       (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#}) ({#}, r)", "have H': \\<open>(q, q') \\<in> sorted_poly_list_rel term_order \\<Longrightarrow>\n    distinct aa \\<Longrightarrow> sorted_wrt var_order aa \\<Longrightarrow>\n     (ab, ba) \\<in> set q \\<Longrightarrow>\n       remdups_mset (mset aa + mset ab) = mset (mult_monoms aa ab)\\<close> for aa n ab ba"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(q, q') \\<in> sorted_poly_rel; distinct aa;\n     sorted_wrt var_order aa; (ab, ba) \\<in> set q\\<rbrakk>\n    \\<Longrightarrow> remdups_mset (mset aa + mset ab) =\n                      mset (mult_monoms aa ab)", "using mult_monoms_spec[unfolded fun_rel_def, simplified]"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>term_poly_list_rel.\n     case x of\n     (a, a') \\<Rightarrow>\n       \\<forall>x\\<in>term_poly_list_rel.\n          case x of\n          (aa, a'a) \\<Rightarrow>\n            (mult_monoms a aa, remdups_mset (a' + a'a))\n            \\<in> term_poly_list_rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(q, q') \\<in> sorted_poly_rel; distinct aa;\n     sorted_wrt var_order aa; (ab, ba) \\<in> set q\\<rbrakk>\n    \\<Longrightarrow> remdups_mset (mset aa + mset ab) =\n                      mset (mult_monoms aa ab)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(q, q') \\<in> sorted_poly_rel; distinct aa;\n     sorted_wrt var_order aa; (ab, ba) \\<in> set q;\n     \\<forall>x\\<in>term_poly_list_rel.\n        case x of\n        (a, a') \\<Rightarrow>\n          \\<forall>x\\<in>term_poly_list_rel.\n             case x of\n             (aa, a'a) \\<Rightarrow>\n               (mult_monoms a aa, remdups_mset (a' + a'a))\n               \\<in> term_poly_list_rel\\<rbrakk>\n    \\<Longrightarrow> remdups_mset (mset aa + mset ab) =\n                      mset (mult_monoms aa ab)", "apply (drule bspec[of _ _ \\<open>(aa, (mset aa))\\<close>])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(q, q') \\<in> sorted_poly_rel; distinct aa;\n     sorted_wrt var_order aa; (ab, ba) \\<in> set q\\<rbrakk>\n    \\<Longrightarrow> (aa, mset aa) \\<in> term_poly_list_rel\n 2. \\<lbrakk>(q, q') \\<in> sorted_poly_rel; distinct aa;\n     sorted_wrt var_order aa; (ab, ba) \\<in> set q;\n     case (aa, mset aa) of\n     (a, a') \\<Rightarrow>\n       \\<forall>x\\<in>term_poly_list_rel.\n          case x of\n          (aa, a'a) \\<Rightarrow>\n            (mult_monoms a aa, remdups_mset (a' + a'a))\n            \\<in> term_poly_list_rel\\<rbrakk>\n    \\<Longrightarrow> remdups_mset (mset aa + mset ab) =\n                      mset (mult_monoms aa ab)", "apply (auto simp: term_poly_list_rel_def)[]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(q, q') \\<in> sorted_poly_rel; distinct aa;\n     sorted_wrt var_order aa; (ab, ba) \\<in> set q;\n     case (aa, mset aa) of\n     (a, a') \\<Rightarrow>\n       \\<forall>x\\<in>term_poly_list_rel.\n          case x of\n          (aa, a'a) \\<Rightarrow>\n            (mult_monoms a aa, remdups_mset (a' + a'a))\n            \\<in> term_poly_list_rel\\<rbrakk>\n    \\<Longrightarrow> remdups_mset (mset aa + mset ab) =\n                      mset (mult_monoms aa ab)", "unfolding prod.case sorted_poly_list_rel_wrt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(q, q')\n             \\<in> {(xs, ys).\n                    (xs, ys)\n                    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                                   int_rel\\<rangle>list_rel O\n                          list_mset_rel \\<and>\n                    sorted_wrt term_order (map fst xs) \\<and>\n                    distinct (map fst xs) \\<and> 0 \\<notin># snd `# ys};\n     distinct aa; sorted_wrt var_order aa; (ab, ba) \\<in> set q;\n     \\<forall>(a, a')\\<in>term_poly_list_rel.\n        (mult_monoms aa a, remdups_mset (mset aa + a'))\n        \\<in> term_poly_list_rel\\<rbrakk>\n    \\<Longrightarrow> remdups_mset (mset aa + mset ab) =\n                      mset (mult_monoms aa ab)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>distinct aa; sorted_wrt var_order aa; (ab, ba) \\<in> set q;\n        \\<forall>x\\<in>term_poly_list_rel.\n           case x of\n           (a, a') \\<Rightarrow>\n             (mult_monoms aa a, remdups_mset (mset aa + a'))\n             \\<in> term_poly_list_rel;\n        (q, y)\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        (y, q') \\<in> list_mset_rel; sorted_wrt term_order (map fst q);\n        distinct (map fst q); 0 \\<notin> snd ` set_mset q'\\<rbrakk>\n       \\<Longrightarrow> remdups_mset (mset aa + mset ab) =\n                         mset (mult_monoms aa ab)", "subgoal for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct aa; sorted_wrt var_order aa; (ab, ba) \\<in> set q;\n     \\<forall>x\\<in>term_poly_list_rel.\n        case x of\n        (a, a') \\<Rightarrow>\n          (mult_monoms aa a, remdups_mset (mset aa + a'))\n          \\<in> term_poly_list_rel;\n     (q, y)\n     \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                    int_rel\\<rangle>list_rel;\n     (y, q') \\<in> list_mset_rel; sorted_wrt term_order (map fst q);\n     distinct (map fst q); 0 \\<notin> snd ` set_mset q'\\<rbrakk>\n    \\<Longrightarrow> remdups_mset (mset aa + mset ab) =\n                      mset (mult_monoms aa ab)", "apply (drule bspec[of _ _ \\<open>(ab, mset ab)\\<close>])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct aa; sorted_wrt var_order aa; (ab, ba) \\<in> set q;\n     (q, y)\n     \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                    int_rel\\<rangle>list_rel;\n     (y, q') \\<in> list_mset_rel; sorted_wrt term_order (map fst q);\n     distinct (map fst q); 0 \\<notin> snd ` set_mset q'\\<rbrakk>\n    \\<Longrightarrow> (ab, mset ab) \\<in> term_poly_list_rel\n 2. \\<lbrakk>distinct aa; sorted_wrt var_order aa; (ab, ba) \\<in> set q;\n     (q, y)\n     \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                    int_rel\\<rangle>list_rel;\n     (y, q') \\<in> list_mset_rel; sorted_wrt term_order (map fst q);\n     distinct (map fst q); 0 \\<notin> snd ` set_mset q';\n     case (ab, mset ab) of\n     (a, a') \\<Rightarrow>\n       (mult_monoms aa a, remdups_mset (mset aa + a'))\n       \\<in> term_poly_list_rel\\<rbrakk>\n    \\<Longrightarrow> remdups_mset (mset aa + mset ab) =\n                      mset (mult_monoms aa ab)", "apply (auto simp: list_rel_imp_same_length term_poly_list_rel_def list_rel_def\n        dest: list_all2_in_set_ExD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<lbrakk>(q, q') \\<in> sorted_poly_rel; distinct ?aa;\n   sorted_wrt var_order ?aa; (?ab, ?ba) \\<in> set q\\<rbrakk>\n  \\<Longrightarrow> remdups_mset (mset ?aa + mset ?ab) =\n                    mset (mult_monoms ?aa ?ab)\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n       \\<in> unsorted_poly_rel \\<and>\n       (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#}) ({#}, r)", "have  H: \\<open>(q, q') \\<in> sorted_poly_list_rel term_order \\<Longrightarrow>\n       a = (aa, b) \\<Longrightarrow>\n       (pq, r) \\<in> unsorted_poly_rel \\<Longrightarrow>\n       p' = add_mset (mset aa, b) A \\<Longrightarrow>\n       \\<forall>x\\<in>set p. term_order aa (fst x) \\<Longrightarrow>\n       sorted_wrt var_order aa \\<Longrightarrow>\n       distinct aa \\<Longrightarrow> b\\<noteq> 0 \\<Longrightarrow>\n       (\\<And>aaa. (aaa, 0) \\<notin># q') \\<Longrightarrow>\n       (pq @\n        map (mult_monomials (aa, b)) q,\n        {#case x of (ys, n) \\<Rightarrow> (remdups_mset (mset aa + ys), n * b)\n        . x \\<in># q'#} +\n        r)\n       \\<in> unsorted_poly_rel\\<close> for a p p' pq aa b r"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(q, q') \\<in> sorted_poly_rel; a = (aa, b);\n     (pq, r) \\<in> unsorted_poly_rel; p' = add_mset (mset aa, b) A;\n     \\<forall>x\\<in>set p. term_order aa (fst x); sorted_wrt var_order aa;\n     distinct aa; b \\<noteq> 0; \\<And>aaa. (aaa, 0) \\<notin># q'\\<rbrakk>\n    \\<Longrightarrow> (pq @ map (mult_monomials (aa, b)) q,\n                       {#case x of\n                         (ys, n) \\<Rightarrow>\n                           (remdups_mset (mset aa + ys), n * b)\n                       . x \\<in># q'#} +\n                       r)\n                      \\<in> unsorted_poly_rel", "apply (auto simp: poly_list_rel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>(q, q') \\<in> sorted_poly_rel; a = (aa, b);\n        p' = add_mset (mset aa, b) A;\n        \\<forall>x\\<in>set p. term_order aa (fst x);\n        sorted_wrt var_order aa; distinct aa; b \\<noteq> 0;\n        \\<And>aaa. (aaa, 0) \\<notin># q'; 0 \\<notin> snd ` set_mset r;\n        (pq, y)\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        (y, r) \\<in> list_mset_rel\\<rbrakk>\n       \\<Longrightarrow> (pq @ map (mult_monomials (aa, b)) q,\n                          {#case x of\n                            (ys, n) \\<Rightarrow>\n                              (remdups_mset (mset aa + ys), n * b)\n                          . x \\<in># q'#} +\n                          r)\n                         \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n  int_rel\\<rangle>list_rel O\n                               list_mset_rel", "apply (rule_tac b = \\<open>y @ map (\\<lambda>(a,b). (mset a, b)) (map (mult_monomials (aa, b)) q)\\<close> in relcompI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(q, q') \\<in> sorted_poly_rel; a = (aa, b);\n        p' = add_mset (mset aa, b) A;\n        \\<forall>x\\<in>set p. term_order aa (fst x);\n        sorted_wrt var_order aa; distinct aa; b \\<noteq> 0;\n        \\<And>aaa. (aaa, 0) \\<notin># q'; 0 \\<notin> snd ` set_mset r;\n        (pq, y)\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        (y, r) \\<in> list_mset_rel\\<rbrakk>\n       \\<Longrightarrow> (pq @ map (mult_monomials (aa, b)) q,\n                          y @\n                          map (\\<lambda>(a, b). (mset a, b))\n                           (map (mult_monomials (aa, b)) q))\n                         \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n  int_rel\\<rangle>list_rel\n 2. \\<And>y.\n       \\<lbrakk>(q, q') \\<in> sorted_poly_rel; a = (aa, b);\n        p' = add_mset (mset aa, b) A;\n        \\<forall>x\\<in>set p. term_order aa (fst x);\n        sorted_wrt var_order aa; distinct aa; b \\<noteq> 0;\n        \\<And>aaa. (aaa, 0) \\<notin># q'; 0 \\<notin> snd ` set_mset r;\n        (pq, y)\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel;\n        (y, r) \\<in> list_mset_rel\\<rbrakk>\n       \\<Longrightarrow> (y @\n                          map (\\<lambda>(a, b). (mset a, b))\n                           (map (mult_monomials (aa, b)) q),\n                          {#case x of\n                            (ys, n) \\<Rightarrow>\n                              (remdups_mset (mset aa + ys), n * b)\n                          . x \\<in># q'#} +\n                          r)\n                         \\<in> list_mset_rel", "apply (auto simp: list_rel_def list_all2_append list_all2_lengthD H\n     list_mset_rel_def br_def mult_monomials_def case_prod_beta intro!: list_all2_all_nthI\n     simp: sorted_poly_list_relD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>(q, q') \\<in> sorted_poly_rel; a = (aa, b);\n        p' = add_mset (mset aa, b) A;\n        \\<forall>x\\<in>set p. term_order aa (fst x);\n        sorted_wrt var_order aa; distinct aa; b \\<noteq> 0;\n        \\<And>aaa. (aaa, 0) \\<notin># q'; 0 \\<notin> snd ` set y;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         pq y;\n        r = mset y\\<rbrakk>\n       \\<Longrightarrow> {#(remdups_mset (mset aa + fst x), snd x * b)\n                         . x \\<in># q'#} =\n                         {#(mset (mult_monoms aa (fst x)), b * snd x)\n                         . x \\<in># mset q#}", "apply (subst sorted_poly_list_relD[of q q' term_order])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(q, q') \\<in> sorted_poly_rel; a = (aa, b);\n        p' = add_mset (mset aa, b) A;\n        \\<forall>x\\<in>set p. term_order aa (fst x);\n        sorted_wrt var_order aa; distinct aa; b \\<noteq> 0;\n        \\<And>aaa. (aaa, 0) \\<notin># q'; 0 \\<notin> snd ` set y;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         pq y;\n        r = mset y\\<rbrakk>\n       \\<Longrightarrow> (q, q') \\<in> sorted_poly_rel\n 2. \\<And>y.\n       \\<lbrakk>(q, q') \\<in> sorted_poly_rel; a = (aa, b);\n        p' = add_mset (mset aa, b) A;\n        \\<forall>x\\<in>set p. term_order aa (fst x);\n        sorted_wrt var_order aa; distinct aa; b \\<noteq> 0;\n        \\<And>aaa. (aaa, 0) \\<notin># q'; 0 \\<notin> snd ` set y;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         pq y;\n        r = mset y\\<rbrakk>\n       \\<Longrightarrow> {#(remdups_mset (mset aa + fst x), snd x * b)\n                         . x \\<in># {#(mset a, y). (a,\n                                    y) \\<in># mset q#}#} =\n                         {#(mset (mult_monoms aa (fst x)), b * snd x)\n                         . x \\<in># mset q#}", "apply (auto simp: case_prod_beta H' intro!: image_mset_cong)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<lbrakk>(q, q') \\<in> sorted_poly_rel; ?a = (?aa, ?b);\n   (?pq, ?r) \\<in> unsorted_poly_rel; ?p' = add_mset (mset ?aa, ?b) A;\n   \\<forall>x\\<in>set ?p. term_order ?aa (fst x); sorted_wrt var_order ?aa;\n   distinct ?aa; ?b \\<noteq> 0; \\<And>aaa. (aaa, 0) \\<notin># q'\\<rbrakk>\n  \\<Longrightarrow> (?pq @ map (mult_monomials (?aa, ?b)) q,\n                     {#case x of\n                       (ys, n) \\<Rightarrow>\n                         (remdups_mset (mset ?aa + ys), n * ?b)\n                     . x \\<in># q'#} +\n                     ?r)\n                    \\<in> unsorted_poly_rel\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n       \\<in> unsorted_poly_rel \\<and>\n       (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#}) ({#}, r)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r.\n       (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n       \\<in> unsorted_poly_rel \\<and>\n       (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#}) ({#}, r)", "using assms"], ["proof (prove)\nusing this:\n  (p, p') \\<in> sorted_poly_rel\n  (q, q') \\<in> sorted_poly_rel\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n       \\<in> unsorted_poly_rel \\<and>\n       (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#}) ({#}, r)", "apply (induction p arbitrary: p')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p'.\n       \\<lbrakk>([], p') \\<in> sorted_poly_rel;\n        (q, q') \\<in> sorted_poly_rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            (PAC_Polynomials_Operations.mult_poly_raw [] q,\n                             r)\n                            \\<in> unsorted_poly_rel \\<and>\n                            (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#})\n                             ({#}, r)\n 2. \\<And>a p p'.\n       \\<lbrakk>\\<And>p'.\n                   \\<lbrakk>(p, p') \\<in> sorted_poly_rel;\n                    (q, q') \\<in> sorted_poly_rel\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>r.\n  (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n  \\<in> unsorted_poly_rel \\<and>\n  (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#}) ({#}, r);\n        (a # p, p') \\<in> sorted_poly_rel;\n        (q, q') \\<in> sorted_poly_rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            (PAC_Polynomials_Operations.mult_poly_raw\n                              (a # p) q,\n                             r)\n                            \\<in> unsorted_poly_rel \\<and>\n                            (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#})\n                             ({#}, r)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>([], p'_) \\<in> sorted_poly_rel;\n     (q, q') \\<in> sorted_poly_rel\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (PAC_Polynomials_Operations.mult_poly_raw [] q, r)\n                         \\<in> unsorted_poly_rel \\<and>\n                         (mult_poly_p q')\\<^sup>*\\<^sup>* (p'_, {#})\n                          ({#}, r)", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a p p'.\n       \\<lbrakk>\\<And>p'.\n                   \\<lbrakk>(p, p') \\<in> sorted_poly_rel;\n                    (q, q') \\<in> sorted_poly_rel\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>r.\n  (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n  \\<in> unsorted_poly_rel \\<and>\n  (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#}) ({#}, r);\n        (a # p, p') \\<in> sorted_poly_rel;\n        (q, q') \\<in> sorted_poly_rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            (PAC_Polynomials_Operations.mult_poly_raw\n                              (a # p) q,\n                             r)\n                            \\<in> unsorted_poly_rel \\<and>\n                            (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#})\n                             ({#}, r)", "subgoal premises p for a p p'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r.\n       (PAC_Polynomials_Operations.mult_poly_raw (a # p) q, r)\n       \\<in> unsorted_poly_rel \\<and>\n       (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#}) ({#}, r)", "using p(1)[of \\<open>remove1_mset (mset (fst a), snd a) p'\\<close>] p(2-)"], ["proof (prove)\nusing this:\n  \\<lbrakk>(p, remove1_mset (mset (fst a), snd a) p') \\<in> sorted_poly_rel;\n   (q, q') \\<in> sorted_poly_rel\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n                       \\<in> unsorted_poly_rel \\<and>\n                       (mult_poly_p q')\\<^sup>*\\<^sup>*\n                        (remove1_mset (mset (fst a), snd a) p', {#})\n                        ({#}, r)\n  (a # p, p') \\<in> sorted_poly_rel\n  (q, q') \\<in> sorted_poly_rel\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       (PAC_Polynomials_Operations.mult_poly_raw (a # p) q, r)\n       \\<in> unsorted_poly_rel \\<and>\n       (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#}) ({#}, r)", "apply (cases a)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b.\n       \\<lbrakk>\\<lbrakk>(p, remove1_mset (mset (fst a), snd a) p')\n                         \\<in> sorted_poly_rel;\n                 (q, q') \\<in> sorted_poly_rel\\<rbrakk>\n                \\<Longrightarrow> \\<exists>r.\n                                     (PAC_Polynomials_Operations.mult_poly_raw\n p q,\nr)\n                                     \\<in> unsorted_poly_rel \\<and>\n                                     (mult_poly_p q')\\<^sup>*\\<^sup>*\n(remove1_mset (mset (fst a), snd a) p', {#}) ({#}, r);\n        (a # p, p') \\<in> sorted_poly_rel; (q, q') \\<in> sorted_poly_rel;\n        a = (aa, b)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            (PAC_Polynomials_Operations.mult_poly_raw\n                              (a # p) q,\n                             r)\n                            \\<in> unsorted_poly_rel \\<and>\n                            (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#})\n                             ({#}, r)", "apply (auto simp: sorted_poly_list_rel_Cons_iff\n        dest!: multi_member_split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b r A.\n       \\<lbrakk>(q, q') \\<in> sorted_poly_rel; a = (aa, b);\n        (p, A) \\<in> sorted_poly_rel;\n        (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n        \\<in> unsorted_poly_rel;\n        (mult_poly_p q')\\<^sup>*\\<^sup>* (A, {#}) ({#}, r);\n        p' = add_mset (mset aa, b) A;\n        \\<forall>x\\<in>set p. term_order aa (fst x);\n        sorted_wrt var_order aa; distinct aa; aa \\<notin> fst ` set p;\n        b \\<noteq> 0; nonzero_coeffs A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            (PAC_Polynomials_Operations.mult_poly_raw p q @\n                             map (mult_monomials (aa, b)) q,\n                             r)\n                            \\<in> unsorted_poly_rel \\<and>\n                            (mult_poly_p q')\\<^sup>*\\<^sup>*\n                             (add_mset (mset aa, b) A, {#}) ({#}, r)", "apply (rule_tac x = \\<open>(\\<lambda>(ys, n). (remdups_mset (mset (fst a) + ys), n * snd a)) `# q' + r\\<close> in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b r A.\n       \\<lbrakk>(q, q') \\<in> sorted_poly_rel; a = (aa, b);\n        (p, A) \\<in> sorted_poly_rel;\n        (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n        \\<in> unsorted_poly_rel;\n        (mult_poly_p q')\\<^sup>*\\<^sup>* (A, {#}) ({#}, r);\n        p' = add_mset (mset aa, b) A;\n        \\<forall>x\\<in>set p. term_order aa (fst x);\n        sorted_wrt var_order aa; distinct aa; aa \\<notin> fst ` set p;\n        b \\<noteq> 0; nonzero_coeffs A\\<rbrakk>\n       \\<Longrightarrow> (PAC_Polynomials_Operations.mult_poly_raw p q @\n                          map (mult_monomials (aa, b)) q,\n                          {#(remdups_mset (mset (fst a) + ys), n * snd a)\n                          . (ys, n) \\<in># q'#} +\n                          r)\n                         \\<in> unsorted_poly_rel \\<and>\n                         (mult_poly_p q')\\<^sup>*\\<^sup>*\n                          (add_mset (mset aa, b) A, {#})\n                          ({#},\n                           {#(remdups_mset (mset (fst a) + ys), n * snd a)\n                           . (ys, n) \\<in># q'#} +\n                           r)", "apply (auto 5 3 intro: mult_poly_p.intros simp: intro!: H\n        dest: sorted_poly_list_rel_nonzeroD nonzero_coeffsD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b r A.\n       \\<lbrakk>(q, q') \\<in> sorted_poly_rel; a = (aa, b);\n        (p, A) \\<in> sorted_poly_rel;\n        (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n        \\<in> unsorted_poly_rel;\n        (mult_poly_p q')\\<^sup>*\\<^sup>* (A, {#}) ({#}, r);\n        p' = add_mset (mset aa, b) A;\n        \\<forall>x\\<in>set p. term_order aa (fst x);\n        sorted_wrt var_order aa; distinct aa; aa \\<notin> fst ` set p;\n        b \\<noteq> 0; nonzero_coeffs A\\<rbrakk>\n       \\<Longrightarrow> (mult_poly_p q')\\<^sup>*\\<^sup>*\n                          (add_mset (mset aa, b) A, {#})\n                          ({#},\n                           {#case x of\n                             (ys, n) \\<Rightarrow>\n                               (remdups_mset (mset aa + ys), n * b)\n                           . x \\<in># q'#} +\n                           r)", "apply (rule rtranclp_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b r A.\n       \\<lbrakk>(q, q') \\<in> sorted_poly_rel; a = (aa, b);\n        (p, A) \\<in> sorted_poly_rel;\n        (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n        \\<in> unsorted_poly_rel;\n        (mult_poly_p q')\\<^sup>*\\<^sup>* (A, {#}) ({#}, r);\n        p' = add_mset (mset aa, b) A;\n        \\<forall>x\\<in>set p. term_order aa (fst x);\n        sorted_wrt var_order aa; distinct aa; aa \\<notin> fst ` set p;\n        b \\<noteq> 0; nonzero_coeffs A\\<rbrakk>\n       \\<Longrightarrow> (mult_poly_p q')\\<^sup>*\\<^sup>*\n                          (add_mset (mset aa, b) A, {#}) (?y143 aa b r A)\n 2. \\<And>aa b r A.\n       \\<lbrakk>(q, q') \\<in> sorted_poly_rel; a = (aa, b);\n        (p, A) \\<in> sorted_poly_rel;\n        (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n        \\<in> unsorted_poly_rel;\n        (mult_poly_p q')\\<^sup>*\\<^sup>* (A, {#}) ({#}, r);\n        p' = add_mset (mset aa, b) A;\n        \\<forall>x\\<in>set p. term_order aa (fst x);\n        sorted_wrt var_order aa; distinct aa; aa \\<notin> fst ` set p;\n        b \\<noteq> 0; nonzero_coeffs A\\<rbrakk>\n       \\<Longrightarrow> (mult_poly_p q')\\<^sup>*\\<^sup>* (?y143 aa b r A)\n                          ({#},\n                           {#case x of\n                             (ys, n) \\<Rightarrow>\n                               (remdups_mset (mset aa + ys), n * b)\n                           . x \\<in># q'#} +\n                           r)", "apply (rule mult_poly_p_add_mset_same)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b r A.\n       \\<lbrakk>(q, q') \\<in> sorted_poly_rel; a = (aa, b);\n        (p, A) \\<in> sorted_poly_rel;\n        (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n        \\<in> unsorted_poly_rel;\n        (mult_poly_p q')\\<^sup>*\\<^sup>* (A, {#}) ({#}, r);\n        p' = add_mset (mset aa, b) A;\n        \\<forall>x\\<in>set p. term_order aa (fst x);\n        sorted_wrt var_order aa; distinct aa; aa \\<notin> fst ` set p;\n        b \\<noteq> 0; nonzero_coeffs A\\<rbrakk>\n       \\<Longrightarrow> (mult_poly_p q')\\<^sup>*\\<^sup>* (A, {#})\n                          (?B146 aa b r A, ?r'146 aa b r A)\n 2. \\<And>aa b r A.\n       \\<lbrakk>(q, q') \\<in> sorted_poly_rel; a = (aa, b);\n        (p, A) \\<in> sorted_poly_rel;\n        (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n        \\<in> unsorted_poly_rel;\n        (mult_poly_p q')\\<^sup>*\\<^sup>* (A, {#}) ({#}, r);\n        p' = add_mset (mset aa, b) A;\n        \\<forall>x\\<in>set p. term_order aa (fst x);\n        sorted_wrt var_order aa; distinct aa; aa \\<notin> fst ` set p;\n        b \\<noteq> 0; nonzero_coeffs A\\<rbrakk>\n       \\<Longrightarrow> (mult_poly_p q')\\<^sup>*\\<^sup>*\n                          (add_mset (mset aa, b) (?B146 aa b r A),\n                           ?r'146 aa b r A)\n                          ({#},\n                           {#case x of\n                             (ys, n) \\<Rightarrow>\n                               (remdups_mset (mset aa + ys), n * b)\n                           . x \\<in># q'#} +\n                           r)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b r A.\n       \\<lbrakk>(q, q') \\<in> sorted_poly_rel; a = (aa, b);\n        (p, A) \\<in> sorted_poly_rel;\n        (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n        \\<in> unsorted_poly_rel;\n        (mult_poly_p q')\\<^sup>*\\<^sup>* (A, {#}) ({#}, r);\n        p' = add_mset (mset aa, b) A;\n        \\<forall>x\\<in>set p. term_order aa (fst x);\n        sorted_wrt var_order aa; distinct aa; aa \\<notin> fst ` set p;\n        b \\<noteq> 0; nonzero_coeffs A\\<rbrakk>\n       \\<Longrightarrow> (mult_poly_p q')\\<^sup>*\\<^sup>*\n                          ({#(mset aa, b)#}, r)\n                          ({#},\n                           {#case x of\n                             (ys, n) \\<Rightarrow>\n                               (remdups_mset (mset aa + ys), n * b)\n                           . x \\<in># q'#} +\n                           r)", "apply (rule converse_rtranclp_into_rtranclp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b r A.\n       \\<lbrakk>(q, q') \\<in> sorted_poly_rel; a = (aa, b);\n        (p, A) \\<in> sorted_poly_rel;\n        (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n        \\<in> unsorted_poly_rel;\n        (mult_poly_p q')\\<^sup>*\\<^sup>* (A, {#}) ({#}, r);\n        p' = add_mset (mset aa, b) A;\n        \\<forall>x\\<in>set p. term_order aa (fst x);\n        sorted_wrt var_order aa; distinct aa; aa \\<notin> fst ` set p;\n        b \\<noteq> 0; nonzero_coeffs A\\<rbrakk>\n       \\<Longrightarrow> mult_poly_p q' ({#(mset aa, b)#}, r)\n                          (?b148 aa b r A)\n 2. \\<And>aa b r A.\n       \\<lbrakk>(q, q') \\<in> sorted_poly_rel; a = (aa, b);\n        (p, A) \\<in> sorted_poly_rel;\n        (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n        \\<in> unsorted_poly_rel;\n        (mult_poly_p q')\\<^sup>*\\<^sup>* (A, {#}) ({#}, r);\n        p' = add_mset (mset aa, b) A;\n        \\<forall>x\\<in>set p. term_order aa (fst x);\n        sorted_wrt var_order aa; distinct aa; aa \\<notin> fst ` set p;\n        b \\<noteq> 0; nonzero_coeffs A\\<rbrakk>\n       \\<Longrightarrow> (mult_poly_p q')\\<^sup>*\\<^sup>* (?b148 aa b r A)\n                          ({#},\n                           {#case x of\n                             (ys, n) \\<Rightarrow>\n                               (remdups_mset (mset aa + ys), n * b)\n                           . x \\<in># q'#} +\n                           r)", "apply (auto intro!: mult_poly_p.intros simp: ac_simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>r.\n     (PAC_Polynomials_Operations.mult_poly_raw p q, r)\n     \\<in> unsorted_poly_rel \\<and>\n     (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#}) ({#}, r)\n\ngoal:\nNo subgoals!", "qed"], ["", "fun merge_coeffs :: \\<open>llist_polynomial \\<Rightarrow> llist_polynomial\\<close> where\n  \\<open>merge_coeffs [] = []\\<close> |\n  \\<open>merge_coeffs [(xs, n)] = [(xs, n)]\\<close> |\n  \\<open>merge_coeffs ((xs, n) # (ys, m) # p) =\n    (if xs = ys\n    then if n + m \\<noteq> 0 then merge_coeffs ((xs, n + m) # p) else merge_coeffs p\n    else (xs, n) # merge_coeffs ((ys, m) # p))\\<close>"], ["", "abbreviation  (in -)mononoms :: \\<open>llist_polynomial \\<Rightarrow> term_poly_list set\\<close> where\n  \\<open>mononoms p \\<equiv> fst `set p\\<close>"], ["", "lemma fst_normalize_polynomial_subset:\n  \\<open>mononoms (merge_coeffs p) \\<subseteq> mononoms p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. mononoms (merge_coeffs p) \\<subseteq> mononoms p", "by (induction p rule: merge_coeffs.induct)  auto"], ["", "lemma fst_normalize_polynomial_subsetD:\n  \\<open>(a, b) \\<in> set (merge_coeffs p) \\<Longrightarrow> a \\<in> mononoms p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> set (merge_coeffs p) \\<Longrightarrow> a \\<in> mononoms p", "apply (induction p rule: merge_coeffs.induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (a, b) \\<in> set (merge_coeffs []) \\<Longrightarrow> a \\<in> mononoms []\n 2. \\<And>xs n.\n       (a, b) \\<in> set (merge_coeffs [(xs, n)]) \\<Longrightarrow>\n       a \\<in> mononoms [(xs, n)]\n 3. \\<And>xs n ys m p.\n       \\<lbrakk>\\<lbrakk>xs = ys; n + m \\<noteq> 0;\n                 (a, b) \\<in> set (merge_coeffs ((xs, n + m) # p))\\<rbrakk>\n                \\<Longrightarrow> a \\<in> mononoms ((xs, n + m) # p);\n        \\<lbrakk>xs = ys; \\<not> n + m \\<noteq> 0;\n         (a, b) \\<in> set (merge_coeffs p)\\<rbrakk>\n        \\<Longrightarrow> a \\<in> mononoms p;\n        \\<lbrakk>xs \\<noteq> ys;\n         (a, b) \\<in> set (merge_coeffs ((ys, m) # p))\\<rbrakk>\n        \\<Longrightarrow> a \\<in> mononoms ((ys, m) # p);\n        (a, b) \\<in> set (merge_coeffs ((xs, n) # (ys, m) # p))\\<rbrakk>\n       \\<Longrightarrow> a \\<in> mononoms ((xs, n) # (ys, m) # p)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> set (merge_coeffs []) \\<Longrightarrow> a \\<in> mononoms []", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xs n.\n       (a, b) \\<in> set (merge_coeffs [(xs, n)]) \\<Longrightarrow>\n       a \\<in> mononoms [(xs, n)]\n 2. \\<And>xs n ys m p.\n       \\<lbrakk>\\<lbrakk>xs = ys; n + m \\<noteq> 0;\n                 (a, b) \\<in> set (merge_coeffs ((xs, n + m) # p))\\<rbrakk>\n                \\<Longrightarrow> a \\<in> mononoms ((xs, n + m) # p);\n        \\<lbrakk>xs = ys; \\<not> n + m \\<noteq> 0;\n         (a, b) \\<in> set (merge_coeffs p)\\<rbrakk>\n        \\<Longrightarrow> a \\<in> mononoms p;\n        \\<lbrakk>xs \\<noteq> ys;\n         (a, b) \\<in> set (merge_coeffs ((ys, m) # p))\\<rbrakk>\n        \\<Longrightarrow> a \\<in> mononoms ((ys, m) # p);\n        (a, b) \\<in> set (merge_coeffs ((xs, n) # (ys, m) # p))\\<rbrakk>\n       \\<Longrightarrow> a \\<in> mononoms ((xs, n) # (ys, m) # p)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> set (merge_coeffs [(xs_, n_)]) \\<Longrightarrow>\n    a \\<in> mononoms [(xs_, n_)]", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xs n ys m p.\n       \\<lbrakk>\\<lbrakk>xs = ys; n + m \\<noteq> 0;\n                 (a, b) \\<in> set (merge_coeffs ((xs, n + m) # p))\\<rbrakk>\n                \\<Longrightarrow> a \\<in> mononoms ((xs, n + m) # p);\n        \\<lbrakk>xs = ys; \\<not> n + m \\<noteq> 0;\n         (a, b) \\<in> set (merge_coeffs p)\\<rbrakk>\n        \\<Longrightarrow> a \\<in> mononoms p;\n        \\<lbrakk>xs \\<noteq> ys;\n         (a, b) \\<in> set (merge_coeffs ((ys, m) # p))\\<rbrakk>\n        \\<Longrightarrow> a \\<in> mononoms ((ys, m) # p);\n        (a, b) \\<in> set (merge_coeffs ((xs, n) # (ys, m) # p))\\<rbrakk>\n       \\<Longrightarrow> a \\<in> mononoms ((xs, n) # (ys, m) # p)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>xs_ = ys_; n_ + m_ \\<noteq> 0;\n              (a, b) \\<in> set (merge_coeffs ((xs_, n_ + m_) # p_))\\<rbrakk>\n             \\<Longrightarrow> a \\<in> mononoms ((xs_, n_ + m_) # p_);\n     \\<lbrakk>xs_ = ys_; \\<not> n_ + m_ \\<noteq> 0;\n      (a, b) \\<in> set (merge_coeffs p_)\\<rbrakk>\n     \\<Longrightarrow> a \\<in> mononoms p_;\n     \\<lbrakk>xs_ \\<noteq> ys_;\n      (a, b) \\<in> set (merge_coeffs ((ys_, m_) # p_))\\<rbrakk>\n     \\<Longrightarrow> a \\<in> mononoms ((ys_, m_) # p_);\n     (a, b) \\<in> set (merge_coeffs ((xs_, n_) # (ys_, m_) # p_))\\<rbrakk>\n    \\<Longrightarrow> a \\<in> mononoms ((xs_, n_) # (ys_, m_) # p_)", "by (auto split: if_splits)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma distinct_merge_coeffs:\n  assumes \\<open>sorted_wrt R (map fst xs)\\<close> and \\<open>transp R\\<close> \\<open>antisymp R\\<close>\n  shows \\<open>distinct (map fst (merge_coeffs xs))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (map fst (merge_coeffs xs))", "using assms"], ["proof (prove)\nusing this:\n  sorted_wrt R (map fst xs)\n  transp R\n  antisymp R\n\ngoal (1 subgoal):\n 1. distinct (map fst (merge_coeffs xs))", "by (induction xs rule: merge_coeffs.induct)\n    (auto 5 4 dest: antisympD dest!: fst_normalize_polynomial_subsetD)"], ["", "lemma in_set_merge_coeffsD:\n  \\<open>(a, b) \\<in> set (merge_coeffs p) \\<Longrightarrow>\\<exists>b. (a, b) \\<in> set p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> set (merge_coeffs p) \\<Longrightarrow>\n    \\<exists>b. (a, b) \\<in> set p", "by  (auto dest!: fst_normalize_polynomial_subsetD)"], ["", "lemma rtranclp_normalize_poly_add_mset:\n  \\<open>normalize_poly_p\\<^sup>*\\<^sup>* A r \\<Longrightarrow> normalize_poly_p\\<^sup>*\\<^sup>* (add_mset x A) (add_mset x r)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. normalize_poly_p\\<^sup>*\\<^sup>* A r \\<Longrightarrow>\n    normalize_poly_p\\<^sup>*\\<^sup>* (add_mset x A) (add_mset x r)", "by (induction rule: rtranclp_induct)\n    (auto dest: normalize_poly_p.keep_coeff[of _ _ x])"], ["", "lemma nonzero_coeffs_diff:\n  \\<open>nonzero_coeffs A \\<Longrightarrow> nonzero_coeffs (A - B)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. nonzero_coeffs A \\<Longrightarrow> nonzero_coeffs (A - B)", "by (auto simp: nonzero_coeffs_def dest: in_diffD)"], ["", "lemma merge_coeffs_is_normalize_poly_p:\n  \\<open>(xs, ys) \\<in> sorted_repeat_poly_rel \\<Longrightarrow> \\<exists>r. (merge_coeffs xs, r) \\<in> sorted_poly_rel \\<and> normalize_poly_p\\<^sup>*\\<^sup>* ys r\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (xs, ys)\n    \\<in> sorted_repeat_poly_list_rel\n           (rel2p (Id \\<union> term_order_rel)) \\<Longrightarrow>\n    \\<exists>r.\n       (merge_coeffs xs, r) \\<in> sorted_poly_rel \\<and>\n       normalize_poly_p\\<^sup>*\\<^sup>* ys r", "apply (induction xs arbitrary: ys rule: merge_coeffs.induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ys.\n       ([], ys)\n       \\<in> sorted_repeat_poly_list_rel\n              (rel2p (Id \\<union> term_order_rel)) \\<Longrightarrow>\n       \\<exists>r.\n          (merge_coeffs [], r) \\<in> sorted_poly_rel \\<and>\n          normalize_poly_p\\<^sup>*\\<^sup>* ys r\n 2. \\<And>xs n ys.\n       ([(xs, n)], ys)\n       \\<in> sorted_repeat_poly_list_rel\n              (rel2p (Id \\<union> term_order_rel)) \\<Longrightarrow>\n       \\<exists>r.\n          (merge_coeffs [(xs, n)], r) \\<in> sorted_poly_rel \\<and>\n          normalize_poly_p\\<^sup>*\\<^sup>* ys r\n 3. \\<And>xs n ys m p ysa.\n       \\<lbrakk>\\<And>ysa.\n                   \\<lbrakk>xs = ys; n + m \\<noteq> 0;\n                    ((xs, n + m) # p, ysa)\n                    \\<in> sorted_repeat_poly_list_rel\n                           (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>r.\n  (merge_coeffs ((xs, n + m) # p), r) \\<in> sorted_poly_rel \\<and>\n  normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        \\<And>ysa.\n           \\<lbrakk>xs = ys; \\<not> n + m \\<noteq> 0;\n            (p, ysa)\n            \\<in> sorted_repeat_poly_list_rel\n                   (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>r.\n                                (merge_coeffs p, r)\n                                \\<in> sorted_poly_rel \\<and>\n                                normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        \\<And>ysa.\n           \\<lbrakk>xs \\<noteq> ys;\n            ((ys, m) # p, ysa)\n            \\<in> sorted_repeat_poly_list_rel\n                   (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>r.\n                                (merge_coeffs ((ys, m) # p), r)\n                                \\<in> sorted_poly_rel \\<and>\n                                normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        ((xs, n) # (ys, m) # p, ysa)\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            (merge_coeffs ((xs, n) # (ys, m) # p), r)\n                            \\<in> sorted_poly_rel \\<and>\n                            normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([], ys_)\n    \\<in> sorted_repeat_poly_list_rel\n           (rel2p (Id \\<union> term_order_rel)) \\<Longrightarrow>\n    \\<exists>r.\n       (merge_coeffs [], r) \\<in> sorted_poly_rel \\<and>\n       normalize_poly_p\\<^sup>*\\<^sup>* ys_ r", "by (auto simp: sorted_repeat_poly_list_rel_wrt_def sorted_poly_list_rel_wrt_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xs n ys.\n       ([(xs, n)], ys)\n       \\<in> sorted_repeat_poly_list_rel\n              (rel2p (Id \\<union> term_order_rel)) \\<Longrightarrow>\n       \\<exists>r.\n          (merge_coeffs [(xs, n)], r) \\<in> sorted_poly_rel \\<and>\n          normalize_poly_p\\<^sup>*\\<^sup>* ys r\n 2. \\<And>xs n ys m p ysa.\n       \\<lbrakk>\\<And>ysa.\n                   \\<lbrakk>xs = ys; n + m \\<noteq> 0;\n                    ((xs, n + m) # p, ysa)\n                    \\<in> sorted_repeat_poly_list_rel\n                           (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>r.\n  (merge_coeffs ((xs, n + m) # p), r) \\<in> sorted_poly_rel \\<and>\n  normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        \\<And>ysa.\n           \\<lbrakk>xs = ys; \\<not> n + m \\<noteq> 0;\n            (p, ysa)\n            \\<in> sorted_repeat_poly_list_rel\n                   (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>r.\n                                (merge_coeffs p, r)\n                                \\<in> sorted_poly_rel \\<and>\n                                normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        \\<And>ysa.\n           \\<lbrakk>xs \\<noteq> ys;\n            ((ys, m) # p, ysa)\n            \\<in> sorted_repeat_poly_list_rel\n                   (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>r.\n                                (merge_coeffs ((ys, m) # p), r)\n                                \\<in> sorted_poly_rel \\<and>\n                                normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        ((xs, n) # (ys, m) # p, ysa)\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            (merge_coeffs ((xs, n) # (ys, m) # p), r)\n                            \\<in> sorted_poly_rel \\<and>\n                            normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([(xs_, n_)], ys_)\n    \\<in> sorted_repeat_poly_list_rel\n           (rel2p (Id \\<union> term_order_rel)) \\<Longrightarrow>\n    \\<exists>r.\n       (merge_coeffs [(xs_, n_)], r) \\<in> sorted_poly_rel \\<and>\n       normalize_poly_p\\<^sup>*\\<^sup>* ys_ r", "by (auto simp: sorted_repeat_poly_list_rel_wrt_def sorted_poly_list_rel_wrt_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xs n ys m p ysa.\n       \\<lbrakk>\\<And>ysa.\n                   \\<lbrakk>xs = ys; n + m \\<noteq> 0;\n                    ((xs, n + m) # p, ysa)\n                    \\<in> sorted_repeat_poly_list_rel\n                           (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>r.\n  (merge_coeffs ((xs, n + m) # p), r) \\<in> sorted_poly_rel \\<and>\n  normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        \\<And>ysa.\n           \\<lbrakk>xs = ys; \\<not> n + m \\<noteq> 0;\n            (p, ysa)\n            \\<in> sorted_repeat_poly_list_rel\n                   (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>r.\n                                (merge_coeffs p, r)\n                                \\<in> sorted_poly_rel \\<and>\n                                normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        \\<And>ysa.\n           \\<lbrakk>xs \\<noteq> ys;\n            ((ys, m) # p, ysa)\n            \\<in> sorted_repeat_poly_list_rel\n                   (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>r.\n                                (merge_coeffs ((ys, m) # p), r)\n                                \\<in> sorted_poly_rel \\<and>\n                                normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        ((xs, n) # (ys, m) # p, ysa)\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            (merge_coeffs ((xs, n) # (ys, m) # p), r)\n                            \\<in> sorted_poly_rel \\<and>\n                            normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "subgoal premises p for xs n ys m p ysa"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r.\n       (merge_coeffs ((xs, n) # (ys, m) # p), r)\n       \\<in> sorted_poly_rel \\<and>\n       normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "apply (cases \\<open>xs = ys\\<close>, cases \\<open>m+n \\<noteq> 0\\<close>)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>xs = ys; m + n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r\n 2. \\<lbrakk>xs = ys; \\<not> m + n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r\n 3. xs \\<noteq> ys \\<Longrightarrow>\n    \\<exists>r.\n       (merge_coeffs ((xs, n) # (ys, m) # p), r)\n       \\<in> sorted_poly_rel \\<and>\n       normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys; m + n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "using p(1)[of \\<open>add_mset (mset ys, m+n) ysa - {#(mset ys, m), (mset ys, n)#}\\<close>] p(4-)"], ["proof (prove)\nusing this:\n  \\<lbrakk>xs = ys; n + m \\<noteq> 0;\n   ((xs, n + m) # p,\n    add_mset (mset ys, m + n) ysa - {#(mset ys, m), (mset ys, n)#})\n   \\<in> sorted_repeat_poly_list_rel\n          (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       (merge_coeffs ((xs, n + m) # p), r)\n                       \\<in> sorted_poly_rel \\<and>\n                       normalize_poly_p\\<^sup>*\\<^sup>*\n                        (add_mset (mset ys, m + n) ysa -\n                         {#(mset ys, m), (mset ys, n)#})\n                        r\n  ((xs, n) # (ys, m) # p, ysa)\n  \\<in> sorted_repeat_poly_list_rel (rel2p (Id \\<union> term_order_rel))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys; m + n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "apply (auto simp: sorted_poly_list_rel_Cons_iff ac_simps add_mset_commute\n        remove1_mset_add_mset_If nonzero_coeffs_diff sorted_repeat_poly_list_rel_Cons_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>xs = ys; m + n \\<noteq> 0; distinct ys;\n        (merge_coeffs ((ys, m + n) # p), r) \\<in> sorted_poly_rel;\n        normalize_poly_p\\<^sup>*\\<^sup>*\n         (add_mset (mset ys, m + n) (ysa - {#(mset ys, m), (mset ys, n)#}))\n         r;\n        nonzero_coeffs ysa; m \\<noteq> 0; n \\<noteq> 0;\n        sorted_wrt var_order ys; rel2p (Id \\<union> term_order_rel) ys ys;\n        (mset ys, n) \\<in># ysa;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset ys, n) ysa;\n        (p, ysa - {#(mset ys, m), (mset ys, n)#})\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            normalize_poly_p\\<^sup>*\\<^sup>* ysa r \\<and>\n                            (merge_coeffs ((ys, m + n) # p), r)\n                            \\<in> sorted_poly_rel", "apply (rule_tac x = \\<open>r\\<close> in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>xs = ys; m + n \\<noteq> 0; distinct ys;\n        (merge_coeffs ((ys, m + n) # p), r) \\<in> sorted_poly_rel;\n        normalize_poly_p\\<^sup>*\\<^sup>*\n         (add_mset (mset ys, m + n) (ysa - {#(mset ys, m), (mset ys, n)#}))\n         r;\n        nonzero_coeffs ysa; m \\<noteq> 0; n \\<noteq> 0;\n        sorted_wrt var_order ys; rel2p (Id \\<union> term_order_rel) ys ys;\n        (mset ys, n) \\<in># ysa;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset ys, n) ysa;\n        (p, ysa - {#(mset ys, m), (mset ys, n)#})\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> normalize_poly_p\\<^sup>*\\<^sup>* ysa r \\<and>\n                         (merge_coeffs ((ys, m + n) # p), r)\n                         \\<in> sorted_poly_rel", "using normalize_poly_p.merge_dup_coeff[of \\<open>ysa -  {#(mset ys, m), (mset ys, n)#}\\<close> \\<open>ysa -  {#(mset ys, m), (mset ys, n)#}\\<close> \\<open>mset ys\\<close> m n]"], ["proof (prove)\nusing this:\n  normalize_poly_p (ysa - {#(mset ys, m), (mset ys, n)#})\n   (ysa - {#(mset ys, m), (mset ys, n)#}) \\<Longrightarrow>\n  normalize_poly_p\n   (add_mset (mset ys, m)\n     (add_mset (mset ys, n) (ysa - {#(mset ys, m), (mset ys, n)#})))\n   (add_mset (mset ys, m + n) (ysa - {#(mset ys, m), (mset ys, n)#}))\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>xs = ys; m + n \\<noteq> 0; distinct ys;\n        (merge_coeffs ((ys, m + n) # p), r) \\<in> sorted_poly_rel;\n        normalize_poly_p\\<^sup>*\\<^sup>*\n         (add_mset (mset ys, m + n) (ysa - {#(mset ys, m), (mset ys, n)#}))\n         r;\n        nonzero_coeffs ysa; m \\<noteq> 0; n \\<noteq> 0;\n        sorted_wrt var_order ys; rel2p (Id \\<union> term_order_rel) ys ys;\n        (mset ys, n) \\<in># ysa;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset ys, n) ysa;\n        (p, ysa - {#(mset ys, m), (mset ys, n)#})\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> normalize_poly_p\\<^sup>*\\<^sup>* ysa r \\<and>\n                         (merge_coeffs ((ys, m + n) # p), r)\n                         \\<in> sorted_poly_rel", "by (auto dest!: multi_member_split simp del: normalize_poly_p.merge_dup_coeff\n        simp: add_mset_commute\n        intro: converse_rtranclp_into_rtranclp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>xs = ys; \\<not> m + n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r\n 2. xs \\<noteq> ys \\<Longrightarrow>\n    \\<exists>r.\n       (merge_coeffs ((xs, n) # (ys, m) # p), r)\n       \\<in> sorted_poly_rel \\<and>\n       normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys; \\<not> m + n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "using p(2)[of \\<open>ysa - {#(mset ys, m), (mset ys, n)#}\\<close>] p(4-)"], ["proof (prove)\nusing this:\n  \\<lbrakk>xs = ys; \\<not> n + m \\<noteq> 0;\n   (p, ysa - {#(mset ys, m), (mset ys, n)#})\n   \\<in> sorted_repeat_poly_list_rel\n          (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       (merge_coeffs p, r) \\<in> sorted_poly_rel \\<and>\n                       normalize_poly_p\\<^sup>*\\<^sup>*\n                        (ysa - {#(mset ys, m), (mset ys, n)#}) r\n  ((xs, n) # (ys, m) # p, ysa)\n  \\<in> sorted_repeat_poly_list_rel (rel2p (Id \\<union> term_order_rel))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys; \\<not> m + n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "apply (auto simp: sorted_poly_list_rel_Cons_iff ac_simps add_mset_commute\n        remove1_mset_add_mset_If nonzero_coeffs_diff sorted_repeat_poly_list_rel_Cons_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>xs = ys; m + n = 0; distinct ys;\n        (merge_coeffs p, r) \\<in> sorted_poly_rel;\n        normalize_poly_p\\<^sup>*\\<^sup>*\n         (ysa - {#(mset ys, m), (mset ys, n)#}) r;\n        nonzero_coeffs ysa; n \\<noteq> 0; sorted_wrt var_order ys;\n        rel2p (Id \\<union> term_order_rel) ys ys; (mset ys, n) \\<in># ysa;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset ys, n) ysa;\n        (p, ysa - {#(mset ys, m), (mset ys, n)#})\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            normalize_poly_p\\<^sup>*\\<^sup>* ysa r \\<and>\n                            (merge_coeffs p, r) \\<in> sorted_poly_rel", "apply (rule_tac x = \\<open>r\\<close> in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>xs = ys; m + n = 0; distinct ys;\n        (merge_coeffs p, r) \\<in> sorted_poly_rel;\n        normalize_poly_p\\<^sup>*\\<^sup>*\n         (ysa - {#(mset ys, m), (mset ys, n)#}) r;\n        nonzero_coeffs ysa; n \\<noteq> 0; sorted_wrt var_order ys;\n        rel2p (Id \\<union> term_order_rel) ys ys; (mset ys, n) \\<in># ysa;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset ys, n) ysa;\n        (p, ysa - {#(mset ys, m), (mset ys, n)#})\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> normalize_poly_p\\<^sup>*\\<^sup>* ysa r \\<and>\n                         (merge_coeffs p, r) \\<in> sorted_poly_rel", "using normalize_poly_p.rem_0_coeff[of \\<open>add_mset (mset ys, m +n) ysa -  {#(mset ys, m), (mset ys, n)#}\\<close> \\<open>add_mset (mset ys, m +n) ysa -  {#(mset ys, m), (mset ys, n)#}\\<close> \\<open>mset ys\\<close>]"], ["proof (prove)\nusing this:\n  normalize_poly_p\n   (add_mset (mset ys, m + n) ysa - {#(mset ys, m), (mset ys, n)#})\n   (add_mset (mset ys, m + n) ysa -\n    {#(mset ys, m), (mset ys, n)#}) \\<Longrightarrow>\n  normalize_poly_p\n   (add_mset (mset ys, 0)\n     (add_mset (mset ys, m + n) ysa - {#(mset ys, m), (mset ys, n)#}))\n   (add_mset (mset ys, m + n) ysa - {#(mset ys, m), (mset ys, n)#})\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>xs = ys; m + n = 0; distinct ys;\n        (merge_coeffs p, r) \\<in> sorted_poly_rel;\n        normalize_poly_p\\<^sup>*\\<^sup>*\n         (ysa - {#(mset ys, m), (mset ys, n)#}) r;\n        nonzero_coeffs ysa; n \\<noteq> 0; sorted_wrt var_order ys;\n        rel2p (Id \\<union> term_order_rel) ys ys; (mset ys, n) \\<in># ysa;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset ys, n) ysa;\n        (p, ysa - {#(mset ys, m), (mset ys, n)#})\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> normalize_poly_p\\<^sup>*\\<^sup>* ysa r \\<and>\n                         (merge_coeffs p, r) \\<in> sorted_poly_rel", "using normalize_poly_p.merge_dup_coeff[of \\<open>ysa -  {#(mset ys, m), (mset ys, n)#}\\<close> \\<open>ysa -  {#(mset ys, m), (mset ys, n)#}\\<close> \\<open>mset ys\\<close> m n]"], ["proof (prove)\nusing this:\n  normalize_poly_p\n   (add_mset (mset ys, m + n) ysa - {#(mset ys, m), (mset ys, n)#})\n   (add_mset (mset ys, m + n) ysa -\n    {#(mset ys, m), (mset ys, n)#}) \\<Longrightarrow>\n  normalize_poly_p\n   (add_mset (mset ys, 0)\n     (add_mset (mset ys, m + n) ysa - {#(mset ys, m), (mset ys, n)#}))\n   (add_mset (mset ys, m + n) ysa - {#(mset ys, m), (mset ys, n)#})\n  normalize_poly_p (ysa - {#(mset ys, m), (mset ys, n)#})\n   (ysa - {#(mset ys, m), (mset ys, n)#}) \\<Longrightarrow>\n  normalize_poly_p\n   (add_mset (mset ys, m)\n     (add_mset (mset ys, n) (ysa - {#(mset ys, m), (mset ys, n)#})))\n   (add_mset (mset ys, m + n) (ysa - {#(mset ys, m), (mset ys, n)#}))\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>xs = ys; m + n = 0; distinct ys;\n        (merge_coeffs p, r) \\<in> sorted_poly_rel;\n        normalize_poly_p\\<^sup>*\\<^sup>*\n         (ysa - {#(mset ys, m), (mset ys, n)#}) r;\n        nonzero_coeffs ysa; n \\<noteq> 0; sorted_wrt var_order ys;\n        rel2p (Id \\<union> term_order_rel) ys ys; (mset ys, n) \\<in># ysa;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset ys, n) ysa;\n        (p, ysa - {#(mset ys, m), (mset ys, n)#})\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> normalize_poly_p\\<^sup>*\\<^sup>* ysa r \\<and>\n                         (merge_coeffs p, r) \\<in> sorted_poly_rel", "by (force intro: add_mset_commute[of \\<open>(mset ys, n)\\<close> \\<open>(mset ys, -n)\\<close>]\n          converse_rtranclp_into_rtranclp\n        dest!: multi_member_split\n        simp del: normalize_poly_p.rem_0_coeff\n        simp: add_eq_0_iff2\n        intro: normalize_poly_p.rem_0_coeff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<noteq> ys \\<Longrightarrow>\n    \\<exists>r.\n       (merge_coeffs ((xs, n) # (ys, m) # p), r)\n       \\<in> sorted_poly_rel \\<and>\n       normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<noteq> ys \\<Longrightarrow>\n    \\<exists>r.\n       (merge_coeffs ((xs, n) # (ys, m) # p), r)\n       \\<in> sorted_poly_rel \\<and>\n       normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "using p(3)[of \\<open>add_mset (mset ys, m) ysa - {#(mset xs, n), (mset ys, m)#}\\<close>] p(4-)"], ["proof (prove)\nusing this:\n  \\<lbrakk>xs \\<noteq> ys;\n   ((ys, m) # p, add_mset (mset ys, m) ysa - {#(mset xs, n), (mset ys, m)#})\n   \\<in> sorted_repeat_poly_list_rel\n          (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       (merge_coeffs ((ys, m) # p), r)\n                       \\<in> sorted_poly_rel \\<and>\n                       normalize_poly_p\\<^sup>*\\<^sup>*\n                        (add_mset (mset ys, m) ysa -\n                         {#(mset xs, n), (mset ys, m)#})\n                        r\n  ((xs, n) # (ys, m) # p, ysa)\n  \\<in> sorted_repeat_poly_list_rel (rel2p (Id \\<union> term_order_rel))\n\ngoal (1 subgoal):\n 1. xs \\<noteq> ys \\<Longrightarrow>\n    \\<exists>r.\n       (merge_coeffs ((xs, n) # (ys, m) # p), r)\n       \\<in> sorted_poly_rel \\<and>\n       normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "apply (auto simp: sorted_poly_list_rel_Cons_iff ac_simps add_mset_commute\n      remove1_mset_add_mset_If sorted_repeat_poly_list_rel_Cons_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>xs \\<noteq> ys; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (remove1_mset (mset xs, n) ysa) r;\n        (merge_coeffs ((ys, m) # p), r) \\<in> sorted_poly_rel; distinct ys;\n        nonzero_coeffs ysa; m \\<noteq> 0; n \\<noteq> 0;\n        sorted_wrt var_order xs; sorted_wrt var_order ys;\n        rel2p (Id \\<union> term_order_rel) xs ys; (mset xs, n) \\<in># ysa;\n        nonzero_coeffs (remove1_mset (mset xs, n) ysa);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) xs (fst x);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset xs, n) ysa;\n        (p, ysa - {#(mset xs, n), (mset ys, m)#})\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            nonzero_coeffs r \\<and>\n                            normalize_poly_p\\<^sup>*\\<^sup>* ysa r \\<and>\n                            (mset xs, n) \\<in># r \\<and>\n                            xs \\<notin> mononoms\n   (merge_coeffs ((ys, m) # p)) \\<and>\n                            (\\<forall>x\n\\<in>set (merge_coeffs ((ys, m) # p)).\n                                term_order xs (fst x)) \\<and>\n                            (merge_coeffs ((ys, m) # p),\n                             remove1_mset (mset xs, n) r)\n                            \\<in> sorted_poly_rel", "apply (rule_tac x = \\<open>add_mset (mset xs, n) r\\<close> in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>xs \\<noteq> ys; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (remove1_mset (mset xs, n) ysa) r;\n        (merge_coeffs ((ys, m) # p), r) \\<in> sorted_poly_rel; distinct ys;\n        nonzero_coeffs ysa; m \\<noteq> 0; n \\<noteq> 0;\n        sorted_wrt var_order xs; sorted_wrt var_order ys;\n        rel2p (Id \\<union> term_order_rel) xs ys; (mset xs, n) \\<in># ysa;\n        nonzero_coeffs (remove1_mset (mset xs, n) ysa);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) xs (fst x);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset xs, n) ysa;\n        (p, ysa - {#(mset xs, n), (mset ys, m)#})\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> nonzero_coeffs (add_mset (mset xs, n) r) \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa\n                          (add_mset (mset xs, n) r) \\<and>\n                         (mset xs, n) \\<in># add_mset (mset xs, n) r \\<and>\n                         xs \\<notin> mononoms\n(merge_coeffs ((ys, m) # p)) \\<and>\n                         (\\<forall>x\\<in>set (merge_coeffs ((ys, m) # p)).\n                             term_order xs (fst x)) \\<and>\n                         (merge_coeffs ((ys, m) # p),\n                          remove1_mset (mset xs, n)\n                           (add_mset (mset xs, n) r))\n                         \\<in> sorted_poly_rel", "apply (auto dest!: in_set_merge_coeffsD)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>r.\n       \\<lbrakk>xs \\<noteq> ys; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (remove1_mset (mset xs, n) ysa) r;\n        (merge_coeffs ((ys, m) # p), r) \\<in> sorted_poly_rel; distinct ys;\n        nonzero_coeffs ysa; m \\<noteq> 0; n \\<noteq> 0;\n        sorted_wrt var_order xs; sorted_wrt var_order ys;\n        rel2p (Id \\<union> term_order_rel) xs ys; (mset xs, n) \\<in># ysa;\n        nonzero_coeffs (remove1_mset (mset xs, n) ysa);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) xs (fst x);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset xs, n) ysa;\n        (p, ysa - {#(mset xs, n), (mset ys, m)#})\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> nonzero_coeffs r\n 2. \\<And>r.\n       \\<lbrakk>xs \\<noteq> ys; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (remove1_mset (mset xs, n) ysa) r;\n        (merge_coeffs ((ys, m) # p), r) \\<in> sorted_poly_rel; distinct ys;\n        nonzero_coeffs ysa; m \\<noteq> 0; n \\<noteq> 0;\n        sorted_wrt var_order xs; sorted_wrt var_order ys;\n        rel2p (Id \\<union> term_order_rel) xs ys; (mset xs, n) \\<in># ysa;\n        nonzero_coeffs (remove1_mset (mset xs, n) ysa);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) xs (fst x);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset xs, n) ysa;\n        (p, ysa - {#(mset xs, n), (mset ys, m)#})\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> normalize_poly_p\\<^sup>*\\<^sup>* ysa\n                          (add_mset (mset xs, n) r)\n 3. \\<And>r ba.\n       \\<lbrakk>xs \\<noteq> ys; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (remove1_mset (mset xs, n) ysa) r;\n        (merge_coeffs ((ys, m) # p), r) \\<in> sorted_poly_rel; distinct ys;\n        nonzero_coeffs ysa; m \\<noteq> 0; n \\<noteq> 0;\n        sorted_wrt var_order xs; sorted_wrt var_order ys;\n        rel2p (Id \\<union> term_order_rel) xs ys; (mset xs, n) \\<in># ysa;\n        nonzero_coeffs (remove1_mset (mset xs, n) ysa);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) xs (fst x);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset xs, n) ysa;\n        (p, ysa - {#(mset xs, n), (mset ys, m)#})\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> term_order_rel));\n        (xs, ba) \\<in> set p\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>r.\n       \\<lbrakk>xs \\<noteq> ys; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (remove1_mset (mset xs, n) ysa) r;\n        (merge_coeffs ((ys, m) # p), r) \\<in> sorted_poly_rel; distinct ys;\n        nonzero_coeffs ysa; m \\<noteq> 0; n \\<noteq> 0;\n        sorted_wrt var_order xs; sorted_wrt var_order ys;\n        rel2p (Id \\<union> term_order_rel) xs ys; (mset xs, n) \\<in># ysa;\n        nonzero_coeffs (remove1_mset (mset xs, n) ysa);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) xs (fst x);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset xs, n) ysa;\n        (p, ysa - {#(mset xs, n), (mset ys, m)#})\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> term_order xs ys\n 5. \\<And>r a ba.\n       \\<lbrakk>xs \\<noteq> ys; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (remove1_mset (mset xs, n) ysa) r;\n        (merge_coeffs ((ys, m) # p), r) \\<in> sorted_poly_rel; distinct ys;\n        nonzero_coeffs ysa; m \\<noteq> 0; n \\<noteq> 0;\n        sorted_wrt var_order xs; sorted_wrt var_order ys;\n        rel2p (Id \\<union> term_order_rel) xs ys; (mset xs, n) \\<in># ysa;\n        nonzero_coeffs (remove1_mset (mset xs, n) ysa);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) xs (fst x);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset xs, n) ysa;\n        (p, ysa - {#(mset xs, n), (mset ys, m)#})\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> term_order_rel));\n        (a, ba) \\<in> set p\\<rbrakk>\n       \\<Longrightarrow> term_order xs a", "apply (auto intro: normalize_poly_p.intros rtranclp_normalize_poly_add_mset\n      simp: rel2p_def var_order_rel_def\n      dest!: multi_member_split\n      dest: sorted_poly_list_rel_nonzeroD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r ba Aa.\n       \\<lbrakk>xs \\<noteq> ys; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (add_mset (mset ys, m) Aa) r;\n        (merge_coeffs ((ys, m) # p), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        distinct ys; nonzero_coeffs Aa; m \\<noteq> 0; n \\<noteq> 0;\n        sorted_wrt (rel2p (lexord less_than_char)) xs;\n        sorted_wrt (rel2p (lexord less_than_char)) ys;\n        (xs, ys) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           xs = fst x \\<or>\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           ys = fst x \\<or>\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        (p, Aa)\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> lexord (lexord less_than_char)));\n        (xs, ba) \\<in> set p;\n        ysa = add_mset (mset xs, n) (add_mset (mset ys, m) Aa)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>r a ba Aa.\n       \\<lbrakk>xs \\<noteq> ys; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (add_mset (mset ys, m) Aa) r;\n        (merge_coeffs ((ys, m) # p), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        distinct ys; nonzero_coeffs Aa; m \\<noteq> 0; n \\<noteq> 0;\n        sorted_wrt (rel2p (lexord less_than_char)) xs;\n        sorted_wrt (rel2p (lexord less_than_char)) ys;\n        (xs, ys) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           xs = fst x \\<or>\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           ys = fst x \\<or>\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        (p, Aa)\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> lexord (lexord less_than_char)));\n        (a, ba) \\<in> set p;\n        ysa = add_mset (mset xs, n) (add_mset (mset ys, m) Aa)\\<rbrakk>\n       \\<Longrightarrow> (xs, a) \\<in> lexord (lexord less_than_char)", "using total_on_lexord_less_than_char_linear"], ["proof (prove)\nusing this:\n  ?xs \\<noteq> ?ys \\<Longrightarrow>\n  ((?xs, ?ys) \\<notin> lexord (lexord less_than_char)) =\n  ((?ys, ?xs) \\<in> lexord (lexord less_than_char))\n\ngoal (2 subgoals):\n 1. \\<And>r ba Aa.\n       \\<lbrakk>xs \\<noteq> ys; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (add_mset (mset ys, m) Aa) r;\n        (merge_coeffs ((ys, m) # p), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        distinct ys; nonzero_coeffs Aa; m \\<noteq> 0; n \\<noteq> 0;\n        sorted_wrt (rel2p (lexord less_than_char)) xs;\n        sorted_wrt (rel2p (lexord less_than_char)) ys;\n        (xs, ys) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           xs = fst x \\<or>\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           ys = fst x \\<or>\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        (p, Aa)\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> lexord (lexord less_than_char)));\n        (xs, ba) \\<in> set p;\n        ysa = add_mset (mset xs, n) (add_mset (mset ys, m) Aa)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>r a ba Aa.\n       \\<lbrakk>xs \\<noteq> ys; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (add_mset (mset ys, m) Aa) r;\n        (merge_coeffs ((ys, m) # p), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        distinct ys; nonzero_coeffs Aa; m \\<noteq> 0; n \\<noteq> 0;\n        sorted_wrt (rel2p (lexord less_than_char)) xs;\n        sorted_wrt (rel2p (lexord less_than_char)) ys;\n        (xs, ys) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           xs = fst x \\<or>\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           ys = fst x \\<or>\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        (p, Aa)\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> lexord (lexord less_than_char)));\n        (a, ba) \\<in> set p;\n        ysa = add_mset (mset xs, n) (add_mset (mset ys, m) Aa)\\<rbrakk>\n       \\<Longrightarrow> (xs, a) \\<in> lexord (lexord less_than_char)", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r a ba Aa.\n       \\<lbrakk>xs \\<noteq> ys; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (add_mset (mset ys, m) Aa) r;\n        (merge_coeffs ((ys, m) # p), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        distinct ys; nonzero_coeffs Aa; m \\<noteq> 0; n \\<noteq> 0;\n        sorted_wrt (rel2p (lexord less_than_char)) xs;\n        sorted_wrt (rel2p (lexord less_than_char)) ys;\n        (xs, ys) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           xs = fst x \\<or>\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           ys = fst x \\<or>\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        (p, Aa)\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> lexord (lexord less_than_char)));\n        (a, ba) \\<in> set p;\n        ysa = add_mset (mset xs, n) (add_mset (mset ys, m) Aa)\\<rbrakk>\n       \\<Longrightarrow> (xs, a) \\<in> lexord (lexord less_than_char)", "using total_on_lexord_less_than_char_linear"], ["proof (prove)\nusing this:\n  ?xs \\<noteq> ?ys \\<Longrightarrow>\n  ((?xs, ?ys) \\<notin> lexord (lexord less_than_char)) =\n  ((?ys, ?xs) \\<in> lexord (lexord less_than_char))\n\ngoal (1 subgoal):\n 1. \\<And>r a ba Aa.\n       \\<lbrakk>xs \\<noteq> ys; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (add_mset (mset ys, m) Aa) r;\n        (merge_coeffs ((ys, m) # p), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        distinct ys; nonzero_coeffs Aa; m \\<noteq> 0; n \\<noteq> 0;\n        sorted_wrt (rel2p (lexord less_than_char)) xs;\n        sorted_wrt (rel2p (lexord less_than_char)) ys;\n        (xs, ys) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           xs = fst x \\<or>\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           ys = fst x \\<or>\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        (p, Aa)\n        \\<in> sorted_repeat_poly_list_rel\n               (rel2p (Id \\<union> lexord (lexord less_than_char)));\n        (a, ba) \\<in> set p;\n        ysa = add_mset (mset xs, n) (add_mset (mset ys, m) Aa)\\<rbrakk>\n       \\<Longrightarrow> (xs, a) \\<in> lexord (lexord less_than_char)", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \\<open>Normalisation\\<close>"], ["", "definition normalize_poly where\n  \\<open>normalize_poly p = do {\n     p \\<leftarrow> sort_poly_spec p;\n     RETURN (merge_coeffs p)\n}\\<close>"], ["", "definition sort_coeff :: \\<open>string list \\<Rightarrow> string list nres\\<close> where\n\\<open>sort_coeff ys = SPEC(\\<lambda>xs. mset xs = mset ys \\<and> sorted_wrt (rel2p (Id \\<union> var_order_rel)) xs)\\<close>"], ["", "lemma distinct_var_order_Id_var_order:\n  \\<open>distinct a \\<Longrightarrow> sorted_wrt (rel2p (Id \\<union> var_order_rel)) a \\<Longrightarrow>\n          sorted_wrt var_order a\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct a;\n     sorted_wrt (rel2p (Id \\<union> var_order_rel)) a\\<rbrakk>\n    \\<Longrightarrow> sorted_wrt var_order a", "by (induction a) (auto simp: rel2p_def)"], ["", "definition sort_all_coeffs :: \\<open>llist_polynomial \\<Rightarrow> llist_polynomial nres\\<close> where\n\\<open>sort_all_coeffs xs = monadic_nfoldli xs (\\<lambda>_. RETURN True) (\\<lambda>(a, n) b. do {a \\<leftarrow> sort_coeff a; RETURN ((a, n) # b)}) []\\<close>"], ["", "lemma sort_all_coeffs_gen:\n  assumes \\<open>(\\<forall>xs \\<in> mononoms xs'. sorted_wrt (rel2p (var_order_rel)) xs)\\<close> and\n    \\<open>\\<forall>x \\<in> mononoms (xs @ xs'). distinct x\\<close>\n  shows \\<open>monadic_nfoldli xs (\\<lambda>_. RETURN True) (\\<lambda>(a, n) b. do {a \\<leftarrow> sort_coeff a; RETURN ((a, n) # b)}) xs' \\<le>\n     \\<Down>Id (SPEC(\\<lambda>ys. map (\\<lambda>(a,b). (mset a, b)) (rev xs @ xs') = map (\\<lambda>(a,b). (mset a, b)) (ys) \\<and>\n     (\\<forall>xs \\<in> mononoms ys. sorted_wrt (rel2p (var_order_rel)) xs)))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. monadic_nfoldli xs (\\<lambda>_. RETURN True)\n     (\\<lambda>(a, n) b.\n         sort_coeff a \\<bind> (\\<lambda>a. RETURN ((a, n) # b)))\n     xs'\n    \\<le> \\<Down> Id\n           (SPEC\n             (\\<lambda>ys.\n                 map (\\<lambda>(a, b). (mset a, b)) (rev xs @ xs') =\n                 map (\\<lambda>(a, b). (mset a, b)) ys \\<and>\n                 (\\<forall>xs\\<in>mononoms ys. sorted_wrt var_order xs)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. monadic_nfoldli xs (\\<lambda>_. RETURN True)\n     (\\<lambda>(a, n) b.\n         sort_coeff a \\<bind> (\\<lambda>a. RETURN ((a, n) # b)))\n     xs'\n    \\<le> \\<Down> Id\n           (SPEC\n             (\\<lambda>ys.\n                 map (\\<lambda>(a, b). (mset a, b)) (rev xs @ xs') =\n                 map (\\<lambda>(a, b). (mset a, b)) ys \\<and>\n                 (\\<forall>xs\\<in>mononoms ys. sorted_wrt var_order xs)))", "have H: \\<open>\n       \\<forall>x\\<in>set xs'. sorted_wrt var_order (fst x) \\<Longrightarrow>\n       sorted_wrt (rel2p (Id \\<union> var_order_rel)) x \\<Longrightarrow>\n       (aaa, ba) \\<in> set xs' \\<Longrightarrow>\n       sorted_wrt (rel2p (Id \\<union> var_order_rel)) aaa\\<close> for xs  xs' ba aa b x aaa"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>set xs'. sorted_wrt var_order (fst x);\n     sorted_wrt (rel2p (Id \\<union> var_order_rel)) x;\n     (aaa, ba) \\<in> set xs'\\<rbrakk>\n    \\<Longrightarrow> sorted_wrt (rel2p (Id \\<union> var_order_rel)) aaa", "by (metis UnCI fst_eqD rel2p_def sorted_wrt_mono_rel)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>x\\<in>set ?xs'. sorted_wrt var_order (fst x);\n   sorted_wrt (rel2p (Id \\<union> var_order_rel)) ?x;\n   (?aaa, ?ba) \\<in> set ?xs'\\<rbrakk>\n  \\<Longrightarrow> sorted_wrt (rel2p (Id \\<union> var_order_rel)) ?aaa\n\ngoal (1 subgoal):\n 1. monadic_nfoldli xs (\\<lambda>_. RETURN True)\n     (\\<lambda>(a, n) b.\n         sort_coeff a \\<bind> (\\<lambda>a. RETURN ((a, n) # b)))\n     xs'\n    \\<le> \\<Down> Id\n           (SPEC\n             (\\<lambda>ys.\n                 map (\\<lambda>(a, b). (mset a, b)) (rev xs @ xs') =\n                 map (\\<lambda>(a, b). (mset a, b)) ys \\<and>\n                 (\\<forall>xs\\<in>mononoms ys. sorted_wrt var_order xs)))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. monadic_nfoldli xs (\\<lambda>_. RETURN True)\n     (\\<lambda>(a, n) b.\n         sort_coeff a \\<bind> (\\<lambda>a. RETURN ((a, n) # b)))\n     xs'\n    \\<le> \\<Down> Id\n           (SPEC\n             (\\<lambda>ys.\n                 map (\\<lambda>(a, b). (mset a, b)) (rev xs @ xs') =\n                 map (\\<lambda>(a, b). (mset a, b)) ys \\<and>\n                 (\\<forall>xs\\<in>mononoms ys. sorted_wrt var_order xs)))", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>xs\\<in>mononoms xs'. sorted_wrt var_order xs\n  \\<forall>x\\<in>mononoms (xs @ xs'). distinct x\n\ngoal (1 subgoal):\n 1. monadic_nfoldli xs (\\<lambda>_. RETURN True)\n     (\\<lambda>(a, n) b.\n         sort_coeff a \\<bind> (\\<lambda>a. RETURN ((a, n) # b)))\n     xs'\n    \\<le> \\<Down> Id\n           (SPEC\n             (\\<lambda>ys.\n                 map (\\<lambda>(a, b). (mset a, b)) (rev xs @ xs') =\n                 map (\\<lambda>(a, b). (mset a, b)) ys \\<and>\n                 (\\<forall>xs\\<in>mononoms ys. sorted_wrt var_order xs)))", "unfolding sort_all_coeffs_def sort_coeff_def"], ["proof (prove)\nusing this:\n  \\<forall>xs\\<in>mononoms xs'. sorted_wrt var_order xs\n  \\<forall>x\\<in>mononoms (xs @ xs'). distinct x\n\ngoal (1 subgoal):\n 1. monadic_nfoldli xs (\\<lambda>_. RETURN True)\n     (\\<lambda>(a, n) b.\n         SPEC\n          (\\<lambda>xs.\n              mset xs = mset a \\<and>\n              sorted_wrt (rel2p (Id \\<union> var_order_rel)) xs) \\<bind>\n         (\\<lambda>a. RETURN ((a, n) # b)))\n     xs'\n    \\<le> \\<Down> Id\n           (SPEC\n             (\\<lambda>ys.\n                 map (\\<lambda>(a, b). (mset a, b)) (rev xs @ xs') =\n                 map (\\<lambda>(a, b). (mset a, b)) ys \\<and>\n                 (\\<forall>xs\\<in>mononoms ys. sorted_wrt var_order xs)))", "apply (induction xs arbitrary: xs')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xs'.\n       \\<lbrakk>Ball (mononoms xs') (sorted_wrt var_order);\n        Ball (mononoms ([] @ xs')) distinct\\<rbrakk>\n       \\<Longrightarrow> monadic_nfoldli [] (\\<lambda>_. RETURN True)\n                          (\\<lambda>(a, n) b.\n                              SPEC\n                               (\\<lambda>xs.\n                                   mset xs = mset a \\<and>\n                                   sorted_wrt\n                                    (rel2p (Id \\<union> var_order_rel))\n                                    xs) \\<bind>\n                              (\\<lambda>a. RETURN ((a, n) # b)))\n                          xs'\n                         \\<le> \\<Down> Id\n                                (SPEC\n                                  (\\<lambda>ys.\nmap (\\<lambda>(a, y). (mset a, y)) (rev [] @ xs') =\nmap (\\<lambda>(a, y). (mset a, y)) ys \\<and>\nBall (mononoms ys) (sorted_wrt var_order)))\n 2. \\<And>a xs xs'.\n       \\<lbrakk>\\<And>xs'.\n                   \\<lbrakk>Ball (mononoms xs') (sorted_wrt var_order);\n                    Ball (mononoms (xs @ xs')) distinct\\<rbrakk>\n                   \\<Longrightarrow> monadic_nfoldli xs\n(\\<lambda>_. RETURN True)\n(\\<lambda>(a, n) b.\n    SPEC\n     (\\<lambda>xs.\n         mset xs = mset a \\<and>\n         sorted_wrt (rel2p (Id \\<union> var_order_rel)) xs) \\<bind>\n    (\\<lambda>a. RETURN ((a, n) # b)))\nxs'\n                                     \\<le> \\<Down> Id\n      (SPEC\n        (\\<lambda>ys.\n            map (\\<lambda>(a, y). (mset a, y)) (rev xs @ xs') =\n            map (\\<lambda>(a, y). (mset a, y)) ys \\<and>\n            Ball (mononoms ys) (sorted_wrt var_order)));\n        Ball (mononoms xs') (sorted_wrt var_order);\n        Ball (mononoms ((a # xs) @ xs')) distinct\\<rbrakk>\n       \\<Longrightarrow> monadic_nfoldli (a # xs) (\\<lambda>_. RETURN True)\n                          (\\<lambda>(a, n) b.\n                              SPEC\n                               (\\<lambda>xs.\n                                   mset xs = mset a \\<and>\n                                   sorted_wrt\n                                    (rel2p (Id \\<union> var_order_rel))\n                                    xs) \\<bind>\n                              (\\<lambda>a. RETURN ((a, n) # b)))\n                          xs'\n                         \\<le> \\<Down> Id\n                                (SPEC\n                                  (\\<lambda>ys.\nmap (\\<lambda>(a, y). (mset a, y)) (rev (a # xs) @ xs') =\nmap (\\<lambda>(a, y). (mset a, y)) ys \\<and>\nBall (mononoms ys) (sorted_wrt var_order)))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ball (mononoms xs'_) (sorted_wrt var_order);\n     Ball (mononoms ([] @ xs'_)) distinct\\<rbrakk>\n    \\<Longrightarrow> monadic_nfoldli [] (\\<lambda>_. RETURN True)\n                       (\\<lambda>(a, n) b.\n                           SPEC\n                            (\\<lambda>xs.\n                                mset xs = mset a \\<and>\n                                sorted_wrt\n                                 (rel2p (Id \\<union> var_order_rel))\n                                 xs) \\<bind>\n                           (\\<lambda>a. RETURN ((a, n) # b)))\n                       xs'_\n                      \\<le> \\<Down> Id\n                             (SPEC\n                               (\\<lambda>ys.\n                                   map (\\<lambda>(a, y). (mset a, y))\n                                    (rev [] @ xs'_) =\n                                   map (\\<lambda>(a, y). (mset a, y))\n                                    ys \\<and>\n                                   Ball (mononoms ys)\n                                    (sorted_wrt var_order)))", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>xs\\<in>mononoms xs'. sorted_wrt var_order xs\n  \\<forall>x\\<in>mononoms (xs @ xs'). distinct x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Ball (mononoms xs'_) (sorted_wrt var_order);\n     Ball (mononoms ([] @ xs'_)) distinct\\<rbrakk>\n    \\<Longrightarrow> monadic_nfoldli [] (\\<lambda>_. RETURN True)\n                       (\\<lambda>(a, n) b.\n                           SPEC\n                            (\\<lambda>xs.\n                                mset xs = mset a \\<and>\n                                sorted_wrt\n                                 (rel2p (Id \\<union> var_order_rel))\n                                 xs) \\<bind>\n                           (\\<lambda>a. RETURN ((a, n) # b)))\n                       xs'_\n                      \\<le> \\<Down> Id\n                             (SPEC\n                               (\\<lambda>ys.\n                                   map (\\<lambda>(a, y). (mset a, y))\n                                    (rev [] @ xs'_) =\n                                   map (\\<lambda>(a, y). (mset a, y))\n                                    ys \\<and>\n                                   Ball (mononoms ys)\n                                    (sorted_wrt var_order)))", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs xs'.\n       \\<lbrakk>\\<And>xs'.\n                   \\<lbrakk>Ball (mononoms xs') (sorted_wrt var_order);\n                    Ball (mononoms (xs @ xs')) distinct\\<rbrakk>\n                   \\<Longrightarrow> monadic_nfoldli xs\n(\\<lambda>_. RETURN True)\n(\\<lambda>(a, n) b.\n    SPEC\n     (\\<lambda>xs.\n         mset xs = mset a \\<and>\n         sorted_wrt (rel2p (Id \\<union> var_order_rel)) xs) \\<bind>\n    (\\<lambda>a. RETURN ((a, n) # b)))\nxs'\n                                     \\<le> \\<Down> Id\n      (SPEC\n        (\\<lambda>ys.\n            map (\\<lambda>(a, y). (mset a, y)) (rev xs @ xs') =\n            map (\\<lambda>(a, y). (mset a, y)) ys \\<and>\n            Ball (mononoms ys) (sorted_wrt var_order)));\n        Ball (mononoms xs') (sorted_wrt var_order);\n        Ball (mononoms ((a # xs) @ xs')) distinct\\<rbrakk>\n       \\<Longrightarrow> monadic_nfoldli (a # xs) (\\<lambda>_. RETURN True)\n                          (\\<lambda>(a, n) b.\n                              SPEC\n                               (\\<lambda>xs.\n                                   mset xs = mset a \\<and>\n                                   sorted_wrt\n                                    (rel2p (Id \\<union> var_order_rel))\n                                    xs) \\<bind>\n                              (\\<lambda>a. RETURN ((a, n) # b)))\n                          xs'\n                         \\<le> \\<Down> Id\n                                (SPEC\n                                  (\\<lambda>ys.\nmap (\\<lambda>(a, y). (mset a, y)) (rev (a # xs) @ xs') =\nmap (\\<lambda>(a, y). (mset a, y)) ys \\<and>\nBall (mononoms ys) (sorted_wrt var_order)))", "subgoal premises p for a xs"], ["proof (prove)\ngoal (1 subgoal):\n 1. monadic_nfoldli (a # xs) (\\<lambda>_. RETURN True)\n     (\\<lambda>(a, n) b.\n         SPEC\n          (\\<lambda>xs.\n              mset xs = mset a \\<and>\n              sorted_wrt (rel2p (Id \\<union> var_order_rel)) xs) \\<bind>\n         (\\<lambda>a. RETURN ((a, n) # b)))\n     xs'_\n    \\<le> \\<Down> Id\n           (SPEC\n             (\\<lambda>ys.\n                 map (\\<lambda>(a, y). (mset a, y)) (rev (a # xs) @ xs'_) =\n                 map (\\<lambda>(a, y). (mset a, y)) ys \\<and>\n                 Ball (mononoms ys) (sorted_wrt var_order)))", "using p(2-)"], ["proof (prove)\nusing this:\n  Ball (mononoms xs'_) (sorted_wrt var_order)\n  Ball (mononoms ((a # xs) @ xs'_)) distinct\n\ngoal (1 subgoal):\n 1. monadic_nfoldli (a # xs) (\\<lambda>_. RETURN True)\n     (\\<lambda>(a, n) b.\n         SPEC\n          (\\<lambda>xs.\n              mset xs = mset a \\<and>\n              sorted_wrt (rel2p (Id \\<union> var_order_rel)) xs) \\<bind>\n         (\\<lambda>a. RETURN ((a, n) # b)))\n     xs'_\n    \\<le> \\<Down> Id\n           (SPEC\n             (\\<lambda>ys.\n                 map (\\<lambda>(a, y). (mset a, y)) (rev (a # xs) @ xs'_) =\n                 map (\\<lambda>(a, y). (mset a, y)) ys \\<and>\n                 Ball (mononoms ys) (sorted_wrt var_order)))", "apply (cases a, simp only: monadic_nfoldli_simp bind_to_let_conv Let_def if_True Refine_Basic.nres_monad3\n        intro_spec_refine_iff prod.case)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b.\n       \\<lbrakk>Ball (mononoms xs'_) (sorted_wrt var_order);\n        Ball (mononoms (((aa, b) # xs) @ xs'_)) distinct; a = (aa, b);\n        Ball (mononoms xs'_) (sorted_wrt var_order);\n        Ball (mononoms (((aa, b) # xs) @ xs'_)) distinct\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>{xs.\n   mset xs = mset aa \\<and>\n   sorted_wrt (rel2p (Id \\<union> var_order_rel)) xs}.\n                            monadic_nfoldli xs (\\<lambda>_. RETURN True)\n                             (\\<lambda>(a, n) b.\n                                 SPEC\n                                  (\\<lambda>xs.\nmset xs = mset a \\<and>\nsorted_wrt (rel2p (Id \\<union> var_order_rel)) xs) \\<bind>\n                                 (\\<lambda>a. RETURN ((a, n) # b)))\n                             ((x, b) # xs'_)\n                            \\<le> \\<Down> Id\n                                   (SPEC\n                                     (\\<lambda>ys.\n   map (\\<lambda>(a, y). (mset a, y)) (rev ((aa, b) # xs) @ xs'_) =\n   map (\\<lambda>(a, y). (mset a, y)) ys \\<and>\n   Ball (mononoms ys) (sorted_wrt var_order)))", "by (auto 5 3 simp: intro_spec_refine_iff image_Un\n        dest: same_mset_distinct_iff\n        intro!: p(1)[THEN order_trans] distinct_var_order_Id_var_order\n        simp: H)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  monadic_nfoldli xs (\\<lambda>_. RETURN True)\n   (\\<lambda>(a, n) b.\n       sort_coeff a \\<bind> (\\<lambda>a. RETURN ((a, n) # b)))\n   xs'\n  \\<le> \\<Down> Id\n         (SPEC\n           (\\<lambda>ys.\n               map (\\<lambda>(a, b). (mset a, b)) (rev xs @ xs') =\n               map (\\<lambda>(a, b). (mset a, b)) ys \\<and>\n               (\\<forall>xs\\<in>mononoms ys. sorted_wrt var_order xs)))\n\ngoal:\nNo subgoals!", "qed"], ["", "definition shuffle_coefficients where\n  \\<open>shuffle_coefficients xs = (SPEC(\\<lambda>ys. map (\\<lambda>(a,b). (mset a, b)) (rev xs) = map (\\<lambda>(a,b). (mset a, b)) ys \\<and>\n     (\\<forall>xs \\<in> mononoms ys. sorted_wrt (rel2p (var_order_rel)) xs)))\\<close>"], ["", "lemma sort_all_coeffs:\n  \\<open>\\<forall>x \\<in> mononoms xs. distinct x \\<Longrightarrow>\n  sort_all_coeffs xs \\<le> \\<Down> Id (shuffle_coefficients xs)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>mononoms xs. distinct x \\<Longrightarrow>\n    sort_all_coeffs xs \\<le> \\<Down> Id (shuffle_coefficients xs)", "unfolding sort_all_coeffs_def shuffle_coefficients_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>mononoms xs. distinct x \\<Longrightarrow>\n    monadic_nfoldli xs (\\<lambda>_. RETURN True)\n     (\\<lambda>(a, n) b.\n         sort_coeff a \\<bind> (\\<lambda>a. RETURN ((a, n) # b)))\n     []\n    \\<le> \\<Down> Id\n           (SPEC\n             (\\<lambda>ys.\n                 map (\\<lambda>(a, y). (mset a, y)) (rev xs) =\n                 map (\\<lambda>(a, y). (mset a, y)) ys \\<and>\n                 Ball (mononoms ys) (sorted_wrt var_order)))", "by (rule sort_all_coeffs_gen[THEN order_trans])\n   auto"], ["", "lemma unsorted_term_poly_list_rel_mset:\n  \\<open>(ys, aa) \\<in> unsorted_term_poly_list_rel \\<Longrightarrow> mset ys = aa\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (ys, aa) \\<in> unsorted_term_poly_list_rel \\<Longrightarrow>\n    mset ys = aa", "by (auto simp: unsorted_term_poly_list_rel_def)"], ["", "lemma RETURN_map_alt_def:\n  \\<open>RETURN o (map f) =\n    REC\\<^sub>T (\\<lambda>g xs.\n      case xs of\n        [] \\<Rightarrow> RETURN []\n      | x # xs \\<Rightarrow> do {xs \\<leftarrow> g xs; RETURN (f x # xs)})\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (RETURN \\<circ>\\<circ> map) f =\n    REC\\<^sub>T\n     (\\<lambda>g xs.\n         case xs of [] \\<Rightarrow> RETURN []\n         | x # xs \\<Rightarrow>\n             g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs)))", "unfolding comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. RETURN (map f x)) =\n    REC\\<^sub>T\n     (\\<lambda>g xs.\n         case xs of [] \\<Rightarrow> RETURN []\n         | x # xs \\<Rightarrow>\n             g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs)))", "apply (subst eq_commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. REC\\<^sub>T\n     (\\<lambda>g.\n         case_list (RETURN [])\n          (\\<lambda>x xs. g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs)))) =\n    (\\<lambda>x. RETURN (map f x))", "apply (intro ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       REC\\<^sub>T\n        (\\<lambda>g.\n            case_list (RETURN [])\n             (\\<lambda>x xs. g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs))))\n        x =\n       RETURN (map f x)", "apply (induct_tac x)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       REC\\<^sub>T\n        (\\<lambda>g a.\n            case a of [] \\<Rightarrow> RETURN []\n            | x # xs \\<Rightarrow>\n                g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs)))\n        [] =\n       RETURN (map f [])\n 2. \\<And>x a list.\n       REC\\<^sub>T\n        (\\<lambda>g a.\n            case a of [] \\<Rightarrow> RETURN []\n            | x # xs \\<Rightarrow>\n                g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs)))\n        list =\n       RETURN (map f list) \\<Longrightarrow>\n       REC\\<^sub>T\n        (\\<lambda>g a.\n            case a of [] \\<Rightarrow> RETURN []\n            | x # xs \\<Rightarrow>\n                g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs)))\n        (a # list) =\n       RETURN (map f (a # list))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. REC\\<^sub>T\n     (\\<lambda>g a.\n         case a of [] \\<Rightarrow> RETURN []\n         | x # xs \\<Rightarrow>\n             g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs)))\n     [] =\n    RETURN (map f [])", "apply (subst RECT_unfold)"], ["proof (prove)\ngoal (2 subgoals):\n 1. trimono\n     (\\<lambda>g.\n         case_list (RETURN [])\n          (\\<lambda>x xs. g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs))))\n 2. (case [] of [] \\<Rightarrow> RETURN []\n     | x # xs \\<Rightarrow>\n         REC\\<^sub>T\n          (\\<lambda>g.\n              case_list (RETURN [])\n               (\\<lambda>x xs.\n                   g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs))))\n          xs \\<bind>\n         (\\<lambda>xs. RETURN (f x # xs))) =\n    RETURN (map f [])", "apply refine_mono"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case [] of [] \\<Rightarrow> RETURN []\n     | x # xs \\<Rightarrow>\n         REC\\<^sub>T\n          (\\<lambda>g.\n              case_list (RETURN [])\n               (\\<lambda>x xs.\n                   g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs))))\n          xs \\<bind>\n         (\\<lambda>xs. RETURN (f x # xs))) =\n    RETURN (map f [])", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x a list.\n       REC\\<^sub>T\n        (\\<lambda>g a.\n            case a of [] \\<Rightarrow> RETURN []\n            | x # xs \\<Rightarrow>\n                g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs)))\n        list =\n       RETURN (map f list) \\<Longrightarrow>\n       REC\\<^sub>T\n        (\\<lambda>g a.\n            case a of [] \\<Rightarrow> RETURN []\n            | x # xs \\<Rightarrow>\n                g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs)))\n        (a # list) =\n       RETURN (map f (a # list))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. REC\\<^sub>T\n     (\\<lambda>g a.\n         case a of [] \\<Rightarrow> RETURN []\n         | x # xs \\<Rightarrow>\n             g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs)))\n     list_ =\n    RETURN (map f list_) \\<Longrightarrow>\n    REC\\<^sub>T\n     (\\<lambda>g a.\n         case a of [] \\<Rightarrow> RETURN []\n         | x # xs \\<Rightarrow>\n             g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs)))\n     (a_ # list_) =\n    RETURN (map f (a_ # list_))", "apply (subst RECT_unfold)"], ["proof (prove)\ngoal (2 subgoals):\n 1. REC\\<^sub>T\n     (\\<lambda>g a.\n         case a of [] \\<Rightarrow> RETURN []\n         | x # xs \\<Rightarrow>\n             g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs)))\n     list_ =\n    RETURN (map f list_) \\<Longrightarrow>\n    trimono\n     (\\<lambda>g.\n         case_list (RETURN [])\n          (\\<lambda>x xs. g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs))))\n 2. REC\\<^sub>T\n     (\\<lambda>g a.\n         case a of [] \\<Rightarrow> RETURN []\n         | x # xs \\<Rightarrow>\n             g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs)))\n     list_ =\n    RETURN (map f list_) \\<Longrightarrow>\n    (case a_ # list_ of [] \\<Rightarrow> RETURN []\n     | x # xs \\<Rightarrow>\n         REC\\<^sub>T\n          (\\<lambda>g.\n              case_list (RETURN [])\n               (\\<lambda>x xs.\n                   g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs))))\n          xs \\<bind>\n         (\\<lambda>xs. RETURN (f x # xs))) =\n    RETURN (map f (a_ # list_))", "apply refine_mono"], ["proof (prove)\ngoal (1 subgoal):\n 1. REC\\<^sub>T\n     (\\<lambda>g a.\n         case a of [] \\<Rightarrow> RETURN []\n         | x # xs \\<Rightarrow>\n             g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs)))\n     list_ =\n    RETURN (map f list_) \\<Longrightarrow>\n    (case a_ # list_ of [] \\<Rightarrow> RETURN []\n     | x # xs \\<Rightarrow>\n         REC\\<^sub>T\n          (\\<lambda>g.\n              case_list (RETURN [])\n               (\\<lambda>x xs.\n                   g xs \\<bind> (\\<lambda>xs. RETURN (f x # xs))))\n          xs \\<bind>\n         (\\<lambda>xs. RETURN (f x # xs))) =\n    RETURN (map f (a_ # list_))", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fully_unsorted_poly_rel_Cons_iff:\n  \\<open>((ys, n) # p, a) \\<in> fully_unsorted_poly_rel \\<longleftrightarrow>\n    (p, remove1_mset (mset ys, n) a) \\<in> fully_unsorted_poly_rel \\<and>\n    (mset ys, n) \\<in># a \\<and> distinct ys\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (((ys, n) # p, a) \\<in> fully_unsorted_poly_rel) =\n    ((p, remove1_mset (mset ys, n) a) \\<in> fully_unsorted_poly_rel \\<and>\n     (mset ys, n) \\<in># a \\<and> distinct ys)", "apply (auto simp: poly_list_rel_def list_rel_split_right_iff list_mset_rel_def br_def\n     unsorted_term_poly_list_rel_def\n     nonzero_coeffs_def fully_unsorted_poly_list_rel_def dest!: multi_member_split)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ysa.\n       \\<lbrakk>a = add_mset (mset ys, n) (mset ysa); distinct ys;\n        (p, ysa)\n        \\<in> \\<langle>{(xs, ys).\n                        ys = mset xs \\<and> distinct xs} \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel\\<rbrakk>\n       \\<Longrightarrow> (p, mset ysa)\n                         \\<in> \\<langle>{(xs, ys).\n   ys = mset xs \\<and> distinct xs} \\<times>\\<^sub>r\n  int_rel\\<rangle>list_rel O\n                               {(c, a). a = mset c}\n 2. \\<And>y.\n       \\<lbrakk>(p, y)\n                \\<in> \\<langle>{(xs, ys).\n                                ys = mset xs \\<and>\n                                distinct xs} \\<times>\\<^sub>r\n                               int_rel\\<rangle>list_rel;\n        distinct ys; a = add_mset (mset ys, n) (mset y)\\<rbrakk>\n       \\<Longrightarrow> ((ys, n) # p, add_mset (mset ys, n) (mset y))\n                         \\<in> \\<langle>{(xs, ys).\n   ys = mset xs \\<and> distinct xs} \\<times>\\<^sub>r\n  int_rel\\<rangle>list_rel O\n                               {(c, a). a = mset c}", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>(p, y)\n                \\<in> \\<langle>{(xs, ys).\n                                ys = mset xs \\<and>\n                                distinct xs} \\<times>\\<^sub>r\n                               int_rel\\<rangle>list_rel;\n        distinct ys; a = add_mset (mset ys, n) (mset y)\\<rbrakk>\n       \\<Longrightarrow> ((ys, n) # p, add_mset (mset ys, n) (mset y))\n                         \\<in> \\<langle>{(xs, ys).\n   ys = mset xs \\<and> distinct xs} \\<times>\\<^sub>r\n  int_rel\\<rangle>list_rel O\n                               {(c, a). a = mset c}", "apply (rule_tac b = \\<open>(mset ys, n) # y\\<close> in relcompI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(p, y)\n                \\<in> \\<langle>{(xs, ys).\n                                ys = mset xs \\<and>\n                                distinct xs} \\<times>\\<^sub>r\n                               int_rel\\<rangle>list_rel;\n        distinct ys; a = add_mset (mset ys, n) (mset y)\\<rbrakk>\n       \\<Longrightarrow> ((ys, n) # p, (mset ys, n) # y)\n                         \\<in> \\<langle>{(xs, ys).\n   ys = mset xs \\<and> distinct xs} \\<times>\\<^sub>r\n  int_rel\\<rangle>list_rel\n 2. \\<And>y.\n       \\<lbrakk>(p, y)\n                \\<in> \\<langle>{(xs, ys).\n                                ys = mset xs \\<and>\n                                distinct xs} \\<times>\\<^sub>r\n                               int_rel\\<rangle>list_rel;\n        distinct ys; a = add_mset (mset ys, n) (mset y)\\<rbrakk>\n       \\<Longrightarrow> ((mset ys, n) # y, add_mset (mset ys, n) (mset y))\n                         \\<in> {(c, a). a = mset c}", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma map_mset_unsorted_term_poly_list_rel:\n  \\<open>(\\<And>a. a \\<in> mononoms s \\<Longrightarrow> distinct a) \\<Longrightarrow> \\<forall>x \\<in> mononoms s. distinct x \\<Longrightarrow>\n    (\\<forall>xs \\<in> mononoms s. sorted_wrt (rel2p (Id \\<union> var_order_rel)) xs) \\<Longrightarrow>\n    (s, map (\\<lambda>(a, y). (mset a, y)) s)\n          \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a. a \\<in> mononoms s \\<Longrightarrow> distinct a;\n     \\<forall>x\\<in>mononoms s. distinct x;\n     \\<forall>xs\\<in>mononoms s.\n        sorted_wrt (rel2p (Id \\<union> var_order_rel)) xs\\<rbrakk>\n    \\<Longrightarrow> (s, map (\\<lambda>(a, y). (mset a, y)) s)\n                      \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                                     int_rel\\<rangle>list_rel", "by (induction s) (auto simp: term_poly_list_rel_def\n    distinct_var_order_Id_var_order)"], ["", "lemma list_rel_unsorted_term_poly_list_relD:\n  \\<open>(p, y) \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel \\<Longrightarrow>\n   mset y = (\\<lambda>(a, y). (mset a, y)) `# mset p \\<and> (\\<forall>x \\<in> mononoms p. distinct x)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, y)\n    \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel \\<Longrightarrow>\n    mset y = {#(mset a, y). (a, y) \\<in># mset p#} \\<and>\n    (\\<forall>x\\<in>mononoms p. distinct x)", "by (induction p arbitrary: y)\n   (auto simp: list_rel_split_right_iff\n    unsorted_term_poly_list_rel_def)"], ["", "lemma shuffle_terms_distinct_iff:\n  assumes \\<open>map (\\<lambda>(a, y). (mset a, y)) p = map (\\<lambda>(a, y). (mset a, y)) s\\<close>\n  shows \\<open>(\\<forall>x\\<in>set p. distinct (fst x)) \\<longleftrightarrow> (\\<forall>x\\<in>set s. distinct (fst x))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>set p. distinct (fst x)) =\n    (\\<forall>x\\<in>set s. distinct (fst x))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>set p. distinct (fst x)) =\n    (\\<forall>x\\<in>set s. distinct (fst x))", "have  \\<open>\\<forall>x\\<in>set s. distinct (fst x)\\<close>\n    if m:  \\<open>map (\\<lambda>(a, y). (mset a, y)) p = map (\\<lambda>(a, y). (mset a, y)) s\\<close> and\n      dist: \\<open>\\<forall>x\\<in>set p. distinct (fst x)\\<close>\n    for s p"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set s. distinct (fst x)", "proof standard+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> set s \\<Longrightarrow> distinct (fst x)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> set s \\<Longrightarrow> distinct (fst x)", "assume x: \\<open>x \\<in> set s\\<close>"], ["proof (state)\nthis:\n  x \\<in> set s\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> set s \\<Longrightarrow> distinct (fst x)", "obtain v n where [simp]: \\<open>x = (v, n)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v n. x = (v, n) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases x)"], ["proof (state)\nthis:\n  x = (v, n)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> set s \\<Longrightarrow> distinct (fst x)", "then"], ["proof (chain)\npicking this:\n  x = (v, n)", "have \\<open>(mset v, n) \\<in> set (map (\\<lambda>(a, y). (mset a, y)) p)\\<close>"], ["proof (prove)\nusing this:\n  x = (v, n)\n\ngoal (1 subgoal):\n 1. (mset v, n) \\<in> set (map (\\<lambda>(a, y). (mset a, y)) p)", "using x"], ["proof (prove)\nusing this:\n  x = (v, n)\n  x \\<in> set s\n\ngoal (1 subgoal):\n 1. (mset v, n) \\<in> set (map (\\<lambda>(a, y). (mset a, y)) p)", "unfolding m"], ["proof (prove)\nusing this:\n  x = (v, n)\n  x \\<in> set s\n\ngoal (1 subgoal):\n 1. (mset v, n) \\<in> set (map (\\<lambda>(a, y). (mset a, y)) s)", "by auto"], ["proof (state)\nthis:\n  (mset v, n) \\<in> set (map (\\<lambda>(a, y). (mset a, y)) p)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> set s \\<Longrightarrow> distinct (fst x)", "then"], ["proof (chain)\npicking this:\n  (mset v, n) \\<in> set (map (\\<lambda>(a, y). (mset a, y)) p)", "obtain v' where\n      \\<open>(v', n) \\<in> set p\\<close> and\n      \\<open>mset v' = mset v\\<close>"], ["proof (prove)\nusing this:\n  (mset v, n) \\<in> set (map (\\<lambda>(a, y). (mset a, y)) p)\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        \\<lbrakk>(v', n) \\<in> set p; mset v' = mset v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: image_iff)"], ["proof (state)\nthis:\n  (v', n) \\<in> set p\n  mset v' = mset v\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> set s \\<Longrightarrow> distinct (fst x)", "then"], ["proof (chain)\npicking this:\n  (v', n) \\<in> set p\n  mset v' = mset v", "show \\<open>distinct (fst x)\\<close>"], ["proof (prove)\nusing this:\n  (v', n) \\<in> set p\n  mset v' = mset v\n\ngoal (1 subgoal):\n 1. distinct (fst x)", "using dist"], ["proof (prove)\nusing this:\n  (v', n) \\<in> set p\n  mset v' = mset v\n  \\<forall>x\\<in>set p. distinct (fst x)\n\ngoal (1 subgoal):\n 1. distinct (fst x)", "by (metis \\<open>x = (v, n)\\<close> distinct_mset_mset_distinct fst_conv)"], ["proof (state)\nthis:\n  distinct (fst x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>map (\\<lambda>(a, y). (mset a, y)) ?p1 =\n           map (\\<lambda>(a, y). (mset a, y)) ?s1;\n   \\<forall>x\\<in>set ?p1. distinct (fst x)\\<rbrakk>\n  \\<Longrightarrow> \\<forall>x\\<in>set ?s1. distinct (fst x)\n\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>set p. distinct (fst x)) =\n    (\\<forall>x\\<in>set s. distinct (fst x))", "from this[of p s] this[of s p]"], ["proof (chain)\npicking this:\n  \\<lbrakk>map (\\<lambda>(a, y). (mset a, y)) p =\n           map (\\<lambda>(a, y). (mset a, y)) s;\n   \\<forall>x\\<in>set p. distinct (fst x)\\<rbrakk>\n  \\<Longrightarrow> \\<forall>x\\<in>set s. distinct (fst x)\n  \\<lbrakk>map (\\<lambda>(a, y). (mset a, y)) s =\n           map (\\<lambda>(a, y). (mset a, y)) p;\n   \\<forall>x\\<in>set s. distinct (fst x)\\<rbrakk>\n  \\<Longrightarrow> \\<forall>x\\<in>set p. distinct (fst x)", "show \\<open>?thesis\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>map (\\<lambda>(a, y). (mset a, y)) p =\n           map (\\<lambda>(a, y). (mset a, y)) s;\n   \\<forall>x\\<in>set p. distinct (fst x)\\<rbrakk>\n  \\<Longrightarrow> \\<forall>x\\<in>set s. distinct (fst x)\n  \\<lbrakk>map (\\<lambda>(a, y). (mset a, y)) s =\n           map (\\<lambda>(a, y). (mset a, y)) p;\n   \\<forall>x\\<in>set s. distinct (fst x)\\<rbrakk>\n  \\<Longrightarrow> \\<forall>x\\<in>set p. distinct (fst x)\n\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>set p. distinct (fst x)) =\n    (\\<forall>x\\<in>set s. distinct (fst x))", "unfolding assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>map (\\<lambda>(a, y). (mset a, y)) s =\n           map (\\<lambda>(a, y). (mset a, y)) s;\n   \\<forall>x\\<in>set p. distinct (fst x)\\<rbrakk>\n  \\<Longrightarrow> \\<forall>x\\<in>set s. distinct (fst x)\n  \\<lbrakk>map (\\<lambda>(a, y). (mset a, y)) s =\n           map (\\<lambda>(a, y). (mset a, y)) s;\n   \\<forall>x\\<in>set s. distinct (fst x)\\<rbrakk>\n  \\<Longrightarrow> \\<forall>x\\<in>set p. distinct (fst x)\n\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>set p. distinct (fst x)) =\n    (\\<forall>x\\<in>set s. distinct (fst x))", "by blast"], ["proof (state)\nthis:\n  (\\<forall>x\\<in>set p. distinct (fst x)) =\n  (\\<forall>x\\<in>set s. distinct (fst x))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  \\<open>(p, y) \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel \\<Longrightarrow>\n       (a, b) \\<in> set p \\<Longrightarrow>  distinct a\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(p, y)\n             \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                            int_rel\\<rangle>list_rel;\n     (a, b) \\<in> set p\\<rbrakk>\n    \\<Longrightarrow> distinct a", "using list_rel_unsorted_term_poly_list_relD"], ["proof (prove)\nusing this:\n  (?p, ?y)\n  \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel \\<Longrightarrow>\n  mset ?y = {#(mset a, y). (a, y) \\<in># mset ?p#} \\<and>\n  (\\<forall>x\\<in>mononoms ?p. distinct x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(p, y)\n             \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                            int_rel\\<rangle>list_rel;\n     (a, b) \\<in> set p\\<rbrakk>\n    \\<Longrightarrow> distinct a", "by fastforce"], ["", "lemma sort_all_coeffs_unsorted_poly_rel_with0:\n  assumes \\<open>(p, p') \\<in> fully_unsorted_poly_rel\\<close>\n  shows \\<open>sort_all_coeffs p \\<le> \\<Down> (unsorted_poly_rel_with0) (RETURN p')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. sort_all_coeffs p \\<le> \\<Down> unsorted_poly_rel_with0 (RETURN p')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sort_all_coeffs p \\<le> \\<Down> unsorted_poly_rel_with0 (RETURN p')", "have H: \\<open>(map (\\<lambda>(a, y). (mset a, y)) (rev p)) =\n          map (\\<lambda>(a, y). (mset a, y)) s \\<longleftrightarrow>\n          (map (\\<lambda>(a, y). (mset a, y)) p) =\n          map (\\<lambda>(a, y). (mset a, y)) (rev s)\\<close> for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. (map (\\<lambda>(a, y). (mset a, y)) (rev p) =\n     map (\\<lambda>(a, y). (mset a, y)) s) =\n    (map (\\<lambda>(a, y). (mset a, y)) p =\n     map (\\<lambda>(a, y). (mset a, y)) (rev s))", "by (auto simp flip: rev_map simp: eq_commute[of \\<open>rev (map _ _)\\<close> \\<open>map _ _\\<close>])"], ["proof (state)\nthis:\n  (map (\\<lambda>(a, y). (mset a, y)) (rev p) =\n   map (\\<lambda>(a, y). (mset a, y)) ?s) =\n  (map (\\<lambda>(a, y). (mset a, y)) p =\n   map (\\<lambda>(a, y). (mset a, y)) (rev ?s))\n\ngoal (1 subgoal):\n 1. sort_all_coeffs p \\<le> \\<Down> unsorted_poly_rel_with0 (RETURN p')", "have 1: \\<open>\\<And>s y. (p, y) \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel \\<Longrightarrow>\n           p' = mset y \\<Longrightarrow>\n           map (\\<lambda>(a, y). (mset a, y)) (rev p) = map (\\<lambda>(a, y). (mset a, y)) s \\<Longrightarrow>\n           \\<forall>x\\<in>set s. sorted_wrt var_order (fst x) \\<Longrightarrow>\n           (s, map (\\<lambda>(a, y). (mset a, y)) s)\n           \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s y.\n       \\<lbrakk>(p, y)\n                \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                               int_rel\\<rangle>list_rel;\n        p' = mset y;\n        map (\\<lambda>(a, y). (mset a, y)) (rev p) =\n        map (\\<lambda>(a, y). (mset a, y)) s;\n        \\<forall>x\\<in>set s. sorted_wrt var_order (fst x)\\<rbrakk>\n       \\<Longrightarrow> (s, map (\\<lambda>(a, y). (mset a, y)) s)\n                         \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n  int_rel\\<rangle>list_rel", "by (auto 4 4 simp: rel2p_def\n        dest!: list_rel_unsorted_term_poly_list_relD\n        dest: shuffle_terms_distinct_iff[\"THEN\" iffD1]\n        intro!: map_mset_unsorted_term_poly_list_rel\n        sorted_wrt_mono_rel[of _ \\<open>rel2p (var_order_rel)\\<close> \\<open>rel2p (Id \\<union> var_order_rel)\\<close>])"], ["proof (state)\nthis:\n  \\<lbrakk>(p, ?y)\n           \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                          int_rel\\<rangle>list_rel;\n   p' = mset ?y;\n   map (\\<lambda>(a, y). (mset a, y)) (rev p) =\n   map (\\<lambda>(a, y). (mset a, y)) ?s;\n   \\<forall>x\\<in>set ?s. sorted_wrt var_order (fst x)\\<rbrakk>\n  \\<Longrightarrow> (?s, map (\\<lambda>(a, y). (mset a, y)) ?s)\n                    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                                   int_rel\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. sort_all_coeffs p \\<le> \\<Down> unsorted_poly_rel_with0 (RETURN p')", "have 2: \\<open>\\<And>s y. (p, y) \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel \\<Longrightarrow>\n           p' = mset y \\<Longrightarrow>\n           map (\\<lambda>(a, y). (mset a, y)) (rev p) = map (\\<lambda>(a, y). (mset a, y)) s \\<Longrightarrow>\n           \\<forall>x\\<in>set s. sorted_wrt var_order (fst x) \\<Longrightarrow>\n           mset y = {#case x of (a, x) \\<Rightarrow> (mset a, x). x \\<in># mset s#}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s y.\n       \\<lbrakk>(p, y)\n                \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                               int_rel\\<rangle>list_rel;\n        p' = mset y;\n        map (\\<lambda>(a, y). (mset a, y)) (rev p) =\n        map (\\<lambda>(a, y). (mset a, y)) s;\n        \\<forall>x\\<in>set s. sorted_wrt var_order (fst x)\\<rbrakk>\n       \\<Longrightarrow> mset y =\n                         {#case x of (a, x) \\<Rightarrow> (mset a, x)\n                         . x \\<in># mset s#}", "by (metis (no_types, lifting) list_rel_unsorted_term_poly_list_relD mset_map mset_rev)"], ["proof (state)\nthis:\n  \\<lbrakk>(p, ?y)\n           \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                          int_rel\\<rangle>list_rel;\n   p' = mset ?y;\n   map (\\<lambda>(a, y). (mset a, y)) (rev p) =\n   map (\\<lambda>(a, y). (mset a, y)) ?s;\n   \\<forall>x\\<in>set ?s. sorted_wrt var_order (fst x)\\<rbrakk>\n  \\<Longrightarrow> mset ?y =\n                    {#case x of (a, x) \\<Rightarrow> (mset a, x)\n                    . x \\<in># mset ?s#}\n\ngoal (1 subgoal):\n 1. sort_all_coeffs p \\<le> \\<Down> unsorted_poly_rel_with0 (RETURN p')", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sort_all_coeffs p \\<le> \\<Down> unsorted_poly_rel_with0 (RETURN p')", "apply (rule sort_all_coeffs[THEN order_trans])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>x\\<in>mononoms p. distinct x\n 2. \\<Down> Id (shuffle_coefficients p)\n    \\<le> \\<Down> unsorted_poly_rel_with0 (RETURN p')", "using assms"], ["proof (prove)\nusing this:\n  (p, p') \\<in> fully_unsorted_poly_rel\n\ngoal (2 subgoals):\n 1. \\<forall>x\\<in>mononoms p. distinct x\n 2. \\<Down> Id (shuffle_coefficients p)\n    \\<le> \\<Down> unsorted_poly_rel_with0 (RETURN p')", "by (auto simp: shuffle_coefficients_def poly_list_rel_def\n        RETURN_def fully_unsorted_poly_list_rel_def list_mset_rel_def\n        br_def dest: list_rel_unsorted_term_poly_list_relD\n        intro!: RES_refine relcompI[of _  \\<open>map (\\<lambda>(a, y). (mset a, y)) (rev p)\\<close>]\n        1 2)"], ["proof (state)\nthis:\n  sort_all_coeffs p \\<le> \\<Down> unsorted_poly_rel_with0 (RETURN p')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sort_poly_spec_id':\n  assumes \\<open>(p, p') \\<in> unsorted_poly_rel_with0\\<close>\n  shows \\<open>sort_poly_spec p \\<le> \\<Down> (sorted_repeat_poly_rel_with0) (RETURN p')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. sort_poly_spec p\n    \\<le> \\<Down>\n           (sorted_repeat_poly_list_rel_with0\n             (rel2p (Id \\<union> term_order_rel)))\n           (RETURN p')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sort_poly_spec p\n    \\<le> \\<Down>\n           (sorted_repeat_poly_list_rel_with0\n             (rel2p (Id \\<union> term_order_rel)))\n           (RETURN p')", "obtain y where\n    py: \\<open>(p, y) \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel\\<close> and\n    p'_y: \\<open>p' = mset y\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>(p, y)\n                 \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                                int_rel\\<rangle>list_rel;\n         p' = mset y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  (p, p') \\<in> unsorted_poly_rel_with0\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>(p, y)\n                 \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                                int_rel\\<rangle>list_rel;\n         p' = mset y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding fully_unsorted_poly_list_rel_def poly_list_rel_def sorted_poly_list_rel_wrt_def"], ["proof (prove)\nusing this:\n  (p, p')\n  \\<in> {(xs, ys).\n         (xs, ys)\n         \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                        int_rel\\<rangle>list_rel O\n               list_mset_rel}\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>(p, y)\n                 \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                                int_rel\\<rangle>list_rel;\n         p' = mset y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: list_mset_rel_def br_def)"], ["proof (state)\nthis:\n  (p, y)\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel\n  p' = mset y\n\ngoal (1 subgoal):\n 1. sort_poly_spec p\n    \\<le> \\<Down>\n           (sorted_repeat_poly_list_rel_with0\n             (rel2p (Id \\<union> term_order_rel)))\n           (RETURN p')", "then"], ["proof (chain)\npicking this:\n  (p, y)\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel\n  p' = mset y", "have [simp]: \\<open>length y = length p\\<close>"], ["proof (prove)\nusing this:\n  (p, y)\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel\n  p' = mset y\n\ngoal (1 subgoal):\n 1. length y = length p", "by (auto simp: list_rel_def list_all2_conv_all_nth)"], ["proof (state)\nthis:\n  length y = length p\n\ngoal (1 subgoal):\n 1. sort_poly_spec p\n    \\<le> \\<Down>\n           (sorted_repeat_poly_list_rel_with0\n             (rel2p (Id \\<union> term_order_rel)))\n           (RETURN p')", "have H: \\<open>(x, p')\n        \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel O list_mset_rel\\<close>\n     if px: \\<open>mset p = mset x\\<close> and \\<open>sorted_wrt (rel2p (Id \\<union> lexord var_order_rel)) (map fst x)\\<close>\n     for x :: \\<open>llist_polynomial\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "obtain f where\n      f: \\<open>bij_betw f {..<length x} {..<length p}\\<close> and\n      [simp]: \\<open>\\<And>i. i<length x \\<Longrightarrow> x ! i = p ! (f i)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>bij_betw f {..<length x} {..<length p};\n         \\<And>i. i < length x \\<Longrightarrow> x ! i = p ! f i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using px"], ["proof (prove)\nusing this:\n  mset p = mset x\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>bij_betw f {..<length x} {..<length p};\n         \\<And>i. i < length x \\<Longrightarrow> x ! i = p ! f i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>f.\n                \\<lbrakk>bij_betw f {..<length x} {..<length p};\n                 \\<And>i.\n                    i < length x \\<Longrightarrow> x ! i = p ! f i\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     mset p = mset x\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply (subst (asm)(2) eq_commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>f.\n                \\<lbrakk>bij_betw f {..<length x} {..<length p};\n                 \\<And>i.\n                    i < length x \\<Longrightarrow> x ! i = p ! f i\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     mset x = mset p\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding mset_eq_perm"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>f.\n                \\<lbrakk>bij_betw f {..<length x} {..<length p};\n                 \\<And>i.\n                    i < length x \\<Longrightarrow> x ! i = p ! f i\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     x <~~> p\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (auto dest!: permutation_Ex_bij)"], ["proof (state)\nthis:\n  bij_betw f {..<length x} {..<length p}\n  ?i < length x \\<Longrightarrow> x ! ?i = p ! f ?i\n\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "let ?y = \\<open>map (\\<lambda>i. y ! f i) [0 ..< length x]\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "have \\<open>i < length y \\<Longrightarrow> (p ! f i, y ! f i) \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel\\<close> for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. i < length y \\<Longrightarrow>\n    (p ! f i, y ! f i) \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel", "using list_all2_nthD[of _ p y\n         \\<open>f i\\<close>, OF py[unfolded list_rel_def mem_Collect_eq prod.case]]\n         mset_eq_length[OF px] f"], ["proof (prove)\nusing this:\n  f i < length p \\<Longrightarrow>\n  (p ! f i, y ! f i) \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel\n  length p = length x\n  bij_betw f {..<length x} {..<length p}\n\ngoal (1 subgoal):\n 1. i < length y \\<Longrightarrow>\n    (p ! f i, y ! f i) \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel", "by (auto simp: list_rel_def list_all2_conv_all_nth bij_betw_def)"], ["proof (state)\nthis:\n  ?i < length y \\<Longrightarrow>\n  (p ! f ?i, y ! f ?i) \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel\n\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "then"], ["proof (chain)\npicking this:\n  ?i < length y \\<Longrightarrow>\n  (p ! f ?i, y ! f ?i) \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel", "have \\<open>(x, ?y) \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel\\<close> and\n      xy: \\<open>length x = length y\\<close>"], ["proof (prove)\nusing this:\n  ?i < length y \\<Longrightarrow>\n  (p ! f ?i, y ! f ?i) \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel\n\ngoal (1 subgoal):\n 1. (x, map (\\<lambda>i. y ! f i) [0..<length x])\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel &&&\n    length x = length y", "using py list_all2_nthD[of \\<open>rel2p (term_poly_list_rel \\<times>\\<^sub>r int_rel)\\<close> p y\n         \\<open>f i\\<close> for i, simplified] mset_eq_length[OF px]"], ["proof (prove)\nusing this:\n  ?i < length y \\<Longrightarrow>\n  (p ! f ?i, y ! f ?i) \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel\n  (p, y)\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel\n  \\<lbrakk>list_all2 (rel2p (term_poly_list_rel \\<times>\\<^sub>r int_rel)) p\n            y;\n   f ?i2 < length p\\<rbrakk>\n  \\<Longrightarrow> rel2p (term_poly_list_rel \\<times>\\<^sub>r int_rel)\n                     (p ! f ?i2) (y ! f ?i2)\n  length p = length x\n\ngoal (1 subgoal):\n 1. (x, map (\\<lambda>i. y ! f i) [0..<length x])\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel &&&\n    length x = length y", "by (auto simp: list_rel_def list_all2_conv_all_nth)"], ["proof (state)\nthis:\n  (x, map (\\<lambda>i. y ! f i) [0..<length x])\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel\n  length x = length y\n\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "moreover"], ["proof (state)\nthis:\n  (x, map (\\<lambda>i. y ! f i) [0..<length x])\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel\n  length x = length y\n\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "{"], ["proof (state)\nthis:\n  (x, map (\\<lambda>i. y ! f i) [0..<length x])\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel\n  length x = length y\n\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "have f: \\<open>mset_set {0..<length x} = f `# mset_set {0..<length x}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. mset_set {0..<length x} = f `# mset_set {0..<length x}", "using f mset_eq_length[OF px]"], ["proof (prove)\nusing this:\n  bij_betw f {..<length x} {..<length p}\n  length p = length x\n\ngoal (1 subgoal):\n 1. mset_set {0..<length x} = f `# mset_set {0..<length x}", "by (auto simp: bij_betw_def lessThan_atLeast0 image_mset_mset_set)"], ["proof (state)\nthis:\n  mset_set {0..<length x} = f `# mset_set {0..<length x}\n\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "have \\<open>mset y = {#y ! f x. x \\<in># mset_set {0..<length x}#}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. mset y = {#y ! f x. x \\<in># mset_set {0..<length x}#}", "by (subst drop_0[symmetric], subst mset_drop_upto, subst xy[symmetric], subst f)\n          auto"], ["proof (state)\nthis:\n  mset y = {#y ! f x. x \\<in># mset_set {0..<length x}#}\n\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "then"], ["proof (chain)\npicking this:\n  mset y = {#y ! f x. x \\<in># mset_set {0..<length x}#}", "have \\<open>(?y, p') \\<in> list_mset_rel\\<close>"], ["proof (prove)\nusing this:\n  mset y = {#y ! f x. x \\<in># mset_set {0..<length x}#}\n\ngoal (1 subgoal):\n 1. (map (\\<lambda>i. y ! f i) [0..<length x], p') \\<in> list_mset_rel", "by (auto simp: list_mset_rel_def br_def p'_y)"], ["proof (state)\nthis:\n  (map (\\<lambda>i. y ! f i) [0..<length x], p') \\<in> list_mset_rel\n\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "}"], ["proof (state)\nthis:\n  (map (\\<lambda>i. y ! f i) [0..<length x], p') \\<in> list_mset_rel\n\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "ultimately"], ["proof (chain)\npicking this:\n  (x, map (\\<lambda>i. y ! f i) [0..<length x])\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel\n  length x = length y\n  (map (\\<lambda>i. y ! f i) [0..<length x], p') \\<in> list_mset_rel", "show ?thesis"], ["proof (prove)\nusing this:\n  (x, map (\\<lambda>i. y ! f i) [0..<length x])\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel\n  length x = length y\n  (map (\\<lambda>i. y ! f i) [0..<length x], p') \\<in> list_mset_rel\n\ngoal (1 subgoal):\n 1. (x, p')\n    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                   int_rel\\<rangle>list_rel O\n          list_mset_rel", "by (auto intro!: relcompI[of _ ?y])"], ["proof (state)\nthis:\n  (x, p')\n  \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                 int_rel\\<rangle>list_rel O\n        list_mset_rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>mset p = mset ?x;\n   sorted_wrt (rel2p (Id \\<union> term_order_rel)) (map fst ?x)\\<rbrakk>\n  \\<Longrightarrow> (?x, p')\n                    \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                                   int_rel\\<rangle>list_rel O\n                          list_mset_rel\n\ngoal (1 subgoal):\n 1. sort_poly_spec p\n    \\<le> \\<Down>\n           (sorted_repeat_poly_list_rel_with0\n             (rel2p (Id \\<union> term_order_rel)))\n           (RETURN p')", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sort_poly_spec p\n    \\<le> \\<Down>\n           (sorted_repeat_poly_list_rel_with0\n             (rel2p (Id \\<union> term_order_rel)))\n           (RETURN p')", "unfolding sort_poly_spec_def poly_list_rel_def sorted_repeat_poly_list_rel_with0_wrt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. SPEC\n     (\\<lambda>p'.\n         mset p = mset p' \\<and>\n         sorted_wrt (rel2p (Id \\<union> term_order_rel)) (map fst p'))\n    \\<le> \\<Down>\n           {(xs, ys).\n            (xs, ys)\n            \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                           int_rel\\<rangle>list_rel O\n                  list_mset_rel \\<and>\n            sorted_wrt (rel2p (Id \\<union> term_order_rel)) (map fst xs)}\n           (RETURN p')", "by refine_rcg (auto intro: H)"], ["proof (state)\nthis:\n  sort_poly_spec p\n  \\<le> \\<Down>\n         (sorted_repeat_poly_list_rel_with0\n           (rel2p (Id \\<union> term_order_rel)))\n         (RETURN p')\n\ngoal:\nNo subgoals!", "qed"], ["", "fun merge_coeffs0 :: \\<open>llist_polynomial \\<Rightarrow> llist_polynomial\\<close> where\n  \\<open>merge_coeffs0 [] = []\\<close> |\n  \\<open>merge_coeffs0 [(xs, n)] = (if n = 0 then [] else [(xs, n)])\\<close> |\n  \\<open>merge_coeffs0 ((xs, n) # (ys, m) # p) =\n    (if xs = ys\n    then if n + m \\<noteq> 0 then merge_coeffs0 ((xs, n + m) # p) else merge_coeffs0 p\n    else if n = 0 then merge_coeffs0 ((ys, m) # p)\n      else(xs, n) # merge_coeffs0 ((ys, m) # p))\\<close>"], ["", "lemma sorted_repeat_poly_list_rel_with0_wrt_ConsD:\n  \\<open>((ys, n) # p, a) \\<in> sorted_repeat_poly_list_rel_with0_wrt S term_poly_list_rel \\<Longrightarrow>\n     (p, remove1_mset (mset ys, n) a) \\<in> sorted_repeat_poly_list_rel_with0_wrt S term_poly_list_rel \\<and>\n    (mset ys, n) \\<in># a \\<and> (\\<forall>x \\<in> set p. S ys (fst x)) \\<and> sorted_wrt (rel2p var_order_rel) ys \\<and>\n    distinct ys\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((ys, n) # p, a)\n    \\<in> sorted_repeat_poly_list_rel_with0 S \\<Longrightarrow>\n    (p, remove1_mset (mset ys, n) a)\n    \\<in> sorted_repeat_poly_list_rel_with0 S \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and> distinct ys", "unfolding sorted_repeat_poly_list_rel_with0_wrt_def prod.case mem_Collect_eq\n    list_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((ys, n) # p, a)\n    \\<in> {(x, y).\n           list_all2\n            (\\<lambda>x x'.\n                (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n            x y} O\n          list_mset_rel \\<and>\n    sorted_wrt S (map fst ((ys, n) # p)) \\<Longrightarrow>\n    ((p, remove1_mset (mset ys, n) a)\n     \\<in> {(x, y).\n            list_all2\n             (\\<lambda>x x'.\n                 (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n             x y} O\n           list_mset_rel \\<and>\n     sorted_wrt S (map fst p)) \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and> distinct ys", "apply (clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         ((ys, n) # p) y;\n        \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p)\\<rbrakk>\n       \\<Longrightarrow> (p, remove1_mset (mset ys, n) a)\n                         \\<in> {(x, y).\n                                list_all2\n                                 (\\<lambda>x x'.\n                                     (x, x')\n                                     \\<in> term_poly_list_rel \\<times>\\<^sub>r\n     int_rel)\n                                 x y} O\n                               list_mset_rel \\<and>\n                         (mset ys, n) \\<in># a \\<and>\n                         sorted_wrt var_order ys \\<and> distinct ys", "apply (subst (asm) list.rel_sel)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p)\\<rbrakk>\n       \\<Longrightarrow> (p, remove1_mset (mset ys, n) a)\n                         \\<in> {(x, y).\n                                list_all2\n                                 (\\<lambda>x x'.\n                                     (x, x')\n                                     \\<in> term_poly_list_rel \\<times>\\<^sub>r\n     int_rel)\n                                 x y} O\n                               list_mset_rel \\<and>\n                         (mset ys, n) \\<in># a \\<and>\n                         sorted_wrt var_order ys \\<and> distinct ys", "apply (intro conjI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p)\\<rbrakk>\n       \\<Longrightarrow> (p, remove1_mset (mset ys, n) a)\n                         \\<in> {(x, y).\n                                list_all2\n                                 (\\<lambda>x x'.\n                                     (x, x')\n                                     \\<in> term_poly_list_rel \\<times>\\<^sub>r\n     int_rel)\n                                 x y} O\n                               list_mset_rel\n 2. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p)\\<rbrakk>\n       \\<Longrightarrow> (mset ys, n) \\<in># a\n 3. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p)\\<rbrakk>\n       \\<Longrightarrow> sorted_wrt var_order ys\n 4. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p)\\<rbrakk>\n       \\<Longrightarrow> distinct ys", "apply (rule_tac b = \\<open>tl y\\<close> in relcompI)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p)\\<rbrakk>\n       \\<Longrightarrow> (p, tl y)\n                         \\<in> {(x, y).\n                                list_all2\n                                 (\\<lambda>x x'.\n                                     (x, x')\n                                     \\<in> term_poly_list_rel \\<times>\\<^sub>r\n     int_rel)\n                                 x y}\n 2. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p)\\<rbrakk>\n       \\<Longrightarrow> (tl y, remove1_mset (mset ys, n) a)\n                         \\<in> list_mset_rel\n 3. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p)\\<rbrakk>\n       \\<Longrightarrow> (mset ys, n) \\<in># a\n 4. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p)\\<rbrakk>\n       \\<Longrightarrow> sorted_wrt var_order ys\n 5. \\<And>y.\n       \\<lbrakk>(y, a) \\<in> list_mset_rel;\n        ((ys, n) # p = []) = (y = []) \\<and>\n        ((ys, n) # p \\<noteq> [] \\<longrightarrow>\n         y \\<noteq> [] \\<longrightarrow>\n         (lead_coeff ((ys, n) # p), lead_coeff y)\n         \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel \\<and>\n         list_all2\n          (\\<lambda>x x'.\n              (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n          (tl ((ys, n) # p)) (tl y));\n        \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p)\\<rbrakk>\n       \\<Longrightarrow> distinct ys", "apply (auto simp: sorted_poly_list_rel_wrt_def list_mset_rel_def br_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p (tl y)\\<rbrakk>\n       \\<Longrightarrow> remove1_mset (mset ys, n) (mset y) = mset (tl y)\n 2. \\<And>y.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p (tl y)\\<rbrakk>\n       \\<Longrightarrow> (mset ys, n) \\<in> set y\n 3. \\<And>y.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p (tl y)\\<rbrakk>\n       \\<Longrightarrow> sorted_wrt var_order ys\n 4. \\<And>y.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p (tl y)\\<rbrakk>\n       \\<Longrightarrow> distinct ys", "apply (case_tac \\<open>lead_coeff y\\<close>; case_tac y)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>y aa b.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p (tl y);\n        lead_coeff y = (aa, b); y = []\\<rbrakk>\n       \\<Longrightarrow> remove1_mset (mset ys, n) (mset y) = mset (tl y)\n 2. \\<And>y aa b aaa list.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p (tl y);\n        lead_coeff y = (aa, b); y = aaa # list\\<rbrakk>\n       \\<Longrightarrow> remove1_mset (mset ys, n) (mset y) = mset (tl y)\n 3. \\<And>y.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p (tl y)\\<rbrakk>\n       \\<Longrightarrow> (mset ys, n) \\<in> set y\n 4. \\<And>y.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p (tl y)\\<rbrakk>\n       \\<Longrightarrow> sorted_wrt var_order ys\n 5. \\<And>y.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p (tl y)\\<rbrakk>\n       \\<Longrightarrow> distinct ys", "apply (auto simp: term_poly_list_rel_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> {(xs, ys).\n               ys = mset xs \\<and>\n               distinct xs \\<and> sorted_wrt var_order xs} \\<times>\\<^sub>r\n              int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x')\n             \\<in> {(xs, ys).\n                    ys = mset xs \\<and>\n                    distinct xs \\<and>\n                    sorted_wrt var_order xs} \\<times>\\<^sub>r\n                   int_rel)\n         p (tl y)\\<rbrakk>\n       \\<Longrightarrow> (mset ys, n) \\<in> set y\n 2. \\<And>y.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> {(xs, ys).\n               ys = mset xs \\<and>\n               distinct xs \\<and> sorted_wrt var_order xs} \\<times>\\<^sub>r\n              int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x')\n             \\<in> {(xs, ys).\n                    ys = mset xs \\<and>\n                    distinct xs \\<and>\n                    sorted_wrt var_order xs} \\<times>\\<^sub>r\n                   int_rel)\n         p (tl y)\\<rbrakk>\n       \\<Longrightarrow> sorted_wrt var_order ys\n 3. \\<And>y.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> {(xs, ys).\n               ys = mset xs \\<and>\n               distinct xs \\<and> sorted_wrt var_order xs} \\<times>\\<^sub>r\n              int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x')\n             \\<in> {(xs, ys).\n                    ys = mset xs \\<and>\n                    distinct xs \\<and>\n                    sorted_wrt var_order xs} \\<times>\\<^sub>r\n                   int_rel)\n         p (tl y)\\<rbrakk>\n       \\<Longrightarrow> distinct ys", "apply (case_tac \\<open>lead_coeff y\\<close>; case_tac y)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y aa b.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> {(xs, ys).\n               ys = mset xs \\<and>\n               distinct xs \\<and> sorted_wrt var_order xs} \\<times>\\<^sub>r\n              int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x')\n             \\<in> {(xs, ys).\n                    ys = mset xs \\<and>\n                    distinct xs \\<and>\n                    sorted_wrt var_order xs} \\<times>\\<^sub>r\n                   int_rel)\n         p (tl y);\n        lead_coeff y = (aa, b); y = []\\<rbrakk>\n       \\<Longrightarrow> (mset ys, n) \\<in> set y\n 2. \\<And>y aa b aaa list.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> {(xs, ys).\n               ys = mset xs \\<and>\n               distinct xs \\<and> sorted_wrt var_order xs} \\<times>\\<^sub>r\n              int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x')\n             \\<in> {(xs, ys).\n                    ys = mset xs \\<and>\n                    distinct xs \\<and>\n                    sorted_wrt var_order xs} \\<times>\\<^sub>r\n                   int_rel)\n         p (tl y);\n        lead_coeff y = (aa, b); y = aaa # list\\<rbrakk>\n       \\<Longrightarrow> (mset ys, n) \\<in> set y\n 3. \\<And>y.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> {(xs, ys).\n               ys = mset xs \\<and>\n               distinct xs \\<and> sorted_wrt var_order xs} \\<times>\\<^sub>r\n              int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x')\n             \\<in> {(xs, ys).\n                    ys = mset xs \\<and>\n                    distinct xs \\<and>\n                    sorted_wrt var_order xs} \\<times>\\<^sub>r\n                   int_rel)\n         p (tl y)\\<rbrakk>\n       \\<Longrightarrow> sorted_wrt var_order ys\n 4. \\<And>y.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> {(xs, ys).\n               ys = mset xs \\<and>\n               distinct xs \\<and> sorted_wrt var_order xs} \\<times>\\<^sub>r\n              int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x')\n             \\<in> {(xs, ys).\n                    ys = mset xs \\<and>\n                    distinct xs \\<and>\n                    sorted_wrt var_order xs} \\<times>\\<^sub>r\n                   int_rel)\n         p (tl y)\\<rbrakk>\n       \\<Longrightarrow> distinct ys", "apply (auto simp: term_poly_list_rel_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> {(xs, ys).\n               ys = mset xs \\<and>\n               distinct xs \\<and> sorted_wrt var_order xs} \\<times>\\<^sub>r\n              int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x')\n             \\<in> {(xs, ys).\n                    ys = mset xs \\<and>\n                    distinct xs \\<and>\n                    sorted_wrt var_order xs} \\<times>\\<^sub>r\n                   int_rel)\n         p (tl y)\\<rbrakk>\n       \\<Longrightarrow> sorted_wrt var_order ys\n 2. \\<And>y.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> {(xs, ys).\n               ys = mset xs \\<and>\n               distinct xs \\<and> sorted_wrt var_order xs} \\<times>\\<^sub>r\n              int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x')\n             \\<in> {(xs, ys).\n                    ys = mset xs \\<and>\n                    distinct xs \\<and>\n                    sorted_wrt var_order xs} \\<times>\\<^sub>r\n                   int_rel)\n         p (tl y)\\<rbrakk>\n       \\<Longrightarrow> distinct ys", "apply (case_tac \\<open>lead_coeff y\\<close>; case_tac y)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y aa b.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> {(xs, ys).\n               ys = mset xs \\<and>\n               distinct xs \\<and> sorted_wrt var_order xs} \\<times>\\<^sub>r\n              int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x')\n             \\<in> {(xs, ys).\n                    ys = mset xs \\<and>\n                    distinct xs \\<and>\n                    sorted_wrt var_order xs} \\<times>\\<^sub>r\n                   int_rel)\n         p (tl y);\n        lead_coeff y = (aa, b); y = []\\<rbrakk>\n       \\<Longrightarrow> sorted_wrt var_order ys\n 2. \\<And>y aa b aaa list.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> {(xs, ys).\n               ys = mset xs \\<and>\n               distinct xs \\<and> sorted_wrt var_order xs} \\<times>\\<^sub>r\n              int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x')\n             \\<in> {(xs, ys).\n                    ys = mset xs \\<and>\n                    distinct xs \\<and>\n                    sorted_wrt var_order xs} \\<times>\\<^sub>r\n                   int_rel)\n         p (tl y);\n        lead_coeff y = (aa, b); y = aaa # list\\<rbrakk>\n       \\<Longrightarrow> sorted_wrt var_order ys\n 3. \\<And>y.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> {(xs, ys).\n               ys = mset xs \\<and>\n               distinct xs \\<and> sorted_wrt var_order xs} \\<times>\\<^sub>r\n              int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x')\n             \\<in> {(xs, ys).\n                    ys = mset xs \\<and>\n                    distinct xs \\<and>\n                    sorted_wrt var_order xs} \\<times>\\<^sub>r\n                   int_rel)\n         p (tl y)\\<rbrakk>\n       \\<Longrightarrow> distinct ys", "apply (auto simp: term_poly_list_rel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> {(xs, ys).\n               ys = mset xs \\<and>\n               distinct xs \\<and> sorted_wrt var_order xs} \\<times>\\<^sub>r\n              int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x')\n             \\<in> {(xs, ys).\n                    ys = mset xs \\<and>\n                    distinct xs \\<and>\n                    sorted_wrt var_order xs} \\<times>\\<^sub>r\n                   int_rel)\n         p (tl y)\\<rbrakk>\n       \\<Longrightarrow> distinct ys", "apply (case_tac \\<open>lead_coeff y\\<close>; case_tac y)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y aa b.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> {(xs, ys).\n               ys = mset xs \\<and>\n               distinct xs \\<and> sorted_wrt var_order xs} \\<times>\\<^sub>r\n              int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x')\n             \\<in> {(xs, ys).\n                    ys = mset xs \\<and>\n                    distinct xs \\<and>\n                    sorted_wrt var_order xs} \\<times>\\<^sub>r\n                   int_rel)\n         p (tl y);\n        lead_coeff y = (aa, b); y = []\\<rbrakk>\n       \\<Longrightarrow> distinct ys\n 2. \\<And>y aa b aaa list.\n       \\<lbrakk>a = mset y; \\<forall>x\\<in>set p. S ys (fst x);\n        sorted_wrt S (map fst p); y \\<noteq> [];\n        ((ys, n), lead_coeff y)\n        \\<in> {(xs, ys).\n               ys = mset xs \\<and>\n               distinct xs \\<and> sorted_wrt var_order xs} \\<times>\\<^sub>r\n              int_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x')\n             \\<in> {(xs, ys).\n                    ys = mset xs \\<and>\n                    distinct xs \\<and>\n                    sorted_wrt var_order xs} \\<times>\\<^sub>r\n                   int_rel)\n         p (tl y);\n        lead_coeff y = (aa, b); y = aaa # list\\<rbrakk>\n       \\<Longrightarrow> distinct ys", "apply (auto simp: term_poly_list_rel_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma sorted_repeat_poly_list_rel_with0_wrtl_Cons_iff:\n  \\<open>((ys, n) # p, a) \\<in> sorted_repeat_poly_list_rel_with0_wrt S term_poly_list_rel \\<longleftrightarrow>\n    (p, remove1_mset (mset ys, n) a) \\<in> sorted_repeat_poly_list_rel_with0_wrt S term_poly_list_rel \\<and>\n    (mset ys, n) \\<in># a \\<and> (\\<forall>x \\<in> set p. S ys (fst x)) \\<and> sorted_wrt (rel2p var_order_rel) ys \\<and>\n    distinct ys\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (((ys, n) # p, a) \\<in> sorted_repeat_poly_list_rel_with0 S) =\n    ((p, remove1_mset (mset ys, n) a)\n     \\<in> sorted_repeat_poly_list_rel_with0 S \\<and>\n     (mset ys, n) \\<in># a \\<and>\n     (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n     sorted_wrt var_order ys \\<and> distinct ys)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((ys, n) # p, a)\n    \\<in> sorted_repeat_poly_list_rel_with0 S \\<Longrightarrow>\n    (p, remove1_mset (mset ys, n) a)\n    \\<in> sorted_repeat_poly_list_rel_with0 S \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and> distinct ys\n 2. (p, remove1_mset (mset ys, n) a)\n    \\<in> sorted_repeat_poly_list_rel_with0 S \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and> distinct ys \\<Longrightarrow>\n    ((ys, n) # p, a) \\<in> sorted_repeat_poly_list_rel_with0 S", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((ys, n) # p, a)\n    \\<in> sorted_repeat_poly_list_rel_with0 S \\<Longrightarrow>\n    (p, remove1_mset (mset ys, n) a)\n    \\<in> sorted_repeat_poly_list_rel_with0 S \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and> distinct ys", "by (auto dest!: sorted_repeat_poly_list_rel_with0_wrt_ConsD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, remove1_mset (mset ys, n) a)\n    \\<in> sorted_repeat_poly_list_rel_with0 S \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and> distinct ys \\<Longrightarrow>\n    ((ys, n) # p, a) \\<in> sorted_repeat_poly_list_rel_with0 S", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, remove1_mset (mset ys, n) a)\n    \\<in> sorted_repeat_poly_list_rel_with0 S \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and> distinct ys \\<Longrightarrow>\n    ((ys, n) # p, a) \\<in> sorted_repeat_poly_list_rel_with0 S", "unfolding sorted_poly_list_rel_wrt_def prod.case mem_Collect_eq\n      list_rel_def sorted_repeat_poly_list_rel_with0_wrt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((p, remove1_mset (mset ys, n) a)\n     \\<in> {(x, y).\n            list_all2\n             (\\<lambda>x x'.\n                 (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n             x y} O\n           list_mset_rel \\<and>\n     sorted_wrt S (map fst p)) \\<and>\n    (mset ys, n) \\<in># a \\<and>\n    (\\<forall>x\\<in>set p. S ys (fst x)) \\<and>\n    sorted_wrt var_order ys \\<and> distinct ys \\<Longrightarrow>\n    ((ys, n) # p, a)\n    \\<in> {(x, y).\n           list_all2\n            (\\<lambda>x x'.\n                (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n            x y} O\n          list_mset_rel \\<and>\n    sorted_wrt S (map fst ((ys, n) # p))", "apply (clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>(y, remove1_mset (mset ys, n) a) \\<in> list_mset_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p y;\n        sorted_wrt S (map fst p); (mset ys, n) \\<in># a;\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt var_order ys;\n        distinct ys\\<rbrakk>\n       \\<Longrightarrow> ((ys, n) # p, a)\n                         \\<in> {(x, y).\n                                list_all2\n                                 (\\<lambda>x x'.\n                                     (x, x')\n                                     \\<in> term_poly_list_rel \\<times>\\<^sub>r\n     int_rel)\n                                 x y} O\n                               list_mset_rel", "apply (rule_tac b = \\<open>(mset ys, n) # y\\<close> in relcompI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(y, remove1_mset (mset ys, n) a) \\<in> list_mset_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p y;\n        sorted_wrt S (map fst p); (mset ys, n) \\<in># a;\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt var_order ys;\n        distinct ys\\<rbrakk>\n       \\<Longrightarrow> ((ys, n) # p, (mset ys, n) # y)\n                         \\<in> {(x, y).\n                                list_all2\n                                 (\\<lambda>x x'.\n                                     (x, x')\n                                     \\<in> term_poly_list_rel \\<times>\\<^sub>r\n     int_rel)\n                                 x y}\n 2. \\<And>y.\n       \\<lbrakk>(y, remove1_mset (mset ys, n) a) \\<in> list_mset_rel;\n        list_all2\n         (\\<lambda>x x'.\n             (x, x') \\<in> term_poly_list_rel \\<times>\\<^sub>r int_rel)\n         p y;\n        sorted_wrt S (map fst p); (mset ys, n) \\<in># a;\n        \\<forall>x\\<in>set p. S ys (fst x); sorted_wrt var_order ys;\n        distinct ys\\<rbrakk>\n       \\<Longrightarrow> ((mset ys, n) # y, a) \\<in> list_mset_rel", "by (auto simp: sorted_poly_list_rel_wrt_def list_mset_rel_def br_def\n        term_poly_list_rel_def add_mset_eq_add_mset eq_commute[of _ \\<open>mset _\\<close>]\n        nonzero_coeffs_def\n      dest!: multi_member_split)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fst_normalize0_polynomial_subsetD:\n  \\<open>(a, b) \\<in> set (merge_coeffs0 p) \\<Longrightarrow> a \\<in> mononoms p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> set (merge_coeffs0 p) \\<Longrightarrow> a \\<in> mononoms p", "apply (induction p rule: merge_coeffs0.induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (a, b) \\<in> set (merge_coeffs0 []) \\<Longrightarrow>\n    a \\<in> mononoms []\n 2. \\<And>xs n.\n       (a, b) \\<in> set (merge_coeffs0 [(xs, n)]) \\<Longrightarrow>\n       a \\<in> mononoms [(xs, n)]\n 3. \\<And>xs n ys m p.\n       \\<lbrakk>\\<lbrakk>xs = ys; n + m \\<noteq> 0;\n                 (a, b) \\<in> set (merge_coeffs0 ((xs, n + m) # p))\\<rbrakk>\n                \\<Longrightarrow> a \\<in> mononoms ((xs, n + m) # p);\n        \\<lbrakk>xs = ys; \\<not> n + m \\<noteq> 0;\n         (a, b) \\<in> set (merge_coeffs0 p)\\<rbrakk>\n        \\<Longrightarrow> a \\<in> mononoms p;\n        \\<lbrakk>xs \\<noteq> ys; n = 0;\n         (a, b) \\<in> set (merge_coeffs0 ((ys, m) # p))\\<rbrakk>\n        \\<Longrightarrow> a \\<in> mononoms ((ys, m) # p);\n        \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0;\n         (a, b) \\<in> set (merge_coeffs0 ((ys, m) # p))\\<rbrakk>\n        \\<Longrightarrow> a \\<in> mononoms ((ys, m) # p);\n        (a, b) \\<in> set (merge_coeffs0 ((xs, n) # (ys, m) # p))\\<rbrakk>\n       \\<Longrightarrow> a \\<in> mononoms ((xs, n) # (ys, m) # p)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> set (merge_coeffs0 []) \\<Longrightarrow>\n    a \\<in> mononoms []", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xs n.\n       (a, b) \\<in> set (merge_coeffs0 [(xs, n)]) \\<Longrightarrow>\n       a \\<in> mononoms [(xs, n)]\n 2. \\<And>xs n ys m p.\n       \\<lbrakk>\\<lbrakk>xs = ys; n + m \\<noteq> 0;\n                 (a, b) \\<in> set (merge_coeffs0 ((xs, n + m) # p))\\<rbrakk>\n                \\<Longrightarrow> a \\<in> mononoms ((xs, n + m) # p);\n        \\<lbrakk>xs = ys; \\<not> n + m \\<noteq> 0;\n         (a, b) \\<in> set (merge_coeffs0 p)\\<rbrakk>\n        \\<Longrightarrow> a \\<in> mononoms p;\n        \\<lbrakk>xs \\<noteq> ys; n = 0;\n         (a, b) \\<in> set (merge_coeffs0 ((ys, m) # p))\\<rbrakk>\n        \\<Longrightarrow> a \\<in> mononoms ((ys, m) # p);\n        \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0;\n         (a, b) \\<in> set (merge_coeffs0 ((ys, m) # p))\\<rbrakk>\n        \\<Longrightarrow> a \\<in> mononoms ((ys, m) # p);\n        (a, b) \\<in> set (merge_coeffs0 ((xs, n) # (ys, m) # p))\\<rbrakk>\n       \\<Longrightarrow> a \\<in> mononoms ((xs, n) # (ys, m) # p)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> set (merge_coeffs0 [(xs_, n_)]) \\<Longrightarrow>\n    a \\<in> mononoms [(xs_, n_)]", "by (auto split: if_splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xs n ys m p.\n       \\<lbrakk>\\<lbrakk>xs = ys; n + m \\<noteq> 0;\n                 (a, b) \\<in> set (merge_coeffs0 ((xs, n + m) # p))\\<rbrakk>\n                \\<Longrightarrow> a \\<in> mononoms ((xs, n + m) # p);\n        \\<lbrakk>xs = ys; \\<not> n + m \\<noteq> 0;\n         (a, b) \\<in> set (merge_coeffs0 p)\\<rbrakk>\n        \\<Longrightarrow> a \\<in> mononoms p;\n        \\<lbrakk>xs \\<noteq> ys; n = 0;\n         (a, b) \\<in> set (merge_coeffs0 ((ys, m) # p))\\<rbrakk>\n        \\<Longrightarrow> a \\<in> mononoms ((ys, m) # p);\n        \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0;\n         (a, b) \\<in> set (merge_coeffs0 ((ys, m) # p))\\<rbrakk>\n        \\<Longrightarrow> a \\<in> mononoms ((ys, m) # p);\n        (a, b) \\<in> set (merge_coeffs0 ((xs, n) # (ys, m) # p))\\<rbrakk>\n       \\<Longrightarrow> a \\<in> mononoms ((xs, n) # (ys, m) # p)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>xs_ = ys_; n_ + m_ \\<noteq> 0;\n              (a, b)\n              \\<in> set (merge_coeffs0 ((xs_, n_ + m_) # p_))\\<rbrakk>\n             \\<Longrightarrow> a \\<in> mononoms ((xs_, n_ + m_) # p_);\n     \\<lbrakk>xs_ = ys_; \\<not> n_ + m_ \\<noteq> 0;\n      (a, b) \\<in> set (merge_coeffs0 p_)\\<rbrakk>\n     \\<Longrightarrow> a \\<in> mononoms p_;\n     \\<lbrakk>xs_ \\<noteq> ys_; n_ = 0;\n      (a, b) \\<in> set (merge_coeffs0 ((ys_, m_) # p_))\\<rbrakk>\n     \\<Longrightarrow> a \\<in> mononoms ((ys_, m_) # p_);\n     \\<lbrakk>xs_ \\<noteq> ys_; n_ \\<noteq> 0;\n      (a, b) \\<in> set (merge_coeffs0 ((ys_, m_) # p_))\\<rbrakk>\n     \\<Longrightarrow> a \\<in> mononoms ((ys_, m_) # p_);\n     (a, b) \\<in> set (merge_coeffs0 ((xs_, n_) # (ys_, m_) # p_))\\<rbrakk>\n    \\<Longrightarrow> a \\<in> mononoms ((xs_, n_) # (ys_, m_) # p_)", "by (auto split: if_splits)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma in_set_merge_coeffs0D:\n  \\<open>(a, b) \\<in> set (merge_coeffs0 p) \\<Longrightarrow>\\<exists>b. (a, b) \\<in> set p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> set (merge_coeffs0 p) \\<Longrightarrow>\n    \\<exists>b. (a, b) \\<in> set p", "by  (auto dest!: fst_normalize0_polynomial_subsetD)"], ["", "lemma merge_coeffs0_is_normalize_poly_p:\n  \\<open>(xs, ys) \\<in> sorted_repeat_poly_rel_with0 \\<Longrightarrow> \\<exists>r. (merge_coeffs0 xs, r) \\<in> sorted_poly_rel \\<and> normalize_poly_p\\<^sup>*\\<^sup>* ys r\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (xs, ys)\n    \\<in> sorted_repeat_poly_list_rel_with0\n           (rel2p (Id \\<union> term_order_rel)) \\<Longrightarrow>\n    \\<exists>r.\n       (merge_coeffs0 xs, r) \\<in> sorted_poly_rel \\<and>\n       normalize_poly_p\\<^sup>*\\<^sup>* ys r", "apply (induction xs arbitrary: ys rule: merge_coeffs0.induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ys.\n       ([], ys)\n       \\<in> sorted_repeat_poly_list_rel_with0\n              (rel2p (Id \\<union> term_order_rel)) \\<Longrightarrow>\n       \\<exists>r.\n          (merge_coeffs0 [], r) \\<in> sorted_poly_rel \\<and>\n          normalize_poly_p\\<^sup>*\\<^sup>* ys r\n 2. \\<And>xs n ys.\n       ([(xs, n)], ys)\n       \\<in> sorted_repeat_poly_list_rel_with0\n              (rel2p (Id \\<union> term_order_rel)) \\<Longrightarrow>\n       \\<exists>r.\n          (merge_coeffs0 [(xs, n)], r) \\<in> sorted_poly_rel \\<and>\n          normalize_poly_p\\<^sup>*\\<^sup>* ys r\n 3. \\<And>xs n ys m p ysa.\n       \\<lbrakk>\\<And>ysa.\n                   \\<lbrakk>xs = ys; n + m \\<noteq> 0;\n                    ((xs, n + m) # p, ysa)\n                    \\<in> sorted_repeat_poly_list_rel_with0\n                           (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>r.\n  (merge_coeffs0 ((xs, n + m) # p), r) \\<in> sorted_poly_rel \\<and>\n  normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        \\<And>ysa.\n           \\<lbrakk>xs = ys; \\<not> n + m \\<noteq> 0;\n            (p, ysa)\n            \\<in> sorted_repeat_poly_list_rel_with0\n                   (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>r.\n                                (merge_coeffs0 p, r)\n                                \\<in> sorted_poly_rel \\<and>\n                                normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        \\<And>ysa.\n           \\<lbrakk>xs \\<noteq> ys; n = 0;\n            ((ys, m) # p, ysa)\n            \\<in> sorted_repeat_poly_list_rel_with0\n                   (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>r.\n                                (merge_coeffs0 ((ys, m) # p), r)\n                                \\<in> sorted_poly_rel \\<and>\n                                normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        \\<And>ysa.\n           \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0;\n            ((ys, m) # p, ysa)\n            \\<in> sorted_repeat_poly_list_rel_with0\n                   (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>r.\n                                (merge_coeffs0 ((ys, m) # p), r)\n                                \\<in> sorted_poly_rel \\<and>\n                                normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        ((xs, n) # (ys, m) # p, ysa)\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n                            \\<in> sorted_poly_rel \\<and>\n                            normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([], ys_)\n    \\<in> sorted_repeat_poly_list_rel_with0\n           (rel2p (Id \\<union> term_order_rel)) \\<Longrightarrow>\n    \\<exists>r.\n       (merge_coeffs0 [], r) \\<in> sorted_poly_rel \\<and>\n       normalize_poly_p\\<^sup>*\\<^sup>* ys_ r", "by (auto simp: sorted_repeat_poly_list_rel_wrt_def sorted_poly_list_rel_wrt_def\n    sorted_repeat_poly_list_rel_with0_wrt_def list_mset_rel_def br_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xs n ys.\n       ([(xs, n)], ys)\n       \\<in> sorted_repeat_poly_list_rel_with0\n              (rel2p (Id \\<union> term_order_rel)) \\<Longrightarrow>\n       \\<exists>r.\n          (merge_coeffs0 [(xs, n)], r) \\<in> sorted_poly_rel \\<and>\n          normalize_poly_p\\<^sup>*\\<^sup>* ys r\n 2. \\<And>xs n ys m p ysa.\n       \\<lbrakk>\\<And>ysa.\n                   \\<lbrakk>xs = ys; n + m \\<noteq> 0;\n                    ((xs, n + m) # p, ysa)\n                    \\<in> sorted_repeat_poly_list_rel_with0\n                           (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>r.\n  (merge_coeffs0 ((xs, n + m) # p), r) \\<in> sorted_poly_rel \\<and>\n  normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        \\<And>ysa.\n           \\<lbrakk>xs = ys; \\<not> n + m \\<noteq> 0;\n            (p, ysa)\n            \\<in> sorted_repeat_poly_list_rel_with0\n                   (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>r.\n                                (merge_coeffs0 p, r)\n                                \\<in> sorted_poly_rel \\<and>\n                                normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        \\<And>ysa.\n           \\<lbrakk>xs \\<noteq> ys; n = 0;\n            ((ys, m) # p, ysa)\n            \\<in> sorted_repeat_poly_list_rel_with0\n                   (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>r.\n                                (merge_coeffs0 ((ys, m) # p), r)\n                                \\<in> sorted_poly_rel \\<and>\n                                normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        \\<And>ysa.\n           \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0;\n            ((ys, m) # p, ysa)\n            \\<in> sorted_repeat_poly_list_rel_with0\n                   (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>r.\n                                (merge_coeffs0 ((ys, m) # p), r)\n                                \\<in> sorted_poly_rel \\<and>\n                                normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        ((xs, n) # (ys, m) # p, ysa)\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n                            \\<in> sorted_poly_rel \\<and>\n                            normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "subgoal for xs n ys"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([(xs, n)], ys)\n    \\<in> sorted_repeat_poly_list_rel_with0\n           (rel2p (Id \\<union> term_order_rel)) \\<Longrightarrow>\n    \\<exists>r.\n       (merge_coeffs0 [(xs, n)], r) \\<in> sorted_poly_rel \\<and>\n       normalize_poly_p\\<^sup>*\\<^sup>* ys r", "by (force simp: sorted_repeat_poly_list_rel_wrt_def sorted_poly_list_rel_wrt_def\n      sorted_repeat_poly_list_rel_with0_wrt_def list_mset_rel_def br_def\n      list_rel_split_right_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xs n ys m p ysa.\n       \\<lbrakk>\\<And>ysa.\n                   \\<lbrakk>xs = ys; n + m \\<noteq> 0;\n                    ((xs, n + m) # p, ysa)\n                    \\<in> sorted_repeat_poly_list_rel_with0\n                           (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>r.\n  (merge_coeffs0 ((xs, n + m) # p), r) \\<in> sorted_poly_rel \\<and>\n  normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        \\<And>ysa.\n           \\<lbrakk>xs = ys; \\<not> n + m \\<noteq> 0;\n            (p, ysa)\n            \\<in> sorted_repeat_poly_list_rel_with0\n                   (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>r.\n                                (merge_coeffs0 p, r)\n                                \\<in> sorted_poly_rel \\<and>\n                                normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        \\<And>ysa.\n           \\<lbrakk>xs \\<noteq> ys; n = 0;\n            ((ys, m) # p, ysa)\n            \\<in> sorted_repeat_poly_list_rel_with0\n                   (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>r.\n                                (merge_coeffs0 ((ys, m) # p), r)\n                                \\<in> sorted_poly_rel \\<and>\n                                normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        \\<And>ysa.\n           \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0;\n            ((ys, m) # p, ysa)\n            \\<in> sorted_repeat_poly_list_rel_with0\n                   (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>r.\n                                (merge_coeffs0 ((ys, m) # p), r)\n                                \\<in> sorted_poly_rel \\<and>\n                                normalize_poly_p\\<^sup>*\\<^sup>* ysa r;\n        ((xs, n) # (ys, m) # p, ysa)\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n                            \\<in> sorted_poly_rel \\<and>\n                            normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "subgoal premises p for xs n ys m p ysa"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r.\n       (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n       \\<in> sorted_poly_rel \\<and>\n       normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "apply (cases \\<open>xs = ys\\<close>, cases \\<open>m+n \\<noteq> 0\\<close>)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>xs = ys; m + n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r\n 2. \\<lbrakk>xs = ys; \\<not> m + n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r\n 3. xs \\<noteq> ys \\<Longrightarrow>\n    \\<exists>r.\n       (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n       \\<in> sorted_poly_rel \\<and>\n       normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys; m + n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "using p(1)[of \\<open>add_mset (mset ys, m+n) ysa - {#(mset ys, m), (mset ys, n)#}\\<close>] p(5-)"], ["proof (prove)\nusing this:\n  \\<lbrakk>xs = ys; n + m \\<noteq> 0;\n   ((xs, n + m) # p,\n    add_mset (mset ys, m + n) ysa - {#(mset ys, m), (mset ys, n)#})\n   \\<in> sorted_repeat_poly_list_rel_with0\n          (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       (merge_coeffs0 ((xs, n + m) # p), r)\n                       \\<in> sorted_poly_rel \\<and>\n                       normalize_poly_p\\<^sup>*\\<^sup>*\n                        (add_mset (mset ys, m + n) ysa -\n                         {#(mset ys, m), (mset ys, n)#})\n                        r\n  ((xs, n) # (ys, m) # p, ysa)\n  \\<in> sorted_repeat_poly_list_rel_with0\n         (rel2p (Id \\<union> term_order_rel))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys; m + n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "apply (auto simp: sorted_repeat_poly_list_rel_with0_wrtl_Cons_iff ac_simps add_mset_commute\n        remove1_mset_add_mset_If nonzero_coeffs_diff sorted_repeat_poly_list_rel_Cons_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys; m + n \\<noteq> 0;\n     (mset ys, m + n)\n     \\<in># add_mset (mset ys, m + n) ysa -\n            {#(mset ys, m), (mset ys, n)#} \\<Longrightarrow>\n     \\<exists>r.\n        (merge_coeffs0 ((ys, m + n) # p), r) \\<in> sorted_poly_rel \\<and>\n        normalize_poly_p\\<^sup>*\\<^sup>*\n         (add_mset (mset ys, m + n) ysa - {#(mset ys, m), (mset ys, n)#}) r;\n     distinct ys; sorted_wrt var_order ys;\n     rel2p (Id \\<union> term_order_rel) ys ys; (mset ys, n) \\<in># ysa;\n     \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n     (mset ys, m) \\<in># remove1_mset (mset ys, n) ysa;\n     (p, ysa - {#(mset ys, m), (mset ys, n)#})\n     \\<in> sorted_repeat_poly_list_rel_with0\n            (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r \\<and>\n                         (merge_coeffs0 ((ys, m + n) # p), r)\n                         \\<in> sorted_poly_rel", "apply (auto intro: normalize_poly_p.intros add_mset_commute add_mset_commute\n         converse_rtranclp_into_rtranclp dest!: multi_member_split\n        simp del: normalize_poly_p.merge_dup_coeff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Aa r.\n       \\<lbrakk>xs = ys; m + n \\<noteq> 0; distinct ys;\n        sorted_wrt var_order ys; rel2p (Id \\<union> term_order_rel) ys ys;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (p, Aa)\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> term_order_rel));\n        ysa = add_mset (mset ys, n) (add_mset (mset ys, m) Aa);\n        (merge_coeffs0 ((ys, m + n) # p), r) \\<in> sorted_poly_rel;\n        normalize_poly_p\\<^sup>*\\<^sup>* (add_mset (mset ys, m + n) Aa)\n         r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            normalize_poly_p\\<^sup>*\\<^sup>*\n                             (add_mset (mset ys, n)\n                               (add_mset (mset ys, m) Aa))\n                             r \\<and>\n                            (merge_coeffs0 ((ys, m + n) # p), r)\n                            \\<in> sorted_poly_rel", "apply (rule_tac x = \\<open>r\\<close> in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Aa r.\n       \\<lbrakk>xs = ys; m + n \\<noteq> 0; distinct ys;\n        sorted_wrt var_order ys; rel2p (Id \\<union> term_order_rel) ys ys;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (p, Aa)\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> term_order_rel));\n        ysa = add_mset (mset ys, n) (add_mset (mset ys, m) Aa);\n        (merge_coeffs0 ((ys, m + n) # p), r) \\<in> sorted_poly_rel;\n        normalize_poly_p\\<^sup>*\\<^sup>* (add_mset (mset ys, m + n) Aa)\n         r\\<rbrakk>\n       \\<Longrightarrow> normalize_poly_p\\<^sup>*\\<^sup>*\n                          (add_mset (mset ys, n) (add_mset (mset ys, m) Aa))\n                          r \\<and>\n                         (merge_coeffs0 ((ys, m + n) # p), r)\n                         \\<in> sorted_poly_rel", "using normalize_poly_p.merge_dup_coeff[of \\<open>ysa -  {#(mset ys, m), (mset ys, n)#}\\<close> \\<open>ysa -  {#(mset ys, m), (mset ys, n)#}\\<close> \\<open>mset ys\\<close> m n]"], ["proof (prove)\nusing this:\n  normalize_poly_p (ysa - {#(mset ys, m), (mset ys, n)#})\n   (ysa - {#(mset ys, m), (mset ys, n)#}) \\<Longrightarrow>\n  normalize_poly_p\n   (add_mset (mset ys, m)\n     (add_mset (mset ys, n) (ysa - {#(mset ys, m), (mset ys, n)#})))\n   (add_mset (mset ys, m + n) (ysa - {#(mset ys, m), (mset ys, n)#}))\n\ngoal (1 subgoal):\n 1. \\<And>Aa r.\n       \\<lbrakk>xs = ys; m + n \\<noteq> 0; distinct ys;\n        sorted_wrt var_order ys; rel2p (Id \\<union> term_order_rel) ys ys;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (p, Aa)\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> term_order_rel));\n        ysa = add_mset (mset ys, n) (add_mset (mset ys, m) Aa);\n        (merge_coeffs0 ((ys, m + n) # p), r) \\<in> sorted_poly_rel;\n        normalize_poly_p\\<^sup>*\\<^sup>* (add_mset (mset ys, m + n) Aa)\n         r\\<rbrakk>\n       \\<Longrightarrow> normalize_poly_p\\<^sup>*\\<^sup>*\n                          (add_mset (mset ys, n) (add_mset (mset ys, m) Aa))\n                          r \\<and>\n                         (merge_coeffs0 ((ys, m + n) # p), r)\n                         \\<in> sorted_poly_rel", "by (auto intro: normalize_poly_p.intros \n         converse_rtranclp_into_rtranclp dest!: multi_member_split\n         simp: add_mset_commute[of \\<open>(mset ys, n)\\<close> \\<open>(mset ys, m)\\<close>]\n         simp del: normalize_poly_p.merge_dup_coeff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>xs = ys; \\<not> m + n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r\n 2. xs \\<noteq> ys \\<Longrightarrow>\n    \\<exists>r.\n       (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n       \\<in> sorted_poly_rel \\<and>\n       normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys; \\<not> m + n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "using p(2)[of \\<open>ysa - {#(mset ys, m), (mset ys, n)#}\\<close>] p(5-)"], ["proof (prove)\nusing this:\n  \\<lbrakk>xs = ys; \\<not> n + m \\<noteq> 0;\n   (p, ysa - {#(mset ys, m), (mset ys, n)#})\n   \\<in> sorted_repeat_poly_list_rel_with0\n          (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       (merge_coeffs0 p, r) \\<in> sorted_poly_rel \\<and>\n                       normalize_poly_p\\<^sup>*\\<^sup>*\n                        (ysa - {#(mset ys, m), (mset ys, n)#}) r\n  ((xs, n) # (ys, m) # p, ysa)\n  \\<in> sorted_repeat_poly_list_rel_with0\n         (rel2p (Id \\<union> term_order_rel))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys; \\<not> m + n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "apply (auto simp: sorted_repeat_poly_list_rel_with0_wrtl_Cons_iff ac_simps add_mset_commute\n        remove1_mset_add_mset_If nonzero_coeffs_diff sorted_repeat_poly_list_rel_Cons_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>xs = ys; m + n = 0; distinct ys;\n        (merge_coeffs0 p, r) \\<in> sorted_poly_rel;\n        normalize_poly_p\\<^sup>*\\<^sup>*\n         (ysa - {#(mset ys, m), (mset ys, n)#}) r;\n        sorted_wrt var_order ys; rel2p (Id \\<union> term_order_rel) ys ys;\n        (mset ys, n) \\<in># ysa;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset ys, n) ysa;\n        (p, ysa - {#(mset ys, m), (mset ys, n)#})\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            normalize_poly_p\\<^sup>*\\<^sup>* ysa r \\<and>\n                            (merge_coeffs0 p, r) \\<in> sorted_poly_rel", "apply (rule_tac x = \\<open>r\\<close> in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>xs = ys; m + n = 0; distinct ys;\n        (merge_coeffs0 p, r) \\<in> sorted_poly_rel;\n        normalize_poly_p\\<^sup>*\\<^sup>*\n         (ysa - {#(mset ys, m), (mset ys, n)#}) r;\n        sorted_wrt var_order ys; rel2p (Id \\<union> term_order_rel) ys ys;\n        (mset ys, n) \\<in># ysa;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset ys, n) ysa;\n        (p, ysa - {#(mset ys, m), (mset ys, n)#})\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> normalize_poly_p\\<^sup>*\\<^sup>* ysa r \\<and>\n                         (merge_coeffs0 p, r) \\<in> sorted_poly_rel", "using normalize_poly_p.rem_0_coeff[of \\<open>add_mset (mset ys, m +n) ysa -  {#(mset ys, m), (mset ys, n)#}\\<close> \\<open>add_mset (mset ys, m +n) ysa -  {#(mset ys, m), (mset ys, n)#}\\<close> \\<open>mset ys\\<close>]"], ["proof (prove)\nusing this:\n  normalize_poly_p\n   (add_mset (mset ys, m + n) ysa - {#(mset ys, m), (mset ys, n)#})\n   (add_mset (mset ys, m + n) ysa -\n    {#(mset ys, m), (mset ys, n)#}) \\<Longrightarrow>\n  normalize_poly_p\n   (add_mset (mset ys, 0)\n     (add_mset (mset ys, m + n) ysa - {#(mset ys, m), (mset ys, n)#}))\n   (add_mset (mset ys, m + n) ysa - {#(mset ys, m), (mset ys, n)#})\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>xs = ys; m + n = 0; distinct ys;\n        (merge_coeffs0 p, r) \\<in> sorted_poly_rel;\n        normalize_poly_p\\<^sup>*\\<^sup>*\n         (ysa - {#(mset ys, m), (mset ys, n)#}) r;\n        sorted_wrt var_order ys; rel2p (Id \\<union> term_order_rel) ys ys;\n        (mset ys, n) \\<in># ysa;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset ys, n) ysa;\n        (p, ysa - {#(mset ys, m), (mset ys, n)#})\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> normalize_poly_p\\<^sup>*\\<^sup>* ysa r \\<and>\n                         (merge_coeffs0 p, r) \\<in> sorted_poly_rel", "using normalize_poly_p.merge_dup_coeff[of \\<open>ysa -  {#(mset ys, m), (mset ys, n)#}\\<close> \\<open>ysa -  {#(mset ys, m), (mset ys, n)#}\\<close> \\<open>mset ys\\<close> m n]"], ["proof (prove)\nusing this:\n  normalize_poly_p\n   (add_mset (mset ys, m + n) ysa - {#(mset ys, m), (mset ys, n)#})\n   (add_mset (mset ys, m + n) ysa -\n    {#(mset ys, m), (mset ys, n)#}) \\<Longrightarrow>\n  normalize_poly_p\n   (add_mset (mset ys, 0)\n     (add_mset (mset ys, m + n) ysa - {#(mset ys, m), (mset ys, n)#}))\n   (add_mset (mset ys, m + n) ysa - {#(mset ys, m), (mset ys, n)#})\n  normalize_poly_p (ysa - {#(mset ys, m), (mset ys, n)#})\n   (ysa - {#(mset ys, m), (mset ys, n)#}) \\<Longrightarrow>\n  normalize_poly_p\n   (add_mset (mset ys, m)\n     (add_mset (mset ys, n) (ysa - {#(mset ys, m), (mset ys, n)#})))\n   (add_mset (mset ys, m + n) (ysa - {#(mset ys, m), (mset ys, n)#}))\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>xs = ys; m + n = 0; distinct ys;\n        (merge_coeffs0 p, r) \\<in> sorted_poly_rel;\n        normalize_poly_p\\<^sup>*\\<^sup>*\n         (ysa - {#(mset ys, m), (mset ys, n)#}) r;\n        sorted_wrt var_order ys; rel2p (Id \\<union> term_order_rel) ys ys;\n        (mset ys, n) \\<in># ysa;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset ys, n) ysa;\n        (p, ysa - {#(mset ys, m), (mset ys, n)#})\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> normalize_poly_p\\<^sup>*\\<^sup>* ysa r \\<and>\n                         (merge_coeffs0 p, r) \\<in> sorted_poly_rel", "by (force intro: normalize_poly_p.intros converse_rtranclp_into_rtranclp\n          dest!: multi_member_split\n        simp del: normalize_poly_p.rem_0_coeff\n         simp: add_mset_commute[of \\<open>(mset ys, n)\\<close> \\<open>(mset ys, m)\\<close>])"], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<noteq> ys \\<Longrightarrow>\n    \\<exists>r.\n       (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n       \\<in> sorted_poly_rel \\<and>\n       normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "apply (cases \\<open>n = 0\\<close>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>xs \\<noteq> ys; n = 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r\n 2. \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> ys; n = 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "using p(3)[of \\<open>add_mset (mset ys, m) ysa - {#(mset xs, n), (mset ys, m)#}\\<close>] p(4-)"], ["proof (prove)\nusing this:\n  \\<lbrakk>xs \\<noteq> ys; n = 0;\n   ((ys, m) # p, add_mset (mset ys, m) ysa - {#(mset xs, n), (mset ys, m)#})\n   \\<in> sorted_repeat_poly_list_rel_with0\n          (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       (merge_coeffs0 ((ys, m) # p), r)\n                       \\<in> sorted_poly_rel \\<and>\n                       normalize_poly_p\\<^sup>*\\<^sup>*\n                        (add_mset (mset ys, m) ysa -\n                         {#(mset xs, n), (mset ys, m)#})\n                        r\n  \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0;\n   ((ys, m) # p, ?ys)\n   \\<in> sorted_repeat_poly_list_rel_with0\n          (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       (merge_coeffs0 ((ys, m) # p), r)\n                       \\<in> sorted_poly_rel \\<and>\n                       normalize_poly_p\\<^sup>*\\<^sup>* ?ys r\n  ((xs, n) # (ys, m) # p, ysa)\n  \\<in> sorted_repeat_poly_list_rel_with0\n         (rel2p (Id \\<union> term_order_rel))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> ys; n = 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "apply (auto simp: sorted_repeat_poly_list_rel_with0_wrtl_Cons_iff ac_simps add_mset_commute\n      remove1_mset_add_mset_If sorted_repeat_poly_list_rel_Cons_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>xs \\<noteq> ys; n = 0; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (remove1_mset (mset xs, 0) ysa) r;\n        (merge_coeffs0 ((ys, m) # p), r) \\<in> sorted_poly_rel; distinct ys;\n        sorted_wrt var_order xs; sorted_wrt var_order ys;\n        rel2p (Id \\<union> term_order_rel) xs ys; (mset xs, 0) \\<in># ysa;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) xs (fst x);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset xs, 0) ysa;\n        (p, ysa - {#(mset xs, 0), (mset ys, m)#})\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            normalize_poly_p\\<^sup>*\\<^sup>* ysa r \\<and>\n                            (merge_coeffs0 ((ys, m) # p), r)\n                            \\<in> sorted_poly_rel", "apply (rule_tac x = \\<open>r\\<close> in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>xs \\<noteq> ys; n = 0; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (remove1_mset (mset xs, 0) ysa) r;\n        (merge_coeffs0 ((ys, m) # p), r) \\<in> sorted_poly_rel; distinct ys;\n        sorted_wrt var_order xs; sorted_wrt var_order ys;\n        rel2p (Id \\<union> term_order_rel) xs ys; (mset xs, 0) \\<in># ysa;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) xs (fst x);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset xs, 0) ysa;\n        (p, ysa - {#(mset xs, 0), (mset ys, m)#})\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> normalize_poly_p\\<^sup>*\\<^sup>* ysa r \\<and>\n                         (merge_coeffs0 ((ys, m) # p), r)\n                         \\<in> sorted_poly_rel", "apply (auto dest!: in_set_merge_coeffsD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>xs \\<noteq> ys; n = 0; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (remove1_mset (mset xs, 0) ysa) r;\n        (merge_coeffs0 ((ys, m) # p), r) \\<in> sorted_poly_rel; distinct ys;\n        sorted_wrt var_order xs; sorted_wrt var_order ys;\n        rel2p (Id \\<union> term_order_rel) xs ys; (mset xs, 0) \\<in># ysa;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) xs (fst x);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset xs, 0) ysa;\n        (p, ysa - {#(mset xs, 0), (mset ys, m)#})\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "by (force intro: rtranclp_normalize_poly_add_mset converse_rtranclp_into_rtranclp\n      simp: rel2p_def var_order_rel_def sorted_poly_list_rel_Cons_iff\n      dest!: multi_member_split\n      dest: sorted_poly_list_rel_nonzeroD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "using p(4)[of \\<open>add_mset (mset ys, m) ysa - {#(mset xs, n), (mset ys, m)#}\\<close>] p(5-)"], ["proof (prove)\nusing this:\n  \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0;\n   ((ys, m) # p, add_mset (mset ys, m) ysa - {#(mset xs, n), (mset ys, m)#})\n   \\<in> sorted_repeat_poly_list_rel_with0\n          (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       (merge_coeffs0 ((ys, m) # p), r)\n                       \\<in> sorted_poly_rel \\<and>\n                       normalize_poly_p\\<^sup>*\\<^sup>*\n                        (add_mset (mset ys, m) ysa -\n                         {#(mset xs, n), (mset ys, m)#})\n                        r\n  ((xs, n) # (ys, m) # p, ysa)\n  \\<in> sorted_repeat_poly_list_rel_with0\n         (rel2p (Id \\<union> term_order_rel))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>r.\n                         (merge_coeffs0 ((xs, n) # (ys, m) # p), r)\n                         \\<in> sorted_poly_rel \\<and>\n                         normalize_poly_p\\<^sup>*\\<^sup>* ysa r", "apply (auto simp: sorted_repeat_poly_list_rel_with0_wrtl_Cons_iff ac_simps add_mset_commute\n      remove1_mset_add_mset_If sorted_repeat_poly_list_rel_Cons_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (remove1_mset (mset xs, n) ysa) r;\n        (merge_coeffs0 ((ys, m) # p), r) \\<in> sorted_poly_rel; distinct ys;\n        sorted_wrt var_order xs; sorted_wrt var_order ys;\n        rel2p (Id \\<union> term_order_rel) xs ys; (mset xs, n) \\<in># ysa;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) xs (fst x);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset xs, n) ysa;\n        (p, ysa - {#(mset xs, n), (mset ys, m)#})\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            normalize_poly_p\\<^sup>*\\<^sup>* ysa r \\<and>\n                            ((xs, n) # merge_coeffs0 ((ys, m) # p), r)\n                            \\<in> sorted_poly_rel", "apply (rule_tac x = \\<open>add_mset (mset xs, n) r\\<close> in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (remove1_mset (mset xs, n) ysa) r;\n        (merge_coeffs0 ((ys, m) # p), r) \\<in> sorted_poly_rel; distinct ys;\n        sorted_wrt var_order xs; sorted_wrt var_order ys;\n        rel2p (Id \\<union> term_order_rel) xs ys; (mset xs, n) \\<in># ysa;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) xs (fst x);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset xs, n) ysa;\n        (p, ysa - {#(mset xs, n), (mset ys, m)#})\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> normalize_poly_p\\<^sup>*\\<^sup>* ysa\n                          (add_mset (mset xs, n) r) \\<and>\n                         ((xs, n) # merge_coeffs0 ((ys, m) # p),\n                          add_mset (mset xs, n) r)\n                         \\<in> sorted_poly_rel", "apply (auto dest!: in_set_merge_coeffs0D)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r.\n       \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (remove1_mset (mset xs, n) ysa) r;\n        (merge_coeffs0 ((ys, m) # p), r) \\<in> sorted_poly_rel; distinct ys;\n        sorted_wrt var_order xs; sorted_wrt var_order ys;\n        rel2p (Id \\<union> term_order_rel) xs ys; (mset xs, n) \\<in># ysa;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) xs (fst x);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset xs, n) ysa;\n        (p, ysa - {#(mset xs, n), (mset ys, m)#})\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> normalize_poly_p\\<^sup>*\\<^sup>* ysa\n                          (add_mset (mset xs, n) r)\n 2. \\<And>r.\n       \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (remove1_mset (mset xs, n) ysa) r;\n        (merge_coeffs0 ((ys, m) # p), r) \\<in> sorted_poly_rel; distinct ys;\n        sorted_wrt var_order xs; sorted_wrt var_order ys;\n        rel2p (Id \\<union> term_order_rel) xs ys; (mset xs, n) \\<in># ysa;\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) xs (fst x);\n        \\<forall>x\\<in>set p. rel2p (Id \\<union> term_order_rel) ys (fst x);\n        (mset ys, m) \\<in># remove1_mset (mset xs, n) ysa;\n        (p, ysa - {#(mset xs, n), (mset ys, m)#})\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> term_order_rel))\\<rbrakk>\n       \\<Longrightarrow> ((xs, n) # merge_coeffs0 ((ys, m) # p),\n                          add_mset (mset xs, n) r)\n                         \\<in> sorted_poly_rel", "apply (auto intro: normalize_poly_p.intros rtranclp_normalize_poly_add_mset\n      simp: rel2p_def var_order_rel_def sorted_poly_list_rel_Cons_iff\n      dest!: multi_member_split\n      dest: sorted_poly_list_rel_nonzeroD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r Aa a b.\n       \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (add_mset (mset ys, m) Aa) r;\n        (merge_coeffs0 ((ys, m) # p), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        distinct ys; sorted_wrt (rel2p (lexord less_than_char)) xs;\n        sorted_wrt (rel2p (lexord less_than_char)) ys;\n        (xs, ys) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           xs = fst x \\<or>\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           ys = fst x \\<or>\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        (p, Aa)\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> lexord (lexord less_than_char)));\n        ysa = add_mset (mset xs, n) (add_mset (mset ys, m) Aa);\n        (a, b) \\<in> set (merge_coeffs0 ((ys, m) # p))\\<rbrakk>\n       \\<Longrightarrow> (xs, a) \\<in> lexord (lexord less_than_char)\n 2. \\<And>r Aa b.\n       \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (add_mset (mset ys, m) Aa) r;\n        (merge_coeffs0 ((ys, m) # p), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        distinct ys; sorted_wrt (rel2p (lexord less_than_char)) xs;\n        sorted_wrt (rel2p (lexord less_than_char)) ys;\n        (xs, ys) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           xs = fst x \\<or>\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           ys = fst x \\<or>\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        (p, Aa)\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> lexord (lexord less_than_char)));\n        ysa = add_mset (mset xs, n) (add_mset (mset ys, m) Aa);\n        (xs, b) \\<in> set (merge_coeffs0 ((ys, m) # p))\\<rbrakk>\n       \\<Longrightarrow> False", "using in_set_merge_coeffs0D total_on_lexord_less_than_char_linear"], ["proof (prove)\nusing this:\n  (?a, ?b) \\<in> set (merge_coeffs0 ?p) \\<Longrightarrow>\n  \\<exists>b. (?a, b) \\<in> set ?p\n  ?xs \\<noteq> ?ys \\<Longrightarrow>\n  ((?xs, ?ys) \\<notin> lexord (lexord less_than_char)) =\n  ((?ys, ?xs) \\<in> lexord (lexord less_than_char))\n\ngoal (2 subgoals):\n 1. \\<And>r Aa a b.\n       \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (add_mset (mset ys, m) Aa) r;\n        (merge_coeffs0 ((ys, m) # p), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        distinct ys; sorted_wrt (rel2p (lexord less_than_char)) xs;\n        sorted_wrt (rel2p (lexord less_than_char)) ys;\n        (xs, ys) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           xs = fst x \\<or>\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           ys = fst x \\<or>\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        (p, Aa)\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> lexord (lexord less_than_char)));\n        ysa = add_mset (mset xs, n) (add_mset (mset ys, m) Aa);\n        (a, b) \\<in> set (merge_coeffs0 ((ys, m) # p))\\<rbrakk>\n       \\<Longrightarrow> (xs, a) \\<in> lexord (lexord less_than_char)\n 2. \\<And>r Aa b.\n       \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (add_mset (mset ys, m) Aa) r;\n        (merge_coeffs0 ((ys, m) # p), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        distinct ys; sorted_wrt (rel2p (lexord less_than_char)) xs;\n        sorted_wrt (rel2p (lexord less_than_char)) ys;\n        (xs, ys) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           xs = fst x \\<or>\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           ys = fst x \\<or>\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        (p, Aa)\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> lexord (lexord less_than_char)));\n        ysa = add_mset (mset xs, n) (add_mset (mset ys, m) Aa);\n        (xs, b) \\<in> set (merge_coeffs0 ((ys, m) # p))\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r Aa b.\n       \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (add_mset (mset ys, m) Aa) r;\n        (merge_coeffs0 ((ys, m) # p), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        distinct ys; sorted_wrt (rel2p (lexord less_than_char)) xs;\n        sorted_wrt (rel2p (lexord less_than_char)) ys;\n        (xs, ys) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           xs = fst x \\<or>\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           ys = fst x \\<or>\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        (p, Aa)\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> lexord (lexord less_than_char)));\n        ysa = add_mset (mset xs, n) (add_mset (mset ys, m) Aa);\n        (xs, b) \\<in> set (merge_coeffs0 ((ys, m) # p))\\<rbrakk>\n       \\<Longrightarrow> False", "using in_set_merge_coeffs0D total_on_lexord_less_than_char_linear"], ["proof (prove)\nusing this:\n  (?a, ?b) \\<in> set (merge_coeffs0 ?p) \\<Longrightarrow>\n  \\<exists>b. (?a, b) \\<in> set ?p\n  ?xs \\<noteq> ?ys \\<Longrightarrow>\n  ((?xs, ?ys) \\<notin> lexord (lexord less_than_char)) =\n  ((?ys, ?xs) \\<in> lexord (lexord less_than_char))\n\ngoal (1 subgoal):\n 1. \\<And>r Aa b.\n       \\<lbrakk>xs \\<noteq> ys; n \\<noteq> 0; distinct xs;\n        normalize_poly_p\\<^sup>*\\<^sup>* (add_mset (mset ys, m) Aa) r;\n        (merge_coeffs0 ((ys, m) # p), r)\n        \\<in> sorted_poly_list_rel (rel2p (lexord (lexord less_than_char)));\n        distinct ys; sorted_wrt (rel2p (lexord less_than_char)) xs;\n        sorted_wrt (rel2p (lexord less_than_char)) ys;\n        (xs, ys) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           xs = fst x \\<or>\n           (xs, fst x) \\<in> lexord (lexord less_than_char);\n        \\<forall>x\\<in>set p.\n           ys = fst x \\<or>\n           (ys, fst x) \\<in> lexord (lexord less_than_char);\n        (p, Aa)\n        \\<in> sorted_repeat_poly_list_rel_with0\n               (rel2p (Id \\<union> lexord (lexord less_than_char)));\n        ysa = add_mset (mset xs, n) (add_mset (mset ys, m) Aa);\n        (xs, b) \\<in> set (merge_coeffs0 ((ys, m) # p))\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition full_normalize_poly where\n  \\<open>full_normalize_poly p = do {\n     p \\<leftarrow> sort_all_coeffs p;\n     p \\<leftarrow> sort_poly_spec p;\n     RETURN (merge_coeffs0 p)\n  }\\<close>"], ["", "fun sorted_remdups where\n  \\<open>sorted_remdups (x # y # zs) =\n    (if x = y then sorted_remdups (y # zs) else x # sorted_remdups (y # zs))\\<close> |\n  \\<open>sorted_remdups zs = zs\\<close>"], ["", "lemma set_sorted_remdups[simp]:\n  \\<open>set (sorted_remdups xs) = set xs\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (sorted_remdups xs) = set xs", "by (induction xs rule: sorted_remdups.induct)\n   auto"], ["", "lemma distinct_sorted_remdups:\n  \\<open>sorted_wrt R xs \\<Longrightarrow> transp R \\<Longrightarrow> Restricted_Predicates.total_on R UNIV \\<Longrightarrow>\n    antisymp R \\<Longrightarrow> distinct (sorted_remdups xs)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sorted_wrt R xs; transp R;\n     Restricted_Predicates.total_on R UNIV; antisymp R\\<rbrakk>\n    \\<Longrightarrow> distinct (sorted_remdups xs)", "by (induction xs rule: sorted_remdups.induct)\n    (auto dest: antisympD)"], ["", "lemma full_normalize_poly_normalize_poly_p:\n  assumes \\<open>(p, p') \\<in> fully_unsorted_poly_rel\\<close>\n  shows \\<open>full_normalize_poly p \\<le> \\<Down> (sorted_poly_rel) (SPEC (\\<lambda>r. normalize_poly_p\\<^sup>*\\<^sup>* p' r))\\<close>\n  (is \\<open>?A \\<le> \\<Down> ?R ?B\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. full_normalize_poly p\n    \\<le> \\<Down> sorted_poly_rel\n           (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p'))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. full_normalize_poly p\n    \\<le> \\<Down> sorted_poly_rel\n           (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p'))", "have 1: \\<open>?B = do {\n     p' \\<leftarrow> RETURN p';\n     p' \\<leftarrow> RETURN p';\n     SPEC (\\<lambda>r. normalize_poly_p\\<^sup>*\\<^sup>* p' r)\n    }\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p') =\n    RETURN p' \\<bind>\n    (\\<lambda>p'.\n        RETURN p' \\<bind>\n        (\\<lambda>p'. SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p')))", "by auto"], ["proof (state)\nthis:\n  SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p') =\n  RETURN p' \\<bind>\n  (\\<lambda>p'.\n      RETURN p' \\<bind>\n      (\\<lambda>p'. SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p')))\n\ngoal (1 subgoal):\n 1. full_normalize_poly p\n    \\<le> \\<Down> sorted_poly_rel\n           (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p'))", "have [refine0]: \\<open>sort_all_coeffs p \\<le> SPEC(\\<lambda>p. (p, p') \\<in> unsorted_poly_rel_with0)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. sort_all_coeffs p\n    \\<le> SPEC (\\<lambda>p. (p, p') \\<in> unsorted_poly_rel_with0)", "by (rule sort_all_coeffs_unsorted_poly_rel_with0[OF assms, THEN order_trans])\n      (auto simp: conc_fun_RES RETURN_def)"], ["proof (state)\nthis:\n  sort_all_coeffs p\n  \\<le> SPEC (\\<lambda>p. (p, p') \\<in> unsorted_poly_rel_with0)\n\ngoal (1 subgoal):\n 1. full_normalize_poly p\n    \\<le> \\<Down> sorted_poly_rel\n           (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p'))", "have [refine0]: \\<open>sort_poly_spec p \\<le> SPEC (\\<lambda>c. (c, p') \\<in> sorted_repeat_poly_rel_with0)\\<close>\n    if \\<open>(p, p') \\<in> unsorted_poly_rel_with0\\<close>\n    for p p'"], ["proof (prove)\ngoal (1 subgoal):\n 1. sort_poly_spec p\n    \\<le> SPEC\n           (\\<lambda>c.\n               (c, p')\n               \\<in> sorted_repeat_poly_list_rel_with0\n                      (rel2p (Id \\<union> term_order_rel)))", "by (rule sort_poly_spec_id'[THEN order_trans, OF that])\n      (auto simp: conc_fun_RES RETURN_def)"], ["proof (state)\nthis:\n  (?p, ?p') \\<in> unsorted_poly_rel_with0 \\<Longrightarrow>\n  sort_poly_spec ?p\n  \\<le> SPEC\n         (\\<lambda>c.\n             (c, ?p')\n             \\<in> sorted_repeat_poly_list_rel_with0\n                    (rel2p (Id \\<union> term_order_rel)))\n\ngoal (1 subgoal):\n 1. full_normalize_poly p\n    \\<le> \\<Down> sorted_poly_rel\n           (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p'))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. full_normalize_poly p\n    \\<le> \\<Down> sorted_poly_rel\n           (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p'))", "apply (subst 1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. full_normalize_poly p\n    \\<le> \\<Down> sorted_poly_rel\n           (RETURN p' \\<bind>\n            (\\<lambda>p'.\n                RETURN p' \\<bind>\n                (\\<lambda>p'. SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p'))))", "unfolding full_normalize_poly_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sort_all_coeffs p \\<bind>\n    (\\<lambda>p.\n        sort_poly_spec p \\<bind> (\\<lambda>p. RETURN (merge_coeffs0 p)))\n    \\<le> \\<Down> sorted_poly_rel\n           (RETURN p' \\<bind>\n            (\\<lambda>p'.\n                RETURN p' \\<bind>\n                (\\<lambda>p'. SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p'))))", "by (refine_rcg)\n     (auto intro!: RES_refine\n        dest!: merge_coeffs0_is_normalize_poly_p\n        simp: RETURN_def)"], ["proof (state)\nthis:\n  full_normalize_poly p\n  \\<le> \\<Down> sorted_poly_rel (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p'))\n\ngoal:\nNo subgoals!", "qed"], ["", "definition mult_poly_full :: \\<open>_\\<close> where\n\\<open>mult_poly_full p q = do {\n  let pq = mult_poly_raw p q;\n  normalize_poly pq\n}\\<close>"], ["", "lemma normalize_poly_normalize_poly_p:\n  assumes \\<open>(p, p') \\<in> unsorted_poly_rel\\<close>\n  shows \\<open>normalize_poly p \\<le> \\<Down> (sorted_poly_rel) (SPEC (\\<lambda>r. normalize_poly_p\\<^sup>*\\<^sup>* p' r))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. PAC_Polynomials_Operations.normalize_poly p\n    \\<le> \\<Down> sorted_poly_rel\n           (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p'))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. PAC_Polynomials_Operations.normalize_poly p\n    \\<le> \\<Down> sorted_poly_rel\n           (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p'))", "have 1: \\<open>SPEC (\\<lambda>r. normalize_poly_p\\<^sup>*\\<^sup>* p' r) = do {\n      p' \\<leftarrow> RETURN p';\n      SPEC (\\<lambda>r. normalize_poly_p\\<^sup>*\\<^sup>* p' r)\n   }\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p') =\n    RETURN p' \\<bind>\n    (\\<lambda>p'. SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p'))", "by auto"], ["proof (state)\nthis:\n  SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p') =\n  RETURN p' \\<bind>\n  (\\<lambda>p'. SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p'))\n\ngoal (1 subgoal):\n 1. PAC_Polynomials_Operations.normalize_poly p\n    \\<le> \\<Down> sorted_poly_rel\n           (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p'))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. PAC_Polynomials_Operations.normalize_poly p\n    \\<le> \\<Down> sorted_poly_rel\n           (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p'))", "unfolding normalize_poly_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sort_poly_spec p \\<bind> (\\<lambda>p. RETURN (merge_coeffs p))\n    \\<le> \\<Down> sorted_poly_rel\n           (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p'))", "apply (subst 1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. sort_poly_spec p \\<bind> (\\<lambda>p. RETURN (merge_coeffs p))\n    \\<le> \\<Down> sorted_poly_rel\n           (RETURN p' \\<bind>\n            (\\<lambda>p'. SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p')))", "apply (refine_rcg sort_poly_spec_id[OF assms]\n      merge_coeffs_is_normalize_poly_p)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       (p, p')\n       \\<in> sorted_repeat_poly_list_rel\n              (rel2p (Id \\<union> term_order_rel)) \\<Longrightarrow>\n       RETURN (merge_coeffs p)\n       \\<le> \\<Down> sorted_poly_rel\n              (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p'))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p_, p'_)\n    \\<in> sorted_repeat_poly_list_rel\n           (rel2p (Id \\<union> term_order_rel)) \\<Longrightarrow>\n    RETURN (merge_coeffs p_)\n    \\<le> \\<Down> sorted_poly_rel\n           (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p'_))", "by (drule merge_coeffs_is_normalize_poly_p)\n        (auto intro!: RES_refine simp: RETURN_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  PAC_Polynomials_Operations.normalize_poly p\n  \\<le> \\<Down> sorted_poly_rel (SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p'))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Multiplication and normalisation\\<close>"], ["", "definition mult_poly_p' :: \\<open>_\\<close> where\n\\<open>mult_poly_p' p' q' = do {\n  pq \\<leftarrow> SPEC(\\<lambda>r. (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#}) ({#}, r));\n  SPEC (\\<lambda>r. normalize_poly_p\\<^sup>*\\<^sup>* pq r)\n}\\<close>"], ["", "lemma unsorted_poly_rel_fully_unsorted_poly_rel:\n  \\<open>unsorted_poly_rel \\<subseteq> fully_unsorted_poly_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. unsorted_poly_rel \\<subseteq> fully_unsorted_poly_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. unsorted_poly_rel \\<subseteq> fully_unsorted_poly_rel", "have \\<open>term_poly_list_rel  \\<times>\\<^sub>r int_rel \\<subseteq> unsorted_term_poly_list_rel \\<times>\\<^sub>r int_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. term_poly_list_rel \\<times>\\<^sub>r int_rel\n    \\<subseteq> unsorted_term_poly_list_rel \\<times>\\<^sub>r int_rel", "by (auto simp: unsorted_term_poly_list_rel_def term_poly_list_rel_def)"], ["proof (state)\nthis:\n  term_poly_list_rel \\<times>\\<^sub>r int_rel\n  \\<subseteq> unsorted_term_poly_list_rel \\<times>\\<^sub>r int_rel\n\ngoal (1 subgoal):\n 1. unsorted_poly_rel \\<subseteq> fully_unsorted_poly_rel", "from list_rel_mono[OF this]"], ["proof (chain)\npicking this:\n  \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel\n  \\<subseteq> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel\n  \\<subseteq> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. unsorted_poly_rel \\<subseteq> fully_unsorted_poly_rel", "unfolding poly_list_rel_def fully_unsorted_poly_list_rel_def"], ["proof (prove)\nusing this:\n  \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel\n  \\<subseteq> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                       int_rel\\<rangle>list_rel\n\ngoal (1 subgoal):\n 1. {(xs, ys).\n     (xs, ys)\n     \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                    int_rel\\<rangle>list_rel O\n           list_mset_rel \\<and>\n     0 \\<notin># snd `# ys}\n    \\<subseteq> {(xs, ys).\n                 (xs, ys)\n                 \\<in> \\<langle>unsorted_term_poly_list_rel \\<times>\\<^sub>r\n                                int_rel\\<rangle>list_rel O\n                       list_mset_rel}", "by (auto simp:)"], ["proof (state)\nthis:\n  unsorted_poly_rel \\<subseteq> fully_unsorted_poly_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mult_poly_full_mult_poly_p':\n  assumes \\<open>(p, p') \\<in> sorted_poly_rel\\<close> \\<open>(q, q') \\<in> sorted_poly_rel\\<close>\n  shows \\<open>mult_poly_full p q \\<le> \\<Down> (sorted_poly_rel) (mult_poly_p' p' q')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. mult_poly_full p q \\<le> \\<Down> sorted_poly_rel (mult_poly_p' p' q')", "unfolding mult_poly_full_def mult_poly_p'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Let (PAC_Polynomials_Operations.mult_poly_raw p q)\n     PAC_Polynomials_Operations.normalize_poly\n    \\<le> \\<Down> sorted_poly_rel\n           (SPEC\n             (\\<lambda>r.\n                 (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#})\n                  ({#}, r)) \\<bind>\n            (\\<lambda>pq. SPEC (normalize_poly_p\\<^sup>*\\<^sup>* pq)))", "apply (refine_rcg full_normalize_poly_normalize_poly_p\n    normalize_poly_normalize_poly_p)"], ["proof (prove)\ngoal (2 subgoals):\n 1. RETURN (PAC_Polynomials_Operations.mult_poly_raw p q)\n    \\<le> \\<Down> ?R'\n           (SPEC\n             (\\<lambda>r.\n                 (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#}) ({#}, r)))\n 2. \\<And>pq.\n       (PAC_Polynomials_Operations.mult_poly_raw p q, pq)\n       \\<in> ?R' \\<Longrightarrow>\n       (PAC_Polynomials_Operations.mult_poly_raw p q, pq)\n       \\<in> unsorted_poly_rel", "apply (subst RETURN_RES_refine_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>y\\<in>{r. (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#}) ({#}, r)}.\n       (PAC_Polynomials_Operations.mult_poly_raw p q, y) \\<in> ?R'\n 2. \\<And>pq.\n       (PAC_Polynomials_Operations.mult_poly_raw p q, pq)\n       \\<in> ?R' \\<Longrightarrow>\n       (PAC_Polynomials_Operations.mult_poly_raw p q, pq)\n       \\<in> unsorted_poly_rel", "apply (subst Bex_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>x.\n       x \\<in> {r. (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#})\n                    ({#}, r)} \\<and>\n       (PAC_Polynomials_Operations.mult_poly_raw p q, x) \\<in> ?R'\n 2. \\<And>pq.\n       (PAC_Polynomials_Operations.mult_poly_raw p q, pq)\n       \\<in> ?R' \\<Longrightarrow>\n       (PAC_Polynomials_Operations.mult_poly_raw p q, pq)\n       \\<in> unsorted_poly_rel", "apply (subst mem_Collect_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>x.\n       (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#}) ({#}, x) \\<and>\n       (PAC_Polynomials_Operations.mult_poly_raw p q, x) \\<in> ?R'\n 2. \\<And>pq.\n       (PAC_Polynomials_Operations.mult_poly_raw p q, pq)\n       \\<in> ?R' \\<Longrightarrow>\n       (PAC_Polynomials_Operations.mult_poly_raw p q, pq)\n       \\<in> unsorted_poly_rel", "apply (subst conj_commute)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>x.\n       (PAC_Polynomials_Operations.mult_poly_raw p q, x) \\<in> ?R' \\<and>\n       (mult_poly_p q')\\<^sup>*\\<^sup>* (p', {#}) ({#}, x)\n 2. \\<And>pq.\n       (PAC_Polynomials_Operations.mult_poly_raw p q, pq)\n       \\<in> ?R' \\<Longrightarrow>\n       (PAC_Polynomials_Operations.mult_poly_raw p q, pq)\n       \\<in> unsorted_poly_rel", "apply (rule mult_poly_raw_mult_poly_p[OF assms(1,2)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pq.\n       (PAC_Polynomials_Operations.mult_poly_raw p q, pq)\n       \\<in> unsorted_poly_rel \\<Longrightarrow>\n       (PAC_Polynomials_Operations.mult_poly_raw p q, pq)\n       \\<in> unsorted_poly_rel", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (PAC_Polynomials_Operations.mult_poly_raw p q, pq_)\n    \\<in> unsorted_poly_rel \\<Longrightarrow>\n    (PAC_Polynomials_Operations.mult_poly_raw p q, pq_)\n    \\<in> unsorted_poly_rel", "by blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition add_poly_spec :: \\<open>_\\<close> where\n\\<open>add_poly_spec p q = SPEC (\\<lambda>r. p + q - r \\<in> ideal polynomial_bool)\\<close>"], ["", "definition add_poly_p' :: \\<open>_\\<close> where\n\\<open>add_poly_p' p q = SPEC(\\<lambda>r. add_poly_p\\<^sup>*\\<^sup>* (p, q, {#}) ({#}, {#}, r))\\<close>"], ["", "lemma add_poly_l_add_poly_p':\n  assumes \\<open>(p, p') \\<in> sorted_poly_rel\\<close> \\<open>(q, q') \\<in> sorted_poly_rel\\<close>\n  shows \\<open>add_poly_l (p, q) \\<le> \\<Down> (sorted_poly_rel) (add_poly_p' p' q')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. add_poly_l (p, q) \\<le> \\<Down> sorted_poly_rel (add_poly_p' p' q')", "unfolding add_poly_p'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. add_poly_l (p, q)\n    \\<le> \\<Down> sorted_poly_rel\n           (SPEC\n             (\\<lambda>r.\n                 add_poly_p\\<^sup>*\\<^sup>* (p', q', {#}) ({#}, {#}, r)))", "apply (refine_rcg add_poly_l_spec[THEN fref_to_Down_curry_right, THEN order_trans, of _ p' q'])"], ["proof (prove)\ngoal (3 subgoals):\n 1. True\n 2. ((p, q), p', q') \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel\n 3. \\<Down> sorted_poly_rel\n     (SPEC\n       (\\<lambda>r. add_poly_p\\<^sup>*\\<^sup>* (p', q', {#}) ({#}, {#}, r)))\n    \\<le> \\<Down> sorted_poly_rel\n           (SPEC\n             (\\<lambda>r.\n                 add_poly_p\\<^sup>*\\<^sup>* (p', q', {#}) ({#}, {#}, r)))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. True", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((p, q), p', q') \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel\n 2. \\<Down> sorted_poly_rel\n     (SPEC\n       (\\<lambda>r. add_poly_p\\<^sup>*\\<^sup>* (p', q', {#}) ({#}, {#}, r)))\n    \\<le> \\<Down> sorted_poly_rel\n           (SPEC\n             (\\<lambda>r.\n                 add_poly_p\\<^sup>*\\<^sup>* (p', q', {#}) ({#}, {#}, r)))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((p, q), p', q') \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel", "using assms"], ["proof (prove)\nusing this:\n  (p, p') \\<in> sorted_poly_rel\n  (q, q') \\<in> sorted_poly_rel\n\ngoal (1 subgoal):\n 1. ((p, q), p', q') \\<in> sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Down> sorted_poly_rel\n     (SPEC\n       (\\<lambda>r. add_poly_p\\<^sup>*\\<^sup>* (p', q', {#}) ({#}, {#}, r)))\n    \\<le> \\<Down> sorted_poly_rel\n           (SPEC\n             (\\<lambda>r.\n                 add_poly_p\\<^sup>*\\<^sup>* (p', q', {#}) ({#}, {#}, r)))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Down> sorted_poly_rel\n     (SPEC\n       (\\<lambda>r. add_poly_p\\<^sup>*\\<^sup>* (p', q', {#}) ({#}, {#}, r)))\n    \\<le> \\<Down> sorted_poly_rel\n           (SPEC\n             (\\<lambda>r.\n                 add_poly_p\\<^sup>*\\<^sup>* (p', q', {#}) ({#}, {#}, r)))", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \\<open>Correctness\\<close>"], ["", "context poly_embed\nbegin"], ["", "definition mset_poly_rel where\n  \\<open>mset_poly_rel = {(a, b). b = polynomial_of_mset a}\\<close>"], ["", "definition var_rel where\n  \\<open>var_rel = br \\<phi> (\\<lambda>_. True)\\<close>"], ["", "lemma normalize_poly_p_normalize_poly_spec:\n  \\<open>(p, p') \\<in> mset_poly_rel \\<Longrightarrow>\n    SPEC (\\<lambda>r. normalize_poly_p\\<^sup>*\\<^sup>* p r) \\<le> \\<Down>mset_poly_rel (normalize_poly_spec p')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, p') \\<in> mset_poly_rel \\<Longrightarrow>\n    SPEC (normalize_poly_p\\<^sup>*\\<^sup>* p)\n    \\<le> \\<Down> mset_poly_rel (normalize_poly_spec p')", "by (auto simp: mset_poly_rel_def rtranclp_normalize_poly_p_poly_of_mset ideal.span_zero\n    normalize_poly_spec_def intro!: RES_refine)"], ["", "lemma mult_poly_p'_mult_poly_spec:\n  \\<open>(p, p') \\<in> mset_poly_rel \\<Longrightarrow> (q, q') \\<in> mset_poly_rel \\<Longrightarrow>\n  mult_poly_p' p q \\<le> \\<Down>mset_poly_rel (mult_poly_spec p' q')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(p, p') \\<in> mset_poly_rel;\n     (q, q') \\<in> mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> mult_poly_p' p q\n                      \\<le> \\<Down> mset_poly_rel (mult_poly_spec p' q')", "unfolding mult_poly_p'_def mult_poly_spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(p, p') \\<in> mset_poly_rel;\n     (q, q') \\<in> mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> SPEC\n                       (\\<lambda>r.\n                           (mult_poly_p q)\\<^sup>*\\<^sup>* (p, {#})\n                            ({#}, r)) \\<bind>\n                      (\\<lambda>pq.\n                          SPEC (normalize_poly_p\\<^sup>*\\<^sup>* pq))\n                      \\<le> \\<Down> mset_poly_rel\n                             (SPEC\n                               (\\<lambda>r.\n                                   p' * q' - r\n                                   \\<in> More_Modules.ideal\n    polynomial_bool))", "apply refine_rcg"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pq.\n       \\<lbrakk>(p, p') \\<in> mset_poly_rel; (q, q') \\<in> mset_poly_rel;\n        pq \\<in> {r. (mult_poly_p q)\\<^sup>*\\<^sup>* (p, {#})\n                      ({#}, r)}\\<rbrakk>\n       \\<Longrightarrow> SPEC (normalize_poly_p\\<^sup>*\\<^sup>* pq)\n                         \\<le> \\<Down> mset_poly_rel\n                                (SPEC\n                                  (\\<lambda>r.\np' * q' - r \\<in> More_Modules.ideal polynomial_bool))", "apply (auto simp: mset_poly_rel_def dest!: rtranclp_mult_poly_p_mult_ideal_final)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pq.\n       \\<lbrakk>p' = polynomial_of_mset p; q' = polynomial_of_mset q;\n        polynomial_of_mset pq - polynomial_of_mset p * polynomial_of_mset q\n        \\<in> More_Modules.ideal polynomial_bool\\<rbrakk>\n       \\<Longrightarrow> SPEC (normalize_poly_p\\<^sup>*\\<^sup>* pq)\n                         \\<le> \\<Down> {(a, b). b = polynomial_of_mset a}\n                                (SPEC\n                                  (\\<lambda>r.\npolynomial_of_mset p * polynomial_of_mset q - r\n\\<in> More_Modules.ideal polynomial_bool))", "apply (intro RES_refine)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pq s.\n       \\<lbrakk>p' = polynomial_of_mset p; q' = polynomial_of_mset q;\n        polynomial_of_mset pq - polynomial_of_mset p * polynomial_of_mset q\n        \\<in> More_Modules.ideal polynomial_bool;\n        s \\<in> Collect (normalize_poly_p\\<^sup>*\\<^sup>* pq)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'\\<in>{r.\n    polynomial_of_mset p * polynomial_of_mset q - r\n    \\<in> More_Modules.ideal polynomial_bool}.\n                            (s, s') \\<in> {(a, b). b = polynomial_of_mset a}", "using ideal.span_add_eq2 ideal.span_zero"], ["proof (prove)\nusing this:\n  ?y \\<in> More_Modules.ideal ?S \\<Longrightarrow>\n  (?x + ?y \\<in> More_Modules.ideal ?S) = (?x \\<in> More_Modules.ideal ?S)\n  (0::?'a) \\<in> More_Modules.ideal ?S\n\ngoal (1 subgoal):\n 1. \\<And>pq s.\n       \\<lbrakk>p' = polynomial_of_mset p; q' = polynomial_of_mset q;\n        polynomial_of_mset pq - polynomial_of_mset p * polynomial_of_mset q\n        \\<in> More_Modules.ideal polynomial_bool;\n        s \\<in> Collect (normalize_poly_p\\<^sup>*\\<^sup>* pq)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'\\<in>{r.\n    polynomial_of_mset p * polynomial_of_mset q - r\n    \\<in> More_Modules.ideal polynomial_bool}.\n                            (s, s') \\<in> {(a, b). b = polynomial_of_mset a}", "by (fastforce dest!: rtranclp_normalize_poly_p_poly_of_mset intro: ideal.span_add_eq2)"], ["", "lemma add_poly_p'_add_poly_spec:\n  \\<open>(p, p') \\<in> mset_poly_rel \\<Longrightarrow> (q, q') \\<in> mset_poly_rel \\<Longrightarrow>\n  add_poly_p' p q \\<le> \\<Down>mset_poly_rel (add_poly_spec p' q')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(p, p') \\<in> mset_poly_rel;\n     (q, q') \\<in> mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> add_poly_p' p q\n                      \\<le> \\<Down> mset_poly_rel (add_poly_spec p' q')", "unfolding add_poly_p'_def add_poly_spec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(p, p') \\<in> mset_poly_rel;\n     (q, q') \\<in> mset_poly_rel\\<rbrakk>\n    \\<Longrightarrow> SPEC\n                       (\\<lambda>r.\n                           add_poly_p\\<^sup>*\\<^sup>* (p, q, {#})\n                            ({#}, {#}, r))\n                      \\<le> \\<Down> mset_poly_rel\n                             (SPEC\n                               (\\<lambda>r.\n                                   p' + q' - r\n                                   \\<in> More_Modules.ideal\n    polynomial_bool))", "apply (auto simp: mset_poly_rel_def dest!: rtranclp_add_poly_p_polynomial_of_mset_full)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p' = polynomial_of_mset p; q' = polynomial_of_mset q\\<rbrakk>\n    \\<Longrightarrow> SPEC\n                       (\\<lambda>r.\n                           add_poly_p\\<^sup>*\\<^sup>* (p, q, {#})\n                            ({#}, {#}, r))\n                      \\<le> \\<Down> {(a, b). b = polynomial_of_mset a}\n                             (SPEC\n                               (\\<lambda>r.\n                                   polynomial_of_mset p +\n                                   polynomial_of_mset q -\n                                   r\n                                   \\<in> More_Modules.ideal\n    polynomial_bool))", "apply (intro RES_refine)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>p' = polynomial_of_mset p; q' = polynomial_of_mset q;\n        s \\<in> {r. add_poly_p\\<^sup>*\\<^sup>* (p, q, {#})\n                     ({#}, {#}, r)}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'\\<in>{r.\n    polynomial_of_mset p + polynomial_of_mset q - r\n    \\<in> More_Modules.ideal polynomial_bool}.\n                            (s, s') \\<in> {(a, b). b = polynomial_of_mset a}", "apply (auto simp: rtranclp_add_poly_p_polynomial_of_mset_full ideal.span_zero)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "definition weak_equality_l :: \\<open>llist_polynomial \\<Rightarrow> llist_polynomial \\<Rightarrow> bool nres\\<close> where\n  \\<open>weak_equality_l p q = RETURN (p = q)\\<close>"], ["", "definition weak_equality :: \\<open>int mpoly \\<Rightarrow> int mpoly \\<Rightarrow> bool nres\\<close> where\n  \\<open>weak_equality p q = SPEC (\\<lambda>r. r \\<longrightarrow> p = q)\\<close>"], ["", "definition weak_equality_spec :: \\<open>mset_polynomial \\<Rightarrow> mset_polynomial \\<Rightarrow> bool nres\\<close> where\n  \\<open>weak_equality_spec p q = SPEC (\\<lambda>r. r \\<longrightarrow> p = q)\\<close>"], ["", "lemma term_poly_list_rel_same_rightD:\n  \\<open>(a, aa) \\<in> term_poly_list_rel \\<Longrightarrow> (a, ab) \\<in> term_poly_list_rel \\<Longrightarrow> aa = ab\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(a, aa) \\<in> term_poly_list_rel;\n     (a, ab) \\<in> term_poly_list_rel\\<rbrakk>\n    \\<Longrightarrow> aa = ab", "by (auto simp: term_poly_list_rel_def)"], ["", "lemma list_rel_term_poly_list_rel_same_rightD:\n  \\<open>(xa, y) \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel \\<Longrightarrow>\n   (xa, ya) \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r int_rel\\<rangle>list_rel \\<Longrightarrow>\n    y = ya\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(xa, y)\n             \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                            int_rel\\<rangle>list_rel;\n     (xa, ya)\n     \\<in> \\<langle>term_poly_list_rel \\<times>\\<^sub>r\n                    int_rel\\<rangle>list_rel\\<rbrakk>\n    \\<Longrightarrow> y = ya", "by (induction xa arbitrary: y ya)\n    (auto simp: list_rel_split_right_iff\n      dest: term_poly_list_rel_same_rightD)"], ["", "lemma weak_equality_l_weak_equality_spec:\n  \\<open>(uncurry weak_equality_l, uncurry weak_equality_spec) \\<in>\n    sorted_poly_rel \\<times>\\<^sub>r sorted_poly_rel \\<rightarrow>\\<^sub>f \\<langle>bool_rel\\<rangle>nres_rel\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (uncurry weak_equality_l, uncurry weak_equality_spec)\n    \\<in> sorted_poly_rel \\<times>\\<^sub>r\n          sorted_poly_rel \\<rightarrow>\\<^sub>f \\<langle>bool_rel\\<rangle>nres_rel", "by (intro frefI nres_relI)\n   (auto simp: weak_equality_l_def weak_equality_spec_def\n      sorted_poly_list_rel_wrt_def list_mset_rel_def br_def\n    dest: list_rel_term_poly_list_rel_same_rightD)"], ["", "end"]]}