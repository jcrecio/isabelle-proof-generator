{"file_name": "/home/qj213/afp-2021-10-22/thys/Abstract-Rewriting/Relative_Rewriting.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Abstract-Rewriting", "problem_names": ["lemma relto_absorb [simp]: \"relto R E O E\\<^sup>* = relto R E\" \"E\\<^sup>* O relto R E = relto R E\"", "lemma steps_preserve_SN_on_relto:\n  assumes steps: \"(a, b) \\<in> (R \\<union> S)^*\"\n    and SN: \"SN_on (relto R S) {a}\"\n  shows \"SN_on (relto R S) {b}\"", "lemma step_preserves_SN_on_relto: assumes st: \"(s,t) \\<in> R \\<union> E\"\n  and SN: \"SN_on (relto R E) {s}\"\n  shows \"SN_on (relto R E) {t}\"", "lemma SN_rel_on_imp_SN_rel_on_alt: \"SN_rel_on R S T \\<Longrightarrow> SN_rel_on_alt R S T\"", "lemma SN_rel_on_alt_imp_SN_rel_on: \"SN_rel_on_alt R S T \\<Longrightarrow> SN_rel_on R S T\"", "lemma SN_rel_on_conv: \"SN_rel_on = SN_rel_on_alt\"", "lemmas SN_rel_defs = SN_rel_on_def SN_rel_on_alt_def", "lemma SN_rel_on_alt_r_empty : \"SN_rel_on_alt {} S T\"", "lemma SN_rel_on_alt_s_empty : \"SN_rel_on_alt R {} = SN_on R\"", "lemma SN_rel_on_mono':\n  assumes R: \"R \\<subseteq> R'\" and S: \"S \\<subseteq> R' \\<union> S'\" and SN: \"SN_rel_on R' S' T\"\n  shows \"SN_rel_on R S T\"", "lemma relto_mono:\n  assumes \"R \\<subseteq> R'\" and \"S \\<subseteq> S'\"\n  shows \"relto R S \\<subseteq> relto R' S'\"", "lemma SN_rel_on_mono:\n  assumes R: \"R \\<subseteq> R'\" and S: \"S \\<subseteq> S'\"\n    and SN: \"SN_rel_on R' S' T\"\n  shows \"SN_rel_on R S T\"", "lemmas SN_rel_on_alt_mono = SN_rel_on_mono[unfolded SN_rel_on_conv]", "lemma SN_rel_on_imp_SN_on:\n  assumes \"SN_rel_on R S T\" shows  \"SN_on R T\"", "lemma relto_Id: \"relto R (S \\<union> Id) = relto R S\"", "lemma SN_rel_on_Id:\n  shows \"SN_rel_on R (S \\<union> Id) T = SN_rel_on R S T\"", "lemma SN_rel_on_empty[simp]: \"SN_rel_on R {} T = SN_on R T\"", "lemma SN_rel_on_ideriv: \"SN_rel_on R S T = (\\<not> (\\<exists> as. ideriv R S as \\<and> as 0 \\<in> T))\" (is \"?L = ?R\")", "lemma SN_rel_to_SN_rel_alt: \"SN_rel R S \\<Longrightarrow> SN_rel_alt R S\"", "lemma SN_rel_alt_to_SN_rel : \"SN_rel_alt R S \\<Longrightarrow> SN_rel R S\"", "lemma SN_rel_alt_r_empty : \"SN_rel_alt {} S\"", "lemma SN_rel_alt_s_empty : \"SN_rel_alt R {} = SN R\"", "lemma SN_rel_mono':\n  \"R \\<subseteq> R' \\<Longrightarrow> S \\<subseteq> R' \\<union> S' \\<Longrightarrow> SN_rel R' S' \\<Longrightarrow> SN_rel R S\"", "lemma SN_rel_mono:\n  assumes R: \"R \\<subseteq> R'\" and S: \"S \\<subseteq> S'\" and SN: \"SN_rel R' S'\"\n  shows \"SN_rel R S\"", "lemmas SN_rel_alt_mono = SN_rel_mono[unfolded SN_rel_on_conv]", "lemma SN_rel_imp_SN : assumes \"SN_rel R S\" shows  \"SN R\"", "lemma relto_trancl_conv : \"(relto R S)^+ = ((R \\<union> S))^* O R O ((R \\<union> S))^*\"", "lemma SN_rel_Id:\n  shows \"SN_rel R (S \\<union> Id) = SN_rel R S\"", "lemma relto_rtrancl: \"relto R (S^*) = relto R S\"", "lemma SN_rel_empty[simp]: \"SN_rel R {} = SN R\"", "lemma SN_rel_ideriv: \"SN_rel R S = (\\<not> (\\<exists> as. ideriv R S as))\" (is \"?L = ?R\")", "lemma SN_rel_map:\n  fixes R Rw R' Rw' :: \"'a rel\" \n  defines A: \"A \\<equiv> R' \\<union> Rw'\"\n  assumes SN: \"SN_rel R' Rw'\" \n  and R: \"\\<And>s t. (s,t) \\<in> R \\<Longrightarrow> (f s, f t) \\<in> A^* O R' O A^*\"\n  and Rw: \"\\<And>s t. (s,t) \\<in> Rw \\<Longrightarrow> (f s, f t) \\<in> A^*\"\n  shows \"SN_rel R Rw\"", "lemma SN_rel_ext_step_mono: assumes \"P \\<subseteq> P'\" \"Pw \\<subseteq> Pw'\" \"R \\<subseteq> R'\" \"Rw \\<subseteq> Rw'\"\n  shows \"SN_rel_ext_step P Pw R Rw t \\<subseteq> SN_rel_ext_step P' Pw' R' Rw' t\"", "lemma SN_rel_ext_mono: assumes subset: \"P \\<subseteq> P'\" \"Pw \\<subseteq> Pw'\" \"R \\<subseteq> R'\" \"Rw \\<subseteq> Rw'\" and\n  SN: \"SN_rel_ext P' Pw' R' Rw' M\" shows \"SN_rel_ext P Pw R Rw M\"", "lemma SN_rel_ext_trans:\n  fixes P Pw R Rw :: \"'a rel\" and M :: \"'a \\<Rightarrow> bool\"\n  defines M': \"M' \\<equiv> {(s,t). M t}\"\n  defines A: \"A \\<equiv> (P \\<union> Pw \\<union> R \\<union> Rw) \\<inter> M'\"\n  assumes \"SN_rel_ext P Pw R Rw M\" \n  shows \"SN_rel_ext (A^* O (P \\<inter> M') O A^*) (A^* O ((P \\<union> Pw) \\<inter> M') O A^*) (A^* O ((P \\<union> R) \\<inter> M') O A^*) (A^*) M\" (is \"SN_rel_ext ?P ?Pw ?R ?Rw M\")", "lemma SN_rel_ext_map: fixes P Pw R Rw P' Pw' R' Rw' :: \"'a rel\" and M M' :: \"'a \\<Rightarrow> bool\"\n  defines Ms: \"Ms \\<equiv> {(s,t). M' t}\"\n  defines A: \"A \\<equiv> (P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter> Ms\"\n  assumes SN: \"SN_rel_ext P' Pw' R' Rw' M'\" \n  and P: \"\\<And> s t. M s \\<Longrightarrow> M t \\<Longrightarrow> (s,t) \\<in> P \\<Longrightarrow> (f s, f t) \\<in> (A^* O (P' \\<inter> Ms) O A^*) \\<and> I t\"\n  and Pw: \"\\<And> s t. M s \\<Longrightarrow> M t \\<Longrightarrow> (s,t) \\<in> Pw \\<Longrightarrow> (f s, f t) \\<in> (A^* O ((P' \\<union> Pw') \\<inter> Ms) O A^*) \\<and> I t\"\n  and R: \"\\<And> s t. I s \\<Longrightarrow> M s \\<Longrightarrow> M t \\<Longrightarrow> (s,t) \\<in> R \\<Longrightarrow> (f s, f t) \\<in> (A^* O ((P' \\<union> R') \\<inter> Ms) O A^*) \\<and> I t\"\n  and Rw: \"\\<And> s t. I s \\<Longrightarrow> M s \\<Longrightarrow> M t \\<Longrightarrow> (s,t) \\<in> Rw \\<Longrightarrow> (f s, f t) \\<in> A^* \\<and> I t\"\n  shows \"SN_rel_ext P Pw R Rw M\"", "lemma SN_rel_ext_map_min: fixes P Pw R Rw P' Pw' R' Rw' :: \"'a rel\" and M M' :: \"'a \\<Rightarrow> bool\"\n  defines Ms: \"Ms \\<equiv> {(s,t). M' t}\"\n  defines A: \"A \\<equiv> P' \\<inter> Ms \\<union> Pw' \\<inter> Ms \\<union> R' \\<union> Rw'\"\n  assumes SN: \"SN_rel_ext P' Pw' R' Rw' M'\" \n  and M: \"\\<And> t. M t \\<Longrightarrow> M' (f t)\"\n  and M': \"\\<And> s t. M' s \\<Longrightarrow> (s,t) \\<in> R' \\<union> Rw' \\<Longrightarrow> M' t\"\n  and P: \"\\<And> s t. M s \\<Longrightarrow> M t \\<Longrightarrow> M' (f s) \\<Longrightarrow> M' (f t) \\<Longrightarrow> (s,t) \\<in> P \\<Longrightarrow> (f s, f t) \\<in> (A^* O (P' \\<inter> Ms) O A^*) \\<and> I t\"\n  and Pw: \"\\<And> s t. M s \\<Longrightarrow> M t \\<Longrightarrow> M' (f s) \\<Longrightarrow> M' (f t) \\<Longrightarrow> (s,t) \\<in> Pw \\<Longrightarrow> (f s, f t) \\<in> (A^* O (P' \\<inter> Ms \\<union> Pw' \\<inter> Ms) O A^*) \\<and> I t\"\n  and R: \"\\<And> s t. I s \\<Longrightarrow> M s \\<Longrightarrow> M t \\<Longrightarrow> M' (f s) \\<Longrightarrow> M' (f t) \\<Longrightarrow> (s,t) \\<in> R \\<Longrightarrow> (f s, f t) \\<in> (A^* O (P' \\<inter> Ms \\<union> R') O A^*) \\<and> I t\"\n  and Rw: \"\\<And> s t. I s \\<Longrightarrow> M s \\<Longrightarrow> M t \\<Longrightarrow> M' (f s) \\<Longrightarrow> M' (f t) \\<Longrightarrow> (s,t) \\<in> Rw \\<Longrightarrow> (f s, f t) \\<in> A^* \\<and> I t\"\n  shows \"SN_rel_ext P Pw R Rw M\"", "lemma SN_relto_imp_SN_rel: \"SN (relto R S) \\<Longrightarrow> SN_rel R S\"", "lemma rtrancl_list_conv:\n  \"((s,t) \\<in> R^*) = \n  (\\<exists>list. last (s # list) = t \\<and> (\\<forall>i. i < length list \\<longrightarrow> ((s # list) ! i, (s # list) ! Suc i) \\<in> R))\" (is \"?l = ?r\")", "lemma SN_rel_imp_SN_relto : \"SN_rel R S \\<Longrightarrow> SN (relto R S)\"", "lemma SN_relto_SN_rel_conv: \"SN (relto R S) = SN_rel R S\"", "lemma SN_rel_empty1: \"SN_rel {} S\"", "lemma SN_rel_empty2: \"SN_rel R {} = SN R\"", "lemma SN_relto_mono:\n  assumes R: \"R \\<subseteq> R'\" and S: \"S \\<subseteq> S'\"\n  and SN: \"SN (relto R' S')\"\n  shows \"SN (relto R S)\"", "lemma SN_relto_imp_SN:\n  assumes \"SN (relto R S)\" shows \"SN R\"", "lemma SN_relto_Id:\n  \"SN (relto R (S \\<union> Id)) = SN (relto R S)\"", "lemma trans_subset_SN:\n  assumes \"trans R\" and \"R \\<subseteq> (r \\<union> s)\" and \"SN r\" and \"SN s\"\n  shows \"SN R\"", "lemma SN_Un_conv:\n  assumes \"trans (r \\<union> s)\"\n  shows \"SN (r \\<union> s) \\<longleftrightarrow> SN r \\<and> SN s\"\n    (is \"SN ?r \\<longleftrightarrow> ?rhs\")", "lemma SN_relto_Un:\n  \"SN (relto (R \\<union> S) Q) \\<longleftrightarrow> SN (relto R (S \\<union> Q)) \\<and> SN (relto S Q)\"\n    (is \"SN ?a \\<longleftrightarrow> SN ?b \\<and> SN ?c\")", "lemma SN_relto_split:\n  assumes \"SN (relto r (s \\<union> q2) \\<union> relto q1 (s \\<union> q2))\" (is \"SN ?a\")\n    and \"SN (relto s q2)\" (is \"SN ?b\")\n  shows \"SN (relto r (q1 \\<union> q2) \\<union> relto s (q1 \\<union> q2))\" (is \"SN ?c\")", "lemma relto_trancl_subset: assumes \"a \\<subseteq> c\" and \"b \\<subseteq> c\" shows \"relto a b \\<subseteq> c^+\"", "lemma relto_funD: assumes \"relto_fun A B n as sel m (a,b)\"\n  shows \"as 0 = a\" \"as m = b\"\n  \"\\<And> i. i < m \\<Longrightarrow> sel i \\<Longrightarrow> (as i, as (Suc i)) \\<in> A\"\n  \"\\<And> i. i < m \\<Longrightarrow> \\<not> sel i \\<Longrightarrow> (as i, as (Suc i)) \\<in> B\"\n  \"n = card { i . i < m \\<and> sel i}\"\n  \"n = 0 \\<longleftrightarrow> m = 0\"", "lemma relto_fun_refl: \"\\<exists> as sel. relto_fun A B 0 as sel 0 (a,a)\"", "lemma relto_into_relto_fun: assumes \"(a,b) \\<in> relto A B\"\n  shows \"\\<exists> as sel m. relto_fun A B (Suc 0) as sel m (a,b)\"", "lemma relto_fun_trans: assumes ab: \"relto_fun A B n1 as1 sel1 m1 (a,b)\"\n  and bc: \"relto_fun A B n2 as2 sel2 m2 (b,c)\"\n  shows \"\\<exists> as sel. relto_fun A B (n1 + n2) as sel (m1 + m2) (a,c)\"", "lemma reltos_into_relto_fun: assumes \"(a,b) \\<in> (relto A B)^^n\"\n  shows \"\\<exists> as sel m. relto_fun A B n as sel m (a,b)\"", "lemma relto_fun_into_reltos: assumes \"relto_fun A B n as sel m (a,b)\"\n  shows \"(a,b) \\<in> (relto A B)^^n\"", "lemma relto_relto_fun_conv: \"((a,b) \\<in> (relto A B)^^n) = (\\<exists> as sel m. relto_fun A B n as sel m (a,b))\"", "lemma relto_fun_intermediate: assumes \"A \\<subseteq> C\" and \"B \\<subseteq> C\" \n  and rf: \"relto_fun A B n as sel m (a,b)\"\n  shows \"i \\<le> m \\<Longrightarrow> (a,as i) \\<in> C^*\"", "lemma not_SN_on_rel_succ:\n  assumes \"\\<not> SN_on (relto R E) {s}\"\n  shows \"\\<exists>t u. (s, t) \\<in> E\\<^sup>* \\<and> (t, u) \\<in> R \\<and> \\<not> SN_on (relto R E) {u}\"", "lemma SN_on_relto_relcomp: \"SN_on (relto R S) T = SN_on (S\\<^sup>* O R) T\" (is \"?L T = ?R T\")", "lemma trans_relto:\n  assumes trans: \"trans R\" and \"S O R \\<subseteq> R O S\"\n  shows \"trans (relto R S)\"", "lemma relative_ending: (* general version of non_strict_ending *)\n  assumes chain: \"chain (R \\<union> S) t\"\n    and t0: \"t 0 \\<in> X\"\n    and SN: \"SN_on (relto R S) X\"\n  shows \"\\<exists>j. \\<forall>i\\<ge>j. (t i, t (Suc i)) \\<in> S - R\"", "lemma SN_on_relto_Un:\n  assumes closure: \"relto (R \\<union> R') S `` X \\<subseteq> X\"\n  shows \"SN_on (relto (R \\<union> R') S) X \\<longleftrightarrow> SN_on (relto R (R' \\<union> S)) X \\<and> SN_on (relto R' S) X\"\n  (is \"?c \\<longleftrightarrow> ?a \\<and> ?b\")", "lemma SN_on_Un: \"(R \\<union> R')``X \\<subseteq> X \\<Longrightarrow> SN_on (R \\<union> R') X \\<longleftrightarrow> SN_on (relto R R') X \\<and> SN_on R' X\""], "translations": [["", "lemma relto_absorb [simp]: \"relto R E O E\\<^sup>* = relto R E\" \"E\\<^sup>* O relto R E = relto R E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (E\\<^sup>* O R O E\\<^sup>*) O E\\<^sup>* = E\\<^sup>* O R O E\\<^sup>* &&&\n    E\\<^sup>* O E\\<^sup>* O R O E\\<^sup>* = E\\<^sup>* O R O E\\<^sup>*", "using O_assoc and rtrancl_idemp_self_comp"], ["proof (prove)\nusing this:\n  (?R O ?S) O ?T = ?R O ?S O ?T\n  ?R\\<^sup>* O ?R\\<^sup>* = ?R\\<^sup>*\n\ngoal (1 subgoal):\n 1. (E\\<^sup>* O R O E\\<^sup>*) O E\\<^sup>* = E\\<^sup>* O R O E\\<^sup>* &&&\n    E\\<^sup>* O E\\<^sup>* O R O E\\<^sup>* = E\\<^sup>* O R O E\\<^sup>*", "by (metis)+"], ["", "lemma steps_preserve_SN_on_relto:\n  assumes steps: \"(a, b) \\<in> (R \\<union> S)^*\"\n    and SN: \"SN_on (relto R S) {a}\"\n  shows \"SN_on (relto R S) {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {b}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {b}", "let ?RS = \"relto R S\""], ["proof (state)\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {b}", "have \"(R \\<union> S)^* \\<subseteq> S^* \\<union> ?RS^*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (R \\<union> S)\\<^sup>*\n    \\<subseteq> S\\<^sup>* \\<union> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>*", "by regexp"], ["proof (state)\nthis:\n  (R \\<union> S)\\<^sup>*\n  \\<subseteq> S\\<^sup>* \\<union> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>*\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {b}", "with steps"], ["proof (chain)\npicking this:\n  (a, b) \\<in> (R \\<union> S)\\<^sup>*\n  (R \\<union> S)\\<^sup>*\n  \\<subseteq> S\\<^sup>* \\<union> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>*", "have \"(a,b) \\<in> S^* \\<or> (a,b) \\<in> ?RS^*\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> (R \\<union> S)\\<^sup>*\n  (R \\<union> S)\\<^sup>*\n  \\<subseteq> S\\<^sup>* \\<union> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>*\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> S\\<^sup>* \\<or>\n    (a, b) \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (a, b) \\<in> S\\<^sup>* \\<or>\n  (a, b) \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>*\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {b}", "thus ?thesis"], ["proof (prove)\nusing this:\n  (a, b) \\<in> S\\<^sup>* \\<or>\n  (a, b) \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>*\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {b}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (a, b) \\<in> S\\<^sup>* \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) {b}\n 2. (a, b) \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>* \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) {b}", "assume \"(a,b) \\<in> ?RS^*\""], ["proof (state)\nthis:\n  (a, b) \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>*\n\ngoal (2 subgoals):\n 1. (a, b) \\<in> S\\<^sup>* \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) {b}\n 2. (a, b) \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>* \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) {b}", "from steps_preserve_SN_on[OF this SN]"], ["proof (chain)\npicking this:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) {b}", "show ?thesis"], ["proof (prove)\nusing this:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) {b}\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {b}", "."], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) {b}\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> S\\<^sup>* \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) {b}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (a, b) \\<in> S\\<^sup>* \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) {b}", "assume Ssteps: \"(a,b) \\<in> S^*\""], ["proof (state)\nthis:\n  (a, b) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> S\\<^sup>* \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) {b}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {b}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> {b};\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> {b};\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"f 0 \\<in> {b}\" and \"chain ?RS f\""], ["proof (state)\nthis:\n  f 0 \\<in> {b}\n  \\<forall>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> {b};\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "hence f0: \"f 0 = b\" and steps: \"\\<And>i. (f i, f (Suc i)) \\<in> ?RS\""], ["proof (prove)\nusing this:\n  f 0 \\<in> {b}\n  \\<forall>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. f 0 = b &&& (\\<And>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*)", "by auto"], ["proof (state)\nthis:\n  f 0 = b\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> {b};\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?g = \"\\<lambda> i. if i = 0 then a else f i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> {b};\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "have \"\\<not> SN_on ?RS {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {a}", "unfolding SN_on_def not_not"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       f 0 \\<in> {a} \\<and>\n       (\\<forall>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*)", "proof (rule exI[of _ ?g], intro conjI allI)"], ["proof (state)\ngoal (2 subgoals):\n 1. (if 0 = 0 then a else f 0) \\<in> {a}\n 2. \\<And>i.\n       (if i = 0 then a else f i, if Suc i = 0 then a else f (Suc i))\n       \\<in> S\\<^sup>* O R O S\\<^sup>*", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. (if 0 = 0 then a else f 0) \\<in> {a}\n 2. \\<And>i.\n       (if i = 0 then a else f i, if Suc i = 0 then a else f (Suc i))\n       \\<in> S\\<^sup>* O R O S\\<^sup>*", "show \"(?g i, ?g (Suc i)) \\<in> ?RS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i = 0 then a else f i, if Suc i = 0 then a else f (Suc i))\n    \\<in> S\\<^sup>* O R O S\\<^sup>*", "proof (cases i)"], ["proof (state)\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow>\n    (if i = 0 then a else f i, if Suc i = 0 then a else f (Suc i))\n    \\<in> S\\<^sup>* O R O S\\<^sup>*\n 2. \\<And>nat.\n       i = Suc nat \\<Longrightarrow>\n       (if i = 0 then a else f i, if Suc i = 0 then a else f (Suc i))\n       \\<in> S\\<^sup>* O R O S\\<^sup>*", "case (Suc j)"], ["proof (state)\nthis:\n  i = Suc j\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow>\n    (if i = 0 then a else f i, if Suc i = 0 then a else f (Suc i))\n    \\<in> S\\<^sup>* O R O S\\<^sup>*\n 2. \\<And>nat.\n       i = Suc nat \\<Longrightarrow>\n       (if i = 0 then a else f i, if Suc i = 0 then a else f (Suc i))\n       \\<in> S\\<^sup>* O R O S\\<^sup>*", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i = 0 then a else f i, if Suc i = 0 then a else f (Suc i))\n    \\<in> S\\<^sup>* O R O S\\<^sup>*", "using steps[of i]"], ["proof (prove)\nusing this:\n  (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (if i = 0 then a else f i, if Suc i = 0 then a else f (Suc i))\n    \\<in> S\\<^sup>* O R O S\\<^sup>*", "unfolding Suc"], ["proof (prove)\nusing this:\n  (f (Suc j), f (Suc (Suc j))) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (if Suc j = 0 then a else f (Suc j),\n     if Suc (Suc j) = 0 then a else f (Suc (Suc j)))\n    \\<in> S\\<^sup>* O R O S\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (if i = 0 then a else f i, if Suc i = 0 then a else f (Suc i))\n  \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. i = 0 \\<Longrightarrow>\n    (if i = 0 then a else f i, if Suc i = 0 then a else f (Suc i))\n    \\<in> S\\<^sup>* O R O S\\<^sup>*", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i = 0 \\<Longrightarrow>\n    (if i = 0 then a else f i, if Suc i = 0 then a else f (Suc i))\n    \\<in> S\\<^sup>* O R O S\\<^sup>*", "case 0"], ["proof (state)\nthis:\n  i = 0\n\ngoal (1 subgoal):\n 1. i = 0 \\<Longrightarrow>\n    (if i = 0 then a else f i, if Suc i = 0 then a else f (Suc i))\n    \\<in> S\\<^sup>* O R O S\\<^sup>*", "from steps[of 0, unfolded f0] Ssteps"], ["proof (chain)\npicking this:\n  (b, f (Suc 0)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n  (a, b) \\<in> S\\<^sup>*", "have steps: \"(a,f (Suc 0)) \\<in> S^* O ?RS\""], ["proof (prove)\nusing this:\n  (b, f (Suc 0)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n  (a, b) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (a, f (Suc 0)) \\<in> S\\<^sup>* O S\\<^sup>* O R O S\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  (a, f (Suc 0)) \\<in> S\\<^sup>* O S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. i = 0 \\<Longrightarrow>\n    (if i = 0 then a else f i, if Suc i = 0 then a else f (Suc i))\n    \\<in> S\\<^sup>* O R O S\\<^sup>*", "have \"(a,f (Suc 0)) \\<in> ?RS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, f (Suc 0)) \\<in> S\\<^sup>* O R O S\\<^sup>*", "by (rule subsetD[OF _ steps], regexp)"], ["proof (state)\nthis:\n  (a, f (Suc 0)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. i = 0 \\<Longrightarrow>\n    (if i = 0 then a else f i, if Suc i = 0 then a else f (Suc i))\n    \\<in> S\\<^sup>* O R O S\\<^sup>*", "thus ?thesis"], ["proof (prove)\nusing this:\n  (a, f (Suc 0)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (if i = 0 then a else f i, if Suc i = 0 then a else f (Suc i))\n    \\<in> S\\<^sup>* O R O S\\<^sup>*", "unfolding 0"], ["proof (prove)\nusing this:\n  (a, f (Suc 0)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (if 0 = 0 then a else f 0, if Suc 0 = 0 then a else f (Suc 0))\n    \\<in> S\\<^sup>* O R O S\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (if i = 0 then a else f i, if Suc i = 0 then a else f (Suc i))\n  \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (if i = 0 then a else f i, if Suc i = 0 then a else f (Suc i))\n  \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (if 0 = 0 then a else f 0) \\<in> {a}", "qed simp"], ["proof (state)\nthis:\n  \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {a}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> {b};\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "with SN"], ["proof (chain)\npicking this:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) {a}\n  \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {a}", "show False"], ["proof (prove)\nusing this:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) {a}\n  \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {a}\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) {b}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) {b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma step_preserves_SN_on_relto: assumes st: \"(s,t) \\<in> R \\<union> E\"\n  and SN: \"SN_on (relto R E) {s}\"\n  shows \"SN_on (relto R E) {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_on (E\\<^sup>* O R O E\\<^sup>*) {t}", "by (rule steps_preserve_SN_on_relto[OF _ SN], insert st, auto)"], ["", "lemma SN_rel_on_imp_SN_rel_on_alt: \"SN_rel_on R S T \\<Longrightarrow> SN_rel_on_alt R S T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_on R S T \\<Longrightarrow> SN_rel_on_alt R S T", "proof (unfold SN_rel_on_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) T \\<Longrightarrow>\n    SN_rel_on_alt R S T", "assume SN: \"SN_on (relto R S) T\""], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) T\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) T \\<Longrightarrow>\n    SN_rel_on_alt R S T", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_on_alt R S T", "proof (unfold SN_rel_on_alt_def, intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> T \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> T \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "assume steps: \"chain (R \\<union> S) f \\<and> f 0 \\<in> T\""], ["proof (state)\nthis:\n  (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and> f 0 \\<in> T\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> T \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "with SN"], ["proof (chain)\npicking this:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) T\n  (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and> f 0 \\<in> T", "have SN: \"SN_on (relto R S) {f 0}\" \n      and steps: \"\\<And> i. (f i, f (Suc i)) \\<in> R \\<union> S\""], ["proof (prove)\nusing this:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) T\n  (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and> f 0 \\<in> T\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {f 0} &&&\n    (\\<And>i. (f i, f (Suc i)) \\<in> R \\<union> S)", "unfolding SN_defs"], ["proof (prove)\nusing this:\n  \\<nexists>f.\n     f 0 \\<in> T \\<and>\n     (\\<forall>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*)\n  (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and> f 0 \\<in> T\n\ngoal (1 subgoal):\n 1. \\<nexists>fa.\n       fa 0 \\<in> {f 0} \\<and>\n       (\\<forall>i. (fa i, fa (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*) &&&\n    (\\<And>i. (f i, f (Suc i)) \\<in> R \\<union> S)", "by auto"], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) {f 0}\n  (f ?i, f (Suc ?i)) \\<in> R \\<union> S\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> T \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "obtain r where  r: \"\\<And> j. r j \\<equiv>  (f j, f (Suc j)) \\<in> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        (\\<And>j. r j \\<equiv> (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r ?j \\<equiv> (f ?j, f (Suc ?j)) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> T \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "show \"\\<not> (INFM j. (f j, f (Suc j)) \\<in> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "hence ih: \"infinitely_many r\""], ["proof (prove)\nusing this:\n  \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)\n\ngoal (1 subgoal):\n 1. infinitely_many r", "unfolding infinitely_many_def r"], ["proof (prove)\nusing this:\n  \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R", "by blast"], ["proof (state)\nthis:\n  infinitely_many r\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "obtain r_index where \"r_index = infinitely_many.index r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r_index.\n        r_index = infinitely_many.index r \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  r_index = infinitely_many.index r\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "with infinitely_many.index_p[OF ih] infinitely_many.index_ordered[OF ih] infinitely_many.index_not_p_between[OF ih]"], ["proof (chain)\npicking this:\n  r (infinitely_many.index r ?n)\n  infinitely_many.index r ?n < infinitely_many.index r (Suc ?n)\n  \\<lbrakk>infinitely_many.index r ?n < ?i;\n   ?i < infinitely_many.index r (Suc ?n)\\<rbrakk>\n  \\<Longrightarrow> \\<not> r ?i\n  r_index = infinitely_many.index r", "have r_index: \"\\<And> i. r (r_index i) \\<and> r_index i < r_index (Suc i) \\<and> (\\<forall> j. r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow> \\<not> r j)\""], ["proof (prove)\nusing this:\n  r (infinitely_many.index r ?n)\n  infinitely_many.index r ?n < infinitely_many.index r (Suc ?n)\n  \\<lbrakk>infinitely_many.index r ?n < ?i;\n   ?i < infinitely_many.index r (Suc ?n)\\<rbrakk>\n  \\<Longrightarrow> \\<not> r ?i\n  r_index = infinitely_many.index r\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       r (r_index i) \\<and>\n       r_index i < r_index (Suc i) \\<and>\n       (\\<forall>j.\n           r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow>\n           \\<not> r j)", "by auto"], ["proof (state)\nthis:\n  r (r_index ?i) \\<and>\n  r_index ?i < r_index (Suc ?i) \\<and>\n  (\\<forall>j.\n      r_index ?i < j \\<and> j < r_index (Suc ?i) \\<longrightarrow>\n      \\<not> r j)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "obtain g where g: \"\\<And> i. g i \\<equiv> f (r_index i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        (\\<And>i. g i \\<equiv> f (r_index i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  g ?i \\<equiv> f (r_index ?i)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "{"], ["proof (state)\nthis:\n  g ?i \\<equiv> f (r_index ?i)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "let ?ri = \"r_index i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "let ?rsi = \"r_index (Suc i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "from r_index"], ["proof (chain)\npicking this:\n  r (r_index ?i) \\<and>\n  r_index ?i < r_index (Suc ?i) \\<and>\n  (\\<forall>j.\n      r_index ?i < j \\<and> j < r_index (Suc ?i) \\<longrightarrow>\n      \\<not> r j)", "have isi: \"?ri < ?rsi\""], ["proof (prove)\nusing this:\n  r (r_index ?i) \\<and>\n  r_index ?i < r_index (Suc ?i) \\<and>\n  (\\<forall>j.\n      r_index ?i < j \\<and> j < r_index (Suc ?i) \\<longrightarrow>\n      \\<not> r j)\n\ngoal (1 subgoal):\n 1. r_index i < r_index (Suc i)", "by auto"], ["proof (state)\nthis:\n  r_index i < r_index (Suc i)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "obtain ri rsi where ri: \"ri = ?ri\" and rsi: \"rsi = ?rsi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ri rsi.\n        \\<lbrakk>ri = r_index i; rsi = r_index (Suc i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ri = r_index i\n  rsi = r_index (Suc i)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "with r_index[of i] steps"], ["proof (chain)\npicking this:\n  r (r_index i) \\<and>\n  r_index i < r_index (Suc i) \\<and>\n  (\\<forall>j.\n      r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow> \\<not> r j)\n  (f ?i, f (Suc ?i)) \\<in> R \\<union> S\n  ri = r_index i\n  rsi = r_index (Suc i)", "have inter: \"\\<And> j. ri < j \\<and> j < rsi \\<Longrightarrow> (f j, f (Suc j)) \\<in> S\""], ["proof (prove)\nusing this:\n  r (r_index i) \\<and>\n  r_index i < r_index (Suc i) \\<and>\n  (\\<forall>j.\n      r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow> \\<not> r j)\n  (f ?i, f (Suc ?i)) \\<in> R \\<union> S\n  ri = r_index i\n  rsi = r_index (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       ri < j \\<and> j < rsi \\<Longrightarrow> (f j, f (Suc j)) \\<in> S", "unfolding r"], ["proof (prove)\nusing this:\n  (f (r_index i), f (Suc (r_index i))) \\<in> R \\<and>\n  r_index i < r_index (Suc i) \\<and>\n  (\\<forall>j.\n      r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow>\n      (f j, f (Suc j)) \\<notin> R)\n  (f ?i, f (Suc ?i)) \\<in> R \\<union> S\n  ri = r_index i\n  rsi = r_index (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       ri < j \\<and> j < rsi \\<Longrightarrow> (f j, f (Suc j)) \\<in> S", "by auto"], ["proof (state)\nthis:\n  ri < ?j \\<and> ?j < rsi \\<Longrightarrow> (f ?j, f (Suc ?j)) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "from ri isi rsi"], ["proof (chain)\npicking this:\n  ri = r_index i\n  r_index i < r_index (Suc i)\n  rsi = r_index (Suc i)", "have risi: \"ri < rsi\""], ["proof (prove)\nusing this:\n  ri = r_index i\n  r_index i < r_index (Suc i)\n  rsi = r_index (Suc i)\n\ngoal (1 subgoal):\n 1. ri < rsi", "by simp"], ["proof (state)\nthis:\n  ri < rsi\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "{"], ["proof (state)\nthis:\n  ri < rsi\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "assume \"Suc n \\<le> rsi - ri\""], ["proof (state)\nthis:\n  Suc n \\<le> rsi - ri\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "hence \"(f (Suc ri), f (Suc (n + ri))) \\<in> S^*\""], ["proof (prove)\nusing this:\n  Suc n \\<le> rsi - ri\n\ngoal (1 subgoal):\n 1. (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*", "proof (induct n, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>Suc n \\<le> rsi - ri \\<Longrightarrow>\n                (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*;\n        Suc (Suc n) \\<le> rsi - ri\\<rbrakk>\n       \\<Longrightarrow> (f (Suc ri), f (Suc (Suc n + ri))) \\<in> S\\<^sup>*", "case (Suc n)"], ["proof (state)\nthis:\n  Suc n \\<le> rsi - ri \\<Longrightarrow>\n  (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*\n  Suc (Suc n) \\<le> rsi - ri\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>Suc n \\<le> rsi - ri \\<Longrightarrow>\n                (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*;\n        Suc (Suc n) \\<le> rsi - ri\\<rbrakk>\n       \\<Longrightarrow> (f (Suc ri), f (Suc (Suc n + ri))) \\<in> S\\<^sup>*", "hence stepps: \"(f (Suc ri), f (Suc (n+ri))) \\<in> S^*\""], ["proof (prove)\nusing this:\n  Suc n \\<le> rsi - ri \\<Longrightarrow>\n  (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*\n  Suc (Suc n) \\<le> rsi - ri\n\ngoal (1 subgoal):\n 1. (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>Suc n \\<le> rsi - ri \\<Longrightarrow>\n                (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*;\n        Suc (Suc n) \\<le> rsi - ri\\<rbrakk>\n       \\<Longrightarrow> (f (Suc ri), f (Suc (Suc n + ri))) \\<in> S\\<^sup>*", "have \"(f (Suc (n+ri)), f (Suc (Suc n + ri))) \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f (Suc (n + ri)), f (Suc (Suc n + ri))) \\<in> S", "using inter[of \"Suc n + ri\"] Suc(2)"], ["proof (prove)\nusing this:\n  ri < Suc n + ri \\<and> Suc n + ri < rsi \\<Longrightarrow>\n  (f (Suc n + ri), f (Suc (Suc n + ri))) \\<in> S\n  Suc (Suc n) \\<le> rsi - ri\n\ngoal (1 subgoal):\n 1. (f (Suc (n + ri)), f (Suc (Suc n + ri))) \\<in> S", "by auto"], ["proof (state)\nthis:\n  (f (Suc (n + ri)), f (Suc (Suc n + ri))) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>Suc n \\<le> rsi - ri \\<Longrightarrow>\n                (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*;\n        Suc (Suc n) \\<le> rsi - ri\\<rbrakk>\n       \\<Longrightarrow> (f (Suc ri), f (Suc (Suc n + ri))) \\<in> S\\<^sup>*", "with stepps"], ["proof (chain)\npicking this:\n  (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*\n  (f (Suc (n + ri)), f (Suc (Suc n + ri))) \\<in> S", "show ?case"], ["proof (prove)\nusing this:\n  (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*\n  (f (Suc (n + ri)), f (Suc (Suc n + ri))) \\<in> S\n\ngoal (1 subgoal):\n 1. (f (Suc ri), f (Suc (Suc n + ri))) \\<in> S\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (f (Suc ri), f (Suc (Suc n + ri))) \\<in> S\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  Suc ?n2 \\<le> rsi - ri \\<Longrightarrow>\n  (f (Suc ri), f (Suc (?n2 + ri))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "from this[of \"rsi - ri - 1\"] risi"], ["proof (chain)\npicking this:\n  Suc (rsi - ri - 1) \\<le> rsi - ri \\<Longrightarrow>\n  (f (Suc ri), f (Suc (rsi - ri - 1 + ri))) \\<in> S\\<^sup>*\n  ri < rsi", "have \n          \"(f (Suc ri), f rsi) \\<in> S^*\""], ["proof (prove)\nusing this:\n  Suc (rsi - ri - 1) \\<le> rsi - ri \\<Longrightarrow>\n  (f (Suc ri), f (Suc (rsi - ri - 1 + ri))) \\<in> S\\<^sup>*\n  ri < rsi\n\ngoal (1 subgoal):\n 1. (f (Suc ri), f rsi) \\<in> S\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (f (Suc ri), f rsi) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "with ri rsi"], ["proof (chain)\npicking this:\n  ri = r_index i\n  rsi = r_index (Suc i)\n  (f (Suc ri), f rsi) \\<in> S\\<^sup>*", "have ssteps: \"(f (Suc ?ri), f ?rsi) \\<in> S^*\""], ["proof (prove)\nusing this:\n  ri = r_index i\n  rsi = r_index (Suc i)\n  (f (Suc ri), f rsi) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (f (Suc (r_index i)), f (r_index (Suc i))) \\<in> S\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (f (Suc (r_index i)), f (r_index (Suc i))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "with r_index[of i]"], ["proof (chain)\npicking this:\n  r (r_index i) \\<and>\n  r_index i < r_index (Suc i) \\<and>\n  (\\<forall>j.\n      r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow> \\<not> r j)\n  (f (Suc (r_index i)), f (r_index (Suc i))) \\<in> S\\<^sup>*", "have \"(f ?ri, f ?rsi) \\<in> R O S^*\""], ["proof (prove)\nusing this:\n  r (r_index i) \\<and>\n  r_index i < r_index (Suc i) \\<and>\n  (\\<forall>j.\n      r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow> \\<not> r j)\n  (f (Suc (r_index i)), f (r_index (Suc i))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (f (r_index i), f (r_index (Suc i))) \\<in> R O S\\<^sup>*", "unfolding r"], ["proof (prove)\nusing this:\n  (f (r_index i), f (Suc (r_index i))) \\<in> R \\<and>\n  r_index i < r_index (Suc i) \\<and>\n  (\\<forall>j.\n      r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow>\n      (f j, f (Suc j)) \\<notin> R)\n  (f (Suc (r_index i)), f (r_index (Suc i))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (f (r_index i), f (r_index (Suc i))) \\<in> R O S\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (f (r_index i), f (r_index (Suc i))) \\<in> R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "hence \"(g i, g (Suc i)) \\<in> S^* O R O S^*\""], ["proof (prove)\nusing this:\n  (f (r_index i), f (r_index (Suc i))) \\<in> R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (g i, g (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*", "using rtrancl_refl"], ["proof (prove)\nusing this:\n  (f (r_index i), f (r_index (Suc i))) \\<in> R O S\\<^sup>*\n  (?a, ?a) \\<in> ?r\\<^sup>*\n\ngoal (1 subgoal):\n 1. (g i, g (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*", "unfolding g"], ["proof (prove)\nusing this:\n  (f (r_index i), f (r_index (Suc i))) \\<in> R O S\\<^sup>*\n  (?a, ?a) \\<in> ?r\\<^sup>*\n\ngoal (1 subgoal):\n 1. (f (r_index i), f (r_index (Suc i))) \\<in> S\\<^sup>* O R O S\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (g i, g (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  (g ?i2, g (Suc ?i2)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "hence nSN: \"\\<not> SN_on (S^* O R O S^*) {g 0}\""], ["proof (prove)\nusing this:\n  (g ?i2, g (Suc ?i2)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {g 0}", "unfolding SN_defs"], ["proof (prove)\nusing this:\n  (g ?i2, g (Suc ?i2)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> (\\<nexists>f.\n               f 0 \\<in> {g 0} \\<and>\n               (\\<forall>i.\n                   (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*))", "by blast"], ["proof (state)\nthis:\n  \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {g 0}\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "have SN: \"SN_on (S^* O R O S^*) {f (r_index 0)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {f (r_index 0)}", "proof (rule steps_preserve_SN_on_relto[OF _ SN])"], ["proof (state)\ngoal (1 subgoal):\n 1. (f 0, f (r_index 0)) \\<in> (R \\<union> S)\\<^sup>*", "show \"(f 0, f (r_index 0)) \\<in> (R \\<union> S)^*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f 0, f (r_index 0)) \\<in> (R \\<union> S)\\<^sup>*", "unfolding rtrancl_fun_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fa n.\n       fa 0 = f 0 \\<and>\n       fa n = f (r_index 0) \\<and>\n       (\\<forall>i<n. (fa i, fa (Suc i)) \\<in> R \\<union> S)", "by (rule exI[of _ f], rule exI[of _ \"r_index 0\"], insert steps, auto)"], ["proof (state)\nthis:\n  (f 0, f (r_index 0)) \\<in> (R \\<union> S)\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) {f (r_index 0)}\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "with nSN"], ["proof (chain)\npicking this:\n  \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {g 0}\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) {f (r_index 0)}", "show False"], ["proof (prove)\nusing this:\n  \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {g 0}\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) {f (r_index 0)}\n\ngoal (1 subgoal):\n 1. False", "unfolding g"], ["proof (prove)\nusing this:\n  \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {f (r_index 0)}\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) {f (r_index 0)}\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN_rel_on_alt R S T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SN_rel_on_alt_imp_SN_rel_on: \"SN_rel_on_alt R S T \\<Longrightarrow> SN_rel_on R S T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_on_alt R S T \\<Longrightarrow> SN_rel_on R S T", "proof (unfold SN_rel_on_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_on_alt R S T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "assume SN: \"SN_rel_on_alt R S T\""], ["proof (state)\nthis:\n  SN_rel_on_alt R S T\n\ngoal (1 subgoal):\n 1. SN_rel_on_alt R S T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "show \"SN_on (relto R S) T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "assume start: \"f 0 \\<in> T\" and  \"chain (relto R S) f\""], ["proof (state)\nthis:\n  f 0 \\<in> T\n  \\<forall>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "hence steps: \"\\<And> i. (f i, f (Suc i)) \\<in> S^* O R O S^*\""], ["proof (prove)\nusing this:\n  f 0 \\<in> T\n  \\<forall>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?prop = \"\\<lambda> i ai bi. (f i, bi) \\<in> S^* \\<and> (bi, ai) \\<in> R \\<and> (ai, f (Suc (i))) \\<in> S^*\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from steps"], ["proof (chain)\npicking this:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*", "obtain bi ai where \"?prop i ai bi\""], ["proof (prove)\nusing this:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<And>bi ai.\n        (f i, bi) \\<in> S\\<^sup>* \\<and>\n        (bi, ai) \\<in> R \\<and>\n        (ai, f (Suc i)) \\<in> S\\<^sup>* \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (f i, bi) \\<in> S\\<^sup>* \\<and>\n  (bi, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"\\<exists> ai bi. ?prop i ai bi\""], ["proof (prove)\nusing this:\n  (f i, bi) \\<in> S\\<^sup>* \\<and>\n  (bi, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<exists>ai bi.\n       (f i, bi) \\<in> S\\<^sup>* \\<and>\n       (bi, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  \\<exists>ai bi.\n     (f i, bi) \\<in> S\\<^sup>* \\<and>\n     (bi, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  \\<exists>ai bi.\n     (f ?i2, bi) \\<in> S\\<^sup>* \\<and>\n     (bi, ai) \\<in> R \\<and> (ai, f (Suc ?i2)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"\\<forall> i. \\<exists> bi ai. ?prop i ai bi\""], ["proof (prove)\nusing this:\n  \\<exists>ai bi.\n     (f ?i2, bi) \\<in> S\\<^sup>* \\<and>\n     (bi, ai) \\<in> R \\<and> (ai, f (Suc ?i2)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>bi ai.\n          (f i, bi) \\<in> S\\<^sup>* \\<and>\n          (bi, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<exists>bi ai.\n        (f i, bi) \\<in> S\\<^sup>* \\<and>\n        (bi, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from choice[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>fa.\n     \\<forall>x.\n        \\<exists>ai.\n           (f x, fa x) \\<in> S\\<^sup>* \\<and>\n           (fa x, ai) \\<in> R \\<and> (ai, f (Suc x)) \\<in> S\\<^sup>*", "obtain b where \"\\<forall> i. \\<exists> ai. ?prop i ai (b i)\""], ["proof (prove)\nusing this:\n  \\<exists>fa.\n     \\<forall>x.\n        \\<exists>ai.\n           (f x, fa x) \\<in> S\\<^sup>* \\<and>\n           (fa x, ai) \\<in> R \\<and> (ai, f (Suc x)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<forall>i.\n           \\<exists>ai.\n              (f i, b i) \\<in> S\\<^sup>* \\<and>\n              (b i, ai) \\<in> R \\<and>\n              (ai, f (Suc i)) \\<in> S\\<^sup>* \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<exists>ai.\n        (f i, b i) \\<in> S\\<^sup>* \\<and>\n        (b i, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from choice[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>fa.\n     \\<forall>x.\n        (f x, b x) \\<in> S\\<^sup>* \\<and>\n        (b x, fa x) \\<in> R \\<and> (fa x, f (Suc x)) \\<in> S\\<^sup>*", "obtain a where steps: \"\\<And> i. ?prop i (a i) (b i)\""], ["proof (prove)\nusing this:\n  \\<exists>fa.\n     \\<forall>x.\n        (f x, b x) \\<in> S\\<^sup>* \\<and>\n        (b x, fa x) \\<in> R \\<and> (fa x, f (Suc x)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        (\\<And>i.\n            (f i, b i) \\<in> S\\<^sup>* \\<and>\n            (b i, a i) \\<in> R \\<and>\n            (a i, f (Suc i)) \\<in> S\\<^sup>*) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (f ?i, b ?i) \\<in> S\\<^sup>* \\<and>\n  (b ?i, a ?i) \\<in> R \\<and> (a ?i, f (Suc ?i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from steps[of 0]"], ["proof (chain)\npicking this:\n  (f 0, b 0) \\<in> S\\<^sup>* \\<and>\n  (b 0, a 0) \\<in> R \\<and> (a 0, f (Suc 0)) \\<in> S\\<^sup>*", "have fa0: \"(f 0, a 0) \\<in> S^* O R\""], ["proof (prove)\nusing this:\n  (f 0, b 0) \\<in> S\\<^sup>* \\<and>\n  (b 0, a 0) \\<in> R \\<and> (a 0, f (Suc 0)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (f 0, a 0) \\<in> S\\<^sup>* O R", "by auto"], ["proof (state)\nthis:\n  (f 0, a 0) \\<in> S\\<^sup>* O R\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?prop = \"\\<lambda> i li. (b i, a i) \\<in> R \\<and> (\\<forall> j < length li. ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and> last (a i # li) = b (Suc i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from steps[of i] steps[of \"Suc i\"]"], ["proof (chain)\npicking this:\n  (f i, b i) \\<in> S\\<^sup>* \\<and>\n  (b i, a i) \\<in> R \\<and> (a i, f (Suc i)) \\<in> S\\<^sup>*\n  (f (Suc i), b (Suc i)) \\<in> S\\<^sup>* \\<and>\n  (b (Suc i), a (Suc i)) \\<in> R \\<and>\n  (a (Suc i), f (Suc (Suc i))) \\<in> S\\<^sup>*", "have \"(a i, f (Suc i)) \\<in> S^*\" and \"(f (Suc i), b (Suc i)) \\<in> S^*\""], ["proof (prove)\nusing this:\n  (f i, b i) \\<in> S\\<^sup>* \\<and>\n  (b i, a i) \\<in> R \\<and> (a i, f (Suc i)) \\<in> S\\<^sup>*\n  (f (Suc i), b (Suc i)) \\<in> S\\<^sup>* \\<and>\n  (b (Suc i), a (Suc i)) \\<in> R \\<and>\n  (a (Suc i), f (Suc (Suc i))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (a i, f (Suc i)) \\<in> S\\<^sup>* &&&\n    (f (Suc i), b (Suc i)) \\<in> S\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (a i, f (Suc i)) \\<in> S\\<^sup>*\n  (f (Suc i), b (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from rtrancl_trans[OF this] steps[of i]"], ["proof (chain)\npicking this:\n  (a i, b (Suc i)) \\<in> S\\<^sup>*\n  (f i, b i) \\<in> S\\<^sup>* \\<and>\n  (b i, a i) \\<in> R \\<and> (a i, f (Suc i)) \\<in> S\\<^sup>*", "have R: \"(b i, a i) \\<in> R\" and S: \"(a i, b (Suc i)) \\<in> S^*\""], ["proof (prove)\nusing this:\n  (a i, b (Suc i)) \\<in> S\\<^sup>*\n  (f i, b i) \\<in> S\\<^sup>* \\<and>\n  (b i, a i) \\<in> R \\<and> (a i, f (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (b i, a i) \\<in> R &&& (a i, b (Suc i)) \\<in> S\\<^sup>*", "by blast+"], ["proof (state)\nthis:\n  (b i, a i) \\<in> R\n  (a i, b (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from S[unfolded rtrancl_list_conv]"], ["proof (chain)\npicking this:\n  \\<exists>ts.\n     last (a i # ts) = b (Suc i) \\<and>\n     (\\<forall>ia<length ts. ((a i # ts) ! ia, (a i # ts) ! Suc ia) \\<in> S)", "obtain li where \"last (a i # li) = b (Suc i) \\<and> (\\<forall> j < length li. ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S)\""], ["proof (prove)\nusing this:\n  \\<exists>ts.\n     last (a i # ts) = b (Suc i) \\<and>\n     (\\<forall>ia<length ts. ((a i # ts) ! ia, (a i # ts) ! Suc ia) \\<in> S)\n\ngoal (1 subgoal):\n 1. (\\<And>li.\n        last (a i # li) = b (Suc i) \\<and>\n        (\\<forall>j<length li.\n            ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  last (a i # li) = b (Suc i) \\<and>\n  (\\<forall>j<length li. ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "with R"], ["proof (chain)\npicking this:\n  (b i, a i) \\<in> R\n  last (a i # li) = b (Suc i) \\<and>\n  (\\<forall>j<length li. ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S)", "have \"?prop i li\""], ["proof (prove)\nusing this:\n  (b i, a i) \\<in> R\n  last (a i # li) = b (Suc i) \\<and>\n  (\\<forall>j<length li. ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S)\n\ngoal (1 subgoal):\n 1. (b i, a i) \\<in> R \\<and>\n    (\\<forall>j<length li.\n        ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n    last (a i # li) = b (Suc i)", "by blast"], ["proof (state)\nthis:\n  (b i, a i) \\<in> R \\<and>\n  (\\<forall>j<length li.\n      ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n  last (a i # li) = b (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"\\<exists> li. ?prop i li\""], ["proof (prove)\nusing this:\n  (b i, a i) \\<in> R \\<and>\n  (\\<forall>j<length li.\n      ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n  last (a i # li) = b (Suc i)\n\ngoal (1 subgoal):\n 1. \\<exists>li.\n       (b i, a i) \\<in> R \\<and>\n       (\\<forall>j<length li.\n           ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n       last (a i # li) = b (Suc i)", ".."], ["proof (state)\nthis:\n  \\<exists>li.\n     (b i, a i) \\<in> R \\<and>\n     (\\<forall>j<length li.\n         ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n     last (a i # li) = b (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  \\<exists>li.\n     (b ?i2, a ?i2) \\<in> R \\<and>\n     (\\<forall>j<length li.\n         ((a ?i2 # li) ! j, (a ?i2 # li) ! Suc j) \\<in> S) \\<and>\n     last (a ?i2 # li) = b (Suc ?i2)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"\\<forall> i. \\<exists> li. ?prop i li\""], ["proof (prove)\nusing this:\n  \\<exists>li.\n     (b ?i2, a ?i2) \\<in> R \\<and>\n     (\\<forall>j<length li.\n         ((a ?i2 # li) ! j, (a ?i2 # li) ! Suc j) \\<in> S) \\<and>\n     last (a ?i2 # li) = b (Suc ?i2)\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>li.\n          (b i, a i) \\<in> R \\<and>\n          (\\<forall>j<length li.\n              ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n          last (a i # li) = b (Suc i)", ".."], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<exists>li.\n        (b i, a i) \\<in> R \\<and>\n        (\\<forall>j<length li.\n            ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n        last (a i # li) = b (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from choice[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>f.\n     \\<forall>x.\n        (b x, a x) \\<in> R \\<and>\n        (\\<forall>j<length (f x).\n            ((a x # f x) ! j, (a x # f x) ! Suc j) \\<in> S) \\<and>\n        last (a x # f x) = b (Suc x)", "obtain l where steps: \"\\<And> i. ?prop i (l i)\""], ["proof (prove)\nusing this:\n  \\<exists>f.\n     \\<forall>x.\n        (b x, a x) \\<in> R \\<and>\n        (\\<forall>j<length (f x).\n            ((a x # f x) ! j, (a x # f x) ! Suc j) \\<in> S) \\<and>\n        last (a x # f x) = b (Suc x)\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        (\\<And>i.\n            (b i, a i) \\<in> R \\<and>\n            (\\<forall>j<length (l i).\n                ((a i # l i) ! j, (a i # l i) ! Suc j) \\<in> S) \\<and>\n            last (a i # l i) = b (Suc i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (b ?i, a ?i) \\<in> R \\<and>\n  (\\<forall>j<length (l ?i).\n      ((a ?i # l ?i) ! j, (a ?i # l ?i) ! Suc j) \\<in> S) \\<and>\n  last (a ?i # l ?i) = b (Suc ?i)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?p = \"\\<lambda> i. ?prop i (l i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from steps"], ["proof (chain)\npicking this:\n  (b ?i, a ?i) \\<in> R \\<and>\n  (\\<forall>j<length (l ?i).\n      ((a ?i # l ?i) ! j, (a ?i # l ?i) ! Suc j) \\<in> S) \\<and>\n  last (a ?i # l ?i) = b (Suc ?i)", "have steps: \"\\<And> i. ?p i\""], ["proof (prove)\nusing this:\n  (b ?i, a ?i) \\<in> R \\<and>\n  (\\<forall>j<length (l ?i).\n      ((a ?i # l ?i) ! j, (a ?i # l ?i) ! Suc j) \\<in> S) \\<and>\n  last (a ?i # l ?i) = b (Suc ?i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       (b i, a i) \\<in> R \\<and>\n       (\\<forall>j<length (l i).\n           ((a i # l i) ! j, (a i # l i) ! Suc j) \\<in> S) \\<and>\n       last (a i # l i) = b (Suc i)", "by blast"], ["proof (state)\nthis:\n  (b ?i, a ?i) \\<in> R \\<and>\n  (\\<forall>j<length (l ?i).\n      ((a ?i # l ?i) ! j, (a ?i # l ?i) ! Suc j) \\<in> S) \\<and>\n  last (a ?i # l ?i) = b (Suc ?i)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?l = \"\\<lambda> i. a i # l i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?l' = \"\\<lambda> i. length (?l i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?g = \"\\<lambda> i. inf_concat_simple ?l' i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "obtain g where g: \"\\<And> i. g i = (let (ii,jj) = ?g i in ?l ii ! jj)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        (\\<And>i.\n            g i =\n            (let (ii, jj) =\n                   inf_concat_simple (\\<lambda>i. length (a i # l i)) i\n             in (a ii # l ii) ! jj)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g ?i =\n  (let (ii, jj) = inf_concat_simple (\\<lambda>i. length (a i # l i)) ?i\n   in (a ii # l ii) ! jj)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "have g0: \"g 0 = a 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g 0 = a 0", "unfolding g Let_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case inf_concat_simple (\\<lambda>i. length (a i # l i)) 0 of\n     (ii, x) \\<Rightarrow> (a ii # l ii) ! x) =\n    a 0", "by simp"], ["proof (state)\nthis:\n  g 0 = a 0\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "with fa0"], ["proof (chain)\npicking this:\n  (f 0, a 0) \\<in> S\\<^sup>* O R\n  g 0 = a 0", "have fg0: \"(f 0, g 0) \\<in> S^* O R\""], ["proof (prove)\nusing this:\n  (f 0, a 0) \\<in> S\\<^sup>* O R\n  g 0 = a 0\n\ngoal (1 subgoal):\n 1. (f 0, g 0) \\<in> S\\<^sup>* O R", "by auto"], ["proof (state)\nthis:\n  (f 0, g 0) \\<in> S\\<^sup>* O R\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "have fg0: \"(f 0, g 0) \\<in> (R \\<union> S)^*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f 0, g 0) \\<in> (R \\<union> S)\\<^sup>*", "by (rule subsetD[OF _ fg0], regexp)"], ["proof (state)\nthis:\n  (f 0, g 0) \\<in> (R \\<union> S)\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "have len: \"\\<And> i j n. ?g n = (i,j) \\<Longrightarrow> j < length (?l i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j n.\n       inf_concat_simple (\\<lambda>i. length (a i # l i)) n =\n       (i, j) \\<Longrightarrow>\n       j < length (a i # l i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j n.\n       inf_concat_simple (\\<lambda>i. length (a i # l i)) n =\n       (i, j) \\<Longrightarrow>\n       j < length (a i # l i)", "fix i j n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j n.\n       inf_concat_simple (\\<lambda>i. length (a i # l i)) n =\n       (i, j) \\<Longrightarrow>\n       j < length (a i # l i)", "assume n: \"?g n = (i,j)\""], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>i j n.\n       inf_concat_simple (\\<lambda>i. length (a i # l i)) n =\n       (i, j) \\<Longrightarrow>\n       j < length (a i # l i)", "show \"j < length (?l i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < length (a i # l i)", "proof (cases n)"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> j < length (a i # l i)\n 2. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "case 0"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> j < length (a i # l i)\n 2. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "with n"], ["proof (chain)\npicking this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  n = 0", "have \"j = 0\""], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  n = 0\n\ngoal (1 subgoal):\n 1. j = 0", "by auto"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> j < length (a i # l i)\n 2. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "thus ?thesis"], ["proof (prove)\nusing this:\n  j = 0\n\ngoal (1 subgoal):\n 1. j < length (a i # l i)", "by simp"], ["proof (state)\nthis:\n  j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "case (Suc nn)"], ["proof (state)\nthis:\n  n = Suc nn\n\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "obtain ii jj where nn: \"?g nn = (ii,jj)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ii jj.\n        inf_concat_simple (\\<lambda>i. length (a i # l i)) nn =\n        (ii, jj) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"?g nn\", auto)"], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) nn = (ii, jj)\n\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. j < length (a i # l i)", "proof (cases \"Suc jj < length (?l ii)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Suc jj < length (a ii # l ii) \\<Longrightarrow> j < length (a i # l i)\n 2. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "case True"], ["proof (state)\nthis:\n  Suc jj < length (a ii # l ii)\n\ngoal (2 subgoals):\n 1. Suc jj < length (a ii # l ii) \\<Longrightarrow> j < length (a i # l i)\n 2. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "with nn Suc"], ["proof (chain)\npicking this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) nn = (ii, jj)\n  n = Suc nn\n  Suc jj < length (a ii # l ii)", "have \"?g n = (ii, Suc jj)\""], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) nn = (ii, jj)\n  n = Suc nn\n  Suc jj < length (a ii # l ii)\n\ngoal (1 subgoal):\n 1. inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (ii, Suc jj)", "by auto"], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (ii, Suc jj)\n\ngoal (2 subgoals):\n 1. Suc jj < length (a ii # l ii) \\<Longrightarrow> j < length (a i # l i)\n 2. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "with n True"], ["proof (chain)\npicking this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  Suc jj < length (a ii # l ii)\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (ii, Suc jj)", "show ?thesis"], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  Suc jj < length (a ii # l ii)\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (ii, Suc jj)\n\ngoal (1 subgoal):\n 1. j < length (a i # l i)", "by simp"], ["proof (state)\nthis:\n  j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "case False"], ["proof (state)\nthis:\n  \\<not> Suc jj < length (a ii # l ii)\n\ngoal (1 subgoal):\n 1. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "with nn Suc"], ["proof (chain)\npicking this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) nn = (ii, jj)\n  n = Suc nn\n  \\<not> Suc jj < length (a ii # l ii)", "have \"?g n = (Suc ii, 0)\""], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) nn = (ii, jj)\n  n = Suc nn\n  \\<not> Suc jj < length (a ii # l ii)\n\ngoal (1 subgoal):\n 1. inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (Suc ii, 0)", "by auto"], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (Suc ii, 0)\n\ngoal (1 subgoal):\n 1. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "with n"], ["proof (chain)\npicking this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (Suc ii, 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (Suc ii, 0)\n\ngoal (1 subgoal):\n 1. j < length (a i # l i)", "by simp"], ["proof (state)\nthis:\n  j < length (a i # l i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  j < length (a i # l i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  j < length (a i # l i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) ?n =\n  (?i, ?j) \\<Longrightarrow>\n  ?j < length (a ?i # l ?i)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "have gsteps: \"\\<And> i. (g i, g (Suc i)) \\<in> R \\<union> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. (g i, g (Suc i)) \\<in> R \\<union> S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. (g i, g (Suc i)) \\<in> R \\<union> S", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. (g i, g (Suc i)) \\<in> R \\<union> S", "obtain i j where n: \"?g n = (i, j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        inf_concat_simple (\\<lambda>i. length (a i # l i)) n =\n        (i, j) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"?g n\", auto)"], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>i. (g i, g (Suc i)) \\<in> R \\<union> S", "show \"(g n, g (Suc n)) \\<in> R \\<union> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g n, g (Suc n)) \\<in> R \\<union> S", "proof (cases \"Suc j < length (?l i)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S\n 2. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "case True"], ["proof (state)\nthis:\n  Suc j < length (a i # l i)\n\ngoal (2 subgoals):\n 1. Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S\n 2. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "with n"], ["proof (chain)\npicking this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  Suc j < length (a i # l i)", "have \"?g (Suc n) = (i, Suc j)\""], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  Suc j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n) = (i, Suc j)", "by auto"], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n) = (i, Suc j)\n\ngoal (2 subgoals):\n 1. Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S\n 2. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "with n"], ["proof (chain)\npicking this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n) = (i, Suc j)", "have gn: \"g n = ?l i ! j\" and gsn: \"g (Suc n) = ?l i ! (Suc j)\""], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n) = (i, Suc j)\n\ngoal (1 subgoal):\n 1. g n = (a i # l i) ! j &&& g (Suc n) = (a i # l i) ! Suc j", "unfolding g"], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n) = (i, Suc j)\n\ngoal (1 subgoal):\n 1. (let (ii, y) = inf_concat_simple (\\<lambda>i. length (a i # l i)) n\n     in (a ii # l ii) ! y) =\n    (a i # l i) ! j &&&\n    (let (ii, y) =\n           inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n)\n     in (a ii # l ii) ! y) =\n    (a i # l i) ! Suc j", "by auto"], ["proof (state)\nthis:\n  g n = (a i # l i) ! j\n  g (Suc n) = (a i # l i) ! Suc j\n\ngoal (2 subgoals):\n 1. Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S\n 2. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "thus ?thesis"], ["proof (prove)\nusing this:\n  g n = (a i # l i) ! j\n  g (Suc n) = (a i # l i) ! Suc j\n\ngoal (1 subgoal):\n 1. (g n, g (Suc n)) \\<in> R \\<union> S", "using steps[of i] True"], ["proof (prove)\nusing this:\n  g n = (a i # l i) ! j\n  g (Suc n) = (a i # l i) ! Suc j\n  (b i, a i) \\<in> R \\<and>\n  (\\<forall>j<length (l i).\n      ((a i # l i) ! j, (a i # l i) ! Suc j) \\<in> S) \\<and>\n  last (a i # l i) = b (Suc i)\n  Suc j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. (g n, g (Suc n)) \\<in> R \\<union> S", "by auto"], ["proof (state)\nthis:\n  (g n, g (Suc n)) \\<in> R \\<union> S\n\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "case False"], ["proof (state)\nthis:\n  \\<not> Suc j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "with n"], ["proof (chain)\npicking this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  \\<not> Suc j < length (a i # l i)", "have \"?g (Suc n) = (Suc i, 0)\""], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  \\<not> Suc j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n) = (Suc i, 0)", "by auto"], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n) = (Suc i, 0)\n\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "with n"], ["proof (chain)\npicking this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n) = (Suc i, 0)", "have gn: \"g n = ?l i ! j\" and gsn: \"g (Suc n) = a (Suc i)\""], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n) = (Suc i, 0)\n\ngoal (1 subgoal):\n 1. g n = (a i # l i) ! j &&& g (Suc n) = a (Suc i)", "unfolding g"], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n) = (Suc i, 0)\n\ngoal (1 subgoal):\n 1. (let (ii, y) = inf_concat_simple (\\<lambda>i. length (a i # l i)) n\n     in (a ii # l ii) ! y) =\n    (a i # l i) ! j &&&\n    (let (ii, y) =\n           inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n)\n     in (a ii # l ii) ! y) =\n    a (Suc i)", "by auto"], ["proof (state)\nthis:\n  g n = (a i # l i) ! j\n  g (Suc n) = a (Suc i)\n\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "from gn len[OF n] False"], ["proof (chain)\npicking this:\n  g n = (a i # l i) ! j\n  j < length (a i # l i)\n  \\<not> Suc j < length (a i # l i)", "have \"j = length (?l i) - 1\""], ["proof (prove)\nusing this:\n  g n = (a i # l i) ! j\n  j < length (a i # l i)\n  \\<not> Suc j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. j = length (a i # l i) - 1", "by auto"], ["proof (state)\nthis:\n  j = length (a i # l i) - 1\n\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "with gn"], ["proof (chain)\npicking this:\n  g n = (a i # l i) ! j\n  j = length (a i # l i) - 1", "have gn: \"g n = last (?l i)\""], ["proof (prove)\nusing this:\n  g n = (a i # l i) ! j\n  j = length (a i # l i) - 1\n\ngoal (1 subgoal):\n 1. g n = last (a i # l i)", "using last_conv_nth[of \"?l i\"]"], ["proof (prove)\nusing this:\n  g n = (a i # l i) ! j\n  j = length (a i # l i) - 1\n  a i # l i \\<noteq> [] \\<Longrightarrow>\n  last (a i # l i) = (a i # l i) ! (length (a i # l i) - 1)\n\ngoal (1 subgoal):\n 1. g n = last (a i # l i)", "by auto"], ["proof (state)\nthis:\n  g n = last (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "from gn gsn"], ["proof (chain)\npicking this:\n  g n = last (a i # l i)\n  g (Suc n) = a (Suc i)", "show ?thesis"], ["proof (prove)\nusing this:\n  g n = last (a i # l i)\n  g (Suc n) = a (Suc i)\n\ngoal (1 subgoal):\n 1. (g n, g (Suc n)) \\<in> R \\<union> S", "using steps[of i] steps[of \"Suc i\"]"], ["proof (prove)\nusing this:\n  g n = last (a i # l i)\n  g (Suc n) = a (Suc i)\n  (b i, a i) \\<in> R \\<and>\n  (\\<forall>j<length (l i).\n      ((a i # l i) ! j, (a i # l i) ! Suc j) \\<in> S) \\<and>\n  last (a i # l i) = b (Suc i)\n  (b (Suc i), a (Suc i)) \\<in> R \\<and>\n  (\\<forall>j<length (l (Suc i)).\n      ((a (Suc i) # l (Suc i)) ! j, (a (Suc i) # l (Suc i)) ! Suc j)\n      \\<in> S) \\<and>\n  last (a (Suc i) # l (Suc i)) = b (Suc (Suc i))\n\ngoal (1 subgoal):\n 1. (g n, g (Suc n)) \\<in> R \\<union> S", "by auto"], ["proof (state)\nthis:\n  (g n, g (Suc n)) \\<in> R \\<union> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (g n, g (Suc n)) \\<in> R \\<union> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (g ?i, g (Suc ?i)) \\<in> R \\<union> S\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "have infR:  \"INFM j. (g j, g (Suc j)) \\<in> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>\\<infinity>j. (g j, g (Suc j)) \\<in> R", "unfolding INFM_nat_le"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "obtain i j where n: \"?g n = (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        inf_concat_simple (\\<lambda>i. length (a i # l i)) n =\n        (i, j) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"?g n\", auto)"], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "from len[OF n]"], ["proof (chain)\npicking this:\n  j < length (a i # l i)", "have j: \"j < ?l' i\""], ["proof (prove)\nusing this:\n  j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. j < length (a i # l i)", "."], ["proof (state)\nthis:\n  j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "let ?k = \"?l' i - 1 - j\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "obtain k where k: \"k = j + ?k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        k = j + (length (a i # l i) - 1 - j) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k = j + (length (a i # l i) - 1 - j)\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "from j k"], ["proof (chain)\npicking this:\n  j < length (a i # l i)\n  k = j + (length (a i # l i) - 1 - j)", "have k2: \"k = ?l' i - 1\" and k3: \"j + ?k < ?l' i\""], ["proof (prove)\nusing this:\n  j < length (a i # l i)\n  k = j + (length (a i # l i) - 1 - j)\n\ngoal (1 subgoal):\n 1. k = length (a i # l i) - 1 &&&\n    j + (length (a i # l i) - 1 - j) < length (a i # l i)", "by auto"], ["proof (state)\nthis:\n  k = length (a i # l i) - 1\n  j + (length (a i # l i) - 1 - j) < length (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "from inf_concat_simple_add[OF n, of ?k, OF k3]"], ["proof (chain)\npicking this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i))\n   (n + (length (a i # l i) - 1 - j)) =\n  (i, j + (length (a i # l i) - 1 - j))", "have gnk: \"?g (n + ?k) = (i, k)\""], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i))\n   (n + (length (a i # l i) - 1 - j)) =\n  (i, j + (length (a i # l i) - 1 - j))\n\ngoal (1 subgoal):\n 1. inf_concat_simple (\\<lambda>i. length (a i # l i))\n     (n + (length (a i # l i) - 1 - j)) =\n    (i, k)", "by (simp only: k)"], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i))\n   (n + (length (a i # l i) - 1 - j)) =\n  (i, k)\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "hence \"g (n + ?k) = ?l i ! k\""], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i))\n   (n + (length (a i # l i) - 1 - j)) =\n  (i, k)\n\ngoal (1 subgoal):\n 1. g (n + (length (a i # l i) - 1 - j)) = (a i # l i) ! k", "unfolding g"], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i))\n   (n + (length (a i # l i) - 1 - j)) =\n  (i, k)\n\ngoal (1 subgoal):\n 1. (let (ii, y) =\n           inf_concat_simple (\\<lambda>i. length (a i # l i))\n            (n + (length (a i # l i) - 1 - j))\n     in (a ii # l ii) ! y) =\n    (a i # l i) ! k", "by auto"], ["proof (state)\nthis:\n  g (n + (length (a i # l i) - 1 - j)) = (a i # l i) ! k\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "hence gnk2: \"g (n + ?k) = last (?l i)\""], ["proof (prove)\nusing this:\n  g (n + (length (a i # l i) - 1 - j)) = (a i # l i) ! k\n\ngoal (1 subgoal):\n 1. g (n + (length (a i # l i) - 1 - j)) = last (a i # l i)", "using last_conv_nth[of \"?l i\"] k2"], ["proof (prove)\nusing this:\n  g (n + (length (a i # l i) - 1 - j)) = (a i # l i) ! k\n  a i # l i \\<noteq> [] \\<Longrightarrow>\n  last (a i # l i) = (a i # l i) ! (length (a i # l i) - 1)\n  k = length (a i # l i) - 1\n\ngoal (1 subgoal):\n 1. g (n + (length (a i # l i) - 1 - j)) = last (a i # l i)", "by auto"], ["proof (state)\nthis:\n  g (n + (length (a i # l i) - 1 - j)) = last (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "from k2 gnk"], ["proof (chain)\npicking this:\n  k = length (a i # l i) - 1\n  inf_concat_simple (\\<lambda>i. length (a i # l i))\n   (n + (length (a i # l i) - 1 - j)) =\n  (i, k)", "have \"?g (Suc (n+?k)) = (Suc i, 0)\""], ["proof (prove)\nusing this:\n  k = length (a i # l i) - 1\n  inf_concat_simple (\\<lambda>i. length (a i # l i))\n   (n + (length (a i # l i) - 1 - j)) =\n  (i, k)\n\ngoal (1 subgoal):\n 1. inf_concat_simple (\\<lambda>i. length (a i # l i))\n     (Suc (n + (length (a i # l i) - 1 - j))) =\n    (Suc i, 0)", "by auto"], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i))\n   (Suc (n + (length (a i # l i) - 1 - j))) =\n  (Suc i, 0)\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "hence gnsk2: \"g (Suc (n+?k)) = a (Suc i)\""], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i))\n   (Suc (n + (length (a i # l i) - 1 - j))) =\n  (Suc i, 0)\n\ngoal (1 subgoal):\n 1. g (Suc (n + (length (a i # l i) - 1 - j))) = a (Suc i)", "unfolding g"], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i))\n   (Suc (n + (length (a i # l i) - 1 - j))) =\n  (Suc i, 0)\n\ngoal (1 subgoal):\n 1. (let (ii, y) =\n           inf_concat_simple (\\<lambda>i. length (a i # l i))\n            (Suc (n + (length (a i # l i) - 1 - j)))\n     in (a ii # l ii) ! y) =\n    a (Suc i)", "by auto"], ["proof (state)\nthis:\n  g (Suc (n + (length (a i # l i) - 1 - j))) = a (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "from steps[of i] steps[of \"Suc i\"]"], ["proof (chain)\npicking this:\n  (b i, a i) \\<in> R \\<and>\n  (\\<forall>j<length (l i).\n      ((a i # l i) ! j, (a i # l i) ! Suc j) \\<in> S) \\<and>\n  last (a i # l i) = b (Suc i)\n  (b (Suc i), a (Suc i)) \\<in> R \\<and>\n  (\\<forall>j<length (l (Suc i)).\n      ((a (Suc i) # l (Suc i)) ! j, (a (Suc i) # l (Suc i)) ! Suc j)\n      \\<in> S) \\<and>\n  last (a (Suc i) # l (Suc i)) = b (Suc (Suc i))", "have main: \"(g (n+?k), g (Suc (n+?k))) \\<in> R\""], ["proof (prove)\nusing this:\n  (b i, a i) \\<in> R \\<and>\n  (\\<forall>j<length (l i).\n      ((a i # l i) ! j, (a i # l i) ! Suc j) \\<in> S) \\<and>\n  last (a i # l i) = b (Suc i)\n  (b (Suc i), a (Suc i)) \\<in> R \\<and>\n  (\\<forall>j<length (l (Suc i)).\n      ((a (Suc i) # l (Suc i)) ! j, (a (Suc i) # l (Suc i)) ! Suc j)\n      \\<in> S) \\<and>\n  last (a (Suc i) # l (Suc i)) = b (Suc (Suc i))\n\ngoal (1 subgoal):\n 1. (g (n + (length (a i # l i) - 1 - j)),\n     g (Suc (n + (length (a i # l i) - 1 - j))))\n    \\<in> R", "by (simp only: gnk2 gnsk2)"], ["proof (state)\nthis:\n  (g (n + (length (a i # l i) - 1 - j)),\n   g (Suc (n + (length (a i # l i) - 1 - j))))\n  \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "show \"\\<exists> j \\<ge> n. (g j, g (Suc j)) \\<in> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "by (rule exI[of _ \"n + ?k\"], auto simp: main[simplified])"], ["proof (state)\nthis:\n  \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>\\<^sub>\\<infinity>j. (g j, g (Suc j)) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from fg0[unfolded rtrancl_fun_conv]"], ["proof (chain)\npicking this:\n  \\<exists>fa n.\n     fa 0 = f 0 \\<and>\n     fa n = g 0 \\<and> (\\<forall>i<n. (fa i, fa (Suc i)) \\<in> R \\<union> S)", "obtain gg n where start: \"gg 0 = f 0\" \n      and n: \"gg n = g 0\" and steps: \"\\<And> i. i < n \\<Longrightarrow> (gg i, gg (Suc i)) \\<in> R \\<union> S\""], ["proof (prove)\nusing this:\n  \\<exists>fa n.\n     fa 0 = f 0 \\<and>\n     fa n = g 0 \\<and> (\\<forall>i<n. (fa i, fa (Suc i)) \\<in> R \\<union> S)\n\ngoal (1 subgoal):\n 1. (\\<And>gg n.\n        \\<lbrakk>gg 0 = f 0; gg n = g 0;\n         \\<And>i.\n            i < n \\<Longrightarrow>\n            (gg i, gg (Suc i)) \\<in> R \\<union> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  gg 0 = f 0\n  gg n = g 0\n  ?i < n \\<Longrightarrow> (gg ?i, gg (Suc ?i)) \\<in> R \\<union> S\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?h = \"\\<lambda> i. if i < n then gg i else g (i - n)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "obtain h where h: \"h = ?h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>h.\n        h =\n        (\\<lambda>i. if i < n then gg i else g (i - n)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  h = (\\<lambda>i. if i < n then gg i else g (i - n))\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  h = (\\<lambda>i. if i < n then gg i else g (i - n))\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "assume i: \"i \\<le> n\""], ["proof (state)\nthis:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "have \"h i = gg i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h i = gg i", "using i"], ["proof (prove)\nusing this:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. h i = gg i", "unfolding h"], ["proof (prove)\nusing this:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. (if i < n then gg i else g (i - n)) = gg i", "by (cases \"i < n\", auto simp: n)"], ["proof (state)\nthis:\n  h i = gg i\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  ?i2 \\<le> n \\<Longrightarrow> h ?i2 = gg ?i2\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "note gg = this"], ["proof (state)\nthis:\n  ?i2 \\<le> n \\<Longrightarrow> h ?i2 = gg ?i2\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from gg[of 0]  \\<open>f 0 \\<in> T\\<close>"], ["proof (chain)\npicking this:\n  0 \\<le> n \\<Longrightarrow> h 0 = gg 0\n  f 0 \\<in> T", "have h0: \"h 0 \\<in> T\""], ["proof (prove)\nusing this:\n  0 \\<le> n \\<Longrightarrow> h 0 = gg 0\n  f 0 \\<in> T\n\ngoal (1 subgoal):\n 1. h 0 \\<in> T", "unfolding start"], ["proof (prove)\nusing this:\n  0 \\<le> n \\<Longrightarrow> h 0 = f 0\n  f 0 \\<in> T\n\ngoal (1 subgoal):\n 1. h 0 \\<in> T", "by auto"], ["proof (state)\nthis:\n  h 0 \\<in> T\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  h 0 \\<in> T\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "have \"(h i, h (Suc i)) \\<in> R \\<union> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (h i, h (Suc i)) \\<in> R \\<union> S", "proof (cases \"i < n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i < n \\<Longrightarrow> (h i, h (Suc i)) \\<in> R \\<union> S\n 2. \\<not> i < n \\<Longrightarrow> (h i, h (Suc i)) \\<in> R \\<union> S", "case True"], ["proof (state)\nthis:\n  i < n\n\ngoal (2 subgoals):\n 1. i < n \\<Longrightarrow> (h i, h (Suc i)) \\<in> R \\<union> S\n 2. \\<not> i < n \\<Longrightarrow> (h i, h (Suc i)) \\<in> R \\<union> S", "from steps[of i] gg[of i] gg[of \"Suc i\"] True"], ["proof (chain)\npicking this:\n  i < n \\<Longrightarrow> (gg i, gg (Suc i)) \\<in> R \\<union> S\n  i \\<le> n \\<Longrightarrow> h i = gg i\n  Suc i \\<le> n \\<Longrightarrow> h (Suc i) = gg (Suc i)\n  i < n", "show ?thesis"], ["proof (prove)\nusing this:\n  i < n \\<Longrightarrow> (gg i, gg (Suc i)) \\<in> R \\<union> S\n  i \\<le> n \\<Longrightarrow> h i = gg i\n  Suc i \\<le> n \\<Longrightarrow> h (Suc i) = gg (Suc i)\n  i < n\n\ngoal (1 subgoal):\n 1. (h i, h (Suc i)) \\<in> R \\<union> S", "by auto"], ["proof (state)\nthis:\n  (h i, h (Suc i)) \\<in> R \\<union> S\n\ngoal (1 subgoal):\n 1. \\<not> i < n \\<Longrightarrow> (h i, h (Suc i)) \\<in> R \\<union> S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i < n \\<Longrightarrow> (h i, h (Suc i)) \\<in> R \\<union> S", "case False"], ["proof (state)\nthis:\n  \\<not> i < n\n\ngoal (1 subgoal):\n 1. \\<not> i < n \\<Longrightarrow> (h i, h (Suc i)) \\<in> R \\<union> S", "hence \"i = n + (i - n)\""], ["proof (prove)\nusing this:\n  \\<not> i < n\n\ngoal (1 subgoal):\n 1. i = n + (i - n)", "by auto"], ["proof (state)\nthis:\n  i = n + (i - n)\n\ngoal (1 subgoal):\n 1. \\<not> i < n \\<Longrightarrow> (h i, h (Suc i)) \\<in> R \\<union> S", "then"], ["proof (chain)\npicking this:\n  i = n + (i - n)", "obtain k where i: \"i = n + k\""], ["proof (prove)\nusing this:\n  i = n + (i - n)\n\ngoal (1 subgoal):\n 1. (\\<And>k. i = n + k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  i = n + k\n\ngoal (1 subgoal):\n 1. \\<not> i < n \\<Longrightarrow> (h i, h (Suc i)) \\<in> R \\<union> S", "from gsteps[of k]"], ["proof (chain)\npicking this:\n  (g k, g (Suc k)) \\<in> R \\<union> S", "show ?thesis"], ["proof (prove)\nusing this:\n  (g k, g (Suc k)) \\<in> R \\<union> S\n\ngoal (1 subgoal):\n 1. (h i, h (Suc i)) \\<in> R \\<union> S", "unfolding h i"], ["proof (prove)\nusing this:\n  (g k, g (Suc k)) \\<in> R \\<union> S\n\ngoal (1 subgoal):\n 1. (if n + k < n then gg (n + k) else g (n + k - n),\n     if Suc (n + k) < n then gg (Suc (n + k)) else g (Suc (n + k) - n))\n    \\<in> R \\<union> S", "by simp"], ["proof (state)\nthis:\n  (h i, h (Suc i)) \\<in> R \\<union> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (h i, h (Suc i)) \\<in> R \\<union> S\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  (h ?i2, h (Suc ?i2)) \\<in> R \\<union> S\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "note hsteps = this"], ["proof (state)\nthis:\n  (h ?i2, h (Suc ?i2)) \\<in> R \\<union> S\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from SN[unfolded SN_rel_on_alt_def, rule_format, OF conjI[OF allI[OF hsteps] h0]]"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>\\<^sub>\\<infinity>j. (h j, h (Suc j)) \\<in> R)", "have \"\\<not> (INFM j. (h j, h (Suc j)) \\<in> R)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>\\<^sub>\\<infinity>j. (h j, h (Suc j)) \\<in> R)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>\\<^sub>\\<infinity>j. (h j, h (Suc j)) \\<in> R)", "."], ["proof (state)\nthis:\n  \\<not> (\\<exists>\\<^sub>\\<infinity>j. (h j, h (Suc j)) \\<in> R)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<not> (\\<exists>\\<^sub>\\<infinity>j. (h j, h (Suc j)) \\<in> R)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "have \"INFM j. (h j, h (Suc j)) \\<in> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>\\<infinity>j. (h j, h (Suc j)) \\<in> R", "unfolding INFM_nat_le"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m. \\<exists>n\\<ge>m. (h n, h (Suc n)) \\<in> R", "proof (rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (h n, h (Suc n)) \\<in> R", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (h n, h (Suc n)) \\<in> R", "from infR[unfolded INFM_nat_le, rule_format, of m]"], ["proof (chain)\npicking this:\n  \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "obtain i where i: \"i \\<ge> m\" and g: \"(g i, g (Suc i)) \\<in> R\""], ["proof (prove)\nusing this:\n  \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>m \\<le> i; (g i, g (Suc i)) \\<in> R\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  m \\<le> i\n  (g i, g (Suc i)) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (h n, h (Suc n)) \\<in> R", "show \"\\<exists> n \\<ge> m. (h n , h (Suc n)) \\<in> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n\\<ge>m. (h n, h (Suc n)) \\<in> R", "by (rule exI[of _ \"i + n\"], unfold h, insert g i, auto)"], ["proof (state)\nthis:\n  \\<exists>n\\<ge>m. (h n, h (Suc n)) \\<in> R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>\\<^sub>\\<infinity>j. (h j, h (Suc j)) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>\\<^sub>\\<infinity>j. (h j, h (Suc j)) \\<in> R)\n  \\<exists>\\<^sub>\\<infinity>j. (h j, h (Suc j)) \\<in> R", "show False"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>\\<^sub>\\<infinity>j. (h j, h (Suc j)) \\<in> R)\n  \\<exists>\\<^sub>\\<infinity>j. (h j, h (Suc j)) \\<in> R\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SN_rel_on_conv: \"SN_rel_on = SN_rel_on_alt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_on = SN_rel_on_alt", "by (intro ext) (blast intro: SN_rel_on_imp_SN_rel_on_alt SN_rel_on_alt_imp_SN_rel_on)"], ["", "lemmas SN_rel_defs = SN_rel_on_def SN_rel_on_alt_def"], ["", "lemma SN_rel_on_alt_r_empty : \"SN_rel_on_alt {} S T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_on_alt {} S T", "unfolding SN_rel_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> {} \\<union> S) \\<and>\n       f 0 \\<in> T \\<longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> {})", "by auto"], ["", "lemma SN_rel_on_alt_s_empty : \"SN_rel_on_alt R {} = SN_on R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_on_alt R {} = SN_on R", "by (intro ext, unfold SN_rel_defs SN_defs, auto)"], ["", "lemma SN_rel_on_mono':\n  assumes R: \"R \\<subseteq> R'\" and S: \"S \\<subseteq> R' \\<union> S'\" and SN: \"SN_rel_on R' S' T\"\n  shows \"SN_rel_on R S T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_on R S T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_on R S T", "note conv = SN_rel_on_conv SN_rel_on_alt_def INFM_nat_le"], ["proof (state)\nthis:\n  SN_rel_on = SN_rel_on_alt\n  SN_rel_on_alt ?R ?S ?T =\n  (\\<forall>f.\n      (\\<forall>i. (f i, f (Suc i)) \\<in> ?R \\<union> ?S) \\<and>\n      f 0 \\<in> ?T \\<longrightarrow>\n      \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> ?R))\n  (\\<exists>\\<^sub>\\<infinity>n. ?P n) =\n  (\\<forall>m. \\<exists>n\\<ge>m. ?P n)\n\ngoal (1 subgoal):\n 1. SN_rel_on R S T", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_on R S T", "unfolding conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> T \\<longrightarrow>\n       \\<not> (\\<forall>m. \\<exists>n\\<ge>m. (f n, f (Suc n)) \\<in> R)", "proof(intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> T \\<Longrightarrow>\n       \\<not> (\\<forall>m. \\<exists>n\\<ge>m. (f n, f (Suc n)) \\<in> R)", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> T \\<Longrightarrow>\n       \\<not> (\\<forall>m. \\<exists>n\\<ge>m. (f n, f (Suc n)) \\<in> R)", "assume \"chain (R \\<union> S) f \\<and> f 0 \\<in> T\""], ["proof (state)\nthis:\n  (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and> f 0 \\<in> T\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> T \\<Longrightarrow>\n       \\<not> (\\<forall>m. \\<exists>n\\<ge>m. (f n, f (Suc n)) \\<in> R)", "with R S"], ["proof (chain)\npicking this:\n  R \\<subseteq> R'\n  S \\<subseteq> R' \\<union> S'\n  (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and> f 0 \\<in> T", "have \"chain (R' \\<union> S') f \\<and> f 0 \\<in> T\""], ["proof (prove)\nusing this:\n  R \\<subseteq> R'\n  S \\<subseteq> R' \\<union> S'\n  (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and> f 0 \\<in> T\n\ngoal (1 subgoal):\n 1. (\\<forall>i. (f i, f (Suc i)) \\<in> R' \\<union> S') \\<and> f 0 \\<in> T", "by auto"], ["proof (state)\nthis:\n  (\\<forall>i. (f i, f (Suc i)) \\<in> R' \\<union> S') \\<and> f 0 \\<in> T\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> T \\<Longrightarrow>\n       \\<not> (\\<forall>m. \\<exists>n\\<ge>m. (f n, f (Suc n)) \\<in> R)", "from SN[unfolded conv, rule_format, OF this]"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>m. \\<exists>n\\<ge>m. (f n, f (Suc n)) \\<in> R')", "show \"\\<not> (\\<forall> m. \\<exists> n \\<ge> m. (f n, f (Suc n)) \\<in> R)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>m. \\<exists>n\\<ge>m. (f n, f (Suc n)) \\<in> R')\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m. \\<exists>n\\<ge>m. (f n, f (Suc n)) \\<in> R)", "using R"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>m. \\<exists>n\\<ge>m. (f n, f (Suc n)) \\<in> R')\n  R \\<subseteq> R'\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m. \\<exists>n\\<ge>m. (f n, f (Suc n)) \\<in> R)", "by auto"], ["proof (state)\nthis:\n  \\<not> (\\<forall>m. \\<exists>n\\<ge>m. (f n, f (Suc n)) \\<in> R)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN_rel_on R S T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma relto_mono:\n  assumes \"R \\<subseteq> R'\" and \"S \\<subseteq> S'\"\n  shows \"relto R S \\<subseteq> relto R' S'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S\\<^sup>* O R O S\\<^sup>* \\<subseteq> S'\\<^sup>* O R' O S'\\<^sup>*", "using assms rtrancl_mono"], ["proof (prove)\nusing this:\n  R \\<subseteq> R'\n  S \\<subseteq> S'\n  ?r \\<subseteq> ?s \\<Longrightarrow> ?r\\<^sup>* \\<subseteq> ?s\\<^sup>*\n\ngoal (1 subgoal):\n 1. S\\<^sup>* O R O S\\<^sup>* \\<subseteq> S'\\<^sup>* O R' O S'\\<^sup>*", "by blast"], ["", "lemma SN_rel_on_mono:\n  assumes R: \"R \\<subseteq> R'\" and S: \"S \\<subseteq> S'\"\n    and SN: \"SN_rel_on R' S' T\"\n  shows \"SN_rel_on R S T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_on R S T", "using SN"], ["proof (prove)\nusing this:\n  SN_rel_on R' S' T\n\ngoal (1 subgoal):\n 1. SN_rel_on R S T", "unfolding SN_rel_on_def"], ["proof (prove)\nusing this:\n  SN_on (S'\\<^sup>* O R' O S'\\<^sup>*) T\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "using SN_on_mono[OF _ relto_mono[OF R S]]"], ["proof (prove)\nusing this:\n  SN_on (S'\\<^sup>* O R' O S'\\<^sup>*) T\n  SN_on (S'\\<^sup>* O R' O S'\\<^sup>*) ?A \\<Longrightarrow>\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) ?A\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "by blast"], ["", "lemmas SN_rel_on_alt_mono = SN_rel_on_mono[unfolded SN_rel_on_conv]"], ["", "lemma SN_rel_on_imp_SN_on:\n  assumes \"SN_rel_on R S T\" shows  \"SN_on R T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_on R T", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T; \\<forall>i. (f i, f (Suc i)) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> False", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T; \\<forall>i. (f i, f (Suc i)) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"chain R f\"\n  and f0: \"f 0 \\<in> T\""], ["proof (state)\nthis:\n  \\<forall>i. (f i, f (Suc i)) \\<in> R\n  f 0 \\<in> T\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T; \\<forall>i. (f i, f (Suc i)) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"\\<And>i. (f i, f (Suc i)) \\<in> relto R S\""], ["proof (prove)\nusing this:\n  \\<forall>i. (f i, f (Suc i)) \\<in> R\n  f 0 \\<in> T\n\ngoal (1 subgoal):\n 1. \\<And>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> T; \\<forall>i. (f i, f (Suc i)) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. False", "using assms f0"], ["proof (prove)\nusing this:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n  SN_rel_on R S T\n  f 0 \\<in> T\n\ngoal (1 subgoal):\n 1. False", "unfolding SN_rel_on_def SN_defs"], ["proof (prove)\nusing this:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n  \\<nexists>f.\n     f 0 \\<in> T \\<and>\n     (\\<forall>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*)\n  f 0 \\<in> T\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma relto_Id: \"relto R (S \\<union> Id) = relto R S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S\\<^sup>=)\\<^sup>* O R O (S\\<^sup>=)\\<^sup>* =\n    S\\<^sup>* O R O S\\<^sup>*", "by simp"], ["", "lemma SN_rel_on_Id:\n  shows \"SN_rel_on R (S \\<union> Id) T = SN_rel_on R S T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_on R (S\\<^sup>=) T = SN_rel_on R S T", "unfolding SN_rel_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_on ((S\\<^sup>=)\\<^sup>* O R O (S\\<^sup>=)\\<^sup>*) T =\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "by (simp only: relto_Id)"], ["", "lemma SN_rel_on_empty[simp]: \"SN_rel_on R {} T = SN_on R T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_on R {} T = SN_on R T", "unfolding SN_rel_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_on ({}\\<^sup>* O R O {}\\<^sup>*) T = SN_on R T", "by auto"], ["", "lemma SN_rel_on_ideriv: \"SN_rel_on R S T = (\\<not> (\\<exists> as. ideriv R S as \\<and> as 0 \\<in> T))\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_on R S T = (\\<nexists>as. ideriv R S as \\<and> as 0 \\<in> T)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. SN_rel_on R S T \\<Longrightarrow>\n    \\<nexists>as. ideriv R S as \\<and> as 0 \\<in> T\n 2. \\<nexists>as. ideriv R S as \\<and> as 0 \\<in> T \\<Longrightarrow>\n    SN_rel_on R S T", "assume ?L"], ["proof (state)\nthis:\n  SN_rel_on R S T\n\ngoal (2 subgoals):\n 1. SN_rel_on R S T \\<Longrightarrow>\n    \\<nexists>as. ideriv R S as \\<and> as 0 \\<in> T\n 2. \\<nexists>as. ideriv R S as \\<and> as 0 \\<in> T \\<Longrightarrow>\n    SN_rel_on R S T", "show ?R"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>as. ideriv R S as \\<and> as 0 \\<in> T", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>as. ideriv R S as \\<and> as 0 \\<in> T \\<Longrightarrow> False", "assume \"\\<exists> as. ideriv R S as \\<and> as 0 \\<in> T\""], ["proof (state)\nthis:\n  \\<exists>as. ideriv R S as \\<and> as 0 \\<in> T\n\ngoal (1 subgoal):\n 1. \\<exists>as. ideriv R S as \\<and> as 0 \\<in> T \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>as. ideriv R S as \\<and> as 0 \\<in> T", "obtain as where id: \"ideriv R S as\" and T: \"as 0 \\<in> T\""], ["proof (prove)\nusing this:\n  \\<exists>as. ideriv R S as \\<and> as 0 \\<in> T\n\ngoal (1 subgoal):\n 1. (\\<And>as.\n        \\<lbrakk>ideriv R S as; as 0 \\<in> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ideriv R S as\n  as 0 \\<in> T\n\ngoal (1 subgoal):\n 1. \\<exists>as. ideriv R S as \\<and> as 0 \\<in> T \\<Longrightarrow> False", "note id = id[unfolded ideriv_def]"], ["proof (state)\nthis:\n  (\\<forall>i. (as i, as (Suc i)) \\<in> R \\<union> S) \\<and>\n  (\\<exists>\\<^sub>\\<infinity>i. (as i, as (Suc i)) \\<in> R)\n\ngoal (1 subgoal):\n 1. \\<exists>as. ideriv R S as \\<and> as 0 \\<in> T \\<Longrightarrow> False", "from \\<open>?L\\<close>[unfolded SN_rel_on_conv SN_rel_on_alt_def, THEN spec[of _ as]]\n      id T"], ["proof (chain)\npicking this:\n  (\\<forall>i. (as i, as (Suc i)) \\<in> R \\<union> S) \\<and>\n  as 0 \\<in> T \\<longrightarrow>\n  \\<not> (\\<exists>\\<^sub>\\<infinity>j. (as j, as (Suc j)) \\<in> R)\n  (\\<forall>i. (as i, as (Suc i)) \\<in> R \\<union> S) \\<and>\n  (\\<exists>\\<^sub>\\<infinity>i. (as i, as (Suc i)) \\<in> R)\n  as 0 \\<in> T", "obtain i where i: \"\\<And> j. j \\<ge> i \\<Longrightarrow> (as j, as (Suc j)) \\<notin> R\""], ["proof (prove)\nusing this:\n  (\\<forall>i. (as i, as (Suc i)) \\<in> R \\<union> S) \\<and>\n  as 0 \\<in> T \\<longrightarrow>\n  \\<not> (\\<exists>\\<^sub>\\<infinity>j. (as j, as (Suc j)) \\<in> R)\n  (\\<forall>i. (as i, as (Suc i)) \\<in> R \\<union> S) \\<and>\n  (\\<exists>\\<^sub>\\<infinity>i. (as i, as (Suc i)) \\<in> R)\n  as 0 \\<in> T\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (\\<And>j.\n            i \\<le> j \\<Longrightarrow>\n            (as j, as (Suc j)) \\<notin> R) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i \\<le> ?j \\<Longrightarrow> (as ?j, as (Suc ?j)) \\<notin> R\n\ngoal (1 subgoal):\n 1. \\<exists>as. ideriv R S as \\<and> as 0 \\<in> T \\<Longrightarrow> False", "with id[unfolded INFM_nat, THEN conjunct2, THEN spec[of _ \"Suc i\"]]"], ["proof (chain)\npicking this:\n  \\<exists>n>Suc i. (as n, as (Suc n)) \\<in> R\n  i \\<le> ?j \\<Longrightarrow> (as ?j, as (Suc ?j)) \\<notin> R", "show False"], ["proof (prove)\nusing this:\n  \\<exists>n>Suc i. (as n, as (Suc n)) \\<in> R\n  i \\<le> ?j \\<Longrightarrow> (as ?j, as (Suc ?j)) \\<notin> R\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>as. ideriv R S as \\<and> as 0 \\<in> T\n\ngoal (1 subgoal):\n 1. \\<nexists>as. ideriv R S as \\<and> as 0 \\<in> T \\<Longrightarrow>\n    SN_rel_on R S T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>as. ideriv R S as \\<and> as 0 \\<in> T \\<Longrightarrow>\n    SN_rel_on R S T", "assume ?R"], ["proof (state)\nthis:\n  \\<nexists>as. ideriv R S as \\<and> as 0 \\<in> T\n\ngoal (1 subgoal):\n 1. \\<nexists>as. ideriv R S as \\<and> as 0 \\<in> T \\<Longrightarrow>\n    SN_rel_on R S T", "show ?L"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_on R S T", "unfolding SN_rel_on_conv SN_rel_on_alt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> T \\<longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "proof(intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> T \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "fix as"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> T \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "assume \"chain (R \\<union> S) as \\<and> as 0 \\<in> T\""], ["proof (state)\nthis:\n  (\\<forall>i. (as i, as (Suc i)) \\<in> R \\<union> S) \\<and> as 0 \\<in> T\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> T \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "with \\<open>?R\\<close>[unfolded ideriv_def]"], ["proof (chain)\npicking this:\n  \\<nexists>as.\n     ((\\<forall>i. (as i, as (Suc i)) \\<in> R \\<union> S) \\<and>\n      (\\<exists>\\<^sub>\\<infinity>i. (as i, as (Suc i)) \\<in> R)) \\<and>\n     as 0 \\<in> T\n  (\\<forall>i. (as i, as (Suc i)) \\<in> R \\<union> S) \\<and> as 0 \\<in> T", "have \"\\<not> (INFM i. (as i, as (Suc i)) \\<in> R)\""], ["proof (prove)\nusing this:\n  \\<nexists>as.\n     ((\\<forall>i. (as i, as (Suc i)) \\<in> R \\<union> S) \\<and>\n      (\\<exists>\\<^sub>\\<infinity>i. (as i, as (Suc i)) \\<in> R)) \\<and>\n     as 0 \\<in> T\n  (\\<forall>i. (as i, as (Suc i)) \\<in> R \\<union> S) \\<and> as 0 \\<in> T\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>\\<^sub>\\<infinity>i. (as i, as (Suc i)) \\<in> R)", "by auto"], ["proof (state)\nthis:\n  \\<not> (\\<exists>\\<^sub>\\<infinity>i. (as i, as (Suc i)) \\<in> R)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> T \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "from this[unfolded INFM_nat]"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>m. \\<exists>n>m. (as n, as (Suc n)) \\<in> R)", "obtain i where i: \"\\<And>j. i < j \\<Longrightarrow> (as j, as (Suc j)) \\<notin> R\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>m. \\<exists>n>m. (as n, as (Suc n)) \\<in> R)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (\\<And>j.\n            i < j \\<Longrightarrow>\n            (as j, as (Suc j)) \\<notin> R) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i < ?j \\<Longrightarrow> (as ?j, as (Suc ?j)) \\<notin> R\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> T \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "show \"\\<not> (INFM j. (as j, as (Suc j)) \\<in> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>\\<^sub>\\<infinity>j. (as j, as (Suc j)) \\<in> R)", "unfolding INFM_nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m. \\<exists>n>m. (as n, as (Suc n)) \\<in> R)", "using i"], ["proof (prove)\nusing this:\n  i < ?j \\<Longrightarrow> (as ?j, as (Suc ?j)) \\<notin> R\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m. \\<exists>n>m. (as n, as (Suc n)) \\<in> R)", "by blast"], ["proof (state)\nthis:\n  \\<not> (\\<exists>\\<^sub>\\<infinity>j. (as j, as (Suc j)) \\<in> R)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN_rel_on R S T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SN_rel_to_SN_rel_alt: \"SN_rel R S \\<Longrightarrow> SN_rel_alt R S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel R S \\<Longrightarrow> SN_rel_alt R S", "proof (unfold SN_rel_on_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. SN (S\\<^sup>* O R O S\\<^sup>*) \\<Longrightarrow> SN_rel_alt R S", "assume SN: \"SN (relto R S)\""], ["proof (state)\nthis:\n  SN (S\\<^sup>* O R O S\\<^sup>*)\n\ngoal (1 subgoal):\n 1. SN (S\\<^sup>* O R O S\\<^sup>*) \\<Longrightarrow> SN_rel_alt R S", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_alt R S", "proof (unfold SN_rel_on_alt_def, intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> UNIV \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> UNIV \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "presume steps: \"chain (R \\<union> S) f\""], ["proof (state)\nthis:\n  \\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> UNIV \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "obtain r where  r: \"\\<And>j. r j \\<equiv>  (f j, f (Suc j)) \\<in> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        (\\<And>j. r j \\<equiv> (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r ?j \\<equiv> (f ?j, f (Suc ?j)) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> UNIV \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "show \"\\<not> (INFM j. (f j, f (Suc j)) \\<in> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "hence ih: \"infinitely_many r\""], ["proof (prove)\nusing this:\n  \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)\n\ngoal (1 subgoal):\n 1. infinitely_many r", "unfolding infinitely_many_def r"], ["proof (prove)\nusing this:\n  \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R", "by blast"], ["proof (state)\nthis:\n  infinitely_many r\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "obtain r_index where \"r_index = infinitely_many.index r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r_index.\n        r_index = infinitely_many.index r \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  r_index = infinitely_many.index r\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "with infinitely_many.index_p[OF ih] infinitely_many.index_ordered[OF ih] infinitely_many.index_not_p_between[OF ih]"], ["proof (chain)\npicking this:\n  r (infinitely_many.index r ?n)\n  infinitely_many.index r ?n < infinitely_many.index r (Suc ?n)\n  \\<lbrakk>infinitely_many.index r ?n < ?i;\n   ?i < infinitely_many.index r (Suc ?n)\\<rbrakk>\n  \\<Longrightarrow> \\<not> r ?i\n  r_index = infinitely_many.index r", "have r_index: \"\\<And> i. r (r_index i) \\<and> r_index i < r_index (Suc i) \\<and> (\\<forall> j. r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow> \\<not> r j)\""], ["proof (prove)\nusing this:\n  r (infinitely_many.index r ?n)\n  infinitely_many.index r ?n < infinitely_many.index r (Suc ?n)\n  \\<lbrakk>infinitely_many.index r ?n < ?i;\n   ?i < infinitely_many.index r (Suc ?n)\\<rbrakk>\n  \\<Longrightarrow> \\<not> r ?i\n  r_index = infinitely_many.index r\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       r (r_index i) \\<and>\n       r_index i < r_index (Suc i) \\<and>\n       (\\<forall>j.\n           r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow>\n           \\<not> r j)", "by auto"], ["proof (state)\nthis:\n  r (r_index ?i) \\<and>\n  r_index ?i < r_index (Suc ?i) \\<and>\n  (\\<forall>j.\n      r_index ?i < j \\<and> j < r_index (Suc ?i) \\<longrightarrow>\n      \\<not> r j)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "obtain g where g: \"\\<And> i. g i \\<equiv> f (r_index i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        (\\<And>i. g i \\<equiv> f (r_index i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  g ?i \\<equiv> f (r_index ?i)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "{"], ["proof (state)\nthis:\n  g ?i \\<equiv> f (r_index ?i)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "let ?ri = \"r_index i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "let ?rsi = \"r_index (Suc i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "from r_index"], ["proof (chain)\npicking this:\n  r (r_index ?i) \\<and>\n  r_index ?i < r_index (Suc ?i) \\<and>\n  (\\<forall>j.\n      r_index ?i < j \\<and> j < r_index (Suc ?i) \\<longrightarrow>\n      \\<not> r j)", "have isi: \"?ri < ?rsi\""], ["proof (prove)\nusing this:\n  r (r_index ?i) \\<and>\n  r_index ?i < r_index (Suc ?i) \\<and>\n  (\\<forall>j.\n      r_index ?i < j \\<and> j < r_index (Suc ?i) \\<longrightarrow>\n      \\<not> r j)\n\ngoal (1 subgoal):\n 1. r_index i < r_index (Suc i)", "by auto"], ["proof (state)\nthis:\n  r_index i < r_index (Suc i)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "obtain ri rsi where ri: \"ri = ?ri\" and rsi: \"rsi = ?rsi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ri rsi.\n        \\<lbrakk>ri = r_index i; rsi = r_index (Suc i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ri = r_index i\n  rsi = r_index (Suc i)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "with r_index[of i] steps"], ["proof (chain)\npicking this:\n  r (r_index i) \\<and>\n  r_index i < r_index (Suc i) \\<and>\n  (\\<forall>j.\n      r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow> \\<not> r j)\n  \\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S\n  ri = r_index i\n  rsi = r_index (Suc i)", "have inter: \"\\<And> j. ri < j \\<and> j < rsi \\<Longrightarrow> (f j, f (Suc j)) \\<in> S\""], ["proof (prove)\nusing this:\n  r (r_index i) \\<and>\n  r_index i < r_index (Suc i) \\<and>\n  (\\<forall>j.\n      r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow> \\<not> r j)\n  \\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S\n  ri = r_index i\n  rsi = r_index (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       ri < j \\<and> j < rsi \\<Longrightarrow> (f j, f (Suc j)) \\<in> S", "unfolding r"], ["proof (prove)\nusing this:\n  (f (r_index i), f (Suc (r_index i))) \\<in> R \\<and>\n  r_index i < r_index (Suc i) \\<and>\n  (\\<forall>j.\n      r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow>\n      (f j, f (Suc j)) \\<notin> R)\n  \\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S\n  ri = r_index i\n  rsi = r_index (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       ri < j \\<and> j < rsi \\<Longrightarrow> (f j, f (Suc j)) \\<in> S", "by auto"], ["proof (state)\nthis:\n  ri < ?j \\<and> ?j < rsi \\<Longrightarrow> (f ?j, f (Suc ?j)) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "from ri isi rsi"], ["proof (chain)\npicking this:\n  ri = r_index i\n  r_index i < r_index (Suc i)\n  rsi = r_index (Suc i)", "have risi: \"ri < rsi\""], ["proof (prove)\nusing this:\n  ri = r_index i\n  r_index i < r_index (Suc i)\n  rsi = r_index (Suc i)\n\ngoal (1 subgoal):\n 1. ri < rsi", "by simp"], ["proof (state)\nthis:\n  ri < rsi\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "{"], ["proof (state)\nthis:\n  ri < rsi\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "assume \"Suc n \\<le> rsi - ri\""], ["proof (state)\nthis:\n  Suc n \\<le> rsi - ri\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "hence \"(f (Suc ri), f (Suc (n + ri))) \\<in> S^*\""], ["proof (prove)\nusing this:\n  Suc n \\<le> rsi - ri\n\ngoal (1 subgoal):\n 1. (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*", "proof (induct n, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>Suc n \\<le> rsi - ri \\<Longrightarrow>\n                (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*;\n        Suc (Suc n) \\<le> rsi - ri\\<rbrakk>\n       \\<Longrightarrow> (f (Suc ri), f (Suc (Suc n + ri))) \\<in> S\\<^sup>*", "case (Suc n)"], ["proof (state)\nthis:\n  Suc n \\<le> rsi - ri \\<Longrightarrow>\n  (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*\n  Suc (Suc n) \\<le> rsi - ri\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>Suc n \\<le> rsi - ri \\<Longrightarrow>\n                (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*;\n        Suc (Suc n) \\<le> rsi - ri\\<rbrakk>\n       \\<Longrightarrow> (f (Suc ri), f (Suc (Suc n + ri))) \\<in> S\\<^sup>*", "hence stepps: \"(f (Suc ri), f (Suc (n+ri))) \\<in> S^*\""], ["proof (prove)\nusing this:\n  Suc n \\<le> rsi - ri \\<Longrightarrow>\n  (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*\n  Suc (Suc n) \\<le> rsi - ri\n\ngoal (1 subgoal):\n 1. (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>Suc n \\<le> rsi - ri \\<Longrightarrow>\n                (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*;\n        Suc (Suc n) \\<le> rsi - ri\\<rbrakk>\n       \\<Longrightarrow> (f (Suc ri), f (Suc (Suc n + ri))) \\<in> S\\<^sup>*", "have \"(f (Suc (n+ri)), f (Suc (Suc n + ri))) \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f (Suc (n + ri)), f (Suc (Suc n + ri))) \\<in> S", "using inter[of \"Suc n + ri\"] Suc(2)"], ["proof (prove)\nusing this:\n  ri < Suc n + ri \\<and> Suc n + ri < rsi \\<Longrightarrow>\n  (f (Suc n + ri), f (Suc (Suc n + ri))) \\<in> S\n  Suc (Suc n) \\<le> rsi - ri\n\ngoal (1 subgoal):\n 1. (f (Suc (n + ri)), f (Suc (Suc n + ri))) \\<in> S", "by auto"], ["proof (state)\nthis:\n  (f (Suc (n + ri)), f (Suc (Suc n + ri))) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>Suc n \\<le> rsi - ri \\<Longrightarrow>\n                (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*;\n        Suc (Suc n) \\<le> rsi - ri\\<rbrakk>\n       \\<Longrightarrow> (f (Suc ri), f (Suc (Suc n + ri))) \\<in> S\\<^sup>*", "with stepps"], ["proof (chain)\npicking this:\n  (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*\n  (f (Suc (n + ri)), f (Suc (Suc n + ri))) \\<in> S", "show ?case"], ["proof (prove)\nusing this:\n  (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*\n  (f (Suc (n + ri)), f (Suc (Suc n + ri))) \\<in> S\n\ngoal (1 subgoal):\n 1. (f (Suc ri), f (Suc (Suc n + ri))) \\<in> S\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (f (Suc ri), f (Suc (Suc n + ri))) \\<in> S\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  Suc ?n2 \\<le> rsi - ri \\<Longrightarrow>\n  (f (Suc ri), f (Suc (?n2 + ri))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "from this[of \"rsi - ri - 1\"] risi"], ["proof (chain)\npicking this:\n  Suc (rsi - ri - 1) \\<le> rsi - ri \\<Longrightarrow>\n  (f (Suc ri), f (Suc (rsi - ri - 1 + ri))) \\<in> S\\<^sup>*\n  ri < rsi", "have \n          \"(f (Suc ri), f rsi) \\<in> S^*\""], ["proof (prove)\nusing this:\n  Suc (rsi - ri - 1) \\<le> rsi - ri \\<Longrightarrow>\n  (f (Suc ri), f (Suc (rsi - ri - 1 + ri))) \\<in> S\\<^sup>*\n  ri < rsi\n\ngoal (1 subgoal):\n 1. (f (Suc ri), f rsi) \\<in> S\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (f (Suc ri), f rsi) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "with ri rsi"], ["proof (chain)\npicking this:\n  ri = r_index i\n  rsi = r_index (Suc i)\n  (f (Suc ri), f rsi) \\<in> S\\<^sup>*", "have ssteps: \"(f (Suc ?ri), f ?rsi) \\<in> S^*\""], ["proof (prove)\nusing this:\n  ri = r_index i\n  rsi = r_index (Suc i)\n  (f (Suc ri), f rsi) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (f (Suc (r_index i)), f (r_index (Suc i))) \\<in> S\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (f (Suc (r_index i)), f (r_index (Suc i))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "with r_index[of i]"], ["proof (chain)\npicking this:\n  r (r_index i) \\<and>\n  r_index i < r_index (Suc i) \\<and>\n  (\\<forall>j.\n      r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow> \\<not> r j)\n  (f (Suc (r_index i)), f (r_index (Suc i))) \\<in> S\\<^sup>*", "have \"(f ?ri, f ?rsi) \\<in> R O S^*\""], ["proof (prove)\nusing this:\n  r (r_index i) \\<and>\n  r_index i < r_index (Suc i) \\<and>\n  (\\<forall>j.\n      r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow> \\<not> r j)\n  (f (Suc (r_index i)), f (r_index (Suc i))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (f (r_index i), f (r_index (Suc i))) \\<in> R O S\\<^sup>*", "unfolding r"], ["proof (prove)\nusing this:\n  (f (r_index i), f (Suc (r_index i))) \\<in> R \\<and>\n  r_index i < r_index (Suc i) \\<and>\n  (\\<forall>j.\n      r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow>\n      (f j, f (Suc j)) \\<notin> R)\n  (f (Suc (r_index i)), f (r_index (Suc i))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (f (r_index i), f (r_index (Suc i))) \\<in> R O S\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (f (r_index i), f (r_index (Suc i))) \\<in> R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "hence \"(g i, g (Suc i)) \\<in> S^* O R O S^*\""], ["proof (prove)\nusing this:\n  (f (r_index i), f (r_index (Suc i))) \\<in> R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (g i, g (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*", "using rtrancl_refl"], ["proof (prove)\nusing this:\n  (f (r_index i), f (r_index (Suc i))) \\<in> R O S\\<^sup>*\n  (?a, ?a) \\<in> ?r\\<^sup>*\n\ngoal (1 subgoal):\n 1. (g i, g (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*", "unfolding g"], ["proof (prove)\nusing this:\n  (f (r_index i), f (r_index (Suc i))) \\<in> R O S\\<^sup>*\n  (?a, ?a) \\<in> ?r\\<^sup>*\n\ngoal (1 subgoal):\n 1. (f (r_index i), f (r_index (Suc i))) \\<in> S\\<^sup>* O R O S\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (g i, g (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  (g ?i2, g (Suc ?i2)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "hence \"\\<not> SN (S^* O R O S^*)\""], ["proof (prove)\nusing this:\n  (g ?i2, g (Suc ?i2)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> SN (S\\<^sup>* O R O S\\<^sup>*)", "unfolding SN_defs"], ["proof (prove)\nusing this:\n  (g ?i2, g (Suc ?i2)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> (\\<nexists>f.\n               f 0 \\<in> UNIV \\<and>\n               (\\<forall>i.\n                   (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*))", "by blast"], ["proof (state)\nthis:\n  \\<not> SN (S\\<^sup>* O R O S\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "with SN"], ["proof (chain)\npicking this:\n  SN (S\\<^sup>* O R O S\\<^sup>*)\n  \\<not> SN (S\\<^sup>* O R O S\\<^sup>*)", "show False"], ["proof (prove)\nusing this:\n  SN (S\\<^sup>* O R O S\\<^sup>*)\n  \\<not> SN (S\\<^sup>* O R O S\\<^sup>*)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> UNIV \\<Longrightarrow>\n       \\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S", "qed simp"], ["proof (state)\nthis:\n  SN_rel_alt R S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SN_rel_alt_to_SN_rel : \"SN_rel_alt R S \\<Longrightarrow> SN_rel R S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_alt R S \\<Longrightarrow> SN_rel R S", "proof (unfold SN_rel_on_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_alt R S \\<Longrightarrow> SN (S\\<^sup>* O R O S\\<^sup>*)", "assume SN: \"SN_rel_alt R S\""], ["proof (state)\nthis:\n  SN_rel_alt R S\n\ngoal (1 subgoal):\n 1. SN_rel_alt R S \\<Longrightarrow> SN (S\\<^sup>* O R O S\\<^sup>*)", "show \"SN (relto R S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN (S\\<^sup>* O R O S\\<^sup>*)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"chain (relto R S) f\""], ["proof (state)\nthis:\n  \\<forall>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "hence steps: \"\\<And>i. (f i, f (Suc i)) \\<in> S^* O R O S^*\""], ["proof (prove)\nusing this:\n  \\<forall>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?prop = \"\\<lambda> i ai bi. (f i, bi) \\<in> S^* \\<and> (bi, ai) \\<in> R \\<and> (ai, f (Suc (i))) \\<in> S^*\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from steps"], ["proof (chain)\npicking this:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*", "obtain bi ai where \"?prop i ai bi\""], ["proof (prove)\nusing this:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<And>bi ai.\n        (f i, bi) \\<in> S\\<^sup>* \\<and>\n        (bi, ai) \\<in> R \\<and>\n        (ai, f (Suc i)) \\<in> S\\<^sup>* \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (f i, bi) \\<in> S\\<^sup>* \\<and>\n  (bi, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"\\<exists> ai bi. ?prop i ai bi\""], ["proof (prove)\nusing this:\n  (f i, bi) \\<in> S\\<^sup>* \\<and>\n  (bi, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<exists>ai bi.\n       (f i, bi) \\<in> S\\<^sup>* \\<and>\n       (bi, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  \\<exists>ai bi.\n     (f i, bi) \\<in> S\\<^sup>* \\<and>\n     (bi, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  \\<exists>ai bi.\n     (f ?i2, bi) \\<in> S\\<^sup>* \\<and>\n     (bi, ai) \\<in> R \\<and> (ai, f (Suc ?i2)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"\\<forall> i. \\<exists> bi ai. ?prop i ai bi\""], ["proof (prove)\nusing this:\n  \\<exists>ai bi.\n     (f ?i2, bi) \\<in> S\\<^sup>* \\<and>\n     (bi, ai) \\<in> R \\<and> (ai, f (Suc ?i2)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>bi ai.\n          (f i, bi) \\<in> S\\<^sup>* \\<and>\n          (bi, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<exists>bi ai.\n        (f i, bi) \\<in> S\\<^sup>* \\<and>\n        (bi, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from choice[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>fa.\n     \\<forall>x.\n        \\<exists>ai.\n           (f x, fa x) \\<in> S\\<^sup>* \\<and>\n           (fa x, ai) \\<in> R \\<and> (ai, f (Suc x)) \\<in> S\\<^sup>*", "obtain b where \"\\<forall> i. \\<exists> ai. ?prop i ai (b i)\""], ["proof (prove)\nusing this:\n  \\<exists>fa.\n     \\<forall>x.\n        \\<exists>ai.\n           (f x, fa x) \\<in> S\\<^sup>* \\<and>\n           (fa x, ai) \\<in> R \\<and> (ai, f (Suc x)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<forall>i.\n           \\<exists>ai.\n              (f i, b i) \\<in> S\\<^sup>* \\<and>\n              (b i, ai) \\<in> R \\<and>\n              (ai, f (Suc i)) \\<in> S\\<^sup>* \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<exists>ai.\n        (f i, b i) \\<in> S\\<^sup>* \\<and>\n        (b i, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from choice[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>fa.\n     \\<forall>x.\n        (f x, b x) \\<in> S\\<^sup>* \\<and>\n        (b x, fa x) \\<in> R \\<and> (fa x, f (Suc x)) \\<in> S\\<^sup>*", "obtain a where steps: \"\\<And> i. ?prop i (a i) (b i)\""], ["proof (prove)\nusing this:\n  \\<exists>fa.\n     \\<forall>x.\n        (f x, b x) \\<in> S\\<^sup>* \\<and>\n        (b x, fa x) \\<in> R \\<and> (fa x, f (Suc x)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        (\\<And>i.\n            (f i, b i) \\<in> S\\<^sup>* \\<and>\n            (b i, a i) \\<in> R \\<and>\n            (a i, f (Suc i)) \\<in> S\\<^sup>*) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (f ?i, b ?i) \\<in> S\\<^sup>* \\<and>\n  (b ?i, a ?i) \\<in> R \\<and> (a ?i, f (Suc ?i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?prop = \"\\<lambda> i li. (b i, a i) \\<in> R \\<and> (\\<forall> j < length li. ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and> last (a i # li) = b (Suc i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from steps[of i] steps[of \"Suc i\"]"], ["proof (chain)\npicking this:\n  (f i, b i) \\<in> S\\<^sup>* \\<and>\n  (b i, a i) \\<in> R \\<and> (a i, f (Suc i)) \\<in> S\\<^sup>*\n  (f (Suc i), b (Suc i)) \\<in> S\\<^sup>* \\<and>\n  (b (Suc i), a (Suc i)) \\<in> R \\<and>\n  (a (Suc i), f (Suc (Suc i))) \\<in> S\\<^sup>*", "have \"(a i, f (Suc i)) \\<in> S^*\" and \"(f (Suc i), b (Suc i)) \\<in> S^*\""], ["proof (prove)\nusing this:\n  (f i, b i) \\<in> S\\<^sup>* \\<and>\n  (b i, a i) \\<in> R \\<and> (a i, f (Suc i)) \\<in> S\\<^sup>*\n  (f (Suc i), b (Suc i)) \\<in> S\\<^sup>* \\<and>\n  (b (Suc i), a (Suc i)) \\<in> R \\<and>\n  (a (Suc i), f (Suc (Suc i))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (a i, f (Suc i)) \\<in> S\\<^sup>* &&&\n    (f (Suc i), b (Suc i)) \\<in> S\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (a i, f (Suc i)) \\<in> S\\<^sup>*\n  (f (Suc i), b (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from rtrancl_trans[OF this] steps[of i]"], ["proof (chain)\npicking this:\n  (a i, b (Suc i)) \\<in> S\\<^sup>*\n  (f i, b i) \\<in> S\\<^sup>* \\<and>\n  (b i, a i) \\<in> R \\<and> (a i, f (Suc i)) \\<in> S\\<^sup>*", "have R: \"(b i, a i) \\<in> R\" and S: \"(a i, b (Suc i)) \\<in> S^*\""], ["proof (prove)\nusing this:\n  (a i, b (Suc i)) \\<in> S\\<^sup>*\n  (f i, b i) \\<in> S\\<^sup>* \\<and>\n  (b i, a i) \\<in> R \\<and> (a i, f (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (b i, a i) \\<in> R &&& (a i, b (Suc i)) \\<in> S\\<^sup>*", "by blast+"], ["proof (state)\nthis:\n  (b i, a i) \\<in> R\n  (a i, b (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from S[unfolded rtrancl_list_conv]"], ["proof (chain)\npicking this:\n  \\<exists>ts.\n     last (a i # ts) = b (Suc i) \\<and>\n     (\\<forall>ia<length ts. ((a i # ts) ! ia, (a i # ts) ! Suc ia) \\<in> S)", "obtain li where \"last (a i # li) = b (Suc i) \\<and> (\\<forall> j < length li. ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S)\""], ["proof (prove)\nusing this:\n  \\<exists>ts.\n     last (a i # ts) = b (Suc i) \\<and>\n     (\\<forall>ia<length ts. ((a i # ts) ! ia, (a i # ts) ! Suc ia) \\<in> S)\n\ngoal (1 subgoal):\n 1. (\\<And>li.\n        last (a i # li) = b (Suc i) \\<and>\n        (\\<forall>j<length li.\n            ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  last (a i # li) = b (Suc i) \\<and>\n  (\\<forall>j<length li. ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "with R"], ["proof (chain)\npicking this:\n  (b i, a i) \\<in> R\n  last (a i # li) = b (Suc i) \\<and>\n  (\\<forall>j<length li. ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S)", "have \"?prop i li\""], ["proof (prove)\nusing this:\n  (b i, a i) \\<in> R\n  last (a i # li) = b (Suc i) \\<and>\n  (\\<forall>j<length li. ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S)\n\ngoal (1 subgoal):\n 1. (b i, a i) \\<in> R \\<and>\n    (\\<forall>j<length li.\n        ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n    last (a i # li) = b (Suc i)", "by blast"], ["proof (state)\nthis:\n  (b i, a i) \\<in> R \\<and>\n  (\\<forall>j<length li.\n      ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n  last (a i # li) = b (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"\\<exists> li. ?prop i li\""], ["proof (prove)\nusing this:\n  (b i, a i) \\<in> R \\<and>\n  (\\<forall>j<length li.\n      ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n  last (a i # li) = b (Suc i)\n\ngoal (1 subgoal):\n 1. \\<exists>li.\n       (b i, a i) \\<in> R \\<and>\n       (\\<forall>j<length li.\n           ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n       last (a i # li) = b (Suc i)", ".."], ["proof (state)\nthis:\n  \\<exists>li.\n     (b i, a i) \\<in> R \\<and>\n     (\\<forall>j<length li.\n         ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n     last (a i # li) = b (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  \\<exists>li.\n     (b ?i2, a ?i2) \\<in> R \\<and>\n     (\\<forall>j<length li.\n         ((a ?i2 # li) ! j, (a ?i2 # li) ! Suc j) \\<in> S) \\<and>\n     last (a ?i2 # li) = b (Suc ?i2)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"\\<forall> i. \\<exists> li. ?prop i li\""], ["proof (prove)\nusing this:\n  \\<exists>li.\n     (b ?i2, a ?i2) \\<in> R \\<and>\n     (\\<forall>j<length li.\n         ((a ?i2 # li) ! j, (a ?i2 # li) ! Suc j) \\<in> S) \\<and>\n     last (a ?i2 # li) = b (Suc ?i2)\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>li.\n          (b i, a i) \\<in> R \\<and>\n          (\\<forall>j<length li.\n              ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n          last (a i # li) = b (Suc i)", ".."], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<exists>li.\n        (b i, a i) \\<in> R \\<and>\n        (\\<forall>j<length li.\n            ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n        last (a i # li) = b (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from choice[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>f.\n     \\<forall>x.\n        (b x, a x) \\<in> R \\<and>\n        (\\<forall>j<length (f x).\n            ((a x # f x) ! j, (a x # f x) ! Suc j) \\<in> S) \\<and>\n        last (a x # f x) = b (Suc x)", "obtain l where steps: \"\\<And> i. ?prop i (l i)\""], ["proof (prove)\nusing this:\n  \\<exists>f.\n     \\<forall>x.\n        (b x, a x) \\<in> R \\<and>\n        (\\<forall>j<length (f x).\n            ((a x # f x) ! j, (a x # f x) ! Suc j) \\<in> S) \\<and>\n        last (a x # f x) = b (Suc x)\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        (\\<And>i.\n            (b i, a i) \\<in> R \\<and>\n            (\\<forall>j<length (l i).\n                ((a i # l i) ! j, (a i # l i) ! Suc j) \\<in> S) \\<and>\n            last (a i # l i) = b (Suc i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (b ?i, a ?i) \\<in> R \\<and>\n  (\\<forall>j<length (l ?i).\n      ((a ?i # l ?i) ! j, (a ?i # l ?i) ! Suc j) \\<in> S) \\<and>\n  last (a ?i # l ?i) = b (Suc ?i)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?p = \"\\<lambda> i. ?prop i (l i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from steps"], ["proof (chain)\npicking this:\n  (b ?i, a ?i) \\<in> R \\<and>\n  (\\<forall>j<length (l ?i).\n      ((a ?i # l ?i) ! j, (a ?i # l ?i) ! Suc j) \\<in> S) \\<and>\n  last (a ?i # l ?i) = b (Suc ?i)", "have steps: \"\\<And> i. ?p i\""], ["proof (prove)\nusing this:\n  (b ?i, a ?i) \\<in> R \\<and>\n  (\\<forall>j<length (l ?i).\n      ((a ?i # l ?i) ! j, (a ?i # l ?i) ! Suc j) \\<in> S) \\<and>\n  last (a ?i # l ?i) = b (Suc ?i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       (b i, a i) \\<in> R \\<and>\n       (\\<forall>j<length (l i).\n           ((a i # l i) ! j, (a i # l i) ! Suc j) \\<in> S) \\<and>\n       last (a i # l i) = b (Suc i)", "by blast"], ["proof (state)\nthis:\n  (b ?i, a ?i) \\<in> R \\<and>\n  (\\<forall>j<length (l ?i).\n      ((a ?i # l ?i) ! j, (a ?i # l ?i) ! Suc j) \\<in> S) \\<and>\n  last (a ?i # l ?i) = b (Suc ?i)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?l = \"\\<lambda> i. a i # l i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?l' = \"\\<lambda> i. length (?l i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?g = \"\\<lambda> i. inf_concat_simple ?l' i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "obtain g where g: \"\\<And> i. g i = (let (ii,jj) = ?g i in ?l ii ! jj)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        (\\<And>i.\n            g i =\n            (let (ii, jj) =\n                   inf_concat_simple (\\<lambda>i. length (a i # l i)) i\n             in (a ii # l ii) ! jj)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g ?i =\n  (let (ii, jj) = inf_concat_simple (\\<lambda>i. length (a i # l i)) ?i\n   in (a ii # l ii) ! jj)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "have len: \"\\<And> i j n. ?g n = (i,j) \\<Longrightarrow> j < length (?l i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j n.\n       inf_concat_simple (\\<lambda>i. length (a i # l i)) n =\n       (i, j) \\<Longrightarrow>\n       j < length (a i # l i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j n.\n       inf_concat_simple (\\<lambda>i. length (a i # l i)) n =\n       (i, j) \\<Longrightarrow>\n       j < length (a i # l i)", "fix i j n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j n.\n       inf_concat_simple (\\<lambda>i. length (a i # l i)) n =\n       (i, j) \\<Longrightarrow>\n       j < length (a i # l i)", "assume n: \"?g n = (i,j)\""], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>i j n.\n       inf_concat_simple (\\<lambda>i. length (a i # l i)) n =\n       (i, j) \\<Longrightarrow>\n       j < length (a i # l i)", "show \"j < length (?l i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < length (a i # l i)", "proof (cases n)"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> j < length (a i # l i)\n 2. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "case 0"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> j < length (a i # l i)\n 2. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "with n"], ["proof (chain)\npicking this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  n = 0", "have \"j = 0\""], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  n = 0\n\ngoal (1 subgoal):\n 1. j = 0", "by auto"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> j < length (a i # l i)\n 2. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "thus ?thesis"], ["proof (prove)\nusing this:\n  j = 0\n\ngoal (1 subgoal):\n 1. j < length (a i # l i)", "by simp"], ["proof (state)\nthis:\n  j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "case (Suc nn)"], ["proof (state)\nthis:\n  n = Suc nn\n\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "obtain ii jj where nn: \"?g nn = (ii,jj)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ii jj.\n        inf_concat_simple (\\<lambda>i. length (a i # l i)) nn =\n        (ii, jj) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"?g nn\", auto)"], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) nn = (ii, jj)\n\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. j < length (a i # l i)", "proof (cases \"Suc jj < length (?l ii)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Suc jj < length (a ii # l ii) \\<Longrightarrow> j < length (a i # l i)\n 2. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "case True"], ["proof (state)\nthis:\n  Suc jj < length (a ii # l ii)\n\ngoal (2 subgoals):\n 1. Suc jj < length (a ii # l ii) \\<Longrightarrow> j < length (a i # l i)\n 2. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "with nn Suc"], ["proof (chain)\npicking this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) nn = (ii, jj)\n  n = Suc nn\n  Suc jj < length (a ii # l ii)", "have \"?g n = (ii, Suc jj)\""], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) nn = (ii, jj)\n  n = Suc nn\n  Suc jj < length (a ii # l ii)\n\ngoal (1 subgoal):\n 1. inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (ii, Suc jj)", "by auto"], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (ii, Suc jj)\n\ngoal (2 subgoals):\n 1. Suc jj < length (a ii # l ii) \\<Longrightarrow> j < length (a i # l i)\n 2. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "with n True"], ["proof (chain)\npicking this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  Suc jj < length (a ii # l ii)\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (ii, Suc jj)", "show ?thesis"], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  Suc jj < length (a ii # l ii)\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (ii, Suc jj)\n\ngoal (1 subgoal):\n 1. j < length (a i # l i)", "by simp"], ["proof (state)\nthis:\n  j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "case False"], ["proof (state)\nthis:\n  \\<not> Suc jj < length (a ii # l ii)\n\ngoal (1 subgoal):\n 1. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "with nn Suc"], ["proof (chain)\npicking this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) nn = (ii, jj)\n  n = Suc nn\n  \\<not> Suc jj < length (a ii # l ii)", "have \"?g n = (Suc ii, 0)\""], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) nn = (ii, jj)\n  n = Suc nn\n  \\<not> Suc jj < length (a ii # l ii)\n\ngoal (1 subgoal):\n 1. inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (Suc ii, 0)", "by auto"], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (Suc ii, 0)\n\ngoal (1 subgoal):\n 1. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "with n"], ["proof (chain)\npicking this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (Suc ii, 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (Suc ii, 0)\n\ngoal (1 subgoal):\n 1. j < length (a i # l i)", "by simp"], ["proof (state)\nthis:\n  j < length (a i # l i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  j < length (a i # l i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  j < length (a i # l i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) ?n =\n  (?i, ?j) \\<Longrightarrow>\n  ?j < length (a ?i # l ?i)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "have gsteps: \"\\<And> i. (g i, g (Suc i)) \\<in> R \\<union> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. (g i, g (Suc i)) \\<in> R \\<union> S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. (g i, g (Suc i)) \\<in> R \\<union> S", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. (g i, g (Suc i)) \\<in> R \\<union> S", "obtain i j where n: \"?g n = (i, j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        inf_concat_simple (\\<lambda>i. length (a i # l i)) n =\n        (i, j) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"?g n\", auto)"], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>i. (g i, g (Suc i)) \\<in> R \\<union> S", "show \"(g n, g (Suc n)) \\<in> R \\<union> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g n, g (Suc n)) \\<in> R \\<union> S", "proof (cases \"Suc j < length (?l i)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S\n 2. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "case True"], ["proof (state)\nthis:\n  Suc j < length (a i # l i)\n\ngoal (2 subgoals):\n 1. Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S\n 2. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "with n"], ["proof (chain)\npicking this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  Suc j < length (a i # l i)", "have \"?g (Suc n) = (i, Suc j)\""], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  Suc j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n) = (i, Suc j)", "by auto"], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n) = (i, Suc j)\n\ngoal (2 subgoals):\n 1. Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S\n 2. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "with n"], ["proof (chain)\npicking this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n) = (i, Suc j)", "have gn: \"g n = ?l i ! j\" and gsn: \"g (Suc n) = ?l i ! (Suc j)\""], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n) = (i, Suc j)\n\ngoal (1 subgoal):\n 1. g n = (a i # l i) ! j &&& g (Suc n) = (a i # l i) ! Suc j", "unfolding g"], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n) = (i, Suc j)\n\ngoal (1 subgoal):\n 1. (let (ii, y) = inf_concat_simple (\\<lambda>i. length (a i # l i)) n\n     in (a ii # l ii) ! y) =\n    (a i # l i) ! j &&&\n    (let (ii, y) =\n           inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n)\n     in (a ii # l ii) ! y) =\n    (a i # l i) ! Suc j", "by auto"], ["proof (state)\nthis:\n  g n = (a i # l i) ! j\n  g (Suc n) = (a i # l i) ! Suc j\n\ngoal (2 subgoals):\n 1. Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S\n 2. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "thus ?thesis"], ["proof (prove)\nusing this:\n  g n = (a i # l i) ! j\n  g (Suc n) = (a i # l i) ! Suc j\n\ngoal (1 subgoal):\n 1. (g n, g (Suc n)) \\<in> R \\<union> S", "using steps[of i] True"], ["proof (prove)\nusing this:\n  g n = (a i # l i) ! j\n  g (Suc n) = (a i # l i) ! Suc j\n  (b i, a i) \\<in> R \\<and>\n  (\\<forall>j<length (l i).\n      ((a i # l i) ! j, (a i # l i) ! Suc j) \\<in> S) \\<and>\n  last (a i # l i) = b (Suc i)\n  Suc j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. (g n, g (Suc n)) \\<in> R \\<union> S", "by auto"], ["proof (state)\nthis:\n  (g n, g (Suc n)) \\<in> R \\<union> S\n\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "case False"], ["proof (state)\nthis:\n  \\<not> Suc j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "with n"], ["proof (chain)\npicking this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  \\<not> Suc j < length (a i # l i)", "have \"?g (Suc n) = (Suc i, 0)\""], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  \\<not> Suc j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n) = (Suc i, 0)", "by auto"], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n) = (Suc i, 0)\n\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "with n"], ["proof (chain)\npicking this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n) = (Suc i, 0)", "have gn: \"g n = ?l i ! j\" and gsn: \"g (Suc n) = a (Suc i)\""], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n) = (Suc i, 0)\n\ngoal (1 subgoal):\n 1. g n = (a i # l i) ! j &&& g (Suc n) = a (Suc i)", "unfolding g"], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n) = (Suc i, 0)\n\ngoal (1 subgoal):\n 1. (let (ii, y) = inf_concat_simple (\\<lambda>i. length (a i # l i)) n\n     in (a ii # l ii) ! y) =\n    (a i # l i) ! j &&&\n    (let (ii, y) =\n           inf_concat_simple (\\<lambda>i. length (a i # l i)) (Suc n)\n     in (a ii # l ii) ! y) =\n    a (Suc i)", "by auto"], ["proof (state)\nthis:\n  g n = (a i # l i) ! j\n  g (Suc n) = a (Suc i)\n\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "from gn len[OF n] False"], ["proof (chain)\npicking this:\n  g n = (a i # l i) ! j\n  j < length (a i # l i)\n  \\<not> Suc j < length (a i # l i)", "have \"j = length (?l i) - 1\""], ["proof (prove)\nusing this:\n  g n = (a i # l i) ! j\n  j < length (a i # l i)\n  \\<not> Suc j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. j = length (a i # l i) - 1", "by auto"], ["proof (state)\nthis:\n  j = length (a i # l i) - 1\n\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "with gn"], ["proof (chain)\npicking this:\n  g n = (a i # l i) ! j\n  j = length (a i # l i) - 1", "have gn: \"g n = last (?l i)\""], ["proof (prove)\nusing this:\n  g n = (a i # l i) ! j\n  j = length (a i # l i) - 1\n\ngoal (1 subgoal):\n 1. g n = last (a i # l i)", "using last_conv_nth[of \"?l i\"]"], ["proof (prove)\nusing this:\n  g n = (a i # l i) ! j\n  j = length (a i # l i) - 1\n  a i # l i \\<noteq> [] \\<Longrightarrow>\n  last (a i # l i) = (a i # l i) ! (length (a i # l i) - 1)\n\ngoal (1 subgoal):\n 1. g n = last (a i # l i)", "by auto"], ["proof (state)\nthis:\n  g n = last (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "from gn gsn"], ["proof (chain)\npicking this:\n  g n = last (a i # l i)\n  g (Suc n) = a (Suc i)", "show ?thesis"], ["proof (prove)\nusing this:\n  g n = last (a i # l i)\n  g (Suc n) = a (Suc i)\n\ngoal (1 subgoal):\n 1. (g n, g (Suc n)) \\<in> R \\<union> S", "using steps[of i] steps[of \"Suc i\"]"], ["proof (prove)\nusing this:\n  g n = last (a i # l i)\n  g (Suc n) = a (Suc i)\n  (b i, a i) \\<in> R \\<and>\n  (\\<forall>j<length (l i).\n      ((a i # l i) ! j, (a i # l i) ! Suc j) \\<in> S) \\<and>\n  last (a i # l i) = b (Suc i)\n  (b (Suc i), a (Suc i)) \\<in> R \\<and>\n  (\\<forall>j<length (l (Suc i)).\n      ((a (Suc i) # l (Suc i)) ! j, (a (Suc i) # l (Suc i)) ! Suc j)\n      \\<in> S) \\<and>\n  last (a (Suc i) # l (Suc i)) = b (Suc (Suc i))\n\ngoal (1 subgoal):\n 1. (g n, g (Suc n)) \\<in> R \\<union> S", "by auto"], ["proof (state)\nthis:\n  (g n, g (Suc n)) \\<in> R \\<union> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (g n, g (Suc n)) \\<in> R \\<union> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (g ?i, g (Suc ?i)) \\<in> R \\<union> S\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "have infR:  \"INFM j. (g j, g (Suc j)) \\<in> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>\\<infinity>j. (g j, g (Suc j)) \\<in> R", "unfolding INFM_nat_le"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "obtain i j where n: \"?g n = (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        inf_concat_simple (\\<lambda>i. length (a i # l i)) n =\n        (i, j) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"?g n\", auto)"], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i)) n = (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "from len[OF n]"], ["proof (chain)\npicking this:\n  j < length (a i # l i)", "have j: \"j < ?l' i\""], ["proof (prove)\nusing this:\n  j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. j < length (a i # l i)", "."], ["proof (state)\nthis:\n  j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "let ?k = \"?l' i - 1 - j\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "obtain k where k: \"k = j + ?k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        k = j + (length (a i # l i) - 1 - j) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k = j + (length (a i # l i) - 1 - j)\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "from j k"], ["proof (chain)\npicking this:\n  j < length (a i # l i)\n  k = j + (length (a i # l i) - 1 - j)", "have k2: \"k = ?l' i - 1\" and k3: \"j + ?k < ?l' i\""], ["proof (prove)\nusing this:\n  j < length (a i # l i)\n  k = j + (length (a i # l i) - 1 - j)\n\ngoal (1 subgoal):\n 1. k = length (a i # l i) - 1 &&&\n    j + (length (a i # l i) - 1 - j) < length (a i # l i)", "by auto"], ["proof (state)\nthis:\n  k = length (a i # l i) - 1\n  j + (length (a i # l i) - 1 - j) < length (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "from inf_concat_simple_add[OF n, of ?k, OF k3]"], ["proof (chain)\npicking this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i))\n   (n + (length (a i # l i) - 1 - j)) =\n  (i, j + (length (a i # l i) - 1 - j))", "have gnk: \"?g (n + ?k) = (i, k)\""], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i))\n   (n + (length (a i # l i) - 1 - j)) =\n  (i, j + (length (a i # l i) - 1 - j))\n\ngoal (1 subgoal):\n 1. inf_concat_simple (\\<lambda>i. length (a i # l i))\n     (n + (length (a i # l i) - 1 - j)) =\n    (i, k)", "by (simp only: k)"], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i))\n   (n + (length (a i # l i) - 1 - j)) =\n  (i, k)\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "hence \"g (n + ?k) = ?l i ! k\""], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i))\n   (n + (length (a i # l i) - 1 - j)) =\n  (i, k)\n\ngoal (1 subgoal):\n 1. g (n + (length (a i # l i) - 1 - j)) = (a i # l i) ! k", "unfolding g"], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i))\n   (n + (length (a i # l i) - 1 - j)) =\n  (i, k)\n\ngoal (1 subgoal):\n 1. (let (ii, y) =\n           inf_concat_simple (\\<lambda>i. length (a i # l i))\n            (n + (length (a i # l i) - 1 - j))\n     in (a ii # l ii) ! y) =\n    (a i # l i) ! k", "by auto"], ["proof (state)\nthis:\n  g (n + (length (a i # l i) - 1 - j)) = (a i # l i) ! k\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "hence gnk2: \"g (n + ?k) = last (?l i)\""], ["proof (prove)\nusing this:\n  g (n + (length (a i # l i) - 1 - j)) = (a i # l i) ! k\n\ngoal (1 subgoal):\n 1. g (n + (length (a i # l i) - 1 - j)) = last (a i # l i)", "using last_conv_nth[of \"?l i\"] k2"], ["proof (prove)\nusing this:\n  g (n + (length (a i # l i) - 1 - j)) = (a i # l i) ! k\n  a i # l i \\<noteq> [] \\<Longrightarrow>\n  last (a i # l i) = (a i # l i) ! (length (a i # l i) - 1)\n  k = length (a i # l i) - 1\n\ngoal (1 subgoal):\n 1. g (n + (length (a i # l i) - 1 - j)) = last (a i # l i)", "by auto"], ["proof (state)\nthis:\n  g (n + (length (a i # l i) - 1 - j)) = last (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "from k2 gnk"], ["proof (chain)\npicking this:\n  k = length (a i # l i) - 1\n  inf_concat_simple (\\<lambda>i. length (a i # l i))\n   (n + (length (a i # l i) - 1 - j)) =\n  (i, k)", "have \"?g (Suc (n+?k)) = (Suc i, 0)\""], ["proof (prove)\nusing this:\n  k = length (a i # l i) - 1\n  inf_concat_simple (\\<lambda>i. length (a i # l i))\n   (n + (length (a i # l i) - 1 - j)) =\n  (i, k)\n\ngoal (1 subgoal):\n 1. inf_concat_simple (\\<lambda>i. length (a i # l i))\n     (Suc (n + (length (a i # l i) - 1 - j))) =\n    (Suc i, 0)", "by auto"], ["proof (state)\nthis:\n  inf_concat_simple (\\<lambda>i. length (a i # l i))\n   (Suc (n + (length (a i # l i) - 1 - j))) =\n  (Suc i, 0)\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "hence gnsk2: \"g (Suc (n+?k)) = a (Suc i)\""], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i))\n   (Suc (n + (length (a i # l i) - 1 - j))) =\n  (Suc i, 0)\n\ngoal (1 subgoal):\n 1. g (Suc (n + (length (a i # l i) - 1 - j))) = a (Suc i)", "unfolding g"], ["proof (prove)\nusing this:\n  inf_concat_simple (\\<lambda>i. length (a i # l i))\n   (Suc (n + (length (a i # l i) - 1 - j))) =\n  (Suc i, 0)\n\ngoal (1 subgoal):\n 1. (let (ii, y) =\n           inf_concat_simple (\\<lambda>i. length (a i # l i))\n            (Suc (n + (length (a i # l i) - 1 - j)))\n     in (a ii # l ii) ! y) =\n    a (Suc i)", "by auto"], ["proof (state)\nthis:\n  g (Suc (n + (length (a i # l i) - 1 - j))) = a (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "from steps[of i] steps[of \"Suc i\"]"], ["proof (chain)\npicking this:\n  (b i, a i) \\<in> R \\<and>\n  (\\<forall>j<length (l i).\n      ((a i # l i) ! j, (a i # l i) ! Suc j) \\<in> S) \\<and>\n  last (a i # l i) = b (Suc i)\n  (b (Suc i), a (Suc i)) \\<in> R \\<and>\n  (\\<forall>j<length (l (Suc i)).\n      ((a (Suc i) # l (Suc i)) ! j, (a (Suc i) # l (Suc i)) ! Suc j)\n      \\<in> S) \\<and>\n  last (a (Suc i) # l (Suc i)) = b (Suc (Suc i))", "have main: \"(g (n+?k), g (Suc (n+?k))) \\<in> R\""], ["proof (prove)\nusing this:\n  (b i, a i) \\<in> R \\<and>\n  (\\<forall>j<length (l i).\n      ((a i # l i) ! j, (a i # l i) ! Suc j) \\<in> S) \\<and>\n  last (a i # l i) = b (Suc i)\n  (b (Suc i), a (Suc i)) \\<in> R \\<and>\n  (\\<forall>j<length (l (Suc i)).\n      ((a (Suc i) # l (Suc i)) ! j, (a (Suc i) # l (Suc i)) ! Suc j)\n      \\<in> S) \\<and>\n  last (a (Suc i) # l (Suc i)) = b (Suc (Suc i))\n\ngoal (1 subgoal):\n 1. (g (n + (length (a i # l i) - 1 - j)),\n     g (Suc (n + (length (a i # l i) - 1 - j))))\n    \\<in> R", "by (simp only: gnk2 gnsk2)"], ["proof (state)\nthis:\n  (g (n + (length (a i # l i) - 1 - j)),\n   g (Suc (n + (length (a i # l i) - 1 - j))))\n  \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>n\\<ge>m. (g n, g (Suc n)) \\<in> R", "show \"\\<exists> j \\<ge> n. (g j, g (Suc j)) \\<in> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "by (rule exI[of _ \"n + ?k\"], auto simp: main[simplified])"], ["proof (state)\nthis:\n  \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>\\<^sub>\\<infinity>j. (g j, g (Suc j)) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from SN[unfolded SN_rel_on_alt_def] gsteps infR"], ["proof (chain)\npicking this:\n  \\<forall>f.\n     (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n     f 0 \\<in> UNIV \\<longrightarrow>\n     \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)\n  (g ?i, g (Suc ?i)) \\<in> R \\<union> S\n  \\<exists>\\<^sub>\\<infinity>j. (g j, g (Suc j)) \\<in> R", "show False"], ["proof (prove)\nusing this:\n  \\<forall>f.\n     (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n     f 0 \\<in> UNIV \\<longrightarrow>\n     \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)\n  (g ?i, g (Suc ?i)) \\<in> R \\<union> S\n  \\<exists>\\<^sub>\\<infinity>j. (g j, g (Suc j)) \\<in> R\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN (S\\<^sup>* O R O S\\<^sup>*)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SN_rel_alt_r_empty : \"SN_rel_alt {} S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_alt {} S", "unfolding SN_rel_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> {} \\<union> S) \\<and>\n       f 0 \\<in> UNIV \\<longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> {})", "by auto"], ["", "lemma SN_rel_alt_s_empty : \"SN_rel_alt R {} = SN R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_alt R {} = SN R", "unfolding SN_rel_defs SN_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>f.\n        (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> {}) \\<and>\n        f 0 \\<in> UNIV \\<longrightarrow>\n        \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)) =\n    (\\<nexists>f.\n        f 0 \\<in> UNIV \\<and> (\\<forall>i. (f i, f (Suc i)) \\<in> R))", "by auto"], ["", "lemma SN_rel_mono':\n  \"R \\<subseteq> R' \\<Longrightarrow> S \\<subseteq> R' \\<union> S' \\<Longrightarrow> SN_rel R' S' \\<Longrightarrow> SN_rel R S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R \\<subseteq> R'; S \\<subseteq> R' \\<union> S';\n     SN_rel R' S'\\<rbrakk>\n    \\<Longrightarrow> SN_rel R S", "unfolding SN_rel_on_conv SN_rel_defs INFM_nat_le"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R \\<subseteq> R'; S \\<subseteq> R' \\<union> S';\n     \\<forall>f.\n        (\\<forall>i. (f i, f (Suc i)) \\<in> R' \\<union> S') \\<and>\n        f 0 \\<in> UNIV \\<longrightarrow>\n        \\<not> (\\<forall>m.\n                   \\<exists>n\\<ge>m. (f n, f (Suc n)) \\<in> R')\\<rbrakk>\n    \\<Longrightarrow> \\<forall>f.\n                         (\\<forall>i.\n                             (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n                         f 0 \\<in> UNIV \\<longrightarrow>\n                         \\<not> (\\<forall>m.\n                                    \\<exists>n\\<ge>m.\n (f n, f (Suc n)) \\<in> R)", "by (metis contra_subsetD sup.left_idem sup.mono)"], ["", "lemma SN_rel_mono:\n  assumes R: \"R \\<subseteq> R'\" and S: \"S \\<subseteq> S'\" and SN: \"SN_rel R' S'\"\n  shows \"SN_rel R S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel R S", "using SN"], ["proof (prove)\nusing this:\n  SN_rel R' S'\n\ngoal (1 subgoal):\n 1. SN_rel R S", "unfolding SN_rel_defs"], ["proof (prove)\nusing this:\n  SN (S'\\<^sup>* O R' O S'\\<^sup>*)\n\ngoal (1 subgoal):\n 1. SN (S\\<^sup>* O R O S\\<^sup>*)", "using SN_subset[OF _ relto_mono[OF R S]]"], ["proof (prove)\nusing this:\n  SN (S'\\<^sup>* O R' O S'\\<^sup>*)\n  SN (S'\\<^sup>* O R' O S'\\<^sup>*) \\<Longrightarrow>\n  SN (S\\<^sup>* O R O S\\<^sup>*)\n\ngoal (1 subgoal):\n 1. SN (S\\<^sup>* O R O S\\<^sup>*)", "by blast"], ["", "lemmas SN_rel_alt_mono = SN_rel_mono[unfolded SN_rel_on_conv]"], ["", "lemma SN_rel_imp_SN : assumes \"SN_rel R S\" shows  \"SN R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN R", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i. (f i, f (Suc i)) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> False", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i. (f i, f (Suc i)) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"\\<forall> i. (f i, f (Suc i)) \\<in> R\""], ["proof (state)\nthis:\n  \\<forall>i. (f i, f (Suc i)) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i. (f i, f (Suc i)) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"\\<And> i. (f i, f (Suc i)) \\<in> relto R S\""], ["proof (prove)\nusing this:\n  \\<forall>i. (f i, f (Suc i)) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i. (f i, f (Suc i)) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n  SN_rel R S\n\ngoal (1 subgoal):\n 1. False", "unfolding SN_rel_defs SN_defs"], ["proof (prove)\nusing this:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n  \\<nexists>f.\n     f 0 \\<in> UNIV \\<and>\n     (\\<forall>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*)\n\ngoal (1 subgoal):\n 1. False", "by fast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma relto_trancl_conv : \"(relto R S)^+ = ((R \\<union> S))^* O R O ((R \\<union> S))^*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+ =\n    (R \\<union> S)\\<^sup>* O R O (R \\<union> S)\\<^sup>*", "by regexp"], ["", "lemma SN_rel_Id:\n  shows \"SN_rel R (S \\<union> Id) = SN_rel R S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel R (S\\<^sup>=) = SN_rel R S", "unfolding SN_rel_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN ((S\\<^sup>=)\\<^sup>* O R O (S\\<^sup>=)\\<^sup>*) =\n    SN (S\\<^sup>* O R O S\\<^sup>*)", "by (simp only: relto_Id)"], ["", "lemma relto_rtrancl: \"relto R (S^*) = relto R S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S\\<^sup>*)\\<^sup>* O R O (S\\<^sup>*)\\<^sup>* =\n    S\\<^sup>* O R O S\\<^sup>*", "by regexp"], ["", "lemma SN_rel_empty[simp]: \"SN_rel R {} = SN R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel R {} = SN R", "unfolding SN_rel_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN ({}\\<^sup>* O R O {}\\<^sup>*) = SN R", "by auto"], ["", "lemma SN_rel_ideriv: \"SN_rel R S = (\\<not> (\\<exists> as. ideriv R S as))\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel R S = (\\<nexists>as. ideriv R S as)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. SN_rel R S \\<Longrightarrow> \\<nexists>as. ideriv R S as\n 2. \\<nexists>as. ideriv R S as \\<Longrightarrow> SN_rel R S", "assume ?L"], ["proof (state)\nthis:\n  SN_rel R S\n\ngoal (2 subgoals):\n 1. SN_rel R S \\<Longrightarrow> \\<nexists>as. ideriv R S as\n 2. \\<nexists>as. ideriv R S as \\<Longrightarrow> SN_rel R S", "show ?R"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>as. ideriv R S as", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>as. ideriv R S as \\<Longrightarrow> False", "assume \"\\<exists> as. ideriv R S as\""], ["proof (state)\nthis:\n  \\<exists>as. ideriv R S as\n\ngoal (1 subgoal):\n 1. \\<exists>as. ideriv R S as \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>as. ideriv R S as", "obtain as where id: \"ideriv R S as\""], ["proof (prove)\nusing this:\n  \\<exists>as. ideriv R S as\n\ngoal (1 subgoal):\n 1. (\\<And>as. ideriv R S as \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ideriv R S as\n\ngoal (1 subgoal):\n 1. \\<exists>as. ideriv R S as \\<Longrightarrow> False", "note id = id[unfolded ideriv_def]"], ["proof (state)\nthis:\n  (\\<forall>i. (as i, as (Suc i)) \\<in> R \\<union> S) \\<and>\n  (\\<exists>\\<^sub>\\<infinity>i. (as i, as (Suc i)) \\<in> R)\n\ngoal (1 subgoal):\n 1. \\<exists>as. ideriv R S as \\<Longrightarrow> False", "from \\<open>?L\\<close>[unfolded SN_rel_on_conv SN_rel_defs, THEN spec[of _ as]]\n      id"], ["proof (chain)\npicking this:\n  (\\<forall>i. (as i, as (Suc i)) \\<in> R \\<union> S) \\<and>\n  as 0 \\<in> UNIV \\<longrightarrow>\n  \\<not> (\\<exists>\\<^sub>\\<infinity>j. (as j, as (Suc j)) \\<in> R)\n  (\\<forall>i. (as i, as (Suc i)) \\<in> R \\<union> S) \\<and>\n  (\\<exists>\\<^sub>\\<infinity>i. (as i, as (Suc i)) \\<in> R)", "obtain i where i: \"\\<And> j. j \\<ge> i \\<Longrightarrow> (as j, as (Suc j)) \\<notin> R\""], ["proof (prove)\nusing this:\n  (\\<forall>i. (as i, as (Suc i)) \\<in> R \\<union> S) \\<and>\n  as 0 \\<in> UNIV \\<longrightarrow>\n  \\<not> (\\<exists>\\<^sub>\\<infinity>j. (as j, as (Suc j)) \\<in> R)\n  (\\<forall>i. (as i, as (Suc i)) \\<in> R \\<union> S) \\<and>\n  (\\<exists>\\<^sub>\\<infinity>i. (as i, as (Suc i)) \\<in> R)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (\\<And>j.\n            i \\<le> j \\<Longrightarrow>\n            (as j, as (Suc j)) \\<notin> R) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i \\<le> ?j \\<Longrightarrow> (as ?j, as (Suc ?j)) \\<notin> R\n\ngoal (1 subgoal):\n 1. \\<exists>as. ideriv R S as \\<Longrightarrow> False", "with id[unfolded INFM_nat, THEN conjunct2, THEN spec[of _ \"Suc i\"]]"], ["proof (chain)\npicking this:\n  \\<exists>n>Suc i. (as n, as (Suc n)) \\<in> R\n  i \\<le> ?j \\<Longrightarrow> (as ?j, as (Suc ?j)) \\<notin> R", "show False"], ["proof (prove)\nusing this:\n  \\<exists>n>Suc i. (as n, as (Suc n)) \\<in> R\n  i \\<le> ?j \\<Longrightarrow> (as ?j, as (Suc ?j)) \\<notin> R\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>as. ideriv R S as\n\ngoal (1 subgoal):\n 1. \\<nexists>as. ideriv R S as \\<Longrightarrow> SN_rel R S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>as. ideriv R S as \\<Longrightarrow> SN_rel R S", "assume ?R"], ["proof (state)\nthis:\n  \\<nexists>as. ideriv R S as\n\ngoal (1 subgoal):\n 1. \\<nexists>as. ideriv R S as \\<Longrightarrow> SN_rel R S", "show ?L"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel R S", "unfolding SN_rel_on_conv SN_rel_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> UNIV \\<longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> UNIV \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "fix as"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> UNIV \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "presume \"chain (R \\<union> S) as\""], ["proof (state)\nthis:\n  \\<forall>i. (as i, as (Suc i)) \\<in> R \\<union> S\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> UNIV \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "with \\<open>?R\\<close>[unfolded ideriv_def]"], ["proof (chain)\npicking this:\n  \\<nexists>as.\n     (\\<forall>i. (as i, as (Suc i)) \\<in> R \\<union> S) \\<and>\n     (\\<exists>\\<^sub>\\<infinity>i. (as i, as (Suc i)) \\<in> R)\n  \\<forall>i. (as i, as (Suc i)) \\<in> R \\<union> S", "have \"\\<not> (INFM i. (as i, as (Suc i)) \\<in> R)\""], ["proof (prove)\nusing this:\n  \\<nexists>as.\n     (\\<forall>i. (as i, as (Suc i)) \\<in> R \\<union> S) \\<and>\n     (\\<exists>\\<^sub>\\<infinity>i. (as i, as (Suc i)) \\<in> R)\n  \\<forall>i. (as i, as (Suc i)) \\<in> R \\<union> S\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>\\<^sub>\\<infinity>i. (as i, as (Suc i)) \\<in> R)", "by auto"], ["proof (state)\nthis:\n  \\<not> (\\<exists>\\<^sub>\\<infinity>i. (as i, as (Suc i)) \\<in> R)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> UNIV \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "from this[unfolded INFM_nat]"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>m. \\<exists>n>m. (as n, as (Suc n)) \\<in> R)", "obtain i where i: \"\\<And> j. i < j \\<Longrightarrow> (as j, as (Suc j)) \\<notin> R\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>m. \\<exists>n>m. (as n, as (Suc n)) \\<in> R)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (\\<And>j.\n            i < j \\<Longrightarrow>\n            (as j, as (Suc j)) \\<notin> R) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i < ?j \\<Longrightarrow> (as ?j, as (Suc ?j)) \\<notin> R\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> UNIV \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "show \"\\<not> (INFM j. (as j, as (Suc j)) \\<in> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>\\<^sub>\\<infinity>j. (as j, as (Suc j)) \\<in> R)", "unfolding INFM_nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m. \\<exists>n>m. (as n, as (Suc n)) \\<in> R)", "using i"], ["proof (prove)\nusing this:\n  i < ?j \\<Longrightarrow> (as ?j, as (Suc ?j)) \\<notin> R\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m. \\<exists>n>m. (as n, as (Suc n)) \\<in> R)", "by blast"], ["proof (state)\nthis:\n  \\<not> (\\<exists>\\<^sub>\\<infinity>j. (as j, as (Suc j)) \\<in> R)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> UNIV \\<Longrightarrow>\n       \\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S", "qed simp"], ["proof (state)\nthis:\n  SN_rel R S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SN_rel_map:\n  fixes R Rw R' Rw' :: \"'a rel\" \n  defines A: \"A \\<equiv> R' \\<union> Rw'\"\n  assumes SN: \"SN_rel R' Rw'\" \n  and R: \"\\<And>s t. (s,t) \\<in> R \\<Longrightarrow> (f s, f t) \\<in> A^* O R' O A^*\"\n  and Rw: \"\\<And>s t. (s,t) \\<in> Rw \\<Longrightarrow> (f s, f t) \\<in> A^*\"\n  shows \"SN_rel R Rw\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel R Rw", "unfolding SN_rel_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN (Rw\\<^sup>* O R O Rw\\<^sup>*)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "fix g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "assume steps: \"chain (relto R Rw) g\""], ["proof (state)\nthis:\n  \\<forall>i. (g i, g (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?f = \"\\<lambda>i. (f (g i))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "obtain h where h: \"h = ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>h.\n        h = (\\<lambda>i. f (g i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  h = (\\<lambda>i. f (g i))\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  h = (\\<lambda>i. f (g i))\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?m = \"\\<lambda> (x,y). (f x, f y)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "fix s t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"(s,t) \\<in> Rw^*\""], ["proof (state)\nthis:\n  (s, t) \\<in> Rw\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"?m (s,t) \\<in> A^*\""], ["proof (prove)\nusing this:\n  (s, t) \\<in> Rw\\<^sup>*\n\ngoal (1 subgoal):\n 1. (case (s, t) of (x, y) \\<Rightarrow> (f x, f y)) \\<in> A\\<^sup>*", "proof (induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. (case (s, s) of (x, y) \\<Rightarrow> (f x, f y)) \\<in> A\\<^sup>*\n 2. \\<And>y z.\n       \\<lbrakk>(s, y) \\<in> Rw\\<^sup>*; (y, z) \\<in> Rw;\n        (case (s, y) of (x, y) \\<Rightarrow> (f x, f y))\n        \\<in> A\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (case (s, z) of (x, y) \\<Rightarrow> (f x, f y))\n                         \\<in> A\\<^sup>*", "case base"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. (case (s, s) of (x, y) \\<Rightarrow> (f x, f y)) \\<in> A\\<^sup>*\n 2. \\<And>y z.\n       \\<lbrakk>(s, y) \\<in> Rw\\<^sup>*; (y, z) \\<in> Rw;\n        (case (s, y) of (x, y) \\<Rightarrow> (f x, f y))\n        \\<in> A\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (case (s, z) of (x, y) \\<Rightarrow> (f x, f y))\n                         \\<in> A\\<^sup>*", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case (s, s) of (x, y) \\<Rightarrow> (f x, f y)) \\<in> A\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (case (s, s) of (x, y) \\<Rightarrow> (f x, f y)) \\<in> A\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(s, y) \\<in> Rw\\<^sup>*; (y, z) \\<in> Rw;\n        (case (s, y) of (x, y) \\<Rightarrow> (f x, f y))\n        \\<in> A\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (case (s, z) of (x, y) \\<Rightarrow> (f x, f y))\n                         \\<in> A\\<^sup>*", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(s, y) \\<in> Rw\\<^sup>*; (y, z) \\<in> Rw;\n        (case (s, y) of (x, y) \\<Rightarrow> (f x, f y))\n        \\<in> A\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (case (s, z) of (x, y) \\<Rightarrow> (f x, f y))\n                         \\<in> A\\<^sup>*", "case (step t u)"], ["proof (state)\nthis:\n  (s, t) \\<in> Rw\\<^sup>*\n  (t, u) \\<in> Rw\n  (case (s, t) of (x, y) \\<Rightarrow> (f x, f y)) \\<in> A\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(s, y) \\<in> Rw\\<^sup>*; (y, z) \\<in> Rw;\n        (case (s, y) of (x, y) \\<Rightarrow> (f x, f y))\n        \\<in> A\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (case (s, z) of (x, y) \\<Rightarrow> (f x, f y))\n                         \\<in> A\\<^sup>*", "from Rw[OF step(2)] step(3)"], ["proof (chain)\npicking this:\n  (f t, f u) \\<in> A\\<^sup>*\n  (case (s, t) of (x, y) \\<Rightarrow> (f x, f y)) \\<in> A\\<^sup>*", "show ?case"], ["proof (prove)\nusing this:\n  (f t, f u) \\<in> A\\<^sup>*\n  (case (s, t) of (x, y) \\<Rightarrow> (f x, f y)) \\<in> A\\<^sup>*\n\ngoal (1 subgoal):\n 1. (case (s, u) of (x, y) \\<Rightarrow> (f x, f y)) \\<in> A\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (case (s, u) of (x, y) \\<Rightarrow> (f x, f y)) \\<in> A\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (case (s, t) of (x, y) \\<Rightarrow> (f x, f y)) \\<in> A\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  (?s2, ?t2) \\<in> Rw\\<^sup>* \\<Longrightarrow>\n  (case (?s2, ?t2) of (x, y) \\<Rightarrow> (f x, f y)) \\<in> A\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "note Rw = this"], ["proof (state)\nthis:\n  (?s2, ?t2) \\<in> Rw\\<^sup>* \\<Longrightarrow>\n  (case (?s2, ?t2) of (x, y) \\<Rightarrow> (f x, f y)) \\<in> A\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from steps"], ["proof (chain)\npicking this:\n  \\<forall>i. (g i, g (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*", "have \"(g i, g (Suc i)) \\<in> relto R Rw\""], ["proof (prove)\nusing this:\n  \\<forall>i. (g i, g (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\n\ngoal (1 subgoal):\n 1. (g i, g (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*", ".."], ["proof (state)\nthis:\n  (g i, g (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from this"], ["proof (chain)\npicking this:\n  (g i, g (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*", "obtain s t where gs: \"(g i,s) \\<in> Rw^*\" and st: \"(s,t) \\<in> R\" and tg: \"(t, g (Suc i)) \\<in> Rw^*\""], ["proof (prove)\nusing this:\n  (g i, g (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<And>s t.\n        \\<lbrakk>(g i, s) \\<in> Rw\\<^sup>*; (s, t) \\<in> R;\n         (t, g (Suc i)) \\<in> Rw\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (g i, s) \\<in> Rw\\<^sup>*\n  (s, t) \\<in> R\n  (t, g (Suc i)) \\<in> Rw\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from Rw[OF gs] R[OF st] Rw[OF tg]"], ["proof (chain)\npicking this:\n  (case (g i, s) of (x, y) \\<Rightarrow> (f x, f y)) \\<in> A\\<^sup>*\n  (f s, f t) \\<in> A\\<^sup>* O R' O A\\<^sup>*\n  (case (t, g (Suc i)) of (x, y) \\<Rightarrow> (f x, f y)) \\<in> A\\<^sup>*", "have step: \"(?f i, ?f (Suc i)) \\<in> A^* O (A^* O R' O A^*) O A^*\""], ["proof (prove)\nusing this:\n  (case (g i, s) of (x, y) \\<Rightarrow> (f x, f y)) \\<in> A\\<^sup>*\n  (f s, f t) \\<in> A\\<^sup>* O R' O A\\<^sup>*\n  (case (t, g (Suc i)) of (x, y) \\<Rightarrow> (f x, f y)) \\<in> A\\<^sup>*\n\ngoal (1 subgoal):\n 1. (f (g i), f (g (Suc i)))\n    \\<in> A\\<^sup>* O (A\\<^sup>* O R' O A\\<^sup>*) O A\\<^sup>*", "by fast"], ["proof (state)\nthis:\n  (f (g i), f (g (Suc i)))\n  \\<in> A\\<^sup>* O (A\\<^sup>* O R' O A\\<^sup>*) O A\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "have \"(?f i, ?f (Suc i)) \\<in> A^* O R' O A^*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f (g i), f (g (Suc i))) \\<in> A\\<^sup>* O R' O A\\<^sup>*", "by (rule subsetD[OF _ step], regexp)"], ["proof (state)\nthis:\n  (f (g i), f (g (Suc i))) \\<in> A\\<^sup>* O R' O A\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"(h i, h (Suc i)) \\<in> (relto R' Rw')^+\""], ["proof (prove)\nusing this:\n  (f (g i), f (g (Suc i))) \\<in> A\\<^sup>* O R' O A\\<^sup>*\n\ngoal (1 subgoal):\n 1. (h i, h (Suc i)) \\<in> (Rw'\\<^sup>* O R' O Rw'\\<^sup>*)\\<^sup>+", "unfolding A h relto_trancl_conv"], ["proof (prove)\nusing this:\n  (f (g i), f (g (Suc i)))\n  \\<in> (R' \\<union> Rw')\\<^sup>* O R' O (R' \\<union> Rw')\\<^sup>*\n\ngoal (1 subgoal):\n 1. (f (g i), f (g (Suc i)))\n    \\<in> (R' \\<union> Rw')\\<^sup>* O R' O (R' \\<union> Rw')\\<^sup>*", "."], ["proof (state)\nthis:\n  (h i, h (Suc i)) \\<in> (Rw'\\<^sup>* O R' O Rw'\\<^sup>*)\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  (h ?i2, h (Suc ?i2)) \\<in> (Rw'\\<^sup>* O R' O Rw'\\<^sup>*)\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"\\<not> SN ((relto R' Rw')^+)\""], ["proof (prove)\nusing this:\n  (h ?i2, h (Suc ?i2)) \\<in> (Rw'\\<^sup>* O R' O Rw'\\<^sup>*)\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<not> SN ((Rw'\\<^sup>* O R' O Rw'\\<^sup>*)\\<^sup>+)", "by auto"], ["proof (state)\nthis:\n  \\<not> SN ((Rw'\\<^sup>* O R' O Rw'\\<^sup>*)\\<^sup>+)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> Rw\\<^sup>* O R O Rw\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "with SN_imp_SN_trancl[OF SN[unfolded SN_rel_on_def]]"], ["proof (chain)\npicking this:\n  SN ((Rw'\\<^sup>* O R' O Rw'\\<^sup>*)\\<^sup>+)\n  \\<not> SN ((Rw'\\<^sup>* O R' O Rw'\\<^sup>*)\\<^sup>+)", "show False"], ["proof (prove)\nusing this:\n  SN ((Rw'\\<^sup>* O R' O Rw'\\<^sup>*)\\<^sup>+)\n  \\<not> SN ((Rw'\\<^sup>* O R' O Rw'\\<^sup>*)\\<^sup>+)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "datatype SN_rel_ext_type = top_s | top_ns | normal_s | normal_ns"], ["", "fun SN_rel_ext_step :: \"'a rel \\<Rightarrow> 'a rel \\<Rightarrow> 'a rel \\<Rightarrow> 'a rel \\<Rightarrow> SN_rel_ext_type \\<Rightarrow> 'a rel\" where\n  \"SN_rel_ext_step P Pw R Rw top_s = P\"\n| \"SN_rel_ext_step P Pw R Rw top_ns = Pw\"\n| \"SN_rel_ext_step P Pw R Rw normal_s = R\"\n| \"SN_rel_ext_step P Pw R Rw normal_ns = Rw\""], ["", "(* relative termination with four relations as required in DP-framework *)"], ["", "definition SN_rel_ext :: \"'a rel \\<Rightarrow> 'a rel \\<Rightarrow> 'a rel \\<Rightarrow> 'a rel \\<Rightarrow> ('a \\<Rightarrow> bool) \\<Rightarrow> bool\" where\n  \"SN_rel_ext P Pw R Rw M \\<equiv> (\\<not> (\\<exists>f t. \n    (\\<forall> i. (f i, f (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (t i))\n    \\<and> (\\<forall> i. M (f i))\n    \\<and> (INFM i. t i \\<in> {top_s,top_ns})\n    \\<and> (INFM i. t i \\<in> {top_s,normal_s})))\""], ["", "lemma SN_rel_ext_step_mono: assumes \"P \\<subseteq> P'\" \"Pw \\<subseteq> Pw'\" \"R \\<subseteq> R'\" \"Rw \\<subseteq> Rw'\"\n  shows \"SN_rel_ext_step P Pw R Rw t \\<subseteq> SN_rel_ext_step P' Pw' R' Rw' t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_ext_step P Pw R Rw t \\<subseteq> SN_rel_ext_step P' Pw' R' Rw' t", "using assms"], ["proof (prove)\nusing this:\n  P \\<subseteq> P'\n  Pw \\<subseteq> Pw'\n  R \\<subseteq> R'\n  Rw \\<subseteq> Rw'\n\ngoal (1 subgoal):\n 1. SN_rel_ext_step P Pw R Rw t \\<subseteq> SN_rel_ext_step P' Pw' R' Rw' t", "by (cases t, auto)"], ["", "lemma SN_rel_ext_mono: assumes subset: \"P \\<subseteq> P'\" \"Pw \\<subseteq> Pw'\" \"R \\<subseteq> R'\" \"Rw \\<subseteq> Rw'\" and\n  SN: \"SN_rel_ext P' Pw' R' Rw' M\" shows \"SN_rel_ext P Pw R Rw M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "using SN_rel_ext_step_mono[OF subset] SN"], ["proof (prove)\nusing this:\n  SN_rel_ext_step P Pw R Rw ?t \\<subseteq> SN_rel_ext_step P' Pw' R' Rw' ?t\n  SN_rel_ext P' Pw' R' Rw' M\n\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "unfolding SN_rel_ext_def"], ["proof (prove)\nusing this:\n  SN_rel_ext_step P Pw R Rw ?t \\<subseteq> SN_rel_ext_step P' Pw' R' Rw' ?t\n  \\<nexists>f t.\n     (\\<forall>i.\n         (f i, f (Suc i)) \\<in> SN_rel_ext_step P' Pw' R' Rw' (t i)) \\<and>\n     (\\<forall>i. M (f i)) \\<and>\n     (\\<exists>\\<^sub>\\<infinity>i. t i \\<in> {top_s, top_ns}) \\<and>\n     (\\<exists>\\<^sub>\\<infinity>i. t i \\<in> {top_s, normal_s})\n\ngoal (1 subgoal):\n 1. \\<nexists>f t.\n       (\\<forall>i.\n           (f i, f (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (t i)) \\<and>\n       (\\<forall>i. M (f i)) \\<and>\n       (\\<exists>\\<^sub>\\<infinity>i. t i \\<in> {top_s, top_ns}) \\<and>\n       (\\<exists>\\<^sub>\\<infinity>i. t i \\<in> {top_s, normal_s})", "by blast"], ["", "lemma SN_rel_ext_trans:\n  fixes P Pw R Rw :: \"'a rel\" and M :: \"'a \\<Rightarrow> bool\"\n  defines M': \"M' \\<equiv> {(s,t). M t}\"\n  defines A: \"A \\<equiv> (P \\<union> Pw \\<union> R \\<union> Rw) \\<inter> M'\"\n  assumes \"SN_rel_ext P Pw R Rw M\" \n  shows \"SN_rel_ext (A^* O (P \\<inter> M') O A^*) (A^* O ((P \\<union> Pw) \\<inter> M') O A^*) (A^* O ((P \\<union> R) \\<inter> M') O A^*) (A^*) M\" (is \"SN_rel_ext ?P ?Pw ?R ?Rw M\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n     (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n     (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*) (A\\<^sup>*) M", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "let ?relt = \"SN_rel_ext_step ?P ?Pw ?R ?Rw\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "let ?rel = \"SN_rel_ext_step P Pw R Rw\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n          (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n          (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*) (A\\<^sup>*)\n          M\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "from this[unfolded SN_rel_ext_def]"], ["proof (chain)\npicking this:\n  \\<not> (\\<nexists>f t.\n             (\\<forall>i.\n                 (f i, f (Suc i))\n                 \\<in> SN_rel_ext_step\n                        (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n                        (A\\<^sup>* O\n                         ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n                        (A\\<^sup>* O\n                         ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n                        (A\\<^sup>*) (t i)) \\<and>\n             (\\<forall>i. M (f i)) \\<and>\n             (\\<exists>\\<^sub>\\<infinity>i.\n                 t i \\<in> {top_s, top_ns}) \\<and>\n             (\\<exists>\\<^sub>\\<infinity>i. t i \\<in> {top_s, normal_s}))", "obtain f ty\n    where steps: \"\\<And> i. (f i, f (Suc i)) \\<in> ?relt (ty i)\" \n    and min: \"\\<And> i. M (f i)\"\n    and inf1: \"INFM i. ty i \\<in> {top_s, top_ns}\"\n    and inf2: \"INFM i. ty i \\<in> {top_s, normal_s}\""], ["proof (prove)\nusing this:\n  \\<not> (\\<nexists>f t.\n             (\\<forall>i.\n                 (f i, f (Suc i))\n                 \\<in> SN_rel_ext_step\n                        (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n                        (A\\<^sup>* O\n                         ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n                        (A\\<^sup>* O\n                         ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n                        (A\\<^sup>*) (t i)) \\<and>\n             (\\<forall>i. M (f i)) \\<and>\n             (\\<exists>\\<^sub>\\<infinity>i.\n                 t i \\<in> {top_s, top_ns}) \\<and>\n             (\\<exists>\\<^sub>\\<infinity>i. t i \\<in> {top_s, normal_s}))\n\ngoal (1 subgoal):\n 1. (\\<And>f ty.\n        \\<lbrakk>\\<And>i.\n                    (f i, f (Suc i))\n                    \\<in> SN_rel_ext_step\n                           (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n                           (A\\<^sup>* O\n                            ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n                           (A\\<^sup>* O\n                            ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n                           (A\\<^sup>*) (ty i);\n         \\<And>i. M (f i);\n         \\<exists>\\<^sub>\\<infinity>i. ty i \\<in> {top_s, top_ns};\n         \\<exists>\\<^sub>\\<infinity>i. ty i \\<in> {top_s, normal_s}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (f ?i, f (Suc ?i))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n         (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n         (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*) (A\\<^sup>*)\n         (ty ?i)\n  M (f ?i)\n  \\<exists>\\<^sub>\\<infinity>i. ty i \\<in> {top_s, top_ns}\n  \\<exists>\\<^sub>\\<infinity>i. ty i \\<in> {top_s, normal_s}\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "let ?Un = \"\\<lambda> tt. \\<Union> (?rel ` tt)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "let ?UnM = \"\\<lambda> tt. (\\<Union> (?rel ` tt)) \\<inter> M'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "let ?A = \"?UnM {top_s,top_ns,normal_s,normal_ns}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "let ?P' = \"?UnM {top_s}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "let ?Pw' = \"?UnM {top_s,top_ns}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "let ?R' = \"?UnM {top_s,normal_s}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "let ?Rw' = \"?UnM {top_s,top_ns,normal_s,normal_ns}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "have A: \"A = ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A =\n    \\<Union>\n     (SN_rel_ext_step P Pw R Rw `\n      {top_s, top_ns, normal_s, normal_ns}) \\<inter>\n    M'", "unfolding A"], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<union> Pw \\<union> R \\<union> Rw) \\<inter> M' =\n    \\<Union>\n     (SN_rel_ext_step P Pw R Rw `\n      {top_s, top_ns, normal_s, normal_ns}) \\<inter>\n    M'", "by auto"], ["proof (state)\nthis:\n  A =\n  \\<Union>\n   (SN_rel_ext_step P Pw R Rw `\n    {top_s, top_ns, normal_s, normal_ns}) \\<inter>\n  M'\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "have P: \"(P \\<inter> M') = ?P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<inter> M' =\n    \\<Union> (SN_rel_ext_step P Pw R Rw ` {top_s}) \\<inter> M'", "by auto"], ["proof (state)\nthis:\n  P \\<inter> M' = \\<Union> (SN_rel_ext_step P Pw R Rw ` {top_s}) \\<inter> M'\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "have Pw: \"(P \\<union> Pw) \\<inter> M' = ?Pw'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<union> Pw) \\<inter> M' =\n    \\<Union> (SN_rel_ext_step P Pw R Rw ` {top_s, top_ns}) \\<inter> M'", "by auto"], ["proof (state)\nthis:\n  (P \\<union> Pw) \\<inter> M' =\n  \\<Union> (SN_rel_ext_step P Pw R Rw ` {top_s, top_ns}) \\<inter> M'\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "have R: \"(P \\<union> R) \\<inter> M' = ?R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<union> R) \\<inter> M' =\n    \\<Union> (SN_rel_ext_step P Pw R Rw ` {top_s, normal_s}) \\<inter> M'", "by auto"], ["proof (state)\nthis:\n  (P \\<union> R) \\<inter> M' =\n  \\<Union> (SN_rel_ext_step P Pw R Rw ` {top_s, normal_s}) \\<inter> M'\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "have Rw: \"A = ?Rw'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A =\n    \\<Union>\n     (SN_rel_ext_step P Pw R Rw `\n      {top_s, top_ns, normal_s, normal_ns}) \\<inter>\n    M'", "unfolding A"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union>\n     (SN_rel_ext_step P Pw R Rw `\n      {top_s, top_ns, normal_s, normal_ns}) \\<inter>\n    M' =\n    \\<Union>\n     (SN_rel_ext_step P Pw R Rw `\n      {top_s, top_ns, normal_s, normal_ns}) \\<inter>\n    M'", ".."], ["proof (state)\nthis:\n  A =\n  \\<Union>\n   (SN_rel_ext_step P Pw R Rw `\n    {top_s, top_ns, normal_s, normal_ns}) \\<inter>\n  M'\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "{"], ["proof (state)\nthis:\n  A =\n  \\<Union>\n   (SN_rel_ext_step P Pw R Rw `\n    {top_s, top_ns, normal_s, normal_ns}) \\<inter>\n  M'\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "fix s t tt"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "assume m: \"M s\" and st: \"(s,t) \\<in> ?UnM tt\""], ["proof (state)\nthis:\n  M s\n  (s, t) \\<in> \\<Union> (SN_rel_ext_step P Pw R Rw ` tt) \\<inter> M'\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "hence \"\\<exists> typ \\<in> tt. (s,t) \\<in> ?rel typ \\<and> M s \\<and> M t\""], ["proof (prove)\nusing this:\n  M s\n  (s, t) \\<in> \\<Union> (SN_rel_ext_step P Pw R Rw ` tt) \\<inter> M'\n\ngoal (1 subgoal):\n 1. \\<exists>typ\\<in>tt.\n       (s, t) \\<in> SN_rel_ext_step P Pw R Rw typ \\<and> M s \\<and> M t", "unfolding M'"], ["proof (prove)\nusing this:\n  M s\n  (s, t)\n  \\<in> \\<Union> (SN_rel_ext_step P Pw R Rw ` tt) \\<inter> {(s, t). M t}\n\ngoal (1 subgoal):\n 1. \\<exists>typ\\<in>tt.\n       (s, t) \\<in> SN_rel_ext_step P Pw R Rw typ \\<and> M s \\<and> M t", "by auto"], ["proof (state)\nthis:\n  \\<exists>typ\\<in>tt.\n     (s, t) \\<in> SN_rel_ext_step P Pw R Rw typ \\<and> M s \\<and> M t\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  \\<lbrakk>M ?s2;\n   (?s2, ?t2)\n   \\<in> \\<Union> (SN_rel_ext_step P Pw R Rw ` ?tt2) \\<inter> M'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>typ\\<in>?tt2.\n                       (?s2, ?t2) \\<in> SN_rel_ext_step P Pw R Rw typ \\<and>\n                       M ?s2 \\<and> M ?t2\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "note one_step = this"], ["proof (state)\nthis:\n  \\<lbrakk>M ?s2;\n   (?s2, ?t2)\n   \\<in> \\<Union> (SN_rel_ext_step P Pw R Rw ` ?tt2) \\<inter> M'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>typ\\<in>?tt2.\n                       (?s2, ?t2) \\<in> SN_rel_ext_step P Pw R Rw typ \\<and>\n                       M ?s2 \\<and> M ?t2\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "let ?seq = \"\\<lambda> s t g n ty. s = g 0 \\<and> t = g n \\<and> (\\<forall> i < n. (g i, g (Suc i)) \\<in> ?rel (ty i)) \\<and> (\\<forall> i \\<le> n. M (g i))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "fix s t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "assume m: \"M s\" and st: \"(s,t) \\<in> A^*\""], ["proof (state)\nthis:\n  M s\n  (s, t) \\<in> A\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "from st[unfolded rtrancl_fun_conv]"], ["proof (chain)\npicking this:\n  \\<exists>f n.\n     f 0 = s \\<and> f n = t \\<and> (\\<forall>i<n. (f i, f (Suc i)) \\<in> A)", "obtain g n where g0: \"g 0 = s\" and gn: \"g n = t\" and steps: \"\\<And> i. i < n \\<Longrightarrow> (g i, g (Suc i)) \\<in> ?A\""], ["proof (prove)\nusing this:\n  \\<exists>f n.\n     f 0 = s \\<and> f n = t \\<and> (\\<forall>i<n. (f i, f (Suc i)) \\<in> A)\n\ngoal (1 subgoal):\n 1. (\\<And>g n.\n        \\<lbrakk>g 0 = s; g n = t;\n         \\<And>i.\n            i < n \\<Longrightarrow>\n            (g i, g (Suc i))\n            \\<in> \\<Union>\n                   (SN_rel_ext_step P Pw R Rw `\n                    {top_s, top_ns, normal_s, normal_ns}) \\<inter>\n                  M'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding A"], ["proof (prove)\nusing this:\n  \\<exists>f n.\n     f 0 = s \\<and>\n     f n = t \\<and>\n     (\\<forall>i<n.\n         (f i, f (Suc i))\n         \\<in> \\<Union>\n                (SN_rel_ext_step P Pw R Rw `\n                 {top_s, top_ns, normal_s, normal_ns}) \\<inter>\n               M')\n\ngoal (1 subgoal):\n 1. (\\<And>g n.\n        \\<lbrakk>g 0 = s; g n = t;\n         \\<And>i.\n            i < n \\<Longrightarrow>\n            (g i, g (Suc i))\n            \\<in> \\<Union>\n                   (SN_rel_ext_step P Pw R Rw `\n                    {top_s, top_ns, normal_s, normal_ns}) \\<inter>\n                  M'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g 0 = s\n  g n = t\n  ?i < n \\<Longrightarrow>\n  (g ?i, g (Suc ?i))\n  \\<in> \\<Union>\n         (SN_rel_ext_step P Pw R Rw `\n          {top_s, top_ns, normal_s, normal_ns}) \\<inter>\n        M'\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "{"], ["proof (state)\nthis:\n  g 0 = s\n  g n = t\n  ?i < n \\<Longrightarrow>\n  (g ?i, g (Suc ?i))\n  \\<in> \\<Union>\n         (SN_rel_ext_step P Pw R Rw `\n          {top_s, top_ns, normal_s, normal_ns}) \\<inter>\n        M'\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "assume \"i \\<le> n\""], ["proof (state)\nthis:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "have \"M (g i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M (g i)", "proof (cases i)"], ["proof (state)\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> M (g i)\n 2. \\<And>nat. i = Suc nat \\<Longrightarrow> M (g i)", "case 0"], ["proof (state)\nthis:\n  i = 0\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> M (g i)\n 2. \\<And>nat. i = Suc nat \\<Longrightarrow> M (g i)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. M (g i)", "unfolding 0 g0"], ["proof (prove)\ngoal (1 subgoal):\n 1. M s", "by (rule m)"], ["proof (state)\nthis:\n  M (g i)\n\ngoal (1 subgoal):\n 1. \\<And>nat. i = Suc nat \\<Longrightarrow> M (g i)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. i = Suc nat \\<Longrightarrow> M (g i)", "case (Suc j)"], ["proof (state)\nthis:\n  i = Suc j\n\ngoal (1 subgoal):\n 1. \\<And>nat. i = Suc nat \\<Longrightarrow> M (g i)", "with \\<open>i \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  i \\<le> n\n  i = Suc j", "have \"j < n\""], ["proof (prove)\nusing this:\n  i \\<le> n\n  i = Suc j\n\ngoal (1 subgoal):\n 1. j < n", "by auto"], ["proof (state)\nthis:\n  j < n\n\ngoal (1 subgoal):\n 1. \\<And>nat. i = Suc nat \\<Longrightarrow> M (g i)", "from steps[OF this]"], ["proof (chain)\npicking this:\n  (g j, g (Suc j))\n  \\<in> \\<Union>\n         (SN_rel_ext_step P Pw R Rw `\n          {top_s, top_ns, normal_s, normal_ns}) \\<inter>\n        M'", "show ?thesis"], ["proof (prove)\nusing this:\n  (g j, g (Suc j))\n  \\<in> \\<Union>\n         (SN_rel_ext_step P Pw R Rw `\n          {top_s, top_ns, normal_s, normal_ns}) \\<inter>\n        M'\n\ngoal (1 subgoal):\n 1. M (g i)", "unfolding Suc M'"], ["proof (prove)\nusing this:\n  (g j, g (Suc j))\n  \\<in> \\<Union>\n         (SN_rel_ext_step P Pw R Rw `\n          {top_s, top_ns, normal_s, normal_ns}) \\<inter>\n        {(s, t). M t}\n\ngoal (1 subgoal):\n 1. M (g (Suc j))", "by auto"], ["proof (state)\nthis:\n  M (g i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  M (g i)\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  ?i2 \\<le> n \\<Longrightarrow> M (g ?i2)\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "note min = this"], ["proof (state)\nthis:\n  ?i2 \\<le> n \\<Longrightarrow> M (g ?i2)\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "{"], ["proof (state)\nthis:\n  ?i2 \\<le> n \\<Longrightarrow> M (g ?i2)\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "assume i: \"i < n\""], ["proof (state)\nthis:\n  i < n\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "hence i': \"i \\<le> n\""], ["proof (prove)\nusing this:\n  i < n\n\ngoal (1 subgoal):\n 1. i \\<le> n", "by auto"], ["proof (state)\nthis:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "from i' one_step[OF min steps[OF i]]"], ["proof (chain)\npicking this:\n  i \\<le> n\n  i \\<le> n \\<Longrightarrow>\n  \\<exists>typ\\<in>{top_s, top_ns, normal_s, normal_ns}.\n     (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw typ \\<and>\n     M (g i) \\<and> M (g (Suc i))", "have \"\\<exists> ty. (g i, g (Suc i)) \\<in> ?rel ty\""], ["proof (prove)\nusing this:\n  i \\<le> n\n  i \\<le> n \\<Longrightarrow>\n  \\<exists>typ\\<in>{top_s, top_ns, normal_s, normal_ns}.\n     (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw typ \\<and>\n     M (g i) \\<and> M (g (Suc i))\n\ngoal (1 subgoal):\n 1. \\<exists>ty. (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw ty", "by blast"], ["proof (state)\nthis:\n  \\<exists>ty. (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw ty\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  ?i2 < n \\<Longrightarrow>\n  \\<exists>ty. (g ?i2, g (Suc ?i2)) \\<in> SN_rel_ext_step P Pw R Rw ty\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "hence \"\\<forall> i. (\\<exists> ty. i < n \\<longrightarrow> (g i, g (Suc i)) \\<in> ?rel ty)\""], ["proof (prove)\nusing this:\n  ?i2 < n \\<Longrightarrow>\n  \\<exists>ty. (g ?i2, g (Suc ?i2)) \\<in> SN_rel_ext_step P Pw R Rw ty\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>ty.\n          i < n \\<longrightarrow>\n          (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw ty", "by auto"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<exists>ty.\n        i < n \\<longrightarrow>\n        (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw ty\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "from choice[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>f.\n     \\<forall>x<n. (g x, g (Suc x)) \\<in> SN_rel_ext_step P Pw R Rw (f x)", "obtain tt where steps: \"\\<And> i. i < n \\<Longrightarrow> (g i, g (Suc i)) \\<in> ?rel (tt i)\""], ["proof (prove)\nusing this:\n  \\<exists>f.\n     \\<forall>x<n. (g x, g (Suc x)) \\<in> SN_rel_ext_step P Pw R Rw (f x)\n\ngoal (1 subgoal):\n 1. (\\<And>tt.\n        (\\<And>i.\n            i < n \\<Longrightarrow>\n            (g i, g (Suc i))\n            \\<in> SN_rel_ext_step P Pw R Rw (tt i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ?i < n \\<Longrightarrow>\n  (g ?i, g (Suc ?i)) \\<in> SN_rel_ext_step P Pw R Rw (tt ?i)\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "from g0 gn steps min"], ["proof (chain)\npicking this:\n  g 0 = s\n  g n = t\n  ?i < n \\<Longrightarrow>\n  (g ?i, g (Suc ?i)) \\<in> SN_rel_ext_step P Pw R Rw (tt ?i)\n  ?i2 \\<le> n \\<Longrightarrow> M (g ?i2)", "have \"?seq s t g n tt\""], ["proof (prove)\nusing this:\n  g 0 = s\n  g n = t\n  ?i < n \\<Longrightarrow>\n  (g ?i, g (Suc ?i)) \\<in> SN_rel_ext_step P Pw R Rw (tt ?i)\n  ?i2 \\<le> n \\<Longrightarrow> M (g ?i2)\n\ngoal (1 subgoal):\n 1. s = g 0 \\<and>\n    t = g n \\<and>\n    (\\<forall>i<n.\n        (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (tt i)) \\<and>\n    (\\<forall>i\\<le>n. M (g i))", "by auto"], ["proof (state)\nthis:\n  s = g 0 \\<and>\n  t = g n \\<and>\n  (\\<forall>i<n.\n      (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (tt i)) \\<and>\n  (\\<forall>i\\<le>n. M (g i))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "hence \"\\<exists> g n tt. ?seq s t g n tt\""], ["proof (prove)\nusing this:\n  s = g 0 \\<and>\n  t = g n \\<and>\n  (\\<forall>i<n.\n      (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (tt i)) \\<and>\n  (\\<forall>i\\<le>n. M (g i))\n\ngoal (1 subgoal):\n 1. \\<exists>g n tt.\n       s = g 0 \\<and>\n       t = g n \\<and>\n       (\\<forall>i<n.\n           (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (tt i)) \\<and>\n       (\\<forall>i\\<le>n. M (g i))", "by blast"], ["proof (state)\nthis:\n  \\<exists>g n tt.\n     s = g 0 \\<and>\n     t = g n \\<and>\n     (\\<forall>i<n.\n         (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (tt i)) \\<and>\n     (\\<forall>i\\<le>n. M (g i))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  \\<lbrakk>M ?s2; (?s2, ?t2) \\<in> A\\<^sup>*\\<rbrakk>\n  \\<Longrightarrow> \\<exists>g n tt.\n                       ?s2 = g 0 \\<and>\n                       ?t2 = g n \\<and>\n                       (\\<forall>i<n.\n                           (g i, g (Suc i))\n                           \\<in> SN_rel_ext_step P Pw R Rw (tt i)) \\<and>\n                       (\\<forall>i\\<le>n. M (g i))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "note A_steps = this"], ["proof (state)\nthis:\n  \\<lbrakk>M ?s2; (?s2, ?t2) \\<in> A\\<^sup>*\\<rbrakk>\n  \\<Longrightarrow> \\<exists>g n tt.\n                       ?s2 = g 0 \\<and>\n                       ?t2 = g n \\<and>\n                       (\\<forall>i<n.\n                           (g i, g (Suc i))\n                           \\<in> SN_rel_ext_step P Pw R Rw (tt i)) \\<and>\n                       (\\<forall>i\\<le>n. M (g i))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "let ?seqtt = \"\\<lambda> s t tt g n ty. s = g 0 \\<and> t = g n \\<and> n > 0 \\<and> (\\<forall> i<n. (g i, g (Suc i)) \\<in> ?rel (ty i)) \\<and> (\\<forall> i \\<le> n. M (g i)) \\<and> (\\<exists> i < n. ty i \\<in> tt)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "fix s t tt"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "assume m: \"M s\" and st: \"(s,t) \\<in> A^* O ?UnM tt O A^*\""], ["proof (state)\nthis:\n  M s\n  (s, t)\n  \\<in> A\\<^sup>* O\n        (\\<Union> (SN_rel_ext_step P Pw R Rw ` tt) \\<inter> M') O A\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  M s\n  (s, t)\n  \\<in> A\\<^sup>* O\n        (\\<Union> (SN_rel_ext_step P Pw R Rw ` tt) \\<inter> M') O A\\<^sup>*", "obtain u v where su: \"(s,u) \\<in> A^*\" and uv: \"(u,v) \\<in> ?UnM tt\" and vt: \"(v,t) \\<in> A^*\""], ["proof (prove)\nusing this:\n  M s\n  (s, t)\n  \\<in> A\\<^sup>* O\n        (\\<Union> (SN_rel_ext_step P Pw R Rw ` tt) \\<inter> M') O A\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>(s, u) \\<in> A\\<^sup>*;\n         (u, v) \\<in> \\<Union> (SN_rel_ext_step P Pw R Rw ` tt) \\<inter> M';\n         (v, t) \\<in> A\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (s, u) \\<in> A\\<^sup>*\n  (u, v) \\<in> \\<Union> (SN_rel_ext_step P Pw R Rw ` tt) \\<inter> M'\n  (v, t) \\<in> A\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "from A_steps[OF m su]"], ["proof (chain)\npicking this:\n  \\<exists>g n tt.\n     s = g 0 \\<and>\n     u = g n \\<and>\n     (\\<forall>i<n.\n         (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (tt i)) \\<and>\n     (\\<forall>i\\<le>n. M (g i))", "obtain g1 n1 ty1 where seq1: \"?seq s u g1 n1 ty1\""], ["proof (prove)\nusing this:\n  \\<exists>g n tt.\n     s = g 0 \\<and>\n     u = g n \\<and>\n     (\\<forall>i<n.\n         (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (tt i)) \\<and>\n     (\\<forall>i\\<le>n. M (g i))\n\ngoal (1 subgoal):\n 1. (\\<And>g1 n1 ty1.\n        s = g1 0 \\<and>\n        u = g1 n1 \\<and>\n        (\\<forall>i<n1.\n            (g1 i, g1 (Suc i))\n            \\<in> SN_rel_ext_step P Pw R Rw (ty1 i)) \\<and>\n        (\\<forall>i\\<le>n1. M (g1 i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s = g1 0 \\<and>\n  u = g1 n1 \\<and>\n  (\\<forall>i<n1.\n      (g1 i, g1 (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty1 i)) \\<and>\n  (\\<forall>i\\<le>n1. M (g1 i))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "from uv"], ["proof (chain)\npicking this:\n  (u, v) \\<in> \\<Union> (SN_rel_ext_step P Pw R Rw ` tt) \\<inter> M'", "have \"M v\""], ["proof (prove)\nusing this:\n  (u, v) \\<in> \\<Union> (SN_rel_ext_step P Pw R Rw ` tt) \\<inter> M'\n\ngoal (1 subgoal):\n 1. M v", "unfolding M'"], ["proof (prove)\nusing this:\n  (u, v)\n  \\<in> \\<Union> (SN_rel_ext_step P Pw R Rw ` tt) \\<inter> {(s, t). M t}\n\ngoal (1 subgoal):\n 1. M v", "by auto"], ["proof (state)\nthis:\n  M v\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "from A_steps[OF this vt]"], ["proof (chain)\npicking this:\n  \\<exists>g n tt.\n     v = g 0 \\<and>\n     t = g n \\<and>\n     (\\<forall>i<n.\n         (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (tt i)) \\<and>\n     (\\<forall>i\\<le>n. M (g i))", "obtain g2 n2 ty2 where seq2: \"?seq v t g2 n2 ty2\""], ["proof (prove)\nusing this:\n  \\<exists>g n tt.\n     v = g 0 \\<and>\n     t = g n \\<and>\n     (\\<forall>i<n.\n         (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (tt i)) \\<and>\n     (\\<forall>i\\<le>n. M (g i))\n\ngoal (1 subgoal):\n 1. (\\<And>g2 n2 ty2.\n        v = g2 0 \\<and>\n        t = g2 n2 \\<and>\n        (\\<forall>i<n2.\n            (g2 i, g2 (Suc i))\n            \\<in> SN_rel_ext_step P Pw R Rw (ty2 i)) \\<and>\n        (\\<forall>i\\<le>n2. M (g2 i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  v = g2 0 \\<and>\n  t = g2 n2 \\<and>\n  (\\<forall>i<n2.\n      (g2 i, g2 (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty2 i)) \\<and>\n  (\\<forall>i\\<le>n2. M (g2 i))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "from seq1"], ["proof (chain)\npicking this:\n  s = g1 0 \\<and>\n  u = g1 n1 \\<and>\n  (\\<forall>i<n1.\n      (g1 i, g1 (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty1 i)) \\<and>\n  (\\<forall>i\\<le>n1. M (g1 i))", "have \"M u\""], ["proof (prove)\nusing this:\n  s = g1 0 \\<and>\n  u = g1 n1 \\<and>\n  (\\<forall>i<n1.\n      (g1 i, g1 (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty1 i)) \\<and>\n  (\\<forall>i\\<le>n1. M (g1 i))\n\ngoal (1 subgoal):\n 1. M u", "by auto"], ["proof (state)\nthis:\n  M u\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "from one_step[OF this uv]"], ["proof (chain)\npicking this:\n  \\<exists>typ\\<in>tt.\n     (u, v) \\<in> SN_rel_ext_step P Pw R Rw typ \\<and> M u \\<and> M v", "obtain ty where ty: \"ty \\<in> tt\" and uv: \"(u,v) \\<in> ?rel ty\""], ["proof (prove)\nusing this:\n  \\<exists>typ\\<in>tt.\n     (u, v) \\<in> SN_rel_ext_step P Pw R Rw typ \\<and> M u \\<and> M v\n\ngoal (1 subgoal):\n 1. (\\<And>ty.\n        \\<lbrakk>ty \\<in> tt;\n         (u, v) \\<in> SN_rel_ext_step P Pw R Rw ty\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ty \\<in> tt\n  (u, v) \\<in> SN_rel_ext_step P Pw R Rw ty\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "let ?g = \"\\<lambda> i. if i \\<le> n1 then g1 i else g2 (i - (Suc n1))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "let ?ty = \"\\<lambda> i. if i < n1 then ty1 i else if i = n1 then ty else ty2 (i - (Suc n1))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "let ?n = \"Suc (n1 + n2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "have ex: \"\\<exists> i < ?n. ?ty i \\<in> tt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i<Suc (n1 + n2).\n       (if i < n1 then ty1 i else if i = n1 then ty else ty2 (i - Suc n1))\n       \\<in> tt", "by (rule exI[of _ n1], simp add: ty)"], ["proof (state)\nthis:\n  \\<exists>i<Suc (n1 + n2).\n     (if i < n1 then ty1 i else if i = n1 then ty else ty2 (i - Suc n1))\n     \\<in> tt\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "have steps: \"\\<forall> i < ?n. (?g i, ?g (Suc i)) \\<in> ?rel (?ty i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<Suc (n1 + n2).\n       (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n        if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n       \\<in> SN_rel_ext_step P Pw R Rw\n              (if i < n1 then ty1 i\n               else if i = n1 then ty else ty2 (i - Suc n1))", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < Suc (n1 + n2) \\<Longrightarrow>\n       (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n        if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n       \\<in> SN_rel_ext_step P Pw R Rw\n              (if i < n1 then ty1 i\n               else if i = n1 then ty else ty2 (i - Suc n1))", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < Suc (n1 + n2) \\<Longrightarrow>\n       (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n        if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n       \\<in> SN_rel_ext_step P Pw R Rw\n              (if i < n1 then ty1 i\n               else if i = n1 then ty else ty2 (i - Suc n1))", "assume \"i < ?n\""], ["proof (state)\nthis:\n  i < Suc (n1 + n2)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < Suc (n1 + n2) \\<Longrightarrow>\n       (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n        if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n       \\<in> SN_rel_ext_step P Pw R Rw\n              (if i < n1 then ty1 i\n               else if i = n1 then ty else ty2 (i - Suc n1))", "show \"(?g i, ?g (Suc i)) \\<in> ?rel (?ty i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n     if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n    \\<in> SN_rel_ext_step P Pw R Rw\n           (if i < n1 then ty1 i\n            else if i = n1 then ty else ty2 (i - Suc n1))", "proof (cases \"i \\<le> n1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<le> n1 \\<Longrightarrow>\n    (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n     if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n    \\<in> SN_rel_ext_step P Pw R Rw\n           (if i < n1 then ty1 i\n            else if i = n1 then ty else ty2 (i - Suc n1))\n 2. \\<not> i \\<le> n1 \\<Longrightarrow>\n    (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n     if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n    \\<in> SN_rel_ext_step P Pw R Rw\n           (if i < n1 then ty1 i\n            else if i = n1 then ty else ty2 (i - Suc n1))", "case True"], ["proof (state)\nthis:\n  i \\<le> n1\n\ngoal (2 subgoals):\n 1. i \\<le> n1 \\<Longrightarrow>\n    (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n     if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n    \\<in> SN_rel_ext_step P Pw R Rw\n           (if i < n1 then ty1 i\n            else if i = n1 then ty else ty2 (i - Suc n1))\n 2. \\<not> i \\<le> n1 \\<Longrightarrow>\n    (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n     if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n    \\<in> SN_rel_ext_step P Pw R Rw\n           (if i < n1 then ty1 i\n            else if i = n1 then ty else ty2 (i - Suc n1))", "with seq1 seq2 uv"], ["proof (chain)\npicking this:\n  s = g1 0 \\<and>\n  u = g1 n1 \\<and>\n  (\\<forall>i<n1.\n      (g1 i, g1 (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty1 i)) \\<and>\n  (\\<forall>i\\<le>n1. M (g1 i))\n  v = g2 0 \\<and>\n  t = g2 n2 \\<and>\n  (\\<forall>i<n2.\n      (g2 i, g2 (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty2 i)) \\<and>\n  (\\<forall>i\\<le>n2. M (g2 i))\n  (u, v) \\<in> SN_rel_ext_step P Pw R Rw ty\n  i \\<le> n1", "show ?thesis"], ["proof (prove)\nusing this:\n  s = g1 0 \\<and>\n  u = g1 n1 \\<and>\n  (\\<forall>i<n1.\n      (g1 i, g1 (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty1 i)) \\<and>\n  (\\<forall>i\\<le>n1. M (g1 i))\n  v = g2 0 \\<and>\n  t = g2 n2 \\<and>\n  (\\<forall>i<n2.\n      (g2 i, g2 (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty2 i)) \\<and>\n  (\\<forall>i\\<le>n2. M (g2 i))\n  (u, v) \\<in> SN_rel_ext_step P Pw R Rw ty\n  i \\<le> n1\n\ngoal (1 subgoal):\n 1. (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n     if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n    \\<in> SN_rel_ext_step P Pw R Rw\n           (if i < n1 then ty1 i\n            else if i = n1 then ty else ty2 (i - Suc n1))", "by auto"], ["proof (state)\nthis:\n  (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n   if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n  \\<in> SN_rel_ext_step P Pw R Rw\n         (if i < n1 then ty1 i else if i = n1 then ty else ty2 (i - Suc n1))\n\ngoal (1 subgoal):\n 1. \\<not> i \\<le> n1 \\<Longrightarrow>\n    (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n     if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n    \\<in> SN_rel_ext_step P Pw R Rw\n           (if i < n1 then ty1 i\n            else if i = n1 then ty else ty2 (i - Suc n1))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i \\<le> n1 \\<Longrightarrow>\n    (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n     if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n    \\<in> SN_rel_ext_step P Pw R Rw\n           (if i < n1 then ty1 i\n            else if i = n1 then ty else ty2 (i - Suc n1))", "case False"], ["proof (state)\nthis:\n  \\<not> i \\<le> n1\n\ngoal (1 subgoal):\n 1. \\<not> i \\<le> n1 \\<Longrightarrow>\n    (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n     if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n    \\<in> SN_rel_ext_step P Pw R Rw\n           (if i < n1 then ty1 i\n            else if i = n1 then ty else ty2 (i - Suc n1))", "hence \"i = Suc n1 + (i - Suc n1)\""], ["proof (prove)\nusing this:\n  \\<not> i \\<le> n1\n\ngoal (1 subgoal):\n 1. i = Suc n1 + (i - Suc n1)", "by auto"], ["proof (state)\nthis:\n  i = Suc n1 + (i - Suc n1)\n\ngoal (1 subgoal):\n 1. \\<not> i \\<le> n1 \\<Longrightarrow>\n    (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n     if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n    \\<in> SN_rel_ext_step P Pw R Rw\n           (if i < n1 then ty1 i\n            else if i = n1 then ty else ty2 (i - Suc n1))", "then"], ["proof (chain)\npicking this:\n  i = Suc n1 + (i - Suc n1)", "obtain k where i: \"i = Suc n1 + k\""], ["proof (prove)\nusing this:\n  i = Suc n1 + (i - Suc n1)\n\ngoal (1 subgoal):\n 1. (\\<And>k. i = Suc n1 + k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i = Suc n1 + k\n\ngoal (1 subgoal):\n 1. \\<not> i \\<le> n1 \\<Longrightarrow>\n    (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n     if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n    \\<in> SN_rel_ext_step P Pw R Rw\n           (if i < n1 then ty1 i\n            else if i = n1 then ty else ty2 (i - Suc n1))", "with \\<open>i < ?n\\<close>"], ["proof (chain)\npicking this:\n  i < Suc (n1 + n2)\n  i = Suc n1 + k", "have \"k < n2\""], ["proof (prove)\nusing this:\n  i < Suc (n1 + n2)\n  i = Suc n1 + k\n\ngoal (1 subgoal):\n 1. k < n2", "by auto"], ["proof (state)\nthis:\n  k < n2\n\ngoal (1 subgoal):\n 1. \\<not> i \\<le> n1 \\<Longrightarrow>\n    (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n     if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n    \\<in> SN_rel_ext_step P Pw R Rw\n           (if i < n1 then ty1 i\n            else if i = n1 then ty else ty2 (i - Suc n1))", "thus ?thesis"], ["proof (prove)\nusing this:\n  k < n2\n\ngoal (1 subgoal):\n 1. (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n     if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n    \\<in> SN_rel_ext_step P Pw R Rw\n           (if i < n1 then ty1 i\n            else if i = n1 then ty else ty2 (i - Suc n1))", "using seq2"], ["proof (prove)\nusing this:\n  k < n2\n  v = g2 0 \\<and>\n  t = g2 n2 \\<and>\n  (\\<forall>i<n2.\n      (g2 i, g2 (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty2 i)) \\<and>\n  (\\<forall>i\\<le>n2. M (g2 i))\n\ngoal (1 subgoal):\n 1. (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n     if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n    \\<in> SN_rel_ext_step P Pw R Rw\n           (if i < n1 then ty1 i\n            else if i = n1 then ty else ty2 (i - Suc n1))", "unfolding i"], ["proof (prove)\nusing this:\n  k < n2\n  v = g2 0 \\<and>\n  t = g2 n2 \\<and>\n  (\\<forall>i<n2.\n      (g2 i, g2 (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty2 i)) \\<and>\n  (\\<forall>i\\<le>n2. M (g2 i))\n\ngoal (1 subgoal):\n 1. (if Suc n1 + k \\<le> n1 then g1 (Suc n1 + k)\n     else g2 (Suc n1 + k - Suc n1),\n     if Suc (Suc n1 + k) \\<le> n1 then g1 (Suc (Suc n1 + k))\n     else g2 (Suc (Suc n1 + k) - Suc n1))\n    \\<in> SN_rel_ext_step P Pw R Rw\n           (if Suc n1 + k < n1 then ty1 (Suc n1 + k)\n            else if Suc n1 + k = n1 then ty else ty2 (Suc n1 + k - Suc n1))", "by auto"], ["proof (state)\nthis:\n  (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n   if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n  \\<in> SN_rel_ext_step P Pw R Rw\n         (if i < n1 then ty1 i else if i = n1 then ty else ty2 (i - Suc n1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n   if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n  \\<in> SN_rel_ext_step P Pw R Rw\n         (if i < n1 then ty1 i else if i = n1 then ty else ty2 (i - Suc n1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i<Suc (n1 + n2).\n     (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n      if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n     \\<in> SN_rel_ext_step P Pw R Rw\n            (if i < n1 then ty1 i\n             else if i = n1 then ty else ty2 (i - Suc n1))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "from steps seq1 seq2 ex"], ["proof (chain)\npicking this:\n  \\<forall>i<Suc (n1 + n2).\n     (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n      if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n     \\<in> SN_rel_ext_step P Pw R Rw\n            (if i < n1 then ty1 i\n             else if i = n1 then ty else ty2 (i - Suc n1))\n  s = g1 0 \\<and>\n  u = g1 n1 \\<and>\n  (\\<forall>i<n1.\n      (g1 i, g1 (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty1 i)) \\<and>\n  (\\<forall>i\\<le>n1. M (g1 i))\n  v = g2 0 \\<and>\n  t = g2 n2 \\<and>\n  (\\<forall>i<n2.\n      (g2 i, g2 (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty2 i)) \\<and>\n  (\\<forall>i\\<le>n2. M (g2 i))\n  \\<exists>i<Suc (n1 + n2).\n     (if i < n1 then ty1 i else if i = n1 then ty else ty2 (i - Suc n1))\n     \\<in> tt", "have seq: \"?seqtt s t tt ?g ?n ?ty\""], ["proof (prove)\nusing this:\n  \\<forall>i<Suc (n1 + n2).\n     (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n      if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n     \\<in> SN_rel_ext_step P Pw R Rw\n            (if i < n1 then ty1 i\n             else if i = n1 then ty else ty2 (i - Suc n1))\n  s = g1 0 \\<and>\n  u = g1 n1 \\<and>\n  (\\<forall>i<n1.\n      (g1 i, g1 (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty1 i)) \\<and>\n  (\\<forall>i\\<le>n1. M (g1 i))\n  v = g2 0 \\<and>\n  t = g2 n2 \\<and>\n  (\\<forall>i<n2.\n      (g2 i, g2 (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty2 i)) \\<and>\n  (\\<forall>i\\<le>n2. M (g2 i))\n  \\<exists>i<Suc (n1 + n2).\n     (if i < n1 then ty1 i else if i = n1 then ty else ty2 (i - Suc n1))\n     \\<in> tt\n\ngoal (1 subgoal):\n 1. s = (if 0 \\<le> n1 then g1 0 else g2 (0 - Suc n1)) \\<and>\n    t =\n    (if Suc (n1 + n2) \\<le> n1 then g1 (Suc (n1 + n2))\n     else g2 (Suc (n1 + n2) - Suc n1)) \\<and>\n    0 < Suc (n1 + n2) \\<and>\n    (\\<forall>i<Suc (n1 + n2).\n        (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n         if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n        \\<in> SN_rel_ext_step P Pw R Rw\n               (if i < n1 then ty1 i\n                else if i = n1 then ty else ty2 (i - Suc n1))) \\<and>\n    (\\<forall>i\\<le>Suc (n1 + n2).\n        M (if i \\<le> n1 then g1 i else g2 (i - Suc n1))) \\<and>\n    (\\<exists>i<Suc (n1 + n2).\n        (if i < n1 then ty1 i else if i = n1 then ty else ty2 (i - Suc n1))\n        \\<in> tt)", "by auto"], ["proof (state)\nthis:\n  s = (if 0 \\<le> n1 then g1 0 else g2 (0 - Suc n1)) \\<and>\n  t =\n  (if Suc (n1 + n2) \\<le> n1 then g1 (Suc (n1 + n2))\n   else g2 (Suc (n1 + n2) - Suc n1)) \\<and>\n  0 < Suc (n1 + n2) \\<and>\n  (\\<forall>i<Suc (n1 + n2).\n      (if i \\<le> n1 then g1 i else g2 (i - Suc n1),\n       if Suc i \\<le> n1 then g1 (Suc i) else g2 (Suc i - Suc n1))\n      \\<in> SN_rel_ext_step P Pw R Rw\n             (if i < n1 then ty1 i\n              else if i = n1 then ty else ty2 (i - Suc n1))) \\<and>\n  (\\<forall>i\\<le>Suc (n1 + n2).\n      M (if i \\<le> n1 then g1 i else g2 (i - Suc n1))) \\<and>\n  (\\<exists>i<Suc (n1 + n2).\n      (if i < n1 then ty1 i else if i = n1 then ty else ty2 (i - Suc n1))\n      \\<in> tt)\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "have \"\\<exists> g n ty. ?seqtt s t tt g n ty\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g n ty.\n       s = g 0 \\<and>\n       t = g n \\<and>\n       0 < n \\<and>\n       (\\<forall>i<n.\n           (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty i)) \\<and>\n       (\\<forall>i\\<le>n. M (g i)) \\<and> (\\<exists>i<n. ty i \\<in> tt)", "by (intro exI, rule seq)"], ["proof (state)\nthis:\n  \\<exists>g n ty.\n     s = g 0 \\<and>\n     t = g n \\<and>\n     0 < n \\<and>\n     (\\<forall>i<n.\n         (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty i)) \\<and>\n     (\\<forall>i\\<le>n. M (g i)) \\<and> (\\<exists>i<n. ty i \\<in> tt)\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  \\<lbrakk>M ?s2;\n   (?s2, ?t2)\n   \\<in> A\\<^sup>* O\n         (\\<Union> (SN_rel_ext_step P Pw R Rw ` ?tt2) \\<inter> M') O\n         A\\<^sup>*\\<rbrakk>\n  \\<Longrightarrow> \\<exists>g n ty.\n                       ?s2 = g 0 \\<and>\n                       ?t2 = g n \\<and>\n                       0 < n \\<and>\n                       (\\<forall>i<n.\n                           (g i, g (Suc i))\n                           \\<in> SN_rel_ext_step P Pw R Rw (ty i)) \\<and>\n                       (\\<forall>i\\<le>n. M (g i)) \\<and>\n                       (\\<exists>i<n. ty i \\<in> ?tt2)\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "note A_tt_A = this"], ["proof (state)\nthis:\n  \\<lbrakk>M ?s2;\n   (?s2, ?t2)\n   \\<in> A\\<^sup>* O\n         (\\<Union> (SN_rel_ext_step P Pw R Rw ` ?tt2) \\<inter> M') O\n         A\\<^sup>*\\<rbrakk>\n  \\<Longrightarrow> \\<exists>g n ty.\n                       ?s2 = g 0 \\<and>\n                       ?t2 = g n \\<and>\n                       0 < n \\<and>\n                       (\\<forall>i<n.\n                           (g i, g (Suc i))\n                           \\<in> SN_rel_ext_step P Pw R Rw (ty i)) \\<and>\n                       (\\<forall>i\\<le>n. M (g i)) \\<and>\n                       (\\<exists>i<n. ty i \\<in> ?tt2)\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "let ?tycon = \"\\<lambda> ty1 ty2 tt ty' n. ty1 = ty2 \\<longrightarrow> (\\<exists>i < n. ty' i \\<in> tt)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "let ?seqt = \"\\<lambda> i ty g n ty'. f i = g 0 \\<and> f (Suc i) = g n \\<and> (\\<forall> j < n. (g j, g (Suc j)) \\<in> ?rel (ty' j)) \\<and> (\\<forall> j \\<le> n. M (g j)) \n                \\<and> (?tycon (ty i) top_s {top_s} ty' n)\n                \\<and> (?tycon (ty i) top_ns {top_s,top_ns} ty' n)\n                \\<and> (?tycon (ty i) normal_s {top_s,normal_s} ty' n)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "have \"\\<exists> g n ty'. ?seqt i ty g n ty'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "proof (cases \"ty i\")"], ["proof (state)\ngoal (4 subgoals):\n 1. ty i = top_s \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 2. ty i = top_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 3. ty i = normal_s \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 4. ty i = normal_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "case top_s"], ["proof (state)\nthis:\n  ty i = top_s\n\ngoal (4 subgoals):\n 1. ty i = top_s \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 2. ty i = top_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 3. ty i = normal_s \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 4. ty i = normal_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "from steps[of i, unfolded top_s]"], ["proof (chain)\npicking this:\n  (f i, f (Suc i))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n         (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n         (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*) (A\\<^sup>*)\n         top_s", "have \"(f i, f (Suc i)) \\<in> ?P\""], ["proof (prove)\nusing this:\n  (f i, f (Suc i))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n         (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n         (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*) (A\\<^sup>*)\n         top_s\n\ngoal (1 subgoal):\n 1. (f i, f (Suc i)) \\<in> A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (f i, f (Suc i)) \\<in> A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*\n\ngoal (4 subgoals):\n 1. ty i = top_s \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 2. ty i = top_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 3. ty i = normal_s \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 4. ty i = normal_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "from A_tt_A[OF min this[unfolded P]]"], ["proof (chain)\npicking this:\n  \\<exists>g n ty.\n     f i = g 0 \\<and>\n     f (Suc i) = g n \\<and>\n     0 < n \\<and>\n     (\\<forall>i<n.\n         (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty i)) \\<and>\n     (\\<forall>i\\<le>n. M (g i)) \\<and> (\\<exists>i<n. ty i \\<in> {top_s})", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>g n ty.\n     f i = g 0 \\<and>\n     f (Suc i) = g n \\<and>\n     0 < n \\<and>\n     (\\<forall>i<n.\n         (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty i)) \\<and>\n     (\\<forall>i\\<le>n. M (g i)) \\<and> (\\<exists>i<n. ty i \\<in> {top_s})\n\ngoal (1 subgoal):\n 1. \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "unfolding top_s"], ["proof (prove)\nusing this:\n  \\<exists>g n ty.\n     f i = g 0 \\<and>\n     f (Suc i) = g n \\<and>\n     0 < n \\<and>\n     (\\<forall>i<n.\n         (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty i)) \\<and>\n     (\\<forall>i\\<le>n. M (g i)) \\<and> (\\<exists>i<n. ty i \\<in> {top_s})\n\ngoal (1 subgoal):\n 1. \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (top_s = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (top_s = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (top_s = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "by auto"], ["proof (state)\nthis:\n  \\<exists>g n ty'.\n     f i = g 0 \\<and>\n     f (Suc i) = g n \\<and>\n     (\\<forall>j<n.\n         (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n     (\\<forall>j\\<le>n. M (g j)) \\<and>\n     (ty i = top_s \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n     (ty i = top_ns \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n     (ty i = normal_s \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n\ngoal (3 subgoals):\n 1. ty i = top_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 2. ty i = normal_s \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 3. ty i = normal_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. ty i = top_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 2. ty i = normal_s \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 3. ty i = normal_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "case top_ns"], ["proof (state)\nthis:\n  ty i = top_ns\n\ngoal (3 subgoals):\n 1. ty i = top_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 2. ty i = normal_s \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 3. ty i = normal_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "from steps[of i, unfolded top_ns]"], ["proof (chain)\npicking this:\n  (f i, f (Suc i))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n         (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n         (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*) (A\\<^sup>*)\n         top_ns", "have \"(f i, f (Suc i)) \\<in> ?Pw\""], ["proof (prove)\nusing this:\n  (f i, f (Suc i))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n         (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n         (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*) (A\\<^sup>*)\n         top_ns\n\ngoal (1 subgoal):\n 1. (f i, f (Suc i))\n    \\<in> A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (f i, f (Suc i))\n  \\<in> A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*\n\ngoal (3 subgoals):\n 1. ty i = top_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 2. ty i = normal_s \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 3. ty i = normal_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "from A_tt_A[OF min this[unfolded Pw]]"], ["proof (chain)\npicking this:\n  \\<exists>g n ty.\n     f i = g 0 \\<and>\n     f (Suc i) = g n \\<and>\n     0 < n \\<and>\n     (\\<forall>i<n.\n         (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty i)) \\<and>\n     (\\<forall>i\\<le>n. M (g i)) \\<and>\n     (\\<exists>i<n. ty i \\<in> {top_s, top_ns})", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>g n ty.\n     f i = g 0 \\<and>\n     f (Suc i) = g n \\<and>\n     0 < n \\<and>\n     (\\<forall>i<n.\n         (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty i)) \\<and>\n     (\\<forall>i\\<le>n. M (g i)) \\<and>\n     (\\<exists>i<n. ty i \\<in> {top_s, top_ns})\n\ngoal (1 subgoal):\n 1. \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "unfolding top_ns"], ["proof (prove)\nusing this:\n  \\<exists>g n ty.\n     f i = g 0 \\<and>\n     f (Suc i) = g n \\<and>\n     0 < n \\<and>\n     (\\<forall>i<n.\n         (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty i)) \\<and>\n     (\\<forall>i\\<le>n. M (g i)) \\<and>\n     (\\<exists>i<n. ty i \\<in> {top_s, top_ns})\n\ngoal (1 subgoal):\n 1. \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (top_ns = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (top_ns = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (top_ns = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "by auto"], ["proof (state)\nthis:\n  \\<exists>g n ty'.\n     f i = g 0 \\<and>\n     f (Suc i) = g n \\<and>\n     (\\<forall>j<n.\n         (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n     (\\<forall>j\\<le>n. M (g j)) \\<and>\n     (ty i = top_s \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n     (ty i = top_ns \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n     (ty i = normal_s \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n\ngoal (2 subgoals):\n 1. ty i = normal_s \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 2. ty i = normal_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. ty i = normal_s \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 2. ty i = normal_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "case normal_s"], ["proof (state)\nthis:\n  ty i = normal_s\n\ngoal (2 subgoals):\n 1. ty i = normal_s \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 2. ty i = normal_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "from steps[of i, unfolded normal_s]"], ["proof (chain)\npicking this:\n  (f i, f (Suc i))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n         (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n         (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*) (A\\<^sup>*)\n         normal_s", "have \"(f i, f (Suc i)) \\<in> ?R\""], ["proof (prove)\nusing this:\n  (f i, f (Suc i))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n         (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n         (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*) (A\\<^sup>*)\n         normal_s\n\ngoal (1 subgoal):\n 1. (f i, f (Suc i))\n    \\<in> A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (f i, f (Suc i))\n  \\<in> A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*\n\ngoal (2 subgoals):\n 1. ty i = normal_s \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n 2. ty i = normal_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "from A_tt_A[OF min this[unfolded R]]"], ["proof (chain)\npicking this:\n  \\<exists>g n ty.\n     f i = g 0 \\<and>\n     f (Suc i) = g n \\<and>\n     0 < n \\<and>\n     (\\<forall>i<n.\n         (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty i)) \\<and>\n     (\\<forall>i\\<le>n. M (g i)) \\<and>\n     (\\<exists>i<n. ty i \\<in> {top_s, normal_s})", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>g n ty.\n     f i = g 0 \\<and>\n     f (Suc i) = g n \\<and>\n     0 < n \\<and>\n     (\\<forall>i<n.\n         (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty i)) \\<and>\n     (\\<forall>i\\<le>n. M (g i)) \\<and>\n     (\\<exists>i<n. ty i \\<in> {top_s, normal_s})\n\ngoal (1 subgoal):\n 1. \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "unfolding normal_s"], ["proof (prove)\nusing this:\n  \\<exists>g n ty.\n     f i = g 0 \\<and>\n     f (Suc i) = g n \\<and>\n     0 < n \\<and>\n     (\\<forall>i<n.\n         (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty i)) \\<and>\n     (\\<forall>i\\<le>n. M (g i)) \\<and>\n     (\\<exists>i<n. ty i \\<in> {top_s, normal_s})\n\ngoal (1 subgoal):\n 1. \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (normal_s = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (normal_s = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (normal_s = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "by auto"], ["proof (state)\nthis:\n  \\<exists>g n ty'.\n     f i = g 0 \\<and>\n     f (Suc i) = g n \\<and>\n     (\\<forall>j<n.\n         (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n     (\\<forall>j\\<le>n. M (g j)) \\<and>\n     (ty i = top_s \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n     (ty i = top_ns \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n     (ty i = normal_s \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n\ngoal (1 subgoal):\n 1. ty i = normal_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ty i = normal_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "case normal_ns"], ["proof (state)\nthis:\n  ty i = normal_ns\n\ngoal (1 subgoal):\n 1. ty i = normal_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "from steps[of i, unfolded normal_ns]"], ["proof (chain)\npicking this:\n  (f i, f (Suc i))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n         (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n         (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*) (A\\<^sup>*)\n         normal_ns", "have \"(f i, f (Suc i)) \\<in> ?Rw\""], ["proof (prove)\nusing this:\n  (f i, f (Suc i))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n         (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n         (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*) (A\\<^sup>*)\n         normal_ns\n\ngoal (1 subgoal):\n 1. (f i, f (Suc i)) \\<in> A\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (f i, f (Suc i)) \\<in> A\\<^sup>*\n\ngoal (1 subgoal):\n 1. ty i = normal_ns \\<Longrightarrow>\n    \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "from A_steps[OF min this]"], ["proof (chain)\npicking this:\n  \\<exists>g n tt.\n     f i = g 0 \\<and>\n     f (Suc i) = g n \\<and>\n     (\\<forall>i<n.\n         (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (tt i)) \\<and>\n     (\\<forall>i\\<le>n. M (g i))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>g n tt.\n     f i = g 0 \\<and>\n     f (Suc i) = g n \\<and>\n     (\\<forall>i<n.\n         (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (tt i)) \\<and>\n     (\\<forall>i\\<le>n. M (g i))\n\ngoal (1 subgoal):\n 1. \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "unfolding normal_ns"], ["proof (prove)\nusing this:\n  \\<exists>g n tt.\n     f i = g 0 \\<and>\n     f (Suc i) = g n \\<and>\n     (\\<forall>i<n.\n         (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (tt i)) \\<and>\n     (\\<forall>i\\<le>n. M (g i))\n\ngoal (1 subgoal):\n 1. \\<exists>g n ty'.\n       f i = g 0 \\<and>\n       f (Suc i) = g n \\<and>\n       (\\<forall>j<n.\n           (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n       (\\<forall>j\\<le>n. M (g j)) \\<and>\n       (normal_ns = top_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n       (normal_ns = top_ns \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n       (normal_ns = normal_s \\<longrightarrow>\n        (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "by auto"], ["proof (state)\nthis:\n  \\<exists>g n ty'.\n     f i = g 0 \\<and>\n     f (Suc i) = g n \\<and>\n     (\\<forall>j<n.\n         (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n     (\\<forall>j\\<le>n. M (g j)) \\<and>\n     (ty i = top_s \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n     (ty i = top_ns \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n     (ty i = normal_s \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>g n ty'.\n     f i = g 0 \\<and>\n     f (Suc i) = g n \\<and>\n     (\\<forall>j<n.\n         (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n     (\\<forall>j\\<le>n. M (g j)) \\<and>\n     (ty i = top_s \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n     (ty i = top_ns \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n     (ty i = normal_s \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  \\<exists>g n ty'.\n     f ?i3 = g 0 \\<and>\n     f (Suc ?i3) = g n \\<and>\n     (\\<forall>j<n.\n         (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n     (\\<forall>j\\<le>n. M (g j)) \\<and>\n     (ty ?i3 = top_s \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n     (ty ?i3 = top_ns \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n     (ty ?i3 = normal_s \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "hence \"\\<forall> i. \\<exists> g n ty'. ?seqt i ty g n ty'\""], ["proof (prove)\nusing this:\n  \\<exists>g n ty'.\n     f ?i3 = g 0 \\<and>\n     f (Suc ?i3) = g n \\<and>\n     (\\<forall>j<n.\n         (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n     (\\<forall>j\\<le>n. M (g j)) \\<and>\n     (ty ?i3 = top_s \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n     (ty ?i3 = top_ns \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n     (ty ?i3 = normal_s \\<longrightarrow>\n      (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>g n ty'.\n          f i = g 0 \\<and>\n          f (Suc i) = g n \\<and>\n          (\\<forall>j<n.\n              (g j, g (Suc j))\n              \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n          (\\<forall>j\\<le>n. M (g j)) \\<and>\n          (ty i = top_s \\<longrightarrow>\n           (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n          (ty i = top_ns \\<longrightarrow>\n           (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n          (ty i = normal_s \\<longrightarrow>\n           (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "by auto"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<exists>g n ty'.\n        f i = g 0 \\<and>\n        f (Suc i) = g n \\<and>\n        (\\<forall>j<n.\n            (g j, g (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n        (\\<forall>j\\<le>n. M (g j)) \\<and>\n        (ty i = top_s \\<longrightarrow>\n         (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n        (ty i = top_ns \\<longrightarrow>\n         (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n        (ty i = normal_s \\<longrightarrow>\n         (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "from choice[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>fa.\n     \\<forall>x.\n        \\<exists>n ty'.\n           f x = fa x 0 \\<and>\n           f (Suc x) = fa x n \\<and>\n           (\\<forall>j<n.\n               (fa x j, fa x (Suc j))\n               \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n           (\\<forall>j\\<le>n. M (fa x j)) \\<and>\n           (ty x = top_s \\<longrightarrow>\n            (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n           (ty x = top_ns \\<longrightarrow>\n            (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n           (ty x = normal_s \\<longrightarrow>\n            (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))", "obtain g where \"\\<forall> i. \\<exists> n ty'. ?seqt i ty (g i) n ty'\""], ["proof (prove)\nusing this:\n  \\<exists>fa.\n     \\<forall>x.\n        \\<exists>n ty'.\n           f x = fa x 0 \\<and>\n           f (Suc x) = fa x n \\<and>\n           (\\<forall>j<n.\n               (fa x j, fa x (Suc j))\n               \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n           (\\<forall>j\\<le>n. M (fa x j)) \\<and>\n           (ty x = top_s \\<longrightarrow>\n            (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n           (ty x = top_ns \\<longrightarrow>\n            (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n           (ty x = normal_s \\<longrightarrow>\n            (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<forall>i.\n           \\<exists>n ty'.\n              f i = g i 0 \\<and>\n              f (Suc i) = g i n \\<and>\n              (\\<forall>j<n.\n                  (g i j, g i (Suc j))\n                  \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n              (\\<forall>j\\<le>n. M (g i j)) \\<and>\n              (ty i = top_s \\<longrightarrow>\n               (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n              (ty i = top_ns \\<longrightarrow>\n               (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n              (ty i = normal_s \\<longrightarrow>\n               (\\<exists>i<n.\n                   ty' i \\<in> {top_s, normal_s})) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<exists>n ty'.\n        f i = g i 0 \\<and>\n        f (Suc i) = g i n \\<and>\n        (\\<forall>j<n.\n            (g i j, g i (Suc j))\n            \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n        (\\<forall>j\\<le>n. M (g i j)) \\<and>\n        (ty i = top_s \\<longrightarrow>\n         (\\<exists>i<n. ty' i \\<in> {top_s})) \\<and>\n        (ty i = top_ns \\<longrightarrow>\n         (\\<exists>i<n. ty' i \\<in> {top_s, top_ns})) \\<and>\n        (ty i = normal_s \\<longrightarrow>\n         (\\<exists>i<n. ty' i \\<in> {top_s, normal_s}))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "from choice[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>fa.\n     \\<forall>x.\n        \\<exists>ty'.\n           f x = g x 0 \\<and>\n           f (Suc x) = g x (fa x) \\<and>\n           (\\<forall>j<fa x.\n               (g x j, g x (Suc j))\n               \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n           (\\<forall>j\\<le>fa x. M (g x j)) \\<and>\n           (ty x = top_s \\<longrightarrow>\n            (\\<exists>i<fa x. ty' i \\<in> {top_s})) \\<and>\n           (ty x = top_ns \\<longrightarrow>\n            (\\<exists>i<fa x. ty' i \\<in> {top_s, top_ns})) \\<and>\n           (ty x = normal_s \\<longrightarrow>\n            (\\<exists>i<fa x. ty' i \\<in> {top_s, normal_s}))", "obtain n where \"\\<forall> i. \\<exists> ty'. ?seqt i ty (g i) (n i) ty'\""], ["proof (prove)\nusing this:\n  \\<exists>fa.\n     \\<forall>x.\n        \\<exists>ty'.\n           f x = g x 0 \\<and>\n           f (Suc x) = g x (fa x) \\<and>\n           (\\<forall>j<fa x.\n               (g x j, g x (Suc j))\n               \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n           (\\<forall>j\\<le>fa x. M (g x j)) \\<and>\n           (ty x = top_s \\<longrightarrow>\n            (\\<exists>i<fa x. ty' i \\<in> {top_s})) \\<and>\n           (ty x = top_ns \\<longrightarrow>\n            (\\<exists>i<fa x. ty' i \\<in> {top_s, top_ns})) \\<and>\n           (ty x = normal_s \\<longrightarrow>\n            (\\<exists>i<fa x. ty' i \\<in> {top_s, normal_s}))\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<forall>i.\n           \\<exists>ty'.\n              f i = g i 0 \\<and>\n              f (Suc i) = g i (n i) \\<and>\n              (\\<forall>j<n i.\n                  (g i j, g i (Suc j))\n                  \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n              (\\<forall>j\\<le>n i. M (g i j)) \\<and>\n              (ty i = top_s \\<longrightarrow>\n               (\\<exists>ia<n i. ty' ia \\<in> {top_s})) \\<and>\n              (ty i = top_ns \\<longrightarrow>\n               (\\<exists>ia<n i. ty' ia \\<in> {top_s, top_ns})) \\<and>\n              (ty i = normal_s \\<longrightarrow>\n               (\\<exists>ia<n i.\n                   ty' ia \\<in> {top_s, normal_s})) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<exists>ty'.\n        f i = g i 0 \\<and>\n        f (Suc i) = g i (n i) \\<and>\n        (\\<forall>j<n i.\n            (g i j, g i (Suc j))\n            \\<in> SN_rel_ext_step P Pw R Rw (ty' j)) \\<and>\n        (\\<forall>j\\<le>n i. M (g i j)) \\<and>\n        (ty i = top_s \\<longrightarrow>\n         (\\<exists>ia<n i. ty' ia \\<in> {top_s})) \\<and>\n        (ty i = top_ns \\<longrightarrow>\n         (\\<exists>ia<n i. ty' ia \\<in> {top_s, top_ns})) \\<and>\n        (ty i = normal_s \\<longrightarrow>\n         (\\<exists>ia<n i. ty' ia \\<in> {top_s, normal_s}))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "from choice[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>fa.\n     \\<forall>x.\n        f x = g x 0 \\<and>\n        f (Suc x) = g x (n x) \\<and>\n        (\\<forall>j<n x.\n            (g x j, g x (Suc j))\n            \\<in> SN_rel_ext_step P Pw R Rw (fa x j)) \\<and>\n        (\\<forall>j\\<le>n x. M (g x j)) \\<and>\n        (ty x = top_s \\<longrightarrow>\n         (\\<exists>i<n x. fa x i \\<in> {top_s})) \\<and>\n        (ty x = top_ns \\<longrightarrow>\n         (\\<exists>i<n x. fa x i \\<in> {top_s, top_ns})) \\<and>\n        (ty x = normal_s \\<longrightarrow>\n         (\\<exists>i<n x. fa x i \\<in> {top_s, normal_s}))", "obtain ty' where \"\\<forall> i. ?seqt i ty (g i) (n i) (ty' i)\""], ["proof (prove)\nusing this:\n  \\<exists>fa.\n     \\<forall>x.\n        f x = g x 0 \\<and>\n        f (Suc x) = g x (n x) \\<and>\n        (\\<forall>j<n x.\n            (g x j, g x (Suc j))\n            \\<in> SN_rel_ext_step P Pw R Rw (fa x j)) \\<and>\n        (\\<forall>j\\<le>n x. M (g x j)) \\<and>\n        (ty x = top_s \\<longrightarrow>\n         (\\<exists>i<n x. fa x i \\<in> {top_s})) \\<and>\n        (ty x = top_ns \\<longrightarrow>\n         (\\<exists>i<n x. fa x i \\<in> {top_s, top_ns})) \\<and>\n        (ty x = normal_s \\<longrightarrow>\n         (\\<exists>i<n x. fa x i \\<in> {top_s, normal_s}))\n\ngoal (1 subgoal):\n 1. (\\<And>ty'.\n        \\<forall>i.\n           f i = g i 0 \\<and>\n           f (Suc i) = g i (n i) \\<and>\n           (\\<forall>j<n i.\n               (g i j, g i (Suc j))\n               \\<in> SN_rel_ext_step P Pw R Rw (ty' i j)) \\<and>\n           (\\<forall>j\\<le>n i. M (g i j)) \\<and>\n           (ty i = top_s \\<longrightarrow>\n            (\\<exists>ia<n i. ty' i ia \\<in> {top_s})) \\<and>\n           (ty i = top_ns \\<longrightarrow>\n            (\\<exists>ia<n i. ty' i ia \\<in> {top_s, top_ns})) \\<and>\n           (ty i = normal_s \\<longrightarrow>\n            (\\<exists>ia<n i.\n                ty' i ia \\<in> {top_s, normal_s})) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>i.\n     f i = g i 0 \\<and>\n     f (Suc i) = g i (n i) \\<and>\n     (\\<forall>j<n i.\n         (g i j, g i (Suc j))\n         \\<in> SN_rel_ext_step P Pw R Rw (ty' i j)) \\<and>\n     (\\<forall>j\\<le>n i. M (g i j)) \\<and>\n     (ty i = top_s \\<longrightarrow>\n      (\\<exists>ia<n i. ty' i ia \\<in> {top_s})) \\<and>\n     (ty i = top_ns \\<longrightarrow>\n      (\\<exists>ia<n i. ty' i ia \\<in> {top_s, top_ns})) \\<and>\n     (ty i = normal_s \\<longrightarrow>\n      (\\<exists>ia<n i. ty' i ia \\<in> {top_s, normal_s}))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "hence partial: \"\\<And> i. ?seqt i ty (g i) (n i) (ty' i)\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     f i = g i 0 \\<and>\n     f (Suc i) = g i (n i) \\<and>\n     (\\<forall>j<n i.\n         (g i j, g i (Suc j))\n         \\<in> SN_rel_ext_step P Pw R Rw (ty' i j)) \\<and>\n     (\\<forall>j\\<le>n i. M (g i j)) \\<and>\n     (ty i = top_s \\<longrightarrow>\n      (\\<exists>ia<n i. ty' i ia \\<in> {top_s})) \\<and>\n     (ty i = top_ns \\<longrightarrow>\n      (\\<exists>ia<n i. ty' i ia \\<in> {top_s, top_ns})) \\<and>\n     (ty i = normal_s \\<longrightarrow>\n      (\\<exists>ia<n i. ty' i ia \\<in> {top_s, normal_s}))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       f i = g i 0 \\<and>\n       f (Suc i) = g i (n i) \\<and>\n       (\\<forall>j<n i.\n           (g i j, g i (Suc j))\n           \\<in> SN_rel_ext_step P Pw R Rw (ty' i j)) \\<and>\n       (\\<forall>j\\<le>n i. M (g i j)) \\<and>\n       (ty i = top_s \\<longrightarrow>\n        (\\<exists>ia<n i. ty' i ia \\<in> {top_s})) \\<and>\n       (ty i = top_ns \\<longrightarrow>\n        (\\<exists>ia<n i. ty' i ia \\<in> {top_s, top_ns})) \\<and>\n       (ty i = normal_s \\<longrightarrow>\n        (\\<exists>ia<n i. ty' i ia \\<in> {top_s, normal_s}))", ".."], ["proof (state)\nthis:\n  f ?i1 = g ?i1 0 \\<and>\n  f (Suc ?i1) = g ?i1 (n ?i1) \\<and>\n  (\\<forall>j<n ?i1.\n      (g ?i1 j, g ?i1 (Suc j))\n      \\<in> SN_rel_ext_step P Pw R Rw (ty' ?i1 j)) \\<and>\n  (\\<forall>j\\<le>n ?i1. M (g ?i1 j)) \\<and>\n  (ty ?i1 = top_s \\<longrightarrow>\n   (\\<exists>i<n ?i1. ty' ?i1 i \\<in> {top_s})) \\<and>\n  (ty ?i1 = top_ns \\<longrightarrow>\n   (\\<exists>i<n ?i1. ty' ?i1 i \\<in> {top_s, top_ns})) \\<and>\n  (ty ?i1 = normal_s \\<longrightarrow>\n   (\\<exists>i<n ?i1. ty' ?i1 i \\<in> {top_s, normal_s}))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "(* it remains to concatenate all these finite sequences to an infinite one *)"], ["proof (state)\nthis:\n  f ?i1 = g ?i1 0 \\<and>\n  f (Suc ?i1) = g ?i1 (n ?i1) \\<and>\n  (\\<forall>j<n ?i1.\n      (g ?i1 j, g ?i1 (Suc j))\n      \\<in> SN_rel_ext_step P Pw R Rw (ty' ?i1 j)) \\<and>\n  (\\<forall>j\\<le>n ?i1. M (g ?i1 j)) \\<and>\n  (ty ?i1 = top_s \\<longrightarrow>\n   (\\<exists>i<n ?i1. ty' ?i1 i \\<in> {top_s})) \\<and>\n  (ty ?i1 = top_ns \\<longrightarrow>\n   (\\<exists>i<n ?i1. ty' ?i1 i \\<in> {top_s, top_ns})) \\<and>\n  (ty ?i1 = normal_s \\<longrightarrow>\n   (\\<exists>i<n ?i1. ty' ?i1 i \\<in> {top_s, normal_s}))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "let ?ind = \"inf_concat n\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "let ?g = \"\\<lambda> k. (\\<lambda> (i,j). g i j) (?ind k)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "let ?ty = \"\\<lambda> k. (\\<lambda> (i,j). ty' i j) (?ind k)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "have inf: \"INFM i. 0 < n i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>\\<infinity>i. 0 < n i", "unfolding INFM_nat_le"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m. \\<exists>na\\<ge>m. 0 < n na", "proof (intro allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>na\\<ge>m. 0 < n na", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>na\\<ge>m. 0 < n na", "from inf1[unfolded INFM_nat_le]"], ["proof (chain)\npicking this:\n  \\<forall>m. \\<exists>n\\<ge>m. ty n \\<in> {top_s, top_ns}", "obtain k where k: \"k \\<ge> m\" and ty: \"ty k \\<in> {top_s, top_ns}\""], ["proof (prove)\nusing this:\n  \\<forall>m. \\<exists>n\\<ge>m. ty n \\<in> {top_s, top_ns}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>m \\<le> k; ty k \\<in> {top_s, top_ns}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  m \\<le> k\n  ty k \\<in> {top_s, top_ns}\n\ngoal (1 subgoal):\n 1. \\<And>m. \\<exists>na\\<ge>m. 0 < n na", "show \"\\<exists> k \\<ge> m. 0 < n k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k\\<ge>m. 0 < n k", "proof (intro exI conjI, rule k)"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < n k", "from partial[of k] ty"], ["proof (chain)\npicking this:\n  f k = g k 0 \\<and>\n  f (Suc k) = g k (n k) \\<and>\n  (\\<forall>j<n k.\n      (g k j, g k (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' k j)) \\<and>\n  (\\<forall>j\\<le>n k. M (g k j)) \\<and>\n  (ty k = top_s \\<longrightarrow>\n   (\\<exists>i<n k. ty' k i \\<in> {top_s})) \\<and>\n  (ty k = top_ns \\<longrightarrow>\n   (\\<exists>i<n k. ty' k i \\<in> {top_s, top_ns})) \\<and>\n  (ty k = normal_s \\<longrightarrow>\n   (\\<exists>i<n k. ty' k i \\<in> {top_s, normal_s}))\n  ty k \\<in> {top_s, top_ns}", "show \"0 < n k\""], ["proof (prove)\nusing this:\n  f k = g k 0 \\<and>\n  f (Suc k) = g k (n k) \\<and>\n  (\\<forall>j<n k.\n      (g k j, g k (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' k j)) \\<and>\n  (\\<forall>j\\<le>n k. M (g k j)) \\<and>\n  (ty k = top_s \\<longrightarrow>\n   (\\<exists>i<n k. ty' k i \\<in> {top_s})) \\<and>\n  (ty k = top_ns \\<longrightarrow>\n   (\\<exists>i<n k. ty' k i \\<in> {top_s, top_ns})) \\<and>\n  (ty k = normal_s \\<longrightarrow>\n   (\\<exists>i<n k. ty' k i \\<in> {top_s, normal_s}))\n  ty k \\<in> {top_s, top_ns}\n\ngoal (1 subgoal):\n 1. 0 < n k", "by (cases \"n k\", auto)"], ["proof (state)\nthis:\n  0 < n k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>k\\<ge>m. 0 < n k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>\\<^sub>\\<infinity>i. 0 < n i\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "note bounds = inf_concat_bounds[OF inf]"], ["proof (state)\nthis:\n  inf_concat n ?k = (?i, ?j) \\<Longrightarrow> ?j < n ?i\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "note inf_Suc = inf_concat_Suc[OF inf]"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>i. ?f i (n i) = ?f (Suc i) 0; inf_concat n ?k = (?i, ?j);\n   inf_concat n (Suc ?k) = (?i', ?j')\\<rbrakk>\n  \\<Longrightarrow> ?f ?i' ?j' = ?f ?i (Suc ?j)\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "note inf_mono = inf_concat_mono[OF inf]"], ["proof (state)\nthis:\n  \\<lbrakk>inf_concat n ?k = (?i, ?j); inf_concat n ?k' = (?i', ?j');\n   ?i < ?i'\\<rbrakk>\n  \\<Longrightarrow> ?k < ?k'\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "have \"\\<not> SN_rel_ext P Pw R Rw M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M", "unfolding SN_rel_ext_def simp_thms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f t.\n       (\\<forall>i.\n           (f i, f (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (t i)) \\<and>\n       (\\<forall>i. M (f i)) \\<and>\n       (\\<exists>\\<^sub>\\<infinity>i. t i \\<in> {top_s, top_ns}) \\<and>\n       (\\<exists>\\<^sub>\\<infinity>i. t i \\<in> {top_s, normal_s})", "proof (rule exI[of _ ?g], rule exI[of _ ?ty], intro conjI allI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> g i j,\n        case inf_concat n (Suc i) of (i, j) \\<Rightarrow> g i j)\n       \\<in> SN_rel_ext_step P Pw R Rw\n              (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n 2. \\<And>i. M (case inf_concat n i of (i, j) \\<Rightarrow> g i j)\n 3. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, top_ns}\n 4. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, normal_s}", "fix k"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> g i j,\n        case inf_concat n (Suc i) of (i, j) \\<Rightarrow> g i j)\n       \\<in> SN_rel_ext_step P Pw R Rw\n              (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n 2. \\<And>i. M (case inf_concat n i of (i, j) \\<Rightarrow> g i j)\n 3. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, top_ns}\n 4. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, normal_s}", "obtain i j where ik: \"?ind k = (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        inf_concat n k = (i, j) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  inf_concat n k = (i, j)\n\ngoal (4 subgoals):\n 1. \\<And>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> g i j,\n        case inf_concat n (Suc i) of (i, j) \\<Rightarrow> g i j)\n       \\<in> SN_rel_ext_step P Pw R Rw\n              (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n 2. \\<And>i. M (case inf_concat n i of (i, j) \\<Rightarrow> g i j)\n 3. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, top_ns}\n 4. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, normal_s}", "from bounds[OF this]"], ["proof (chain)\npicking this:\n  j < n i", "have j: \"j < n i\""], ["proof (prove)\nusing this:\n  j < n i\n\ngoal (1 subgoal):\n 1. j < n i", "by auto"], ["proof (state)\nthis:\n  j < n i\n\ngoal (4 subgoals):\n 1. \\<And>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> g i j,\n        case inf_concat n (Suc i) of (i, j) \\<Rightarrow> g i j)\n       \\<in> SN_rel_ext_step P Pw R Rw\n              (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n 2. \\<And>i. M (case inf_concat n i of (i, j) \\<Rightarrow> g i j)\n 3. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, top_ns}\n 4. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, normal_s}", "show \"M (?g k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M (case inf_concat n k of (i, j) \\<Rightarrow> g i j)", "unfolding ik"], ["proof (prove)\ngoal (1 subgoal):\n 1. M (case (i, j) of (i, j) \\<Rightarrow> g i j)", "using partial[of i] j"], ["proof (prove)\nusing this:\n  f i = g i 0 \\<and>\n  f (Suc i) = g i (n i) \\<and>\n  (\\<forall>j<n i.\n      (g i j, g i (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' i j)) \\<and>\n  (\\<forall>j\\<le>n i. M (g i j)) \\<and>\n  (ty i = top_s \\<longrightarrow>\n   (\\<exists>ia<n i. ty' i ia \\<in> {top_s})) \\<and>\n  (ty i = top_ns \\<longrightarrow>\n   (\\<exists>ia<n i. ty' i ia \\<in> {top_s, top_ns})) \\<and>\n  (ty i = normal_s \\<longrightarrow>\n   (\\<exists>ia<n i. ty' i ia \\<in> {top_s, normal_s}))\n  j < n i\n\ngoal (1 subgoal):\n 1. M (case (i, j) of (i, j) \\<Rightarrow> g i j)", "by auto"], ["proof (state)\nthis:\n  M (case inf_concat n k of (i, j) \\<Rightarrow> g i j)\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> g i j,\n        case inf_concat n (Suc i) of (i, j) \\<Rightarrow> g i j)\n       \\<in> SN_rel_ext_step P Pw R Rw\n              (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n 2. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, top_ns}\n 3. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, normal_s}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> g i j,\n        case inf_concat n (Suc i) of (i, j) \\<Rightarrow> g i j)\n       \\<in> SN_rel_ext_step P Pw R Rw\n              (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n 2. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, top_ns}\n 3. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, normal_s}", "fix k"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> g i j,\n        case inf_concat n (Suc i) of (i, j) \\<Rightarrow> g i j)\n       \\<in> SN_rel_ext_step P Pw R Rw\n              (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n 2. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, top_ns}\n 3. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, normal_s}", "obtain i j where ik: \"?ind k = (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        inf_concat n k = (i, j) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  inf_concat n k = (i, j)\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> g i j,\n        case inf_concat n (Suc i) of (i, j) \\<Rightarrow> g i j)\n       \\<in> SN_rel_ext_step P Pw R Rw\n              (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n 2. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, top_ns}\n 3. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, normal_s}", "from bounds[OF this]"], ["proof (chain)\npicking this:\n  j < n i", "have j: \"j < n i\""], ["proof (prove)\nusing this:\n  j < n i\n\ngoal (1 subgoal):\n 1. j < n i", "by auto"], ["proof (state)\nthis:\n  j < n i\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> g i j,\n        case inf_concat n (Suc i) of (i, j) \\<Rightarrow> g i j)\n       \\<in> SN_rel_ext_step P Pw R Rw\n              (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n 2. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, top_ns}\n 3. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, normal_s}", "from partial[of i] j"], ["proof (chain)\npicking this:\n  f i = g i 0 \\<and>\n  f (Suc i) = g i (n i) \\<and>\n  (\\<forall>j<n i.\n      (g i j, g i (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' i j)) \\<and>\n  (\\<forall>j\\<le>n i. M (g i j)) \\<and>\n  (ty i = top_s \\<longrightarrow>\n   (\\<exists>ia<n i. ty' i ia \\<in> {top_s})) \\<and>\n  (ty i = top_ns \\<longrightarrow>\n   (\\<exists>ia<n i. ty' i ia \\<in> {top_s, top_ns})) \\<and>\n  (ty i = normal_s \\<longrightarrow>\n   (\\<exists>ia<n i. ty' i ia \\<in> {top_s, normal_s}))\n  j < n i", "have step: \"(g i j, g i (Suc j)) \\<in> ?rel (ty' i j)\""], ["proof (prove)\nusing this:\n  f i = g i 0 \\<and>\n  f (Suc i) = g i (n i) \\<and>\n  (\\<forall>j<n i.\n      (g i j, g i (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' i j)) \\<and>\n  (\\<forall>j\\<le>n i. M (g i j)) \\<and>\n  (ty i = top_s \\<longrightarrow>\n   (\\<exists>ia<n i. ty' i ia \\<in> {top_s})) \\<and>\n  (ty i = top_ns \\<longrightarrow>\n   (\\<exists>ia<n i. ty' i ia \\<in> {top_s, top_ns})) \\<and>\n  (ty i = normal_s \\<longrightarrow>\n   (\\<exists>ia<n i. ty' i ia \\<in> {top_s, normal_s}))\n  j < n i\n\ngoal (1 subgoal):\n 1. (g i j, g i (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' i j)", "by auto"], ["proof (state)\nthis:\n  (g i j, g i (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' i j)\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> g i j,\n        case inf_concat n (Suc i) of (i, j) \\<Rightarrow> g i j)\n       \\<in> SN_rel_ext_step P Pw R Rw\n              (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n 2. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, top_ns}\n 3. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, normal_s}", "obtain i' j' where isk: \"?ind (Suc k) = (i',j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i' j'.\n        inf_concat n (Suc k) = (i', j') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  inf_concat n (Suc k) = (i', j')\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> g i j,\n        case inf_concat n (Suc i) of (i, j) \\<Rightarrow> g i j)\n       \\<in> SN_rel_ext_step P Pw R Rw\n              (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n 2. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, top_ns}\n 3. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, normal_s}", "have i'j': \"g i' j' = g i (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g i' j' = g i (Suc j)", "proof (rule inf_Suc[OF _ ik isk])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. g i (n i) = g (Suc i) 0", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. g i (n i) = g (Suc i) 0", "from partial[of i]"], ["proof (chain)\npicking this:\n  f i = g i 0 \\<and>\n  f (Suc i) = g i (n i) \\<and>\n  (\\<forall>j<n i.\n      (g i j, g i (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' i j)) \\<and>\n  (\\<forall>j\\<le>n i. M (g i j)) \\<and>\n  (ty i = top_s \\<longrightarrow>\n   (\\<exists>i<n i. ty' i i \\<in> {top_s})) \\<and>\n  (ty i = top_ns \\<longrightarrow>\n   (\\<exists>i<n i. ty' i i \\<in> {top_s, top_ns})) \\<and>\n  (ty i = normal_s \\<longrightarrow>\n   (\\<exists>i<n i. ty' i i \\<in> {top_s, normal_s}))", "have \"g i (n i) = f (Suc i)\""], ["proof (prove)\nusing this:\n  f i = g i 0 \\<and>\n  f (Suc i) = g i (n i) \\<and>\n  (\\<forall>j<n i.\n      (g i j, g i (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' i j)) \\<and>\n  (\\<forall>j\\<le>n i. M (g i j)) \\<and>\n  (ty i = top_s \\<longrightarrow>\n   (\\<exists>i<n i. ty' i i \\<in> {top_s})) \\<and>\n  (ty i = top_ns \\<longrightarrow>\n   (\\<exists>i<n i. ty' i i \\<in> {top_s, top_ns})) \\<and>\n  (ty i = normal_s \\<longrightarrow>\n   (\\<exists>i<n i. ty' i i \\<in> {top_s, normal_s}))\n\ngoal (1 subgoal):\n 1. g i (n i) = f (Suc i)", "by simp"], ["proof (state)\nthis:\n  g i (n i) = f (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>i. g i (n i) = g (Suc i) 0", "also"], ["proof (state)\nthis:\n  g i (n i) = f (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>i. g i (n i) = g (Suc i) 0", "have \"... = g (Suc i) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (Suc i) = g (Suc i) 0", "using partial[of \"Suc i\"]"], ["proof (prove)\nusing this:\n  f (Suc i) = g (Suc i) 0 \\<and>\n  f (Suc (Suc i)) = g (Suc i) (n (Suc i)) \\<and>\n  (\\<forall>j<n (Suc i).\n      (g (Suc i) j, g (Suc i) (Suc j))\n      \\<in> SN_rel_ext_step P Pw R Rw (ty' (Suc i) j)) \\<and>\n  (\\<forall>j\\<le>n (Suc i). M (g (Suc i) j)) \\<and>\n  (ty (Suc i) = top_s \\<longrightarrow>\n   (\\<exists>i<n (Suc i). ty' (Suc i) i \\<in> {top_s})) \\<and>\n  (ty (Suc i) = top_ns \\<longrightarrow>\n   (\\<exists>i<n (Suc i). ty' (Suc i) i \\<in> {top_s, top_ns})) \\<and>\n  (ty (Suc i) = normal_s \\<longrightarrow>\n   (\\<exists>i<n (Suc i). ty' (Suc i) i \\<in> {top_s, normal_s}))\n\ngoal (1 subgoal):\n 1. f (Suc i) = g (Suc i) 0", "by simp"], ["proof (state)\nthis:\n  f (Suc i) = g (Suc i) 0\n\ngoal (1 subgoal):\n 1. \\<And>i. g i (n i) = g (Suc i) 0", "finally"], ["proof (chain)\npicking this:\n  g i (n i) = g (Suc i) 0", "show \"g i (n i) = g (Suc i) 0\""], ["proof (prove)\nusing this:\n  g i (n i) = g (Suc i) 0\n\ngoal (1 subgoal):\n 1. g i (n i) = g (Suc i) 0", "."], ["proof (state)\nthis:\n  g i (n i) = g (Suc i) 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g i' j' = g i (Suc j)\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> g i j,\n        case inf_concat n (Suc i) of (i, j) \\<Rightarrow> g i j)\n       \\<in> SN_rel_ext_step P Pw R Rw\n              (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n 2. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, top_ns}\n 3. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, normal_s}", "show \"(?g k, ?g (Suc k)) \\<in> ?rel (?ty k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (case inf_concat n k of (i, j) \\<Rightarrow> g i j,\n     case inf_concat n (Suc k) of (i, j) \\<Rightarrow> g i j)\n    \\<in> SN_rel_ext_step P Pw R Rw\n           (case inf_concat n k of (i, j) \\<Rightarrow> ty' i j)", "unfolding ik isk split i'j'"], ["proof (prove)\ngoal (1 subgoal):\n 1. (g i j, g i (Suc j)) \\<in> SN_rel_ext_step P Pw R Rw (ty' i j)", "by (rule step)"], ["proof (state)\nthis:\n  (case inf_concat n k of (i, j) \\<Rightarrow> g i j,\n   case inf_concat n (Suc k) of (i, j) \\<Rightarrow> g i j)\n  \\<in> SN_rel_ext_step P Pw R Rw\n         (case inf_concat n k of (i, j) \\<Rightarrow> ty' i j)\n\ngoal (2 subgoals):\n 1. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, top_ns}\n 2. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, normal_s}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, top_ns}\n 2. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, normal_s}", "show \"INFM i. ?ty i \\<in> {top_s, top_ns}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, top_ns}", "unfolding INFM_nat_le"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m.\n       \\<exists>na\\<ge>m.\n          (case inf_concat n na of (x, xa) \\<Rightarrow> ty' x xa)\n          \\<in> {top_s, top_ns}", "proof (intro allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>na\\<ge>m.\n          (case inf_concat n na of (x, xa) \\<Rightarrow> ty' x xa)\n          \\<in> {top_s, top_ns}", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>na\\<ge>m.\n          (case inf_concat n na of (x, xa) \\<Rightarrow> ty' x xa)\n          \\<in> {top_s, top_ns}", "obtain i j where ik: \"?ind k = (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        inf_concat n k = (i, j) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  inf_concat n k = (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>na\\<ge>m.\n          (case inf_concat n na of (x, xa) \\<Rightarrow> ty' x xa)\n          \\<in> {top_s, top_ns}", "from inf1[unfolded INFM_nat]"], ["proof (chain)\npicking this:\n  \\<forall>m. \\<exists>n>m. ty n \\<in> {top_s, top_ns}", "obtain i' where i': \"i' > i\" and ty: \"ty i' \\<in> {top_s, top_ns}\""], ["proof (prove)\nusing this:\n  \\<forall>m. \\<exists>n>m. ty n \\<in> {top_s, top_ns}\n\ngoal (1 subgoal):\n 1. (\\<And>i'.\n        \\<lbrakk>i < i'; ty i' \\<in> {top_s, top_ns}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i < i'\n  ty i' \\<in> {top_s, top_ns}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>na\\<ge>m.\n          (case inf_concat n na of (x, xa) \\<Rightarrow> ty' x xa)\n          \\<in> {top_s, top_ns}", "from partial[of i'] ty"], ["proof (chain)\npicking this:\n  f i' = g i' 0 \\<and>\n  f (Suc i') = g i' (n i') \\<and>\n  (\\<forall>j<n i'.\n      (g i' j, g i' (Suc j))\n      \\<in> SN_rel_ext_step P Pw R Rw (ty' i' j)) \\<and>\n  (\\<forall>j\\<le>n i'. M (g i' j)) \\<and>\n  (ty i' = top_s \\<longrightarrow>\n   (\\<exists>i<n i'. ty' i' i \\<in> {top_s})) \\<and>\n  (ty i' = top_ns \\<longrightarrow>\n   (\\<exists>i<n i'. ty' i' i \\<in> {top_s, top_ns})) \\<and>\n  (ty i' = normal_s \\<longrightarrow>\n   (\\<exists>i<n i'. ty' i' i \\<in> {top_s, normal_s}))\n  ty i' \\<in> {top_s, top_ns}", "obtain j' where j': \"j' < n i'\" and ty': \"ty' i' j' \\<in> {top_s, top_ns}\""], ["proof (prove)\nusing this:\n  f i' = g i' 0 \\<and>\n  f (Suc i') = g i' (n i') \\<and>\n  (\\<forall>j<n i'.\n      (g i' j, g i' (Suc j))\n      \\<in> SN_rel_ext_step P Pw R Rw (ty' i' j)) \\<and>\n  (\\<forall>j\\<le>n i'. M (g i' j)) \\<and>\n  (ty i' = top_s \\<longrightarrow>\n   (\\<exists>i<n i'. ty' i' i \\<in> {top_s})) \\<and>\n  (ty i' = top_ns \\<longrightarrow>\n   (\\<exists>i<n i'. ty' i' i \\<in> {top_s, top_ns})) \\<and>\n  (ty i' = normal_s \\<longrightarrow>\n   (\\<exists>i<n i'. ty' i' i \\<in> {top_s, normal_s}))\n  ty i' \\<in> {top_s, top_ns}\n\ngoal (1 subgoal):\n 1. (\\<And>j'.\n        \\<lbrakk>j' < n i'; ty' i' j' \\<in> {top_s, top_ns}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  j' < n i'\n  ty' i' j' \\<in> {top_s, top_ns}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>na\\<ge>m.\n          (case inf_concat n na of (x, xa) \\<Rightarrow> ty' x xa)\n          \\<in> {top_s, top_ns}", "from inf_concat_surj[of _ n, OF j']"], ["proof (chain)\npicking this:\n  \\<exists>k. inf_concat n k = (i', j')", "obtain k' where ik': \"?ind k' = (i',j')\""], ["proof (prove)\nusing this:\n  \\<exists>k. inf_concat n k = (i', j')\n\ngoal (1 subgoal):\n 1. (\\<And>k'.\n        inf_concat n k' = (i', j') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  inf_concat n k' = (i', j')\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>na\\<ge>m.\n          (case inf_concat n na of (x, xa) \\<Rightarrow> ty' x xa)\n          \\<in> {top_s, top_ns}", "from inf_mono[OF ik ik' i']"], ["proof (chain)\npicking this:\n  k < k'", "have k: \"k \\<le> k'\""], ["proof (prove)\nusing this:\n  k < k'\n\ngoal (1 subgoal):\n 1. k \\<le> k'", "by simp"], ["proof (state)\nthis:\n  k \\<le> k'\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>na\\<ge>m.\n          (case inf_concat n na of (x, xa) \\<Rightarrow> ty' x xa)\n          \\<in> {top_s, top_ns}", "show \"\\<exists> k' \\<ge> k. ?ty k' \\<in> {top_s, top_ns}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k'\\<ge>k.\n       (case inf_concat n k' of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, top_ns}", "by (intro exI conjI, rule k, unfold ik' split, rule ty')"], ["proof (state)\nthis:\n  \\<exists>k'\\<ge>k.\n     (case inf_concat n k' of (i, j) \\<Rightarrow> ty' i j)\n     \\<in> {top_s, top_ns}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>\\<^sub>\\<infinity>i.\n     (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n     \\<in> {top_s, top_ns}\n\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, normal_s}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, normal_s}", "show \"INFM i. ?ty i \\<in> {top_s, normal_s}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>\\<infinity>i.\n       (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, normal_s}", "unfolding INFM_nat_le"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m.\n       \\<exists>na\\<ge>m.\n          (case inf_concat n na of (x, xa) \\<Rightarrow> ty' x xa)\n          \\<in> {top_s, normal_s}", "proof (intro allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>na\\<ge>m.\n          (case inf_concat n na of (x, xa) \\<Rightarrow> ty' x xa)\n          \\<in> {top_s, normal_s}", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>na\\<ge>m.\n          (case inf_concat n na of (x, xa) \\<Rightarrow> ty' x xa)\n          \\<in> {top_s, normal_s}", "obtain i j where ik: \"?ind k = (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        inf_concat n k = (i, j) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  inf_concat n k = (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>na\\<ge>m.\n          (case inf_concat n na of (x, xa) \\<Rightarrow> ty' x xa)\n          \\<in> {top_s, normal_s}", "from inf2[unfolded INFM_nat]"], ["proof (chain)\npicking this:\n  \\<forall>m. \\<exists>n>m. ty n \\<in> {top_s, normal_s}", "obtain i' where i': \"i' > i\" and ty: \"ty i' \\<in> {top_s, normal_s}\""], ["proof (prove)\nusing this:\n  \\<forall>m. \\<exists>n>m. ty n \\<in> {top_s, normal_s}\n\ngoal (1 subgoal):\n 1. (\\<And>i'.\n        \\<lbrakk>i < i'; ty i' \\<in> {top_s, normal_s}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i < i'\n  ty i' \\<in> {top_s, normal_s}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>na\\<ge>m.\n          (case inf_concat n na of (x, xa) \\<Rightarrow> ty' x xa)\n          \\<in> {top_s, normal_s}", "from partial[of i'] ty"], ["proof (chain)\npicking this:\n  f i' = g i' 0 \\<and>\n  f (Suc i') = g i' (n i') \\<and>\n  (\\<forall>j<n i'.\n      (g i' j, g i' (Suc j))\n      \\<in> SN_rel_ext_step P Pw R Rw (ty' i' j)) \\<and>\n  (\\<forall>j\\<le>n i'. M (g i' j)) \\<and>\n  (ty i' = top_s \\<longrightarrow>\n   (\\<exists>i<n i'. ty' i' i \\<in> {top_s})) \\<and>\n  (ty i' = top_ns \\<longrightarrow>\n   (\\<exists>i<n i'. ty' i' i \\<in> {top_s, top_ns})) \\<and>\n  (ty i' = normal_s \\<longrightarrow>\n   (\\<exists>i<n i'. ty' i' i \\<in> {top_s, normal_s}))\n  ty i' \\<in> {top_s, normal_s}", "obtain j' where j': \"j' < n i'\" and ty': \"ty' i' j' \\<in> {top_s, normal_s}\""], ["proof (prove)\nusing this:\n  f i' = g i' 0 \\<and>\n  f (Suc i') = g i' (n i') \\<and>\n  (\\<forall>j<n i'.\n      (g i' j, g i' (Suc j))\n      \\<in> SN_rel_ext_step P Pw R Rw (ty' i' j)) \\<and>\n  (\\<forall>j\\<le>n i'. M (g i' j)) \\<and>\n  (ty i' = top_s \\<longrightarrow>\n   (\\<exists>i<n i'. ty' i' i \\<in> {top_s})) \\<and>\n  (ty i' = top_ns \\<longrightarrow>\n   (\\<exists>i<n i'. ty' i' i \\<in> {top_s, top_ns})) \\<and>\n  (ty i' = normal_s \\<longrightarrow>\n   (\\<exists>i<n i'. ty' i' i \\<in> {top_s, normal_s}))\n  ty i' \\<in> {top_s, normal_s}\n\ngoal (1 subgoal):\n 1. (\\<And>j'.\n        \\<lbrakk>j' < n i'; ty' i' j' \\<in> {top_s, normal_s}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  j' < n i'\n  ty' i' j' \\<in> {top_s, normal_s}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>na\\<ge>m.\n          (case inf_concat n na of (x, xa) \\<Rightarrow> ty' x xa)\n          \\<in> {top_s, normal_s}", "from inf_concat_surj[of _ n, OF j']"], ["proof (chain)\npicking this:\n  \\<exists>k. inf_concat n k = (i', j')", "obtain k' where ik': \"?ind k' = (i',j')\""], ["proof (prove)\nusing this:\n  \\<exists>k. inf_concat n k = (i', j')\n\ngoal (1 subgoal):\n 1. (\\<And>k'.\n        inf_concat n k' = (i', j') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  inf_concat n k' = (i', j')\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>na\\<ge>m.\n          (case inf_concat n na of (x, xa) \\<Rightarrow> ty' x xa)\n          \\<in> {top_s, normal_s}", "from inf_mono[OF ik ik' i']"], ["proof (chain)\npicking this:\n  k < k'", "have k: \"k \\<le> k'\""], ["proof (prove)\nusing this:\n  k < k'\n\ngoal (1 subgoal):\n 1. k \\<le> k'", "by simp"], ["proof (state)\nthis:\n  k \\<le> k'\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<exists>na\\<ge>m.\n          (case inf_concat n na of (x, xa) \\<Rightarrow> ty' x xa)\n          \\<in> {top_s, normal_s}", "show \"\\<exists> k' \\<ge> k. ?ty k' \\<in> {top_s, normal_s}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k'\\<ge>k.\n       (case inf_concat n k' of (i, j) \\<Rightarrow> ty' i j)\n       \\<in> {top_s, normal_s}", "by (intro exI conjI, rule k, unfold ik' split, rule ty')"], ["proof (state)\nthis:\n  \\<exists>k'\\<ge>k.\n     (case inf_concat n k' of (i, j) \\<Rightarrow> ty' i j)\n     \\<in> {top_s, normal_s}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>\\<^sub>\\<infinity>i.\n     (case inf_concat n i of (i, j) \\<Rightarrow> ty' i j)\n     \\<in> {top_s, normal_s}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> SN_rel_ext P Pw R Rw M\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> Pw) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>* O ((P \\<union> R) \\<inter> M') O A\\<^sup>*)\n            (A\\<^sup>*) M \\<Longrightarrow>\n    False", "with assms"], ["proof (chain)\npicking this:\n  M' \\<equiv> {(s, t). M t}\n  A \\<equiv> (P \\<union> Pw \\<union> R \\<union> Rw) \\<inter> M'\n  SN_rel_ext P Pw R Rw M\n  \\<not> SN_rel_ext P Pw R Rw M", "show False"], ["proof (prove)\nusing this:\n  M' \\<equiv> {(s, t). M t}\n  A \\<equiv> (P \\<union> Pw \\<union> R \\<union> Rw) \\<inter> M'\n  SN_rel_ext P Pw R Rw M\n  \\<not> SN_rel_ext P Pw R Rw M\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SN_rel_ext_map: fixes P Pw R Rw P' Pw' R' Rw' :: \"'a rel\" and M M' :: \"'a \\<Rightarrow> bool\"\n  defines Ms: \"Ms \\<equiv> {(s,t). M' t}\"\n  defines A: \"A \\<equiv> (P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter> Ms\"\n  assumes SN: \"SN_rel_ext P' Pw' R' Rw' M'\" \n  and P: \"\\<And> s t. M s \\<Longrightarrow> M t \\<Longrightarrow> (s,t) \\<in> P \\<Longrightarrow> (f s, f t) \\<in> (A^* O (P' \\<inter> Ms) O A^*) \\<and> I t\"\n  and Pw: \"\\<And> s t. M s \\<Longrightarrow> M t \\<Longrightarrow> (s,t) \\<in> Pw \\<Longrightarrow> (f s, f t) \\<in> (A^* O ((P' \\<union> Pw') \\<inter> Ms) O A^*) \\<and> I t\"\n  and R: \"\\<And> s t. I s \\<Longrightarrow> M s \\<Longrightarrow> M t \\<Longrightarrow> (s,t) \\<in> R \\<Longrightarrow> (f s, f t) \\<in> (A^* O ((P' \\<union> R') \\<inter> Ms) O A^*) \\<and> I t\"\n  and Rw: \"\\<And> s t. I s \\<Longrightarrow> M s \\<Longrightarrow> M t \\<Longrightarrow> (s,t) \\<in> Rw \\<Longrightarrow> (f s, f t) \\<in> A^* \\<and> I t\"\n  shows \"SN_rel_ext P Pw R Rw M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "note SN = SN_rel_ext_trans[OF SN]"], ["proof (state)\nthis:\n  SN_rel_ext\n   (((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>* O\n    (P' \\<inter> {(s, t). M' t}) O\n    ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>*)\n   (((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>* O\n    ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n    ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>*)\n   (((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>* O\n    ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n    ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>*)\n   (((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>*)\n   M'\n\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "let ?P = \"(A^* O (P' \\<inter> Ms) O A^*)\""], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "let ?Pw = \"(A^* O ((P' \\<union> Pw') \\<inter> Ms) O A^*)\""], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "let ?R = \"(A^* O ((P' \\<union> R') \\<inter> Ms) O A^*)\""], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "let ?Rw = \"A^*\""], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "let ?relt = \"SN_rel_ext_step ?P ?Pw ?R ?Rw\""], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "let ?rel = \"SN_rel_ext_step P Pw R Rw\""], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> SN_rel_ext P Pw R Rw M\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "from this[unfolded SN_rel_ext_def]"], ["proof (chain)\npicking this:\n  \\<not> (\\<nexists>f t.\n             (\\<forall>i.\n                 (f i, f (Suc i))\n                 \\<in> SN_rel_ext_step P Pw R Rw (t i)) \\<and>\n             (\\<forall>i. M (f i)) \\<and>\n             (\\<exists>\\<^sub>\\<infinity>i.\n                 t i \\<in> {top_s, top_ns}) \\<and>\n             (\\<exists>\\<^sub>\\<infinity>i. t i \\<in> {top_s, normal_s}))", "obtain g ty\n      where steps: \"\\<And> i. (g i, g (Suc i)) \\<in> ?rel (ty i)\" \n      and min: \"\\<And> i. M (g i)\"\n      and inf1: \"INFM i. ty i \\<in> {top_s, top_ns}\"\n      and inf2: \"INFM i. ty i \\<in> {top_s, normal_s}\""], ["proof (prove)\nusing this:\n  \\<not> (\\<nexists>f t.\n             (\\<forall>i.\n                 (f i, f (Suc i))\n                 \\<in> SN_rel_ext_step P Pw R Rw (t i)) \\<and>\n             (\\<forall>i. M (f i)) \\<and>\n             (\\<exists>\\<^sub>\\<infinity>i.\n                 t i \\<in> {top_s, top_ns}) \\<and>\n             (\\<exists>\\<^sub>\\<infinity>i. t i \\<in> {top_s, normal_s}))\n\ngoal (1 subgoal):\n 1. (\\<And>g ty.\n        \\<lbrakk>\\<And>i.\n                    (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty i);\n         \\<And>i. M (g i);\n         \\<exists>\\<^sub>\\<infinity>i. ty i \\<in> {top_s, top_ns};\n         \\<exists>\\<^sub>\\<infinity>i. ty i \\<in> {top_s, normal_s}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (g ?i, g (Suc ?i)) \\<in> SN_rel_ext_step P Pw R Rw (ty ?i)\n  M (g ?i)\n  \\<exists>\\<^sub>\\<infinity>i. ty i \\<in> {top_s, top_ns}\n  \\<exists>\\<^sub>\\<infinity>i. ty i \\<in> {top_s, normal_s}\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "from inf1[unfolded INFM_nat]"], ["proof (chain)\npicking this:\n  \\<forall>m. \\<exists>n>m. ty n \\<in> {top_s, top_ns}", "obtain k where k: \"ty k \\<in> {top_s, top_ns}\""], ["proof (prove)\nusing this:\n  \\<forall>m. \\<exists>n>m. ty n \\<in> {top_s, top_ns}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        ty k \\<in> {top_s, top_ns} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ty k \\<in> {top_s, top_ns}\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "let ?k = \"Suc k\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "let ?i = \"shift id ?k\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "let ?f = \"\\<lambda> i. f (shift g ?k i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "let ?ty = \"shift ty ?k\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "assume ty: \"ty i \\<in> {top_s,top_ns}\""], ["proof (state)\nthis:\n  ty i \\<in> {top_s, top_ns}\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "note m = min[of i]"], ["proof (state)\nthis:\n  M (g i)\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "note ms = min[of \"Suc i\"]"], ["proof (state)\nthis:\n  M (g (Suc i))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "from P[OF m ms]\n        Pw[OF m ms]\n        steps[of i]\n        ty"], ["proof (chain)\npicking this:\n  (g i, g (Suc i)) \\<in> P \\<Longrightarrow>\n  (f (g i), f (g (Suc i)))\n  \\<in> A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<and>\n  I (g (Suc i))\n  (g i, g (Suc i)) \\<in> Pw \\<Longrightarrow>\n  (f (g i), f (g (Suc i)))\n  \\<in> A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>* \\<and>\n  I (g (Suc i))\n  (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty i)\n  ty i \\<in> {top_s, top_ns}", "have \"(f (g i), f (g (Suc i))) \\<in> ?relt (ty i) \\<and> I (g (Suc i))\""], ["proof (prove)\nusing this:\n  (g i, g (Suc i)) \\<in> P \\<Longrightarrow>\n  (f (g i), f (g (Suc i)))\n  \\<in> A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<and>\n  I (g (Suc i))\n  (g i, g (Suc i)) \\<in> Pw \\<Longrightarrow>\n  (f (g i), f (g (Suc i)))\n  \\<in> A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>* \\<and>\n  I (g (Suc i))\n  (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty i)\n  ty i \\<in> {top_s, top_ns}\n\ngoal (1 subgoal):\n 1. (f (g i), f (g (Suc i)))\n    \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n           (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n           (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n           (A\\<^sup>*) (ty i) \\<and>\n    I (g (Suc i))", "by (cases \"ty i\", auto)"], ["proof (state)\nthis:\n  (f (g i), f (g (Suc i)))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>*) (ty i) \\<and>\n  I (g (Suc i))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  ty ?i2 \\<in> {top_s, top_ns} \\<Longrightarrow>\n  (f (g ?i2), f (g (Suc ?i2)))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>*) (ty ?i2) \\<and>\n  I (g (Suc ?i2))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "note stepsP = this"], ["proof (state)\nthis:\n  ty ?i2 \\<in> {top_s, top_ns} \\<Longrightarrow>\n  (f (g ?i2), f (g (Suc ?i2)))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>*) (ty ?i2) \\<and>\n  I (g (Suc ?i2))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  ty ?i2 \\<in> {top_s, top_ns} \\<Longrightarrow>\n  (f (g ?i2), f (g (Suc ?i2)))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>*) (ty ?i2) \\<and>\n  I (g (Suc ?i2))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "assume I: \"I (g i)\""], ["proof (state)\nthis:\n  I (g i)\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "note m = min[of i]"], ["proof (state)\nthis:\n  M (g i)\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "note ms = min[of \"Suc i\"]"], ["proof (state)\nthis:\n  M (g (Suc i))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "from P[OF m ms]\n        Pw[OF m ms]\n        R[OF I m ms]\n        Rw[OF I m ms]\n        steps[of i]"], ["proof (chain)\npicking this:\n  (g i, g (Suc i)) \\<in> P \\<Longrightarrow>\n  (f (g i), f (g (Suc i)))\n  \\<in> A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<and>\n  I (g (Suc i))\n  (g i, g (Suc i)) \\<in> Pw \\<Longrightarrow>\n  (f (g i), f (g (Suc i)))\n  \\<in> A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>* \\<and>\n  I (g (Suc i))\n  (g i, g (Suc i)) \\<in> R \\<Longrightarrow>\n  (f (g i), f (g (Suc i)))\n  \\<in> A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>* \\<and>\n  I (g (Suc i))\n  (g i, g (Suc i)) \\<in> Rw \\<Longrightarrow>\n  (f (g i), f (g (Suc i))) \\<in> A\\<^sup>* \\<and> I (g (Suc i))\n  (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty i)", "have \"(f (g i), f (g (Suc i))) \\<in> ?relt (ty i) \\<and> I (g (Suc i))\""], ["proof (prove)\nusing this:\n  (g i, g (Suc i)) \\<in> P \\<Longrightarrow>\n  (f (g i), f (g (Suc i)))\n  \\<in> A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<and>\n  I (g (Suc i))\n  (g i, g (Suc i)) \\<in> Pw \\<Longrightarrow>\n  (f (g i), f (g (Suc i)))\n  \\<in> A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>* \\<and>\n  I (g (Suc i))\n  (g i, g (Suc i)) \\<in> R \\<Longrightarrow>\n  (f (g i), f (g (Suc i)))\n  \\<in> A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>* \\<and>\n  I (g (Suc i))\n  (g i, g (Suc i)) \\<in> Rw \\<Longrightarrow>\n  (f (g i), f (g (Suc i))) \\<in> A\\<^sup>* \\<and> I (g (Suc i))\n  (g i, g (Suc i)) \\<in> SN_rel_ext_step P Pw R Rw (ty i)\n\ngoal (1 subgoal):\n 1. (f (g i), f (g (Suc i)))\n    \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n           (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n           (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n           (A\\<^sup>*) (ty i) \\<and>\n    I (g (Suc i))", "by (cases \"ty i\", auto)"], ["proof (state)\nthis:\n  (f (g i), f (g (Suc i)))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>*) (ty i) \\<and>\n  I (g (Suc i))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  I (g ?i2) \\<Longrightarrow>\n  (f (g ?i2), f (g (Suc ?i2)))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>*) (ty ?i2) \\<and>\n  I (g (Suc ?i2))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "note stepsI = this"], ["proof (state)\nthis:\n  I (g ?i2) \\<Longrightarrow>\n  (f (g ?i2), f (g (Suc ?i2)))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>*) (ty ?i2) \\<and>\n  I (g (Suc ?i2))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  I (g ?i2) \\<Longrightarrow>\n  (f (g ?i2), f (g (Suc ?i2)))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>*) (ty ?i2) \\<and>\n  I (g (Suc ?i2))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "have \"I (g (?i i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I (g (shift id (Suc k) i))", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. I (g (shift id (Suc k) 0))\n 2. \\<And>i.\n       I (g (shift id (Suc k) i)) \\<Longrightarrow>\n       I (g (shift id (Suc k) (Suc i)))", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. I (g (shift id (Suc k) 0))\n 2. \\<And>i.\n       I (g (shift id (Suc k) i)) \\<Longrightarrow>\n       I (g (shift id (Suc k) (Suc i)))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. I (g (shift id (Suc k) 0))", "using stepsP[OF k]"], ["proof (prove)\nusing this:\n  (f (g k), f (g (Suc k)))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>*) (ty k) \\<and>\n  I (g (Suc k))\n\ngoal (1 subgoal):\n 1. I (g (shift id (Suc k) 0))", "by simp"], ["proof (state)\nthis:\n  I (g (shift id (Suc k) 0))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       I (g (shift id (Suc k) i)) \\<Longrightarrow>\n       I (g (shift id (Suc k) (Suc i)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       I (g (shift id (Suc k) i)) \\<Longrightarrow>\n       I (g (shift id (Suc k) (Suc i)))", "case (Suc i)"], ["proof (state)\nthis:\n  I (g (shift id (Suc k) i))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       I (g (shift id (Suc k) i)) \\<Longrightarrow>\n       I (g (shift id (Suc k) (Suc i)))", "from stepsI[OF Suc]"], ["proof (chain)\npicking this:\n  (f (g (shift id (Suc k) i)), f (g (Suc (shift id (Suc k) i))))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>*) (ty (shift id (Suc k) i)) \\<and>\n  I (g (Suc (shift id (Suc k) i)))", "show ?case"], ["proof (prove)\nusing this:\n  (f (g (shift id (Suc k) i)), f (g (Suc (shift id (Suc k) i))))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>*) (ty (shift id (Suc k) i)) \\<and>\n  I (g (Suc (shift id (Suc k) i)))\n\ngoal (1 subgoal):\n 1. I (g (shift id (Suc k) (Suc i)))", "by simp"], ["proof (state)\nthis:\n  I (g (shift id (Suc k) (Suc i)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  I (g (shift id (Suc k) i))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  I (g (shift id (Suc k) ?i2))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "note I = this"], ["proof (state)\nthis:\n  I (g (shift id (Suc k) ?i2))\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "have \"\\<not> SN_rel_ext ?P ?Pw ?R ?Rw M'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n            (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n            (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n            (A\\<^sup>*) M'", "unfolding SN_rel_ext_def simp_thms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f t.\n       (\\<forall>i.\n           (f i, f (Suc i))\n           \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n                  (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n                  (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n                  (A\\<^sup>*) (t i)) \\<and>\n       (\\<forall>i. M' (f i)) \\<and>\n       (\\<exists>\\<^sub>\\<infinity>i. t i \\<in> {top_s, top_ns}) \\<and>\n       (\\<exists>\\<^sub>\\<infinity>i. t i \\<in> {top_s, normal_s})", "proof (rule exI[of _ ?f], rule exI[of _ ?ty], intro allI conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>i.\n       (f (shift g (Suc k) i), f (shift g (Suc k) (Suc i)))\n       \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n              (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n              (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n              (A\\<^sup>*) (shift ty (Suc k) i)\n 2. \\<And>i. M' (f (shift g (Suc k) i))\n 3. \\<exists>\\<^sub>\\<infinity>i. shift ty (Suc k) i \\<in> {top_s, top_ns}\n 4. \\<exists>\\<^sub>\\<infinity>i. shift ty (Suc k) i \\<in> {top_s, normal_s}", "fix i"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>i.\n       (f (shift g (Suc k) i), f (shift g (Suc k) (Suc i)))\n       \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n              (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n              (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n              (A\\<^sup>*) (shift ty (Suc k) i)\n 2. \\<And>i. M' (f (shift g (Suc k) i))\n 3. \\<exists>\\<^sub>\\<infinity>i. shift ty (Suc k) i \\<in> {top_s, top_ns}\n 4. \\<exists>\\<^sub>\\<infinity>i. shift ty (Suc k) i \\<in> {top_s, normal_s}", "show \"(?f i, ?f (Suc i)) \\<in> ?relt (?ty i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f (shift g (Suc k) i), f (shift g (Suc k) (Suc i)))\n    \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n           (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n           (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n           (A\\<^sup>*) (shift ty (Suc k) i)", "using stepsI[OF I[of i]]"], ["proof (prove)\nusing this:\n  (f (g (shift id (Suc k) i)), f (g (Suc (shift id (Suc k) i))))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>*) (ty (shift id (Suc k) i)) \\<and>\n  I (g (Suc (shift id (Suc k) i)))\n\ngoal (1 subgoal):\n 1. (f (shift g (Suc k) i), f (shift g (Suc k) (Suc i)))\n    \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n           (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n           (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n           (A\\<^sup>*) (shift ty (Suc k) i)", "by auto"], ["proof (state)\nthis:\n  (f (shift g (Suc k) i), f (shift g (Suc k) (Suc i)))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>*) (shift ty (Suc k) i)\n\ngoal (3 subgoals):\n 1. \\<And>i. M' (f (shift g (Suc k) i))\n 2. \\<exists>\\<^sub>\\<infinity>i. shift ty (Suc k) i \\<in> {top_s, top_ns}\n 3. \\<exists>\\<^sub>\\<infinity>i. shift ty (Suc k) i \\<in> {top_s, normal_s}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i. M' (f (shift g (Suc k) i))\n 2. \\<exists>\\<^sub>\\<infinity>i. shift ty (Suc k) i \\<in> {top_s, top_ns}\n 3. \\<exists>\\<^sub>\\<infinity>i. shift ty (Suc k) i \\<in> {top_s, normal_s}", "show \"INFM i. ?ty i \\<in> {top_s, top_ns}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>\\<infinity>i. shift ty (Suc k) i \\<in> {top_s, top_ns}", "unfolding Infm_shift[of \"\\<lambda>i. i \\<in> {top_s,top_ns}\" ty ?k]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>\\<infinity>i. ty i \\<in> {top_s, top_ns}", "by (rule inf1)"], ["proof (state)\nthis:\n  \\<exists>\\<^sub>\\<infinity>i. shift ty (Suc k) i \\<in> {top_s, top_ns}\n\ngoal (2 subgoals):\n 1. \\<And>i. M' (f (shift g (Suc k) i))\n 2. \\<exists>\\<^sub>\\<infinity>i. shift ty (Suc k) i \\<in> {top_s, normal_s}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. M' (f (shift g (Suc k) i))\n 2. \\<exists>\\<^sub>\\<infinity>i. shift ty (Suc k) i \\<in> {top_s, normal_s}", "show \"INFM i. ?ty i \\<in> {top_s, normal_s}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>\\<infinity>i. shift ty (Suc k) i \\<in> {top_s, normal_s}", "unfolding Infm_shift[of \"\\<lambda>i. i \\<in> {top_s,normal_s}\" ty ?k]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>\\<infinity>i. ty i \\<in> {top_s, normal_s}", "by (rule inf2)"], ["proof (state)\nthis:\n  \\<exists>\\<^sub>\\<infinity>i. shift ty (Suc k) i \\<in> {top_s, normal_s}\n\ngoal (1 subgoal):\n 1. \\<And>i. M' (f (shift g (Suc k) i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. M' (f (shift g (Suc k) i))", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. M' (f (shift g (Suc k) i))", "have A: \"A \\<subseteq> Ms\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> Ms", "unfolding A"], ["proof (prove)\ngoal (1 subgoal):\n 1. (P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter> Ms \\<subseteq> Ms", "by auto"], ["proof (state)\nthis:\n  A \\<subseteq> Ms\n\ngoal (1 subgoal):\n 1. \\<And>i. M' (f (shift g (Suc k) i))", "from rtrancl_mono[OF this]"], ["proof (chain)\npicking this:\n  A\\<^sup>* \\<subseteq> Ms\\<^sup>*", "have As: \"A^* \\<subseteq> Ms^*\""], ["proof (prove)\nusing this:\n  A\\<^sup>* \\<subseteq> Ms\\<^sup>*\n\ngoal (1 subgoal):\n 1. A\\<^sup>* \\<subseteq> Ms\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  A\\<^sup>* \\<subseteq> Ms\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>i. M' (f (shift g (Suc k) i))", "have PM: \"?P \\<subseteq> Ms^* O Ms O Ms^*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*\n    \\<subseteq> Ms\\<^sup>* O Ms O Ms\\<^sup>*", "using As"], ["proof (prove)\nusing this:\n  A\\<^sup>* \\<subseteq> Ms\\<^sup>*\n\ngoal (1 subgoal):\n 1. A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*\n    \\<subseteq> Ms\\<^sup>* O Ms O Ms\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*\n  \\<subseteq> Ms\\<^sup>* O Ms O Ms\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>i. M' (f (shift g (Suc k) i))", "have PwM: \"?Pw \\<subseteq> Ms^* O Ms O Ms^*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*\n    \\<subseteq> Ms\\<^sup>* O Ms O Ms\\<^sup>*", "using As"], ["proof (prove)\nusing this:\n  A\\<^sup>* \\<subseteq> Ms\\<^sup>*\n\ngoal (1 subgoal):\n 1. A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*\n    \\<subseteq> Ms\\<^sup>* O Ms O Ms\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*\n  \\<subseteq> Ms\\<^sup>* O Ms O Ms\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>i. M' (f (shift g (Suc k) i))", "have RM: \"?R \\<subseteq> Ms^* O Ms O Ms^*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*\n    \\<subseteq> Ms\\<^sup>* O Ms O Ms\\<^sup>*", "using As"], ["proof (prove)\nusing this:\n  A\\<^sup>* \\<subseteq> Ms\\<^sup>*\n\ngoal (1 subgoal):\n 1. A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*\n    \\<subseteq> Ms\\<^sup>* O Ms O Ms\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*\n  \\<subseteq> Ms\\<^sup>* O Ms O Ms\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>i. M' (f (shift g (Suc k) i))", "have RwM: \"?Rw \\<subseteq> Ms^*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A\\<^sup>* \\<subseteq> Ms\\<^sup>*", "using As"], ["proof (prove)\nusing this:\n  A\\<^sup>* \\<subseteq> Ms\\<^sup>*\n\ngoal (1 subgoal):\n 1. A\\<^sup>* \\<subseteq> Ms\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  A\\<^sup>* \\<subseteq> Ms\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>i. M' (f (shift g (Suc k) i))", "from PM PwM RM"], ["proof (chain)\npicking this:\n  A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*\n  \\<subseteq> Ms\\<^sup>* O Ms O Ms\\<^sup>*\n  A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*\n  \\<subseteq> Ms\\<^sup>* O Ms O Ms\\<^sup>*\n  A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*\n  \\<subseteq> Ms\\<^sup>* O Ms O Ms\\<^sup>*", "have \"?P \\<union> ?Pw \\<union> ?R \\<subseteq> Ms^* O Ms O Ms^*\" (is \"?PPR \\<subseteq> _\")"], ["proof (prove)\nusing this:\n  A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*\n  \\<subseteq> Ms\\<^sup>* O Ms O Ms\\<^sup>*\n  A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*\n  \\<subseteq> Ms\\<^sup>* O Ms O Ms\\<^sup>*\n  A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*\n  \\<subseteq> Ms\\<^sup>* O Ms O Ms\\<^sup>*\n\ngoal (1 subgoal):\n 1. A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<union>\n    A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>* \\<union>\n    A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*\n    \\<subseteq> Ms\\<^sup>* O Ms O Ms\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<union>\n  A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>* \\<union>\n  A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*\n  \\<subseteq> Ms\\<^sup>* O Ms O Ms\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>i. M' (f (shift g (Suc k) i))", "also"], ["proof (state)\nthis:\n  A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<union>\n  A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>* \\<union>\n  A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*\n  \\<subseteq> Ms\\<^sup>* O Ms O Ms\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>i. M' (f (shift g (Suc k) i))", "have \"... \\<subseteq> Ms^+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ms\\<^sup>* O Ms O Ms\\<^sup>* \\<subseteq> Ms\\<^sup>+", "by regexp"], ["proof (state)\nthis:\n  Ms\\<^sup>* O Ms O Ms\\<^sup>* \\<subseteq> Ms\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>i. M' (f (shift g (Suc k) i))", "also"], ["proof (state)\nthis:\n  Ms\\<^sup>* O Ms O Ms\\<^sup>* \\<subseteq> Ms\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>i. M' (f (shift g (Suc k) i))", "have \"... = Ms\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ms\\<^sup>+ = Ms", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. Ms\\<^sup>+ \\<subseteq> Ms\n 2. Ms \\<subseteq> Ms\\<^sup>+", "have \"Ms^+ \\<subseteq> Ms^* O Ms\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ms\\<^sup>+ \\<subseteq> Ms\\<^sup>* O Ms", "by regexp"], ["proof (state)\nthis:\n  Ms\\<^sup>+ \\<subseteq> Ms\\<^sup>* O Ms\n\ngoal (2 subgoals):\n 1. Ms\\<^sup>+ \\<subseteq> Ms\n 2. Ms \\<subseteq> Ms\\<^sup>+", "also"], ["proof (state)\nthis:\n  Ms\\<^sup>+ \\<subseteq> Ms\\<^sup>* O Ms\n\ngoal (2 subgoals):\n 1. Ms\\<^sup>+ \\<subseteq> Ms\n 2. Ms \\<subseteq> Ms\\<^sup>+", "have \"... \\<subseteq> Ms\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ms\\<^sup>* O Ms \\<subseteq> Ms", "unfolding Ms"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(s, t). M' t}\\<^sup>* O {(s, t). M' t} \\<subseteq> {(s, t). M' t}", "by auto"], ["proof (state)\nthis:\n  Ms\\<^sup>* O Ms \\<subseteq> Ms\n\ngoal (2 subgoals):\n 1. Ms\\<^sup>+ \\<subseteq> Ms\n 2. Ms \\<subseteq> Ms\\<^sup>+", "finally"], ["proof (chain)\npicking this:\n  Ms\\<^sup>+ \\<subseteq> Ms", "show \"Ms^+ \\<subseteq> Ms\""], ["proof (prove)\nusing this:\n  Ms\\<^sup>+ \\<subseteq> Ms\n\ngoal (1 subgoal):\n 1. Ms\\<^sup>+ \\<subseteq> Ms", "."], ["proof (state)\nthis:\n  Ms\\<^sup>+ \\<subseteq> Ms\n\ngoal (1 subgoal):\n 1. Ms \\<subseteq> Ms\\<^sup>+", "qed regexp"], ["proof (state)\nthis:\n  Ms\\<^sup>+ = Ms\n\ngoal (1 subgoal):\n 1. \\<And>i. M' (f (shift g (Suc k) i))", "finally"], ["proof (chain)\npicking this:\n  A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<union>\n  A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>* \\<union>\n  A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*\n  \\<subseteq> Ms", "have PPR: \"?PPR \\<subseteq> Ms\""], ["proof (prove)\nusing this:\n  A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<union>\n  A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>* \\<union>\n  A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*\n  \\<subseteq> Ms\n\ngoal (1 subgoal):\n 1. A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<union>\n    A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>* \\<union>\n    A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*\n    \\<subseteq> Ms", "."], ["proof (state)\nthis:\n  A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<union>\n  A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>* \\<union>\n  A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*\n  \\<subseteq> Ms\n\ngoal (1 subgoal):\n 1. \\<And>i. M' (f (shift g (Suc k) i))", "show \"M' (?f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M' (f (shift g (Suc k) i))", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. M' (f (shift g (Suc k) 0))\n 2. \\<And>i.\n       M' (f (shift g (Suc k) i)) \\<Longrightarrow>\n       M' (f (shift g (Suc k) (Suc i)))", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. M' (f (shift g (Suc k) 0))\n 2. \\<And>i.\n       M' (f (shift g (Suc k) i)) \\<Longrightarrow>\n       M' (f (shift g (Suc k) (Suc i)))", "from stepsP[OF k] k"], ["proof (chain)\npicking this:\n  (f (g k), f (g (Suc k)))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>*) (ty k) \\<and>\n  I (g (Suc k))\n  ty k \\<in> {top_s, top_ns}", "have \"(f (g k), f (g (Suc k))) \\<in> ?PPR\""], ["proof (prove)\nusing this:\n  (f (g k), f (g (Suc k)))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>*) (ty k) \\<and>\n  I (g (Suc k))\n  ty k \\<in> {top_s, top_ns}\n\ngoal (1 subgoal):\n 1. (f (g k), f (g (Suc k)))\n    \\<in> A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<union>\n          A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>* \\<union>\n          A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*", "by (cases \"ty k\", auto)"], ["proof (state)\nthis:\n  (f (g k), f (g (Suc k)))\n  \\<in> A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<union>\n        A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>* \\<union>\n        A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*\n\ngoal (2 subgoals):\n 1. M' (f (shift g (Suc k) 0))\n 2. \\<And>i.\n       M' (f (shift g (Suc k) i)) \\<Longrightarrow>\n       M' (f (shift g (Suc k) (Suc i)))", "with PPR"], ["proof (chain)\npicking this:\n  A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<union>\n  A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>* \\<union>\n  A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*\n  \\<subseteq> Ms\n  (f (g k), f (g (Suc k)))\n  \\<in> A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<union>\n        A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>* \\<union>\n        A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*", "show ?case"], ["proof (prove)\nusing this:\n  A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<union>\n  A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>* \\<union>\n  A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*\n  \\<subseteq> Ms\n  (f (g k), f (g (Suc k)))\n  \\<in> A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<union>\n        A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>* \\<union>\n        A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*\n\ngoal (1 subgoal):\n 1. M' (f (shift g (Suc k) 0))", "unfolding Ms"], ["proof (prove)\nusing this:\n  A\\<^sup>* O (P' \\<inter> {(s, t). M' t}) O A\\<^sup>* \\<union>\n  A\\<^sup>* O\n  ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O A\\<^sup>* \\<union>\n  A\\<^sup>* O ((P' \\<union> R') \\<inter> {(s, t). M' t}) O A\\<^sup>*\n  \\<subseteq> {(s, t). M' t}\n  (f (g k), f (g (Suc k)))\n  \\<in> A\\<^sup>* O (P' \\<inter> {(s, t). M' t}) O A\\<^sup>* \\<union>\n        A\\<^sup>* O\n        ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O A\\<^sup>* \\<union>\n        A\\<^sup>* O ((P' \\<union> R') \\<inter> {(s, t). M' t}) O A\\<^sup>*\n\ngoal (1 subgoal):\n 1. M' (f (shift g (Suc k) 0))", "by simp blast"], ["proof (state)\nthis:\n  M' (f (shift g (Suc k) 0))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       M' (f (shift g (Suc k) i)) \\<Longrightarrow>\n       M' (f (shift g (Suc k) (Suc i)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       M' (f (shift g (Suc k) i)) \\<Longrightarrow>\n       M' (f (shift g (Suc k) (Suc i)))", "case (Suc i)"], ["proof (state)\nthis:\n  M' (f (shift g (Suc k) i))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       M' (f (shift g (Suc k) i)) \\<Longrightarrow>\n       M' (f (shift g (Suc k) (Suc i)))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. M' (f (shift g (Suc k) (Suc i)))", "proof (cases \"?ty i = normal_ns\")"], ["proof (state)\ngoal (2 subgoals):\n 1. shift ty (Suc k) i = normal_ns \\<Longrightarrow>\n    M' (f (shift g (Suc k) (Suc i)))\n 2. shift ty (Suc k) i \\<noteq> normal_ns \\<Longrightarrow>\n    M' (f (shift g (Suc k) (Suc i)))", "case False"], ["proof (state)\nthis:\n  shift ty (Suc k) i \\<noteq> normal_ns\n\ngoal (2 subgoals):\n 1. shift ty (Suc k) i = normal_ns \\<Longrightarrow>\n    M' (f (shift g (Suc k) (Suc i)))\n 2. shift ty (Suc k) i \\<noteq> normal_ns \\<Longrightarrow>\n    M' (f (shift g (Suc k) (Suc i)))", "hence \"?ty i \\<in> {top_s,top_ns,normal_s}\""], ["proof (prove)\nusing this:\n  shift ty (Suc k) i \\<noteq> normal_ns\n\ngoal (1 subgoal):\n 1. shift ty (Suc k) i \\<in> {top_s, top_ns, normal_s}", "by (cases \"?ty i\", auto)"], ["proof (state)\nthis:\n  shift ty (Suc k) i \\<in> {top_s, top_ns, normal_s}\n\ngoal (2 subgoals):\n 1. shift ty (Suc k) i = normal_ns \\<Longrightarrow>\n    M' (f (shift g (Suc k) (Suc i)))\n 2. shift ty (Suc k) i \\<noteq> normal_ns \\<Longrightarrow>\n    M' (f (shift g (Suc k) (Suc i)))", "with stepsI[OF I[of i]]"], ["proof (chain)\npicking this:\n  (f (g (shift id (Suc k) i)), f (g (Suc (shift id (Suc k) i))))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>*) (ty (shift id (Suc k) i)) \\<and>\n  I (g (Suc (shift id (Suc k) i)))\n  shift ty (Suc k) i \\<in> {top_s, top_ns, normal_s}", "have \"(?f i, ?f (Suc i)) \\<in> ?PPR\""], ["proof (prove)\nusing this:\n  (f (g (shift id (Suc k) i)), f (g (Suc (shift id (Suc k) i))))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>*) (ty (shift id (Suc k) i)) \\<and>\n  I (g (Suc (shift id (Suc k) i)))\n  shift ty (Suc k) i \\<in> {top_s, top_ns, normal_s}\n\ngoal (1 subgoal):\n 1. (f (shift g (Suc k) i), f (shift g (Suc k) (Suc i)))\n    \\<in> A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<union>\n          A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>* \\<union>\n          A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (f (shift g (Suc k) i), f (shift g (Suc k) (Suc i)))\n  \\<in> A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<union>\n        A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>* \\<union>\n        A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*\n\ngoal (2 subgoals):\n 1. shift ty (Suc k) i = normal_ns \\<Longrightarrow>\n    M' (f (shift g (Suc k) (Suc i)))\n 2. shift ty (Suc k) i \\<noteq> normal_ns \\<Longrightarrow>\n    M' (f (shift g (Suc k) (Suc i)))", "from subsetD[OF PPR this]"], ["proof (chain)\npicking this:\n  (f (shift g (Suc k) i), f (shift g (Suc k) (Suc i))) \\<in> Ms", "have \"(?f i, ?f (Suc i)) \\<in> Ms\""], ["proof (prove)\nusing this:\n  (f (shift g (Suc k) i), f (shift g (Suc k) (Suc i))) \\<in> Ms\n\ngoal (1 subgoal):\n 1. (f (shift g (Suc k) i), f (shift g (Suc k) (Suc i))) \\<in> Ms", "."], ["proof (state)\nthis:\n  (f (shift g (Suc k) i), f (shift g (Suc k) (Suc i))) \\<in> Ms\n\ngoal (2 subgoals):\n 1. shift ty (Suc k) i = normal_ns \\<Longrightarrow>\n    M' (f (shift g (Suc k) (Suc i)))\n 2. shift ty (Suc k) i \\<noteq> normal_ns \\<Longrightarrow>\n    M' (f (shift g (Suc k) (Suc i)))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (f (shift g (Suc k) i), f (shift g (Suc k) (Suc i))) \\<in> Ms\n\ngoal (1 subgoal):\n 1. M' (f (shift g (Suc k) (Suc i)))", "unfolding Ms"], ["proof (prove)\nusing this:\n  (f (shift g (Suc k) i), f (shift g (Suc k) (Suc i))) \\<in> {(s, t). M' t}\n\ngoal (1 subgoal):\n 1. M' (f (shift g (Suc k) (Suc i)))", "by auto"], ["proof (state)\nthis:\n  M' (f (shift g (Suc k) (Suc i)))\n\ngoal (1 subgoal):\n 1. shift ty (Suc k) i = normal_ns \\<Longrightarrow>\n    M' (f (shift g (Suc k) (Suc i)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. shift ty (Suc k) i = normal_ns \\<Longrightarrow>\n    M' (f (shift g (Suc k) (Suc i)))", "case True"], ["proof (state)\nthis:\n  shift ty (Suc k) i = normal_ns\n\ngoal (1 subgoal):\n 1. shift ty (Suc k) i = normal_ns \\<Longrightarrow>\n    M' (f (shift g (Suc k) (Suc i)))", "with stepsI[OF I[of i]]"], ["proof (chain)\npicking this:\n  (f (g (shift id (Suc k) i)), f (g (Suc (shift id (Suc k) i))))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>*) (ty (shift id (Suc k) i)) \\<and>\n  I (g (Suc (shift id (Suc k) i)))\n  shift ty (Suc k) i = normal_ns", "have \"(?f i, ?f (Suc i)) \\<in> ?Rw\""], ["proof (prove)\nusing this:\n  (f (g (shift id (Suc k) i)), f (g (Suc (shift id (Suc k) i))))\n  \\<in> SN_rel_ext_step (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n         (A\\<^sup>*) (ty (shift id (Suc k) i)) \\<and>\n  I (g (Suc (shift id (Suc k) i)))\n  shift ty (Suc k) i = normal_ns\n\ngoal (1 subgoal):\n 1. (f (shift g (Suc k) i), f (shift g (Suc k) (Suc i))) \\<in> A\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (f (shift g (Suc k) i), f (shift g (Suc k) (Suc i))) \\<in> A\\<^sup>*\n\ngoal (1 subgoal):\n 1. shift ty (Suc k) i = normal_ns \\<Longrightarrow>\n    M' (f (shift g (Suc k) (Suc i)))", "with RwM"], ["proof (chain)\npicking this:\n  A\\<^sup>* \\<subseteq> Ms\\<^sup>*\n  (f (shift g (Suc k) i), f (shift g (Suc k) (Suc i))) \\<in> A\\<^sup>*", "have mem: \"(?f i, ?f (Suc i)) \\<in> Ms^*\""], ["proof (prove)\nusing this:\n  A\\<^sup>* \\<subseteq> Ms\\<^sup>*\n  (f (shift g (Suc k) i), f (shift g (Suc k) (Suc i))) \\<in> A\\<^sup>*\n\ngoal (1 subgoal):\n 1. (f (shift g (Suc k) i), f (shift g (Suc k) (Suc i))) \\<in> Ms\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (f (shift g (Suc k) i), f (shift g (Suc k) (Suc i))) \\<in> Ms\\<^sup>*\n\ngoal (1 subgoal):\n 1. shift ty (Suc k) i = normal_ns \\<Longrightarrow>\n    M' (f (shift g (Suc k) (Suc i)))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (f (shift g (Suc k) i), f (shift g (Suc k) (Suc i))) \\<in> Ms\\<^sup>*\n\ngoal (1 subgoal):\n 1. M' (f (shift g (Suc k) (Suc i)))", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. f (shift g (Suc k) i) = f (shift g (Suc k) (Suc i)) \\<Longrightarrow>\n    M' (f (shift g (Suc k) (Suc i)))\n 2. \\<And>y.\n       \\<lbrakk>(f (shift g (Suc k) i), y) \\<in> Ms\\<^sup>*;\n        (y, f (shift g (Suc k) (Suc i))) \\<in> Ms\\<rbrakk>\n       \\<Longrightarrow> M' (f (shift g (Suc k) (Suc i)))", "case base"], ["proof (state)\nthis:\n  f (shift g (Suc k) i) = f (shift g (Suc k) (Suc i))\n\ngoal (2 subgoals):\n 1. f (shift g (Suc k) i) = f (shift g (Suc k) (Suc i)) \\<Longrightarrow>\n    M' (f (shift g (Suc k) (Suc i)))\n 2. \\<And>y.\n       \\<lbrakk>(f (shift g (Suc k) i), y) \\<in> Ms\\<^sup>*;\n        (y, f (shift g (Suc k) (Suc i))) \\<in> Ms\\<rbrakk>\n       \\<Longrightarrow> M' (f (shift g (Suc k) (Suc i)))", "with Suc"], ["proof (chain)\npicking this:\n  M' (f (shift g (Suc k) i))\n  f (shift g (Suc k) i) = f (shift g (Suc k) (Suc i))", "show ?thesis"], ["proof (prove)\nusing this:\n  M' (f (shift g (Suc k) i))\n  f (shift g (Suc k) i) = f (shift g (Suc k) (Suc i))\n\ngoal (1 subgoal):\n 1. M' (f (shift g (Suc k) (Suc i)))", "by simp"], ["proof (state)\nthis:\n  M' (f (shift g (Suc k) (Suc i)))\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>(f (shift g (Suc k) i), y) \\<in> Ms\\<^sup>*;\n        (y, f (shift g (Suc k) (Suc i))) \\<in> Ms\\<rbrakk>\n       \\<Longrightarrow> M' (f (shift g (Suc k) (Suc i)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>(f (shift g (Suc k) i), y) \\<in> Ms\\<^sup>*;\n        (y, f (shift g (Suc k) (Suc i))) \\<in> Ms\\<rbrakk>\n       \\<Longrightarrow> M' (f (shift g (Suc k) (Suc i)))", "case step"], ["proof (state)\nthis:\n  (f (shift g (Suc k) i), y_) \\<in> Ms\\<^sup>*\n  (y_, f (shift g (Suc k) (Suc i))) \\<in> Ms\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>(f (shift g (Suc k) i), y) \\<in> Ms\\<^sup>*;\n        (y, f (shift g (Suc k) (Suc i))) \\<in> Ms\\<rbrakk>\n       \\<Longrightarrow> M' (f (shift g (Suc k) (Suc i)))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (f (shift g (Suc k) i), y_) \\<in> Ms\\<^sup>*\n  (y_, f (shift g (Suc k) (Suc i))) \\<in> Ms\n\ngoal (1 subgoal):\n 1. M' (f (shift g (Suc k) (Suc i)))", "unfolding Ms"], ["proof (prove)\nusing this:\n  (f (shift g (Suc k) i), y_) \\<in> {(s, t). M' t}\\<^sup>*\n  (y_, f (shift g (Suc k) (Suc i))) \\<in> {(s, t). M' t}\n\ngoal (1 subgoal):\n 1. M' (f (shift g (Suc k) (Suc i)))", "by simp"], ["proof (state)\nthis:\n  M' (f (shift g (Suc k) (Suc i)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  M' (f (shift g (Suc k) (Suc i)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  M' (f (shift g (Suc k) (Suc i)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  M' (f (shift g (Suc k) i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> SN_rel_ext (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n          (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n          (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n          (A\\<^sup>*) M'\n\ngoal (1 subgoal):\n 1. \\<not> SN_rel_ext P Pw R Rw M \\<Longrightarrow> False", "with SN"], ["proof (chain)\npicking this:\n  SN_rel_ext\n   (((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>* O\n    (P' \\<inter> {(s, t). M' t}) O\n    ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>*)\n   (((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>* O\n    ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n    ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>*)\n   (((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>* O\n    ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n    ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>*)\n   (((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>*)\n   M'\n  \\<not> SN_rel_ext (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n          (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n          (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n          (A\\<^sup>*) M'", "show False"], ["proof (prove)\nusing this:\n  SN_rel_ext\n   (((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>* O\n    (P' \\<inter> {(s, t). M' t}) O\n    ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>*)\n   (((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>* O\n    ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n    ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>*)\n   (((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>* O\n    ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n    ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>*)\n   (((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>*)\n   M'\n  \\<not> SN_rel_ext (A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*)\n          (A\\<^sup>* O ((P' \\<union> Pw') \\<inter> Ms) O A\\<^sup>*)\n          (A\\<^sup>* O ((P' \\<union> R') \\<inter> Ms) O A\\<^sup>*)\n          (A\\<^sup>*) M'\n\ngoal (1 subgoal):\n 1. False", "unfolding A Ms"], ["proof (prove)\nusing this:\n  SN_rel_ext\n   (((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>* O\n    (P' \\<inter> {(s, t). M' t}) O\n    ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>*)\n   (((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>* O\n    ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n    ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>*)\n   (((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>* O\n    ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n    ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>*)\n   (((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n     {(s, t). M' t})\\<^sup>*)\n   M'\n  \\<not> SN_rel_ext\n          (((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n            {(s, t). M' t})\\<^sup>* O\n           (P' \\<inter> {(s, t). M' t}) O\n           ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n            {(s, t). M' t})\\<^sup>*)\n          (((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n            {(s, t). M' t})\\<^sup>* O\n           ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n           ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n            {(s, t). M' t})\\<^sup>*)\n          (((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n            {(s, t). M' t})\\<^sup>* O\n           ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n           ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n            {(s, t). M' t})\\<^sup>*)\n          (((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n            {(s, t). M' t})\\<^sup>*)\n          M'\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN_rel_ext P Pw R Rw M\n\ngoal:\nNo subgoals!", "qed"], ["", "(* and a version where it is assumed that f always preserves M and that R' and Rw' preserve M' *)"], ["", "lemma SN_rel_ext_map_min: fixes P Pw R Rw P' Pw' R' Rw' :: \"'a rel\" and M M' :: \"'a \\<Rightarrow> bool\"\n  defines Ms: \"Ms \\<equiv> {(s,t). M' t}\"\n  defines A: \"A \\<equiv> P' \\<inter> Ms \\<union> Pw' \\<inter> Ms \\<union> R' \\<union> Rw'\"\n  assumes SN: \"SN_rel_ext P' Pw' R' Rw' M'\" \n  and M: \"\\<And> t. M t \\<Longrightarrow> M' (f t)\"\n  and M': \"\\<And> s t. M' s \\<Longrightarrow> (s,t) \\<in> R' \\<union> Rw' \\<Longrightarrow> M' t\"\n  and P: \"\\<And> s t. M s \\<Longrightarrow> M t \\<Longrightarrow> M' (f s) \\<Longrightarrow> M' (f t) \\<Longrightarrow> (s,t) \\<in> P \\<Longrightarrow> (f s, f t) \\<in> (A^* O (P' \\<inter> Ms) O A^*) \\<and> I t\"\n  and Pw: \"\\<And> s t. M s \\<Longrightarrow> M t \\<Longrightarrow> M' (f s) \\<Longrightarrow> M' (f t) \\<Longrightarrow> (s,t) \\<in> Pw \\<Longrightarrow> (f s, f t) \\<in> (A^* O (P' \\<inter> Ms \\<union> Pw' \\<inter> Ms) O A^*) \\<and> I t\"\n  and R: \"\\<And> s t. I s \\<Longrightarrow> M s \\<Longrightarrow> M t \\<Longrightarrow> M' (f s) \\<Longrightarrow> M' (f t) \\<Longrightarrow> (s,t) \\<in> R \\<Longrightarrow> (f s, f t) \\<in> (A^* O (P' \\<inter> Ms \\<union> R') O A^*) \\<and> I t\"\n  and Rw: \"\\<And> s t. I s \\<Longrightarrow> M s \\<Longrightarrow> M t \\<Longrightarrow> M' (f s) \\<Longrightarrow> M' (f t) \\<Longrightarrow> (s,t) \\<in> Rw \\<Longrightarrow> (f s, f t) \\<in> A^* \\<and> I t\"\n  shows \"SN_rel_ext P Pw R Rw M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "let ?Ms = \"{(s,t). M' t}\""], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "let ?A = \"(P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter> ?Ms\""], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "fix s t"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "assume s: \"M' s\" and \"(s,t) \\<in> A\""], ["proof (state)\nthis:\n  M' s\n  (s, t) \\<in> A\n\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "with M'[OF s, of t]"], ["proof (chain)\npicking this:\n  (s, t) \\<in> R' \\<union> Rw' \\<Longrightarrow> M' t\n  M' s\n  (s, t) \\<in> A", "have \"(s,t) \\<in> ?A \\<and> M' t\""], ["proof (prove)\nusing this:\n  (s, t) \\<in> R' \\<union> Rw' \\<Longrightarrow> M' t\n  M' s\n  (s, t) \\<in> A\n\ngoal (1 subgoal):\n 1. (s, t)\n    \\<in> (P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n          {(s, t). M' t} \\<and>\n    M' t", "unfolding Ms A"], ["proof (prove)\nusing this:\n  (s, t) \\<in> R' \\<union> Rw' \\<Longrightarrow> M' t\n  M' s\n  (s, t)\n  \\<in> P' \\<inter> {(s, t). M' t} \\<union>\n        Pw' \\<inter> {(s, t). M' t} \\<union>\n        R' \\<union>\n        Rw'\n\ngoal (1 subgoal):\n 1. (s, t)\n    \\<in> (P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n          {(s, t). M' t} \\<and>\n    M' t", "by auto"], ["proof (state)\nthis:\n  (s, t)\n  \\<in> (P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n        {(s, t). M' t} \\<and>\n  M' t\n\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "}"], ["proof (state)\nthis:\n  \\<lbrakk>M' ?s3; (?s3, ?t3) \\<in> A\\<rbrakk>\n  \\<Longrightarrow> (?s3, ?t3)\n                    \\<in> (P' \\<union> Pw' \\<union> R' \\<union>\n                           Rw') \\<inter>\n                          {(s, t). M' t} \\<and>\n                    M' ?t3\n\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "note Aone = this"], ["proof (state)\nthis:\n  \\<lbrakk>M' ?s3; (?s3, ?t3) \\<in> A\\<rbrakk>\n  \\<Longrightarrow> (?s3, ?t3)\n                    \\<in> (P' \\<union> Pw' \\<union> R' \\<union>\n                           Rw') \\<inter>\n                          {(s, t). M' t} \\<and>\n                    M' ?t3\n\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "{"], ["proof (state)\nthis:\n  \\<lbrakk>M' ?s3; (?s3, ?t3) \\<in> A\\<rbrakk>\n  \\<Longrightarrow> (?s3, ?t3)\n                    \\<in> (P' \\<union> Pw' \\<union> R' \\<union>\n                           Rw') \\<inter>\n                          {(s, t). M' t} \\<and>\n                    M' ?t3\n\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "fix s t"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "assume s: \"M' s\" and steps: \"(s,t) \\<in> A^*\""], ["proof (state)\nthis:\n  M' s\n  (s, t) \\<in> A\\<^sup>*\n\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "from steps"], ["proof (chain)\npicking this:\n  (s, t) \\<in> A\\<^sup>*", "have \"(s,t) \\<in> ?A^* \\<and> M' t\""], ["proof (prove)\nusing this:\n  (s, t) \\<in> A\\<^sup>*\n\ngoal (1 subgoal):\n 1. (s, t)\n    \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {(s, t). M' t})\\<^sup>* \\<and>\n    M' t", "proof (induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. (s, s)\n    \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {a. case a of (s, t) \\<Rightarrow> M' t})\\<^sup>* \\<and>\n    M' s\n 2. \\<And>y z.\n       \\<lbrakk>(s, y) \\<in> A\\<^sup>*; (y, z) \\<in> A;\n        (s, y)\n        \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n               {a. case a of (s, t) \\<Rightarrow> M' t})\\<^sup>* \\<and>\n        M' y\\<rbrakk>\n       \\<Longrightarrow> (s, z)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {a. case a of\n                                    (s, t) \\<Rightarrow>\nM' t})\\<^sup>* \\<and>\n                         M' z", "case base"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. (s, s)\n    \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {a. case a of (s, t) \\<Rightarrow> M' t})\\<^sup>* \\<and>\n    M' s\n 2. \\<And>y z.\n       \\<lbrakk>(s, y) \\<in> A\\<^sup>*; (y, z) \\<in> A;\n        (s, y)\n        \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n               {a. case a of (s, t) \\<Rightarrow> M' t})\\<^sup>* \\<and>\n        M' y\\<rbrakk>\n       \\<Longrightarrow> (s, z)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {a. case a of\n                                    (s, t) \\<Rightarrow>\nM' t})\\<^sup>* \\<and>\n                         M' z", "from s"], ["proof (chain)\npicking this:\n  M' s", "show ?case"], ["proof (prove)\nusing this:\n  M' s\n\ngoal (1 subgoal):\n 1. (s, s)\n    \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {a. case a of (s, t) \\<Rightarrow> M' t})\\<^sup>* \\<and>\n    M' s", "by simp"], ["proof (state)\nthis:\n  (s, s)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {a. case a of (s, t) \\<Rightarrow> M' t})\\<^sup>* \\<and>\n  M' s\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(s, y) \\<in> A\\<^sup>*; (y, z) \\<in> A;\n        (s, y)\n        \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n               {a. case a of (s, t) \\<Rightarrow> M' t})\\<^sup>* \\<and>\n        M' y\\<rbrakk>\n       \\<Longrightarrow> (s, z)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {a. case a of\n                                    (s, t) \\<Rightarrow>\nM' t})\\<^sup>* \\<and>\n                         M' z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(s, y) \\<in> A\\<^sup>*; (y, z) \\<in> A;\n        (s, y)\n        \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n               {a. case a of (s, t) \\<Rightarrow> M' t})\\<^sup>* \\<and>\n        M' y\\<rbrakk>\n       \\<Longrightarrow> (s, z)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {a. case a of\n                                    (s, t) \\<Rightarrow>\nM' t})\\<^sup>* \\<and>\n                         M' z", "case (step t u)"], ["proof (state)\nthis:\n  (s, t) \\<in> A\\<^sup>*\n  (t, u) \\<in> A\n  (s, t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {a. case a of (s, t) \\<Rightarrow> M' t})\\<^sup>* \\<and>\n  M' t\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(s, y) \\<in> A\\<^sup>*; (y, z) \\<in> A;\n        (s, y)\n        \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n               {a. case a of (s, t) \\<Rightarrow> M' t})\\<^sup>* \\<and>\n        M' y\\<rbrakk>\n       \\<Longrightarrow> (s, z)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {a. case a of\n                                    (s, t) \\<Rightarrow>\nM' t})\\<^sup>* \\<and>\n                         M' z", "note one = Aone[OF step(3)[THEN conjunct2] step(2)]"], ["proof (state)\nthis:\n  (t, u)\n  \\<in> (P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n        {(s, t). M' t} \\<and>\n  M' u\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(s, y) \\<in> A\\<^sup>*; (y, z) \\<in> A;\n        (s, y)\n        \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n               {a. case a of (s, t) \\<Rightarrow> M' t})\\<^sup>* \\<and>\n        M' y\\<rbrakk>\n       \\<Longrightarrow> (s, z)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {a. case a of\n                                    (s, t) \\<Rightarrow>\nM' t})\\<^sup>* \\<and>\n                         M' z", "from step(3) one"], ["proof (chain)\npicking this:\n  (s, t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {a. case a of (s, t) \\<Rightarrow> M' t})\\<^sup>* \\<and>\n  M' t\n  (t, u)\n  \\<in> (P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n        {(s, t). M' t} \\<and>\n  M' u", "have steps: \"(s,u) \\<in> ?A^* O ?A\""], ["proof (prove)\nusing this:\n  (s, t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {a. case a of (s, t) \\<Rightarrow> M' t})\\<^sup>* \\<and>\n  M' t\n  (t, u)\n  \\<in> (P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n        {(s, t). M' t} \\<and>\n  M' u\n\ngoal (1 subgoal):\n 1. (s, u)\n    \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {(s, t). M' t})\\<^sup>* O\n          ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {(s, t). M' t})", "by blast"], ["proof (state)\nthis:\n  (s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* O\n        ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter> {(s, t). M' t})\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(s, y) \\<in> A\\<^sup>*; (y, z) \\<in> A;\n        (s, y)\n        \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n               {a. case a of (s, t) \\<Rightarrow> M' t})\\<^sup>* \\<and>\n        M' y\\<rbrakk>\n       \\<Longrightarrow> (s, z)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {a. case a of\n                                    (s, t) \\<Rightarrow>\nM' t})\\<^sup>* \\<and>\n                         M' z", "have \"(s,u) \\<in> ?A^*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s, u)\n    \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {(s, t). M' t})\\<^sup>*", "by (rule subsetD[OF _ steps], regexp)"], ["proof (state)\nthis:\n  (s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(s, y) \\<in> A\\<^sup>*; (y, z) \\<in> A;\n        (s, y)\n        \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n               {a. case a of (s, t) \\<Rightarrow> M' t})\\<^sup>* \\<and>\n        M' y\\<rbrakk>\n       \\<Longrightarrow> (s, z)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {a. case a of\n                                    (s, t) \\<Rightarrow>\nM' t})\\<^sup>* \\<and>\n                         M' z", "with one"], ["proof (chain)\npicking this:\n  (t, u)\n  \\<in> (P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n        {(s, t). M' t} \\<and>\n  M' u\n  (s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*", "show ?case"], ["proof (prove)\nusing this:\n  (t, u)\n  \\<in> (P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n        {(s, t). M' t} \\<and>\n  M' u\n  (s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n\ngoal (1 subgoal):\n 1. (s, u)\n    \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {a. case a of (s, t) \\<Rightarrow> M' t})\\<^sup>* \\<and>\n    M' u", "by simp"], ["proof (state)\nthis:\n  (s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {a. case a of (s, t) \\<Rightarrow> M' t})\\<^sup>* \\<and>\n  M' u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (s, t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* \\<and>\n  M' t\n\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "}"], ["proof (state)\nthis:\n  \\<lbrakk>M' ?s3; (?s3, ?t3) \\<in> A\\<^sup>*\\<rbrakk>\n  \\<Longrightarrow> (?s3, ?t3)\n                    \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                            Rw') \\<inter>\n                           {(s, t). M' t})\\<^sup>* \\<and>\n                    M' ?t3\n\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "note Amany = this"], ["proof (state)\nthis:\n  \\<lbrakk>M' ?s3; (?s3, ?t3) \\<in> A\\<^sup>*\\<rbrakk>\n  \\<Longrightarrow> (?s3, ?t3)\n                    \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                            Rw') \\<inter>\n                           {(s, t). M' t})\\<^sup>* \\<and>\n                    M' ?t3\n\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "let ?P = \"(A^* O (P' \\<inter> Ms) O A^*)\""], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "let ?Pw = \"(A^* O (P' \\<inter> Ms \\<union> Pw' \\<inter> Ms) O A^*)\""], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "let ?R = \"(A^* O (P' \\<inter> Ms \\<union> R') O A^*)\""], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "let ?Rw = \"A^*\""], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "let ?P' = \"(?A^* O (P' \\<inter> ?Ms) O ?A^*)\""], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "let ?Pw' = \"(?A^* O ((P' \\<union> Pw') \\<inter> ?Ms) O ?A^*)\""], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "let ?R' = \"(?A^* O ((P' \\<union> R') \\<inter> ?Ms) O ?A^*)\""], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "let ?Rw' = \"?A^*\""], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel_ext P Pw R Rw M", "proof (rule SN_rel_ext_map[OF SN])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> P\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               (P' \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 2. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> Pw\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 3. \\<And>s t.\n       \\<lbrakk>?I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 4. \\<And>s t.\n       \\<lbrakk>?I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t", "fix s t"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> P\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               (P' \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 2. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> Pw\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 3. \\<And>s t.\n       \\<lbrakk>?I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 4. \\<And>s t.\n       \\<lbrakk>?I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t", "assume s: \"M s\" and t: \"M t\" and step: \"(s,t) \\<in> P\""], ["proof (state)\nthis:\n  M s\n  M t\n  (s, t) \\<in> P\n\ngoal (4 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> P\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               (P' \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 2. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> Pw\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 3. \\<And>s t.\n       \\<lbrakk>?I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 4. \\<And>s t.\n       \\<lbrakk>?I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t", "from P[OF s t M[OF s] M[OF t] step]"], ["proof (chain)\npicking this:\n  (f s, f t) \\<in> A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<and> I t", "have \"(f s, f t) \\<in> ?P\" and I: \"I t\""], ["proof (prove)\nusing this:\n  (f s, f t) \\<in> A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* \\<and> I t\n\ngoal (1 subgoal):\n 1. (f s, f t) \\<in> A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>* &&& I t", "by auto"], ["proof (state)\nthis:\n  (f s, f t) \\<in> A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*\n  I t\n\ngoal (4 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> P\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               (P' \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 2. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> Pw\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 3. \\<And>s t.\n       \\<lbrakk>?I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 4. \\<And>s t.\n       \\<lbrakk>?I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t", "then"], ["proof (chain)\npicking this:\n  (f s, f t) \\<in> A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*\n  I t", "obtain u v where su: \"(f s, u) \\<in> A^*\" and uv: \"(u,v) \\<in> P' \\<inter> Ms\"\n      and vt: \"(v,f t) \\<in> A^*\""], ["proof (prove)\nusing this:\n  (f s, f t) \\<in> A\\<^sup>* O (P' \\<inter> Ms) O A\\<^sup>*\n  I t\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>(f s, u) \\<in> A\\<^sup>*; (u, v) \\<in> P' \\<inter> Ms;\n         (v, f t) \\<in> A\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (f s, u) \\<in> A\\<^sup>*\n  (u, v) \\<in> P' \\<inter> Ms\n  (v, f t) \\<in> A\\<^sup>*\n\ngoal (4 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> P\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               (P' \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 2. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> Pw\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 3. \\<And>s t.\n       \\<lbrakk>?I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 4. \\<And>s t.\n       \\<lbrakk>?I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t", "from Amany[OF M[OF s] su]"], ["proof (chain)\npicking this:\n  (f s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* \\<and>\n  M' u", "have su: \"(f s, u) \\<in> ?A^*\" and u: \"M' u\""], ["proof (prove)\nusing this:\n  (f s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* \\<and>\n  M' u\n\ngoal (1 subgoal):\n 1. (f s, u)\n    \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {(s, t). M' t})\\<^sup>* &&&\n    M' u", "by auto"], ["proof (state)\nthis:\n  (f s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n  M' u\n\ngoal (4 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> P\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               (P' \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 2. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> Pw\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 3. \\<And>s t.\n       \\<lbrakk>?I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 4. \\<And>s t.\n       \\<lbrakk>?I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t", "from uv"], ["proof (chain)\npicking this:\n  (u, v) \\<in> P' \\<inter> Ms", "have v: \"M' v\""], ["proof (prove)\nusing this:\n  (u, v) \\<in> P' \\<inter> Ms\n\ngoal (1 subgoal):\n 1. M' v", "unfolding Ms"], ["proof (prove)\nusing this:\n  (u, v) \\<in> P' \\<inter> {(s, t). M' t}\n\ngoal (1 subgoal):\n 1. M' v", "by auto"], ["proof (state)\nthis:\n  M' v\n\ngoal (4 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> P\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               (P' \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 2. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> Pw\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 3. \\<And>s t.\n       \\<lbrakk>?I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 4. \\<And>s t.\n       \\<lbrakk>?I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t", "from Amany[OF v vt]"], ["proof (chain)\npicking this:\n  (v, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* \\<and>\n  M' (f t)", "have vt: \"(v, f t) \\<in> ?A^*\""], ["proof (prove)\nusing this:\n  (v, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* \\<and>\n  M' (f t)\n\ngoal (1 subgoal):\n 1. (v, f t)\n    \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {(s, t). M' t})\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (v, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n\ngoal (4 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> P\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               (P' \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 2. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> Pw\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 3. \\<And>s t.\n       \\<lbrakk>?I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t\n 4. \\<And>s t.\n       \\<lbrakk>?I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (?f s, ?f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         ?I t", "from su uv vt I"], ["proof (chain)\npicking this:\n  (f s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n  (u, v) \\<in> P' \\<inter> Ms\n  (v, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n  I t", "show \"(f s, f t) \\<in> ?P' \\<and> I t\""], ["proof (prove)\nusing this:\n  (f s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n  (u, v) \\<in> P' \\<inter> Ms\n  (v, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n  I t\n\ngoal (1 subgoal):\n 1. (f s, f t)\n    \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {(s, t). M' t})\\<^sup>* O\n          (P' \\<inter> {(s, t). M' t}) O\n          ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {(s, t). M' t})\\<^sup>* \\<and>\n    I t", "unfolding Ms"], ["proof (prove)\nusing this:\n  (f s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n  (u, v) \\<in> P' \\<inter> {(s, t). M' t}\n  (v, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n  I t\n\ngoal (1 subgoal):\n 1. (f s, f t)\n    \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {(s, t). M' t})\\<^sup>* O\n          (P' \\<inter> {(s, t). M' t}) O\n          ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {(s, t). M' t})\\<^sup>* \\<and>\n    I t", "by auto"], ["proof (state)\nthis:\n  (f s, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* O\n        (P' \\<inter> {(s, t). M' t}) O\n        ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* \\<and>\n  I t\n\ngoal (3 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> Pw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 2. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 3. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> Pw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 2. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 3. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "fix s t"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> Pw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 2. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 3. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "assume s: \"M s\" and t: \"M t\" and step: \"(s,t) \\<in> Pw\""], ["proof (state)\nthis:\n  M s\n  M t\n  (s, t) \\<in> Pw\n\ngoal (3 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> Pw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 2. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 3. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "from Pw[OF s t M[OF s] M[OF t] step]"], ["proof (chain)\npicking this:\n  (f s, f t)\n  \\<in> A\\<^sup>* O\n        (P' \\<inter> Ms \\<union> Pw' \\<inter> Ms) O A\\<^sup>* \\<and>\n  I t", "have \"(f s, f t) \\<in> ?Pw\" and I: \"I t\""], ["proof (prove)\nusing this:\n  (f s, f t)\n  \\<in> A\\<^sup>* O\n        (P' \\<inter> Ms \\<union> Pw' \\<inter> Ms) O A\\<^sup>* \\<and>\n  I t\n\ngoal (1 subgoal):\n 1. (f s, f t)\n    \\<in> A\\<^sup>* O\n          (P' \\<inter> Ms \\<union> Pw' \\<inter> Ms) O A\\<^sup>* &&&\n    I t", "by auto"], ["proof (state)\nthis:\n  (f s, f t)\n  \\<in> A\\<^sup>* O (P' \\<inter> Ms \\<union> Pw' \\<inter> Ms) O A\\<^sup>*\n  I t\n\ngoal (3 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> Pw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 2. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 3. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "then"], ["proof (chain)\npicking this:\n  (f s, f t)\n  \\<in> A\\<^sup>* O (P' \\<inter> Ms \\<union> Pw' \\<inter> Ms) O A\\<^sup>*\n  I t", "obtain u v where su: \"(f s, u) \\<in> A^*\" and uv: \"(u,v) \\<in> P' \\<inter> Ms \\<union> Pw' \\<inter> Ms\"\n      and vt: \"(v,f t) \\<in> A^*\""], ["proof (prove)\nusing this:\n  (f s, f t)\n  \\<in> A\\<^sup>* O (P' \\<inter> Ms \\<union> Pw' \\<inter> Ms) O A\\<^sup>*\n  I t\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>(f s, u) \\<in> A\\<^sup>*;\n         (u, v) \\<in> P' \\<inter> Ms \\<union> Pw' \\<inter> Ms;\n         (v, f t) \\<in> A\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (f s, u) \\<in> A\\<^sup>*\n  (u, v) \\<in> P' \\<inter> Ms \\<union> Pw' \\<inter> Ms\n  (v, f t) \\<in> A\\<^sup>*\n\ngoal (3 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> Pw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 2. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 3. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "from Amany[OF M[OF s] su]"], ["proof (chain)\npicking this:\n  (f s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* \\<and>\n  M' u", "have su: \"(f s, u) \\<in> ?A^*\" and u: \"M' u\""], ["proof (prove)\nusing this:\n  (f s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* \\<and>\n  M' u\n\ngoal (1 subgoal):\n 1. (f s, u)\n    \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {(s, t). M' t})\\<^sup>* &&&\n    M' u", "by auto"], ["proof (state)\nthis:\n  (f s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n  M' u\n\ngoal (3 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> Pw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 2. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 3. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "from uv"], ["proof (chain)\npicking this:\n  (u, v) \\<in> P' \\<inter> Ms \\<union> Pw' \\<inter> Ms", "have uv: \"(u,v) \\<in> (P' \\<union> Pw') \\<inter> ?Ms\" and v: \"M' v\""], ["proof (prove)\nusing this:\n  (u, v) \\<in> P' \\<inter> Ms \\<union> Pw' \\<inter> Ms\n\ngoal (1 subgoal):\n 1. (u, v) \\<in> (P' \\<union> Pw') \\<inter> {(s, t). M' t} &&& M' v", "unfolding Ms"], ["proof (prove)\nusing this:\n  (u, v)\n  \\<in> P' \\<inter> {(s, t). M' t} \\<union> Pw' \\<inter> {(s, t). M' t}\n\ngoal (1 subgoal):\n 1. (u, v) \\<in> (P' \\<union> Pw') \\<inter> {(s, t). M' t} &&& M' v", "by auto"], ["proof (state)\nthis:\n  (u, v) \\<in> (P' \\<union> Pw') \\<inter> {(s, t). M' t}\n  M' v\n\ngoal (3 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> Pw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 2. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 3. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "from Amany[OF v vt]"], ["proof (chain)\npicking this:\n  (v, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* \\<and>\n  M' (f t)", "have vt: \"(v, f t) \\<in> ?A^*\""], ["proof (prove)\nusing this:\n  (v, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* \\<and>\n  M' (f t)\n\ngoal (1 subgoal):\n 1. (v, f t)\n    \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {(s, t). M' t})\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (v, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n\ngoal (3 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>M s; M t; (s, t) \\<in> Pw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 2. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 3. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "from su uv vt I"], ["proof (chain)\npicking this:\n  (f s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n  (u, v) \\<in> (P' \\<union> Pw') \\<inter> {(s, t). M' t}\n  (v, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n  I t", "show \"(f s, f t) \\<in> ?Pw' \\<and> I t\""], ["proof (prove)\nusing this:\n  (f s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n  (u, v) \\<in> (P' \\<union> Pw') \\<inter> {(s, t). M' t}\n  (v, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n  I t\n\ngoal (1 subgoal):\n 1. (f s, f t)\n    \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {(s, t). M' t})\\<^sup>* O\n          ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n          ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {(s, t). M' t})\\<^sup>* \\<and>\n    I t", "by auto"], ["proof (state)\nthis:\n  (f s, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* O\n        ((P' \\<union> Pw') \\<inter> {(s, t). M' t}) O\n        ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* \\<and>\n  I t\n\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 2. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 2. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "fix s t"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 2. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "assume I: \"I s\" and s: \"M s\" and t: \"M t\" and step: \"(s,t) \\<in> R\""], ["proof (state)\nthis:\n  I s\n  M s\n  M t\n  (s, t) \\<in> R\n\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 2. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "from R[OF I s t M[OF s] M[OF t] step]"], ["proof (chain)\npicking this:\n  (f s, f t)\n  \\<in> A\\<^sup>* O (P' \\<inter> Ms \\<union> R') O A\\<^sup>* \\<and>\n  I t", "have \"(f s, f t) \\<in> ?R\" and I: \"I t\""], ["proof (prove)\nusing this:\n  (f s, f t)\n  \\<in> A\\<^sup>* O (P' \\<inter> Ms \\<union> R') O A\\<^sup>* \\<and>\n  I t\n\ngoal (1 subgoal):\n 1. (f s, f t)\n    \\<in> A\\<^sup>* O (P' \\<inter> Ms \\<union> R') O A\\<^sup>* &&&\n    I t", "by auto"], ["proof (state)\nthis:\n  (f s, f t) \\<in> A\\<^sup>* O (P' \\<inter> Ms \\<union> R') O A\\<^sup>*\n  I t\n\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 2. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "then"], ["proof (chain)\npicking this:\n  (f s, f t) \\<in> A\\<^sup>* O (P' \\<inter> Ms \\<union> R') O A\\<^sup>*\n  I t", "obtain u v where su: \"(f s, u) \\<in> A^*\" and uv: \"(u,v) \\<in> P' \\<inter> Ms \\<union> R'\"\n      and vt: \"(v,f t) \\<in> A^*\""], ["proof (prove)\nusing this:\n  (f s, f t) \\<in> A\\<^sup>* O (P' \\<inter> Ms \\<union> R') O A\\<^sup>*\n  I t\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>(f s, u) \\<in> A\\<^sup>*;\n         (u, v) \\<in> P' \\<inter> Ms \\<union> R';\n         (v, f t) \\<in> A\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (f s, u) \\<in> A\\<^sup>*\n  (u, v) \\<in> P' \\<inter> Ms \\<union> R'\n  (v, f t) \\<in> A\\<^sup>*\n\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 2. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "from Amany[OF M[OF s] su]"], ["proof (chain)\npicking this:\n  (f s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* \\<and>\n  M' u", "have su: \"(f s, u) \\<in> ?A^*\" and u: \"M' u\""], ["proof (prove)\nusing this:\n  (f s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* \\<and>\n  M' u\n\ngoal (1 subgoal):\n 1. (f s, u)\n    \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {(s, t). M' t})\\<^sup>* &&&\n    M' u", "by auto"], ["proof (state)\nthis:\n  (f s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n  M' u\n\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 2. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "from uv M'[OF u, of v]"], ["proof (chain)\npicking this:\n  (u, v) \\<in> P' \\<inter> Ms \\<union> R'\n  (u, v) \\<in> R' \\<union> Rw' \\<Longrightarrow> M' v", "have uv: \"(u,v) \\<in> (P' \\<union> R') \\<inter> ?Ms\" and v: \"M' v\""], ["proof (prove)\nusing this:\n  (u, v) \\<in> P' \\<inter> Ms \\<union> R'\n  (u, v) \\<in> R' \\<union> Rw' \\<Longrightarrow> M' v\n\ngoal (1 subgoal):\n 1. (u, v) \\<in> (P' \\<union> R') \\<inter> {(s, t). M' t} &&& M' v", "unfolding Ms"], ["proof (prove)\nusing this:\n  (u, v) \\<in> P' \\<inter> {(s, t). M' t} \\<union> R'\n  (u, v) \\<in> R' \\<union> Rw' \\<Longrightarrow> M' v\n\ngoal (1 subgoal):\n 1. (u, v) \\<in> (P' \\<union> R') \\<inter> {(s, t). M' t} &&& M' v", "by auto"], ["proof (state)\nthis:\n  (u, v) \\<in> (P' \\<union> R') \\<inter> {(s, t). M' t}\n  M' v\n\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 2. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "from Amany[OF v vt]"], ["proof (chain)\npicking this:\n  (v, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* \\<and>\n  M' (f t)", "have vt: \"(v, f t) \\<in> ?A^*\""], ["proof (prove)\nusing this:\n  (v, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* \\<and>\n  M' (f t)\n\ngoal (1 subgoal):\n 1. (v, f t)\n    \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {(s, t). M' t})\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (v, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* O\n                               ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n                               ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t\n 2. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "from su uv vt I"], ["proof (chain)\npicking this:\n  (f s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n  (u, v) \\<in> (P' \\<union> R') \\<inter> {(s, t). M' t}\n  (v, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n  I t", "show \"(f s, f t) \\<in> ?R' \\<and> I t\""], ["proof (prove)\nusing this:\n  (f s, u)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n  (u, v) \\<in> (P' \\<union> R') \\<inter> {(s, t). M' t}\n  (v, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>*\n  I t\n\ngoal (1 subgoal):\n 1. (f s, f t)\n    \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {(s, t). M' t})\\<^sup>* O\n          ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n          ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {(s, t). M' t})\\<^sup>* \\<and>\n    I t", "by auto"], ["proof (state)\nthis:\n  (f s, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* O\n        ((P' \\<union> R') \\<inter> {(s, t). M' t}) O\n        ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* \\<and>\n  I t\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "fix s t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "assume I: \"I s\" and s: \"M s\" and t: \"M t\" and step: \"(s,t) \\<in> Rw\""], ["proof (state)\nthis:\n  I s\n  M s\n  M t\n  (s, t) \\<in> Rw\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "from Rw[OF I s t M[OF s] M[OF t] step]"], ["proof (chain)\npicking this:\n  (f s, f t) \\<in> A\\<^sup>* \\<and> I t", "have steps: \"(f s, f t) \\<in> ?Rw\" and I: \"I t\""], ["proof (prove)\nusing this:\n  (f s, f t) \\<in> A\\<^sup>* \\<and> I t\n\ngoal (1 subgoal):\n 1. (f s, f t) \\<in> A\\<^sup>* &&& I t", "by auto"], ["proof (state)\nthis:\n  (f s, f t) \\<in> A\\<^sup>*\n  I t\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>I s; M s; M t; (s, t) \\<in> Rw\\<rbrakk>\n       \\<Longrightarrow> (f s, f t)\n                         \\<in> ((P' \\<union> Pw' \\<union> R' \\<union>\n                                 Rw') \\<inter>\n                                {(s, t). M' t})\\<^sup>* \\<and>\n                         I t", "from Amany[OF M[OF s] steps] I"], ["proof (chain)\npicking this:\n  (f s, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* \\<and>\n  M' (f t)\n  I t", "show \"(f s, f t) \\<in> ?Rw' \\<and> I t\""], ["proof (prove)\nusing this:\n  (f s, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* \\<and>\n  M' (f t)\n  I t\n\ngoal (1 subgoal):\n 1. (f s, f t)\n    \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n           {(s, t). M' t})\\<^sup>* \\<and>\n    I t", "by auto"], ["proof (state)\nthis:\n  (f s, f t)\n  \\<in> ((P' \\<union> Pw' \\<union> R' \\<union> Rw') \\<inter>\n         {(s, t). M' t})\\<^sup>* \\<and>\n  I t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN_rel_ext P Pw R Rw M\n\ngoal:\nNo subgoals!", "qed"], ["", "(*OLD PART*)"], ["", "lemma SN_relto_imp_SN_rel: \"SN (relto R S) \\<Longrightarrow> SN_rel R S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN (S\\<^sup>* O R O S\\<^sup>*) \\<Longrightarrow> SN_rel R S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN (S\\<^sup>* O R O S\\<^sup>*) \\<Longrightarrow> SN_rel R S", "assume SN: \"SN (relto R S)\""], ["proof (state)\nthis:\n  SN (S\\<^sup>* O R O S\\<^sup>*)\n\ngoal (1 subgoal):\n 1. SN (S\\<^sup>* O R O S\\<^sup>*) \\<Longrightarrow> SN_rel R S", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel R S", "proof (simp only: SN_rel_on_conv SN_rel_defs, intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> UNIV \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> UNIV \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "presume steps: \"chain (R \\<union> S) f\""], ["proof (state)\nthis:\n  \\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> UNIV \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "obtain r where  r: \"\\<And> j. r j \\<equiv>  (f j, f (Suc j)) \\<in> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        (\\<And>j. r j \\<equiv> (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r ?j \\<equiv> (f ?j, f (Suc ?j)) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> UNIV \\<Longrightarrow>\n       \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "show \"\\<not> (INFM j. (f j, f (Suc j)) \\<in> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "hence ih: \"infinitely_many r\""], ["proof (prove)\nusing this:\n  \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)\n\ngoal (1 subgoal):\n 1. infinitely_many r", "unfolding infinitely_many_def r INFM_nat_le"], ["proof (prove)\nusing this:\n  \\<not> \\<not> (\\<forall>m. \\<exists>n\\<ge>m. (f n, f (Suc n)) \\<in> R)\n\ngoal (1 subgoal):\n 1. \\<forall>m. \\<exists>n\\<ge>m. (f n, f (Suc n)) \\<in> R", "by blast"], ["proof (state)\nthis:\n  infinitely_many r\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "obtain r_index where \"r_index = infinitely_many.index r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r_index.\n        r_index = infinitely_many.index r \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  r_index = infinitely_many.index r\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "with infinitely_many.index_p[OF ih] infinitely_many.index_ordered[OF ih] infinitely_many.index_not_p_between[OF ih]"], ["proof (chain)\npicking this:\n  r (infinitely_many.index r ?n)\n  infinitely_many.index r ?n < infinitely_many.index r (Suc ?n)\n  \\<lbrakk>infinitely_many.index r ?n < ?i;\n   ?i < infinitely_many.index r (Suc ?n)\\<rbrakk>\n  \\<Longrightarrow> \\<not> r ?i\n  r_index = infinitely_many.index r", "have r_index: \"\\<And> i. r (r_index i) \\<and> r_index i < r_index (Suc i) \\<and> (\\<forall> j. r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow> \\<not> r j)\""], ["proof (prove)\nusing this:\n  r (infinitely_many.index r ?n)\n  infinitely_many.index r ?n < infinitely_many.index r (Suc ?n)\n  \\<lbrakk>infinitely_many.index r ?n < ?i;\n   ?i < infinitely_many.index r (Suc ?n)\\<rbrakk>\n  \\<Longrightarrow> \\<not> r ?i\n  r_index = infinitely_many.index r\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       r (r_index i) \\<and>\n       r_index i < r_index (Suc i) \\<and>\n       (\\<forall>j.\n           r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow>\n           \\<not> r j)", "by auto"], ["proof (state)\nthis:\n  r (r_index ?i) \\<and>\n  r_index ?i < r_index (Suc ?i) \\<and>\n  (\\<forall>j.\n      r_index ?i < j \\<and> j < r_index (Suc ?i) \\<longrightarrow>\n      \\<not> r j)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "obtain g where g: \"\\<And> i. g i \\<equiv> f (r_index i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        (\\<And>i. g i \\<equiv> f (r_index i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  g ?i \\<equiv> f (r_index ?i)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "{"], ["proof (state)\nthis:\n  g ?i \\<equiv> f (r_index ?i)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "let ?ri = \"r_index i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "let ?rsi = \"r_index (Suc i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "from r_index"], ["proof (chain)\npicking this:\n  r (r_index ?i) \\<and>\n  r_index ?i < r_index (Suc ?i) \\<and>\n  (\\<forall>j.\n      r_index ?i < j \\<and> j < r_index (Suc ?i) \\<longrightarrow>\n      \\<not> r j)", "have isi: \"?ri < ?rsi\""], ["proof (prove)\nusing this:\n  r (r_index ?i) \\<and>\n  r_index ?i < r_index (Suc ?i) \\<and>\n  (\\<forall>j.\n      r_index ?i < j \\<and> j < r_index (Suc ?i) \\<longrightarrow>\n      \\<not> r j)\n\ngoal (1 subgoal):\n 1. r_index i < r_index (Suc i)", "by auto"], ["proof (state)\nthis:\n  r_index i < r_index (Suc i)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "obtain ri rsi where ri: \"ri = ?ri\" and rsi: \"rsi = ?rsi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ri rsi.\n        \\<lbrakk>ri = r_index i; rsi = r_index (Suc i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ri = r_index i\n  rsi = r_index (Suc i)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "with r_index[of i] steps"], ["proof (chain)\npicking this:\n  r (r_index i) \\<and>\n  r_index i < r_index (Suc i) \\<and>\n  (\\<forall>j.\n      r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow> \\<not> r j)\n  \\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S\n  ri = r_index i\n  rsi = r_index (Suc i)", "have inter: \"\\<And> j. ri < j \\<and> j < rsi \\<Longrightarrow> (f j, f (Suc j)) \\<in> S\""], ["proof (prove)\nusing this:\n  r (r_index i) \\<and>\n  r_index i < r_index (Suc i) \\<and>\n  (\\<forall>j.\n      r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow> \\<not> r j)\n  \\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S\n  ri = r_index i\n  rsi = r_index (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       ri < j \\<and> j < rsi \\<Longrightarrow> (f j, f (Suc j)) \\<in> S", "unfolding r"], ["proof (prove)\nusing this:\n  (f (r_index i), f (Suc (r_index i))) \\<in> R \\<and>\n  r_index i < r_index (Suc i) \\<and>\n  (\\<forall>j.\n      r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow>\n      (f j, f (Suc j)) \\<notin> R)\n  \\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S\n  ri = r_index i\n  rsi = r_index (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       ri < j \\<and> j < rsi \\<Longrightarrow> (f j, f (Suc j)) \\<in> S", "by auto"], ["proof (state)\nthis:\n  ri < ?j \\<and> ?j < rsi \\<Longrightarrow> (f ?j, f (Suc ?j)) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "from ri isi rsi"], ["proof (chain)\npicking this:\n  ri = r_index i\n  r_index i < r_index (Suc i)\n  rsi = r_index (Suc i)", "have risi: \"ri < rsi\""], ["proof (prove)\nusing this:\n  ri = r_index i\n  r_index i < r_index (Suc i)\n  rsi = r_index (Suc i)\n\ngoal (1 subgoal):\n 1. ri < rsi", "by simp"], ["proof (state)\nthis:\n  ri < rsi\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "{"], ["proof (state)\nthis:\n  ri < rsi\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "assume \"Suc n \\<le> rsi - ri\""], ["proof (state)\nthis:\n  Suc n \\<le> rsi - ri\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "hence \"(f (Suc ri), f (Suc (n + ri))) \\<in> S^*\""], ["proof (prove)\nusing this:\n  Suc n \\<le> rsi - ri\n\ngoal (1 subgoal):\n 1. (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*", "proof (induct n, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>Suc n \\<le> rsi - ri \\<Longrightarrow>\n                (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*;\n        Suc (Suc n) \\<le> rsi - ri\\<rbrakk>\n       \\<Longrightarrow> (f (Suc ri), f (Suc (Suc n + ri))) \\<in> S\\<^sup>*", "case (Suc n)"], ["proof (state)\nthis:\n  Suc n \\<le> rsi - ri \\<Longrightarrow>\n  (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*\n  Suc (Suc n) \\<le> rsi - ri\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>Suc n \\<le> rsi - ri \\<Longrightarrow>\n                (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*;\n        Suc (Suc n) \\<le> rsi - ri\\<rbrakk>\n       \\<Longrightarrow> (f (Suc ri), f (Suc (Suc n + ri))) \\<in> S\\<^sup>*", "hence stepps: \"(f (Suc ri), f (Suc (n+ri))) \\<in> S^*\""], ["proof (prove)\nusing this:\n  Suc n \\<le> rsi - ri \\<Longrightarrow>\n  (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*\n  Suc (Suc n) \\<le> rsi - ri\n\ngoal (1 subgoal):\n 1. (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>Suc n \\<le> rsi - ri \\<Longrightarrow>\n                (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*;\n        Suc (Suc n) \\<le> rsi - ri\\<rbrakk>\n       \\<Longrightarrow> (f (Suc ri), f (Suc (Suc n + ri))) \\<in> S\\<^sup>*", "have \"(f (Suc (n+ri)), f (Suc (Suc n + ri))) \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f (Suc (n + ri)), f (Suc (Suc n + ri))) \\<in> S", "using inter[of \"Suc n + ri\"] Suc(2)"], ["proof (prove)\nusing this:\n  ri < Suc n + ri \\<and> Suc n + ri < rsi \\<Longrightarrow>\n  (f (Suc n + ri), f (Suc (Suc n + ri))) \\<in> S\n  Suc (Suc n) \\<le> rsi - ri\n\ngoal (1 subgoal):\n 1. (f (Suc (n + ri)), f (Suc (Suc n + ri))) \\<in> S", "by auto"], ["proof (state)\nthis:\n  (f (Suc (n + ri)), f (Suc (Suc n + ri))) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>Suc n \\<le> rsi - ri \\<Longrightarrow>\n                (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*;\n        Suc (Suc n) \\<le> rsi - ri\\<rbrakk>\n       \\<Longrightarrow> (f (Suc ri), f (Suc (Suc n + ri))) \\<in> S\\<^sup>*", "with stepps"], ["proof (chain)\npicking this:\n  (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*\n  (f (Suc (n + ri)), f (Suc (Suc n + ri))) \\<in> S", "show ?case"], ["proof (prove)\nusing this:\n  (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*\n  (f (Suc (n + ri)), f (Suc (Suc n + ri))) \\<in> S\n\ngoal (1 subgoal):\n 1. (f (Suc ri), f (Suc (Suc n + ri))) \\<in> S\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (f (Suc ri), f (Suc (Suc n + ri))) \\<in> S\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (f (Suc ri), f (Suc (n + ri))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  Suc ?n2 \\<le> rsi - ri \\<Longrightarrow>\n  (f (Suc ri), f (Suc (?n2 + ri))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "from this[of \"rsi - ri - 1\"] risi"], ["proof (chain)\npicking this:\n  Suc (rsi - ri - 1) \\<le> rsi - ri \\<Longrightarrow>\n  (f (Suc ri), f (Suc (rsi - ri - 1 + ri))) \\<in> S\\<^sup>*\n  ri < rsi", "have \n          \"(f (Suc ri), f rsi) \\<in> S^*\""], ["proof (prove)\nusing this:\n  Suc (rsi - ri - 1) \\<le> rsi - ri \\<Longrightarrow>\n  (f (Suc ri), f (Suc (rsi - ri - 1 + ri))) \\<in> S\\<^sup>*\n  ri < rsi\n\ngoal (1 subgoal):\n 1. (f (Suc ri), f rsi) \\<in> S\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (f (Suc ri), f rsi) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "with ri rsi"], ["proof (chain)\npicking this:\n  ri = r_index i\n  rsi = r_index (Suc i)\n  (f (Suc ri), f rsi) \\<in> S\\<^sup>*", "have ssteps: \"(f (Suc ?ri), f ?rsi) \\<in> S^*\""], ["proof (prove)\nusing this:\n  ri = r_index i\n  rsi = r_index (Suc i)\n  (f (Suc ri), f rsi) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (f (Suc (r_index i)), f (r_index (Suc i))) \\<in> S\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (f (Suc (r_index i)), f (r_index (Suc i))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "with r_index[of i]"], ["proof (chain)\npicking this:\n  r (r_index i) \\<and>\n  r_index i < r_index (Suc i) \\<and>\n  (\\<forall>j.\n      r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow> \\<not> r j)\n  (f (Suc (r_index i)), f (r_index (Suc i))) \\<in> S\\<^sup>*", "have \"(f ?ri, f ?rsi) \\<in> R O S^*\""], ["proof (prove)\nusing this:\n  r (r_index i) \\<and>\n  r_index i < r_index (Suc i) \\<and>\n  (\\<forall>j.\n      r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow> \\<not> r j)\n  (f (Suc (r_index i)), f (r_index (Suc i))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (f (r_index i), f (r_index (Suc i))) \\<in> R O S\\<^sup>*", "unfolding r"], ["proof (prove)\nusing this:\n  (f (r_index i), f (Suc (r_index i))) \\<in> R \\<and>\n  r_index i < r_index (Suc i) \\<and>\n  (\\<forall>j.\n      r_index i < j \\<and> j < r_index (Suc i) \\<longrightarrow>\n      (f j, f (Suc j)) \\<notin> R)\n  (f (Suc (r_index i)), f (r_index (Suc i))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (f (r_index i), f (r_index (Suc i))) \\<in> R O S\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (f (r_index i), f (r_index (Suc i))) \\<in> R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "hence \"(g i, g (Suc i)) \\<in> S^* O R O S^*\""], ["proof (prove)\nusing this:\n  (f (r_index i), f (r_index (Suc i))) \\<in> R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (g i, g (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*", "using rtrancl_refl"], ["proof (prove)\nusing this:\n  (f (r_index i), f (r_index (Suc i))) \\<in> R O S\\<^sup>*\n  (?a, ?a) \\<in> ?r\\<^sup>*\n\ngoal (1 subgoal):\n 1. (g i, g (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*", "unfolding g"], ["proof (prove)\nusing this:\n  (f (r_index i), f (r_index (Suc i))) \\<in> R O S\\<^sup>*\n  (?a, ?a) \\<in> ?r\\<^sup>*\n\ngoal (1 subgoal):\n 1. (f (r_index i), f (r_index (Suc i))) \\<in> S\\<^sup>* O R O S\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (g i, g (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  (g ?i2, g (Suc ?i2)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "hence \"\\<not> SN (S^* O R O S^*)\""], ["proof (prove)\nusing this:\n  (g ?i2, g (Suc ?i2)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> SN (S\\<^sup>* O R O S\\<^sup>*)", "unfolding SN_defs"], ["proof (prove)\nusing this:\n  (g ?i2, g (Suc ?i2)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> (\\<nexists>f.\n               f 0 \\<in> UNIV \\<and>\n               (\\<forall>i.\n                   (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*))", "by blast"], ["proof (state)\nthis:\n  \\<not> SN (S\\<^sup>* O R O S\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> (\\<exists>\\<^sub>\\<infinity>j.\n                      (f j, f (Suc j)) \\<in> R) \\<Longrightarrow>\n    False", "with SN"], ["proof (chain)\npicking this:\n  SN (S\\<^sup>* O R O S\\<^sup>*)\n  \\<not> SN (S\\<^sup>* O R O S\\<^sup>*)", "show False"], ["proof (prove)\nusing this:\n  SN (S\\<^sup>* O R O S\\<^sup>*)\n  \\<not> SN (S\\<^sup>* O R O S\\<^sup>*)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n       f 0 \\<in> UNIV \\<Longrightarrow>\n       \\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S", "qed simp"], ["proof (state)\nthis:\n  SN_rel R S\n\ngoal:\nNo subgoals!", "qed"], ["", "(*FIXME: move*)"], ["", "lemma rtrancl_list_conv:\n  \"((s,t) \\<in> R^*) = \n  (\\<exists>list. last (s # list) = t \\<and> (\\<forall>i. i < length list \\<longrightarrow> ((s # list) ! i, (s # list) ! Suc i) \\<in> R))\" (is \"?l = ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((s, t) \\<in> R\\<^sup>*) =\n    (\\<exists>list.\n        last (s # list) = t \\<and>\n        (\\<forall>i<length list.\n            ((s # list) ! i, (s # list) ! Suc i) \\<in> R))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (s, t) \\<in> R\\<^sup>* \\<Longrightarrow>\n    \\<exists>list.\n       last (s # list) = t \\<and>\n       (\\<forall>i<length list.\n           ((s # list) ! i, (s # list) ! Suc i) \\<in> R)\n 2. \\<exists>list.\n       last (s # list) = t \\<and>\n       (\\<forall>i<length list.\n           ((s # list) ! i, (s # list) ! Suc i) \\<in> R) \\<Longrightarrow>\n    (s, t) \\<in> R\\<^sup>*", "assume ?r"], ["proof (state)\nthis:\n  \\<exists>list.\n     last (s # list) = t \\<and>\n     (\\<forall>i<length list. ((s # list) ! i, (s # list) ! Suc i) \\<in> R)\n\ngoal (2 subgoals):\n 1. (s, t) \\<in> R\\<^sup>* \\<Longrightarrow>\n    \\<exists>list.\n       last (s # list) = t \\<and>\n       (\\<forall>i<length list.\n           ((s # list) ! i, (s # list) ! Suc i) \\<in> R)\n 2. \\<exists>list.\n       last (s # list) = t \\<and>\n       (\\<forall>i<length list.\n           ((s # list) ! i, (s # list) ! Suc i) \\<in> R) \\<Longrightarrow>\n    (s, t) \\<in> R\\<^sup>*", "then"], ["proof (chain)\npicking this:\n  \\<exists>list.\n     last (s # list) = t \\<and>\n     (\\<forall>i<length list. ((s # list) ! i, (s # list) ! Suc i) \\<in> R)", "obtain list where \"last (s # list) = t \\<and> (\\<forall> i. i < length list \\<longrightarrow> ((s # list) ! i, (s # list) ! Suc i) \\<in> R)\""], ["proof (prove)\nusing this:\n  \\<exists>list.\n     last (s # list) = t \\<and>\n     (\\<forall>i<length list. ((s # list) ! i, (s # list) ! Suc i) \\<in> R)\n\ngoal (1 subgoal):\n 1. (\\<And>list.\n        last (s # list) = t \\<and>\n        (\\<forall>i<length list.\n            ((s # list) ! i, (s # list) ! Suc i) \\<in> R) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  last (s # list) = t \\<and>\n  (\\<forall>i<length list. ((s # list) ! i, (s # list) ! Suc i) \\<in> R)\n\ngoal (2 subgoals):\n 1. (s, t) \\<in> R\\<^sup>* \\<Longrightarrow>\n    \\<exists>list.\n       last (s # list) = t \\<and>\n       (\\<forall>i<length list.\n           ((s # list) ! i, (s # list) ! Suc i) \\<in> R)\n 2. \\<exists>list.\n       last (s # list) = t \\<and>\n       (\\<forall>i<length list.\n           ((s # list) ! i, (s # list) ! Suc i) \\<in> R) \\<Longrightarrow>\n    (s, t) \\<in> R\\<^sup>*", "thus ?l"], ["proof (prove)\nusing this:\n  last (s # list) = t \\<and>\n  (\\<forall>i<length list. ((s # list) ! i, (s # list) ! Suc i) \\<in> R)\n\ngoal (1 subgoal):\n 1. (s, t) \\<in> R\\<^sup>*", "proof (induct list arbitrary: s, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list s.\n       \\<lbrakk>\\<And>s.\n                   last (s # list) = t \\<and>\n                   (\\<forall>i<length list.\n                       ((s # list) ! i, (s # list) ! Suc i)\n                       \\<in> R) \\<Longrightarrow>\n                   (s, t) \\<in> R\\<^sup>*;\n        last (s # a # list) = t \\<and>\n        (\\<forall>i<length (a # list).\n            ((s # a # list) ! i, (s # a # list) ! Suc i) \\<in> R)\\<rbrakk>\n       \\<Longrightarrow> (s, t) \\<in> R\\<^sup>*", "case (Cons u ll)"], ["proof (state)\nthis:\n  last (?s # ll) = t \\<and>\n  (\\<forall>i<length ll.\n      ((?s # ll) ! i, (?s # ll) ! Suc i) \\<in> R) \\<Longrightarrow>\n  (?s, t) \\<in> R\\<^sup>*\n  last (s # u # ll) = t \\<and>\n  (\\<forall>i<length (u # ll).\n      ((s # u # ll) ! i, (s # u # ll) ! Suc i) \\<in> R)\n\ngoal (1 subgoal):\n 1. \\<And>a list s.\n       \\<lbrakk>\\<And>s.\n                   last (s # list) = t \\<and>\n                   (\\<forall>i<length list.\n                       ((s # list) ! i, (s # list) ! Suc i)\n                       \\<in> R) \\<Longrightarrow>\n                   (s, t) \\<in> R\\<^sup>*;\n        last (s # a # list) = t \\<and>\n        (\\<forall>i<length (a # list).\n            ((s # a # list) ! i, (s # a # list) ! Suc i) \\<in> R)\\<rbrakk>\n       \\<Longrightarrow> (s, t) \\<in> R\\<^sup>*", "hence \"last (u # ll) = t \\<and> (\\<forall> i. i < length ll \\<longrightarrow> ((u # ll) ! i, (u # ll) ! Suc i) \\<in> R)\""], ["proof (prove)\nusing this:\n  last (?s # ll) = t \\<and>\n  (\\<forall>i<length ll.\n      ((?s # ll) ! i, (?s # ll) ! Suc i) \\<in> R) \\<Longrightarrow>\n  (?s, t) \\<in> R\\<^sup>*\n  last (s # u # ll) = t \\<and>\n  (\\<forall>i<length (u # ll).\n      ((s # u # ll) ! i, (s # u # ll) ! Suc i) \\<in> R)\n\ngoal (1 subgoal):\n 1. last (u # ll) = t \\<and>\n    (\\<forall>i<length ll. ((u # ll) ! i, (u # ll) ! Suc i) \\<in> R)", "by auto"], ["proof (state)\nthis:\n  last (u # ll) = t \\<and>\n  (\\<forall>i<length ll. ((u # ll) ! i, (u # ll) ! Suc i) \\<in> R)\n\ngoal (1 subgoal):\n 1. \\<And>a list s.\n       \\<lbrakk>\\<And>s.\n                   last (s # list) = t \\<and>\n                   (\\<forall>i<length list.\n                       ((s # list) ! i, (s # list) ! Suc i)\n                       \\<in> R) \\<Longrightarrow>\n                   (s, t) \\<in> R\\<^sup>*;\n        last (s # a # list) = t \\<and>\n        (\\<forall>i<length (a # list).\n            ((s # a # list) ! i, (s # a # list) ! Suc i) \\<in> R)\\<rbrakk>\n       \\<Longrightarrow> (s, t) \\<in> R\\<^sup>*", "from Cons(1)[OF this]"], ["proof (chain)\npicking this:\n  (u, t) \\<in> R\\<^sup>*", "have rec: \"(u,t) \\<in> R^*\""], ["proof (prove)\nusing this:\n  (u, t) \\<in> R\\<^sup>*\n\ngoal (1 subgoal):\n 1. (u, t) \\<in> R\\<^sup>*", "."], ["proof (state)\nthis:\n  (u, t) \\<in> R\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>a list s.\n       \\<lbrakk>\\<And>s.\n                   last (s # list) = t \\<and>\n                   (\\<forall>i<length list.\n                       ((s # list) ! i, (s # list) ! Suc i)\n                       \\<in> R) \\<Longrightarrow>\n                   (s, t) \\<in> R\\<^sup>*;\n        last (s # a # list) = t \\<and>\n        (\\<forall>i<length (a # list).\n            ((s # a # list) ! i, (s # a # list) ! Suc i) \\<in> R)\\<rbrakk>\n       \\<Longrightarrow> (s, t) \\<in> R\\<^sup>*", "from Cons"], ["proof (chain)\npicking this:\n  last (?s # ll) = t \\<and>\n  (\\<forall>i<length ll.\n      ((?s # ll) ! i, (?s # ll) ! Suc i) \\<in> R) \\<Longrightarrow>\n  (?s, t) \\<in> R\\<^sup>*\n  last (s # u # ll) = t \\<and>\n  (\\<forall>i<length (u # ll).\n      ((s # u # ll) ! i, (s # u # ll) ! Suc i) \\<in> R)", "have \"(s, u) \\<in> R\""], ["proof (prove)\nusing this:\n  last (?s # ll) = t \\<and>\n  (\\<forall>i<length ll.\n      ((?s # ll) ! i, (?s # ll) ! Suc i) \\<in> R) \\<Longrightarrow>\n  (?s, t) \\<in> R\\<^sup>*\n  last (s # u # ll) = t \\<and>\n  (\\<forall>i<length (u # ll).\n      ((s # u # ll) ! i, (s # u # ll) ! Suc i) \\<in> R)\n\ngoal (1 subgoal):\n 1. (s, u) \\<in> R", "by auto"], ["proof (state)\nthis:\n  (s, u) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>a list s.\n       \\<lbrakk>\\<And>s.\n                   last (s # list) = t \\<and>\n                   (\\<forall>i<length list.\n                       ((s # list) ! i, (s # list) ! Suc i)\n                       \\<in> R) \\<Longrightarrow>\n                   (s, t) \\<in> R\\<^sup>*;\n        last (s # a # list) = t \\<and>\n        (\\<forall>i<length (a # list).\n            ((s # a # list) ! i, (s # a # list) ! Suc i) \\<in> R)\\<rbrakk>\n       \\<Longrightarrow> (s, t) \\<in> R\\<^sup>*", "with rec"], ["proof (chain)\npicking this:\n  (u, t) \\<in> R\\<^sup>*\n  (s, u) \\<in> R", "show ?case"], ["proof (prove)\nusing this:\n  (u, t) \\<in> R\\<^sup>*\n  (s, u) \\<in> R\n\ngoal (1 subgoal):\n 1. (s, t) \\<in> R\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (s, t) \\<in> R\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (s, t) \\<in> R\\<^sup>*\n\ngoal (1 subgoal):\n 1. (s, t) \\<in> R\\<^sup>* \\<Longrightarrow>\n    \\<exists>list.\n       last (s # list) = t \\<and>\n       (\\<forall>i<length list.\n           ((s # list) ! i, (s # list) ! Suc i) \\<in> R)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (s, t) \\<in> R\\<^sup>* \\<Longrightarrow>\n    \\<exists>list.\n       last (s # list) = t \\<and>\n       (\\<forall>i<length list.\n           ((s # list) ! i, (s # list) ! Suc i) \\<in> R)", "assume ?l"], ["proof (state)\nthis:\n  (s, t) \\<in> R\\<^sup>*\n\ngoal (1 subgoal):\n 1. (s, t) \\<in> R\\<^sup>* \\<Longrightarrow>\n    \\<exists>list.\n       last (s # list) = t \\<and>\n       (\\<forall>i<length list.\n           ((s # list) ! i, (s # list) ! Suc i) \\<in> R)", "from rtrancl_imp_seq[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>f n.\n     f 0 = s \\<and> f n = t \\<and> (\\<forall>i<n. (f i, f (Suc i)) \\<in> R)", "obtain S n where s: \"S 0 = s\" and t: \"S n = t\" and steps: \"\\<forall> i<n. (S i, S (Suc i)) \\<in> R\""], ["proof (prove)\nusing this:\n  \\<exists>f n.\n     f 0 = s \\<and> f n = t \\<and> (\\<forall>i<n. (f i, f (Suc i)) \\<in> R)\n\ngoal (1 subgoal):\n 1. (\\<And>S n.\n        \\<lbrakk>S 0 = s; S n = t;\n         \\<forall>i<n. (S i, S (Suc i)) \\<in> R\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  S 0 = s\n  S n = t\n  \\<forall>i<n. (S i, S (Suc i)) \\<in> R\n\ngoal (1 subgoal):\n 1. (s, t) \\<in> R\\<^sup>* \\<Longrightarrow>\n    \\<exists>list.\n       last (s # list) = t \\<and>\n       (\\<forall>i<length list.\n           ((s # list) ! i, (s # list) ! Suc i) \\<in> R)", "let ?list = \"map (\\<lambda> i. S (Suc i)) [0 ..< n]\""], ["proof (state)\ngoal (1 subgoal):\n 1. (s, t) \\<in> R\\<^sup>* \\<Longrightarrow>\n    \\<exists>list.\n       last (s # list) = t \\<and>\n       (\\<forall>i<length list.\n           ((s # list) ! i, (s # list) ! Suc i) \\<in> R)", "show ?r"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>list.\n       last (s # list) = t \\<and>\n       (\\<forall>i<length list.\n           ((s # list) ! i, (s # list) ! Suc i) \\<in> R)", "proof (rule exI[of _ ?list], intro conjI, \n      cases n, simp add: s[symmetric] t[symmetric], simp add: t[symmetric])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i<length (map (\\<lambda>i. S (Suc i)) [0..<n]).\n       ((s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! i,\n        (s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! Suc i)\n       \\<in> R", "show \"\\<forall> i < length ?list. ((s # ?list) ! i, (s # ?list) ! Suc i) \\<in> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<length (map (\\<lambda>i. S (Suc i)) [0..<n]).\n       ((s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! i,\n        (s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! Suc i)\n       \\<in> R", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < length (map (\\<lambda>i. S (Suc i)) [0..<n]) \\<Longrightarrow>\n       ((s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! i,\n        (s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! Suc i)\n       \\<in> R", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < length (map (\\<lambda>i. S (Suc i)) [0..<n]) \\<Longrightarrow>\n       ((s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! i,\n        (s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! Suc i)\n       \\<in> R", "assume i: \"i < length ?list\""], ["proof (state)\nthis:\n  i < length (map (\\<lambda>i. S (Suc i)) [0..<n])\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < length (map (\\<lambda>i. S (Suc i)) [0..<n]) \\<Longrightarrow>\n       ((s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! i,\n        (s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! Suc i)\n       \\<in> R", "thus \"((s # ?list) ! i, (s # ?list) ! Suc i) \\<in> R\""], ["proof (prove)\nusing this:\n  i < length (map (\\<lambda>i. S (Suc i)) [0..<n])\n\ngoal (1 subgoal):\n 1. ((s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! i,\n     (s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! Suc i)\n    \\<in> R", "proof (cases i, simp add: s[symmetric] steps)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i < length (map (\\<lambda>i. S (Suc i)) [0..<n]);\n        i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> ((s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! i,\n                          (s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! Suc i)\n                         \\<in> R", "case (Suc j)"], ["proof (state)\nthis:\n  i = Suc j\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i < length (map (\\<lambda>i. S (Suc i)) [0..<n]);\n        i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> ((s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! i,\n                          (s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! Suc i)\n                         \\<in> R", "with i steps"], ["proof (chain)\npicking this:\n  i < length (map (\\<lambda>i. S (Suc i)) [0..<n])\n  \\<forall>i<n. (S i, S (Suc i)) \\<in> R\n  i = Suc j", "show ?thesis"], ["proof (prove)\nusing this:\n  i < length (map (\\<lambda>i. S (Suc i)) [0..<n])\n  \\<forall>i<n. (S i, S (Suc i)) \\<in> R\n  i = Suc j\n\ngoal (1 subgoal):\n 1. ((s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! i,\n     (s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! Suc i)\n    \\<in> R", "by simp"], ["proof (state)\nthis:\n  ((s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! i,\n   (s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! Suc i)\n  \\<in> R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! i,\n   (s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! Suc i)\n  \\<in> R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i<length (map (\\<lambda>i. S (Suc i)) [0..<n]).\n     ((s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! i,\n      (s # map (\\<lambda>i. S (Suc i)) [0..<n]) ! Suc i)\n     \\<in> R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>list.\n     last (s # list) = t \\<and>\n     (\\<forall>i<length list. ((s # list) ! i, (s # list) ! Suc i) \\<in> R)\n\ngoal:\nNo subgoals!", "qed"], ["", "fun choice :: \"(nat \\<Rightarrow> 'a list) \\<Rightarrow> nat \\<Rightarrow> (nat \\<times> nat)\" where\n  \"choice f 0 = (0,0)\"\n| \"choice f (Suc n) = (let (i, j) = choice f n in \n    if Suc j < length (f i) \n      then (i, Suc j)\n      else (Suc i, 0))\""], ["", "lemma SN_rel_imp_SN_relto : \"SN_rel R S \\<Longrightarrow> SN (relto R S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel R S \\<Longrightarrow> SN (S\\<^sup>* O R O S\\<^sup>*)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_rel R S \\<Longrightarrow> SN (S\\<^sup>* O R O S\\<^sup>*)", "assume SN: \"SN_rel R S\""], ["proof (state)\nthis:\n  SN_rel R S\n\ngoal (1 subgoal):\n 1. SN_rel R S \\<Longrightarrow> SN (S\\<^sup>* O R O S\\<^sup>*)", "show \"SN (relto R S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN (S\\<^sup>* O R O S\\<^sup>*)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "assume  \"\\<forall> i. (f i, f (Suc i)) \\<in> relto R S\""], ["proof (state)\nthis:\n  \\<forall>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "hence steps: \"\\<And> i. (f i, f (Suc i)) \\<in> S^* O R O S^*\""], ["proof (prove)\nusing this:\n  \\<forall>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?prop = \"\\<lambda> i ai bi. (f i, bi) \\<in> S^* \\<and> (bi, ai) \\<in> R \\<and> (ai, f (Suc (i))) \\<in> S^*\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from steps"], ["proof (chain)\npicking this:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*", "obtain bi ai where \"?prop i ai bi\""], ["proof (prove)\nusing this:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<And>bi ai.\n        (f i, bi) \\<in> S\\<^sup>* \\<and>\n        (bi, ai) \\<in> R \\<and>\n        (ai, f (Suc i)) \\<in> S\\<^sup>* \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (f i, bi) \\<in> S\\<^sup>* \\<and>\n  (bi, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"\\<exists> ai bi. ?prop i ai bi\""], ["proof (prove)\nusing this:\n  (f i, bi) \\<in> S\\<^sup>* \\<and>\n  (bi, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<exists>ai bi.\n       (f i, bi) \\<in> S\\<^sup>* \\<and>\n       (bi, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  \\<exists>ai bi.\n     (f i, bi) \\<in> S\\<^sup>* \\<and>\n     (bi, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  \\<exists>ai bi.\n     (f ?i2, bi) \\<in> S\\<^sup>* \\<and>\n     (bi, ai) \\<in> R \\<and> (ai, f (Suc ?i2)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"\\<forall> i. \\<exists> bi ai. ?prop i ai bi\""], ["proof (prove)\nusing this:\n  \\<exists>ai bi.\n     (f ?i2, bi) \\<in> S\\<^sup>* \\<and>\n     (bi, ai) \\<in> R \\<and> (ai, f (Suc ?i2)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>bi ai.\n          (f i, bi) \\<in> S\\<^sup>* \\<and>\n          (bi, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<exists>bi ai.\n        (f i, bi) \\<in> S\\<^sup>* \\<and>\n        (bi, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from choice[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>fa.\n     \\<forall>x.\n        \\<exists>ai.\n           (f x, fa x) \\<in> S\\<^sup>* \\<and>\n           (fa x, ai) \\<in> R \\<and> (ai, f (Suc x)) \\<in> S\\<^sup>*", "obtain b where \"\\<forall> i. \\<exists> ai. ?prop i ai (b i)\""], ["proof (prove)\nusing this:\n  \\<exists>fa.\n     \\<forall>x.\n        \\<exists>ai.\n           (f x, fa x) \\<in> S\\<^sup>* \\<and>\n           (fa x, ai) \\<in> R \\<and> (ai, f (Suc x)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<forall>i.\n           \\<exists>ai.\n              (f i, b i) \\<in> S\\<^sup>* \\<and>\n              (b i, ai) \\<in> R \\<and>\n              (ai, f (Suc i)) \\<in> S\\<^sup>* \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<exists>ai.\n        (f i, b i) \\<in> S\\<^sup>* \\<and>\n        (b i, ai) \\<in> R \\<and> (ai, f (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from choice[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>fa.\n     \\<forall>x.\n        (f x, b x) \\<in> S\\<^sup>* \\<and>\n        (b x, fa x) \\<in> R \\<and> (fa x, f (Suc x)) \\<in> S\\<^sup>*", "obtain a where steps: \"\\<And> i. ?prop i (a i) (b i)\""], ["proof (prove)\nusing this:\n  \\<exists>fa.\n     \\<forall>x.\n        (f x, b x) \\<in> S\\<^sup>* \\<and>\n        (b x, fa x) \\<in> R \\<and> (fa x, f (Suc x)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        (\\<And>i.\n            (f i, b i) \\<in> S\\<^sup>* \\<and>\n            (b i, a i) \\<in> R \\<and>\n            (a i, f (Suc i)) \\<in> S\\<^sup>*) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (f ?i, b ?i) \\<in> S\\<^sup>* \\<and>\n  (b ?i, a ?i) \\<in> R \\<and> (a ?i, f (Suc ?i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?prop = \"\\<lambda> i li. (b i, a i) \\<in> R \\<and> (\\<forall> j < length li. ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and> last (a i # li) = b (Suc i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from steps[of i] steps[of \"Suc i\"]"], ["proof (chain)\npicking this:\n  (f i, b i) \\<in> S\\<^sup>* \\<and>\n  (b i, a i) \\<in> R \\<and> (a i, f (Suc i)) \\<in> S\\<^sup>*\n  (f (Suc i), b (Suc i)) \\<in> S\\<^sup>* \\<and>\n  (b (Suc i), a (Suc i)) \\<in> R \\<and>\n  (a (Suc i), f (Suc (Suc i))) \\<in> S\\<^sup>*", "have \"(a i, f (Suc i)) \\<in> S^*\" and \"(f (Suc i), b (Suc i)) \\<in> S^*\""], ["proof (prove)\nusing this:\n  (f i, b i) \\<in> S\\<^sup>* \\<and>\n  (b i, a i) \\<in> R \\<and> (a i, f (Suc i)) \\<in> S\\<^sup>*\n  (f (Suc i), b (Suc i)) \\<in> S\\<^sup>* \\<and>\n  (b (Suc i), a (Suc i)) \\<in> R \\<and>\n  (a (Suc i), f (Suc (Suc i))) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (a i, f (Suc i)) \\<in> S\\<^sup>* &&&\n    (f (Suc i), b (Suc i)) \\<in> S\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (a i, f (Suc i)) \\<in> S\\<^sup>*\n  (f (Suc i), b (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from rtrancl_trans[OF this] steps[of i]"], ["proof (chain)\npicking this:\n  (a i, b (Suc i)) \\<in> S\\<^sup>*\n  (f i, b i) \\<in> S\\<^sup>* \\<and>\n  (b i, a i) \\<in> R \\<and> (a i, f (Suc i)) \\<in> S\\<^sup>*", "have R: \"(b i, a i) \\<in> R\" and S: \"(a i, b (Suc i)) \\<in> S^*\""], ["proof (prove)\nusing this:\n  (a i, b (Suc i)) \\<in> S\\<^sup>*\n  (f i, b i) \\<in> S\\<^sup>* \\<and>\n  (b i, a i) \\<in> R \\<and> (a i, f (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (b i, a i) \\<in> R &&& (a i, b (Suc i)) \\<in> S\\<^sup>*", "by blast+"], ["proof (state)\nthis:\n  (b i, a i) \\<in> R\n  (a i, b (Suc i)) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from S[unfolded rtrancl_list_conv]"], ["proof (chain)\npicking this:\n  \\<exists>list.\n     last (a i # list) = b (Suc i) \\<and>\n     (\\<forall>ia<length list.\n         ((a i # list) ! ia, (a i # list) ! Suc ia) \\<in> S)", "obtain li where \"last (a i # li) = b (Suc i) \\<and> (\\<forall> j < length li. ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S)\""], ["proof (prove)\nusing this:\n  \\<exists>list.\n     last (a i # list) = b (Suc i) \\<and>\n     (\\<forall>ia<length list.\n         ((a i # list) ! ia, (a i # list) ! Suc ia) \\<in> S)\n\ngoal (1 subgoal):\n 1. (\\<And>li.\n        last (a i # li) = b (Suc i) \\<and>\n        (\\<forall>j<length li.\n            ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  last (a i # li) = b (Suc i) \\<and>\n  (\\<forall>j<length li. ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "with R"], ["proof (chain)\npicking this:\n  (b i, a i) \\<in> R\n  last (a i # li) = b (Suc i) \\<and>\n  (\\<forall>j<length li. ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S)", "have \"?prop i li\""], ["proof (prove)\nusing this:\n  (b i, a i) \\<in> R\n  last (a i # li) = b (Suc i) \\<and>\n  (\\<forall>j<length li. ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S)\n\ngoal (1 subgoal):\n 1. (b i, a i) \\<in> R \\<and>\n    (\\<forall>j<length li.\n        ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n    last (a i # li) = b (Suc i)", "by blast"], ["proof (state)\nthis:\n  (b i, a i) \\<in> R \\<and>\n  (\\<forall>j<length li.\n      ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n  last (a i # li) = b (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"\\<exists> li. ?prop i li\""], ["proof (prove)\nusing this:\n  (b i, a i) \\<in> R \\<and>\n  (\\<forall>j<length li.\n      ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n  last (a i # li) = b (Suc i)\n\ngoal (1 subgoal):\n 1. \\<exists>li.\n       (b i, a i) \\<in> R \\<and>\n       (\\<forall>j<length li.\n           ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n       last (a i # li) = b (Suc i)", ".."], ["proof (state)\nthis:\n  \\<exists>li.\n     (b i, a i) \\<in> R \\<and>\n     (\\<forall>j<length li.\n         ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n     last (a i # li) = b (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  \\<exists>li.\n     (b ?i2, a ?i2) \\<in> R \\<and>\n     (\\<forall>j<length li.\n         ((a ?i2 # li) ! j, (a ?i2 # li) ! Suc j) \\<in> S) \\<and>\n     last (a ?i2 # li) = b (Suc ?i2)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"\\<forall> i. \\<exists> li. ?prop i li\""], ["proof (prove)\nusing this:\n  \\<exists>li.\n     (b ?i2, a ?i2) \\<in> R \\<and>\n     (\\<forall>j<length li.\n         ((a ?i2 # li) ! j, (a ?i2 # li) ! Suc j) \\<in> S) \\<and>\n     last (a ?i2 # li) = b (Suc ?i2)\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<exists>li.\n          (b i, a i) \\<in> R \\<and>\n          (\\<forall>j<length li.\n              ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n          last (a i # li) = b (Suc i)", ".."], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<exists>li.\n        (b i, a i) \\<in> R \\<and>\n        (\\<forall>j<length li.\n            ((a i # li) ! j, (a i # li) ! Suc j) \\<in> S) \\<and>\n        last (a i # li) = b (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from choice[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>f.\n     \\<forall>x.\n        (b x, a x) \\<in> R \\<and>\n        (\\<forall>j<length (f x).\n            ((a x # f x) ! j, (a x # f x) ! Suc j) \\<in> S) \\<and>\n        last (a x # f x) = b (Suc x)", "obtain l where steps: \"\\<And> i. ?prop i (l i)\""], ["proof (prove)\nusing this:\n  \\<exists>f.\n     \\<forall>x.\n        (b x, a x) \\<in> R \\<and>\n        (\\<forall>j<length (f x).\n            ((a x # f x) ! j, (a x # f x) ! Suc j) \\<in> S) \\<and>\n        last (a x # f x) = b (Suc x)\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        (\\<And>i.\n            (b i, a i) \\<in> R \\<and>\n            (\\<forall>j<length (l i).\n                ((a i # l i) ! j, (a i # l i) ! Suc j) \\<in> S) \\<and>\n            last (a i # l i) = b (Suc i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (b ?i, a ?i) \\<in> R \\<and>\n  (\\<forall>j<length (l ?i).\n      ((a ?i # l ?i) ! j, (a ?i # l ?i) ! Suc j) \\<in> S) \\<and>\n  last (a ?i # l ?i) = b (Suc ?i)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?p = \"\\<lambda> i. ?prop i (l i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from steps"], ["proof (chain)\npicking this:\n  (b ?i, a ?i) \\<in> R \\<and>\n  (\\<forall>j<length (l ?i).\n      ((a ?i # l ?i) ! j, (a ?i # l ?i) ! Suc j) \\<in> S) \\<and>\n  last (a ?i # l ?i) = b (Suc ?i)", "have steps: \"\\<And> i. ?p i\""], ["proof (prove)\nusing this:\n  (b ?i, a ?i) \\<in> R \\<and>\n  (\\<forall>j<length (l ?i).\n      ((a ?i # l ?i) ! j, (a ?i # l ?i) ! Suc j) \\<in> S) \\<and>\n  last (a ?i # l ?i) = b (Suc ?i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       (b i, a i) \\<in> R \\<and>\n       (\\<forall>j<length (l i).\n           ((a i # l i) ! j, (a i # l i) ! Suc j) \\<in> S) \\<and>\n       last (a i # l i) = b (Suc i)", "by blast"], ["proof (state)\nthis:\n  (b ?i, a ?i) \\<in> R \\<and>\n  (\\<forall>j<length (l ?i).\n      ((a ?i # l ?i) ! j, (a ?i # l ?i) ! Suc j) \\<in> S) \\<and>\n  last (a ?i # l ?i) = b (Suc ?i)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?l = \"\\<lambda> i. a i # l i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "let ?g = \"\\<lambda> i. choice (\\<lambda> j. ?l j) i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "obtain g where g: \"\\<And> i. g i = (let (ii,jj) = ?g i in ?l ii ! jj)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        (\\<And>i.\n            g i =\n            (let (ii, jj) = choice (\\<lambda>j. a j # l j) i\n             in (a ii # l ii) ! jj)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g ?i =\n  (let (ii, jj) = choice (\\<lambda>j. a j # l j) ?i in (a ii # l ii) ! jj)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "have len: \"\\<And> i j n. ?g n = (i,j) \\<Longrightarrow> j < length (?l i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j n.\n       choice (\\<lambda>j. a j # l j) n = (i, j) \\<Longrightarrow>\n       j < length (a i # l i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j n.\n       choice (\\<lambda>j. a j # l j) n = (i, j) \\<Longrightarrow>\n       j < length (a i # l i)", "fix i j n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j n.\n       choice (\\<lambda>j. a j # l j) n = (i, j) \\<Longrightarrow>\n       j < length (a i # l i)", "assume n: \"?g n = (i,j)\""], ["proof (state)\nthis:\n  choice (\\<lambda>j. a j # l j) n = (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>i j n.\n       choice (\\<lambda>j. a j # l j) n = (i, j) \\<Longrightarrow>\n       j < length (a i # l i)", "show \"j < length (?l i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < length (a i # l i)", "proof (cases n)"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> j < length (a i # l i)\n 2. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "case 0"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> j < length (a i # l i)\n 2. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "with n"], ["proof (chain)\npicking this:\n  choice (\\<lambda>j. a j # l j) n = (i, j)\n  n = 0", "have \"j = 0\""], ["proof (prove)\nusing this:\n  choice (\\<lambda>j. a j # l j) n = (i, j)\n  n = 0\n\ngoal (1 subgoal):\n 1. j = 0", "by auto"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> j < length (a i # l i)\n 2. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "thus ?thesis"], ["proof (prove)\nusing this:\n  j = 0\n\ngoal (1 subgoal):\n 1. j < length (a i # l i)", "by simp"], ["proof (state)\nthis:\n  j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "case (Suc nn)"], ["proof (state)\nthis:\n  n = Suc nn\n\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "obtain ii jj where nn: \"?g nn = (ii,jj)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ii jj.\n        choice (\\<lambda>j. a j # l j) nn = (ii, jj) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"?g nn\", auto)"], ["proof (state)\nthis:\n  choice (\\<lambda>j. a j # l j) nn = (ii, jj)\n\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> j < length (a i # l i)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. j < length (a i # l i)", "proof (cases \"Suc jj < length (?l ii)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Suc jj < length (a ii # l ii) \\<Longrightarrow> j < length (a i # l i)\n 2. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "case True"], ["proof (state)\nthis:\n  Suc jj < length (a ii # l ii)\n\ngoal (2 subgoals):\n 1. Suc jj < length (a ii # l ii) \\<Longrightarrow> j < length (a i # l i)\n 2. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "with nn Suc"], ["proof (chain)\npicking this:\n  choice (\\<lambda>j. a j # l j) nn = (ii, jj)\n  n = Suc nn\n  Suc jj < length (a ii # l ii)", "have \"?g n = (ii, Suc jj)\""], ["proof (prove)\nusing this:\n  choice (\\<lambda>j. a j # l j) nn = (ii, jj)\n  n = Suc nn\n  Suc jj < length (a ii # l ii)\n\ngoal (1 subgoal):\n 1. choice (\\<lambda>j. a j # l j) n = (ii, Suc jj)", "by auto"], ["proof (state)\nthis:\n  choice (\\<lambda>j. a j # l j) n = (ii, Suc jj)\n\ngoal (2 subgoals):\n 1. Suc jj < length (a ii # l ii) \\<Longrightarrow> j < length (a i # l i)\n 2. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "with n True"], ["proof (chain)\npicking this:\n  choice (\\<lambda>j. a j # l j) n = (i, j)\n  Suc jj < length (a ii # l ii)\n  choice (\\<lambda>j. a j # l j) n = (ii, Suc jj)", "show ?thesis"], ["proof (prove)\nusing this:\n  choice (\\<lambda>j. a j # l j) n = (i, j)\n  Suc jj < length (a ii # l ii)\n  choice (\\<lambda>j. a j # l j) n = (ii, Suc jj)\n\ngoal (1 subgoal):\n 1. j < length (a i # l i)", "by simp"], ["proof (state)\nthis:\n  j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "case False"], ["proof (state)\nthis:\n  \\<not> Suc jj < length (a ii # l ii)\n\ngoal (1 subgoal):\n 1. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "with nn Suc"], ["proof (chain)\npicking this:\n  choice (\\<lambda>j. a j # l j) nn = (ii, jj)\n  n = Suc nn\n  \\<not> Suc jj < length (a ii # l ii)", "have \"?g n = (Suc ii, 0)\""], ["proof (prove)\nusing this:\n  choice (\\<lambda>j. a j # l j) nn = (ii, jj)\n  n = Suc nn\n  \\<not> Suc jj < length (a ii # l ii)\n\ngoal (1 subgoal):\n 1. choice (\\<lambda>j. a j # l j) n = (Suc ii, 0)", "by auto"], ["proof (state)\nthis:\n  choice (\\<lambda>j. a j # l j) n = (Suc ii, 0)\n\ngoal (1 subgoal):\n 1. \\<not> Suc jj < length (a ii # l ii) \\<Longrightarrow>\n    j < length (a i # l i)", "with n"], ["proof (chain)\npicking this:\n  choice (\\<lambda>j. a j # l j) n = (i, j)\n  choice (\\<lambda>j. a j # l j) n = (Suc ii, 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  choice (\\<lambda>j. a j # l j) n = (i, j)\n  choice (\\<lambda>j. a j # l j) n = (Suc ii, 0)\n\ngoal (1 subgoal):\n 1. j < length (a i # l i)", "by simp"], ["proof (state)\nthis:\n  j < length (a i # l i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  j < length (a i # l i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  j < length (a i # l i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  choice (\\<lambda>j. a j # l j) ?n = (?i, ?j) \\<Longrightarrow>\n  ?j < length (a ?i # l ?i)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "have gsteps: \"\\<And> i. (g i, g (Suc i)) \\<in> R \\<union> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. (g i, g (Suc i)) \\<in> R \\<union> S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. (g i, g (Suc i)) \\<in> R \\<union> S", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. (g i, g (Suc i)) \\<in> R \\<union> S", "obtain i j where n: \"?g n = (i, j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        choice (\\<lambda>j. a j # l j) n = (i, j) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"?g n\", auto)"], ["proof (state)\nthis:\n  choice (\\<lambda>j. a j # l j) n = (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>i. (g i, g (Suc i)) \\<in> R \\<union> S", "show \"(g n, g (Suc n)) \\<in> R \\<union> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g n, g (Suc n)) \\<in> R \\<union> S", "proof (cases \"Suc j < length (?l i)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S\n 2. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "case True"], ["proof (state)\nthis:\n  Suc j < length (a i # l i)\n\ngoal (2 subgoals):\n 1. Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S\n 2. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "with n"], ["proof (chain)\npicking this:\n  choice (\\<lambda>j. a j # l j) n = (i, j)\n  Suc j < length (a i # l i)", "have \"?g (Suc n) = (i, Suc j)\""], ["proof (prove)\nusing this:\n  choice (\\<lambda>j. a j # l j) n = (i, j)\n  Suc j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. choice (\\<lambda>j. a j # l j) (Suc n) = (i, Suc j)", "by auto"], ["proof (state)\nthis:\n  choice (\\<lambda>j. a j # l j) (Suc n) = (i, Suc j)\n\ngoal (2 subgoals):\n 1. Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S\n 2. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "with n"], ["proof (chain)\npicking this:\n  choice (\\<lambda>j. a j # l j) n = (i, j)\n  choice (\\<lambda>j. a j # l j) (Suc n) = (i, Suc j)", "have gn: \"g n = ?l i ! j\" and gsn: \"g (Suc n) = ?l i ! (Suc j)\""], ["proof (prove)\nusing this:\n  choice (\\<lambda>j. a j # l j) n = (i, j)\n  choice (\\<lambda>j. a j # l j) (Suc n) = (i, Suc j)\n\ngoal (1 subgoal):\n 1. g n = (a i # l i) ! j &&& g (Suc n) = (a i # l i) ! Suc j", "unfolding g"], ["proof (prove)\nusing this:\n  choice (\\<lambda>j. a j # l j) n = (i, j)\n  choice (\\<lambda>j. a j # l j) (Suc n) = (i, Suc j)\n\ngoal (1 subgoal):\n 1. (let (ii, y) = choice (\\<lambda>j. a j # l j) n in (a ii # l ii) ! y) =\n    (a i # l i) ! j &&&\n    (let (ii, y) = choice (\\<lambda>j. a j # l j) (Suc n)\n     in (a ii # l ii) ! y) =\n    (a i # l i) ! Suc j", "by auto"], ["proof (state)\nthis:\n  g n = (a i # l i) ! j\n  g (Suc n) = (a i # l i) ! Suc j\n\ngoal (2 subgoals):\n 1. Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S\n 2. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "thus ?thesis"], ["proof (prove)\nusing this:\n  g n = (a i # l i) ! j\n  g (Suc n) = (a i # l i) ! Suc j\n\ngoal (1 subgoal):\n 1. (g n, g (Suc n)) \\<in> R \\<union> S", "using steps[of i] True"], ["proof (prove)\nusing this:\n  g n = (a i # l i) ! j\n  g (Suc n) = (a i # l i) ! Suc j\n  (b i, a i) \\<in> R \\<and>\n  (\\<forall>j<length (l i).\n      ((a i # l i) ! j, (a i # l i) ! Suc j) \\<in> S) \\<and>\n  last (a i # l i) = b (Suc i)\n  Suc j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. (g n, g (Suc n)) \\<in> R \\<union> S", "by auto"], ["proof (state)\nthis:\n  (g n, g (Suc n)) \\<in> R \\<union> S\n\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "case False"], ["proof (state)\nthis:\n  \\<not> Suc j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "with n"], ["proof (chain)\npicking this:\n  choice (\\<lambda>j. a j # l j) n = (i, j)\n  \\<not> Suc j < length (a i # l i)", "have \"?g (Suc n) = (Suc i, 0)\""], ["proof (prove)\nusing this:\n  choice (\\<lambda>j. a j # l j) n = (i, j)\n  \\<not> Suc j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. choice (\\<lambda>j. a j # l j) (Suc n) = (Suc i, 0)", "by auto"], ["proof (state)\nthis:\n  choice (\\<lambda>j. a j # l j) (Suc n) = (Suc i, 0)\n\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "with n"], ["proof (chain)\npicking this:\n  choice (\\<lambda>j. a j # l j) n = (i, j)\n  choice (\\<lambda>j. a j # l j) (Suc n) = (Suc i, 0)", "have gn: \"g n = ?l i ! j\" and gsn: \"g (Suc n) = a (Suc i)\""], ["proof (prove)\nusing this:\n  choice (\\<lambda>j. a j # l j) n = (i, j)\n  choice (\\<lambda>j. a j # l j) (Suc n) = (Suc i, 0)\n\ngoal (1 subgoal):\n 1. g n = (a i # l i) ! j &&& g (Suc n) = a (Suc i)", "unfolding g"], ["proof (prove)\nusing this:\n  choice (\\<lambda>j. a j # l j) n = (i, j)\n  choice (\\<lambda>j. a j # l j) (Suc n) = (Suc i, 0)\n\ngoal (1 subgoal):\n 1. (let (ii, y) = choice (\\<lambda>j. a j # l j) n in (a ii # l ii) ! y) =\n    (a i # l i) ! j &&&\n    (let (ii, y) = choice (\\<lambda>j. a j # l j) (Suc n)\n     in (a ii # l ii) ! y) =\n    a (Suc i)", "by auto"], ["proof (state)\nthis:\n  g n = (a i # l i) ! j\n  g (Suc n) = a (Suc i)\n\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "from gn len[OF n] False"], ["proof (chain)\npicking this:\n  g n = (a i # l i) ! j\n  j < length (a i # l i)\n  \\<not> Suc j < length (a i # l i)", "have \"j = length (?l i) - 1\""], ["proof (prove)\nusing this:\n  g n = (a i # l i) ! j\n  j < length (a i # l i)\n  \\<not> Suc j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. j = length (a i # l i) - 1", "by auto"], ["proof (state)\nthis:\n  j = length (a i # l i) - 1\n\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "with gn"], ["proof (chain)\npicking this:\n  g n = (a i # l i) ! j\n  j = length (a i # l i) - 1", "have gn: \"g n = last (?l i)\""], ["proof (prove)\nusing this:\n  g n = (a i # l i) ! j\n  j = length (a i # l i) - 1\n\ngoal (1 subgoal):\n 1. g n = last (a i # l i)", "using last_conv_nth[of \"?l i\"]"], ["proof (prove)\nusing this:\n  g n = (a i # l i) ! j\n  j = length (a i # l i) - 1\n  a i # l i \\<noteq> [] \\<Longrightarrow>\n  last (a i # l i) = (a i # l i) ! (length (a i # l i) - 1)\n\ngoal (1 subgoal):\n 1. g n = last (a i # l i)", "by auto"], ["proof (state)\nthis:\n  g n = last (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<not> Suc j < length (a i # l i) \\<Longrightarrow>\n    (g n, g (Suc n)) \\<in> R \\<union> S", "from gn gsn"], ["proof (chain)\npicking this:\n  g n = last (a i # l i)\n  g (Suc n) = a (Suc i)", "show ?thesis"], ["proof (prove)\nusing this:\n  g n = last (a i # l i)\n  g (Suc n) = a (Suc i)\n\ngoal (1 subgoal):\n 1. (g n, g (Suc n)) \\<in> R \\<union> S", "using steps[of i] steps[of \"Suc i\"]"], ["proof (prove)\nusing this:\n  g n = last (a i # l i)\n  g (Suc n) = a (Suc i)\n  (b i, a i) \\<in> R \\<and>\n  (\\<forall>j<length (l i).\n      ((a i # l i) ! j, (a i # l i) ! Suc j) \\<in> S) \\<and>\n  last (a i # l i) = b (Suc i)\n  (b (Suc i), a (Suc i)) \\<in> R \\<and>\n  (\\<forall>j<length (l (Suc i)).\n      ((a (Suc i) # l (Suc i)) ! j, (a (Suc i) # l (Suc i)) ! Suc j)\n      \\<in> S) \\<and>\n  last (a (Suc i) # l (Suc i)) = b (Suc (Suc i))\n\ngoal (1 subgoal):\n 1. (g n, g (Suc n)) \\<in> R \\<union> S", "by auto"], ["proof (state)\nthis:\n  (g n, g (Suc n)) \\<in> R \\<union> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (g n, g (Suc n)) \\<in> R \\<union> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (g ?i, g (Suc ?i)) \\<in> R \\<union> S\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "have infR:  \"\\<forall> n. \\<exists> j \\<ge> n. (g j, g (Suc j)) \\<in> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "obtain i j where n: \"?g n = (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        choice (\\<lambda>j. a j # l j) n = (i, j) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"?g n\", auto)"], ["proof (state)\nthis:\n  choice (\\<lambda>j. a j # l j) n = (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "from len[OF n]"], ["proof (chain)\npicking this:\n  j < length (a i # l i)", "have j: \"j \\<le> length (?l i) - 1\""], ["proof (prove)\nusing this:\n  j < length (a i # l i)\n\ngoal (1 subgoal):\n 1. j \\<le> length (a i # l i) - 1", "by simp"], ["proof (state)\nthis:\n  j \\<le> length (a i # l i) - 1\n\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "let ?k = \"length (?l i) - 1 - j\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "obtain k where k: \"k = j + ?k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        k = j + (length (a i # l i) - 1 - j) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k = j + (length (a i # l i) - 1 - j)\n\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "from j k"], ["proof (chain)\npicking this:\n  j \\<le> length (a i # l i) - 1\n  k = j + (length (a i # l i) - 1 - j)", "have k2: \"k = length (?l i) - 1\" and k3: \"j + ?k < length (?l i)\""], ["proof (prove)\nusing this:\n  j \\<le> length (a i # l i) - 1\n  k = j + (length (a i # l i) - 1 - j)\n\ngoal (1 subgoal):\n 1. k = length (a i # l i) - 1 &&&\n    j + (length (a i # l i) - 1 - j) < length (a i # l i)", "by auto"], ["proof (state)\nthis:\n  k = length (a i # l i) - 1\n  j + (length (a i # l i) - 1 - j) < length (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "{"], ["proof (state)\nthis:\n  k = length (a i # l i) - 1\n  j + (length (a i # l i) - 1 - j) < length (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "fix n i j k l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "assume n: \"choice l n = (i,j)\" and \"j + k < length (l i)\""], ["proof (state)\nthis:\n  choice l n = (i, j)\n  j + k < length (l i)\n\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "hence \"choice l (n + k) = (i, j + k)\""], ["proof (prove)\nusing this:\n  choice l n = (i, j)\n  j + k < length (l i)\n\ngoal (1 subgoal):\n 1. choice l (n + k) = (i, j + k)", "by (induct k arbitrary: j, simp, auto)"], ["proof (state)\nthis:\n  choice l (n + k) = (i, j + k)\n\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "}"], ["proof (state)\nthis:\n  \\<lbrakk>choice ?la2 ?na2 = (?ia2, ?ja2);\n   ?ja2 + ?ka2 < length (?la2 ?ia2)\\<rbrakk>\n  \\<Longrightarrow> choice ?la2 (?na2 + ?ka2) = (?ia2, ?ja2 + ?ka2)\n\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "from this[OF n, of ?k, OF k3]"], ["proof (chain)\npicking this:\n  choice (\\<lambda>j. a j # l j) (n + (length (a i # l i) - 1 - j)) =\n  (i, j + (length (a i # l i) - 1 - j))", "have gnk: \"?g (n + ?k) = (i, k)\""], ["proof (prove)\nusing this:\n  choice (\\<lambda>j. a j # l j) (n + (length (a i # l i) - 1 - j)) =\n  (i, j + (length (a i # l i) - 1 - j))\n\ngoal (1 subgoal):\n 1. choice (\\<lambda>j. a j # l j) (n + (length (a i # l i) - 1 - j)) =\n    (i, k)", "by (simp only: k)"], ["proof (state)\nthis:\n  choice (\\<lambda>j. a j # l j) (n + (length (a i # l i) - 1 - j)) = (i, k)\n\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "hence \"g (n + ?k) = ?l i ! k\""], ["proof (prove)\nusing this:\n  choice (\\<lambda>j. a j # l j) (n + (length (a i # l i) - 1 - j)) = (i, k)\n\ngoal (1 subgoal):\n 1. g (n + (length (a i # l i) - 1 - j)) = (a i # l i) ! k", "unfolding g"], ["proof (prove)\nusing this:\n  choice (\\<lambda>j. a j # l j) (n + (length (a i # l i) - 1 - j)) = (i, k)\n\ngoal (1 subgoal):\n 1. (let (ii, y) =\n           choice (\\<lambda>j. a j # l j) (n + (length (a i # l i) - 1 - j))\n     in (a ii # l ii) ! y) =\n    (a i # l i) ! k", "by auto"], ["proof (state)\nthis:\n  g (n + (length (a i # l i) - 1 - j)) = (a i # l i) ! k\n\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "hence gnk2: \"g (n + ?k) = last (?l i)\""], ["proof (prove)\nusing this:\n  g (n + (length (a i # l i) - 1 - j)) = (a i # l i) ! k\n\ngoal (1 subgoal):\n 1. g (n + (length (a i # l i) - 1 - j)) = last (a i # l i)", "using last_conv_nth[of \"?l i\"] k2"], ["proof (prove)\nusing this:\n  g (n + (length (a i # l i) - 1 - j)) = (a i # l i) ! k\n  a i # l i \\<noteq> [] \\<Longrightarrow>\n  last (a i # l i) = (a i # l i) ! (length (a i # l i) - 1)\n  k = length (a i # l i) - 1\n\ngoal (1 subgoal):\n 1. g (n + (length (a i # l i) - 1 - j)) = last (a i # l i)", "by auto"], ["proof (state)\nthis:\n  g (n + (length (a i # l i) - 1 - j)) = last (a i # l i)\n\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "from k2 gnk"], ["proof (chain)\npicking this:\n  k = length (a i # l i) - 1\n  choice (\\<lambda>j. a j # l j) (n + (length (a i # l i) - 1 - j)) = (i, k)", "have \"?g (Suc (n+?k)) = (Suc i, 0)\""], ["proof (prove)\nusing this:\n  k = length (a i # l i) - 1\n  choice (\\<lambda>j. a j # l j) (n + (length (a i # l i) - 1 - j)) = (i, k)\n\ngoal (1 subgoal):\n 1. choice (\\<lambda>j. a j # l j)\n     (Suc (n + (length (a i # l i) - 1 - j))) =\n    (Suc i, 0)", "by auto"], ["proof (state)\nthis:\n  choice (\\<lambda>j. a j # l j) (Suc (n + (length (a i # l i) - 1 - j))) =\n  (Suc i, 0)\n\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "hence gnsk2: \"g (Suc (n+?k)) = a (Suc i)\""], ["proof (prove)\nusing this:\n  choice (\\<lambda>j. a j # l j) (Suc (n + (length (a i # l i) - 1 - j))) =\n  (Suc i, 0)\n\ngoal (1 subgoal):\n 1. g (Suc (n + (length (a i # l i) - 1 - j))) = a (Suc i)", "unfolding g"], ["proof (prove)\nusing this:\n  choice (\\<lambda>j. a j # l j) (Suc (n + (length (a i # l i) - 1 - j))) =\n  (Suc i, 0)\n\ngoal (1 subgoal):\n 1. (let (ii, y) =\n           choice (\\<lambda>j. a j # l j)\n            (Suc (n + (length (a i # l i) - 1 - j)))\n     in (a ii # l ii) ! y) =\n    a (Suc i)", "by auto"], ["proof (state)\nthis:\n  g (Suc (n + (length (a i # l i) - 1 - j))) = a (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "from steps[of i] steps[of \"Suc i\"]"], ["proof (chain)\npicking this:\n  (b i, a i) \\<in> R \\<and>\n  (\\<forall>j<length (l i).\n      ((a i # l i) ! j, (a i # l i) ! Suc j) \\<in> S) \\<and>\n  last (a i # l i) = b (Suc i)\n  (b (Suc i), a (Suc i)) \\<in> R \\<and>\n  (\\<forall>j<length (l (Suc i)).\n      ((a (Suc i) # l (Suc i)) ! j, (a (Suc i) # l (Suc i)) ! Suc j)\n      \\<in> S) \\<and>\n  last (a (Suc i) # l (Suc i)) = b (Suc (Suc i))", "have main: \"(g (n+?k), g (Suc (n+?k))) \\<in> R\""], ["proof (prove)\nusing this:\n  (b i, a i) \\<in> R \\<and>\n  (\\<forall>j<length (l i).\n      ((a i # l i) ! j, (a i # l i) ! Suc j) \\<in> S) \\<and>\n  last (a i # l i) = b (Suc i)\n  (b (Suc i), a (Suc i)) \\<in> R \\<and>\n  (\\<forall>j<length (l (Suc i)).\n      ((a (Suc i) # l (Suc i)) ! j, (a (Suc i) # l (Suc i)) ! Suc j)\n      \\<in> S) \\<and>\n  last (a (Suc i) # l (Suc i)) = b (Suc (Suc i))\n\ngoal (1 subgoal):\n 1. (g (n + (length (a i # l i) - 1 - j)),\n     g (Suc (n + (length (a i # l i) - 1 - j))))\n    \\<in> R", "by (simp only: gnk2 gnsk2)"], ["proof (state)\nthis:\n  (g (n + (length (a i # l i) - 1 - j)),\n   g (Suc (n + (length (a i # l i) - 1 - j))))\n  \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "show \"\\<exists> j \\<ge> n. (g j, g (Suc j)) \\<in> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "by (rule exI[of _ \"n + ?k\"], auto simp: main[simplified])"], ["proof (state)\nthis:\n  \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i.\n           (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from SN[simplified SN_rel_on_conv SN_rel_defs] gsteps infR"], ["proof (chain)\npicking this:\n  \\<forall>f.\n     (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n     f 0 \\<in> UNIV \\<longrightarrow>\n     \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)\n  (g ?i, g (Suc ?i)) \\<in> R \\<union> S\n  \\<forall>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R", "show False"], ["proof (prove)\nusing this:\n  \\<forall>f.\n     (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n     f 0 \\<in> UNIV \\<longrightarrow>\n     \\<not> (\\<exists>\\<^sub>\\<infinity>j. (f j, f (Suc j)) \\<in> R)\n  (g ?i, g (Suc ?i)) \\<in> R \\<union> S\n  \\<forall>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R\n\ngoal (1 subgoal):\n 1. False", "unfolding INFM_nat_le"], ["proof (prove)\nusing this:\n  \\<forall>f.\n     (\\<forall>i. (f i, f (Suc i)) \\<in> R \\<union> S) \\<and>\n     f 0 \\<in> UNIV \\<longrightarrow>\n     \\<not> (\\<forall>m. \\<exists>n\\<ge>m. (f n, f (Suc n)) \\<in> R)\n  (g ?i, g (Suc ?i)) \\<in> R \\<union> S\n  \\<forall>n. \\<exists>j\\<ge>n. (g j, g (Suc j)) \\<in> R\n\ngoal (1 subgoal):\n 1. False", "by fast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN (S\\<^sup>* O R O S\\<^sup>*)\n\ngoal:\nNo subgoals!", "qed"], ["", "hide_const choice"], ["", "lemma SN_relto_SN_rel_conv: \"SN (relto R S) = SN_rel R S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN (S\\<^sup>* O R O S\\<^sup>*) = SN_rel R S", "by (blast intro: SN_relto_imp_SN_rel SN_rel_imp_SN_relto)"], ["", "lemma SN_rel_empty1: \"SN_rel {} S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel {} S", "unfolding SN_rel_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN (S\\<^sup>* O {} O S\\<^sup>*)", "by auto"], ["", "lemma SN_rel_empty2: \"SN_rel R {} = SN R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_rel R {} = SN R", "unfolding SN_rel_defs SN_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<nexists>f.\n        f 0 \\<in> UNIV \\<and>\n        (\\<forall>i. (f i, f (Suc i)) \\<in> {}\\<^sup>* O R O {}\\<^sup>*)) =\n    (\\<nexists>f.\n        f 0 \\<in> UNIV \\<and> (\\<forall>i. (f i, f (Suc i)) \\<in> R))", "by auto"], ["", "lemma SN_relto_mono:\n  assumes R: \"R \\<subseteq> R'\" and S: \"S \\<subseteq> S'\"\n  and SN: \"SN (relto R' S')\"\n  shows \"SN (relto R S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN (S\\<^sup>* O R O S\\<^sup>*)", "using SN SN_subset[OF _ relto_mono[OF R S]]"], ["proof (prove)\nusing this:\n  SN (S'\\<^sup>* O R' O S'\\<^sup>*)\n  SN (S'\\<^sup>* O R' O S'\\<^sup>*) \\<Longrightarrow>\n  SN (S\\<^sup>* O R O S\\<^sup>*)\n\ngoal (1 subgoal):\n 1. SN (S\\<^sup>* O R O S\\<^sup>*)", "by blast"], ["", "lemma SN_relto_imp_SN:\n  assumes \"SN (relto R S)\" shows \"SN R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN R", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i. (f i, f (Suc i)) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> False", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i. (f i, f (Suc i)) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"\\<forall>i. (f i, f (Suc i)) \\<in> R\""], ["proof (state)\nthis:\n  \\<forall>i. (f i, f (Suc i)) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i. (f i, f (Suc i)) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"\\<And>i. (f i, f (Suc i)) \\<in> relto R S\""], ["proof (prove)\nusing this:\n  \\<forall>i. (f i, f (Suc i)) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i. (f i, f (Suc i)) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n  SN (S\\<^sup>* O R O S\\<^sup>*)\n\ngoal (1 subgoal):\n 1. False", "unfolding SN_defs"], ["proof (prove)\nusing this:\n  (f ?i, f (Suc ?i)) \\<in> S\\<^sup>* O R O S\\<^sup>*\n  \\<nexists>f.\n     f 0 \\<in> UNIV \\<and>\n     (\\<forall>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O R O S\\<^sup>*)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SN_relto_Id:\n  \"SN (relto R (S \\<union> Id)) = SN (relto R S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN ((S\\<^sup>=)\\<^sup>* O R O (S\\<^sup>=)\\<^sup>*) =\n    SN (S\\<^sup>* O R O S\\<^sup>*)", "by (simp only: relto_Id)"], ["", "text \\<open>Termination inheritance by transitivity (see, e.g., Geser's thesis).\\<close>"], ["", "lemma trans_subset_SN:\n  assumes \"trans R\" and \"R \\<subseteq> (r \\<union> s)\" and \"SN r\" and \"SN s\"\n  shows \"SN R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN R", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i. (f i, f (Suc i)) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> False", "fix f :: \"nat \\<Rightarrow> 'a\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i. (f i, f (Suc i)) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"f 0 \\<in> UNIV\"\n    and chain: \"chain R f\""], ["proof (state)\nthis:\n  f 0 \\<in> UNIV\n  \\<forall>i. (f i, f (Suc i)) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i. (f i, f (Suc i)) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> False", "have *: \"\\<And>i j. i < j \\<Longrightarrow> (f i, f j) \\<in> r \\<union> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j. i < j \\<Longrightarrow> (f i, f j) \\<in> r \\<union> s", "using assms and chain_imp_trancl [OF chain]"], ["proof (prove)\nusing this:\n  trans R\n  R \\<subseteq> r \\<union> s\n  SN r\n  SN s\n  ?i < ?j \\<Longrightarrow> (f ?i, f ?j) \\<in> R\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>i j. i < j \\<Longrightarrow> (f i, f j) \\<in> r \\<union> s", "by auto"], ["proof (state)\nthis:\n  ?i < ?j \\<Longrightarrow> (f ?i, f ?j) \\<in> r \\<union> s\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i. (f i, f (Suc i)) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> False", "let ?M = \"{i. \\<forall>j>i. (f i, f j) \\<notin> r}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> UNIV;\n        \\<forall>i. (f i, f (Suc i)) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"finite ?M\")"], ["proof (state)\ngoal (2 subgoals):\n 1. finite {i. \\<forall>j>i. (f i, f j) \\<notin> r} \\<Longrightarrow> False\n 2. infinite {i. \\<forall>j>i. (f i, f j) \\<notin> r} \\<Longrightarrow>\n    False", "let ?n = \"Max ?M\""], ["proof (state)\ngoal (2 subgoals):\n 1. finite {i. \\<forall>j>i. (f i, f j) \\<notin> r} \\<Longrightarrow> False\n 2. infinite {i. \\<forall>j>i. (f i, f j) \\<notin> r} \\<Longrightarrow>\n    False", "assume \"finite ?M\""], ["proof (state)\nthis:\n  finite {i. \\<forall>j>i. (f i, f j) \\<notin> r}\n\ngoal (2 subgoals):\n 1. finite {i. \\<forall>j>i. (f i, f j) \\<notin> r} \\<Longrightarrow> False\n 2. infinite {i. \\<forall>j>i. (f i, f j) \\<notin> r} \\<Longrightarrow>\n    False", "with Max_ge"], ["proof (chain)\npicking this:\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk> \\<Longrightarrow> ?x \\<le> Max ?A\n  finite {i. \\<forall>j>i. (f i, f j) \\<notin> r}", "have \"\\<forall>i\\<in>?M. i \\<le> ?n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk> \\<Longrightarrow> ?x \\<le> Max ?A\n  finite {i. \\<forall>j>i. (f i, f j) \\<notin> r}\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{i. \\<forall>j>i. (f i, f j) \\<notin> r}.\n       i \\<le> Max {i. \\<forall>j>i. (f i, f j) \\<notin> r}", "by simp"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{i. \\<forall>j>i. (f i, f j) \\<notin> r}.\n     i \\<le> Max {i. \\<forall>j>i. (f i, f j) \\<notin> r}\n\ngoal (2 subgoals):\n 1. finite {i. \\<forall>j>i. (f i, f j) \\<notin> r} \\<Longrightarrow> False\n 2. infinite {i. \\<forall>j>i. (f i, f j) \\<notin> r} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<forall>i\\<in>{i. \\<forall>j>i. (f i, f j) \\<notin> r}.\n     i \\<le> Max {i. \\<forall>j>i. (f i, f j) \\<notin> r}", "have \"\\<forall>k\\<ge>Suc ?n. \\<exists>k'>k. (f k, f k') \\<in> r\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{i. \\<forall>j>i. (f i, f j) \\<notin> r}.\n     i \\<le> Max {i. \\<forall>j>i. (f i, f j) \\<notin> r}\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<ge>Suc (Max {i. \\<forall>j>i. (f i, f j) \\<notin> r}).\n       \\<exists>k'>k. (f k, f k') \\<in> r", "by auto"], ["proof (state)\nthis:\n  \\<forall>k\\<ge>Suc (Max {i. \\<forall>j>i. (f i, f j) \\<notin> r}).\n     \\<exists>k'>k. (f k, f k') \\<in> r\n\ngoal (2 subgoals):\n 1. finite {i. \\<forall>j>i. (f i, f j) \\<notin> r} \\<Longrightarrow> False\n 2. infinite {i. \\<forall>j>i. (f i, f j) \\<notin> r} \\<Longrightarrow>\n    False", "with steps_imp_chainp [of \"Suc ?n\" \"\\<lambda>x y. (x, y) \\<in> r\"] and assms"], ["proof (chain)\npicking this:\n  \\<forall>i\\<ge>Suc (Max {i. \\<forall>j>i. (f i, f j) \\<notin> r}).\n     \\<exists>j>i. (?S i, ?S j) \\<in> r \\<Longrightarrow>\n  \\<exists>T. \\<forall>i. (T i, T (Suc i)) \\<in> r\n  trans R\n  R \\<subseteq> r \\<union> s\n  SN r\n  SN s\n  \\<forall>k\\<ge>Suc (Max {i. \\<forall>j>i. (f i, f j) \\<notin> r}).\n     \\<exists>k'>k. (f k, f k') \\<in> r", "show False"], ["proof (prove)\nusing this:\n  \\<forall>i\\<ge>Suc (Max {i. \\<forall>j>i. (f i, f j) \\<notin> r}).\n     \\<exists>j>i. (?S i, ?S j) \\<in> r \\<Longrightarrow>\n  \\<exists>T. \\<forall>i. (T i, T (Suc i)) \\<in> r\n  trans R\n  R \\<subseteq> r \\<union> s\n  SN r\n  SN s\n  \\<forall>k\\<ge>Suc (Max {i. \\<forall>j>i. (f i, f j) \\<notin> r}).\n     \\<exists>k'>k. (f k, f k') \\<in> r\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. infinite {i. \\<forall>j>i. (f i, f j) \\<notin> r} \\<Longrightarrow>\n    False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite {i. \\<forall>j>i. (f i, f j) \\<notin> r} \\<Longrightarrow>\n    False", "assume \"infinite ?M\""], ["proof (state)\nthis:\n  infinite {i. \\<forall>j>i. (f i, f j) \\<notin> r}\n\ngoal (1 subgoal):\n 1. infinite {i. \\<forall>j>i. (f i, f j) \\<notin> r} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  infinite {i. \\<forall>j>i. (f i, f j) \\<notin> r}", "have \"INFM j. j \\<in> ?M\""], ["proof (prove)\nusing this:\n  infinite {i. \\<forall>j>i. (f i, f j) \\<notin> r}\n\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>\\<infinity>j.\n       j \\<in> {i. \\<forall>j>i. (f i, f j) \\<notin> r}", "by (simp add: Inf_many_def)"], ["proof (state)\nthis:\n  \\<exists>\\<^sub>\\<infinity>j.\n     j \\<in> {i. \\<forall>j>i. (f i, f j) \\<notin> r}\n\ngoal (1 subgoal):\n 1. infinite {i. \\<forall>j>i. (f i, f j) \\<notin> r} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>\\<^sub>\\<infinity>j.\n     j \\<in> {i. \\<forall>j>i. (f i, f j) \\<notin> r}", "interpret infinitely_many \"\\<lambda>i. i \\<in> ?M\""], ["proof (prove)\nusing this:\n  \\<exists>\\<^sub>\\<infinity>j.\n     j \\<in> {i. \\<forall>j>i. (f i, f j) \\<notin> r}\n\ngoal (1 subgoal):\n 1. infinitely_many\n     (\\<lambda>i. i \\<in> {i. \\<forall>j>i. (f i, f j) \\<notin> r})", "by (unfold_locales) assumption"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite {i. \\<forall>j>i. (f i, f j) \\<notin> r} \\<Longrightarrow>\n    False", "define g where [simp]: \"g = index\""], ["proof (state)\nthis:\n  g = index\n\ngoal (1 subgoal):\n 1. infinite {i. \\<forall>j>i. (f i, f j) \\<notin> r} \\<Longrightarrow>\n    False", "have \"\\<forall>i. (f (g i), f (g (Suc i))) \\<in> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i. (f (g i), f (g (Suc i))) \\<in> s", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. (f (g i), f (g (Suc i))) \\<in> s", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. (f (g i), f (g (Suc i))) \\<in> s", "have less: \"g i < g (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g i < g (Suc i)", "using index_ordered_less [of i \"Suc i\"]"], ["proof (prove)\nusing this:\n  i < Suc i \\<Longrightarrow> index i < index (Suc i)\n\ngoal (1 subgoal):\n 1. g i < g (Suc i)", "by simp"], ["proof (state)\nthis:\n  g i < g (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>i. (f (g i), f (g (Suc i))) \\<in> s", "have \"g i \\<in> ?M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g i \\<in> {i. \\<forall>j>i. (f i, f j) \\<notin> r}", "using index_p"], ["proof (prove)\nusing this:\n  index ?n \\<in> {i. \\<forall>j>i. (f i, f j) \\<notin> r}\n\ngoal (1 subgoal):\n 1. g i \\<in> {i. \\<forall>j>i. (f i, f j) \\<notin> r}", "by simp"], ["proof (state)\nthis:\n  g i \\<in> {i. \\<forall>j>i. (f i, f j) \\<notin> r}\n\ngoal (1 subgoal):\n 1. \\<And>i. (f (g i), f (g (Suc i))) \\<in> s", "then"], ["proof (chain)\npicking this:\n  g i \\<in> {i. \\<forall>j>i. (f i, f j) \\<notin> r}", "have \"(f (g i), f (g (Suc i))) \\<notin> r\""], ["proof (prove)\nusing this:\n  g i \\<in> {i. \\<forall>j>i. (f i, f j) \\<notin> r}\n\ngoal (1 subgoal):\n 1. (f (g i), f (g (Suc i))) \\<notin> r", "using less"], ["proof (prove)\nusing this:\n  g i \\<in> {i. \\<forall>j>i. (f i, f j) \\<notin> r}\n  g i < g (Suc i)\n\ngoal (1 subgoal):\n 1. (f (g i), f (g (Suc i))) \\<notin> r", "by simp"], ["proof (state)\nthis:\n  (f (g i), f (g (Suc i))) \\<notin> r\n\ngoal (1 subgoal):\n 1. \\<And>i. (f (g i), f (g (Suc i))) \\<in> s", "moreover"], ["proof (state)\nthis:\n  (f (g i), f (g (Suc i))) \\<notin> r\n\ngoal (1 subgoal):\n 1. \\<And>i. (f (g i), f (g (Suc i))) \\<in> s", "have \"(f (g i), f (g (Suc i))) \\<in> r \\<union> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f (g i), f (g (Suc i))) \\<in> r \\<union> s", "using * [OF less]"], ["proof (prove)\nusing this:\n  (f (g i), f (g (Suc i))) \\<in> r \\<union> s\n\ngoal (1 subgoal):\n 1. (f (g i), f (g (Suc i))) \\<in> r \\<union> s", "by simp"], ["proof (state)\nthis:\n  (f (g i), f (g (Suc i))) \\<in> r \\<union> s\n\ngoal (1 subgoal):\n 1. \\<And>i. (f (g i), f (g (Suc i))) \\<in> s", "ultimately"], ["proof (chain)\npicking this:\n  (f (g i), f (g (Suc i))) \\<notin> r\n  (f (g i), f (g (Suc i))) \\<in> r \\<union> s", "show \"(f (g i), f (g (Suc i))) \\<in> s\""], ["proof (prove)\nusing this:\n  (f (g i), f (g (Suc i))) \\<notin> r\n  (f (g i), f (g (Suc i))) \\<in> r \\<union> s\n\ngoal (1 subgoal):\n 1. (f (g i), f (g (Suc i))) \\<in> s", "by blast"], ["proof (state)\nthis:\n  (f (g i), f (g (Suc i))) \\<in> s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i. (f (g i), f (g (Suc i))) \\<in> s\n\ngoal (1 subgoal):\n 1. infinite {i. \\<forall>j>i. (f i, f j) \\<notin> r} \\<Longrightarrow>\n    False", "with \\<open>SN s\\<close>"], ["proof (chain)\npicking this:\n  SN s\n  \\<forall>i. (f (g i), f (g (Suc i))) \\<in> s", "show False"], ["proof (prove)\nusing this:\n  SN s\n  \\<forall>i. (f (g i), f (g (Suc i))) \\<in> s\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: SN_defs)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SN_Un_conv:\n  assumes \"trans (r \\<union> s)\"\n  shows \"SN (r \\<union> s) \\<longleftrightarrow> SN r \\<and> SN s\"\n    (is \"SN ?r \\<longleftrightarrow> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN (r \\<union> s) = (SN r \\<and> SN s)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. SN (r \\<union> s) \\<Longrightarrow> SN r \\<and> SN s\n 2. SN r \\<and> SN s \\<Longrightarrow> SN (r \\<union> s)", "assume \"SN (r \\<union> s)\""], ["proof (state)\nthis:\n  SN (r \\<union> s)\n\ngoal (2 subgoals):\n 1. SN (r \\<union> s) \\<Longrightarrow> SN r \\<and> SN s\n 2. SN r \\<and> SN s \\<Longrightarrow> SN (r \\<union> s)", "thus \"SN r \\<and> SN s\""], ["proof (prove)\nusing this:\n  SN (r \\<union> s)\n\ngoal (1 subgoal):\n 1. SN r \\<and> SN s", "using SN_subset[of ?r]"], ["proof (prove)\nusing this:\n  SN (r \\<union> s)\n  \\<lbrakk>SN (r \\<union> s); ?R' \\<subseteq> r \\<union> s\\<rbrakk>\n  \\<Longrightarrow> SN ?R'\n\ngoal (1 subgoal):\n 1. SN r \\<and> SN s", "by blast"], ["proof (state)\nthis:\n  SN r \\<and> SN s\n\ngoal (1 subgoal):\n 1. SN r \\<and> SN s \\<Longrightarrow> SN (r \\<union> s)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. SN r \\<and> SN s \\<Longrightarrow> SN (r \\<union> s)", "assume \"SN r \\<and> SN s\""], ["proof (state)\nthis:\n  SN r \\<and> SN s\n\ngoal (1 subgoal):\n 1. SN r \\<and> SN s \\<Longrightarrow> SN (r \\<union> s)", "with trans_subset_SN[OF assms subset_refl]"], ["proof (chain)\npicking this:\n  \\<lbrakk>SN r; SN s\\<rbrakk> \\<Longrightarrow> SN (r \\<union> s)\n  SN r \\<and> SN s", "show \"SN ?r\""], ["proof (prove)\nusing this:\n  \\<lbrakk>SN r; SN s\\<rbrakk> \\<Longrightarrow> SN (r \\<union> s)\n  SN r \\<and> SN s\n\ngoal (1 subgoal):\n 1. SN (r \\<union> s)", "by simp"], ["proof (state)\nthis:\n  SN (r \\<union> s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SN_relto_Un:\n  \"SN (relto (R \\<union> S) Q) \\<longleftrightarrow> SN (relto R (S \\<union> Q)) \\<and> SN (relto S Q)\"\n    (is \"SN ?a \\<longleftrightarrow> SN ?b \\<and> SN ?c\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN (Q\\<^sup>* O (R \\<union> S) O Q\\<^sup>*) =\n    (SN ((S \\<union> Q)\\<^sup>* O R O (S \\<union> Q)\\<^sup>*) \\<and>\n     SN (Q\\<^sup>* O S O Q\\<^sup>*))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN (Q\\<^sup>* O (R \\<union> S) O Q\\<^sup>*) =\n    (SN ((S \\<union> Q)\\<^sup>* O R O (S \\<union> Q)\\<^sup>*) \\<and>\n     SN (Q\\<^sup>* O S O Q\\<^sup>*))", "have eq: \"?a^+ = ?b^+ \\<union> ?c^+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Q\\<^sup>* O (R \\<union> S) O Q\\<^sup>*)\\<^sup>+ =\n    ((S \\<union> Q)\\<^sup>* O R O (S \\<union> Q)\\<^sup>*)\\<^sup>+ \\<union>\n    (Q\\<^sup>* O S O Q\\<^sup>*)\\<^sup>+", "by regexp"], ["proof (state)\nthis:\n  (Q\\<^sup>* O (R \\<union> S) O Q\\<^sup>*)\\<^sup>+ =\n  ((S \\<union> Q)\\<^sup>* O R O (S \\<union> Q)\\<^sup>*)\\<^sup>+ \\<union>\n  (Q\\<^sup>* O S O Q\\<^sup>*)\\<^sup>+\n\ngoal (1 subgoal):\n 1. SN (Q\\<^sup>* O (R \\<union> S) O Q\\<^sup>*) =\n    (SN ((S \\<union> Q)\\<^sup>* O R O (S \\<union> Q)\\<^sup>*) \\<and>\n     SN (Q\\<^sup>* O S O Q\\<^sup>*))", "from SN_Un_conv[of \"?b^+\" \"?c^+\", unfolded eq[symmetric]]"], ["proof (chain)\npicking this:\n  trans ((Q\\<^sup>* O (R \\<union> S) O Q\\<^sup>*)\\<^sup>+) \\<Longrightarrow>\n  SN ((Q\\<^sup>* O (R \\<union> S) O Q\\<^sup>*)\\<^sup>+) =\n  (SN (((S \\<union> Q)\\<^sup>* O R O (S \\<union> Q)\\<^sup>*)\\<^sup>+) \\<and>\n   SN ((Q\\<^sup>* O S O Q\\<^sup>*)\\<^sup>+))", "show ?thesis"], ["proof (prove)\nusing this:\n  trans ((Q\\<^sup>* O (R \\<union> S) O Q\\<^sup>*)\\<^sup>+) \\<Longrightarrow>\n  SN ((Q\\<^sup>* O (R \\<union> S) O Q\\<^sup>*)\\<^sup>+) =\n  (SN (((S \\<union> Q)\\<^sup>* O R O (S \\<union> Q)\\<^sup>*)\\<^sup>+) \\<and>\n   SN ((Q\\<^sup>* O S O Q\\<^sup>*)\\<^sup>+))\n\ngoal (1 subgoal):\n 1. SN (Q\\<^sup>* O (R \\<union> S) O Q\\<^sup>*) =\n    (SN ((S \\<union> Q)\\<^sup>* O R O (S \\<union> Q)\\<^sup>*) \\<and>\n     SN (Q\\<^sup>* O S O Q\\<^sup>*))", "unfolding SN_trancl_SN_conv"], ["proof (prove)\nusing this:\n  trans ((Q\\<^sup>* O (R \\<union> S) O Q\\<^sup>*)\\<^sup>+) \\<Longrightarrow>\n  SN (Q\\<^sup>* O (R \\<union> S) O Q\\<^sup>*) =\n  (SN ((S \\<union> Q)\\<^sup>* O R O (S \\<union> Q)\\<^sup>*) \\<and>\n   SN (Q\\<^sup>* O S O Q\\<^sup>*))\n\ngoal (1 subgoal):\n 1. SN (Q\\<^sup>* O (R \\<union> S) O Q\\<^sup>*) =\n    (SN ((S \\<union> Q)\\<^sup>* O R O (S \\<union> Q)\\<^sup>*) \\<and>\n     SN (Q\\<^sup>* O S O Q\\<^sup>*))", "by simp"], ["proof (state)\nthis:\n  SN (Q\\<^sup>* O (R \\<union> S) O Q\\<^sup>*) =\n  (SN ((S \\<union> Q)\\<^sup>* O R O (S \\<union> Q)\\<^sup>*) \\<and>\n   SN (Q\\<^sup>* O S O Q\\<^sup>*))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SN_relto_split:\n  assumes \"SN (relto r (s \\<union> q2) \\<union> relto q1 (s \\<union> q2))\" (is \"SN ?a\")\n    and \"SN (relto s q2)\" (is \"SN ?b\")\n  shows \"SN (relto r (q1 \\<union> q2) \\<union> relto s (q1 \\<union> q2))\" (is \"SN ?c\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN ((q1 \\<union> q2)\\<^sup>* O r O (q1 \\<union> q2)\\<^sup>* \\<union>\n        (q1 \\<union> q2)\\<^sup>* O s O (q1 \\<union> q2)\\<^sup>*)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN ((q1 \\<union> q2)\\<^sup>* O r O (q1 \\<union> q2)\\<^sup>* \\<union>\n        (q1 \\<union> q2)\\<^sup>* O s O (q1 \\<union> q2)\\<^sup>*)", "have \"?c^+ \\<subseteq> ?a^+ \\<union> ?b^+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((q1 \\<union> q2)\\<^sup>* O r O (q1 \\<union> q2)\\<^sup>* \\<union>\n     (q1 \\<union> q2)\\<^sup>* O s O (q1 \\<union> q2)\\<^sup>*)\\<^sup>+\n    \\<subseteq> ((s \\<union> q2)\\<^sup>* O\n                 r O (s \\<union> q2)\\<^sup>* \\<union>\n                 (s \\<union> q2)\\<^sup>* O\n                 q1 O (s \\<union> q2)\\<^sup>*)\\<^sup>+ \\<union>\n                (q2\\<^sup>* O s O q2\\<^sup>*)\\<^sup>+", "by regexp"], ["proof (state)\nthis:\n  ((q1 \\<union> q2)\\<^sup>* O r O (q1 \\<union> q2)\\<^sup>* \\<union>\n   (q1 \\<union> q2)\\<^sup>* O s O (q1 \\<union> q2)\\<^sup>*)\\<^sup>+\n  \\<subseteq> ((s \\<union> q2)\\<^sup>* O\n               r O (s \\<union> q2)\\<^sup>* \\<union>\n               (s \\<union> q2)\\<^sup>* O\n               q1 O (s \\<union> q2)\\<^sup>*)\\<^sup>+ \\<union>\n              (q2\\<^sup>* O s O q2\\<^sup>*)\\<^sup>+\n\ngoal (1 subgoal):\n 1. SN ((q1 \\<union> q2)\\<^sup>* O r O (q1 \\<union> q2)\\<^sup>* \\<union>\n        (q1 \\<union> q2)\\<^sup>* O s O (q1 \\<union> q2)\\<^sup>*)", "from trans_subset_SN[OF _ this, unfolded SN_trancl_SN_conv, OF _ assms]"], ["proof (chain)\npicking this:\n  trans\n   (((q1 \\<union> q2)\\<^sup>* O r O (q1 \\<union> q2)\\<^sup>* \\<union>\n     (q1 \\<union> q2)\\<^sup>* O\n     s O (q1 \\<union> q2)\\<^sup>*)\\<^sup>+) \\<Longrightarrow>\n  SN ((q1 \\<union> q2)\\<^sup>* O r O (q1 \\<union> q2)\\<^sup>* \\<union>\n      (q1 \\<union> q2)\\<^sup>* O s O (q1 \\<union> q2)\\<^sup>*)", "show ?thesis"], ["proof (prove)\nusing this:\n  trans\n   (((q1 \\<union> q2)\\<^sup>* O r O (q1 \\<union> q2)\\<^sup>* \\<union>\n     (q1 \\<union> q2)\\<^sup>* O\n     s O (q1 \\<union> q2)\\<^sup>*)\\<^sup>+) \\<Longrightarrow>\n  SN ((q1 \\<union> q2)\\<^sup>* O r O (q1 \\<union> q2)\\<^sup>* \\<union>\n      (q1 \\<union> q2)\\<^sup>* O s O (q1 \\<union> q2)\\<^sup>*)\n\ngoal (1 subgoal):\n 1. SN ((q1 \\<union> q2)\\<^sup>* O r O (q1 \\<union> q2)\\<^sup>* \\<union>\n        (q1 \\<union> q2)\\<^sup>* O s O (q1 \\<union> q2)\\<^sup>*)", "by simp"], ["proof (state)\nthis:\n  SN ((q1 \\<union> q2)\\<^sup>* O r O (q1 \\<union> q2)\\<^sup>* \\<union>\n      (q1 \\<union> q2)\\<^sup>* O s O (q1 \\<union> q2)\\<^sup>*)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma relto_trancl_subset: assumes \"a \\<subseteq> c\" and \"b \\<subseteq> c\" shows \"relto a b \\<subseteq> c^+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b\\<^sup>* O a O b\\<^sup>* \\<subseteq> c\\<^sup>+", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b\\<^sup>* O a O b\\<^sup>* \\<subseteq> c\\<^sup>+", "have \"relto a b \\<subseteq> (a \\<union> b)^+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b\\<^sup>* O a O b\\<^sup>* \\<subseteq> (a \\<union> b)\\<^sup>+", "by regexp"], ["proof (state)\nthis:\n  b\\<^sup>* O a O b\\<^sup>* \\<subseteq> (a \\<union> b)\\<^sup>+\n\ngoal (1 subgoal):\n 1. b\\<^sup>* O a O b\\<^sup>* \\<subseteq> c\\<^sup>+", "also"], ["proof (state)\nthis:\n  b\\<^sup>* O a O b\\<^sup>* \\<subseteq> (a \\<union> b)\\<^sup>+\n\ngoal (1 subgoal):\n 1. b\\<^sup>* O a O b\\<^sup>* \\<subseteq> c\\<^sup>+", "have \"\\<dots> \\<subseteq> c^+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<union> b)\\<^sup>+ \\<subseteq> c\\<^sup>+", "by (rule trancl_mono_set, insert assms, auto)"], ["proof (state)\nthis:\n  (a \\<union> b)\\<^sup>+ \\<subseteq> c\\<^sup>+\n\ngoal (1 subgoal):\n 1. b\\<^sup>* O a O b\\<^sup>* \\<subseteq> c\\<^sup>+", "finally"], ["proof (chain)\npicking this:\n  b\\<^sup>* O a O b\\<^sup>* \\<subseteq> c\\<^sup>+", "show ?thesis"], ["proof (prove)\nusing this:\n  b\\<^sup>* O a O b\\<^sup>* \\<subseteq> c\\<^sup>+\n\ngoal (1 subgoal):\n 1. b\\<^sup>* O a O b\\<^sup>* \\<subseteq> c\\<^sup>+", "."], ["proof (state)\nthis:\n  b\\<^sup>* O a O b\\<^sup>* \\<subseteq> c\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>An explicit version of @{const relto} which mentions all intermediate terms\\<close>"], ["", "inductive relto_fun :: \"'a rel \\<Rightarrow> 'a rel \\<Rightarrow> nat \\<Rightarrow> (nat \\<Rightarrow> 'a) \\<Rightarrow> (nat \\<Rightarrow> bool) \\<Rightarrow> nat \\<Rightarrow> 'a \\<times> 'a \\<Rightarrow> bool\" where\n  relto_fun: \"as 0 = a \\<Longrightarrow> as m = b \\<Longrightarrow> \n  (\\<And> i. i < m \\<Longrightarrow>\n    (sel i \\<longrightarrow> (as i, as (Suc i)) \\<in> A) \\<and> (\\<not> sel i \\<longrightarrow> (as i, as (Suc i)) \\<in> B))\n  \\<Longrightarrow> n = card { i . i < m \\<and> sel i} \n  \\<Longrightarrow> (n = 0 \\<longleftrightarrow> m = 0) \\<Longrightarrow> relto_fun A B n as sel m (a,b)\""], ["", "lemma relto_funD: assumes \"relto_fun A B n as sel m (a,b)\"\n  shows \"as 0 = a\" \"as m = b\"\n  \"\\<And> i. i < m \\<Longrightarrow> sel i \\<Longrightarrow> (as i, as (Suc i)) \\<in> A\"\n  \"\\<And> i. i < m \\<Longrightarrow> \\<not> sel i \\<Longrightarrow> (as i, as (Suc i)) \\<in> B\"\n  \"n = card { i . i < m \\<and> sel i}\"\n  \"n = 0 \\<longleftrightarrow> m = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (as 0 = a &&&\n     as m = b &&&\n     (\\<And>i.\n         \\<lbrakk>i < m; sel i\\<rbrakk>\n         \\<Longrightarrow> (as i, as (Suc i)) \\<in> A)) &&&\n    (\\<And>i.\n        \\<lbrakk>i < m; \\<not> sel i\\<rbrakk>\n        \\<Longrightarrow> (as i, as (Suc i)) \\<in> B) &&&\n    n = card {i. i < m \\<and> sel i} &&& (n = 0) = (m = 0)", "using assms[unfolded relto_fun.simps]"], ["proof (prove)\nusing this:\n  \\<exists>asa aa ma ba sela Aa Ba na.\n     A = Aa \\<and>\n     B = Ba \\<and>\n     n = na \\<and>\n     as = asa \\<and>\n     sel = sela \\<and>\n     m = ma \\<and>\n     (a, b) = (aa, ba) \\<and>\n     asa 0 = aa \\<and>\n     asa ma = ba \\<and>\n     (\\<forall>x<ma.\n         (sela x \\<longrightarrow> (asa x, asa (Suc x)) \\<in> Aa) \\<and>\n         (\\<not> sela x \\<longrightarrow>\n          (asa x, asa (Suc x)) \\<in> Ba)) \\<and>\n     na = card {i. i < ma \\<and> sela i} \\<and> (na = 0) = (ma = 0)\n\ngoal (1 subgoal):\n 1. (as 0 = a &&&\n     as m = b &&&\n     (\\<And>i.\n         \\<lbrakk>i < m; sel i\\<rbrakk>\n         \\<Longrightarrow> (as i, as (Suc i)) \\<in> A)) &&&\n    (\\<And>i.\n        \\<lbrakk>i < m; \\<not> sel i\\<rbrakk>\n        \\<Longrightarrow> (as i, as (Suc i)) \\<in> B) &&&\n    n = card {i. i < m \\<and> sel i} &&& (n = 0) = (m = 0)", "by blast+"], ["", "lemma relto_fun_refl: \"\\<exists> as sel. relto_fun A B 0 as sel 0 (a,a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>as sel. relto_fun A B 0 as sel 0 (a, a)", "by (rule exI[of _ \"\\<lambda> _. a\"], rule exI, rule relto_fun, auto)"], ["", "lemma relto_into_relto_fun: assumes \"(a,b) \\<in> relto A B\"\n  shows \"\\<exists> as sel m. relto_fun A B (Suc 0) as sel m (a,b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>as sel m. relto_fun A B (Suc 0) as sel m (a, b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>as sel m. relto_fun A B (Suc 0) as sel m (a, b)", "from assms"], ["proof (chain)\npicking this:\n  (a, b) \\<in> B\\<^sup>* O A O B\\<^sup>*", "obtain a' b' where aa: \"(a,a') \\<in> B^*\" and ab: \"(a',b') \\<in> A\"\n  and bb: \"(b',b) \\<in> B^*\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> B\\<^sup>* O A O B\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<And>a' b'.\n        \\<lbrakk>(a, a') \\<in> B\\<^sup>*; (a', b') \\<in> A;\n         (b', b) \\<in> B\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (a, a') \\<in> B\\<^sup>*\n  (a', b') \\<in> A\n  (b', b) \\<in> B\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<exists>as sel m. relto_fun A B (Suc 0) as sel m (a, b)", "from aa[unfolded rtrancl_fun_conv]"], ["proof (chain)\npicking this:\n  \\<exists>f n.\n     f 0 = a \\<and> f n = a' \\<and> (\\<forall>i<n. (f i, f (Suc i)) \\<in> B)", "obtain f1 n1 where \n    f1: \"f1 0 = a\" \"f1 n1 = a'\" \"\\<And> i. i<n1 \\<Longrightarrow> (f1 i, f1 (Suc i)) \\<in> B\""], ["proof (prove)\nusing this:\n  \\<exists>f n.\n     f 0 = a \\<and> f n = a' \\<and> (\\<forall>i<n. (f i, f (Suc i)) \\<in> B)\n\ngoal (1 subgoal):\n 1. (\\<And>f1 n1.\n        \\<lbrakk>f1 0 = a; f1 n1 = a';\n         \\<And>i.\n            i < n1 \\<Longrightarrow> (f1 i, f1 (Suc i)) \\<in> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f1 0 = a\n  f1 n1 = a'\n  ?i < n1 \\<Longrightarrow> (f1 ?i, f1 (Suc ?i)) \\<in> B\n\ngoal (1 subgoal):\n 1. \\<exists>as sel m. relto_fun A B (Suc 0) as sel m (a, b)", "from bb[unfolded rtrancl_fun_conv]"], ["proof (chain)\npicking this:\n  \\<exists>f n.\n     f 0 = b' \\<and> f n = b \\<and> (\\<forall>i<n. (f i, f (Suc i)) \\<in> B)", "obtain f2 n2 where \n    f2: \"f2 0 = b'\" \"f2 n2 = b\" \"\\<And> i. i<n2 \\<Longrightarrow> (f2 i, f2 (Suc i)) \\<in> B\""], ["proof (prove)\nusing this:\n  \\<exists>f n.\n     f 0 = b' \\<and> f n = b \\<and> (\\<forall>i<n. (f i, f (Suc i)) \\<in> B)\n\ngoal (1 subgoal):\n 1. (\\<And>f2 n2.\n        \\<lbrakk>f2 0 = b'; f2 n2 = b;\n         \\<And>i.\n            i < n2 \\<Longrightarrow> (f2 i, f2 (Suc i)) \\<in> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f2 0 = b'\n  f2 n2 = b\n  ?i < n2 \\<Longrightarrow> (f2 ?i, f2 (Suc ?i)) \\<in> B\n\ngoal (1 subgoal):\n 1. \\<exists>as sel m. relto_fun A B (Suc 0) as sel m (a, b)", "let ?gen = \"\\<lambda> aa ab bb i. if i < n1 then aa i else if i = n1 then ab else bb (i - Suc n1)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>as sel m. relto_fun A B (Suc 0) as sel m (a, b)", "let ?f = \"?gen f1 a' f2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>as sel m. relto_fun A B (Suc 0) as sel m (a, b)", "let ?sel = \"?gen (\\<lambda> _. False) True (\\<lambda> _. False)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>as sel m. relto_fun A B (Suc 0) as sel m (a, b)", "let ?m = \"Suc (n1 + n2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>as sel m. relto_fun A B (Suc 0) as sel m (a, b)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>as sel m. relto_fun A B (Suc 0) as sel m (a, b)", "proof (rule exI[of _ ?f], rule exI[of _ ?sel], rule exI[of _ ?m], rule relto_fun)"], ["proof (state)\ngoal (5 subgoals):\n 1. (if 0 < n1 then f1 0 else if 0 = n1 then a' else f2 (0 - Suc n1)) = a\n 2. (if Suc (n1 + n2) < n1 then f1 (Suc (n1 + n2))\n     else if Suc (n1 + n2) = n1 then a' else f2 (Suc (n1 + n2) - Suc n1)) =\n    b\n 3. \\<And>i.\n       i < Suc (n1 + n2) \\<Longrightarrow>\n       ((if i < n1 then False\n         else if i = n1 then True else False) \\<longrightarrow>\n        (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n         if Suc i < n1 then f1 (Suc i)\n         else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n        \\<in> A) \\<and>\n       (\\<not> (if i < n1 then False\n                else if i = n1 then True else False) \\<longrightarrow>\n        (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n         if Suc i < n1 then f1 (Suc i)\n         else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n        \\<in> B)\n 4. Suc 0 =\n    card\n     {i. i < Suc (n1 + n2) \\<and>\n         (if i < n1 then False else if i = n1 then True else False)}\n 5. (Suc 0 = 0) = (Suc (n1 + n2) = 0)", "fix i"], ["proof (state)\ngoal (5 subgoals):\n 1. (if 0 < n1 then f1 0 else if 0 = n1 then a' else f2 (0 - Suc n1)) = a\n 2. (if Suc (n1 + n2) < n1 then f1 (Suc (n1 + n2))\n     else if Suc (n1 + n2) = n1 then a' else f2 (Suc (n1 + n2) - Suc n1)) =\n    b\n 3. \\<And>i.\n       i < Suc (n1 + n2) \\<Longrightarrow>\n       ((if i < n1 then False\n         else if i = n1 then True else False) \\<longrightarrow>\n        (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n         if Suc i < n1 then f1 (Suc i)\n         else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n        \\<in> A) \\<and>\n       (\\<not> (if i < n1 then False\n                else if i = n1 then True else False) \\<longrightarrow>\n        (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n         if Suc i < n1 then f1 (Suc i)\n         else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n        \\<in> B)\n 4. Suc 0 =\n    card\n     {i. i < Suc (n1 + n2) \\<and>\n         (if i < n1 then False else if i = n1 then True else False)}\n 5. (Suc 0 = 0) = (Suc (n1 + n2) = 0)", "assume i: \"i < ?m\""], ["proof (state)\nthis:\n  i < Suc (n1 + n2)\n\ngoal (5 subgoals):\n 1. (if 0 < n1 then f1 0 else if 0 = n1 then a' else f2 (0 - Suc n1)) = a\n 2. (if Suc (n1 + n2) < n1 then f1 (Suc (n1 + n2))\n     else if Suc (n1 + n2) = n1 then a' else f2 (Suc (n1 + n2) - Suc n1)) =\n    b\n 3. \\<And>i.\n       i < Suc (n1 + n2) \\<Longrightarrow>\n       ((if i < n1 then False\n         else if i = n1 then True else False) \\<longrightarrow>\n        (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n         if Suc i < n1 then f1 (Suc i)\n         else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n        \\<in> A) \\<and>\n       (\\<not> (if i < n1 then False\n                else if i = n1 then True else False) \\<longrightarrow>\n        (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n         if Suc i < n1 then f1 (Suc i)\n         else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n        \\<in> B)\n 4. Suc 0 =\n    card\n     {i. i < Suc (n1 + n2) \\<and>\n         (if i < n1 then False else if i = n1 then True else False)}\n 5. (Suc 0 = 0) = (Suc (n1 + n2) = 0)", "show \"(?sel i \\<longrightarrow> (?f i, ?f (Suc i)) \\<in> A) \\<and> (\\<not> ?sel i \\<longrightarrow> (?f i, ?f (Suc i)) \\<in> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "proof (cases \"i < n1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i < n1 \\<Longrightarrow>\n    ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)\n 2. \\<not> i < n1 \\<Longrightarrow>\n    ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "case True"], ["proof (state)\nthis:\n  i < n1\n\ngoal (2 subgoals):\n 1. i < n1 \\<Longrightarrow>\n    ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)\n 2. \\<not> i < n1 \\<Longrightarrow>\n    ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "with f1(3)[OF this] f1(2)"], ["proof (chain)\npicking this:\n  (f1 i, f1 (Suc i)) \\<in> B\n  f1 n1 = a'\n  i < n1", "show ?thesis"], ["proof (prove)\nusing this:\n  (f1 i, f1 (Suc i)) \\<in> B\n  f1 n1 = a'\n  i < n1\n\ngoal (1 subgoal):\n 1. ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "by (cases \"Suc i = n1\", auto)"], ["proof (state)\nthis:\n  ((if i < n1 then False\n    else if i = n1 then True else False) \\<longrightarrow>\n   (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n    if Suc i < n1 then f1 (Suc i)\n    else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n   \\<in> A) \\<and>\n  (\\<not> (if i < n1 then False\n           else if i = n1 then True else False) \\<longrightarrow>\n   (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n    if Suc i < n1 then f1 (Suc i)\n    else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n   \\<in> B)\n\ngoal (1 subgoal):\n 1. \\<not> i < n1 \\<Longrightarrow>\n    ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i < n1 \\<Longrightarrow>\n    ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "case False"], ["proof (state)\nthis:\n  \\<not> i < n1\n\ngoal (1 subgoal):\n 1. \\<not> i < n1 \\<Longrightarrow>\n    ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "note nle = this"], ["proof (state)\nthis:\n  \\<not> i < n1\n\ngoal (1 subgoal):\n 1. \\<not> i < n1 \\<Longrightarrow>\n    ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "proof (cases \"i > n1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n1 < i \\<Longrightarrow>\n    ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)\n 2. \\<not> n1 < i \\<Longrightarrow>\n    ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "case False"], ["proof (state)\nthis:\n  \\<not> n1 < i\n\ngoal (2 subgoals):\n 1. n1 < i \\<Longrightarrow>\n    ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)\n 2. \\<not> n1 < i \\<Longrightarrow>\n    ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "with nle"], ["proof (chain)\npicking this:\n  \\<not> i < n1\n  \\<not> n1 < i", "have \"i = n1\""], ["proof (prove)\nusing this:\n  \\<not> i < n1\n  \\<not> n1 < i\n\ngoal (1 subgoal):\n 1. i = n1", "by auto"], ["proof (state)\nthis:\n  i = n1\n\ngoal (2 subgoals):\n 1. n1 < i \\<Longrightarrow>\n    ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)\n 2. \\<not> n1 < i \\<Longrightarrow>\n    ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "thus ?thesis"], ["proof (prove)\nusing this:\n  i = n1\n\ngoal (1 subgoal):\n 1. ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "using f1 f2 ab"], ["proof (prove)\nusing this:\n  i = n1\n  f1 0 = a\n  f1 n1 = a'\n  ?i < n1 \\<Longrightarrow> (f1 ?i, f1 (Suc ?i)) \\<in> B\n  f2 0 = b'\n  f2 n2 = b\n  ?i < n2 \\<Longrightarrow> (f2 ?i, f2 (Suc ?i)) \\<in> B\n  (a', b') \\<in> A\n\ngoal (1 subgoal):\n 1. ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "by auto"], ["proof (state)\nthis:\n  ((if i < n1 then False\n    else if i = n1 then True else False) \\<longrightarrow>\n   (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n    if Suc i < n1 then f1 (Suc i)\n    else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n   \\<in> A) \\<and>\n  (\\<not> (if i < n1 then False\n           else if i = n1 then True else False) \\<longrightarrow>\n   (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n    if Suc i < n1 then f1 (Suc i)\n    else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n   \\<in> B)\n\ngoal (1 subgoal):\n 1. n1 < i \\<Longrightarrow>\n    ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n1 < i \\<Longrightarrow>\n    ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "case True"], ["proof (state)\nthis:\n  n1 < i\n\ngoal (1 subgoal):\n 1. n1 < i \\<Longrightarrow>\n    ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "define j where \"j = i - Suc n1\""], ["proof (state)\nthis:\n  j = i - Suc n1\n\ngoal (1 subgoal):\n 1. n1 < i \\<Longrightarrow>\n    ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "have i: \"i = Suc n1 + j\" and j: \"j < n2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i = Suc n1 + j &&& j < n2", "using i True"], ["proof (prove)\nusing this:\n  i < Suc (n1 + n2)\n  n1 < i\n\ngoal (1 subgoal):\n 1. i = Suc n1 + j &&& j < n2", "unfolding j_def"], ["proof (prove)\nusing this:\n  i < Suc (n1 + n2)\n  n1 < i\n\ngoal (1 subgoal):\n 1. i = Suc n1 + (i - Suc n1) &&& i - Suc n1 < n2", "by auto"], ["proof (state)\nthis:\n  i = Suc n1 + j\n  j < n2\n\ngoal (1 subgoal):\n 1. n1 < i \\<Longrightarrow>\n    ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "thus ?thesis"], ["proof (prove)\nusing this:\n  i = Suc n1 + j\n  j < n2\n\ngoal (1 subgoal):\n 1. ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "using f2"], ["proof (prove)\nusing this:\n  i = Suc n1 + j\n  j < n2\n  f2 0 = b'\n  f2 n2 = b\n  ?i < n2 \\<Longrightarrow> (f2 ?i, f2 (Suc ?i)) \\<in> B\n\ngoal (1 subgoal):\n 1. ((if i < n1 then False\n      else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < n1 then False\n             else if i = n1 then True else False) \\<longrightarrow>\n     (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n      if Suc i < n1 then f1 (Suc i)\n      else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n     \\<in> B)", "by auto"], ["proof (state)\nthis:\n  ((if i < n1 then False\n    else if i = n1 then True else False) \\<longrightarrow>\n   (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n    if Suc i < n1 then f1 (Suc i)\n    else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n   \\<in> A) \\<and>\n  (\\<not> (if i < n1 then False\n           else if i = n1 then True else False) \\<longrightarrow>\n   (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n    if Suc i < n1 then f1 (Suc i)\n    else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n   \\<in> B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((if i < n1 then False\n    else if i = n1 then True else False) \\<longrightarrow>\n   (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n    if Suc i < n1 then f1 (Suc i)\n    else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n   \\<in> A) \\<and>\n  (\\<not> (if i < n1 then False\n           else if i = n1 then True else False) \\<longrightarrow>\n   (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n    if Suc i < n1 then f1 (Suc i)\n    else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n   \\<in> B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((if i < n1 then False\n    else if i = n1 then True else False) \\<longrightarrow>\n   (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n    if Suc i < n1 then f1 (Suc i)\n    else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n   \\<in> A) \\<and>\n  (\\<not> (if i < n1 then False\n           else if i = n1 then True else False) \\<longrightarrow>\n   (if i < n1 then f1 i else if i = n1 then a' else f2 (i - Suc n1),\n    if Suc i < n1 then f1 (Suc i)\n    else if Suc i = n1 then a' else f2 (Suc i - Suc n1))\n   \\<in> B)\n\ngoal (4 subgoals):\n 1. (if 0 < n1 then f1 0 else if 0 = n1 then a' else f2 (0 - Suc n1)) = a\n 2. (if Suc (n1 + n2) < n1 then f1 (Suc (n1 + n2))\n     else if Suc (n1 + n2) = n1 then a' else f2 (Suc (n1 + n2) - Suc n1)) =\n    b\n 3. Suc 0 =\n    card\n     {i. i < Suc (n1 + n2) \\<and>\n         (if i < n1 then False else if i = n1 then True else False)}\n 4. (Suc 0 = 0) = (Suc (n1 + n2) = 0)", "qed (insert f1 f2, auto)"], ["proof (state)\nthis:\n  \\<exists>as sel m. relto_fun A B (Suc 0) as sel m (a, b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma relto_fun_trans: assumes ab: \"relto_fun A B n1 as1 sel1 m1 (a,b)\"\n  and bc: \"relto_fun A B n2 as2 sel2 m2 (b,c)\"\n  shows \"\\<exists> as sel. relto_fun A B (n1 + n2) as sel (m1 + m2) (a,c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>as sel. relto_fun A B (n1 + n2) as sel (m1 + m2) (a, c)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>as sel. relto_fun A B (n1 + n2) as sel (m1 + m2) (a, c)", "from relto_funD[OF ab]"], ["proof (chain)\npicking this:\n  as1 0 = a\n  as1 m1 = b\n  \\<lbrakk>?i < m1; sel1 ?i\\<rbrakk>\n  \\<Longrightarrow> (as1 ?i, as1 (Suc ?i)) \\<in> A\n  \\<lbrakk>?i < m1; \\<not> sel1 ?i\\<rbrakk>\n  \\<Longrightarrow> (as1 ?i, as1 (Suc ?i)) \\<in> B\n  n1 = card {i. i < m1 \\<and> sel1 i}\n  (n1 = 0) = (m1 = 0)", "have 1: \"as1 0 = a\" \"as1 m1 = b\"\n    \"\\<And> i. i < m1 \\<Longrightarrow> (sel1 i \\<longrightarrow> (as1 i, as1 (Suc i)) \\<in> A) \\<and> (\\<not> sel1 i \\<longrightarrow> (as1 i, as1 (Suc i)) \\<in> B)\"\n    \"n1 = 0 \\<longleftrightarrow> m1 = 0\" and card1: \"n1 = card {i. i < m1 \\<and> sel1 i}\""], ["proof (prove)\nusing this:\n  as1 0 = a\n  as1 m1 = b\n  \\<lbrakk>?i < m1; sel1 ?i\\<rbrakk>\n  \\<Longrightarrow> (as1 ?i, as1 (Suc ?i)) \\<in> A\n  \\<lbrakk>?i < m1; \\<not> sel1 ?i\\<rbrakk>\n  \\<Longrightarrow> (as1 ?i, as1 (Suc ?i)) \\<in> B\n  n1 = card {i. i < m1 \\<and> sel1 i}\n  (n1 = 0) = (m1 = 0)\n\ngoal (1 subgoal):\n 1. ((as1 0 = a &&& as1 m1 = b) &&&\n     (\\<And>i.\n         i < m1 \\<Longrightarrow>\n         (sel1 i \\<longrightarrow> (as1 i, as1 (Suc i)) \\<in> A) \\<and>\n         (\\<not> sel1 i \\<longrightarrow> (as1 i, as1 (Suc i)) \\<in> B)) &&&\n     (n1 = 0) = (m1 = 0)) &&&\n    n1 = card {i. i < m1 \\<and> sel1 i}", "by blast+"], ["proof (state)\nthis:\n  as1 0 = a\n  as1 m1 = b\n  ?i < m1 \\<Longrightarrow>\n  (sel1 ?i \\<longrightarrow> (as1 ?i, as1 (Suc ?i)) \\<in> A) \\<and>\n  (\\<not> sel1 ?i \\<longrightarrow> (as1 ?i, as1 (Suc ?i)) \\<in> B)\n  (n1 = 0) = (m1 = 0)\n  n1 = card {i. i < m1 \\<and> sel1 i}\n\ngoal (1 subgoal):\n 1. \\<exists>as sel. relto_fun A B (n1 + n2) as sel (m1 + m2) (a, c)", "from relto_funD[OF bc]"], ["proof (chain)\npicking this:\n  as2 0 = b\n  as2 m2 = c\n  \\<lbrakk>?i < m2; sel2 ?i\\<rbrakk>\n  \\<Longrightarrow> (as2 ?i, as2 (Suc ?i)) \\<in> A\n  \\<lbrakk>?i < m2; \\<not> sel2 ?i\\<rbrakk>\n  \\<Longrightarrow> (as2 ?i, as2 (Suc ?i)) \\<in> B\n  n2 = card {i. i < m2 \\<and> sel2 i}\n  (n2 = 0) = (m2 = 0)", "have 2: \"as2 0 = b\" \"as2 m2 = c\"\n    \"\\<And> i. i < m2 \\<Longrightarrow> (sel2 i \\<longrightarrow> (as2 i, as2 (Suc i)) \\<in> A) \\<and> (\\<not> sel2 i \\<longrightarrow> (as2 i, as2 (Suc i)) \\<in> B)\"\n    \"n2 = 0 \\<longleftrightarrow> m2 = 0\" and card2: \"n2 = card {i. i < m2 \\<and> sel2 i}\""], ["proof (prove)\nusing this:\n  as2 0 = b\n  as2 m2 = c\n  \\<lbrakk>?i < m2; sel2 ?i\\<rbrakk>\n  \\<Longrightarrow> (as2 ?i, as2 (Suc ?i)) \\<in> A\n  \\<lbrakk>?i < m2; \\<not> sel2 ?i\\<rbrakk>\n  \\<Longrightarrow> (as2 ?i, as2 (Suc ?i)) \\<in> B\n  n2 = card {i. i < m2 \\<and> sel2 i}\n  (n2 = 0) = (m2 = 0)\n\ngoal (1 subgoal):\n 1. ((as2 0 = b &&& as2 m2 = c) &&&\n     (\\<And>i.\n         i < m2 \\<Longrightarrow>\n         (sel2 i \\<longrightarrow> (as2 i, as2 (Suc i)) \\<in> A) \\<and>\n         (\\<not> sel2 i \\<longrightarrow> (as2 i, as2 (Suc i)) \\<in> B)) &&&\n     (n2 = 0) = (m2 = 0)) &&&\n    n2 = card {i. i < m2 \\<and> sel2 i}", "by blast+"], ["proof (state)\nthis:\n  as2 0 = b\n  as2 m2 = c\n  ?i < m2 \\<Longrightarrow>\n  (sel2 ?i \\<longrightarrow> (as2 ?i, as2 (Suc ?i)) \\<in> A) \\<and>\n  (\\<not> sel2 ?i \\<longrightarrow> (as2 ?i, as2 (Suc ?i)) \\<in> B)\n  (n2 = 0) = (m2 = 0)\n  n2 = card {i. i < m2 \\<and> sel2 i}\n\ngoal (1 subgoal):\n 1. \\<exists>as sel. relto_fun A B (n1 + n2) as sel (m1 + m2) (a, c)", "let ?as = \"\\<lambda> i. if i < m1 then as1 i else as2 (i - m1)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>as sel. relto_fun A B (n1 + n2) as sel (m1 + m2) (a, c)", "let ?sel = \"\\<lambda> i. if i < m1 then sel1 i else sel2 (i - m1)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>as sel. relto_fun A B (n1 + n2) as sel (m1 + m2) (a, c)", "let ?m = \"m1 + m2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>as sel. relto_fun A B (n1 + n2) as sel (m1 + m2) (a, c)", "let ?n = \"n1 + n2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>as sel. relto_fun A B (n1 + n2) as sel (m1 + m2) (a, c)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>as sel. relto_fun A B (n1 + n2) as sel (m1 + m2) (a, c)", "proof (rule exI[of _ ?as], rule exI[of _ ?sel], rule relto_fun)"], ["proof (state)\ngoal (5 subgoals):\n 1. (if 0 < m1 then as1 0 else as2 (0 - m1)) = a\n 2. (if m1 + m2 < m1 then as1 (m1 + m2) else as2 (m1 + m2 - m1)) = c\n 3. \\<And>i.\n       i < m1 + m2 \\<Longrightarrow>\n       ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n        (if i < m1 then as1 i else as2 (i - m1),\n         if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n        \\<in> A) \\<and>\n       (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n        (if i < m1 then as1 i else as2 (i - m1),\n         if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n        \\<in> B)\n 4. n1 + n2 =\n    card {i. i < m1 + m2 \\<and> (if i < m1 then sel1 i else sel2 (i - m1))}\n 5. (n1 + n2 = 0) = (m1 + m2 = 0)", "have id: \"{ i . i < ?m \\<and> ?sel i} = { i . i < m1 \\<and> sel1 i} \\<union> ((+) m1) ` { i. i < m2 \\<and> sel2 i}\"\n      (is \"_ = ?A \\<union> ?f ` ?B\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. i < m1 + m2 \\<and> (if i < m1 then sel1 i else sel2 (i - m1))} =\n    {i. i < m1 \\<and> sel1 i} \\<union> (+) m1 ` {i. i < m2 \\<and> sel2 i}", "by force"], ["proof (state)\nthis:\n  {i. i < m1 + m2 \\<and> (if i < m1 then sel1 i else sel2 (i - m1))} =\n  {i. i < m1 \\<and> sel1 i} \\<union> (+) m1 ` {i. i < m2 \\<and> sel2 i}\n\ngoal (5 subgoals):\n 1. (if 0 < m1 then as1 0 else as2 (0 - m1)) = a\n 2. (if m1 + m2 < m1 then as1 (m1 + m2) else as2 (m1 + m2 - m1)) = c\n 3. \\<And>i.\n       i < m1 + m2 \\<Longrightarrow>\n       ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n        (if i < m1 then as1 i else as2 (i - m1),\n         if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n        \\<in> A) \\<and>\n       (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n        (if i < m1 then as1 i else as2 (i - m1),\n         if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n        \\<in> B)\n 4. n1 + n2 =\n    card {i. i < m1 + m2 \\<and> (if i < m1 then sel1 i else sel2 (i - m1))}\n 5. (n1 + n2 = 0) = (m1 + m2 = 0)", "have \"card (?A \\<union> ?f ` ?B) = card ?A + card (?f ` ?B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     ({i. i < m1 \\<and> sel1 i} \\<union>\n      (+) m1 ` {i. i < m2 \\<and> sel2 i}) =\n    card {i. i < m1 \\<and> sel1 i} +\n    card ((+) m1 ` {i. i < m2 \\<and> sel2 i})", "by (rule card_Un_disjoint, auto)"], ["proof (state)\nthis:\n  card\n   ({i. i < m1 \\<and> sel1 i} \\<union> (+) m1 ` {i. i < m2 \\<and> sel2 i}) =\n  card {i. i < m1 \\<and> sel1 i} + card ((+) m1 ` {i. i < m2 \\<and> sel2 i})\n\ngoal (5 subgoals):\n 1. (if 0 < m1 then as1 0 else as2 (0 - m1)) = a\n 2. (if m1 + m2 < m1 then as1 (m1 + m2) else as2 (m1 + m2 - m1)) = c\n 3. \\<And>i.\n       i < m1 + m2 \\<Longrightarrow>\n       ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n        (if i < m1 then as1 i else as2 (i - m1),\n         if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n        \\<in> A) \\<and>\n       (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n        (if i < m1 then as1 i else as2 (i - m1),\n         if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n        \\<in> B)\n 4. n1 + n2 =\n    card {i. i < m1 + m2 \\<and> (if i < m1 then sel1 i else sel2 (i - m1))}\n 5. (n1 + n2 = 0) = (m1 + m2 = 0)", "also"], ["proof (state)\nthis:\n  card\n   ({i. i < m1 \\<and> sel1 i} \\<union> (+) m1 ` {i. i < m2 \\<and> sel2 i}) =\n  card {i. i < m1 \\<and> sel1 i} + card ((+) m1 ` {i. i < m2 \\<and> sel2 i})\n\ngoal (5 subgoals):\n 1. (if 0 < m1 then as1 0 else as2 (0 - m1)) = a\n 2. (if m1 + m2 < m1 then as1 (m1 + m2) else as2 (m1 + m2 - m1)) = c\n 3. \\<And>i.\n       i < m1 + m2 \\<Longrightarrow>\n       ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n        (if i < m1 then as1 i else as2 (i - m1),\n         if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n        \\<in> A) \\<and>\n       (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n        (if i < m1 then as1 i else as2 (i - m1),\n         if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n        \\<in> B)\n 4. n1 + n2 =\n    card {i. i < m1 + m2 \\<and> (if i < m1 then sel1 i else sel2 (i - m1))}\n 5. (n1 + n2 = 0) = (m1 + m2 = 0)", "have \"card (?f ` ?B) = card ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card ((+) m1 ` {i. i < m2 \\<and> sel2 i}) =\n    card {i. i < m2 \\<and> sel2 i}", "by (rule card_image, auto simp: inj_on_def)"], ["proof (state)\nthis:\n  card ((+) m1 ` {i. i < m2 \\<and> sel2 i}) = card {i. i < m2 \\<and> sel2 i}\n\ngoal (5 subgoals):\n 1. (if 0 < m1 then as1 0 else as2 (0 - m1)) = a\n 2. (if m1 + m2 < m1 then as1 (m1 + m2) else as2 (m1 + m2 - m1)) = c\n 3. \\<And>i.\n       i < m1 + m2 \\<Longrightarrow>\n       ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n        (if i < m1 then as1 i else as2 (i - m1),\n         if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n        \\<in> A) \\<and>\n       (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n        (if i < m1 then as1 i else as2 (i - m1),\n         if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n        \\<in> B)\n 4. n1 + n2 =\n    card {i. i < m1 + m2 \\<and> (if i < m1 then sel1 i else sel2 (i - m1))}\n 5. (n1 + n2 = 0) = (m1 + m2 = 0)", "finally"], ["proof (chain)\npicking this:\n  card\n   ({i. i < m1 \\<and> sel1 i} \\<union> (+) m1 ` {i. i < m2 \\<and> sel2 i}) =\n  card {i. i < m1 \\<and> sel1 i} + card {i. i < m2 \\<and> sel2 i}", "show \"?n = card { i . i < ?m \\<and> ?sel i}\""], ["proof (prove)\nusing this:\n  card\n   ({i. i < m1 \\<and> sel1 i} \\<union> (+) m1 ` {i. i < m2 \\<and> sel2 i}) =\n  card {i. i < m1 \\<and> sel1 i} + card {i. i < m2 \\<and> sel2 i}\n\ngoal (1 subgoal):\n 1. n1 + n2 =\n    card {i. i < m1 + m2 \\<and> (if i < m1 then sel1 i else sel2 (i - m1))}", "unfolding card1 card2 id"], ["proof (prove)\nusing this:\n  card\n   ({i. i < m1 \\<and> sel1 i} \\<union> (+) m1 ` {i. i < m2 \\<and> sel2 i}) =\n  card {i. i < m1 \\<and> sel1 i} + card {i. i < m2 \\<and> sel2 i}\n\ngoal (1 subgoal):\n 1. card {i. i < m1 \\<and> sel1 i} + card {i. i < m2 \\<and> sel2 i} =\n    card\n     ({i. i < m1 \\<and> sel1 i} \\<union> (+) m1 ` {i. i < m2 \\<and> sel2 i})", "by simp"], ["proof (state)\nthis:\n  n1 + n2 =\n  card {i. i < m1 + m2 \\<and> (if i < m1 then sel1 i else sel2 (i - m1))}\n\ngoal (4 subgoals):\n 1. (if 0 < m1 then as1 0 else as2 (0 - m1)) = a\n 2. (if m1 + m2 < m1 then as1 (m1 + m2) else as2 (m1 + m2 - m1)) = c\n 3. \\<And>i.\n       i < m1 + m2 \\<Longrightarrow>\n       ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n        (if i < m1 then as1 i else as2 (i - m1),\n         if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n        \\<in> A) \\<and>\n       (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n        (if i < m1 then as1 i else as2 (i - m1),\n         if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n        \\<in> B)\n 4. (n1 + n2 = 0) = (m1 + m2 = 0)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. (if 0 < m1 then as1 0 else as2 (0 - m1)) = a\n 2. (if m1 + m2 < m1 then as1 (m1 + m2) else as2 (m1 + m2 - m1)) = c\n 3. \\<And>i.\n       i < m1 + m2 \\<Longrightarrow>\n       ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n        (if i < m1 then as1 i else as2 (i - m1),\n         if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n        \\<in> A) \\<and>\n       (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n        (if i < m1 then as1 i else as2 (i - m1),\n         if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n        \\<in> B)\n 4. (n1 + n2 = 0) = (m1 + m2 = 0)", "fix i"], ["proof (state)\ngoal (4 subgoals):\n 1. (if 0 < m1 then as1 0 else as2 (0 - m1)) = a\n 2. (if m1 + m2 < m1 then as1 (m1 + m2) else as2 (m1 + m2 - m1)) = c\n 3. \\<And>i.\n       i < m1 + m2 \\<Longrightarrow>\n       ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n        (if i < m1 then as1 i else as2 (i - m1),\n         if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n        \\<in> A) \\<and>\n       (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n        (if i < m1 then as1 i else as2 (i - m1),\n         if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n        \\<in> B)\n 4. (n1 + n2 = 0) = (m1 + m2 = 0)", "assume i: \"i < ?m\""], ["proof (state)\nthis:\n  i < m1 + m2\n\ngoal (4 subgoals):\n 1. (if 0 < m1 then as1 0 else as2 (0 - m1)) = a\n 2. (if m1 + m2 < m1 then as1 (m1 + m2) else as2 (m1 + m2 - m1)) = c\n 3. \\<And>i.\n       i < m1 + m2 \\<Longrightarrow>\n       ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n        (if i < m1 then as1 i else as2 (i - m1),\n         if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n        \\<in> A) \\<and>\n       (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n        (if i < m1 then as1 i else as2 (i - m1),\n         if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n        \\<in> B)\n 4. (n1 + n2 = 0) = (m1 + m2 = 0)", "show \"(?sel i \\<longrightarrow> (?as i, ?as (Suc i)) \\<in> A) \\<and> (\\<not> ?sel i \\<longrightarrow> (?as i, ?as (Suc i)) \\<in> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> B)", "proof (cases \"i < m1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i < m1 \\<Longrightarrow>\n    ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> B)\n 2. \\<not> i < m1 \\<Longrightarrow>\n    ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> B)", "case True"], ["proof (state)\nthis:\n  i < m1\n\ngoal (2 subgoals):\n 1. i < m1 \\<Longrightarrow>\n    ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> B)\n 2. \\<not> i < m1 \\<Longrightarrow>\n    ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> B)", "from 1 2"], ["proof (chain)\npicking this:\n  as1 0 = a\n  as1 m1 = b\n  ?i < m1 \\<Longrightarrow>\n  (sel1 ?i \\<longrightarrow> (as1 ?i, as1 (Suc ?i)) \\<in> A) \\<and>\n  (\\<not> sel1 ?i \\<longrightarrow> (as1 ?i, as1 (Suc ?i)) \\<in> B)\n  (n1 = 0) = (m1 = 0)\n  as2 0 = b\n  as2 m2 = c\n  ?i < m2 \\<Longrightarrow>\n  (sel2 ?i \\<longrightarrow> (as2 ?i, as2 (Suc ?i)) \\<in> A) \\<and>\n  (\\<not> sel2 ?i \\<longrightarrow> (as2 ?i, as2 (Suc ?i)) \\<in> B)\n  (n2 = 0) = (m2 = 0)", "have [simp]: \"as2 0 = as1 m1\""], ["proof (prove)\nusing this:\n  as1 0 = a\n  as1 m1 = b\n  ?i < m1 \\<Longrightarrow>\n  (sel1 ?i \\<longrightarrow> (as1 ?i, as1 (Suc ?i)) \\<in> A) \\<and>\n  (\\<not> sel1 ?i \\<longrightarrow> (as1 ?i, as1 (Suc ?i)) \\<in> B)\n  (n1 = 0) = (m1 = 0)\n  as2 0 = b\n  as2 m2 = c\n  ?i < m2 \\<Longrightarrow>\n  (sel2 ?i \\<longrightarrow> (as2 ?i, as2 (Suc ?i)) \\<in> A) \\<and>\n  (\\<not> sel2 ?i \\<longrightarrow> (as2 ?i, as2 (Suc ?i)) \\<in> B)\n  (n2 = 0) = (m2 = 0)\n\ngoal (1 subgoal):\n 1. as2 0 = as1 m1", "by simp"], ["proof (state)\nthis:\n  as2 0 = as1 m1\n\ngoal (2 subgoals):\n 1. i < m1 \\<Longrightarrow>\n    ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> B)\n 2. \\<not> i < m1 \\<Longrightarrow>\n    ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> B)", "from True 1(3)[of i] 1(2)"], ["proof (chain)\npicking this:\n  i < m1\n  i < m1 \\<Longrightarrow>\n  (sel1 i \\<longrightarrow> (as1 i, as1 (Suc i)) \\<in> A) \\<and>\n  (\\<not> sel1 i \\<longrightarrow> (as1 i, as1 (Suc i)) \\<in> B)\n  as1 m1 = b", "show ?thesis"], ["proof (prove)\nusing this:\n  i < m1\n  i < m1 \\<Longrightarrow>\n  (sel1 i \\<longrightarrow> (as1 i, as1 (Suc i)) \\<in> A) \\<and>\n  (\\<not> sel1 i \\<longrightarrow> (as1 i, as1 (Suc i)) \\<in> B)\n  as1 m1 = b\n\ngoal (1 subgoal):\n 1. ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> B)", "by (cases \"Suc i = m1\", auto)"], ["proof (state)\nthis:\n  ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n   (if i < m1 then as1 i else as2 (i - m1),\n    if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n   \\<in> A) \\<and>\n  (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n   (if i < m1 then as1 i else as2 (i - m1),\n    if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n   \\<in> B)\n\ngoal (1 subgoal):\n 1. \\<not> i < m1 \\<Longrightarrow>\n    ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i < m1 \\<Longrightarrow>\n    ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> B)", "case False"], ["proof (state)\nthis:\n  \\<not> i < m1\n\ngoal (1 subgoal):\n 1. \\<not> i < m1 \\<Longrightarrow>\n    ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> B)", "define j where \"j = i - m1\""], ["proof (state)\nthis:\n  j = i - m1\n\ngoal (1 subgoal):\n 1. \\<not> i < m1 \\<Longrightarrow>\n    ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> B)", "have i: \"i = m1 + j\" and j: \"j < m2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i = m1 + j &&& j < m2", "using i False"], ["proof (prove)\nusing this:\n  i < m1 + m2\n  \\<not> i < m1\n\ngoal (1 subgoal):\n 1. i = m1 + j &&& j < m2", "unfolding j_def"], ["proof (prove)\nusing this:\n  i < m1 + m2\n  \\<not> i < m1\n\ngoal (1 subgoal):\n 1. i = m1 + (i - m1) &&& i - m1 < m2", "by auto"], ["proof (state)\nthis:\n  i = m1 + j\n  j < m2\n\ngoal (1 subgoal):\n 1. \\<not> i < m1 \\<Longrightarrow>\n    ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> B)", "thus ?thesis"], ["proof (prove)\nusing this:\n  i = m1 + j\n  j < m2\n\ngoal (1 subgoal):\n 1. ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> B)", "using False 2(3)[of j]"], ["proof (prove)\nusing this:\n  i = m1 + j\n  j < m2\n  \\<not> i < m1\n  j < m2 \\<Longrightarrow>\n  (sel2 j \\<longrightarrow> (as2 j, as2 (Suc j)) \\<in> A) \\<and>\n  (\\<not> sel2 j \\<longrightarrow> (as2 j, as2 (Suc j)) \\<in> B)\n\ngoal (1 subgoal):\n 1. ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> A) \\<and>\n    (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n     (if i < m1 then as1 i else as2 (i - m1),\n      if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n     \\<in> B)", "by auto"], ["proof (state)\nthis:\n  ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n   (if i < m1 then as1 i else as2 (i - m1),\n    if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n   \\<in> A) \\<and>\n  (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n   (if i < m1 then as1 i else as2 (i - m1),\n    if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n   \\<in> B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n   (if i < m1 then as1 i else as2 (i - m1),\n    if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n   \\<in> A) \\<and>\n  (\\<not> (if i < m1 then sel1 i else sel2 (i - m1)) \\<longrightarrow>\n   (if i < m1 then as1 i else as2 (i - m1),\n    if Suc i < m1 then as1 (Suc i) else as2 (Suc i - m1))\n   \\<in> B)\n\ngoal (3 subgoals):\n 1. (if 0 < m1 then as1 0 else as2 (0 - m1)) = a\n 2. (if m1 + m2 < m1 then as1 (m1 + m2) else as2 (m1 + m2 - m1)) = c\n 3. (n1 + n2 = 0) = (m1 + m2 = 0)", "qed (insert 1 2, auto)"], ["proof (state)\nthis:\n  \\<exists>as sel. relto_fun A B (n1 + n2) as sel (m1 + m2) (a, c)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reltos_into_relto_fun: assumes \"(a,b) \\<in> (relto A B)^^n\"\n  shows \"\\<exists> as sel m. relto_fun A B n as sel m (a,b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>as sel m. relto_fun A B n as sel m (a, b)", "using assms"], ["proof (prove)\nusing this:\n  (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n\n\ngoal (1 subgoal):\n 1. \\<exists>as sel m. relto_fun A B n as sel m (a, b)", "proof (induct n arbitrary: b)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b.\n       (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ 0 \\<Longrightarrow>\n       \\<exists>as sel m. relto_fun A B 0 as sel m (a, b)\n 2. \\<And>n b.\n       \\<lbrakk>\\<And>b.\n                   (a, b)\n                   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n \\<Longrightarrow>\n                   \\<exists>as sel m. relto_fun A B n as sel m (a, b);\n        (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ Suc n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>as sel m.\n                            relto_fun A B (Suc n) as sel m (a, b)", "case (0 b)"], ["proof (state)\nthis:\n  (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ 0\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ 0 \\<Longrightarrow>\n       \\<exists>as sel m. relto_fun A B 0 as sel m (a, b)\n 2. \\<And>n b.\n       \\<lbrakk>\\<And>b.\n                   (a, b)\n                   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n \\<Longrightarrow>\n                   \\<exists>as sel m. relto_fun A B n as sel m (a, b);\n        (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ Suc n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>as sel m.\n                            relto_fun A B (Suc n) as sel m (a, b)", "hence b: \"b = a\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ 0\n\ngoal (1 subgoal):\n 1. b = a", "by auto"], ["proof (state)\nthis:\n  b = a\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ 0 \\<Longrightarrow>\n       \\<exists>as sel m. relto_fun A B 0 as sel m (a, b)\n 2. \\<And>n b.\n       \\<lbrakk>\\<And>b.\n                   (a, b)\n                   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n \\<Longrightarrow>\n                   \\<exists>as sel m. relto_fun A B n as sel m (a, b);\n        (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ Suc n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>as sel m.\n                            relto_fun A B (Suc n) as sel m (a, b)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>as sel m. relto_fun A B 0 as sel m (a, b)", "unfolding b"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>as sel m. relto_fun A B 0 as sel m (a, a)", "using relto_fun_refl[of A B a]"], ["proof (prove)\nusing this:\n  \\<exists>as sel. relto_fun A B 0 as sel 0 (a, a)\n\ngoal (1 subgoal):\n 1. \\<exists>as sel m. relto_fun A B 0 as sel m (a, a)", "by blast"], ["proof (state)\nthis:\n  \\<exists>as sel m. relto_fun A B 0 as sel m (a, b)\n\ngoal (1 subgoal):\n 1. \\<And>n b.\n       \\<lbrakk>\\<And>b.\n                   (a, b)\n                   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n \\<Longrightarrow>\n                   \\<exists>as sel m. relto_fun A B n as sel m (a, b);\n        (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ Suc n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>as sel m.\n                            relto_fun A B (Suc n) as sel m (a, b)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n b.\n       \\<lbrakk>\\<And>b.\n                   (a, b)\n                   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n \\<Longrightarrow>\n                   \\<exists>as sel m. relto_fun A B n as sel m (a, b);\n        (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ Suc n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>as sel m.\n                            relto_fun A B (Suc n) as sel m (a, b)", "case (Suc n c)"], ["proof (state)\nthis:\n  (a, ?b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n \\<Longrightarrow>\n  \\<exists>as sel m. relto_fun A B n as sel m (a, ?b)\n  (a, c) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ Suc n\n\ngoal (1 subgoal):\n 1. \\<And>n b.\n       \\<lbrakk>\\<And>b.\n                   (a, b)\n                   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n \\<Longrightarrow>\n                   \\<exists>as sel m. relto_fun A B n as sel m (a, b);\n        (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ Suc n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>as sel m.\n                            relto_fun A B (Suc n) as sel m (a, b)", "from relpow_Suc_E[OF Suc(2)]"], ["proof (chain)\npicking this:\n  (\\<And>y.\n      \\<lbrakk>(a, y) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n;\n       (y, c) \\<in> B\\<^sup>* O A O B\\<^sup>*\\<rbrakk>\n      \\<Longrightarrow> ?P) \\<Longrightarrow>\n  ?P", "obtain b where ab: \"(a,b) \\<in> (relto A B)^^n\" and bc: \"(b,c) \\<in> relto A B\""], ["proof (prove)\nusing this:\n  (\\<And>y.\n      \\<lbrakk>(a, y) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n;\n       (y, c) \\<in> B\\<^sup>* O A O B\\<^sup>*\\<rbrakk>\n      \\<Longrightarrow> ?P) \\<Longrightarrow>\n  ?P\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>(a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n;\n         (b, c) \\<in> B\\<^sup>* O A O B\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n\n  (b, c) \\<in> B\\<^sup>* O A O B\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>n b.\n       \\<lbrakk>\\<And>b.\n                   (a, b)\n                   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n \\<Longrightarrow>\n                   \\<exists>as sel m. relto_fun A B n as sel m (a, b);\n        (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ Suc n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>as sel m.\n                            relto_fun A B (Suc n) as sel m (a, b)", "from Suc(1)[OF ab]"], ["proof (chain)\npicking this:\n  \\<exists>as sel m. relto_fun A B n as sel m (a, b)", "obtain as sel m where\n    IH: \"relto_fun A B n as sel m (a, b)\""], ["proof (prove)\nusing this:\n  \\<exists>as sel m. relto_fun A B n as sel m (a, b)\n\ngoal (1 subgoal):\n 1. (\\<And>as sel m.\n        relto_fun A B n as sel m (a, b) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  relto_fun A B n as sel m (a, b)\n\ngoal (1 subgoal):\n 1. \\<And>n b.\n       \\<lbrakk>\\<And>b.\n                   (a, b)\n                   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n \\<Longrightarrow>\n                   \\<exists>as sel m. relto_fun A B n as sel m (a, b);\n        (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ Suc n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>as sel m.\n                            relto_fun A B (Suc n) as sel m (a, b)", "from relto_into_relto_fun[OF bc]"], ["proof (chain)\npicking this:\n  \\<exists>as sel m. relto_fun A B (Suc 0) as sel m (b, c)", "obtain as sel m where \"relto_fun A B (Suc 0) as sel m (b,c)\""], ["proof (prove)\nusing this:\n  \\<exists>as sel m. relto_fun A B (Suc 0) as sel m (b, c)\n\ngoal (1 subgoal):\n 1. (\\<And>as sel m.\n        relto_fun A B (Suc 0) as sel m (b, c) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  relto_fun A B (Suc 0) as sel m (b, c)\n\ngoal (1 subgoal):\n 1. \\<And>n b.\n       \\<lbrakk>\\<And>b.\n                   (a, b)\n                   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n \\<Longrightarrow>\n                   \\<exists>as sel m. relto_fun A B n as sel m (a, b);\n        (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ Suc n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>as sel m.\n                            relto_fun A B (Suc n) as sel m (a, b)", "from relto_fun_trans[OF IH this]"], ["proof (chain)\npicking this:\n  \\<exists>as sel. relto_fun A B (n + Suc 0) as sel (m__ + m) (a, c)", "show ?case"], ["proof (prove)\nusing this:\n  \\<exists>as sel. relto_fun A B (n + Suc 0) as sel (m__ + m) (a, c)\n\ngoal (1 subgoal):\n 1. \\<exists>as sel m. relto_fun A B (Suc n) as sel m (a, c)", "by auto"], ["proof (state)\nthis:\n  \\<exists>as sel m. relto_fun A B (Suc n) as sel m (a, c)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma relto_fun_into_reltos: assumes \"relto_fun A B n as sel m (a,b)\"\n  shows \"(a,b) \\<in> (relto A B)^^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n", "note * = relto_funD[OF assms]"], ["proof (state)\nthis:\n  as 0 = a\n  as m = b\n  \\<lbrakk>?i < m; sel ?i\\<rbrakk>\n  \\<Longrightarrow> (as ?i, as (Suc ?i)) \\<in> A\n  \\<lbrakk>?i < m; \\<not> sel ?i\\<rbrakk>\n  \\<Longrightarrow> (as ?i, as (Suc ?i)) \\<in> B\n  n = card {i. i < m \\<and> sel i}\n  (n = 0) = (m = 0)\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n", "{"], ["proof (state)\nthis:\n  as 0 = a\n  as m = b\n  \\<lbrakk>?i < m; sel ?i\\<rbrakk>\n  \\<Longrightarrow> (as ?i, as (Suc ?i)) \\<in> A\n  \\<lbrakk>?i < m; \\<not> sel ?i\\<rbrakk>\n  \\<Longrightarrow> (as ?i, as (Suc ?i)) \\<in> B\n  n = card {i. i < m \\<and> sel i}\n  (n = 0) = (m = 0)\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n", "fix m'"], ["proof (state)\ngoal (1 subgoal):\n 1. (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n", "let ?c = \"\\<lambda> m'. card {i. i < m' \\<and> sel i}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n", "assume \"m' \\<le> m\""], ["proof (state)\nthis:\n  m' \\<le> m\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n", "hence \"(?c m' > 0 \\<longrightarrow> (as 0, as m') \\<in> (relto A B)^^ ?c m') \\<and> (?c m' = 0 \\<longrightarrow> (as 0, as m') \\<in> B^*)\""], ["proof (prove)\nusing this:\n  m' \\<le> m\n\ngoal (1 subgoal):\n 1. (0 < card {i. i < m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as m')\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < m' \\<and> sel i}) \\<and>\n    (card {i. i < m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as m') \\<in> B\\<^sup>*)", "proof (induct m')"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> m \\<Longrightarrow>\n    (0 < card {i. i < 0 \\<and> sel i} \\<longrightarrow>\n     (as 0, as 0)\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < 0 \\<and> sel i}) \\<and>\n    (card {i. i < 0 \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as 0) \\<in> B\\<^sup>*)\n 2. \\<And>m'.\n       \\<lbrakk>m' \\<le> m \\<Longrightarrow>\n                (0 < card {i. i < m' \\<and> sel i} \\<longrightarrow>\n                 (as 0, as m')\n                 \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n                       card {i. i < m' \\<and> sel i}) \\<and>\n                (card {i. i < m' \\<and> sel i} = 0 \\<longrightarrow>\n                 (as 0, as m') \\<in> B\\<^sup>*);\n        Suc m' \\<le> m\\<rbrakk>\n       \\<Longrightarrow> (0 < card\n                               {i. i < Suc m' \\<and>\n                                   sel i} \\<longrightarrow>\n                          (as 0, as (Suc m'))\n                          \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n                                card {i. i < Suc m' \\<and> sel i}) \\<and>\n                         (card {i. i < Suc m' \\<and> sel i} =\n                          0 \\<longrightarrow>\n                          (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "case (Suc m')"], ["proof (state)\nthis:\n  m' \\<le> m \\<Longrightarrow>\n  (0 < card {i. i < m' \\<and> sel i} \\<longrightarrow>\n   (as 0, as m')\n   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n         card {i. i < m' \\<and> sel i}) \\<and>\n  (card {i. i < m' \\<and> sel i} = 0 \\<longrightarrow>\n   (as 0, as m') \\<in> B\\<^sup>*)\n  Suc m' \\<le> m\n\ngoal (2 subgoals):\n 1. 0 \\<le> m \\<Longrightarrow>\n    (0 < card {i. i < 0 \\<and> sel i} \\<longrightarrow>\n     (as 0, as 0)\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < 0 \\<and> sel i}) \\<and>\n    (card {i. i < 0 \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as 0) \\<in> B\\<^sup>*)\n 2. \\<And>m'.\n       \\<lbrakk>m' \\<le> m \\<Longrightarrow>\n                (0 < card {i. i < m' \\<and> sel i} \\<longrightarrow>\n                 (as 0, as m')\n                 \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n                       card {i. i < m' \\<and> sel i}) \\<and>\n                (card {i. i < m' \\<and> sel i} = 0 \\<longrightarrow>\n                 (as 0, as m') \\<in> B\\<^sup>*);\n        Suc m' \\<le> m\\<rbrakk>\n       \\<Longrightarrow> (0 < card\n                               {i. i < Suc m' \\<and>\n                                   sel i} \\<longrightarrow>\n                          (as 0, as (Suc m'))\n                          \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n                                card {i. i < Suc m' \\<and> sel i}) \\<and>\n                         (card {i. i < Suc m' \\<and> sel i} =\n                          0 \\<longrightarrow>\n                          (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "let ?x = \"as 0\""], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> m \\<Longrightarrow>\n    (0 < card {i. i < 0 \\<and> sel i} \\<longrightarrow>\n     (as 0, as 0)\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < 0 \\<and> sel i}) \\<and>\n    (card {i. i < 0 \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as 0) \\<in> B\\<^sup>*)\n 2. \\<And>m'.\n       \\<lbrakk>m' \\<le> m \\<Longrightarrow>\n                (0 < card {i. i < m' \\<and> sel i} \\<longrightarrow>\n                 (as 0, as m')\n                 \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n                       card {i. i < m' \\<and> sel i}) \\<and>\n                (card {i. i < m' \\<and> sel i} = 0 \\<longrightarrow>\n                 (as 0, as m') \\<in> B\\<^sup>*);\n        Suc m' \\<le> m\\<rbrakk>\n       \\<Longrightarrow> (0 < card\n                               {i. i < Suc m' \\<and>\n                                   sel i} \\<longrightarrow>\n                          (as 0, as (Suc m'))\n                          \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n                                card {i. i < Suc m' \\<and> sel i}) \\<and>\n                         (card {i. i < Suc m' \\<and> sel i} =\n                          0 \\<longrightarrow>\n                          (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "let ?y = \"as m'\""], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> m \\<Longrightarrow>\n    (0 < card {i. i < 0 \\<and> sel i} \\<longrightarrow>\n     (as 0, as 0)\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < 0 \\<and> sel i}) \\<and>\n    (card {i. i < 0 \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as 0) \\<in> B\\<^sup>*)\n 2. \\<And>m'.\n       \\<lbrakk>m' \\<le> m \\<Longrightarrow>\n                (0 < card {i. i < m' \\<and> sel i} \\<longrightarrow>\n                 (as 0, as m')\n                 \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n                       card {i. i < m' \\<and> sel i}) \\<and>\n                (card {i. i < m' \\<and> sel i} = 0 \\<longrightarrow>\n                 (as 0, as m') \\<in> B\\<^sup>*);\n        Suc m' \\<le> m\\<rbrakk>\n       \\<Longrightarrow> (0 < card\n                               {i. i < Suc m' \\<and>\n                                   sel i} \\<longrightarrow>\n                          (as 0, as (Suc m'))\n                          \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n                                card {i. i < Suc m' \\<and> sel i}) \\<and>\n                         (card {i. i < Suc m' \\<and> sel i} =\n                          0 \\<longrightarrow>\n                          (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "let ?z = \"as (Suc m')\""], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> m \\<Longrightarrow>\n    (0 < card {i. i < 0 \\<and> sel i} \\<longrightarrow>\n     (as 0, as 0)\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < 0 \\<and> sel i}) \\<and>\n    (card {i. i < 0 \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as 0) \\<in> B\\<^sup>*)\n 2. \\<And>m'.\n       \\<lbrakk>m' \\<le> m \\<Longrightarrow>\n                (0 < card {i. i < m' \\<and> sel i} \\<longrightarrow>\n                 (as 0, as m')\n                 \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n                       card {i. i < m' \\<and> sel i}) \\<and>\n                (card {i. i < m' \\<and> sel i} = 0 \\<longrightarrow>\n                 (as 0, as m') \\<in> B\\<^sup>*);\n        Suc m' \\<le> m\\<rbrakk>\n       \\<Longrightarrow> (0 < card\n                               {i. i < Suc m' \\<and>\n                                   sel i} \\<longrightarrow>\n                          (as 0, as (Suc m'))\n                          \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n                                card {i. i < Suc m' \\<and> sel i}) \\<and>\n                         (card {i. i < Suc m' \\<and> sel i} =\n                          0 \\<longrightarrow>\n                          (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "let ?C = \"?c (Suc m')\""], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> m \\<Longrightarrow>\n    (0 < card {i. i < 0 \\<and> sel i} \\<longrightarrow>\n     (as 0, as 0)\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < 0 \\<and> sel i}) \\<and>\n    (card {i. i < 0 \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as 0) \\<in> B\\<^sup>*)\n 2. \\<And>m'.\n       \\<lbrakk>m' \\<le> m \\<Longrightarrow>\n                (0 < card {i. i < m' \\<and> sel i} \\<longrightarrow>\n                 (as 0, as m')\n                 \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n                       card {i. i < m' \\<and> sel i}) \\<and>\n                (card {i. i < m' \\<and> sel i} = 0 \\<longrightarrow>\n                 (as 0, as m') \\<in> B\\<^sup>*);\n        Suc m' \\<le> m\\<rbrakk>\n       \\<Longrightarrow> (0 < card\n                               {i. i < Suc m' \\<and>\n                                   sel i} \\<longrightarrow>\n                          (as 0, as (Suc m'))\n                          \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n                                card {i. i < Suc m' \\<and> sel i}) \\<and>\n                         (card {i. i < Suc m' \\<and> sel i} =\n                          0 \\<longrightarrow>\n                          (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "have C: \"?C = ?c m' + (if (sel m') then 1 else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. i < Suc m' \\<and> sel i} =\n    card {i. i < m' \\<and> sel i} + (if sel m' then 1 else 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {i. i < Suc m' \\<and> sel i} =\n    card {i. i < m' \\<and> sel i} + (if sel m' then 1 else 0)", "have id: \"{i. i < Suc m' \\<and> sel i} = {i. i < m' \\<and> sel i} \\<union> (if sel m' then {m'} else {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. i < Suc m' \\<and> sel i} =\n    {i. i < m' \\<and> sel i} \\<union> (if sel m' then {m'} else {})", "by (cases \"sel m'\", auto, case_tac \"x = m'\", auto)"], ["proof (state)\nthis:\n  {i. i < Suc m' \\<and> sel i} =\n  {i. i < m' \\<and> sel i} \\<union> (if sel m' then {m'} else {})\n\ngoal (1 subgoal):\n 1. card {i. i < Suc m' \\<and> sel i} =\n    card {i. i < m' \\<and> sel i} + (if sel m' then 1 else 0)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. i < Suc m' \\<and> sel i} =\n    card {i. i < m' \\<and> sel i} + (if sel m' then 1 else 0)", "unfolding id"], ["proof (prove)\ngoal (1 subgoal):\n 1. card ({i. i < m' \\<and> sel i} \\<union> (if sel m' then {m'} else {})) =\n    card {i. i < m' \\<and> sel i} + (if sel m' then 1 else 0)", "by auto"], ["proof (state)\nthis:\n  card {i. i < Suc m' \\<and> sel i} =\n  card {i. i < m' \\<and> sel i} + (if sel m' then 1 else 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {i. i < Suc m' \\<and> sel i} =\n  card {i. i < m' \\<and> sel i} + (if sel m' then 1 else 0)\n\ngoal (2 subgoals):\n 1. 0 \\<le> m \\<Longrightarrow>\n    (0 < card {i. i < 0 \\<and> sel i} \\<longrightarrow>\n     (as 0, as 0)\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < 0 \\<and> sel i}) \\<and>\n    (card {i. i < 0 \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as 0) \\<in> B\\<^sup>*)\n 2. \\<And>m'.\n       \\<lbrakk>m' \\<le> m \\<Longrightarrow>\n                (0 < card {i. i < m' \\<and> sel i} \\<longrightarrow>\n                 (as 0, as m')\n                 \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n                       card {i. i < m' \\<and> sel i}) \\<and>\n                (card {i. i < m' \\<and> sel i} = 0 \\<longrightarrow>\n                 (as 0, as m') \\<in> B\\<^sup>*);\n        Suc m' \\<le> m\\<rbrakk>\n       \\<Longrightarrow> (0 < card\n                               {i. i < Suc m' \\<and>\n                                   sel i} \\<longrightarrow>\n                          (as 0, as (Suc m'))\n                          \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n                                card {i. i < Suc m' \\<and> sel i}) \\<and>\n                         (card {i. i < Suc m' \\<and> sel i} =\n                          0 \\<longrightarrow>\n                          (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "from Suc(2)"], ["proof (chain)\npicking this:\n  Suc m' \\<le> m", "have m': \"m' \\<le> m\" and lt: \"m' < m\""], ["proof (prove)\nusing this:\n  Suc m' \\<le> m\n\ngoal (1 subgoal):\n 1. m' \\<le> m &&& m' < m", "by auto"], ["proof (state)\nthis:\n  m' \\<le> m\n  m' < m\n\ngoal (2 subgoals):\n 1. 0 \\<le> m \\<Longrightarrow>\n    (0 < card {i. i < 0 \\<and> sel i} \\<longrightarrow>\n     (as 0, as 0)\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < 0 \\<and> sel i}) \\<and>\n    (card {i. i < 0 \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as 0) \\<in> B\\<^sup>*)\n 2. \\<And>m'.\n       \\<lbrakk>m' \\<le> m \\<Longrightarrow>\n                (0 < card {i. i < m' \\<and> sel i} \\<longrightarrow>\n                 (as 0, as m')\n                 \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n                       card {i. i < m' \\<and> sel i}) \\<and>\n                (card {i. i < m' \\<and> sel i} = 0 \\<longrightarrow>\n                 (as 0, as m') \\<in> B\\<^sup>*);\n        Suc m' \\<le> m\\<rbrakk>\n       \\<Longrightarrow> (0 < card\n                               {i. i < Suc m' \\<and>\n                                   sel i} \\<longrightarrow>\n                          (as 0, as (Suc m'))\n                          \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n                                card {i. i < Suc m' \\<and> sel i}) \\<and>\n                         (card {i. i < Suc m' \\<and> sel i} =\n                          0 \\<longrightarrow>\n                          (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "from Suc(1)[OF m']"], ["proof (chain)\npicking this:\n  (0 < card {i. i < m' \\<and> sel i} \\<longrightarrow>\n   (as 0, as m')\n   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n         card {i. i < m' \\<and> sel i}) \\<and>\n  (card {i. i < m' \\<and> sel i} = 0 \\<longrightarrow>\n   (as 0, as m') \\<in> B\\<^sup>*)", "have IH: \"?c m' > 0 \\<Longrightarrow> (?x, ?y) \\<in> (relto A B) ^^ ?c m'\" \n        \"?c m' = 0 \\<Longrightarrow> (?x, ?y) \\<in> B^*\""], ["proof (prove)\nusing this:\n  (0 < card {i. i < m' \\<and> sel i} \\<longrightarrow>\n   (as 0, as m')\n   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n         card {i. i < m' \\<and> sel i}) \\<and>\n  (card {i. i < m' \\<and> sel i} = 0 \\<longrightarrow>\n   (as 0, as m') \\<in> B\\<^sup>*)\n\ngoal (1 subgoal):\n 1. (0 < card {i. i < m' \\<and> sel i} \\<Longrightarrow>\n     (as 0, as m')\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ card {i. i < m' \\<and> sel i}) &&&\n    (card {i. i < m' \\<and> sel i} = 0 \\<Longrightarrow>\n     (as 0, as m') \\<in> B\\<^sup>*)", "by auto"], ["proof (state)\nthis:\n  0 < card {i. i < m' \\<and> sel i} \\<Longrightarrow>\n  (as 0, as m')\n  \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ card {i. i < m' \\<and> sel i}\n  card {i. i < m' \\<and> sel i} = 0 \\<Longrightarrow>\n  (as 0, as m') \\<in> B\\<^sup>*\n\ngoal (2 subgoals):\n 1. 0 \\<le> m \\<Longrightarrow>\n    (0 < card {i. i < 0 \\<and> sel i} \\<longrightarrow>\n     (as 0, as 0)\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < 0 \\<and> sel i}) \\<and>\n    (card {i. i < 0 \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as 0) \\<in> B\\<^sup>*)\n 2. \\<And>m'.\n       \\<lbrakk>m' \\<le> m \\<Longrightarrow>\n                (0 < card {i. i < m' \\<and> sel i} \\<longrightarrow>\n                 (as 0, as m')\n                 \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n                       card {i. i < m' \\<and> sel i}) \\<and>\n                (card {i. i < m' \\<and> sel i} = 0 \\<longrightarrow>\n                 (as 0, as m') \\<in> B\\<^sup>*);\n        Suc m' \\<le> m\\<rbrakk>\n       \\<Longrightarrow> (0 < card\n                               {i. i < Suc m' \\<and>\n                                   sel i} \\<longrightarrow>\n                          (as 0, as (Suc m'))\n                          \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n                                card {i. i < Suc m' \\<and> sel i}) \\<and>\n                         (card {i. i < Suc m' \\<and> sel i} =\n                          0 \\<longrightarrow>\n                          (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "from *(3-4)[OF lt]"], ["proof (chain)\npicking this:\n  sel m' \\<Longrightarrow> (as m', as (Suc m')) \\<in> A\n  \\<not> sel m' \\<Longrightarrow> (as m', as (Suc m')) \\<in> B", "have yz: \"sel m' \\<Longrightarrow> (?y, ?z) \\<in> A\" \"\\<not> sel m' \\<Longrightarrow> (?y, ?z) \\<in> B\""], ["proof (prove)\nusing this:\n  sel m' \\<Longrightarrow> (as m', as (Suc m')) \\<in> A\n  \\<not> sel m' \\<Longrightarrow> (as m', as (Suc m')) \\<in> B\n\ngoal (1 subgoal):\n 1. (sel m' \\<Longrightarrow> (as m', as (Suc m')) \\<in> A) &&&\n    (\\<not> sel m' \\<Longrightarrow> (as m', as (Suc m')) \\<in> B)", "by auto"], ["proof (state)\nthis:\n  sel m' \\<Longrightarrow> (as m', as (Suc m')) \\<in> A\n  \\<not> sel m' \\<Longrightarrow> (as m', as (Suc m')) \\<in> B\n\ngoal (2 subgoals):\n 1. 0 \\<le> m \\<Longrightarrow>\n    (0 < card {i. i < 0 \\<and> sel i} \\<longrightarrow>\n     (as 0, as 0)\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < 0 \\<and> sel i}) \\<and>\n    (card {i. i < 0 \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as 0) \\<in> B\\<^sup>*)\n 2. \\<And>m'.\n       \\<lbrakk>m' \\<le> m \\<Longrightarrow>\n                (0 < card {i. i < m' \\<and> sel i} \\<longrightarrow>\n                 (as 0, as m')\n                 \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n                       card {i. i < m' \\<and> sel i}) \\<and>\n                (card {i. i < m' \\<and> sel i} = 0 \\<longrightarrow>\n                 (as 0, as m') \\<in> B\\<^sup>*);\n        Suc m' \\<le> m\\<rbrakk>\n       \\<Longrightarrow> (0 < card\n                               {i. i < Suc m' \\<and>\n                                   sel i} \\<longrightarrow>\n                          (as 0, as (Suc m'))\n                          \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n                                card {i. i < Suc m' \\<and> sel i}) \\<and>\n                         (card {i. i < Suc m' \\<and> sel i} =\n                          0 \\<longrightarrow>\n                          (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "proof (cases \"?c m' = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. card {i. i < m' \\<and> sel i} = 0 \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n 2. card {i. i < m' \\<and> sel i} \\<noteq> 0 \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "case True"], ["proof (state)\nthis:\n  card {i. i < m' \\<and> sel i} = 0\n\ngoal (2 subgoals):\n 1. card {i. i < m' \\<and> sel i} = 0 \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n 2. card {i. i < m' \\<and> sel i} \\<noteq> 0 \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "note c = this"], ["proof (state)\nthis:\n  card {i. i < m' \\<and> sel i} = 0\n\ngoal (2 subgoals):\n 1. card {i. i < m' \\<and> sel i} = 0 \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n 2. card {i. i < m' \\<and> sel i} \\<noteq> 0 \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "from IH(2)[OF this]"], ["proof (chain)\npicking this:\n  (as 0, as m') \\<in> B\\<^sup>*", "have xy: \"(?x, ?y) \\<in> B^*\""], ["proof (prove)\nusing this:\n  (as 0, as m') \\<in> B\\<^sup>*\n\ngoal (1 subgoal):\n 1. (as 0, as m') \\<in> B\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (as 0, as m') \\<in> B\\<^sup>*\n\ngoal (2 subgoals):\n 1. card {i. i < m' \\<and> sel i} = 0 \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n 2. card {i. i < m' \\<and> sel i} \\<noteq> 0 \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "proof (cases \"sel m'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n 2. \\<not> sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "case False"], ["proof (state)\nthis:\n  \\<not> sel m'\n\ngoal (2 subgoals):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n 2. \\<not> sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "from xy yz(2)[OF False]"], ["proof (chain)\npicking this:\n  (as 0, as m') \\<in> B\\<^sup>*\n  (as m', as (Suc m')) \\<in> B", "have xz: \"(?x, ?z) \\<in> B^*\""], ["proof (prove)\nusing this:\n  (as 0, as m') \\<in> B\\<^sup>*\n  (as m', as (Suc m')) \\<in> B\n\ngoal (1 subgoal):\n 1. (as 0, as (Suc m')) \\<in> B\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (as 0, as (Suc m')) \\<in> B\\<^sup>*\n\ngoal (2 subgoals):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n 2. \\<not> sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "from False c"], ["proof (chain)\npicking this:\n  \\<not> sel m'\n  card {i. i < m' \\<and> sel i} = 0", "have C: \"?C = 0\""], ["proof (prove)\nusing this:\n  \\<not> sel m'\n  card {i. i < m' \\<and> sel i} = 0\n\ngoal (1 subgoal):\n 1. card {i. i < Suc m' \\<and> sel i} = 0", "unfolding C"], ["proof (prove)\nusing this:\n  \\<not> sel m'\n  card {i. i < m' \\<and> sel i} = 0\n\ngoal (1 subgoal):\n 1. card {i. i < m' \\<and> sel i} + (if sel m' then 1 else 0) = 0", "by simp"], ["proof (state)\nthis:\n  card {i. i < Suc m' \\<and> sel i} = 0\n\ngoal (2 subgoals):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n 2. \\<not> sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "from xz"], ["proof (chain)\npicking this:\n  (as 0, as (Suc m')) \\<in> B\\<^sup>*", "show ?thesis"], ["proof (prove)\nusing this:\n  (as 0, as (Suc m')) \\<in> B\\<^sup>*\n\ngoal (1 subgoal):\n 1. (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "unfolding C"], ["proof (prove)\nusing this:\n  (as 0, as (Suc m')) \\<in> B\\<^sup>*\n\ngoal (1 subgoal):\n 1. (0 < 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ 0) \\<and>\n    (0 = 0 \\<longrightarrow> (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "by auto"], ["proof (state)\nthis:\n  (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n   (as 0, as (Suc m'))\n   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n         card {i. i < Suc m' \\<and> sel i}) \\<and>\n  (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n   (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n\ngoal (1 subgoal):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "case True"], ["proof (state)\nthis:\n  sel m'\n\ngoal (1 subgoal):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "from xy yz(1)[OF True]"], ["proof (chain)\npicking this:\n  (as 0, as m') \\<in> B\\<^sup>*\n  (as m', as (Suc m')) \\<in> A", "have xz: \"(?x,?z) \\<in> relto A B\""], ["proof (prove)\nusing this:\n  (as 0, as m') \\<in> B\\<^sup>*\n  (as m', as (Suc m')) \\<in> A\n\ngoal (1 subgoal):\n 1. (as 0, as (Suc m')) \\<in> B\\<^sup>* O A O B\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (as 0, as (Suc m')) \\<in> B\\<^sup>* O A O B\\<^sup>*\n\ngoal (1 subgoal):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "from True c"], ["proof (chain)\npicking this:\n  sel m'\n  card {i. i < m' \\<and> sel i} = 0", "have C: \"?C = 1\""], ["proof (prove)\nusing this:\n  sel m'\n  card {i. i < m' \\<and> sel i} = 0\n\ngoal (1 subgoal):\n 1. card {i. i < Suc m' \\<and> sel i} = 1", "unfolding C"], ["proof (prove)\nusing this:\n  sel m'\n  card {i. i < m' \\<and> sel i} = 0\n\ngoal (1 subgoal):\n 1. card {i. i < m' \\<and> sel i} + (if sel m' then 1 else 0) = 1", "by simp"], ["proof (state)\nthis:\n  card {i. i < Suc m' \\<and> sel i} = 1\n\ngoal (1 subgoal):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "from xz"], ["proof (chain)\npicking this:\n  (as 0, as (Suc m')) \\<in> B\\<^sup>* O A O B\\<^sup>*", "show ?thesis"], ["proof (prove)\nusing this:\n  (as 0, as (Suc m')) \\<in> B\\<^sup>* O A O B\\<^sup>*\n\ngoal (1 subgoal):\n 1. (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "unfolding C"], ["proof (prove)\nusing this:\n  (as 0, as (Suc m')) \\<in> B\\<^sup>* O A O B\\<^sup>*\n\ngoal (1 subgoal):\n 1. (0 < 1 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ 1) \\<and>\n    (1 = 0 \\<longrightarrow> (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "by auto"], ["proof (state)\nthis:\n  (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n   (as 0, as (Suc m'))\n   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n         card {i. i < Suc m' \\<and> sel i}) \\<and>\n  (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n   (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n   (as 0, as (Suc m'))\n   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n         card {i. i < Suc m' \\<and> sel i}) \\<and>\n  (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n   (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n\ngoal (1 subgoal):\n 1. card {i. i < m' \\<and> sel i} \\<noteq> 0 \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. card {i. i < m' \\<and> sel i} \\<noteq> 0 \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "case False"], ["proof (state)\nthis:\n  card {i. i < m' \\<and> sel i} \\<noteq> 0\n\ngoal (1 subgoal):\n 1. card {i. i < m' \\<and> sel i} \\<noteq> 0 \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "hence c: \"?c m' > 0\" \"(?c m' = 0) = False\""], ["proof (prove)\nusing this:\n  card {i. i < m' \\<and> sel i} \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < card {i. i < m' \\<and> sel i} &&&\n    (card {i. i < m' \\<and> sel i} = 0) = False", "by arith+"], ["proof (state)\nthis:\n  0 < card {i. i < m' \\<and> sel i}\n  (card {i. i < m' \\<and> sel i} = 0) = False\n\ngoal (1 subgoal):\n 1. card {i. i < m' \\<and> sel i} \\<noteq> 0 \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "from IH(1)[OF c(1)]"], ["proof (chain)\npicking this:\n  (as 0, as m')\n  \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ card {i. i < m' \\<and> sel i}", "have xy: \"(?x, ?y) \\<in> (relto A B) ^^ ?c m'\""], ["proof (prove)\nusing this:\n  (as 0, as m')\n  \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ card {i. i < m' \\<and> sel i}\n\ngoal (1 subgoal):\n 1. (as 0, as m')\n    \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ card {i. i < m' \\<and> sel i}", "."], ["proof (state)\nthis:\n  (as 0, as m')\n  \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ card {i. i < m' \\<and> sel i}\n\ngoal (1 subgoal):\n 1. card {i. i < m' \\<and> sel i} \\<noteq> 0 \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "proof (cases \"sel m'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n 2. \\<not> sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "case False"], ["proof (state)\nthis:\n  \\<not> sel m'\n\ngoal (2 subgoals):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n 2. \\<not> sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "from c"], ["proof (chain)\npicking this:\n  0 < card {i. i < m' \\<and> sel i}\n  (card {i. i < m' \\<and> sel i} = 0) = False", "obtain k where ck: \"?c m' = Suc k\""], ["proof (prove)\nusing this:\n  0 < card {i. i < m' \\<and> sel i}\n  (card {i. i < m' \\<and> sel i} = 0) = False\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        card {i. i < m' \\<and> sel i} = Suc k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"?c m'\", auto)"], ["proof (state)\nthis:\n  card {i. i < m' \\<and> sel i} = Suc k\n\ngoal (2 subgoals):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n 2. \\<not> sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "from relpow_Suc_E[OF xy[unfolded this]]"], ["proof (chain)\npicking this:\n  (\\<And>y.\n      \\<lbrakk>(as 0, y) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ k;\n       (y, as m') \\<in> B\\<^sup>* O A O B\\<^sup>*\\<rbrakk>\n      \\<Longrightarrow> ?P) \\<Longrightarrow>\n  ?P", "obtain\n            u where xu: \"(?x, u) \\<in> (relto A B) ^^ k\" and uy: \"(u, ?y) \\<in> relto A B\""], ["proof (prove)\nusing this:\n  (\\<And>y.\n      \\<lbrakk>(as 0, y) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ k;\n       (y, as m') \\<in> B\\<^sup>* O A O B\\<^sup>*\\<rbrakk>\n      \\<Longrightarrow> ?P) \\<Longrightarrow>\n  ?P\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>(as 0, u) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ k;\n         (u, as m') \\<in> B\\<^sup>* O A O B\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (as 0, u) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ k\n  (u, as m') \\<in> B\\<^sup>* O A O B\\<^sup>*\n\ngoal (2 subgoals):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n 2. \\<not> sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "from uy yz(2)[OF False]"], ["proof (chain)\npicking this:\n  (u, as m') \\<in> B\\<^sup>* O A O B\\<^sup>*\n  (as m', as (Suc m')) \\<in> B", "have uz: \"(u, ?z) \\<in> relto A B\""], ["proof (prove)\nusing this:\n  (u, as m') \\<in> B\\<^sup>* O A O B\\<^sup>*\n  (as m', as (Suc m')) \\<in> B\n\ngoal (1 subgoal):\n 1. (u, as (Suc m')) \\<in> B\\<^sup>* O A O B\\<^sup>*", "by force"], ["proof (state)\nthis:\n  (u, as (Suc m')) \\<in> B\\<^sup>* O A O B\\<^sup>*\n\ngoal (2 subgoals):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n 2. \\<not> sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "with xu"], ["proof (chain)\npicking this:\n  (as 0, u) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ k\n  (u, as (Suc m')) \\<in> B\\<^sup>* O A O B\\<^sup>*", "have xz: \"(?x,?z) \\<in> (relto A B) ^^ ?c m'\""], ["proof (prove)\nusing this:\n  (as 0, u) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ k\n  (u, as (Suc m')) \\<in> B\\<^sup>* O A O B\\<^sup>*\n\ngoal (1 subgoal):\n 1. (as 0, as (Suc m'))\n    \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ card {i. i < m' \\<and> sel i}", "unfolding ck"], ["proof (prove)\nusing this:\n  (as 0, u) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ k\n  (u, as (Suc m')) \\<in> B\\<^sup>* O A O B\\<^sup>*\n\ngoal (1 subgoal):\n 1. (as 0, as (Suc m')) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ Suc k", "by auto"], ["proof (state)\nthis:\n  (as 0, as (Suc m'))\n  \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ card {i. i < m' \\<and> sel i}\n\ngoal (2 subgoals):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n 2. \\<not> sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "from False c"], ["proof (chain)\npicking this:\n  \\<not> sel m'\n  0 < card {i. i < m' \\<and> sel i}\n  (card {i. i < m' \\<and> sel i} = 0) = False", "have C: \"?C = ?c m'\""], ["proof (prove)\nusing this:\n  \\<not> sel m'\n  0 < card {i. i < m' \\<and> sel i}\n  (card {i. i < m' \\<and> sel i} = 0) = False\n\ngoal (1 subgoal):\n 1. card {i. i < Suc m' \\<and> sel i} = card {i. i < m' \\<and> sel i}", "unfolding C"], ["proof (prove)\nusing this:\n  \\<not> sel m'\n  0 < card {i. i < m' \\<and> sel i}\n  (card {i. i < m' \\<and> sel i} = 0) = False\n\ngoal (1 subgoal):\n 1. card {i. i < m' \\<and> sel i} + (if sel m' then 1 else 0) =\n    card {i. i < m' \\<and> sel i}", "by simp"], ["proof (state)\nthis:\n  card {i. i < Suc m' \\<and> sel i} = card {i. i < m' \\<and> sel i}\n\ngoal (2 subgoals):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n 2. \\<not> sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "from xz"], ["proof (chain)\npicking this:\n  (as 0, as (Suc m'))\n  \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ card {i. i < m' \\<and> sel i}", "show ?thesis"], ["proof (prove)\nusing this:\n  (as 0, as (Suc m'))\n  \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ card {i. i < m' \\<and> sel i}\n\ngoal (1 subgoal):\n 1. (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "unfolding C c"], ["proof (prove)\nusing this:\n  (as 0, as (Suc m'))\n  \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ card {i. i < m' \\<and> sel i}\n\ngoal (1 subgoal):\n 1. (0 < card {i. i < m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < m' \\<and> sel i}) \\<and>\n    (False \\<longrightarrow> (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "by auto"], ["proof (state)\nthis:\n  (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n   (as 0, as (Suc m'))\n   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n         card {i. i < Suc m' \\<and> sel i}) \\<and>\n  (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n   (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n\ngoal (1 subgoal):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "case True"], ["proof (state)\nthis:\n  sel m'\n\ngoal (1 subgoal):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "from xy yz(1)[OF True]"], ["proof (chain)\npicking this:\n  (as 0, as m')\n  \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ card {i. i < m' \\<and> sel i}\n  (as m', as (Suc m')) \\<in> A", "have xz: \"(?x,?z) \\<in> (relto A B) ^^ (Suc (?c m'))\""], ["proof (prove)\nusing this:\n  (as 0, as m')\n  \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ card {i. i < m' \\<and> sel i}\n  (as m', as (Suc m')) \\<in> A\n\ngoal (1 subgoal):\n 1. (as 0, as (Suc m'))\n    \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ Suc (card {i. i < m' \\<and> sel i})", "by auto"], ["proof (state)\nthis:\n  (as 0, as (Suc m'))\n  \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ Suc (card {i. i < m' \\<and> sel i})\n\ngoal (1 subgoal):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "from c True"], ["proof (chain)\npicking this:\n  0 < card {i. i < m' \\<and> sel i}\n  (card {i. i < m' \\<and> sel i} = 0) = False\n  sel m'", "have C: \"?C = Suc (?c m')\""], ["proof (prove)\nusing this:\n  0 < card {i. i < m' \\<and> sel i}\n  (card {i. i < m' \\<and> sel i} = 0) = False\n  sel m'\n\ngoal (1 subgoal):\n 1. card {i. i < Suc m' \\<and> sel i} = Suc (card {i. i < m' \\<and> sel i})", "unfolding C"], ["proof (prove)\nusing this:\n  0 < card {i. i < m' \\<and> sel i}\n  (card {i. i < m' \\<and> sel i} = 0) = False\n  sel m'\n\ngoal (1 subgoal):\n 1. card {i. i < m' \\<and> sel i} + (if sel m' then 1 else 0) =\n    Suc (card {i. i < m' \\<and> sel i})", "by simp"], ["proof (state)\nthis:\n  card {i. i < Suc m' \\<and> sel i} = Suc (card {i. i < m' \\<and> sel i})\n\ngoal (1 subgoal):\n 1. sel m' \\<Longrightarrow>\n    (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "from xz"], ["proof (chain)\npicking this:\n  (as 0, as (Suc m'))\n  \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ Suc (card {i. i < m' \\<and> sel i})", "show ?thesis"], ["proof (prove)\nusing this:\n  (as 0, as (Suc m'))\n  \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ Suc (card {i. i < m' \\<and> sel i})\n\ngoal (1 subgoal):\n 1. (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < Suc m' \\<and> sel i}) \\<and>\n    (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "unfolding C"], ["proof (prove)\nusing this:\n  (as 0, as (Suc m'))\n  \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ Suc (card {i. i < m' \\<and> sel i})\n\ngoal (1 subgoal):\n 1. (0 < Suc (card {i. i < m' \\<and> sel i}) \\<longrightarrow>\n     (as 0, as (Suc m'))\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           Suc (card {i. i < m' \\<and> sel i})) \\<and>\n    (Suc (card {i. i < m' \\<and> sel i}) = 0 \\<longrightarrow>\n     (as 0, as (Suc m')) \\<in> B\\<^sup>*)", "by auto"], ["proof (state)\nthis:\n  (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n   (as 0, as (Suc m'))\n   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n         card {i. i < Suc m' \\<and> sel i}) \\<and>\n  (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n   (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n   (as 0, as (Suc m'))\n   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n         card {i. i < Suc m' \\<and> sel i}) \\<and>\n  (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n   (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (0 < card {i. i < Suc m' \\<and> sel i} \\<longrightarrow>\n   (as 0, as (Suc m'))\n   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n         card {i. i < Suc m' \\<and> sel i}) \\<and>\n  (card {i. i < Suc m' \\<and> sel i} = 0 \\<longrightarrow>\n   (as 0, as (Suc m')) \\<in> B\\<^sup>*)\n\ngoal (1 subgoal):\n 1. 0 \\<le> m \\<Longrightarrow>\n    (0 < card {i. i < 0 \\<and> sel i} \\<longrightarrow>\n     (as 0, as 0)\n     \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n           card {i. i < 0 \\<and> sel i}) \\<and>\n    (card {i. i < 0 \\<and> sel i} = 0 \\<longrightarrow>\n     (as 0, as 0) \\<in> B\\<^sup>*)", "qed simp"], ["proof (state)\nthis:\n  (0 < card {i. i < m' \\<and> sel i} \\<longrightarrow>\n   (as 0, as m')\n   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n         card {i. i < m' \\<and> sel i}) \\<and>\n  (card {i. i < m' \\<and> sel i} = 0 \\<longrightarrow>\n   (as 0, as m') \\<in> B\\<^sup>*)\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n", "}"], ["proof (state)\nthis:\n  ?m'2 \\<le> m \\<Longrightarrow>\n  (0 < card {i. i < ?m'2 \\<and> sel i} \\<longrightarrow>\n   (as 0, as ?m'2)\n   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^\n         card {i. i < ?m'2 \\<and> sel i}) \\<and>\n  (card {i. i < ?m'2 \\<and> sel i} = 0 \\<longrightarrow>\n   (as 0, as ?m'2) \\<in> B\\<^sup>*)\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n", "from this[of m] *"], ["proof (chain)\npicking this:\n  m \\<le> m \\<Longrightarrow>\n  (0 < card {i. i < m \\<and> sel i} \\<longrightarrow>\n   (as 0, as m)\n   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ card {i. i < m \\<and> sel i}) \\<and>\n  (card {i. i < m \\<and> sel i} = 0 \\<longrightarrow>\n   (as 0, as m) \\<in> B\\<^sup>*)\n  as 0 = a\n  as m = b\n  \\<lbrakk>?i < m; sel ?i\\<rbrakk>\n  \\<Longrightarrow> (as ?i, as (Suc ?i)) \\<in> A\n  \\<lbrakk>?i < m; \\<not> sel ?i\\<rbrakk>\n  \\<Longrightarrow> (as ?i, as (Suc ?i)) \\<in> B\n  n = card {i. i < m \\<and> sel i}\n  (n = 0) = (m = 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  m \\<le> m \\<Longrightarrow>\n  (0 < card {i. i < m \\<and> sel i} \\<longrightarrow>\n   (as 0, as m)\n   \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ card {i. i < m \\<and> sel i}) \\<and>\n  (card {i. i < m \\<and> sel i} = 0 \\<longrightarrow>\n   (as 0, as m) \\<in> B\\<^sup>*)\n  as 0 = a\n  as m = b\n  \\<lbrakk>?i < m; sel ?i\\<rbrakk>\n  \\<Longrightarrow> (as ?i, as (Suc ?i)) \\<in> A\n  \\<lbrakk>?i < m; \\<not> sel ?i\\<rbrakk>\n  \\<Longrightarrow> (as ?i, as (Suc ?i)) \\<in> B\n  n = card {i. i < m \\<and> sel i}\n  (n = 0) = (m = 0)\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n", "by auto"], ["proof (state)\nthis:\n  (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma relto_relto_fun_conv: \"((a,b) \\<in> (relto A B)^^n) = (\\<exists> as sel m. relto_fun A B n as sel m (a,b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n) =\n    (\\<exists>as sel m. relto_fun A B n as sel m (a, b))", "using relto_fun_into_reltos[of A B n _ _ _ a b] reltos_into_relto_fun[of a b n B A]"], ["proof (prove)\nusing this:\n  relto_fun A B n ?as ?sel ?m (a, b) \\<Longrightarrow>\n  (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n\n  (a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n \\<Longrightarrow>\n  \\<exists>as sel m. relto_fun A B n as sel m (a, b)\n\ngoal (1 subgoal):\n 1. ((a, b) \\<in> (B\\<^sup>* O A O B\\<^sup>*) ^^ n) =\n    (\\<exists>as sel m. relto_fun A B n as sel m (a, b))", "by blast"], ["", "lemma relto_fun_intermediate: assumes \"A \\<subseteq> C\" and \"B \\<subseteq> C\" \n  and rf: \"relto_fun A B n as sel m (a,b)\"\n  shows \"i \\<le> m \\<Longrightarrow> (a,as i) \\<in> C^*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<le> m \\<Longrightarrow> (a, as i) \\<in> C\\<^sup>*", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> m \\<Longrightarrow> (a, as 0) \\<in> C\\<^sup>*\n 2. \\<And>i.\n       \\<lbrakk>i \\<le> m \\<Longrightarrow> (a, as i) \\<in> C\\<^sup>*;\n        Suc i \\<le> m\\<rbrakk>\n       \\<Longrightarrow> (a, as (Suc i)) \\<in> C\\<^sup>*", "case 0"], ["proof (state)\nthis:\n  0 \\<le> m\n\ngoal (2 subgoals):\n 1. 0 \\<le> m \\<Longrightarrow> (a, as 0) \\<in> C\\<^sup>*\n 2. \\<And>i.\n       \\<lbrakk>i \\<le> m \\<Longrightarrow> (a, as i) \\<in> C\\<^sup>*;\n        Suc i \\<le> m\\<rbrakk>\n       \\<Longrightarrow> (a, as (Suc i)) \\<in> C\\<^sup>*", "from relto_funD[OF rf]"], ["proof (chain)\npicking this:\n  as 0 = a\n  as m = b\n  \\<lbrakk>?i < m; sel ?i\\<rbrakk>\n  \\<Longrightarrow> (as ?i, as (Suc ?i)) \\<in> A\n  \\<lbrakk>?i < m; \\<not> sel ?i\\<rbrakk>\n  \\<Longrightarrow> (as ?i, as (Suc ?i)) \\<in> B\n  n = card {i. i < m \\<and> sel i}\n  (n = 0) = (m = 0)", "show ?case"], ["proof (prove)\nusing this:\n  as 0 = a\n  as m = b\n  \\<lbrakk>?i < m; sel ?i\\<rbrakk>\n  \\<Longrightarrow> (as ?i, as (Suc ?i)) \\<in> A\n  \\<lbrakk>?i < m; \\<not> sel ?i\\<rbrakk>\n  \\<Longrightarrow> (as ?i, as (Suc ?i)) \\<in> B\n  n = card {i. i < m \\<and> sel i}\n  (n = 0) = (m = 0)\n\ngoal (1 subgoal):\n 1. (a, as 0) \\<in> C\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (a, as 0) \\<in> C\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> m \\<Longrightarrow> (a, as i) \\<in> C\\<^sup>*;\n        Suc i \\<le> m\\<rbrakk>\n       \\<Longrightarrow> (a, as (Suc i)) \\<in> C\\<^sup>*", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> m \\<Longrightarrow> (a, as i) \\<in> C\\<^sup>*;\n        Suc i \\<le> m\\<rbrakk>\n       \\<Longrightarrow> (a, as (Suc i)) \\<in> C\\<^sup>*", "case (Suc i)"], ["proof (state)\nthis:\n  i \\<le> m \\<Longrightarrow> (a, as i) \\<in> C\\<^sup>*\n  Suc i \\<le> m\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> m \\<Longrightarrow> (a, as i) \\<in> C\\<^sup>*;\n        Suc i \\<le> m\\<rbrakk>\n       \\<Longrightarrow> (a, as (Suc i)) \\<in> C\\<^sup>*", "hence IH: \"(a, as i) \\<in> C^*\" and im: \"i < m\""], ["proof (prove)\nusing this:\n  i \\<le> m \\<Longrightarrow> (a, as i) \\<in> C\\<^sup>*\n  Suc i \\<le> m\n\ngoal (1 subgoal):\n 1. (a, as i) \\<in> C\\<^sup>* &&& i < m", "by auto"], ["proof (state)\nthis:\n  (a, as i) \\<in> C\\<^sup>*\n  i < m\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> m \\<Longrightarrow> (a, as i) \\<in> C\\<^sup>*;\n        Suc i \\<le> m\\<rbrakk>\n       \\<Longrightarrow> (a, as (Suc i)) \\<in> C\\<^sup>*", "from relto_funD(3-4)[OF rf im] assms"], ["proof (chain)\npicking this:\n  sel i \\<Longrightarrow> (as i, as (Suc i)) \\<in> A\n  \\<not> sel i \\<Longrightarrow> (as i, as (Suc i)) \\<in> B\n  A \\<subseteq> C\n  B \\<subseteq> C\n  relto_fun A B n as sel m (a, b)", "have \"(as i, as (Suc i)) \\<in> C\""], ["proof (prove)\nusing this:\n  sel i \\<Longrightarrow> (as i, as (Suc i)) \\<in> A\n  \\<not> sel i \\<Longrightarrow> (as i, as (Suc i)) \\<in> B\n  A \\<subseteq> C\n  B \\<subseteq> C\n  relto_fun A B n as sel m (a, b)\n\ngoal (1 subgoal):\n 1. (as i, as (Suc i)) \\<in> C", "by auto"], ["proof (state)\nthis:\n  (as i, as (Suc i)) \\<in> C\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> m \\<Longrightarrow> (a, as i) \\<in> C\\<^sup>*;\n        Suc i \\<le> m\\<rbrakk>\n       \\<Longrightarrow> (a, as (Suc i)) \\<in> C\\<^sup>*", "with IH"], ["proof (chain)\npicking this:\n  (a, as i) \\<in> C\\<^sup>*\n  (as i, as (Suc i)) \\<in> C", "show ?case"], ["proof (prove)\nusing this:\n  (a, as i) \\<in> C\\<^sup>*\n  (as i, as (Suc i)) \\<in> C\n\ngoal (1 subgoal):\n 1. (a, as (Suc i)) \\<in> C\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (a, as (Suc i)) \\<in> C\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma not_SN_on_rel_succ:\n  assumes \"\\<not> SN_on (relto R E) {s}\"\n  shows \"\\<exists>t u. (s, t) \\<in> E\\<^sup>* \\<and> (t, u) \\<in> R \\<and> \\<not> SN_on (relto R E) {u}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       (s, t) \\<in> E\\<^sup>* \\<and>\n       (t, u) \\<in> R \\<and> \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {u}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       (s, t) \\<in> E\\<^sup>* \\<and>\n       (t, u) \\<in> R \\<and> \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {u}", "obtain v where \"(s, v) \\<in> relto R E\" and v: \"\\<not> SN_on (relto R E) {v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>(s, v) \\<in> E\\<^sup>* O R O E\\<^sup>*;\n         \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {v}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {s}\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>(s, v) \\<in> E\\<^sup>* O R O E\\<^sup>*;\n         \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {v}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  (s, v) \\<in> E\\<^sup>* O R O E\\<^sup>*\n  \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {v}\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       (s, t) \\<in> E\\<^sup>* \\<and>\n       (t, u) \\<in> R \\<and> \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {u}", "moreover"], ["proof (state)\nthis:\n  (s, v) \\<in> E\\<^sup>* O R O E\\<^sup>*\n  \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {v}\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       (s, t) \\<in> E\\<^sup>* \\<and>\n       (t, u) \\<in> R \\<and> \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {u}", "then"], ["proof (chain)\npicking this:\n  (s, v) \\<in> E\\<^sup>* O R O E\\<^sup>*\n  \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {v}", "obtain t and u\n    where \"(s, t) \\<in> E^*\" and \"(t, u) \\<in> R\" and uv: \"(u, v) \\<in> E\\<^sup>*\""], ["proof (prove)\nusing this:\n  (s, v) \\<in> E\\<^sup>* O R O E\\<^sup>*\n  \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {v}\n\ngoal (1 subgoal):\n 1. (\\<And>t u.\n        \\<lbrakk>(s, t) \\<in> E\\<^sup>*; (t, u) \\<in> R;\n         (u, v) \\<in> E\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (s, t) \\<in> E\\<^sup>*\n  (t, u) \\<in> R\n  (u, v) \\<in> E\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       (s, t) \\<in> E\\<^sup>* \\<and>\n       (t, u) \\<in> R \\<and> \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {u}", "moreover"], ["proof (state)\nthis:\n  (s, t) \\<in> E\\<^sup>*\n  (t, u) \\<in> R\n  (u, v) \\<in> E\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       (s, t) \\<in> E\\<^sup>* \\<and>\n       (t, u) \\<in> R \\<and> \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {u}", "from uv"], ["proof (chain)\npicking this:\n  (u, v) \\<in> E\\<^sup>*", "have uv: \"(u,v) \\<in> (R \\<union> E)^*\""], ["proof (prove)\nusing this:\n  (u, v) \\<in> E\\<^sup>*\n\ngoal (1 subgoal):\n 1. (u, v) \\<in> (R \\<union> E)\\<^sup>*", "by regexp"], ["proof (state)\nthis:\n  (u, v) \\<in> (R \\<union> E)\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       (s, t) \\<in> E\\<^sup>* \\<and>\n       (t, u) \\<in> R \\<and> \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {u}", "moreover"], ["proof (state)\nthis:\n  (u, v) \\<in> (R \\<union> E)\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       (s, t) \\<in> E\\<^sup>* \\<and>\n       (t, u) \\<in> R \\<and> \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {u}", "have \"\\<not> SN_on (relto R E) {u}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {u}", "using\n    v steps_preserve_SN_on_relto[OF uv]"], ["proof (prove)\nusing this:\n  \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {v}\n  SN_on (E\\<^sup>* O R O E\\<^sup>*) {u} \\<Longrightarrow>\n  SN_on (E\\<^sup>* O R O E\\<^sup>*) {v}\n\ngoal (1 subgoal):\n 1. \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {u}", "by auto"], ["proof (state)\nthis:\n  \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {u}\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       (s, t) \\<in> E\\<^sup>* \\<and>\n       (t, u) \\<in> R \\<and> \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {u}", "ultimately"], ["proof (chain)\npicking this:\n  (s, v) \\<in> E\\<^sup>* O R O E\\<^sup>*\n  \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {v}\n  (s, t) \\<in> E\\<^sup>*\n  (t, u) \\<in> R\n  (u, v) \\<in> E\\<^sup>*\n  (u, v) \\<in> (R \\<union> E)\\<^sup>*\n  \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {u}", "show ?thesis"], ["proof (prove)\nusing this:\n  (s, v) \\<in> E\\<^sup>* O R O E\\<^sup>*\n  \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {v}\n  (s, t) \\<in> E\\<^sup>*\n  (t, u) \\<in> R\n  (u, v) \\<in> E\\<^sup>*\n  (u, v) \\<in> (R \\<union> E)\\<^sup>*\n  \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {u}\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       (s, t) \\<in> E\\<^sup>* \\<and>\n       (t, u) \\<in> R \\<and> \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {u}", "by auto"], ["proof (state)\nthis:\n  \\<exists>t u.\n     (s, t) \\<in> E\\<^sup>* \\<and>\n     (t, u) \\<in> R \\<and> \\<not> SN_on (E\\<^sup>* O R O E\\<^sup>*) {u}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SN_on_relto_relcomp: \"SN_on (relto R S) T = SN_on (S\\<^sup>* O R) T\" (is \"?L T = ?R T\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) T = SN_on (S\\<^sup>* O R) T", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R) T\n 2. SN_on (S\\<^sup>* O R) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "assume L: \"?L T\""], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) T\n\ngoal (2 subgoals):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R) T\n 2. SN_on (S\\<^sup>* O R) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "{"], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) T\n\ngoal (2 subgoals):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R) T\n 2. SN_on (S\\<^sup>* O R) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "fix t"], ["proof (state)\ngoal (2 subgoals):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R) T\n 2. SN_on (S\\<^sup>* O R) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "assume \"t \\<in> T\""], ["proof (state)\nthis:\n  t \\<in> T\n\ngoal (2 subgoals):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R) T\n 2. SN_on (S\\<^sup>* O R) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "hence \"?L {t}\""], ["proof (prove)\nusing this:\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {t}", "using L"], ["proof (prove)\nusing this:\n  t \\<in> T\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) T\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {t}", "by fast"], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) {t}\n\ngoal (2 subgoals):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R) T\n 2. SN_on (S\\<^sup>* O R) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "}"], ["proof (state)\nthis:\n  ?t2 \\<in> T \\<Longrightarrow> SN_on (S\\<^sup>* O R O S\\<^sup>*) {?t2}\n\ngoal (2 subgoals):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R) T\n 2. SN_on (S\\<^sup>* O R) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "thus \"?R T\""], ["proof (prove)\nusing this:\n  ?t2 \\<in> T \\<Longrightarrow> SN_on (S\\<^sup>* O R O S\\<^sup>*) {?t2}\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R) T", "by fast"], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R) T\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "have \"SN_on (relto R S) {s} = SN_on (S\\<^sup>* O R) {s}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {s} = SN_on (S\\<^sup>* O R) {s}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {s} \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R) {s}\n 2. SN_on (S\\<^sup>* O R) {s} \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}", "let ?X = \"{s. \\<not>SN_on (relto R S) {s}}\""], ["proof (state)\ngoal (2 subgoals):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {s} \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R) {s}\n 2. SN_on (S\\<^sup>* O R) {s} \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {s} \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R) {s}\n 2. SN_on (S\\<^sup>* O R) {s} \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}", "assume \"\\<not> ?L {s}\""], ["proof (state)\nthis:\n  \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}\n\ngoal (2 subgoals):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {s} \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R) {s}\n 2. SN_on (S\\<^sup>* O R) {s} \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}", "hence \"s \\<in> ?X\""], ["proof (prove)\nusing this:\n  \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}\n\ngoal (1 subgoal):\n 1. s \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}", "by auto"], ["proof (state)\nthis:\n  s \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}\n\ngoal (2 subgoals):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {s} \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R) {s}\n 2. SN_on (S\\<^sup>* O R) {s} \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}", "hence \"\\<not> ?R {s}\""], ["proof (prove)\nusing this:\n  s \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}\n\ngoal (1 subgoal):\n 1. \\<not> SN_on (S\\<^sup>* O R) {s}", "proof(rule lower_set_imp_not_SN_on, intro ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>s \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}};\n        t \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u\\<in>{s.\n   \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}.\n                            (t, u) \\<in> S\\<^sup>* O R", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>s__ \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}};\n        t \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u\\<in>{s.\n   \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}.\n                            (t, u) \\<in> S\\<^sup>* O R", "assume \"s \\<in> ?X\""], ["proof (state)\nthis:\n  s \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>s__ \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}};\n        t \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u\\<in>{s.\n   \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}.\n                            (t, u) \\<in> S\\<^sup>* O R", "then"], ["proof (chain)\npicking this:\n  s \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}", "obtain t u where \"(s,t) \\<in> S\\<^sup>*\" \"(t,u) \\<in> R\" and u: \"u \\<in> ?X\""], ["proof (prove)\nusing this:\n  s \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}\n\ngoal (1 subgoal):\n 1. (\\<And>t u.\n        \\<lbrakk>(s, t) \\<in> S\\<^sup>*; (t, u) \\<in> R;\n         u \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding mem_Collect_eq"], ["proof (prove)\nusing this:\n  \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}\n\ngoal (1 subgoal):\n 1. (\\<And>t u.\n        \\<lbrakk>(s, t) \\<in> S\\<^sup>*; (t, u) \\<in> R;\n         \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {u}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis not_SN_on_rel_succ)"], ["proof (state)\nthis:\n  (s, t) \\<in> S\\<^sup>*\n  (t, u) \\<in> R\n  u \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>s__ \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}};\n        t \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u\\<in>{s.\n   \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}.\n                            (t, u) \\<in> S\\<^sup>* O R", "hence \"(s,u) \\<in> S\\<^sup>* O R\""], ["proof (prove)\nusing this:\n  (s, t) \\<in> S\\<^sup>*\n  (t, u) \\<in> R\n  u \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}\n\ngoal (1 subgoal):\n 1. (s, u) \\<in> S\\<^sup>* O R", "by auto"], ["proof (state)\nthis:\n  (s, u) \\<in> S\\<^sup>* O R\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>s__ \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}};\n        t \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u\\<in>{s.\n   \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}.\n                            (t, u) \\<in> S\\<^sup>* O R", "with u"], ["proof (chain)\npicking this:\n  u \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}\n  (s, u) \\<in> S\\<^sup>* O R", "show \"\\<exists>u \\<in> ?X. (s,u) \\<in> S\\<^sup>* O R\""], ["proof (prove)\nusing this:\n  u \\<in> {s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}\n  (s, u) \\<in> S\\<^sup>* O R\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>{s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}.\n       (s, u) \\<in> S\\<^sup>* O R", "by auto"], ["proof (state)\nthis:\n  \\<exists>u\\<in>{s. \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}}.\n     (s, u) \\<in> S\\<^sup>* O R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> SN_on (S\\<^sup>* O R) {s}\n\ngoal (2 subgoals):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {s} \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R) {s}\n 2. SN_on (S\\<^sup>* O R) {s} \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}", "}"], ["proof (state)\nthis:\n  \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s} \\<Longrightarrow>\n  \\<not> SN_on (S\\<^sup>* O R) {s}\n\ngoal (2 subgoals):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {s} \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R) {s}\n 2. SN_on (S\\<^sup>* O R) {s} \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}", "thus \"?R {s} \\<Longrightarrow> ?L {s}\""], ["proof (prove)\nusing this:\n  \\<not> SN_on (S\\<^sup>* O R O S\\<^sup>*) {s} \\<Longrightarrow>\n  \\<not> SN_on (S\\<^sup>* O R) {s}\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R) {s} \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}", "by auto"], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R) {s} \\<Longrightarrow>\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {s} \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R) {s}", "assume \"?L {s}\""], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {s} \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R) {s}", "thus \"?R {s}\""], ["proof (prove)\nusing this:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) {s}\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R) {s}", "by(rule SN_on_mono, auto)"], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R) {s}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) {s} = SN_on (S\\<^sup>* O R) {s}\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "}"], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) {?s2} = SN_on (S\\<^sup>* O R) {?s2}\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "note main = this"], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) {?s2} = SN_on (S\\<^sup>* O R) {?s2}\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "assume R: \"?R T\""], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R) T\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "{"], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R) T\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "assume \"t \\<in> T\""], ["proof (state)\nthis:\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "hence \"?L {t}\""], ["proof (prove)\nusing this:\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) {t}", "unfolding main"], ["proof (prove)\nusing this:\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R) {t}", "using R"], ["proof (prove)\nusing this:\n  t \\<in> T\n  SN_on (S\\<^sup>* O R) T\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R) {t}", "by fast"], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) {t}\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "}"], ["proof (state)\nthis:\n  ?t2 \\<in> T \\<Longrightarrow> SN_on (S\\<^sup>* O R O S\\<^sup>*) {?t2}\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R) T \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "thus \"?L T\""], ["proof (prove)\nusing this:\n  ?t2 \\<in> T \\<Longrightarrow> SN_on (S\\<^sup>* O R O S\\<^sup>*) {?t2}\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R O S\\<^sup>*) T", "by fast"], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R O S\\<^sup>*) T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma trans_relto:\n  assumes trans: \"trans R\" and \"S O R \\<subseteq> R O S\"\n  shows \"trans (relto R S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans (S\\<^sup>* O R O S\\<^sup>*)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> S\\<^sup>* O R O S\\<^sup>*;\n        (y, z) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> S\\<^sup>* O R O S\\<^sup>*", "fix a b c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> S\\<^sup>* O R O S\\<^sup>*;\n        (y, z) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> S\\<^sup>* O R O S\\<^sup>*", "assume ab: \"(a, b) \\<in> S\\<^sup>* O R O S\\<^sup>*\" and bc: \"(b, c) \\<in> S\\<^sup>* O R O S\\<^sup>*\""], ["proof (state)\nthis:\n  (a, b) \\<in> S\\<^sup>* O R O S\\<^sup>*\n  (b, c) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> S\\<^sup>* O R O S\\<^sup>*;\n        (y, z) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> S\\<^sup>* O R O S\\<^sup>*", "from rtrancl_O_push [of S R] assms(2)"], ["proof (chain)\npicking this:\n  S O R \\<subseteq> R O S\\<^sup>* \\<Longrightarrow>\n  S\\<^sup>* O R \\<subseteq> R O S\\<^sup>*\n  S O R \\<subseteq> R O S", "have comm: \"S\\<^sup>* O R \\<subseteq> R O S\\<^sup>*\""], ["proof (prove)\nusing this:\n  S O R \\<subseteq> R O S\\<^sup>* \\<Longrightarrow>\n  S\\<^sup>* O R \\<subseteq> R O S\\<^sup>*\n  S O R \\<subseteq> R O S\n\ngoal (1 subgoal):\n 1. S\\<^sup>* O R \\<subseteq> R O S\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  S\\<^sup>* O R \\<subseteq> R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> S\\<^sup>* O R O S\\<^sup>*;\n        (y, z) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> S\\<^sup>* O R O S\\<^sup>*", "from ab"], ["proof (chain)\npicking this:\n  (a, b) \\<in> S\\<^sup>* O R O S\\<^sup>*", "obtain d e where de: \"(a, d) \\<in> S\\<^sup>*\" \"(d, e) \\<in> R\" \"(e, b) \\<in> S\\<^sup>*\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<And>d e.\n        \\<lbrakk>(a, d) \\<in> S\\<^sup>*; (d, e) \\<in> R;\n         (e, b) \\<in> S\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (a, d) \\<in> S\\<^sup>*\n  (d, e) \\<in> R\n  (e, b) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> S\\<^sup>* O R O S\\<^sup>*;\n        (y, z) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> S\\<^sup>* O R O S\\<^sup>*", "from bc"], ["proof (chain)\npicking this:\n  (b, c) \\<in> S\\<^sup>* O R O S\\<^sup>*", "obtain f g where fg: \"(b, f) \\<in> S\\<^sup>*\" \"(f, g) \\<in> R\" \"(g, c) \\<in> S\\<^sup>*\""], ["proof (prove)\nusing this:\n  (b, c) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<And>f g.\n        \\<lbrakk>(b, f) \\<in> S\\<^sup>*; (f, g) \\<in> R;\n         (g, c) \\<in> S\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (b, f) \\<in> S\\<^sup>*\n  (f, g) \\<in> R\n  (g, c) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> S\\<^sup>* O R O S\\<^sup>*;\n        (y, z) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> S\\<^sup>* O R O S\\<^sup>*", "from de(3) fg(1)"], ["proof (chain)\npicking this:\n  (e, b) \\<in> S\\<^sup>*\n  (b, f) \\<in> S\\<^sup>*", "have \"(e, f) \\<in> S\\<^sup>*\""], ["proof (prove)\nusing this:\n  (e, b) \\<in> S\\<^sup>*\n  (b, f) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (e, f) \\<in> S\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (e, f) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> S\\<^sup>* O R O S\\<^sup>*;\n        (y, z) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> S\\<^sup>* O R O S\\<^sup>*", "with fg(2) comm"], ["proof (chain)\npicking this:\n  (f, g) \\<in> R\n  S\\<^sup>* O R \\<subseteq> R O S\\<^sup>*\n  (e, f) \\<in> S\\<^sup>*", "have \"(e, g) \\<in> R O S\\<^sup>*\""], ["proof (prove)\nusing this:\n  (f, g) \\<in> R\n  S\\<^sup>* O R \\<subseteq> R O S\\<^sup>*\n  (e, f) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (e, g) \\<in> R O S\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  (e, g) \\<in> R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> S\\<^sup>* O R O S\\<^sup>*;\n        (y, z) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> S\\<^sup>* O R O S\\<^sup>*", "then"], ["proof (chain)\npicking this:\n  (e, g) \\<in> R O S\\<^sup>*", "obtain h where h: \"(e, h) \\<in> R\" \"(h, g) \\<in> S\\<^sup>*\""], ["proof (prove)\nusing this:\n  (e, g) \\<in> R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>(e, h) \\<in> R; (h, g) \\<in> S\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (e, h) \\<in> R\n  (h, g) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> S\\<^sup>* O R O S\\<^sup>*;\n        (y, z) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> S\\<^sup>* O R O S\\<^sup>*", "with de(2) trans"], ["proof (chain)\npicking this:\n  (d, e) \\<in> R\n  trans R\n  (e, h) \\<in> R\n  (h, g) \\<in> S\\<^sup>*", "have dh: \"(d, h) \\<in> R\""], ["proof (prove)\nusing this:\n  (d, e) \\<in> R\n  trans R\n  (e, h) \\<in> R\n  (h, g) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (d, h) \\<in> R", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (d, e) \\<in> R\n  \\<forall>x y z.\n     (x, y) \\<in> R \\<longrightarrow>\n     (y, z) \\<in> R \\<longrightarrow> (x, z) \\<in> R\n  (e, h) \\<in> R\n  (h, g) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (d, h) \\<in> R", "by blast"], ["proof (state)\nthis:\n  (d, h) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> S\\<^sup>* O R O S\\<^sup>*;\n        (y, z) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> S\\<^sup>* O R O S\\<^sup>*", "from fg(3) h(2)"], ["proof (chain)\npicking this:\n  (g, c) \\<in> S\\<^sup>*\n  (h, g) \\<in> S\\<^sup>*", "have \"(h, c) \\<in> S\\<^sup>*\""], ["proof (prove)\nusing this:\n  (g, c) \\<in> S\\<^sup>*\n  (h, g) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (h, c) \\<in> S\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (h, c) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> S\\<^sup>* O R O S\\<^sup>*;\n        (y, z) \\<in> S\\<^sup>* O R O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> S\\<^sup>* O R O S\\<^sup>*", "with de(1) dh(1)"], ["proof (chain)\npicking this:\n  (a, d) \\<in> S\\<^sup>*\n  (d, h) \\<in> R\n  (h, c) \\<in> S\\<^sup>*", "show \"(a, c) \\<in> S\\<^sup>* O R O S\\<^sup>*\""], ["proof (prove)\nusing this:\n  (a, d) \\<in> S\\<^sup>*\n  (d, h) \\<in> R\n  (h, c) \\<in> S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (a, c) \\<in> S\\<^sup>* O R O S\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (a, c) \\<in> S\\<^sup>* O R O S\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma relative_ending: (* general version of non_strict_ending *)\n  assumes chain: \"chain (R \\<union> S) t\"\n    and t0: \"t 0 \\<in> X\"\n    and SN: \"SN_on (relto R S) X\"\n  shows \"\\<exists>j. \\<forall>i\\<ge>j. (t i, t (Suc i)) \\<in> S - R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j. \\<forall>i\\<ge>j. (t i, t (Suc i)) \\<in> S - R", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>j.\n       \\<forall>i\\<ge>j. (t i, t (Suc i)) \\<in> S - R \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<nexists>j. \\<forall>i\\<ge>j. (t i, t (Suc i)) \\<in> S - R\n\ngoal (1 subgoal):\n 1. \\<nexists>j.\n       \\<forall>i\\<ge>j. (t i, t (Suc i)) \\<in> S - R \\<Longrightarrow>\n    False", "with chain"], ["proof (chain)\npicking this:\n  \\<forall>i. (t i, t (Suc i)) \\<in> R \\<union> S\n  \\<nexists>j. \\<forall>i\\<ge>j. (t i, t (Suc i)) \\<in> S - R", "have \"\\<forall>i. \\<exists>j. j \\<ge> i \\<and> (t j, t (Suc j)) \\<in> R\""], ["proof (prove)\nusing this:\n  \\<forall>i. (t i, t (Suc i)) \\<in> R \\<union> S\n  \\<nexists>j. \\<forall>i\\<ge>j. (t i, t (Suc i)) \\<in> S - R\n\ngoal (1 subgoal):\n 1. \\<forall>i. \\<exists>j\\<ge>i. (t j, t (Suc j)) \\<in> R", "by blast"], ["proof (state)\nthis:\n  \\<forall>i. \\<exists>j\\<ge>i. (t j, t (Suc j)) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<nexists>j.\n       \\<forall>i\\<ge>j. (t i, t (Suc i)) \\<in> S - R \\<Longrightarrow>\n    False", "from choice [OF this]"], ["proof (chain)\npicking this:\n  \\<exists>f.\n     \\<forall>x. x \\<le> f x \\<and> (t (f x), t (Suc (f x))) \\<in> R", "obtain f where R_steps: \"\\<forall>i. i \\<le> f i \\<and> (t (f i), t (Suc (f i))) \\<in> R\""], ["proof (prove)\nusing this:\n  \\<exists>f.\n     \\<forall>x. x \\<le> f x \\<and> (t (f x), t (Suc (f x))) \\<in> R\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<forall>i.\n           i \\<le> f i \\<and>\n           (t (f i), t (Suc (f i))) \\<in> R \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  \\<forall>i. i \\<le> f i \\<and> (t (f i), t (Suc (f i))) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<nexists>j.\n       \\<forall>i\\<ge>j. (t i, t (Suc i)) \\<in> S - R \\<Longrightarrow>\n    False", "let ?t = \"\\<lambda>i. t (((Suc \\<circ> f) ^^ i) 0)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>j.\n       \\<forall>i\\<ge>j. (t i, t (Suc i)) \\<in> S - R \\<Longrightarrow>\n    False", "have \"\\<forall>i. (t i, t (Suc (f i))) \\<in> (relto R S)\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (t i, t (Suc (f i))) \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. (t i, t (Suc (f i))) \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. (t i, t (Suc (f i))) \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+", "from R_steps"], ["proof (chain)\npicking this:\n  \\<forall>i. i \\<le> f i \\<and> (t (f i), t (Suc (f i))) \\<in> R", "have leq: \"i\\<le>f i\" and step: \"(t(f i), t(Suc(f i))) \\<in> R\""], ["proof (prove)\nusing this:\n  \\<forall>i. i \\<le> f i \\<and> (t (f i), t (Suc (f i))) \\<in> R\n\ngoal (1 subgoal):\n 1. i \\<le> f i &&& (t (f i), t (Suc (f i))) \\<in> R", "by auto"], ["proof (state)\nthis:\n  i \\<le> f i\n  (t (f i), t (Suc (f i))) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<And>i. (t i, t (Suc (f i))) \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+", "from chain_imp_rtrancl [OF chain leq]"], ["proof (chain)\npicking this:\n  (t i, t (f i)) \\<in> (R \\<union> S)\\<^sup>*", "have \"(t i, t(f i)) \\<in> (R \\<union> S)\\<^sup>*\""], ["proof (prove)\nusing this:\n  (t i, t (f i)) \\<in> (R \\<union> S)\\<^sup>*\n\ngoal (1 subgoal):\n 1. (t i, t (f i)) \\<in> (R \\<union> S)\\<^sup>*", "."], ["proof (state)\nthis:\n  (t i, t (f i)) \\<in> (R \\<union> S)\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>i. (t i, t (Suc (f i))) \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+", "with step"], ["proof (chain)\npicking this:\n  (t (f i), t (Suc (f i))) \\<in> R\n  (t i, t (f i)) \\<in> (R \\<union> S)\\<^sup>*", "have \"(t i, t(Suc(f i))) \\<in> (R \\<union> S)\\<^sup>* O R\""], ["proof (prove)\nusing this:\n  (t (f i), t (Suc (f i))) \\<in> R\n  (t i, t (f i)) \\<in> (R \\<union> S)\\<^sup>*\n\ngoal (1 subgoal):\n 1. (t i, t (Suc (f i))) \\<in> (R \\<union> S)\\<^sup>* O R", "by auto"], ["proof (state)\nthis:\n  (t i, t (Suc (f i))) \\<in> (R \\<union> S)\\<^sup>* O R\n\ngoal (1 subgoal):\n 1. \\<And>i. (t i, t (Suc (f i))) \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+", "then"], ["proof (chain)\npicking this:\n  (t i, t (Suc (f i))) \\<in> (R \\<union> S)\\<^sup>* O R", "show \"(t i, t(Suc(f i))) \\<in> (relto R S)\\<^sup>+\""], ["proof (prove)\nusing this:\n  (t i, t (Suc (f i))) \\<in> (R \\<union> S)\\<^sup>* O R\n\ngoal (1 subgoal):\n 1. (t i, t (Suc (f i))) \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+", "by regexp"], ["proof (state)\nthis:\n  (t i, t (Suc (f i))) \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i. (t i, t (Suc (f i))) \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<nexists>j.\n       \\<forall>i\\<ge>j. (t i, t (Suc i)) \\<in> S - R \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<forall>i. (t i, t (Suc (f i))) \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+", "have \"chain ((relto R S)\\<^sup>+) ?t\""], ["proof (prove)\nusing this:\n  \\<forall>i. (t i, t (Suc (f i))) \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (t (((Suc \\<circ> f) ^^ i) 0), t (((Suc \\<circ> f) ^^ Suc i) 0))\n       \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+", "by simp"], ["proof (state)\nthis:\n  \\<forall>i.\n     (t (((Suc \\<circ> f) ^^ i) 0), t (((Suc \\<circ> f) ^^ Suc i) 0))\n     \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<nexists>j.\n       \\<forall>i\\<ge>j. (t i, t (Suc i)) \\<in> S - R \\<Longrightarrow>\n    False", "with t0"], ["proof (chain)\npicking this:\n  t 0 \\<in> X\n  \\<forall>i.\n     (t (((Suc \\<circ> f) ^^ i) 0), t (((Suc \\<circ> f) ^^ Suc i) 0))\n     \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+", "have \"\\<not> SN_on ((relto R S)\\<^sup>+) X\""], ["proof (prove)\nusing this:\n  t 0 \\<in> X\n  \\<forall>i.\n     (t (((Suc \\<circ> f) ^^ i) 0), t (((Suc \\<circ> f) ^^ Suc i) 0))\n     \\<in> (S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<not> SN_on ((S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+) X", "by (unfold SN_on_def, auto intro: exI[of _ ?t])"], ["proof (state)\nthis:\n  \\<not> SN_on ((S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+) X\n\ngoal (1 subgoal):\n 1. \\<nexists>j.\n       \\<forall>i\\<ge>j. (t i, t (Suc i)) \\<in> S - R \\<Longrightarrow>\n    False", "with SN_on_trancl[OF SN]"], ["proof (chain)\npicking this:\n  SN_on ((S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+) X\n  \\<not> SN_on ((S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+) X", "show False"], ["proof (prove)\nusing this:\n  SN_on ((S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+) X\n  \\<not> SN_on ((S\\<^sup>* O R O S\\<^sup>*)\\<^sup>+) X\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>from Geser's thesis [p.32, Corollary-1], generalized for @{term SN_on}.\\<close>"], ["", "lemma SN_on_relto_Un:\n  assumes closure: \"relto (R \\<union> R') S `` X \\<subseteq> X\"\n  shows \"SN_on (relto (R \\<union> R') S) X \\<longleftrightarrow> SN_on (relto R (R' \\<union> S)) X \\<and> SN_on (relto R' S) X\"\n  (is \"?c \\<longleftrightarrow> ?a \\<and> ?b\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X =\n    (SN_on ((R' \\<union> S)\\<^sup>* O R O (R' \\<union> S)\\<^sup>*) X \\<and>\n     SN_on (S\\<^sup>* O R' O S\\<^sup>*) X)", "proof(safe)"], ["proof (state)\ngoal (3 subgoals):\n 1. SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X \\<Longrightarrow>\n    SN_on ((R' \\<union> S)\\<^sup>* O R O (R' \\<union> S)\\<^sup>*) X\n 2. SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R' O S\\<^sup>*) X\n 3. \\<lbrakk>SN_on ((R' \\<union> S)\\<^sup>* O R O (R' \\<union> S)\\<^sup>*)\n              X;\n     SN_on (S\\<^sup>* O R' O S\\<^sup>*) X\\<rbrakk>\n    \\<Longrightarrow> SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X", "assume SN: \"?a\" and SN': \"?b\""], ["proof (state)\nthis:\n  SN_on ((R' \\<union> S)\\<^sup>* O R O (R' \\<union> S)\\<^sup>*) X\n  SN_on (S\\<^sup>* O R' O S\\<^sup>*) X\n\ngoal (3 subgoals):\n 1. SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X \\<Longrightarrow>\n    SN_on ((R' \\<union> S)\\<^sup>* O R O (R' \\<union> S)\\<^sup>*) X\n 2. SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R' O S\\<^sup>*) X\n 3. \\<lbrakk>SN_on ((R' \\<union> S)\\<^sup>* O R O (R' \\<union> S)\\<^sup>*)\n              X;\n     SN_on (S\\<^sup>* O R' O S\\<^sup>*) X\\<rbrakk>\n    \\<Longrightarrow> SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X", "from SN"], ["proof (chain)\npicking this:\n  SN_on ((R' \\<union> S)\\<^sup>* O R O (R' \\<union> S)\\<^sup>*) X", "have SN: \"SN_on (relto (relto R S) (relto R' S)) X\""], ["proof (prove)\nusing this:\n  SN_on ((R' \\<union> S)\\<^sup>* O R O (R' \\<union> S)\\<^sup>*) X\n\ngoal (1 subgoal):\n 1. SN_on\n     ((S\\<^sup>* O R' O S\\<^sup>*)\\<^sup>* O\n      (S\\<^sup>* O R O S\\<^sup>*) O (S\\<^sup>* O R' O S\\<^sup>*)\\<^sup>*)\n     X", "by (rule SN_on_subset1) regexp"], ["proof (state)\nthis:\n  SN_on\n   ((S\\<^sup>* O R' O S\\<^sup>*)\\<^sup>* O\n    (S\\<^sup>* O R O S\\<^sup>*) O (S\\<^sup>* O R' O S\\<^sup>*)\\<^sup>*)\n   X\n\ngoal (3 subgoals):\n 1. SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X \\<Longrightarrow>\n    SN_on ((R' \\<union> S)\\<^sup>* O R O (R' \\<union> S)\\<^sup>*) X\n 2. SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R' O S\\<^sup>*) X\n 3. \\<lbrakk>SN_on ((R' \\<union> S)\\<^sup>* O R O (R' \\<union> S)\\<^sup>*)\n              X;\n     SN_on (S\\<^sup>* O R' O S\\<^sup>*) X\\<rbrakk>\n    \\<Longrightarrow> SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X", "show \"?c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> X;\n        \\<forall>i.\n           (f i, f (Suc i))\n           \\<in> S\\<^sup>* O (R \\<union> R') O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> X;\n        \\<forall>i.\n           (f i, f (Suc i))\n           \\<in> S\\<^sup>* O (R \\<union> R') O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "assume f0: \"f 0 \\<in> X\" and chain: \"chain (relto (R \\<union> R') S) f\""], ["proof (state)\nthis:\n  f 0 \\<in> X\n  \\<forall>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O (R \\<union> R') O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> X;\n        \\<forall>i.\n           (f i, f (Suc i))\n           \\<in> S\\<^sup>* O (R \\<union> R') O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  f 0 \\<in> X\n  \\<forall>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O (R \\<union> R') O S\\<^sup>*", "have \"chain (relto R S \\<union> relto R' S) f\""], ["proof (prove)\nusing this:\n  f 0 \\<in> X\n  \\<forall>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O (R \\<union> R') O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (f i, f (Suc i))\n       \\<in> S\\<^sup>* O R O S\\<^sup>* \\<union> S\\<^sup>* O R' O S\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  \\<forall>i.\n     (f i, f (Suc i))\n     \\<in> S\\<^sup>* O R O S\\<^sup>* \\<union> S\\<^sup>* O R' O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> X;\n        \\<forall>i.\n           (f i, f (Suc i))\n           \\<in> S\\<^sup>* O (R \\<union> R') O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "from relative_ending[OF this f0 SN]"], ["proof (chain)\npicking this:\n  \\<exists>j.\n     \\<forall>i\\<ge>j.\n        (f i, f (Suc i))\n        \\<in> S\\<^sup>* O R' O S\\<^sup>* - S\\<^sup>* O R O S\\<^sup>*", "have \"\\<exists> j. \\<forall> i \\<ge> j. (f i, f (Suc i)) \\<in> relto R' S - relto R S\""], ["proof (prove)\nusing this:\n  \\<exists>j.\n     \\<forall>i\\<ge>j.\n        (f i, f (Suc i))\n        \\<in> S\\<^sup>* O R' O S\\<^sup>* - S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<exists>j.\n       \\<forall>i\\<ge>j.\n          (f i, f (Suc i))\n          \\<in> S\\<^sup>* O R' O S\\<^sup>* - S\\<^sup>* O R O S\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  \\<exists>j.\n     \\<forall>i\\<ge>j.\n        (f i, f (Suc i))\n        \\<in> S\\<^sup>* O R' O S\\<^sup>* - S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> X;\n        \\<forall>i.\n           (f i, f (Suc i))\n           \\<in> S\\<^sup>* O (R \\<union> R') O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>j.\n     \\<forall>i\\<ge>j.\n        (f i, f (Suc i))\n        \\<in> S\\<^sup>* O R' O S\\<^sup>* - S\\<^sup>* O R O S\\<^sup>*", "obtain j where \"\\<forall>i \\<ge> j. (f i, f (Suc i)) \\<in> relto R' S\""], ["proof (prove)\nusing this:\n  \\<exists>j.\n     \\<forall>i\\<ge>j.\n        (f i, f (Suc i))\n        \\<in> S\\<^sup>* O R' O S\\<^sup>* - S\\<^sup>* O R O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<forall>i\\<ge>j.\n           (f i, f (Suc i))\n           \\<in> S\\<^sup>* O R' O S\\<^sup>* \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<ge>j. (f i, f (Suc i)) \\<in> S\\<^sup>* O R' O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> X;\n        \\<forall>i.\n           (f i, f (Suc i))\n           \\<in> S\\<^sup>* O (R \\<union> R') O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>i\\<ge>j. (f i, f (Suc i)) \\<in> S\\<^sup>* O R' O S\\<^sup>*", "have \"chain (relto R' S) (shift f j)\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<ge>j. (f i, f (Suc i)) \\<in> S\\<^sup>* O R' O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (shift f j i, shift f j (Suc i)) \\<in> S\\<^sup>* O R' O S\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  \\<forall>i.\n     (shift f j i, shift f j (Suc i)) \\<in> S\\<^sup>* O R' O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> X;\n        \\<forall>i.\n           (f i, f (Suc i))\n           \\<in> S\\<^sup>* O (R \\<union> R') O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<forall>i.\n     (shift f j i, shift f j (Suc i)) \\<in> S\\<^sup>* O R' O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> X;\n        \\<forall>i.\n           (f i, f (Suc i))\n           \\<in> S\\<^sup>* O (R \\<union> R') O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "have \"f j \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f j \\<in> X", "proof(induct j)"], ["proof (state)\ngoal (2 subgoals):\n 1. f 0 \\<in> X\n 2. \\<And>j. f j \\<in> X \\<Longrightarrow> f (Suc j) \\<in> X", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. f 0 \\<in> X\n 2. \\<And>j. f j \\<in> X \\<Longrightarrow> f (Suc j) \\<in> X", "from f0"], ["proof (chain)\npicking this:\n  f 0 \\<in> X", "show ?case"], ["proof (prove)\nusing this:\n  f 0 \\<in> X\n\ngoal (1 subgoal):\n 1. f 0 \\<in> X", "by simp"], ["proof (state)\nthis:\n  f 0 \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>j. f j \\<in> X \\<Longrightarrow> f (Suc j) \\<in> X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j. f j \\<in> X \\<Longrightarrow> f (Suc j) \\<in> X", "case (Suc j)"], ["proof (state)\nthis:\n  f j \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>j. f j \\<in> X \\<Longrightarrow> f (Suc j) \\<in> X", "let ?s = \"(f j, f (Suc j))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j. f j \\<in> X \\<Longrightarrow> f (Suc j) \\<in> X", "from chain"], ["proof (chain)\npicking this:\n  \\<forall>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O (R \\<union> R') O S\\<^sup>*", "have \"?s \\<in> relto (R \\<union> R') S\""], ["proof (prove)\nusing this:\n  \\<forall>i. (f i, f (Suc i)) \\<in> S\\<^sup>* O (R \\<union> R') O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. (f j, f (Suc j)) \\<in> S\\<^sup>* O (R \\<union> R') O S\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (f j, f (Suc j)) \\<in> S\\<^sup>* O (R \\<union> R') O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>j. f j \\<in> X \\<Longrightarrow> f (Suc j) \\<in> X", "with Image_closed_trancl[OF closure] Suc"], ["proof (chain)\npicking this:\n  (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*)\\<^sup>* `` X = X\n  f j \\<in> X\n  (f j, f (Suc j)) \\<in> S\\<^sup>* O (R \\<union> R') O S\\<^sup>*", "show \"f (Suc j) \\<in> X\""], ["proof (prove)\nusing this:\n  (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*)\\<^sup>* `` X = X\n  f j \\<in> X\n  (f j, f (Suc j)) \\<in> S\\<^sup>* O (R \\<union> R') O S\\<^sup>*\n\ngoal (1 subgoal):\n 1. f (Suc j) \\<in> X", "by blast"], ["proof (state)\nthis:\n  f (Suc j) \\<in> X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f j \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> X;\n        \\<forall>i.\n           (f i, f (Suc i))\n           \\<in> S\\<^sup>* O (R \\<union> R') O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  f j \\<in> X", "have \"shift f j 0 \\<in> X\""], ["proof (prove)\nusing this:\n  f j \\<in> X\n\ngoal (1 subgoal):\n 1. shift f j 0 \\<in> X", "by auto"], ["proof (state)\nthis:\n  shift f j 0 \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> X;\n        \\<forall>i.\n           (f i, f (Suc i))\n           \\<in> S\\<^sup>* O (R \\<union> R') O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     (shift f j i, shift f j (Suc i)) \\<in> S\\<^sup>* O R' O S\\<^sup>*\n  shift f j 0 \\<in> X", "have \"\\<not> SN_on (relto R' S) X\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (shift f j i, shift f j (Suc i)) \\<in> S\\<^sup>* O R' O S\\<^sup>*\n  shift f j 0 \\<in> X\n\ngoal (1 subgoal):\n 1. \\<not> SN_on (S\\<^sup>* O R' O S\\<^sup>*) X", "by (intro not_SN_onI)"], ["proof (state)\nthis:\n  \\<not> SN_on (S\\<^sup>* O R' O S\\<^sup>*) X\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f 0 \\<in> X;\n        \\<forall>i.\n           (f i, f (Suc i))\n           \\<in> S\\<^sup>* O (R \\<union> R') O S\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> False", "with SN'"], ["proof (chain)\npicking this:\n  SN_on (S\\<^sup>* O R' O S\\<^sup>*) X\n  \\<not> SN_on (S\\<^sup>* O R' O S\\<^sup>*) X", "show False"], ["proof (prove)\nusing this:\n  SN_on (S\\<^sup>* O R' O S\\<^sup>*) X\n  \\<not> SN_on (S\\<^sup>* O R' O S\\<^sup>*) X\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X\n\ngoal (2 subgoals):\n 1. SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X \\<Longrightarrow>\n    SN_on ((R' \\<union> S)\\<^sup>* O R O (R' \\<union> S)\\<^sup>*) X\n 2. SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R' O S\\<^sup>*) X", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X \\<Longrightarrow>\n    SN_on ((R' \\<union> S)\\<^sup>* O R O (R' \\<union> S)\\<^sup>*) X\n 2. SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R' O S\\<^sup>*) X", "assume SN: \"?c\""], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X\n\ngoal (2 subgoals):\n 1. SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X \\<Longrightarrow>\n    SN_on ((R' \\<union> S)\\<^sup>* O R O (R' \\<union> S)\\<^sup>*) X\n 2. SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X \\<Longrightarrow>\n    SN_on (S\\<^sup>* O R' O S\\<^sup>*) X", "then"], ["proof (chain)\npicking this:\n  SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X", "show \"?b\""], ["proof (prove)\nusing this:\n  SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O R' O S\\<^sup>*) X", "by (rule SN_on_subset1, auto)"], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R' O S\\<^sup>*) X\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X \\<Longrightarrow>\n    SN_on ((R' \\<union> S)\\<^sup>* O R O (R' \\<union> S)\\<^sup>*) X", "moreover"], ["proof (state)\nthis:\n  SN_on (S\\<^sup>* O R' O S\\<^sup>*) X\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X \\<Longrightarrow>\n    SN_on ((R' \\<union> S)\\<^sup>* O R O (R' \\<union> S)\\<^sup>*) X", "from SN"], ["proof (chain)\npicking this:\n  SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X", "have \"SN_on ((relto (R \\<union> R') S)\\<^sup>+) X\""], ["proof (prove)\nusing this:\n  SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X\n\ngoal (1 subgoal):\n 1. SN_on ((S\\<^sup>* O (R \\<union> R') O S\\<^sup>*)\\<^sup>+) X", "by (unfold SN_on_trancl_SN_on_conv)"], ["proof (state)\nthis:\n  SN_on ((S\\<^sup>* O (R \\<union> R') O S\\<^sup>*)\\<^sup>+) X\n\ngoal (1 subgoal):\n 1. SN_on (S\\<^sup>* O (R \\<union> R') O S\\<^sup>*) X \\<Longrightarrow>\n    SN_on ((R' \\<union> S)\\<^sup>* O R O (R' \\<union> S)\\<^sup>*) X", "then"], ["proof (chain)\npicking this:\n  SN_on ((S\\<^sup>* O (R \\<union> R') O S\\<^sup>*)\\<^sup>+) X", "show \"?a\""], ["proof (prove)\nusing this:\n  SN_on ((S\\<^sup>* O (R \\<union> R') O S\\<^sup>*)\\<^sup>+) X\n\ngoal (1 subgoal):\n 1. SN_on ((R' \\<union> S)\\<^sup>* O R O (R' \\<union> S)\\<^sup>*) X", "by (rule SN_on_subset1) regexp"], ["proof (state)\nthis:\n  SN_on ((R' \\<union> S)\\<^sup>* O R O (R' \\<union> S)\\<^sup>*) X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SN_on_Un: \"(R \\<union> R')``X \\<subseteq> X \\<Longrightarrow> SN_on (R \\<union> R') X \\<longleftrightarrow> SN_on (relto R R') X \\<and> SN_on R' X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (R \\<union> R') `` X \\<subseteq> X \\<Longrightarrow>\n    SN_on (R \\<union> R') X =\n    (SN_on (R'\\<^sup>* O R O R'\\<^sup>*) X \\<and> SN_on R' X)", "using SN_on_relto_Un[of \"{}\"]"], ["proof (prove)\nusing this:\n  ({}\\<^sup>* O (?R \\<union> ?R') O {}\\<^sup>*) `` ?X\n  \\<subseteq> ?X \\<Longrightarrow>\n  SN_on ({}\\<^sup>* O (?R \\<union> ?R') O {}\\<^sup>*) ?X =\n  (SN_on ((?R' \\<union> {})\\<^sup>* O ?R O (?R' \\<union> {})\\<^sup>*)\n    ?X \\<and>\n   SN_on ({}\\<^sup>* O ?R' O {}\\<^sup>*) ?X)\n\ngoal (1 subgoal):\n 1. (R \\<union> R') `` X \\<subseteq> X \\<Longrightarrow>\n    SN_on (R \\<union> R') X =\n    (SN_on (R'\\<^sup>* O R O R'\\<^sup>*) X \\<and> SN_on R' X)", "by simp"], ["", "end"]]}