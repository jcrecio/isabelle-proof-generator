{"file_name": "/home/qj213/afp-2021-10-22/thys/Abstract-Rewriting/SN_Order_Carrier.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Abstract-Rewriting", "problem_names": ["lemma non_inf_delta_gt: assumes delta: \"\\<delta> > 0\"\n  shows \"non_inf {(a,b) . delta_gt \\<delta> a b}\" (is \"non_inf ?r\")", "lemma delta_gt_SN: assumes dpos: \"\\<delta> > 0\" shows \"SN {(x,y). 0 \\<le> y \\<and> delta_gt \\<delta> x y}\"", "lemma delta_interpretation: assumes dpos: \"\\<delta> > 0\" and default: \"\\<delta> \\<le> def\"\n  shows \"SN_strict_mono_ordered_semiring_1 def (delta_gt \\<delta>) delta_mono\"", "lemma delta_poly: assumes dpos: \"\\<delta> > 0\" and default: \"\\<delta> \\<le> def\"\n  shows \"poly_order_carrier def (delta_gt \\<delta>) (1 \\<le> \\<delta>) False\"", "lemma delta_minimal_delta: assumes \"\\<And> x y. (x,y) \\<in> set xys \\<Longrightarrow> x > y\"\n  shows \"\\<exists> \\<delta> > 0. \\<forall> x y. (x,y) \\<in> set xys \\<longrightarrow> delta_gt \\<delta> x y\"", "lemma non_inf_int_gt: \"non_inf {(a,b :: int) . a > b}\" (is \"non_inf ?r\")", "lemma arctic_delta_interpretation: assumes dpos: \"\\<delta> > 0\" shows \"SN_both_mono_ordered_semiring_1 1 (gt_arctic_delta \\<delta>) pos_arctic_delta\""], "translations": [["", "lemma non_inf_delta_gt: assumes delta: \"\\<delta> > 0\"\n  shows \"non_inf {(a,b) . delta_gt \\<delta> a b}\" (is \"non_inf ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. non_inf {(a, b). delta_gt \\<delta> a b}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "let ?gt = \"delta_gt \\<delta>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "fix a :: 'a and f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "assume \"\\<And> i. (f i, f (Suc i)) \\<in> ?r\""], ["proof (state)\nthis:\n  (f ?i, f (Suc ?i)) \\<in> {(a, b). delta_gt \\<delta> a b}\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "hence gt: \"\\<And> i. ?gt (f i) (f (Suc i))\""], ["proof (prove)\nusing this:\n  (f ?i, f (Suc ?i)) \\<in> {(a, b). delta_gt \\<delta> a b}\n\ngoal (1 subgoal):\n 1. \\<And>i. delta_gt \\<delta> (f i) (f (Suc i))", "by simp"], ["proof (state)\nthis:\n  delta_gt \\<delta> (f ?i) (f (Suc ?i))\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "{"], ["proof (state)\nthis:\n  delta_gt \\<delta> (f ?i) (f (Suc ?i))\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "have \"f i \\<le> f 0 - \\<delta> * of_nat i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i \\<le> f 0 - \\<delta> * of_nat i", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. f 0 \\<le> f 0 - \\<delta> * of_nat 0\n 2. \\<And>i.\n       f i \\<le> f 0 - \\<delta> * of_nat i \\<Longrightarrow>\n       f (Suc i) \\<le> f 0 - \\<delta> * of_nat (Suc i)", "case (Suc i)"], ["proof (state)\nthis:\n  f i \\<le> f 0 - \\<delta> * of_nat i\n\ngoal (2 subgoals):\n 1. f 0 \\<le> f 0 - \\<delta> * of_nat 0\n 2. \\<And>i.\n       f i \\<le> f 0 - \\<delta> * of_nat i \\<Longrightarrow>\n       f (Suc i) \\<le> f 0 - \\<delta> * of_nat (Suc i)", "thus ?case"], ["proof (prove)\nusing this:\n  f i \\<le> f 0 - \\<delta> * of_nat i\n\ngoal (1 subgoal):\n 1. f (Suc i) \\<le> f 0 - \\<delta> * of_nat (Suc i)", "using gt[of i, unfolded delta_gt_def]"], ["proof (prove)\nusing this:\n  f i \\<le> f 0 - \\<delta> * of_nat i\n  \\<delta> \\<le> f i - f (Suc i)\n\ngoal (1 subgoal):\n 1. f (Suc i) \\<le> f 0 - \\<delta> * of_nat (Suc i)", "by (auto simp: field_simps)"], ["proof (state)\nthis:\n  f (Suc i) \\<le> f 0 - \\<delta> * of_nat (Suc i)\n\ngoal (1 subgoal):\n 1. f 0 \\<le> f 0 - \\<delta> * of_nat 0", "qed simp"], ["proof (state)\nthis:\n  f i \\<le> f 0 - \\<delta> * of_nat i\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "}"], ["proof (state)\nthis:\n  f ?i2 \\<le> f 0 - \\<delta> * of_nat ?i2\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "note fi = this"], ["proof (state)\nthis:\n  f ?i2 \\<le> f 0 - \\<delta> * of_nat ?i2\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "{"], ["proof (state)\nthis:\n  f ?i2 \\<le> f 0 - \\<delta> * of_nat ?i2\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "fix r :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "have \"of_nat (nat (ceiling r)) \\<ge> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<le> of_nat (nat \\<lceil>r\\<rceil>)", "by (metis ceiling_le_zero le_of_int_ceiling less_le_not_le nat_0_iff not_less of_nat_0 of_nat_nat)"], ["proof (state)\nthis:\n  r \\<le> of_nat (nat \\<lceil>r\\<rceil>)\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "}"], ["proof (state)\nthis:\n  ?r2 \\<le> of_nat (nat \\<lceil>?r2\\<rceil>)\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "note ceil_elim = this"], ["proof (state)\nthis:\n  ?r2 \\<le> of_nat (nat \\<lceil>?r2\\<rceil>)\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "define i where \"i = nat (ceiling ((f 0 - a) / \\<delta>))\""], ["proof (state)\nthis:\n  i = nat \\<lceil>(f 0 - a) / \\<delta>\\<rceil>\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "from fi[of i]"], ["proof (chain)\npicking this:\n  f i \\<le> f 0 - \\<delta> * of_nat i", "have \"f i - f 0 \\<le> - \\<delta> * of_nat (nat (ceiling ((f 0 - a) / \\<delta>)))\""], ["proof (prove)\nusing this:\n  f i \\<le> f 0 - \\<delta> * of_nat i\n\ngoal (1 subgoal):\n 1. f i - f 0\n    \\<le> - \\<delta> * of_nat (nat \\<lceil>(f 0 - a) / \\<delta>\\<rceil>)", "unfolding i_def"], ["proof (prove)\nusing this:\n  f (nat \\<lceil>(f 0 - a) / \\<delta>\\<rceil>)\n  \\<le> f 0 - \\<delta> * of_nat (nat \\<lceil>(f 0 - a) / \\<delta>\\<rceil>)\n\ngoal (1 subgoal):\n 1. f (nat \\<lceil>(f 0 - a) / \\<delta>\\<rceil>) - f 0\n    \\<le> - \\<delta> * of_nat (nat \\<lceil>(f 0 - a) / \\<delta>\\<rceil>)", "by simp"], ["proof (state)\nthis:\n  f i - f 0\n  \\<le> - \\<delta> * of_nat (nat \\<lceil>(f 0 - a) / \\<delta>\\<rceil>)\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "also"], ["proof (state)\nthis:\n  f i - f 0\n  \\<le> - \\<delta> * of_nat (nat \\<lceil>(f 0 - a) / \\<delta>\\<rceil>)\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "have \"\\<dots> \\<le> - \\<delta> * ((f 0 - a) / \\<delta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - \\<delta> * of_nat (nat \\<lceil>(f 0 - a) / \\<delta>\\<rceil>)\n    \\<le> - \\<delta> * ((f 0 - a) / \\<delta>)", "using ceil_elim[of \"(f 0 - a) / \\<delta>\"] delta"], ["proof (prove)\nusing this:\n  (f 0 - a) / \\<delta>\n  \\<le> of_nat (nat \\<lceil>(f 0 - a) / \\<delta>\\<rceil>)\n  (0::'a) < \\<delta>\n\ngoal (1 subgoal):\n 1. - \\<delta> * of_nat (nat \\<lceil>(f 0 - a) / \\<delta>\\<rceil>)\n    \\<le> - \\<delta> * ((f 0 - a) / \\<delta>)", "by (metis le_imp_neg_le minus_mult_commute mult_le_cancel_left_pos)"], ["proof (state)\nthis:\n  - \\<delta> * of_nat (nat \\<lceil>(f 0 - a) / \\<delta>\\<rceil>)\n  \\<le> - \\<delta> * ((f 0 - a) / \\<delta>)\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "also"], ["proof (state)\nthis:\n  - \\<delta> * of_nat (nat \\<lceil>(f 0 - a) / \\<delta>\\<rceil>)\n  \\<le> - \\<delta> * ((f 0 - a) / \\<delta>)\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "have \"\\<dots> = - f 0 + a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - \\<delta> * ((f 0 - a) / \\<delta>) = - f 0 + a", "using delta"], ["proof (prove)\nusing this:\n  (0::'a) < \\<delta>\n\ngoal (1 subgoal):\n 1. - \\<delta> * ((f 0 - a) / \\<delta>) = - f 0 + a", "by auto"], ["proof (state)\nthis:\n  - \\<delta> * ((f 0 - a) / \\<delta>) = - f 0 + a\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "also"], ["proof (state)\nthis:\n  - \\<delta> * ((f 0 - a) / \\<delta>) = - f 0 + a\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "have \"\\<dots> < - f 0 + a + \\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - f 0 + a < - f 0 + a + \\<delta>", "using delta"], ["proof (prove)\nusing this:\n  (0::'a) < \\<delta>\n\ngoal (1 subgoal):\n 1. - f 0 + a < - f 0 + a + \\<delta>", "by auto"], ["proof (state)\nthis:\n  - f 0 + a < - f 0 + a + \\<delta>\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "finally"], ["proof (chain)\npicking this:\n  f i - f 0 < - f 0 + a + \\<delta>", "have \"\\<not> ?gt (f i) a\""], ["proof (prove)\nusing this:\n  f i - f 0 < - f 0 + a + \\<delta>\n\ngoal (1 subgoal):\n 1. \\<not> delta_gt \\<delta> (f i) a", "unfolding delta_gt_def"], ["proof (prove)\nusing this:\n  f i - f 0 < - f 0 + a + \\<delta>\n\ngoal (1 subgoal):\n 1. \\<not> \\<delta> \\<le> f i - a", "by arith"], ["proof (state)\nthis:\n  \\<not> delta_gt \\<delta> (f i) a\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       (\\<And>i.\n           (f i, f (Suc i))\n           \\<in> {(a, b). delta_gt \\<delta> a b}) \\<Longrightarrow>\n       \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "thus \"\\<exists> i. (f i, a) \\<notin> ?r\""], ["proof (prove)\nusing this:\n  \\<not> delta_gt \\<delta> (f i) a\n\ngoal (1 subgoal):\n 1. \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}", "by blast"], ["proof (state)\nthis:\n  \\<exists>i. (f i, a) \\<notin> {(a, b). delta_gt \\<delta> a b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma delta_gt_SN: assumes dpos: \"\\<delta> > 0\" shows \"SN {(x,y). 0 \\<le> y \\<and> delta_gt \\<delta> x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN {(x, y). (0::'a) \\<le> y \\<and> delta_gt \\<delta> x y}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN {(x, y). (0::'a) \\<le> y \\<and> delta_gt \\<delta> x y}", "from non_inf_imp_SN_bound[OF non_inf_delta_gt[OF dpos], of \"- \\<delta>\"]"], ["proof (chain)\npicking this:\n  SN {(a, b).\n      (b, - \\<delta>) \\<in> {(a, b). delta_gt \\<delta> a b} \\<and>\n      (a, b) \\<in> {(a, b). delta_gt \\<delta> a b}}", "show ?thesis"], ["proof (prove)\nusing this:\n  SN {(a, b).\n      (b, - \\<delta>) \\<in> {(a, b). delta_gt \\<delta> a b} \\<and>\n      (a, b) \\<in> {(a, b). delta_gt \\<delta> a b}}\n\ngoal (1 subgoal):\n 1. SN {(x, y). (0::'a) \\<le> y \\<and> delta_gt \\<delta> x y}", "unfolding delta_gt_def"], ["proof (prove)\nusing this:\n  SN {(a, b).\n      (b, - \\<delta>) \\<in> {(a, b). \\<delta> \\<le> a - b} \\<and>\n      (a, b) \\<in> {(a, b). \\<delta> \\<le> a - b}}\n\ngoal (1 subgoal):\n 1. SN {(x, y). (0::'a) \\<le> y \\<and> \\<delta> \\<le> x - y}", "by auto"], ["proof (state)\nthis:\n  SN {(x, y). (0::'a) \\<le> y \\<and> delta_gt \\<delta> x y}\n\ngoal:\nNo subgoals!", "qed"], ["", "definition delta_mono :: \"'a :: floor_ceiling \\<Rightarrow> bool\" where \"delta_mono x \\<equiv> x \\<ge> 1\""], ["", "subclass (in floor_ceiling) large_ordered_semiring_1"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.large_ordered_semiring_1 (*) (1::'a) (+) (0::'a) (\\<le>)", "proof"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>x. x \\<le> x\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 3. \\<And>x y. max x y = max y x\n 4. \\<And>x y. x \\<le> max x y\n 5. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 6. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 7. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 8. \\<And>z y x.\n       \\<lbrakk>(0::'a) \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 9. \\<And>x z y.\n       \\<lbrakk>(0::'a) \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 10. \\<And>y x z.\n        \\<lbrakk>y \\<le> x; z \\<le> (0::'a)\\<rbrakk>\n        \\<Longrightarrow> x * z \\<le> y * z\nA total of 12 subgoals...", "fix x :: 'a"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>x. x \\<le> x\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 3. \\<And>x y. max x y = max y x\n 4. \\<And>x y. x \\<le> max x y\n 5. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 6. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 7. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 8. \\<And>z y x.\n       \\<lbrakk>(0::'a) \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 9. \\<And>x z y.\n       \\<lbrakk>(0::'a) \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 10. \\<And>y x z.\n        \\<lbrakk>y \\<le> x; z \\<le> (0::'a)\\<rbrakk>\n        \\<Longrightarrow> x * z \\<le> y * z\nA total of 12 subgoals...", "from ex_le_of_int[of x]"], ["proof (chain)\npicking this:\n  \\<exists>z. x \\<le> of_int z", "obtain z where x: \"x \\<le> of_int z\""], ["proof (prove)\nusing this:\n  \\<exists>z. x \\<le> of_int z\n\ngoal (1 subgoal):\n 1. (\\<And>z. x \\<le> of_int z \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<le> of_int z\n\ngoal (12 subgoals):\n 1. \\<And>x. x \\<le> x\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 3. \\<And>x y. max x y = max y x\n 4. \\<And>x y. x \\<le> max x y\n 5. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 6. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 7. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 8. \\<And>z y x.\n       \\<lbrakk>(0::'a) \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 9. \\<And>x z y.\n       \\<lbrakk>(0::'a) \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 10. \\<And>y x z.\n        \\<lbrakk>y \\<le> x; z \\<le> (0::'a)\\<rbrakk>\n        \\<Longrightarrow> x * z \\<le> y * z\nA total of 12 subgoals...", "have \"z \\<le> int (nat z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<le> int (nat z)", "by auto"], ["proof (state)\nthis:\n  z \\<le> int (nat z)\n\ngoal (12 subgoals):\n 1. \\<And>x. x \\<le> x\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 3. \\<And>x y. max x y = max y x\n 4. \\<And>x y. x \\<le> max x y\n 5. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 6. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 7. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 8. \\<And>z y x.\n       \\<lbrakk>(0::'a) \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 9. \\<And>x z y.\n       \\<lbrakk>(0::'a) \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 10. \\<And>y x z.\n        \\<lbrakk>y \\<le> x; z \\<le> (0::'a)\\<rbrakk>\n        \\<Longrightarrow> x * z \\<le> y * z\nA total of 12 subgoals...", "with x"], ["proof (chain)\npicking this:\n  x \\<le> of_int z\n  z \\<le> int (nat z)", "have \"x \\<le> of_int (int (nat z))\""], ["proof (prove)\nusing this:\n  x \\<le> of_int z\n  z \\<le> int (nat z)\n\ngoal (1 subgoal):\n 1. x \\<le> of_int (int (nat z))", "by (metis (full_types) le_cases of_int_0_le_iff of_int_of_nat_eq of_nat_0_le_iff of_nat_nat order_trans)"], ["proof (state)\nthis:\n  x \\<le> of_int (int (nat z))\n\ngoal (12 subgoals):\n 1. \\<And>x. x \\<le> x\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 3. \\<And>x y. max x y = max y x\n 4. \\<And>x y. x \\<le> max x y\n 5. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 6. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 7. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 8. \\<And>z y x.\n       \\<lbrakk>(0::'a) \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 9. \\<And>x z y.\n       \\<lbrakk>(0::'a) \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 10. \\<And>y x z.\n        \\<lbrakk>y \\<le> x; z \\<le> (0::'a)\\<rbrakk>\n        \\<Longrightarrow> x * z \\<le> y * z\nA total of 12 subgoals...", "also"], ["proof (state)\nthis:\n  x \\<le> of_int (int (nat z))\n\ngoal (12 subgoals):\n 1. \\<And>x. x \\<le> x\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 3. \\<And>x y. max x y = max y x\n 4. \\<And>x y. x \\<le> max x y\n 5. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 6. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 7. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 8. \\<And>z y x.\n       \\<lbrakk>(0::'a) \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 9. \\<And>x z y.\n       \\<lbrakk>(0::'a) \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 10. \\<And>y x z.\n        \\<lbrakk>y \\<le> x; z \\<le> (0::'a)\\<rbrakk>\n        \\<Longrightarrow> x * z \\<le> y * z\nA total of 12 subgoals...", "have \"\\<dots> = of_nat (nat z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_int (int (nat z)) = of_nat (nat z)", "unfolding of_int_of_nat_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat (nat z) = of_nat (nat z)", ".."], ["proof (state)\nthis:\n  of_int (int (nat z)) = of_nat (nat z)\n\ngoal (12 subgoals):\n 1. \\<And>x. x \\<le> x\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 3. \\<And>x y. max x y = max y x\n 4. \\<And>x y. x \\<le> max x y\n 5. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 6. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 7. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 8. \\<And>z y x.\n       \\<lbrakk>(0::'a) \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 9. \\<And>x z y.\n       \\<lbrakk>(0::'a) \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 10. \\<And>y x z.\n        \\<lbrakk>y \\<le> x; z \\<le> (0::'a)\\<rbrakk>\n        \\<Longrightarrow> x * z \\<le> y * z\nA total of 12 subgoals...", "finally"], ["proof (chain)\npicking this:\n  x \\<le> of_nat (nat z)", "show \"\\<exists> y. x \\<le> of_nat y\""], ["proof (prove)\nusing this:\n  x \\<le> of_nat (nat z)\n\ngoal (1 subgoal):\n 1. \\<exists>y. x \\<le> of_nat y", "by blast"], ["proof (state)\nthis:\n  \\<exists>y. x \\<le> of_nat y\n\ngoal (11 subgoals):\n 1. \\<And>x. x \\<le> x\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 3. \\<And>x y. max x y = max y x\n 4. \\<And>x y. x \\<le> max x y\n 5. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 6. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 7. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 8. \\<And>z y x.\n       \\<lbrakk>(0::'a) \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 9. \\<And>x z y.\n       \\<lbrakk>(0::'a) \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 10. \\<And>y x z.\n        \\<lbrakk>y \\<le> x; z \\<le> (0::'a)\\<rbrakk>\n        \\<Longrightarrow> x * z \\<le> y * z\nA total of 11 subgoals...", "qed (auto simp: mult_right_mono mult_left_mono mult_right_mono_neg max_def)"], ["", "lemma delta_interpretation: assumes dpos: \"\\<delta> > 0\" and default: \"\\<delta> \\<le> def\"\n  shows \"SN_strict_mono_ordered_semiring_1 def (delta_gt \\<delta>) delta_mono\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_strict_mono_ordered_semiring_1 def (delta_gt \\<delta>) delta_mono", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_strict_mono_ordered_semiring_1 def (delta_gt \\<delta>) delta_mono", "from dpos default"], ["proof (chain)\npicking this:\n  (0::'a) < \\<delta>\n  \\<delta> \\<le> def", "have defz: \"0 \\<le> def\""], ["proof (prove)\nusing this:\n  (0::'a) < \\<delta>\n  \\<delta> \\<le> def\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> def", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<le> def\n\ngoal (1 subgoal):\n 1. SN_strict_mono_ordered_semiring_1 def (delta_gt \\<delta>) delta_mono", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_strict_mono_ordered_semiring_1 def (delta_gt \\<delta>) delta_mono", "proof (unfold_locales)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; delta_gt \\<delta> y z\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> x z\n 2. \\<And>x y z.\n       \\<lbrakk>delta_gt \\<delta> x y; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> x z\n 3. \\<And>x y. delta_gt \\<delta> x y \\<Longrightarrow> y \\<le> x\n 4. (0::'a) \\<le> def\n 5. \\<And>x y z.\n       delta_gt \\<delta> x y \\<Longrightarrow>\n       delta_gt \\<delta> (x + z) (y + z)\n 6. delta_gt \\<delta> def (0::'a)\n 7. SN {(x, y). (0::'a) \\<le> y \\<and> delta_gt \\<delta> x y}\n 8. \\<And>x y z.\n       \\<lbrakk>delta_mono x; delta_gt \\<delta> y z;\n        (0::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x * y) (x * z)", "show \"SN {(x,y). y \\<ge> 0 \\<and> delta_gt \\<delta> x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN {(x, y). (0::'a) \\<le> y \\<and> delta_gt \\<delta> x y}", "by (rule delta_gt_SN[OF dpos])"], ["proof (state)\nthis:\n  SN {(x, y). (0::'a) \\<le> y \\<and> delta_gt \\<delta> x y}\n\ngoal (7 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; delta_gt \\<delta> y z\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> x z\n 2. \\<And>x y z.\n       \\<lbrakk>delta_gt \\<delta> x y; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> x z\n 3. \\<And>x y. delta_gt \\<delta> x y \\<Longrightarrow> y \\<le> x\n 4. (0::'a) \\<le> def\n 5. \\<And>x y z.\n       delta_gt \\<delta> x y \\<Longrightarrow>\n       delta_gt \\<delta> (x + z) (y + z)\n 6. delta_gt \\<delta> def (0::'a)\n 7. \\<And>x y z.\n       \\<lbrakk>delta_mono x; delta_gt \\<delta> y z;\n        (0::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x * y) (x * z)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; delta_gt \\<delta> y z\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> x z\n 2. \\<And>x y z.\n       \\<lbrakk>delta_gt \\<delta> x y; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> x z\n 3. \\<And>x y. delta_gt \\<delta> x y \\<Longrightarrow> y \\<le> x\n 4. (0::'a) \\<le> def\n 5. \\<And>x y z.\n       delta_gt \\<delta> x y \\<Longrightarrow>\n       delta_gt \\<delta> (x + z) (y + z)\n 6. delta_gt \\<delta> def (0::'a)\n 7. \\<And>x y z.\n       \\<lbrakk>delta_mono x; delta_gt \\<delta> y z;\n        (0::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x * y) (x * z)", "fix x y z :: 'a"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; delta_gt \\<delta> y z\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> x z\n 2. \\<And>x y z.\n       \\<lbrakk>delta_gt \\<delta> x y; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> x z\n 3. \\<And>x y. delta_gt \\<delta> x y \\<Longrightarrow> y \\<le> x\n 4. (0::'a) \\<le> def\n 5. \\<And>x y z.\n       delta_gt \\<delta> x y \\<Longrightarrow>\n       delta_gt \\<delta> (x + z) (y + z)\n 6. delta_gt \\<delta> def (0::'a)\n 7. \\<And>x y z.\n       \\<lbrakk>delta_mono x; delta_gt \\<delta> y z;\n        (0::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x * y) (x * z)", "assume \"delta_mono x\" and yz: \"delta_gt \\<delta> y z\""], ["proof (state)\nthis:\n  delta_mono x\n  delta_gt \\<delta> y z\n\ngoal (7 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; delta_gt \\<delta> y z\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> x z\n 2. \\<And>x y z.\n       \\<lbrakk>delta_gt \\<delta> x y; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> x z\n 3. \\<And>x y. delta_gt \\<delta> x y \\<Longrightarrow> y \\<le> x\n 4. (0::'a) \\<le> def\n 5. \\<And>x y z.\n       delta_gt \\<delta> x y \\<Longrightarrow>\n       delta_gt \\<delta> (x + z) (y + z)\n 6. delta_gt \\<delta> def (0::'a)\n 7. \\<And>x y z.\n       \\<lbrakk>delta_mono x; delta_gt \\<delta> y z;\n        (0::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x * y) (x * z)", "hence x: \"1 \\<le> x\""], ["proof (prove)\nusing this:\n  delta_mono x\n  delta_gt \\<delta> y z\n\ngoal (1 subgoal):\n 1. (1::'a) \\<le> x", "unfolding delta_mono_def"], ["proof (prove)\nusing this:\n  (1::'a) \\<le> x\n  delta_gt \\<delta> y z\n\ngoal (1 subgoal):\n 1. (1::'a) \\<le> x", "by simp"], ["proof (state)\nthis:\n  (1::'a) \\<le> x\n\ngoal (7 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; delta_gt \\<delta> y z\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> x z\n 2. \\<And>x y z.\n       \\<lbrakk>delta_gt \\<delta> x y; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> x z\n 3. \\<And>x y. delta_gt \\<delta> x y \\<Longrightarrow> y \\<le> x\n 4. (0::'a) \\<le> def\n 5. \\<And>x y z.\n       delta_gt \\<delta> x y \\<Longrightarrow>\n       delta_gt \\<delta> (x + z) (y + z)\n 6. delta_gt \\<delta> def (0::'a)\n 7. \\<And>x y z.\n       \\<lbrakk>delta_mono x; delta_gt \\<delta> y z;\n        (0::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x * y) (x * z)", "have \"\\<exists> d > 0. delta_gt \\<delta> = (\\<lambda> x y. d \\<le> x - y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>d>0::'a. delta_gt \\<delta> = (\\<lambda>x y. d \\<le> x - y)", "by (rule exI[of _ \\<delta>], auto simp: dpos delta_gt_def)"], ["proof (state)\nthis:\n  \\<exists>d>0::'a. delta_gt \\<delta> = (\\<lambda>x y. d \\<le> x - y)\n\ngoal (7 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; delta_gt \\<delta> y z\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> x z\n 2. \\<And>x y z.\n       \\<lbrakk>delta_gt \\<delta> x y; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> x z\n 3. \\<And>x y. delta_gt \\<delta> x y \\<Longrightarrow> y \\<le> x\n 4. (0::'a) \\<le> def\n 5. \\<And>x y z.\n       delta_gt \\<delta> x y \\<Longrightarrow>\n       delta_gt \\<delta> (x + z) (y + z)\n 6. delta_gt \\<delta> def (0::'a)\n 7. \\<And>x y z.\n       \\<lbrakk>delta_mono x; delta_gt \\<delta> y z;\n        (0::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x * y) (x * z)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>d>0::'a. delta_gt \\<delta> = (\\<lambda>x y. d \\<le> x - y)", "obtain d where d: \"0 < d\" and rat: \"delta_gt \\<delta> = (\\<lambda> x y. d \\<le> x - y)\""], ["proof (prove)\nusing this:\n  \\<exists>d>0::'a. delta_gt \\<delta> = (\\<lambda>x y. d \\<le> x - y)\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<lbrakk>(0::'a) < d;\n         delta_gt \\<delta> = (\\<lambda>x y. d \\<le> x - y)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (0::'a) < d\n  delta_gt \\<delta> = (\\<lambda>x y. d \\<le> x - y)\n\ngoal (7 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; delta_gt \\<delta> y z\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> x z\n 2. \\<And>x y z.\n       \\<lbrakk>delta_gt \\<delta> x y; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> x z\n 3. \\<And>x y. delta_gt \\<delta> x y \\<Longrightarrow> y \\<le> x\n 4. (0::'a) \\<le> def\n 5. \\<And>x y z.\n       delta_gt \\<delta> x y \\<Longrightarrow>\n       delta_gt \\<delta> (x + z) (y + z)\n 6. delta_gt \\<delta> def (0::'a)\n 7. \\<And>x y z.\n       \\<lbrakk>delta_mono x; delta_gt \\<delta> y z;\n        (0::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x * y) (x * z)", "from yz"], ["proof (chain)\npicking this:\n  delta_gt \\<delta> y z", "have yzd: \"d \\<le> y - z\""], ["proof (prove)\nusing this:\n  delta_gt \\<delta> y z\n\ngoal (1 subgoal):\n 1. d \\<le> y - z", "by (simp add: rat)"], ["proof (state)\nthis:\n  d \\<le> y - z\n\ngoal (7 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; delta_gt \\<delta> y z\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> x z\n 2. \\<And>x y z.\n       \\<lbrakk>delta_gt \\<delta> x y; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> x z\n 3. \\<And>x y. delta_gt \\<delta> x y \\<Longrightarrow> y \\<le> x\n 4. (0::'a) \\<le> def\n 5. \\<And>x y z.\n       delta_gt \\<delta> x y \\<Longrightarrow>\n       delta_gt \\<delta> (x + z) (y + z)\n 6. delta_gt \\<delta> def (0::'a)\n 7. \\<And>x y z.\n       \\<lbrakk>delta_mono x; delta_gt \\<delta> y z;\n        (0::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x * y) (x * z)", "show \"delta_gt \\<delta> (x * y) (x * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. delta_gt \\<delta> (x * y) (x * z)", "proof (simp only: rat)"], ["proof (state)\ngoal (1 subgoal):\n 1. d \\<le> x * y - x * z", "let ?p = \"(x - 1) * (y - z)\""], ["proof (state)\ngoal (1 subgoal):\n 1. d \\<le> x * y - x * z", "from x"], ["proof (chain)\npicking this:\n  (1::'a) \\<le> x", "have x1: \"0 \\<le> x - 1\""], ["proof (prove)\nusing this:\n  (1::'a) \\<le> x\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> x - (1::'a)", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<le> x - (1::'a)\n\ngoal (1 subgoal):\n 1. d \\<le> x * y - x * z", "from yzd d"], ["proof (chain)\npicking this:\n  d \\<le> y - z\n  (0::'a) < d", "have yz0: \"0 \\<le> y - z\""], ["proof (prove)\nusing this:\n  d \\<le> y - z\n  (0::'a) < d\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> y - z", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<le> y - z\n\ngoal (1 subgoal):\n 1. d \\<le> x * y - x * z", "have \"0 \\<le> ?p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> (x - (1::'a)) * (y - z)", "by (rule mult_nonneg_nonneg[OF x1 yz0])"], ["proof (state)\nthis:\n  (0::'a) \\<le> (x - (1::'a)) * (y - z)\n\ngoal (1 subgoal):\n 1. d \\<le> x * y - x * z", "have \"x * y - x * z = x * (y - z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * y - x * z = x * (y - z)", "using right_diff_distrib[of x y z]"], ["proof (prove)\nusing this:\n  x * (y - z) = x * y - x * z\n\ngoal (1 subgoal):\n 1. x * y - x * z = x * (y - z)", "by auto"], ["proof (state)\nthis:\n  x * y - x * z = x * (y - z)\n\ngoal (1 subgoal):\n 1. d \\<le> x * y - x * z", "also"], ["proof (state)\nthis:\n  x * y - x * z = x * (y - z)\n\ngoal (1 subgoal):\n 1. d \\<le> x * y - x * z", "have \"\\<dots> = ((x - 1) + 1) * (y - z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * (y - z) = (x - (1::'a) + (1::'a)) * (y - z)", "by auto"], ["proof (state)\nthis:\n  x * (y - z) = (x - (1::'a) + (1::'a)) * (y - z)\n\ngoal (1 subgoal):\n 1. d \\<le> x * y - x * z", "also"], ["proof (state)\nthis:\n  x * (y - z) = (x - (1::'a) + (1::'a)) * (y - z)\n\ngoal (1 subgoal):\n 1. d \\<le> x * y - x * z", "have \"\\<dots> = ?p + 1 * ( y - z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x - (1::'a) + (1::'a)) * (y - z) =\n    (x - (1::'a)) * (y - z) + (1::'a) * (y - z)", "by (rule ring_distribs(2))"], ["proof (state)\nthis:\n  (x - (1::'a) + (1::'a)) * (y - z) =\n  (x - (1::'a)) * (y - z) + (1::'a) * (y - z)\n\ngoal (1 subgoal):\n 1. d \\<le> x * y - x * z", "also"], ["proof (state)\nthis:\n  (x - (1::'a) + (1::'a)) * (y - z) =\n  (x - (1::'a)) * (y - z) + (1::'a) * (y - z)\n\ngoal (1 subgoal):\n 1. d \\<le> x * y - x * z", "have \"\\<dots> = ?p + (y - z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x - (1::'a)) * (y - z) + (1::'a) * (y - z) =\n    (x - (1::'a)) * (y - z) + (y - z)", "by simp"], ["proof (state)\nthis:\n  (x - (1::'a)) * (y - z) + (1::'a) * (y - z) =\n  (x - (1::'a)) * (y - z) + (y - z)\n\ngoal (1 subgoal):\n 1. d \\<le> x * y - x * z", "also"], ["proof (state)\nthis:\n  (x - (1::'a)) * (y - z) + (1::'a) * (y - z) =\n  (x - (1::'a)) * (y - z) + (y - z)\n\ngoal (1 subgoal):\n 1. d \\<le> x * y - x * z", "have \"\\<dots> \\<ge> (0 + d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) + d \\<le> (x - (1::'a)) * (y - z) + (y - z)", "using yzd \\<open>0 \\<le> ?p\\<close>"], ["proof (prove)\nusing this:\n  d \\<le> y - z\n  (0::'a) \\<le> (x - (1::'a)) * (y - z)\n\ngoal (1 subgoal):\n 1. (0::'a) + d \\<le> (x - (1::'a)) * (y - z) + (y - z)", "by auto"], ["proof (state)\nthis:\n  (0::'a) + d \\<le> (x - (1::'a)) * (y - z) + (y - z)\n\ngoal (1 subgoal):\n 1. d \\<le> x * y - x * z", "finally"], ["proof (chain)\npicking this:\n  (0::'a) + d \\<le> x * y - x * z", "show \"d \\<le> x * y - x * z\""], ["proof (prove)\nusing this:\n  (0::'a) + d \\<le> x * y - x * z\n\ngoal (1 subgoal):\n 1. d \\<le> x * y - x * z", "by auto"], ["proof (state)\nthis:\n  d \\<le> x * y - x * z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  delta_gt \\<delta> (x * y) (x * z)\n\ngoal (6 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; delta_gt \\<delta> y z\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> x z\n 2. \\<And>x y z.\n       \\<lbrakk>delta_gt \\<delta> x y; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> x z\n 3. \\<And>x y. delta_gt \\<delta> x y \\<Longrightarrow> y \\<le> x\n 4. (0::'a) \\<le> def\n 5. \\<And>x y z.\n       delta_gt \\<delta> x y \\<Longrightarrow>\n       delta_gt \\<delta> (x + z) (y + z)\n 6. delta_gt \\<delta> def (0::'a)", "qed (insert dpos, auto simp: delta_gt_def default defz)"], ["proof (state)\nthis:\n  SN_strict_mono_ordered_semiring_1 def (delta_gt \\<delta>) delta_mono\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma delta_poly: assumes dpos: \"\\<delta> > 0\" and default: \"\\<delta> \\<le> def\"\n  shows \"poly_order_carrier def (delta_gt \\<delta>) (1 \\<le> \\<delta>) False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly_order_carrier def (delta_gt \\<delta>) ((1::'a) \\<le> \\<delta>)\n     False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. poly_order_carrier def (delta_gt \\<delta>) ((1::'a) \\<le> \\<delta>)\n     False", "from delta_interpretation[OF dpos default]"], ["proof (chain)\npicking this:\n  SN_strict_mono_ordered_semiring_1 def (delta_gt \\<delta>) delta_mono", "interpret SN_strict_mono_ordered_semiring_1 \"def\" \"delta_gt \\<delta>\" delta_mono"], ["proof (prove)\nusing this:\n  SN_strict_mono_ordered_semiring_1 def (delta_gt \\<delta>) delta_mono\n\ngoal (1 subgoal):\n 1. SN_strict_mono_ordered_semiring_1 def (delta_gt \\<delta>) delta_mono", "."], ["proof (state)\ngoal (1 subgoal):\n 1. poly_order_carrier def (delta_gt \\<delta>) ((1::'a) \\<le> \\<delta>)\n     False", "interpret poly_order_carrier \"def\" \"delta_gt \\<delta>\" False False"], ["proof (prove)\ngoal (1 subgoal):\n 1. poly_order_carrier def (delta_gt \\<delta>) False False", "proof(unfold_locales)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>y z x.\n       \\<lbrakk>delta_gt \\<delta> y z; (1::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (y * x) (z * x)\n 2. \\<And>x y n.\n       \\<lbrakk>False; delta_gt \\<delta> x y; (0::'a) \\<le> y;\n        1 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x ^ n) (y ^ n)\n 3. \\<And>y x.\n       \\<lbrakk>False; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) (1::'a) ^^ k) y", "fix y z x :: 'a"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>y z x.\n       \\<lbrakk>delta_gt \\<delta> y z; (1::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (y * x) (z * x)\n 2. \\<And>x y n.\n       \\<lbrakk>False; delta_gt \\<delta> x y; (0::'a) \\<le> y;\n        1 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x ^ n) (y ^ n)\n 3. \\<And>y x.\n       \\<lbrakk>False; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) (1::'a) ^^ k) y", "assume gt: \"delta_gt \\<delta> y z\" and ge: \"x \\<ge> 1\""], ["proof (state)\nthis:\n  delta_gt \\<delta> y z\n  (1::'a) \\<le> x\n\ngoal (3 subgoals):\n 1. \\<And>y z x.\n       \\<lbrakk>delta_gt \\<delta> y z; (1::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (y * x) (z * x)\n 2. \\<And>x y n.\n       \\<lbrakk>False; delta_gt \\<delta> x y; (0::'a) \\<le> y;\n        1 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x ^ n) (y ^ n)\n 3. \\<And>y x.\n       \\<lbrakk>False; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) (1::'a) ^^ k) y", "from ge"], ["proof (chain)\npicking this:\n  (1::'a) \\<le> x", "have ge: \"x \\<ge> 0\" and m: \"delta_mono x\""], ["proof (prove)\nusing this:\n  (1::'a) \\<le> x\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> x &&& delta_mono x", "unfolding delta_mono_def"], ["proof (prove)\nusing this:\n  (1::'a) \\<le> x\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> x &&& (1::'a) \\<le> x", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<le> x\n  delta_mono x\n\ngoal (3 subgoals):\n 1. \\<And>y z x.\n       \\<lbrakk>delta_gt \\<delta> y z; (1::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (y * x) (z * x)\n 2. \\<And>x y n.\n       \\<lbrakk>False; delta_gt \\<delta> x y; (0::'a) \\<le> y;\n        1 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x ^ n) (y ^ n)\n 3. \\<And>y x.\n       \\<lbrakk>False; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) (1::'a) ^^ k) y", "show \"delta_gt \\<delta> (y * x) (z * x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. delta_gt \\<delta> (y * x) (z * x)", "using mono[OF m gt ge]"], ["proof (prove)\nusing this:\n  delta_gt \\<delta> (x * y) (x * z)\n\ngoal (1 subgoal):\n 1. delta_gt \\<delta> (y * x) (z * x)", "by (auto simp: field_simps)"], ["proof (state)\nthis:\n  delta_gt \\<delta> (y * x) (z * x)\n\ngoal (2 subgoals):\n 1. \\<And>x y n.\n       \\<lbrakk>False; delta_gt \\<delta> x y; (0::'a) \\<le> y;\n        1 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x ^ n) (y ^ n)\n 2. \\<And>y x.\n       \\<lbrakk>False; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) (1::'a) ^^ k) y", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y n.\n       \\<lbrakk>False; delta_gt \\<delta> x y; (0::'a) \\<le> y;\n        1 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x ^ n) (y ^ n)\n 2. \\<And>y x.\n       \\<lbrakk>False; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) (1::'a) ^^ k) y", "fix x y :: 'a and n :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y n.\n       \\<lbrakk>False; delta_gt \\<delta> x y; (0::'a) \\<le> y;\n        1 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x ^ n) (y ^ n)\n 2. \\<And>y x.\n       \\<lbrakk>False; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) (1::'a) ^^ k) y", "assume False"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. \\<And>x y n.\n       \\<lbrakk>False; delta_gt \\<delta> x y; (0::'a) \\<le> y;\n        1 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x ^ n) (y ^ n)\n 2. \\<And>y x.\n       \\<lbrakk>False; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) (1::'a) ^^ k) y", "thus \"delta_gt \\<delta> (x ^ n) (y ^ n)\""], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. delta_gt \\<delta> (x ^ n) (y ^ n)", ".."], ["proof (state)\nthis:\n  delta_gt \\<delta> (x ^ n) (y ^ n)\n\ngoal (1 subgoal):\n 1. \\<And>y x.\n       \\<lbrakk>False; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) (1::'a) ^^ k) y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y x.\n       \\<lbrakk>False; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) (1::'a) ^^ k) y", "fix x y :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y x.\n       \\<lbrakk>False; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) (1::'a) ^^ k) y", "assume False"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>y x.\n       \\<lbrakk>False; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) (1::'a) ^^ k) y", "thus \"\\<exists> k. x = ((+) 1 ^^ k) y\""], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>k. x = ((+) (1::'a) ^^ k) y", "by simp"], ["proof (state)\nthis:\n  \\<exists>k. x = ((+) (1::'a) ^^ k) y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\ngoal (1 subgoal):\n 1. poly_order_carrier def (delta_gt \\<delta>) ((1::'a) \\<le> \\<delta>)\n     False", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. poly_order_carrier def (delta_gt \\<delta>) ((1::'a) \\<le> \\<delta>)\n     False", "proof(unfold_locales)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>y z x.\n       \\<lbrakk>delta_gt \\<delta> y z; (1::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (y * x) (z * x)\n 2. \\<And>x y n.\n       \\<lbrakk>(1::'a) \\<le> \\<delta>; delta_gt \\<delta> x y;\n        (0::'a) \\<le> y; 1 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x ^ n) (y ^ n)\n 3. \\<And>y x.\n       \\<lbrakk>False; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) (1::'a) ^^ k) y", "fix x y :: 'a and n :: nat"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>y z x.\n       \\<lbrakk>delta_gt \\<delta> y z; (1::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (y * x) (z * x)\n 2. \\<And>x y n.\n       \\<lbrakk>(1::'a) \\<le> \\<delta>; delta_gt \\<delta> x y;\n        (0::'a) \\<le> y; 1 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x ^ n) (y ^ n)\n 3. \\<And>y x.\n       \\<lbrakk>False; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) (1::'a) ^^ k) y", "assume one: \"1 \\<le> \\<delta>\" and gt: \"delta_gt \\<delta> x y\" and y: \"y \\<ge> 0\" and n: \"1 \\<le> n\""], ["proof (state)\nthis:\n  (1::'a) \\<le> \\<delta>\n  delta_gt \\<delta> x y\n  (0::'a) \\<le> y\n  1 \\<le> n\n\ngoal (3 subgoals):\n 1. \\<And>y z x.\n       \\<lbrakk>delta_gt \\<delta> y z; (1::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (y * x) (z * x)\n 2. \\<And>x y n.\n       \\<lbrakk>(1::'a) \\<le> \\<delta>; delta_gt \\<delta> x y;\n        (0::'a) \\<le> y; 1 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x ^ n) (y ^ n)\n 3. \\<And>y x.\n       \\<lbrakk>False; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) (1::'a) ^^ k) y", "then"], ["proof (chain)\npicking this:\n  (1::'a) \\<le> \\<delta>\n  delta_gt \\<delta> x y\n  (0::'a) \\<le> y\n  1 \\<le> n", "obtain p where n: \"n = Suc p\" and x: \"x \\<ge> 1\" and y2: \"0 \\<le> y\" and xy: \"x \\<ge> y\""], ["proof (prove)\nusing this:\n  (1::'a) \\<le> \\<delta>\n  delta_gt \\<delta> x y\n  (0::'a) \\<le> y\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>n = Suc p; (1::'a) \\<le> x; (0::'a) \\<le> y;\n         y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases n, auto simp: delta_gt_def)"], ["proof (state)\nthis:\n  n = Suc p\n  (1::'a) \\<le> x\n  (0::'a) \\<le> y\n  y \\<le> x\n\ngoal (3 subgoals):\n 1. \\<And>y z x.\n       \\<lbrakk>delta_gt \\<delta> y z; (1::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (y * x) (z * x)\n 2. \\<And>x y n.\n       \\<lbrakk>(1::'a) \\<le> \\<delta>; delta_gt \\<delta> x y;\n        (0::'a) \\<le> y; 1 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (x ^ n) (y ^ n)\n 3. \\<And>y x.\n       \\<lbrakk>False; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) (1::'a) ^^ k) y", "show \"delta_gt \\<delta> (x ^ n) (y ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. delta_gt \\<delta> (x ^ n) (y ^ n)", "proof (simp only: n, induct p, simp add: gt)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       delta_gt \\<delta> (x ^ Suc p) (y ^ Suc p) \\<Longrightarrow>\n       delta_gt \\<delta> (x ^ Suc (Suc p)) (y ^ Suc (Suc p))", "case (Suc p)"], ["proof (state)\nthis:\n  delta_gt \\<delta> (x ^ Suc p) (y ^ Suc p)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       delta_gt \\<delta> (x ^ Suc p) (y ^ Suc p) \\<Longrightarrow>\n       delta_gt \\<delta> (x ^ Suc (Suc p)) (y ^ Suc (Suc p))", "from times_gt_mono[OF this x]"], ["proof (chain)\npicking this:\n  delta_gt \\<delta> (x ^ Suc p * x) (y ^ Suc p * x)", "have one: \"delta_gt \\<delta> (x ^ Suc (Suc p)) (x * y ^ Suc p)\""], ["proof (prove)\nusing this:\n  delta_gt \\<delta> (x ^ Suc p * x) (y ^ Suc p * x)\n\ngoal (1 subgoal):\n 1. delta_gt \\<delta> (x ^ Suc (Suc p)) (x * y ^ Suc p)", "by (auto simp: field_simps)"], ["proof (state)\nthis:\n  delta_gt \\<delta> (x ^ Suc (Suc p)) (x * y ^ Suc p)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       delta_gt \\<delta> (x ^ Suc p) (y ^ Suc p) \\<Longrightarrow>\n       delta_gt \\<delta> (x ^ Suc (Suc p)) (y ^ Suc (Suc p))", "also"], ["proof (state)\nthis:\n  delta_gt \\<delta> (x ^ Suc (Suc p)) (x * y ^ Suc p)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       delta_gt \\<delta> (x ^ Suc p) (y ^ Suc p) \\<Longrightarrow>\n       delta_gt \\<delta> (x ^ Suc (Suc p)) (y ^ Suc (Suc p))", "have \"\\<dots> \\<ge> y * y ^ Suc p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * y ^ Suc p \\<le> x * y ^ Suc p", "by (rule times_left_mono[OF _ xy], auto simp: zero_le_power[OF y2, of \"Suc p\", simplified])"], ["proof (state)\nthis:\n  y * y ^ Suc p \\<le> x * y ^ Suc p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       delta_gt \\<delta> (x ^ Suc p) (y ^ Suc p) \\<Longrightarrow>\n       delta_gt \\<delta> (x ^ Suc (Suc p)) (y ^ Suc (Suc p))", "finally"], ["proof (chain)\npicking this:\n  delta_gt \\<delta> (x ^ Suc (Suc p)) (y * y ^ Suc p)", "show ?case"], ["proof (prove)\nusing this:\n  delta_gt \\<delta> (x ^ Suc (Suc p)) (y * y ^ Suc p)\n\ngoal (1 subgoal):\n 1. delta_gt \\<delta> (x ^ Suc (Suc p)) (y ^ Suc (Suc p))", "by auto"], ["proof (state)\nthis:\n  delta_gt \\<delta> (x ^ Suc (Suc p)) (y ^ Suc (Suc p))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  delta_gt \\<delta> (x ^ n) (y ^ n)\n\ngoal (2 subgoals):\n 1. \\<And>y z x.\n       \\<lbrakk>delta_gt \\<delta> y z; (1::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (y * x) (z * x)\n 2. \\<And>y x.\n       \\<lbrakk>False; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) (1::'a) ^^ k) y", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y z x.\n       \\<lbrakk>delta_gt \\<delta> y z; (1::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (y * x) (z * x)\n 2. \\<And>y x.\n       \\<lbrakk>False; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) (1::'a) ^^ k) y", "fix x y :: 'a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y z x.\n       \\<lbrakk>delta_gt \\<delta> y z; (1::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (y * x) (z * x)\n 2. \\<And>y x.\n       \\<lbrakk>False; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) (1::'a) ^^ k) y", "assume False"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. \\<And>y z x.\n       \\<lbrakk>delta_gt \\<delta> y z; (1::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (y * x) (z * x)\n 2. \\<And>y x.\n       \\<lbrakk>False; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) (1::'a) ^^ k) y", "thus \"\\<exists> k. x = ((+) 1 ^^ k) y\""], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>k. x = ((+) (1::'a) ^^ k) y", "by simp"], ["proof (state)\nthis:\n  \\<exists>k. x = ((+) (1::'a) ^^ k) y\n\ngoal (1 subgoal):\n 1. \\<And>y z x.\n       \\<lbrakk>delta_gt \\<delta> y z; (1::'a) \\<le> x\\<rbrakk>\n       \\<Longrightarrow> delta_gt \\<delta> (y * x) (z * x)", "qed (rule times_gt_mono, auto)"], ["proof (state)\nthis:\n  poly_order_carrier def (delta_gt \\<delta>) ((1::'a) \\<le> \\<delta>) False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma delta_minimal_delta: assumes \"\\<And> x y. (x,y) \\<in> set xys \\<Longrightarrow> x > y\"\n  shows \"\\<exists> \\<delta> > 0. \\<forall> x y. (x,y) \\<in> set xys \\<longrightarrow> delta_gt \\<delta> x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<delta>>0::'a.\n       \\<forall>x y.\n          (x, y) \\<in> set xys \\<longrightarrow> delta_gt \\<delta> x y", "using assms"], ["proof (prove)\nusing this:\n  (?x, ?y) \\<in> set xys \\<Longrightarrow> ?y < ?x\n\ngoal (1 subgoal):\n 1. \\<exists>\\<delta>>0::'a.\n       \\<forall>x y.\n          (x, y) \\<in> set xys \\<longrightarrow> delta_gt \\<delta> x y", "proof (induct xys)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>x y.\n        (x, y) \\<in> set [] \\<Longrightarrow> y < x) \\<Longrightarrow>\n    \\<exists>\\<delta>>0::'a.\n       \\<forall>x y.\n          (x, y) \\<in> set [] \\<longrightarrow> delta_gt \\<delta> x y\n 2. \\<And>a xys.\n       \\<lbrakk>(\\<And>x y.\n                    (x, y) \\<in> set xys \\<Longrightarrow>\n                    y < x) \\<Longrightarrow>\n                \\<exists>\\<delta>>0::'a.\n                   \\<forall>x y.\n                      (x, y) \\<in> set xys \\<longrightarrow>\n                      delta_gt \\<delta> x y;\n        \\<And>x y.\n           (x, y) \\<in> set (a # xys) \\<Longrightarrow> y < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<delta>>0::'a.\n                            \\<forall>x y.\n                               (x, y) \\<in> set (a # xys) \\<longrightarrow>\n                               delta_gt \\<delta> x y", "case Nil"], ["proof (state)\nthis:\n  (?x, ?y) \\<in> set [] \\<Longrightarrow> ?y < ?x\n\ngoal (2 subgoals):\n 1. (\\<And>x y.\n        (x, y) \\<in> set [] \\<Longrightarrow> y < x) \\<Longrightarrow>\n    \\<exists>\\<delta>>0::'a.\n       \\<forall>x y.\n          (x, y) \\<in> set [] \\<longrightarrow> delta_gt \\<delta> x y\n 2. \\<And>a xys.\n       \\<lbrakk>(\\<And>x y.\n                    (x, y) \\<in> set xys \\<Longrightarrow>\n                    y < x) \\<Longrightarrow>\n                \\<exists>\\<delta>>0::'a.\n                   \\<forall>x y.\n                      (x, y) \\<in> set xys \\<longrightarrow>\n                      delta_gt \\<delta> x y;\n        \\<And>x y.\n           (x, y) \\<in> set (a # xys) \\<Longrightarrow> y < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<delta>>0::'a.\n                            \\<forall>x y.\n                               (x, y) \\<in> set (a # xys) \\<longrightarrow>\n                               delta_gt \\<delta> x y", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<delta>>0::'a.\n       \\<forall>x y.\n          (x, y) \\<in> set [] \\<longrightarrow> delta_gt \\<delta> x y", "by (rule exI[of _ 1], auto)"], ["proof (state)\nthis:\n  \\<exists>\\<delta>>0::'a.\n     \\<forall>x y.\n        (x, y) \\<in> set [] \\<longrightarrow> delta_gt \\<delta> x y\n\ngoal (1 subgoal):\n 1. \\<And>a xys.\n       \\<lbrakk>(\\<And>x y.\n                    (x, y) \\<in> set xys \\<Longrightarrow>\n                    y < x) \\<Longrightarrow>\n                \\<exists>\\<delta>>0::'a.\n                   \\<forall>x y.\n                      (x, y) \\<in> set xys \\<longrightarrow>\n                      delta_gt \\<delta> x y;\n        \\<And>x y.\n           (x, y) \\<in> set (a # xys) \\<Longrightarrow> y < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<delta>>0::'a.\n                            \\<forall>x y.\n                               (x, y) \\<in> set (a # xys) \\<longrightarrow>\n                               delta_gt \\<delta> x y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xys.\n       \\<lbrakk>(\\<And>x y.\n                    (x, y) \\<in> set xys \\<Longrightarrow>\n                    y < x) \\<Longrightarrow>\n                \\<exists>\\<delta>>0::'a.\n                   \\<forall>x y.\n                      (x, y) \\<in> set xys \\<longrightarrow>\n                      delta_gt \\<delta> x y;\n        \\<And>x y.\n           (x, y) \\<in> set (a # xys) \\<Longrightarrow> y < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<delta>>0::'a.\n                            \\<forall>x y.\n                               (x, y) \\<in> set (a # xys) \\<longrightarrow>\n                               delta_gt \\<delta> x y", "case (Cons xy xys)"], ["proof (state)\nthis:\n  (\\<And>x y.\n      (x, y) \\<in> set xys \\<Longrightarrow> y < x) \\<Longrightarrow>\n  \\<exists>\\<delta>>0::'a.\n     \\<forall>x y.\n        (x, y) \\<in> set xys \\<longrightarrow> delta_gt \\<delta> x y\n  (?x, ?y) \\<in> set (xy # xys) \\<Longrightarrow> ?y < ?x\n\ngoal (1 subgoal):\n 1. \\<And>a xys.\n       \\<lbrakk>(\\<And>x y.\n                    (x, y) \\<in> set xys \\<Longrightarrow>\n                    y < x) \\<Longrightarrow>\n                \\<exists>\\<delta>>0::'a.\n                   \\<forall>x y.\n                      (x, y) \\<in> set xys \\<longrightarrow>\n                      delta_gt \\<delta> x y;\n        \\<And>x y.\n           (x, y) \\<in> set (a # xys) \\<Longrightarrow> y < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<delta>>0::'a.\n                            \\<forall>x y.\n                               (x, y) \\<in> set (a # xys) \\<longrightarrow>\n                               delta_gt \\<delta> x y", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<delta>>0::'a.\n       \\<forall>x y.\n          (x, y) \\<in> set (xy # xys) \\<longrightarrow>\n          delta_gt \\<delta> x y", "proof (cases xy)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       xy = (a, b) \\<Longrightarrow>\n       \\<exists>\\<delta>>0::'a.\n          \\<forall>x y.\n             (x, y) \\<in> set (xy # xys) \\<longrightarrow>\n             delta_gt \\<delta> x y", "case (Pair x y)"], ["proof (state)\nthis:\n  xy = (x, y)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       xy = (a, b) \\<Longrightarrow>\n       \\<exists>\\<delta>>0::'a.\n          \\<forall>x y.\n             (x, y) \\<in> set (xy # xys) \\<longrightarrow>\n             delta_gt \\<delta> x y", "with Cons"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      (x, y) \\<in> set xys \\<Longrightarrow> y < x) \\<Longrightarrow>\n  \\<exists>\\<delta>>0::'a.\n     \\<forall>x y.\n        (x, y) \\<in> set xys \\<longrightarrow> delta_gt \\<delta> x y\n  (?x, ?y) \\<in> set (xy # xys) \\<Longrightarrow> ?y < ?x\n  xy = (x, y)", "have \"x > y\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      (x, y) \\<in> set xys \\<Longrightarrow> y < x) \\<Longrightarrow>\n  \\<exists>\\<delta>>0::'a.\n     \\<forall>x y.\n        (x, y) \\<in> set xys \\<longrightarrow> delta_gt \\<delta> x y\n  (?x, ?y) \\<in> set (xy # xys) \\<Longrightarrow> ?y < ?x\n  xy = (x, y)\n\ngoal (1 subgoal):\n 1. y < x", "by auto"], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       xy = (a, b) \\<Longrightarrow>\n       \\<exists>\\<delta>>0::'a.\n          \\<forall>x y.\n             (x, y) \\<in> set (xy # xys) \\<longrightarrow>\n             delta_gt \\<delta> x y", "then"], ["proof (chain)\npicking this:\n  y < x", "obtain d1 where \"d1 = x - y\" and d1pos: \"d1 > 0\" and \"d1 \\<le> x - y\""], ["proof (prove)\nusing this:\n  y < x\n\ngoal (1 subgoal):\n 1. (\\<And>d1.\n        \\<lbrakk>d1 = x - y; (0::'a) < d1; d1 \\<le> x - y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  d1 = x - y\n  (0::'a) < d1\n  d1 \\<le> x - y\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       xy = (a, b) \\<Longrightarrow>\n       \\<exists>\\<delta>>0::'a.\n          \\<forall>x y.\n             (x, y) \\<in> set (xy # xys) \\<longrightarrow>\n             delta_gt \\<delta> x y", "hence xy: \"delta_gt d1 x y\""], ["proof (prove)\nusing this:\n  d1 = x - y\n  (0::'a) < d1\n  d1 \\<le> x - y\n\ngoal (1 subgoal):\n 1. delta_gt d1 x y", "unfolding delta_gt_def"], ["proof (prove)\nusing this:\n  d1 = x - y\n  (0::'a) < d1\n  d1 \\<le> x - y\n\ngoal (1 subgoal):\n 1. d1 \\<le> x - y", "by auto"], ["proof (state)\nthis:\n  delta_gt d1 x y\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       xy = (a, b) \\<Longrightarrow>\n       \\<exists>\\<delta>>0::'a.\n          \\<forall>x y.\n             (x, y) \\<in> set (xy # xys) \\<longrightarrow>\n             delta_gt \\<delta> x y", "from Cons"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      (x, y) \\<in> set xys \\<Longrightarrow> y < x) \\<Longrightarrow>\n  \\<exists>\\<delta>>0::'a.\n     \\<forall>x y.\n        (x, y) \\<in> set xys \\<longrightarrow> delta_gt \\<delta> x y\n  (?x, ?y) \\<in> set (xy # xys) \\<Longrightarrow> ?y < ?x", "obtain d2 where d2pos: \"d2 > 0\" and xys: \"\\<forall> x y. (x, y) \\<in> set xys \\<longrightarrow> delta_gt d2 x y\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      (x, y) \\<in> set xys \\<Longrightarrow> y < x) \\<Longrightarrow>\n  \\<exists>\\<delta>>0::'a.\n     \\<forall>x y.\n        (x, y) \\<in> set xys \\<longrightarrow> delta_gt \\<delta> x y\n  (?x, ?y) \\<in> set (xy # xys) \\<Longrightarrow> ?y < ?x\n\ngoal (1 subgoal):\n 1. (\\<And>d2.\n        \\<lbrakk>(0::'a) < d2;\n         \\<forall>x y.\n            (x, y) \\<in> set xys \\<longrightarrow> delta_gt d2 x y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (0::'a) < d2\n  \\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> delta_gt d2 x y\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       xy = (a, b) \\<Longrightarrow>\n       \\<exists>\\<delta>>0::'a.\n          \\<forall>x y.\n             (x, y) \\<in> set (xy # xys) \\<longrightarrow>\n             delta_gt \\<delta> x y", "obtain d where d: \"d = min d1 d2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d. d = min d1 d2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  d = min d1 d2\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       xy = (a, b) \\<Longrightarrow>\n       \\<exists>\\<delta>>0::'a.\n          \\<forall>x y.\n             (x, y) \\<in> set (xy # xys) \\<longrightarrow>\n             delta_gt \\<delta> x y", "with d1pos d2pos xy"], ["proof (chain)\npicking this:\n  (0::'a) < d1\n  (0::'a) < d2\n  delta_gt d1 x y\n  d = min d1 d2", "have dpos: \"d > 0\" and \"delta_gt d x y\""], ["proof (prove)\nusing this:\n  (0::'a) < d1\n  (0::'a) < d2\n  delta_gt d1 x y\n  d = min d1 d2\n\ngoal (1 subgoal):\n 1. (0::'a) < d &&& delta_gt d x y", "unfolding delta_gt_def"], ["proof (prove)\nusing this:\n  (0::'a) < d1\n  (0::'a) < d2\n  d1 \\<le> x - y\n  d = min d1 d2\n\ngoal (1 subgoal):\n 1. (0::'a) < d &&& d \\<le> x - y", "by auto"], ["proof (state)\nthis:\n  (0::'a) < d\n  delta_gt d x y\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       xy = (a, b) \\<Longrightarrow>\n       \\<exists>\\<delta>>0::'a.\n          \\<forall>x y.\n             (x, y) \\<in> set (xy # xys) \\<longrightarrow>\n             delta_gt \\<delta> x y", "with xys d Pair"], ["proof (chain)\npicking this:\n  \\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> delta_gt d2 x y\n  d = min d1 d2\n  xy = (x, y)\n  (0::'a) < d\n  delta_gt d x y", "have \"\\<forall> x y. (x,y) \\<in> set (xy # xys) \\<longrightarrow> delta_gt d x y\""], ["proof (prove)\nusing this:\n  \\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> delta_gt d2 x y\n  d = min d1 d2\n  xy = (x, y)\n  (0::'a) < d\n  delta_gt d x y\n\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       (x, y) \\<in> set (xy # xys) \\<longrightarrow> delta_gt d x y", "unfolding delta_gt_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> d2 \\<le> x - y\n  d = min d1 d2\n  xy = (x, y)\n  (0::'a) < d\n  d \\<le> x - y\n\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       (x, y) \\<in> set (xy # xys) \\<longrightarrow> d \\<le> x - y", "by force"], ["proof (state)\nthis:\n  \\<forall>x y. (x, y) \\<in> set (xy # xys) \\<longrightarrow> delta_gt d x y\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       xy = (a, b) \\<Longrightarrow>\n       \\<exists>\\<delta>>0::'a.\n          \\<forall>x y.\n             (x, y) \\<in> set (xy # xys) \\<longrightarrow>\n             delta_gt \\<delta> x y", "with dpos"], ["proof (chain)\npicking this:\n  (0::'a) < d\n  \\<forall>x y. (x, y) \\<in> set (xy # xys) \\<longrightarrow> delta_gt d x y", "show ?thesis"], ["proof (prove)\nusing this:\n  (0::'a) < d\n  \\<forall>x y. (x, y) \\<in> set (xy # xys) \\<longrightarrow> delta_gt d x y\n\ngoal (1 subgoal):\n 1. \\<exists>\\<delta>>0::'a.\n       \\<forall>x y.\n          (x, y) \\<in> set (xy # xys) \\<longrightarrow>\n          delta_gt \\<delta> x y", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<delta>>0::'a.\n     \\<forall>x y.\n        (x, y) \\<in> set (xy # xys) \\<longrightarrow> delta_gt \\<delta> x y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>\\<delta>>0::'a.\n     \\<forall>x y.\n        (x, y) \\<in> set (xy # xys) \\<longrightarrow> delta_gt \\<delta> x y\n\ngoal:\nNo subgoals!", "qed"], ["", "interpretation weak_delta_SN: weak_SN_strict_mono_ordered_semiring_1 \"(>)\" 1 delta_mono"], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_SN_strict_mono_ordered_semiring_1 (\\<lambda>x y. y < x) (1::'a)\n     delta_mono", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xys.\n       \\<forall>x y.\n          (x, y) \\<in> set xys \\<longrightarrow> y < x \\<Longrightarrow>\n       \\<exists>gt.\n          SN_strict_mono_ordered_semiring_1 (1::'a) gt delta_mono \\<and>\n          (\\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> gt x y)", "fix xysp :: \"('a \\<times> 'a) list\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xys.\n       \\<forall>x y.\n          (x, y) \\<in> set xys \\<longrightarrow> y < x \\<Longrightarrow>\n       \\<exists>gt.\n          SN_strict_mono_ordered_semiring_1 (1::'a) gt delta_mono \\<and>\n          (\\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> gt x y)", "assume orient: \"\\<forall> x y. (x,y) \\<in> set xysp \\<longrightarrow> x > y\""], ["proof (state)\nthis:\n  \\<forall>x y. (x, y) \\<in> set xysp \\<longrightarrow> y < x\n\ngoal (1 subgoal):\n 1. \\<And>xys.\n       \\<forall>x y.\n          (x, y) \\<in> set xys \\<longrightarrow> y < x \\<Longrightarrow>\n       \\<exists>gt.\n          SN_strict_mono_ordered_semiring_1 (1::'a) gt delta_mono \\<and>\n          (\\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> gt x y)", "obtain xys where xsy: \"xys = (1,0) # xysp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xys.\n        xys = (1::'a, 0::'a) # xysp \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xys = (1::'a, 0::'a) # xysp\n\ngoal (1 subgoal):\n 1. \\<And>xys.\n       \\<forall>x y.\n          (x, y) \\<in> set xys \\<longrightarrow> y < x \\<Longrightarrow>\n       \\<exists>gt.\n          SN_strict_mono_ordered_semiring_1 (1::'a) gt delta_mono \\<and>\n          (\\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> gt x y)", "with orient"], ["proof (chain)\npicking this:\n  \\<forall>x y. (x, y) \\<in> set xysp \\<longrightarrow> y < x\n  xys = (1::'a, 0::'a) # xysp", "have \"\\<And> x y. (x,y) \\<in> set xys \\<Longrightarrow> x > y\""], ["proof (prove)\nusing this:\n  \\<forall>x y. (x, y) \\<in> set xysp \\<longrightarrow> y < x\n  xys = (1::'a, 0::'a) # xysp\n\ngoal (1 subgoal):\n 1. \\<And>x y. (x, y) \\<in> set xys \\<Longrightarrow> y < x", "by auto"], ["proof (state)\nthis:\n  (?x, ?y) \\<in> set xys \\<Longrightarrow> ?y < ?x\n\ngoal (1 subgoal):\n 1. \\<And>xys.\n       \\<forall>x y.\n          (x, y) \\<in> set xys \\<longrightarrow> y < x \\<Longrightarrow>\n       \\<exists>gt.\n          SN_strict_mono_ordered_semiring_1 (1::'a) gt delta_mono \\<and>\n          (\\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> gt x y)", "with delta_minimal_delta"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      (x, y) \\<in> set ?xys \\<Longrightarrow> y < x) \\<Longrightarrow>\n  \\<exists>\\<delta>>0::?'a.\n     \\<forall>x y.\n        (x, y) \\<in> set ?xys \\<longrightarrow> delta_gt \\<delta> x y\n  (?x, ?y) \\<in> set xys \\<Longrightarrow> ?y < ?x", "have \"\\<exists> \\<delta> > 0. \\<forall> x y. (x,y) \\<in> set xys \\<longrightarrow> delta_gt \\<delta> x y\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      (x, y) \\<in> set ?xys \\<Longrightarrow> y < x) \\<Longrightarrow>\n  \\<exists>\\<delta>>0::?'a.\n     \\<forall>x y.\n        (x, y) \\<in> set ?xys \\<longrightarrow> delta_gt \\<delta> x y\n  (?x, ?y) \\<in> set xys \\<Longrightarrow> ?y < ?x\n\ngoal (1 subgoal):\n 1. \\<exists>\\<delta>>0::'a.\n       \\<forall>x y.\n          (x, y) \\<in> set xys \\<longrightarrow> delta_gt \\<delta> x y", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<delta>>0::'a.\n     \\<forall>x y.\n        (x, y) \\<in> set xys \\<longrightarrow> delta_gt \\<delta> x y\n\ngoal (1 subgoal):\n 1. \\<And>xys.\n       \\<forall>x y.\n          (x, y) \\<in> set xys \\<longrightarrow> y < x \\<Longrightarrow>\n       \\<exists>gt.\n          SN_strict_mono_ordered_semiring_1 (1::'a) gt delta_mono \\<and>\n          (\\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> gt x y)", "then"], ["proof (chain)\npicking this:\n  \\<exists>\\<delta>>0::'a.\n     \\<forall>x y.\n        (x, y) \\<in> set xys \\<longrightarrow> delta_gt \\<delta> x y", "obtain \\<delta> where dpos: \"\\<delta> > 0\" and orient: \"\\<And> x y. (x,y) \\<in> set xys \\<Longrightarrow> delta_gt \\<delta> x y\""], ["proof (prove)\nusing this:\n  \\<exists>\\<delta>>0::'a.\n     \\<forall>x y.\n        (x, y) \\<in> set xys \\<longrightarrow> delta_gt \\<delta> x y\n\ngoal (1 subgoal):\n 1. (\\<And>\\<delta>.\n        \\<lbrakk>(0::'a) < \\<delta>;\n         \\<And>x y.\n            (x, y) \\<in> set xys \\<Longrightarrow>\n            delta_gt \\<delta> x y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (0::'a) < \\<delta>\n  (?x, ?y) \\<in> set xys \\<Longrightarrow> delta_gt \\<delta> ?x ?y\n\ngoal (1 subgoal):\n 1. \\<And>xys.\n       \\<forall>x y.\n          (x, y) \\<in> set xys \\<longrightarrow> y < x \\<Longrightarrow>\n       \\<exists>gt.\n          SN_strict_mono_ordered_semiring_1 (1::'a) gt delta_mono \\<and>\n          (\\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> gt x y)", "from orient"], ["proof (chain)\npicking this:\n  (?x, ?y) \\<in> set xys \\<Longrightarrow> delta_gt \\<delta> ?x ?y", "have orient1: \"\\<forall> x y. (x,y) \\<in> set xysp \\<longrightarrow> delta_gt \\<delta> x y\" and orient2: \"delta_gt \\<delta> 1 0\""], ["proof (prove)\nusing this:\n  (?x, ?y) \\<in> set xys \\<Longrightarrow> delta_gt \\<delta> ?x ?y\n\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       (x, y) \\<in> set xysp \\<longrightarrow> delta_gt \\<delta> x y &&&\n    delta_gt \\<delta> (1::'a) (0::'a)", "unfolding xsy"], ["proof (prove)\nusing this:\n  (?x, ?y) \\<in> set ((1::'a, 0::'a) # xysp) \\<Longrightarrow>\n  delta_gt \\<delta> ?x ?y\n\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       (x, y) \\<in> set xysp \\<longrightarrow> delta_gt \\<delta> x y &&&\n    delta_gt \\<delta> (1::'a) (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<forall>x y.\n     (x, y) \\<in> set xysp \\<longrightarrow> delta_gt \\<delta> x y\n  delta_gt \\<delta> (1::'a) (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>xys.\n       \\<forall>x y.\n          (x, y) \\<in> set xys \\<longrightarrow> y < x \\<Longrightarrow>\n       \\<exists>gt.\n          SN_strict_mono_ordered_semiring_1 (1::'a) gt delta_mono \\<and>\n          (\\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> gt x y)", "from orient2"], ["proof (chain)\npicking this:\n  delta_gt \\<delta> (1::'a) (0::'a)", "have oned: \"\\<delta> \\<le> 1\""], ["proof (prove)\nusing this:\n  delta_gt \\<delta> (1::'a) (0::'a)\n\ngoal (1 subgoal):\n 1. \\<delta> \\<le> (1::'a)", "unfolding delta_gt_def"], ["proof (prove)\nusing this:\n  \\<delta> \\<le> (1::'a) - (0::'a)\n\ngoal (1 subgoal):\n 1. \\<delta> \\<le> (1::'a)", "by auto"], ["proof (state)\nthis:\n  \\<delta> \\<le> (1::'a)\n\ngoal (1 subgoal):\n 1. \\<And>xys.\n       \\<forall>x y.\n          (x, y) \\<in> set xys \\<longrightarrow> y < x \\<Longrightarrow>\n       \\<exists>gt.\n          SN_strict_mono_ordered_semiring_1 (1::'a) gt delta_mono \\<and>\n          (\\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> gt x y)", "show \" \\<exists>gt. SN_strict_mono_ordered_semiring_1 1 gt delta_mono \\<and> (\\<forall>x y. (x, y) \\<in> set xysp \\<longrightarrow> gt x y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>gt.\n       SN_strict_mono_ordered_semiring_1 (1::'a) gt delta_mono \\<and>\n       (\\<forall>x y. (x, y) \\<in> set xysp \\<longrightarrow> gt x y)", "by (intro exI conjI, rule delta_interpretation[OF dpos oned], rule orient1)"], ["proof (state)\nthis:\n  \\<exists>gt.\n     SN_strict_mono_ordered_semiring_1 (1::'a) gt delta_mono \\<and>\n     (\\<forall>x y. (x, y) \\<in> set xysp \\<longrightarrow> gt x y)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The standard semiring over the integers\\<close>"], ["", "definition int_mono :: \"int \\<Rightarrow> bool\" where \"int_mono x \\<equiv> x \\<ge> 1\""], ["", "instantiation int :: large_ordered_semiring_1\nbegin"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(int, large_ordered_semiring_1_class)", "proof"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>x. x \\<le> x\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 3. \\<And>x y. max x y = max y x\n 4. \\<And>x y. x \\<le> max x y\n 5. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 6. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 7. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 8. \\<And>z y x.\n       \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 9. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 10. \\<And>y x z.\n        \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n        \\<Longrightarrow> x * z \\<le> y * z\nA total of 12 subgoals...", "fix y :: int"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>x. x \\<le> x\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 3. \\<And>x y. max x y = max y x\n 4. \\<And>x y. x \\<le> max x y\n 5. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 6. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 7. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 8. \\<And>z y x.\n       \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 9. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 10. \\<And>y x z.\n        \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n        \\<Longrightarrow> x * z \\<le> y * z\nA total of 12 subgoals...", "show \"\\<exists> x. of_nat x \\<ge> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. y \\<le> int x", "by (rule exI[of _ \"nat y\"], simp)"], ["proof (state)\nthis:\n  \\<exists>x. y \\<le> int x\n\ngoal (11 subgoals):\n 1. \\<And>x. x \\<le> x\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 3. \\<And>x y. max x y = max y x\n 4. \\<And>x y. x \\<le> max x y\n 5. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 6. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 7. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 8. \\<And>z y x.\n       \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 9. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 10. \\<And>y x z.\n        \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n        \\<Longrightarrow> x * z \\<le> y * z\nA total of 11 subgoals...", "qed (auto simp: mult_right_mono mult_left_mono mult_right_mono_neg)"], ["", "end"], ["", "lemma non_inf_int_gt: \"non_inf {(a,b :: int) . a > b}\" (is \"non_inf ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. non_inf {(a, b). b < a}", "by (rule non_inf_image[OF non_inf_delta_gt, of 1 _ rat_of_int], auto simp: delta_gt_def)"], ["", "interpretation int_SN: SN_strict_mono_ordered_semiring_1 1 \"(>) :: int \\<Rightarrow> int \\<Rightarrow> bool\" int_mono"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_strict_mono_ordered_semiring_1 1 (\\<lambda>x y. y < x) int_mono", "proof (unfold_locales)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>y x z. \\<lbrakk>y \\<le> x; z < y\\<rbrakk> \\<Longrightarrow> z < x\n 2. \\<And>x y z. \\<lbrakk>y < x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z < x\n 3. \\<And>x y. y < x \\<Longrightarrow> y \\<le> x\n 4. 0 \\<le> 1\n 5. \\<And>x y z. y < x \\<Longrightarrow> y + z < x + z\n 6. 0 < 1\n 7. SN {(x, y). 0 \\<le> y \\<and> y < x}\n 8. \\<And>x y z.\n       \\<lbrakk>int_mono x; z < y; 0 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x * z < x * y", "have [simp]: \"\\<And> x :: int . (-1 < x) = (0 \\<le> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. (- 1 < x) = (0 \\<le> x)", "by auto"], ["proof (state)\nthis:\n  (- 1 < ?x) = (0 \\<le> ?x)\n\ngoal (8 subgoals):\n 1. \\<And>y x z. \\<lbrakk>y \\<le> x; z < y\\<rbrakk> \\<Longrightarrow> z < x\n 2. \\<And>x y z. \\<lbrakk>y < x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z < x\n 3. \\<And>x y. y < x \\<Longrightarrow> y \\<le> x\n 4. 0 \\<le> 1\n 5. \\<And>x y z. y < x \\<Longrightarrow> y + z < x + z\n 6. 0 < 1\n 7. SN {(x, y). 0 \\<le> y \\<and> y < x}\n 8. \\<And>x y z.\n       \\<lbrakk>int_mono x; z < y; 0 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x * z < x * y", "show \"SN {(x,y). y \\<ge> 0 \\<and> (y :: int) < x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN {(x, y). 0 \\<le> y \\<and> y < x}", "using non_inf_imp_SN_bound[OF non_inf_int_gt, of \"-1\"]"], ["proof (prove)\nusing this:\n  SN {(a, b).\n      (b, - 1) \\<in> {(a, b). b < a} \\<and> (a, b) \\<in> {(a, b). b < a}}\n\ngoal (1 subgoal):\n 1. SN {(x, y). 0 \\<le> y \\<and> y < x}", "by auto"], ["proof (state)\nthis:\n  SN {(x, y). 0 \\<le> y \\<and> y < x}\n\ngoal (7 subgoals):\n 1. \\<And>y x z. \\<lbrakk>y \\<le> x; z < y\\<rbrakk> \\<Longrightarrow> z < x\n 2. \\<And>x y z. \\<lbrakk>y < x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z < x\n 3. \\<And>x y. y < x \\<Longrightarrow> y \\<le> x\n 4. 0 \\<le> 1\n 5. \\<And>x y z. y < x \\<Longrightarrow> y + z < x + z\n 6. 0 < 1\n 7. \\<And>x y z.\n       \\<lbrakk>int_mono x; z < y; 0 \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x * z < x * y", "qed (auto simp: mult_strict_left_mono int_mono_def)"], ["", "interpretation int_poly: poly_order_carrier 1 \"(>) :: int \\<Rightarrow> int \\<Rightarrow> bool\" True discrete"], ["proof (prove)\ngoal (1 subgoal):\n 1. poly_order_carrier 1 (\\<lambda>x y. y < x) True discrete", "proof (unfold_locales)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>y z x.\n       \\<lbrakk>z < y; 1 \\<le> x\\<rbrakk> \\<Longrightarrow> z * x < y * x\n 2. \\<And>x y n.\n       \\<lbrakk>True; y < x; 0 \\<le> y; 1 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> y ^ n < x ^ n\n 3. \\<And>y x.\n       \\<lbrakk>discrete; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) 1 ^^ k) y", "fix x y :: int"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>y z x.\n       \\<lbrakk>z < y; 1 \\<le> x\\<rbrakk> \\<Longrightarrow> z * x < y * x\n 2. \\<And>x y n.\n       \\<lbrakk>True; y < x; 0 \\<le> y; 1 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> y ^ n < x ^ n\n 3. \\<And>y x.\n       \\<lbrakk>discrete; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) 1 ^^ k) y", "assume ge: \"x \\<ge> y\""], ["proof (state)\nthis:\n  y \\<le> x\n\ngoal (3 subgoals):\n 1. \\<And>y z x.\n       \\<lbrakk>z < y; 1 \\<le> x\\<rbrakk> \\<Longrightarrow> z * x < y * x\n 2. \\<And>x y n.\n       \\<lbrakk>True; y < x; 0 \\<le> y; 1 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> y ^ n < x ^ n\n 3. \\<And>y x.\n       \\<lbrakk>discrete; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) 1 ^^ k) y", "then"], ["proof (chain)\npicking this:\n  y \\<le> x", "obtain k where k: \"x - y = k\" and kp: \"0 \\<le> k\""], ["proof (prove)\nusing this:\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>x - y = k; 0 \\<le> k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x - y = k\n  0 \\<le> k\n\ngoal (3 subgoals):\n 1. \\<And>y z x.\n       \\<lbrakk>z < y; 1 \\<le> x\\<rbrakk> \\<Longrightarrow> z * x < y * x\n 2. \\<And>x y n.\n       \\<lbrakk>True; y < x; 0 \\<le> y; 1 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> y ^ n < x ^ n\n 3. \\<And>y x.\n       \\<lbrakk>discrete; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) 1 ^^ k) y", "then"], ["proof (chain)\npicking this:\n  x - y = k\n  0 \\<le> k", "obtain nk where nk: \"nk = nat k\" and k: \"x - y = int nk\""], ["proof (prove)\nusing this:\n  x - y = k\n  0 \\<le> k\n\ngoal (1 subgoal):\n 1. (\\<And>nk.\n        \\<lbrakk>nk = nat k; x - y = int nk\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  nk = nat k\n  x - y = int nk\n\ngoal (3 subgoals):\n 1. \\<And>y z x.\n       \\<lbrakk>z < y; 1 \\<le> x\\<rbrakk> \\<Longrightarrow> z * x < y * x\n 2. \\<And>x y n.\n       \\<lbrakk>True; y < x; 0 \\<le> y; 1 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> y ^ n < x ^ n\n 3. \\<And>y x.\n       \\<lbrakk>discrete; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k. x = ((+) 1 ^^ k) y", "show \"\\<exists> k. x = ((+) 1 ^^ k) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. x = ((+) 1 ^^ k) y", "proof (rule exI[of _ nk])"], ["proof (state)\ngoal (1 subgoal):\n 1. x = ((+) 1 ^^ nk) y", "from k"], ["proof (chain)\npicking this:\n  x - y = int nk", "have \"x = int nk + y\""], ["proof (prove)\nusing this:\n  x - y = int nk\n\ngoal (1 subgoal):\n 1. x = int nk + y", "by simp"], ["proof (state)\nthis:\n  x = int nk + y\n\ngoal (1 subgoal):\n 1. x = ((+) 1 ^^ nk) y", "also"], ["proof (state)\nthis:\n  x = int nk + y\n\ngoal (1 subgoal):\n 1. x = ((+) 1 ^^ nk) y", "have \"\\<dots> = ((+) 1 ^^ nk) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int nk + y = ((+) 1 ^^ nk) y", "by (induct nk, auto)"], ["proof (state)\nthis:\n  int nk + y = ((+) 1 ^^ nk) y\n\ngoal (1 subgoal):\n 1. x = ((+) 1 ^^ nk) y", "finally"], ["proof (chain)\npicking this:\n  x = ((+) 1 ^^ nk) y", "show \"x = ((+) 1 ^^ nk) y\""], ["proof (prove)\nusing this:\n  x = ((+) 1 ^^ nk) y\n\ngoal (1 subgoal):\n 1. x = ((+) 1 ^^ nk) y", "."], ["proof (state)\nthis:\n  x = ((+) 1 ^^ nk) y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>k. x = ((+) 1 ^^ k) y\n\ngoal (2 subgoals):\n 1. \\<And>y z x.\n       \\<lbrakk>z < y; 1 \\<le> x\\<rbrakk> \\<Longrightarrow> z * x < y * x\n 2. \\<And>x y n.\n       \\<lbrakk>True; y < x; 0 \\<le> y; 1 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> y ^ n < x ^ n", "qed (auto simp: field_simps power_strict_mono)"], ["", "subsection \\<open>The arctic semiring over the integers\\<close>"], ["", "text \\<open>plus is interpreted as max, times is interpreted as plus, 0 is -infinity, 1 is 0\\<close>"], ["", "datatype arctic = MinInfty | Num_arc int"], ["", "instantiation arctic :: ord\nbegin"], ["", "fun less_eq_arctic :: \"arctic \\<Rightarrow> arctic \\<Rightarrow> bool\" where \n  \"less_eq_arctic MinInfty x = True\"\n| \"less_eq_arctic (Num_arc _) MinInfty = False\"\n| \"less_eq_arctic (Num_arc y) (Num_arc x) = (y \\<le> x)\""], ["", "fun less_arctic :: \"arctic \\<Rightarrow> arctic \\<Rightarrow> bool\" where \n  \"less_arctic MinInfty x = True\"\n| \"less_arctic (Num_arc _) MinInfty = False\"\n| \"less_arctic (Num_arc y) (Num_arc x) = (y < x)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(arctic, ord_class)", ".."], ["", "end"], ["", "instantiation arctic :: ordered_semiring_1\nbegin"], ["", "fun plus_arctic :: \"arctic \\<Rightarrow> arctic \\<Rightarrow> arctic\" where\n  \"plus_arctic MinInfty y = y\"\n| \"plus_arctic x MinInfty = x\"\n| \"plus_arctic (Num_arc x) (Num_arc y) = (Num_arc (max x y))\""], ["", "fun times_arctic :: \"arctic \\<Rightarrow> arctic \\<Rightarrow> arctic\" where \n  \"times_arctic MinInfty y = MinInfty\"\n| \"times_arctic x MinInfty = MinInfty\"\n| \"times_arctic (Num_arc x) (Num_arc y) = (Num_arc (x + y))\""], ["", "definition zero_arctic :: arctic where \n  \"zero_arctic = MinInfty\""], ["", "definition one_arctic :: arctic where \n  \"one_arctic = Num_arc 0\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(arctic, ordered_semiring_1_class)", "proof"], ["proof (state)\ngoal (23 subgoals):\n 1. \\<And>a b c. a * b * c = a * (b * c)\n 2. \\<And>a. 1 * a = a\n 3. \\<And>a. a * 1 = a\n 4. \\<And>a b c. a + b + c = a + (b + c)\n 5. \\<And>a b. a + b = b + a\n 6. \\<And>a. 0 + a = a\n 7. \\<And>a. 0 * a = 0\n 8. \\<And>a. a * 0 = 0\n 9. \\<And>a b c. (a + b) * c = a * c + b * c\n 10. \\<And>a b c. a * (b + c) = a * b + a * c\nA total of 23 subgoals...", "fix x y z :: arctic"], ["proof (state)\ngoal (23 subgoals):\n 1. \\<And>a b c. a * b * c = a * (b * c)\n 2. \\<And>a. 1 * a = a\n 3. \\<And>a. a * 1 = a\n 4. \\<And>a b c. a + b + c = a + (b + c)\n 5. \\<And>a b. a + b = b + a\n 6. \\<And>a. 0 + a = a\n 7. \\<And>a. 0 * a = 0\n 8. \\<And>a. a * 0 = 0\n 9. \\<And>a b c. (a + b) * c = a * c + b * c\n 10. \\<And>a b c. a * (b + c) = a * b + a * c\nA total of 23 subgoals...", "show \"x + y = y + x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x + y = y + x", "by (cases x, cases y, auto, cases y, auto)"], ["proof (state)\nthis:\n  x + y = y + x\n\ngoal (22 subgoals):\n 1. \\<And>a b c. a * b * c = a * (b * c)\n 2. \\<And>a. 1 * a = a\n 3. \\<And>a. a * 1 = a\n 4. \\<And>a b c. a + b + c = a + (b + c)\n 5. \\<And>a. 0 + a = a\n 6. \\<And>a. 0 * a = 0\n 7. \\<And>a. a * 0 = 0\n 8. \\<And>a b c. (a + b) * c = a * c + b * c\n 9. \\<And>a b c. a * (b + c) = a * b + a * c\n 10. 0 \\<noteq> 1\nA total of 22 subgoals...", "show \"(x + y) + z = x + (y + z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x + y + z = x + (y + z)", "by (cases x, auto, cases y, auto, cases z, auto)"], ["proof (state)\nthis:\n  x + y + z = x + (y + z)\n\ngoal (21 subgoals):\n 1. \\<And>a b c. a * b * c = a * (b * c)\n 2. \\<And>a. 1 * a = a\n 3. \\<And>a. a * 1 = a\n 4. \\<And>a. 0 + a = a\n 5. \\<And>a. 0 * a = 0\n 6. \\<And>a. a * 0 = 0\n 7. \\<And>a b c. (a + b) * c = a * c + b * c\n 8. \\<And>a b c. a * (b + c) = a * b + a * c\n 9. 0 \\<noteq> 1\n 10. \\<And>a. a + 0 = a\nA total of 21 subgoals...", "show \"(x * y) * z = x * (y * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * y * z = x * (y * z)", "by (cases x, auto, cases y, auto, cases z, auto)"], ["proof (state)\nthis:\n  x * y * z = x * (y * z)\n\ngoal (20 subgoals):\n 1. \\<And>a. 1 * a = a\n 2. \\<And>a. a * 1 = a\n 3. \\<And>a. 0 + a = a\n 4. \\<And>a. 0 * a = 0\n 5. \\<And>a. a * 0 = 0\n 6. \\<And>a b c. (a + b) * c = a * c + b * c\n 7. \\<And>a b c. a * (b + c) = a * b + a * c\n 8. 0 \\<noteq> 1\n 9. \\<And>a. a + 0 = a\n 10. \\<And>x. x \\<le> x\nA total of 20 subgoals...", "show \"x * 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * 0 = 0", "by (cases x, auto simp: zero_arctic_def)"], ["proof (state)\nthis:\n  x * 0 = 0\n\ngoal (19 subgoals):\n 1. \\<And>a. 1 * a = a\n 2. \\<And>a. a * 1 = a\n 3. \\<And>a. 0 + a = a\n 4. \\<And>a. 0 * a = 0\n 5. \\<And>a b c. (a + b) * c = a * c + b * c\n 6. \\<And>a b c. a * (b + c) = a * b + a * c\n 7. 0 \\<noteq> 1\n 8. \\<And>a. a + 0 = a\n 9. \\<And>x. x \\<le> x\n 10. \\<And>y x z.\n        \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\nA total of 19 subgoals...", "show \"x * (y + z) = x * y + x * z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * (y + z) = x * y + x * z", "by (cases x, auto, cases y, auto, cases z, auto)"], ["proof (state)\nthis:\n  x * (y + z) = x * y + x * z\n\ngoal (18 subgoals):\n 1. \\<And>a. 1 * a = a\n 2. \\<And>a. a * 1 = a\n 3. \\<And>a. 0 + a = a\n 4. \\<And>a. 0 * a = 0\n 5. \\<And>a b c. (a + b) * c = a * c + b * c\n 6. 0 \\<noteq> 1\n 7. \\<And>a. a + 0 = a\n 8. \\<And>x. x \\<le> x\n 9. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 10. \\<And>x y. max x y = max y x\nA total of 18 subgoals...", "show \"(x + y) * z = x * z + y * z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y) * z = x * z + y * z", "by (cases x, auto, cases y, cases z, auto, cases z, auto)"], ["proof (state)\nthis:\n  (x + y) * z = x * z + y * z\n\ngoal (17 subgoals):\n 1. \\<And>a. 1 * a = a\n 2. \\<And>a. a * 1 = a\n 3. \\<And>a. 0 + a = a\n 4. \\<And>a. 0 * a = 0\n 5. 0 \\<noteq> 1\n 6. \\<And>a. a + 0 = a\n 7. \\<And>x. x \\<le> x\n 8. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 9. \\<And>x y. max x y = max y x\n 10. \\<And>x y. x \\<le> max x y\nA total of 17 subgoals...", "show \"1 * x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 * x = x", "by (cases x, simp_all add: one_arctic_def)"], ["proof (state)\nthis:\n  1 * x = x\n\ngoal (16 subgoals):\n 1. \\<And>a. a * 1 = a\n 2. \\<And>a. 0 + a = a\n 3. \\<And>a. 0 * a = 0\n 4. 0 \\<noteq> 1\n 5. \\<And>a. a + 0 = a\n 6. \\<And>x. x \\<le> x\n 7. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 8. \\<And>x y. max x y = max y x\n 9. \\<And>x y. x \\<le> max x y\n 10. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\nA total of 16 subgoals...", "show \"x * 1 = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * 1 = x", "by (cases x, simp_all add: one_arctic_def)"], ["proof (state)\nthis:\n  x * 1 = x\n\ngoal (15 subgoals):\n 1. \\<And>a. 0 + a = a\n 2. \\<And>a. 0 * a = 0\n 3. 0 \\<noteq> 1\n 4. \\<And>a. a + 0 = a\n 5. \\<And>x. x \\<le> x\n 6. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 7. \\<And>x y. max x y = max y x\n 8. \\<And>x y. x \\<le> max x y\n 9. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 10. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\nA total of 15 subgoals...", "show \"0 + x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 + x = x", "by (simp add: zero_arctic_def)"], ["proof (state)\nthis:\n  0 + x = x\n\ngoal (14 subgoals):\n 1. \\<And>a. 0 * a = 0\n 2. 0 \\<noteq> 1\n 3. \\<And>a. a + 0 = a\n 4. \\<And>x. x \\<le> x\n 5. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 6. \\<And>x y. max x y = max y x\n 7. \\<And>x y. x \\<le> max x y\n 8. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 9. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 10. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\nA total of 14 subgoals...", "show \"0 * x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 * x = 0", "by (simp add: zero_arctic_def)"], ["proof (state)\nthis:\n  0 * x = 0\n\ngoal (13 subgoals):\n 1. 0 \\<noteq> 1\n 2. \\<And>a. a + 0 = a\n 3. \\<And>x. x \\<le> x\n 4. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 5. \\<And>x y. max x y = max y x\n 6. \\<And>x y. x \\<le> max x y\n 7. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 8. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 9. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 10. \\<And>z y x.\n        \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> y * z \\<le> x * z\nA total of 13 subgoals...", "show \"(0 :: arctic) \\<noteq> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<noteq> 1", "by (simp add: zero_arctic_def one_arctic_def)"], ["proof (state)\nthis:\n  0 \\<noteq> 1\n\ngoal (12 subgoals):\n 1. \\<And>a. a + 0 = a\n 2. \\<And>x. x \\<le> x\n 3. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 4. \\<And>x y. max x y = max y x\n 5. \\<And>x y. x \\<le> max x y\n 6. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 7. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 8. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 9. \\<And>z y x.\n       \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 10. \\<And>x z y.\n        \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n        \\<Longrightarrow> x * z \\<le> x * y\nA total of 12 subgoals...", "show \"x + 0 = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x + 0 = x", "by (cases x, auto simp: zero_arctic_def)"], ["proof (state)\nthis:\n  x + 0 = x\n\ngoal (11 subgoals):\n 1. \\<And>x. x \\<le> x\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 3. \\<And>x y. max x y = max y x\n 4. \\<And>x y. x \\<le> max x y\n 5. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 6. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 7. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 8. \\<And>z y x.\n       \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 9. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 10. \\<And>y x z.\n        \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n        \\<Longrightarrow> x * z \\<le> y * z\nA total of 11 subgoals...", "show \"x \\<ge> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> x", "by (cases x, auto)"], ["proof (state)\nthis:\n  x \\<le> x\n\ngoal (10 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>x y. max x y = max y x\n 3. \\<And>x y. x \\<le> max x y\n 4. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 5. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 6. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 7. \\<And>z y x.\n       \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 8. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 9. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z\n 10. 0 \\<le> 1", "show \"(1 :: arctic) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 1", "by (simp add: zero_arctic_def one_arctic_def)"], ["proof (state)\nthis:\n  0 \\<le> 1\n\ngoal (9 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>x y. max x y = max y x\n 3. \\<And>x y. x \\<le> max x y\n 4. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 5. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 6. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 7. \\<And>z y x.\n       \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 8. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 9. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "show \"max x y = max y x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max x y = max y x", "unfolding max_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if x \\<le> y then y else x) = (if y \\<le> x then x else y)", "by (cases x, (cases y, auto)+)"], ["proof (state)\nthis:\n  max x y = max y x\n\ngoal (8 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>x y. x \\<le> max x y\n 3. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 4. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 5. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 6. \\<And>z y x.\n       \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 7. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 8. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "show \"max x y \\<ge> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> max x y", "unfolding max_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> (if x \\<le> y then y else x)", "by (cases x, (cases y, auto)+)"], ["proof (state)\nthis:\n  x \\<le> max x y\n\ngoal (7 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 3. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 4. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 5. \\<And>z y x.\n       \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 6. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 7. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "assume ge: \"x \\<ge> y\""], ["proof (state)\nthis:\n  y \\<le> x\n\ngoal (7 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 3. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 4. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 5. \\<And>z y x.\n       \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 6. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 7. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "from ge"], ["proof (chain)\npicking this:\n  y \\<le> x", "show \"x + z \\<ge> y + z\""], ["proof (prove)\nusing this:\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. y + z \\<le> x + z", "by (cases x, cases y, cases z, auto, cases y, cases z, auto, cases z, auto)"], ["proof (state)\nthis:\n  y + z \\<le> x + z\n\ngoal (6 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 3. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 4. \\<And>z y x.\n       \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 5. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 6. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "from ge"], ["proof (chain)\npicking this:\n  y \\<le> x", "show \"x * z \\<ge> y * z\""], ["proof (prove)\nusing this:\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. y * z \\<le> x * z", "by (cases x, cases y, cases z, auto, cases y, cases z, auto, cases z, auto)"], ["proof (state)\nthis:\n  y * z \\<le> x * z\n\ngoal (5 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 3. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 4. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 5. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "from ge"], ["proof (chain)\npicking this:\n  y \\<le> x", "show \"max x y = x\""], ["proof (prove)\nusing this:\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. max x y = x", "unfolding max_def"], ["proof (prove)\nusing this:\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. (if x \\<le> y then y else x) = x", "by (cases x, (cases y, auto)+)"], ["proof (state)\nthis:\n  max x y = x\n\ngoal (4 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 3. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 4. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "from ge"], ["proof (chain)\npicking this:\n  y \\<le> x", "show \"max z x \\<ge> max z y\""], ["proof (prove)\nusing this:\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. max z y \\<le> max z x", "unfolding max_def"], ["proof (prove)\nusing this:\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. (if z \\<le> y then y else z) \\<le> (if z \\<le> x then x else z)", "by (cases z, cases x, auto, cases x, (cases y, auto)+)"], ["proof (state)\nthis:\n  max z y \\<le> max z x\n\ngoal (3 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 3. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 3. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "fix x y z :: arctic"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 3. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "assume \"x \\<ge> y\" and \"y \\<ge> z\""], ["proof (state)\nthis:\n  y \\<le> x\n  z \\<le> y\n\ngoal (3 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 3. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "thus \"x \\<ge> z\""], ["proof (prove)\nusing this:\n  y \\<le> x\n  z \\<le> y\n\ngoal (1 subgoal):\n 1. z \\<le> x", "by (cases x, cases y, auto, cases y, cases z, auto, cases z, auto)"], ["proof (state)\nthis:\n  z \\<le> x\n\ngoal (2 subgoals):\n 1. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "fix x y z :: arctic"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "assume \"y \\<ge> z\""], ["proof (state)\nthis:\n  z \\<le> y\n\ngoal (2 subgoals):\n 1. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "thus \"x * y \\<ge> x * z\""], ["proof (prove)\nusing this:\n  z \\<le> y\n\ngoal (1 subgoal):\n 1. x * z \\<le> x * y", "by (cases x, cases y, cases z, auto, cases y, cases z, auto, cases z, auto)"], ["proof (state)\nthis:\n  x * z \\<le> x * y\n\ngoal (1 subgoal):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "fix x y z :: arctic"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "show \"x \\<ge> y \\<Longrightarrow> 0 \\<ge> z \\<Longrightarrow> y * z \\<ge> x * z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n    \\<Longrightarrow> x * z \\<le> y * z", "by (cases z, cases x, auto simp: zero_arctic_def)"], ["proof (state)\nthis:\n  \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk> \\<Longrightarrow> x * z \\<le> y * z\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "fun get_arctic_num :: \"arctic \\<Rightarrow> int\"\nwhere \"get_arctic_num (Num_arc n) = n\""], ["", "fun pos_arctic :: \"arctic \\<Rightarrow> bool\"\nwhere \"pos_arctic MinInfty = False\"\n    | \"pos_arctic (Num_arc n) = (0 <= n)\""], ["", "interpretation arctic_SN: SN_both_mono_ordered_semiring_1 1 \"(>)\" pos_arctic"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_both_mono_ordered_semiring_1 1 (\\<lambda>x y. y < x) pos_arctic", "proof"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>y x z. \\<lbrakk>y \\<le> x; z < y\\<rbrakk> \\<Longrightarrow> z < x\n 2. \\<And>x y z. \\<lbrakk>y < x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z < x\n 3. \\<And>x y. y < x \\<Longrightarrow> y \\<le> x\n 4. 0 \\<le> 1\n 5. \\<And>x y z u.\n       \\<lbrakk>y < x; u < z\\<rbrakk> \\<Longrightarrow> y + u < x + z\n 6. \\<And>x y z. y < x \\<Longrightarrow> y * z < x * z\n 7. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 8. \\<And>x. 0 < x\n 9. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 10. \\<And>x. 0 \\<le> x\nA total of 16 subgoals...", "fix x y z :: arctic"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>y x z. \\<lbrakk>y \\<le> x; z < y\\<rbrakk> \\<Longrightarrow> z < x\n 2. \\<And>x y z. \\<lbrakk>y < x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z < x\n 3. \\<And>x y. y < x \\<Longrightarrow> y \\<le> x\n 4. 0 \\<le> 1\n 5. \\<And>x y z u.\n       \\<lbrakk>y < x; u < z\\<rbrakk> \\<Longrightarrow> y + u < x + z\n 6. \\<And>x y z. y < x \\<Longrightarrow> y * z < x * z\n 7. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 8. \\<And>x. 0 < x\n 9. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 10. \\<And>x. 0 \\<le> x\nA total of 16 subgoals...", "assume \"x \\<ge> y\" and \"y > z\""], ["proof (state)\nthis:\n  y \\<le> x\n  z < y\n\ngoal (16 subgoals):\n 1. \\<And>y x z. \\<lbrakk>y \\<le> x; z < y\\<rbrakk> \\<Longrightarrow> z < x\n 2. \\<And>x y z. \\<lbrakk>y < x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z < x\n 3. \\<And>x y. y < x \\<Longrightarrow> y \\<le> x\n 4. 0 \\<le> 1\n 5. \\<And>x y z u.\n       \\<lbrakk>y < x; u < z\\<rbrakk> \\<Longrightarrow> y + u < x + z\n 6. \\<And>x y z. y < x \\<Longrightarrow> y * z < x * z\n 7. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 8. \\<And>x. 0 < x\n 9. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 10. \\<And>x. 0 \\<le> x\nA total of 16 subgoals...", "thus \"x > z\""], ["proof (prove)\nusing this:\n  y \\<le> x\n  z < y\n\ngoal (1 subgoal):\n 1. z < x", "by (cases z, simp, cases y, simp, cases x, auto)"], ["proof (state)\nthis:\n  z < x\n\ngoal (15 subgoals):\n 1. \\<And>x y z. \\<lbrakk>y < x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z < x\n 2. \\<And>x y. y < x \\<Longrightarrow> y \\<le> x\n 3. 0 \\<le> 1\n 4. \\<And>x y z u.\n       \\<lbrakk>y < x; u < z\\<rbrakk> \\<Longrightarrow> y + u < x + z\n 5. \\<And>x y z. y < x \\<Longrightarrow> y * z < x * z\n 6. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 7. \\<And>x. 0 < x\n 8. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 9. \\<And>x. 0 \\<le> x\n 10. pos_arctic 1\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>x y z. \\<lbrakk>y < x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z < x\n 2. \\<And>x y. y < x \\<Longrightarrow> y \\<le> x\n 3. 0 \\<le> 1\n 4. \\<And>x y z u.\n       \\<lbrakk>y < x; u < z\\<rbrakk> \\<Longrightarrow> y + u < x + z\n 5. \\<And>x y z. y < x \\<Longrightarrow> y * z < x * z\n 6. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 7. \\<And>x. 0 < x\n 8. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 9. \\<And>x. 0 \\<le> x\n 10. pos_arctic 1\nA total of 15 subgoals...", "fix x y z :: arctic"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>x y z. \\<lbrakk>y < x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z < x\n 2. \\<And>x y. y < x \\<Longrightarrow> y \\<le> x\n 3. 0 \\<le> 1\n 4. \\<And>x y z u.\n       \\<lbrakk>y < x; u < z\\<rbrakk> \\<Longrightarrow> y + u < x + z\n 5. \\<And>x y z. y < x \\<Longrightarrow> y * z < x * z\n 6. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 7. \\<And>x. 0 < x\n 8. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 9. \\<And>x. 0 \\<le> x\n 10. pos_arctic 1\nA total of 15 subgoals...", "assume \"x > y\" and \"y \\<ge> z\""], ["proof (state)\nthis:\n  y < x\n  z \\<le> y\n\ngoal (15 subgoals):\n 1. \\<And>x y z. \\<lbrakk>y < x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z < x\n 2. \\<And>x y. y < x \\<Longrightarrow> y \\<le> x\n 3. 0 \\<le> 1\n 4. \\<And>x y z u.\n       \\<lbrakk>y < x; u < z\\<rbrakk> \\<Longrightarrow> y + u < x + z\n 5. \\<And>x y z. y < x \\<Longrightarrow> y * z < x * z\n 6. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 7. \\<And>x. 0 < x\n 8. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 9. \\<And>x. 0 \\<le> x\n 10. pos_arctic 1\nA total of 15 subgoals...", "thus \"x > z\""], ["proof (prove)\nusing this:\n  y < x\n  z \\<le> y\n\ngoal (1 subgoal):\n 1. z < x", "by (cases z, simp, cases y, simp, cases x, auto)"], ["proof (state)\nthis:\n  z < x\n\ngoal (14 subgoals):\n 1. \\<And>x y. y < x \\<Longrightarrow> y \\<le> x\n 2. 0 \\<le> 1\n 3. \\<And>x y z u.\n       \\<lbrakk>y < x; u < z\\<rbrakk> \\<Longrightarrow> y + u < x + z\n 4. \\<And>x y z. y < x \\<Longrightarrow> y * z < x * z\n 5. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 6. \\<And>x. 0 < x\n 7. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 8. \\<And>x. 0 \\<le> x\n 9. pos_arctic 1\n 10. \\<not> pos_arctic 0\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>x y. y < x \\<Longrightarrow> y \\<le> x\n 2. 0 \\<le> 1\n 3. \\<And>x y z u.\n       \\<lbrakk>y < x; u < z\\<rbrakk> \\<Longrightarrow> y + u < x + z\n 4. \\<And>x y z. y < x \\<Longrightarrow> y * z < x * z\n 5. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 6. \\<And>x. 0 < x\n 7. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 8. \\<And>x. 0 \\<le> x\n 9. pos_arctic 1\n 10. \\<not> pos_arctic 0\nA total of 14 subgoals...", "fix x y z :: arctic"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>x y. y < x \\<Longrightarrow> y \\<le> x\n 2. 0 \\<le> 1\n 3. \\<And>x y z u.\n       \\<lbrakk>y < x; u < z\\<rbrakk> \\<Longrightarrow> y + u < x + z\n 4. \\<And>x y z. y < x \\<Longrightarrow> y * z < x * z\n 5. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 6. \\<And>x. 0 < x\n 7. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 8. \\<And>x. 0 \\<le> x\n 9. pos_arctic 1\n 10. \\<not> pos_arctic 0\nA total of 14 subgoals...", "assume \"x > y\""], ["proof (state)\nthis:\n  y < x\n\ngoal (14 subgoals):\n 1. \\<And>x y. y < x \\<Longrightarrow> y \\<le> x\n 2. 0 \\<le> 1\n 3. \\<And>x y z u.\n       \\<lbrakk>y < x; u < z\\<rbrakk> \\<Longrightarrow> y + u < x + z\n 4. \\<And>x y z. y < x \\<Longrightarrow> y * z < x * z\n 5. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 6. \\<And>x. 0 < x\n 7. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 8. \\<And>x. 0 \\<le> x\n 9. pos_arctic 1\n 10. \\<not> pos_arctic 0\nA total of 14 subgoals...", "thus \"x \\<ge> y\""], ["proof (prove)\nusing this:\n  y < x\n\ngoal (1 subgoal):\n 1. y \\<le> x", "by (cases x, (cases y, auto)+)"], ["proof (state)\nthis:\n  y \\<le> x\n\ngoal (13 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>x y z u.\n       \\<lbrakk>y < x; u < z\\<rbrakk> \\<Longrightarrow> y + u < x + z\n 3. \\<And>x y z. y < x \\<Longrightarrow> y * z < x * z\n 4. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 5. \\<And>x. 0 < x\n 6. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 7. \\<And>x. 0 \\<le> x\n 8. pos_arctic 1\n 9. \\<not> pos_arctic 0\n 10. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>x y z u.\n       \\<lbrakk>y < x; u < z\\<rbrakk> \\<Longrightarrow> y + u < x + z\n 3. \\<And>x y z. y < x \\<Longrightarrow> y * z < x * z\n 4. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 5. \\<And>x. 0 < x\n 6. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 7. \\<And>x. 0 \\<le> x\n 8. pos_arctic 1\n 9. \\<not> pos_arctic 0\n 10. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\nA total of 13 subgoals...", "fix x y z u :: arctic"], ["proof (state)\ngoal (13 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>x y z u.\n       \\<lbrakk>y < x; u < z\\<rbrakk> \\<Longrightarrow> y + u < x + z\n 3. \\<And>x y z. y < x \\<Longrightarrow> y * z < x * z\n 4. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 5. \\<And>x. 0 < x\n 6. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 7. \\<And>x. 0 \\<le> x\n 8. pos_arctic 1\n 9. \\<not> pos_arctic 0\n 10. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\nA total of 13 subgoals...", "assume \"x > y\" and \"z > u\""], ["proof (state)\nthis:\n  y < x\n  u < z\n\ngoal (13 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>x y z u.\n       \\<lbrakk>y < x; u < z\\<rbrakk> \\<Longrightarrow> y + u < x + z\n 3. \\<And>x y z. y < x \\<Longrightarrow> y * z < x * z\n 4. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 5. \\<And>x. 0 < x\n 6. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 7. \\<And>x. 0 \\<le> x\n 8. pos_arctic 1\n 9. \\<not> pos_arctic 0\n 10. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\nA total of 13 subgoals...", "thus \"x + z > y + u\""], ["proof (prove)\nusing this:\n  y < x\n  u < z\n\ngoal (1 subgoal):\n 1. y + u < x + z", "by (cases y, cases u, simp, cases z, auto, cases x, auto, cases u, auto, cases z, auto, cases x, auto, cases x, auto, cases z, auto, cases x, auto)"], ["proof (state)\nthis:\n  y + u < x + z\n\ngoal (12 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>x y z. y < x \\<Longrightarrow> y * z < x * z\n 3. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 4. \\<And>x. 0 < x\n 5. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 6. \\<And>x. 0 \\<le> x\n 7. pos_arctic 1\n 8. \\<not> pos_arctic 0\n 9. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\n 10. \\<And>x y.\n        \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n        \\<Longrightarrow> pos_arctic (x * y)\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>x y z. y < x \\<Longrightarrow> y * z < x * z\n 3. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 4. \\<And>x. 0 < x\n 5. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 6. \\<And>x. 0 \\<le> x\n 7. pos_arctic 1\n 8. \\<not> pos_arctic 0\n 9. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\n 10. \\<And>x y.\n        \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n        \\<Longrightarrow> pos_arctic (x * y)\nA total of 12 subgoals...", "fix x y z :: arctic"], ["proof (state)\ngoal (12 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>x y z. y < x \\<Longrightarrow> y * z < x * z\n 3. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 4. \\<And>x. 0 < x\n 5. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 6. \\<And>x. 0 \\<le> x\n 7. pos_arctic 1\n 8. \\<not> pos_arctic 0\n 9. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\n 10. \\<And>x y.\n        \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n        \\<Longrightarrow> pos_arctic (x * y)\nA total of 12 subgoals...", "assume \"x > y\""], ["proof (state)\nthis:\n  y < x\n\ngoal (12 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>x y z. y < x \\<Longrightarrow> y * z < x * z\n 3. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 4. \\<And>x. 0 < x\n 5. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 6. \\<And>x. 0 \\<le> x\n 7. pos_arctic 1\n 8. \\<not> pos_arctic 0\n 9. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\n 10. \\<And>x y.\n        \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n        \\<Longrightarrow> pos_arctic (x * y)\nA total of 12 subgoals...", "thus \"x * z > y * z\""], ["proof (prove)\nusing this:\n  y < x\n\ngoal (1 subgoal):\n 1. y * z < x * z", "by (cases y, simp, cases z, simp, cases x, auto)"], ["proof (state)\nthis:\n  y * z < x * z\n\ngoal (11 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 3. \\<And>x. 0 < x\n 4. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 5. \\<And>x. 0 \\<le> x\n 6. pos_arctic 1\n 7. \\<not> pos_arctic 0\n 8. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\n 9. \\<And>x y.\n       \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic (x * y)\n 10. \\<And>c d.\n        pos_arctic d \\<Longrightarrow>\n        \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 3. \\<And>x. 0 < x\n 4. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 5. \\<And>x. 0 \\<le> x\n 6. pos_arctic 1\n 7. \\<not> pos_arctic 0\n 8. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\n 9. \\<And>x y.\n       \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic (x * y)\n 10. \\<And>c d.\n        pos_arctic d \\<Longrightarrow>\n        \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\nA total of 11 subgoals...", "fix x :: arctic"], ["proof (state)\ngoal (11 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 3. \\<And>x. 0 < x\n 4. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 5. \\<And>x. 0 \\<le> x\n 6. pos_arctic 1\n 7. \\<not> pos_arctic 0\n 8. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\n 9. \\<And>x y.\n       \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic (x * y)\n 10. \\<And>c d.\n        pos_arctic d \\<Longrightarrow>\n        \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\nA total of 11 subgoals...", "assume \"0 > x\""], ["proof (state)\nthis:\n  x < 0\n\ngoal (11 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 3. \\<And>x. 0 < x\n 4. \\<And>x. x < 0 \\<Longrightarrow> x = 0\n 5. \\<And>x. 0 \\<le> x\n 6. pos_arctic 1\n 7. \\<not> pos_arctic 0\n 8. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\n 9. \\<And>x y.\n       \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic (x * y)\n 10. \\<And>c d.\n        pos_arctic d \\<Longrightarrow>\n        \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\nA total of 11 subgoals...", "thus \"x = 0\""], ["proof (prove)\nusing this:\n  x < 0\n\ngoal (1 subgoal):\n 1. x = 0", "by (cases x, auto simp: zero_arctic_def)"], ["proof (state)\nthis:\n  x = 0\n\ngoal (10 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 3. \\<And>x. 0 < x\n 4. \\<And>x. 0 \\<le> x\n 5. pos_arctic 1\n 6. \\<not> pos_arctic 0\n 7. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\n 8. \\<And>x y.\n       \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic (x * y)\n 9. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n 10. SN {(x, y). pos_arctic y \\<and> y < x}", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 3. \\<And>x. 0 < x\n 4. \\<And>x. 0 \\<le> x\n 5. pos_arctic 1\n 6. \\<not> pos_arctic 0\n 7. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\n 8. \\<And>x y.\n       \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic (x * y)\n 9. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n 10. SN {(x, y). pos_arctic y \\<and> y < x}", "fix x :: arctic"], ["proof (state)\ngoal (10 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 3. \\<And>x. 0 < x\n 4. \\<And>x. 0 \\<le> x\n 5. pos_arctic 1\n 6. \\<not> pos_arctic 0\n 7. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\n 8. \\<And>x y.\n       \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic (x * y)\n 9. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n 10. SN {(x, y). pos_arctic y \\<and> y < x}", "show \"pos_arctic 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_arctic 1", "unfolding one_arctic_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_arctic (Num_arc 0)", "by simp"], ["proof (state)\nthis:\n  pos_arctic 1\n\ngoal (9 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 3. \\<And>x. 0 < x\n 4. \\<And>x. 0 \\<le> x\n 5. \\<not> pos_arctic 0\n 6. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\n 7. \\<And>x y.\n       \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic (x * y)\n 8. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n 9. SN {(x, y). pos_arctic y \\<and> y < x}", "show \"x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < x", "unfolding zero_arctic_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. MinInfty < x", "by simp"], ["proof (state)\nthis:\n  0 < x\n\ngoal (8 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 3. \\<And>x. 0 \\<le> x\n 4. \\<not> pos_arctic 0\n 5. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\n 6. \\<And>x y.\n       \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic (x * y)\n 7. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n 8. SN {(x, y). pos_arctic y \\<and> y < x}", "show \"(1 :: arctic) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 1", "unfolding zero_arctic_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. MinInfty \\<le> 1", "by simp"], ["proof (state)\nthis:\n  0 \\<le> 1\n\ngoal (7 subgoals):\n 1. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 2. \\<And>x. 0 \\<le> x\n 3. \\<not> pos_arctic 0\n 4. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\n 5. \\<And>x y.\n       \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic (x * y)\n 6. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n 7. SN {(x, y). pos_arctic y \\<and> y < x}", "show \"x \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> x", "unfolding zero_arctic_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. MinInfty \\<le> x", "by simp"], ["proof (state)\nthis:\n  0 \\<le> x\n\ngoal (6 subgoals):\n 1. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 2. \\<not> pos_arctic 0\n 3. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\n 4. \\<And>x y.\n       \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic (x * y)\n 5. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n 6. SN {(x, y). pos_arctic y \\<and> y < x}", "show \"\\<not> pos_arctic 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> pos_arctic 0", "unfolding zero_arctic_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> pos_arctic MinInfty", "by simp"], ["proof (state)\nthis:\n  \\<not> pos_arctic 0\n\ngoal (5 subgoals):\n 1. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 2. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\n 3. \\<And>x y.\n       \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic (x * y)\n 4. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n 5. SN {(x, y). pos_arctic y \\<and> y < x}", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 2. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\n 3. \\<And>x y.\n       \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic (x * y)\n 4. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n 5. SN {(x, y). pos_arctic y \\<and> y < x}", "fix x y"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 2. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\n 3. \\<And>x y.\n       \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic (x * y)\n 4. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n 5. SN {(x, y). pos_arctic y \\<and> y < x}", "assume \"pos_arctic x\""], ["proof (state)\nthis:\n  pos_arctic x\n\ngoal (5 subgoals):\n 1. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 2. \\<And>x y. pos_arctic x \\<Longrightarrow> pos_arctic (x + y)\n 3. \\<And>x y.\n       \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic (x * y)\n 4. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n 5. SN {(x, y). pos_arctic y \\<and> y < x}", "thus \"pos_arctic (x + y)\""], ["proof (prove)\nusing this:\n  pos_arctic x\n\ngoal (1 subgoal):\n 1. pos_arctic (x + y)", "by (cases x, simp, cases y, auto)"], ["proof (state)\nthis:\n  pos_arctic (x + y)\n\ngoal (4 subgoals):\n 1. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 2. \\<And>x y.\n       \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic (x * y)\n 3. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n 4. SN {(x, y). pos_arctic y \\<and> y < x}", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 2. \\<And>x y.\n       \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic (x * y)\n 3. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n 4. SN {(x, y). pos_arctic y \\<and> y < x}", "fix x y"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 2. \\<And>x y.\n       \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic (x * y)\n 3. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n 4. SN {(x, y). pos_arctic y \\<and> y < x}", "assume \"pos_arctic x\" and \"pos_arctic y\""], ["proof (state)\nthis:\n  pos_arctic x\n  pos_arctic y\n\ngoal (4 subgoals):\n 1. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 2. \\<And>x y.\n       \\<lbrakk>pos_arctic x; pos_arctic y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic (x * y)\n 3. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n 4. SN {(x, y). pos_arctic y \\<and> y < x}", "thus \"pos_arctic (x * y)\""], ["proof (prove)\nusing this:\n  pos_arctic x\n  pos_arctic y\n\ngoal (1 subgoal):\n 1. pos_arctic (x * y)", "by (cases x, simp, cases y, auto)"], ["proof (state)\nthis:\n  pos_arctic (x * y)\n\ngoal (3 subgoals):\n 1. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 2. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n 3. SN {(x, y). pos_arctic y \\<and> y < x}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 2. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n 3. SN {(x, y). pos_arctic y \\<and> y < x}", "show \"SN {(x,y). pos_arctic y \\<and> x > y}\" (is \"SN ?rel\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic y \\<and> y < x}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic y \\<and> y < x}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic y \\<and> y < x}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic y \\<and> y < x}", "assume \"\\<exists> f . f 0 = x \\<and> (\\<forall> i. (f i, f (Suc i)) \\<in> ?rel)\""], ["proof (state)\nthis:\n  \\<exists>f.\n     f 0 = x \\<and>\n     (\\<forall>i.\n         (f i, f (Suc i)) \\<in> {(x, y). pos_arctic y \\<and> y < x})\n\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic y \\<and> y < x}", "from this"], ["proof (chain)\npicking this:\n  \\<exists>f.\n     f 0 = x \\<and>\n     (\\<forall>i.\n         (f i, f (Suc i)) \\<in> {(x, y). pos_arctic y \\<and> y < x})", "obtain f where \"f 0 = x\" and seq: \"\\<forall> i. (f i, f (Suc i)) \\<in> ?rel\""], ["proof (prove)\nusing this:\n  \\<exists>f.\n     f 0 = x \\<and>\n     (\\<forall>i.\n         (f i, f (Suc i)) \\<in> {(x, y). pos_arctic y \\<and> y < x})\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f 0 = x;\n         \\<forall>i.\n            (f i, f (Suc i))\n            \\<in> {(x, y). pos_arctic y \\<and> y < x}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f 0 = x\n  \\<forall>i. (f i, f (Suc i)) \\<in> {(x, y). pos_arctic y \\<and> y < x}\n\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic y \\<and> y < x}", "from seq"], ["proof (chain)\npicking this:\n  \\<forall>i. (f i, f (Suc i)) \\<in> {(x, y). pos_arctic y \\<and> y < x}", "have steps: \"\\<forall> i. f i > f (Suc i) \\<and> pos_arctic (f (Suc i)) \""], ["proof (prove)\nusing this:\n  \\<forall>i. (f i, f (Suc i)) \\<in> {(x, y). pos_arctic y \\<and> y < x}\n\ngoal (1 subgoal):\n 1. \\<forall>i. f (Suc i) < f i \\<and> pos_arctic (f (Suc i))", "by auto"], ["proof (state)\nthis:\n  \\<forall>i. f (Suc i) < f i \\<and> pos_arctic (f (Suc i))\n\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic y \\<and> y < x}", "let ?g = \"\\<lambda> i. get_arctic_num (f i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic y \\<and> y < x}", "have \"\\<forall> i. ?g (Suc i) \\<ge> 0 \\<and> ?g i  > ?g (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       0 \\<le> get_arctic_num (f (Suc i)) \\<and>\n       get_arctic_num (f (Suc i)) < get_arctic_num (f i)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       0 \\<le> get_arctic_num (f (Suc i)) \\<and>\n       get_arctic_num (f (Suc i)) < get_arctic_num (f i)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       0 \\<le> get_arctic_num (f (Suc i)) \\<and>\n       get_arctic_num (f (Suc i)) < get_arctic_num (f i)", "from steps"], ["proof (chain)\npicking this:\n  \\<forall>i. f (Suc i) < f i \\<and> pos_arctic (f (Suc i))", "have i: \"f i > f (Suc i) \\<and> pos_arctic (f (Suc i))\""], ["proof (prove)\nusing this:\n  \\<forall>i. f (Suc i) < f i \\<and> pos_arctic (f (Suc i))\n\ngoal (1 subgoal):\n 1. f (Suc i) < f i \\<and> pos_arctic (f (Suc i))", "by auto"], ["proof (state)\nthis:\n  f (Suc i) < f i \\<and> pos_arctic (f (Suc i))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       0 \\<le> get_arctic_num (f (Suc i)) \\<and>\n       get_arctic_num (f (Suc i)) < get_arctic_num (f i)", "from i"], ["proof (chain)\npicking this:\n  f (Suc i) < f i \\<and> pos_arctic (f (Suc i))", "obtain n where fi: \"f i = Num_arc n\""], ["proof (prove)\nusing this:\n  f (Suc i) < f i \\<and> pos_arctic (f (Suc i))\n\ngoal (1 subgoal):\n 1. (\\<And>n. f i = Num_arc n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases \"f (Suc i)\", simp, cases \"f i\", auto)"], ["proof (state)\nthis:\n  f i = Num_arc n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       0 \\<le> get_arctic_num (f (Suc i)) \\<and>\n       get_arctic_num (f (Suc i)) < get_arctic_num (f i)", "from i"], ["proof (chain)\npicking this:\n  f (Suc i) < f i \\<and> pos_arctic (f (Suc i))", "obtain m where fsi: \"f (Suc i) = Num_arc m\""], ["proof (prove)\nusing this:\n  f (Suc i) < f i \\<and> pos_arctic (f (Suc i))\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        f (Suc i) = Num_arc m \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases \"f (Suc i)\", auto)"], ["proof (state)\nthis:\n  f (Suc i) = Num_arc m\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       0 \\<le> get_arctic_num (f (Suc i)) \\<and>\n       get_arctic_num (f (Suc i)) < get_arctic_num (f i)", "with i"], ["proof (chain)\npicking this:\n  f (Suc i) < f i \\<and> pos_arctic (f (Suc i))\n  f (Suc i) = Num_arc m", "have gz: \"0 \\<le> m\""], ["proof (prove)\nusing this:\n  f (Suc i) < f i \\<and> pos_arctic (f (Suc i))\n  f (Suc i) = Num_arc m\n\ngoal (1 subgoal):\n 1. 0 \\<le> m", "by simp"], ["proof (state)\nthis:\n  0 \\<le> m\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       0 \\<le> get_arctic_num (f (Suc i)) \\<and>\n       get_arctic_num (f (Suc i)) < get_arctic_num (f i)", "from i fi fsi"], ["proof (chain)\npicking this:\n  f (Suc i) < f i \\<and> pos_arctic (f (Suc i))\n  f i = Num_arc n\n  f (Suc i) = Num_arc m", "have \"n > m\""], ["proof (prove)\nusing this:\n  f (Suc i) < f i \\<and> pos_arctic (f (Suc i))\n  f i = Num_arc n\n  f (Suc i) = Num_arc m\n\ngoal (1 subgoal):\n 1. m < n", "by auto"], ["proof (state)\nthis:\n  m < n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       0 \\<le> get_arctic_num (f (Suc i)) \\<and>\n       get_arctic_num (f (Suc i)) < get_arctic_num (f i)", "with fi fsi gz"], ["proof (chain)\npicking this:\n  f i = Num_arc n\n  f (Suc i) = Num_arc m\n  0 \\<le> m\n  m < n", "show \"?g (Suc i) \\<ge> 0 \\<and> ?g i > ?g (Suc i)\""], ["proof (prove)\nusing this:\n  f i = Num_arc n\n  f (Suc i) = Num_arc m\n  0 \\<le> m\n  m < n\n\ngoal (1 subgoal):\n 1. 0 \\<le> get_arctic_num (f (Suc i)) \\<and>\n    get_arctic_num (f (Suc i)) < get_arctic_num (f i)", "by auto"], ["proof (state)\nthis:\n  0 \\<le> get_arctic_num (f (Suc i)) \\<and>\n  get_arctic_num (f (Suc i)) < get_arctic_num (f i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i.\n     0 \\<le> get_arctic_num (f (Suc i)) \\<and>\n     get_arctic_num (f (Suc i)) < get_arctic_num (f i)\n\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic y \\<and> y < x}", "from this"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     0 \\<le> get_arctic_num (f (Suc i)) \\<and>\n     get_arctic_num (f (Suc i)) < get_arctic_num (f i)", "obtain g where \"\\<forall> i. g (Suc i) \\<ge> 0 \\<and> ((>) :: int \\<Rightarrow> int \\<Rightarrow> bool) (g i) (g (Suc i))\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     0 \\<le> get_arctic_num (f (Suc i)) \\<and>\n     get_arctic_num (f (Suc i)) < get_arctic_num (f i)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<forall>i.\n           0 \\<le> g (Suc i) \\<and> g (Suc i) < g i \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>i. 0 \\<le> g (Suc i) \\<and> g (Suc i) < g i\n\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic y \\<and> y < x}", "hence \"\\<exists> f. f 0 = g 0 \\<and> (\\<forall> i. (f i, f (Suc i)) \\<in> {(x,y). y \\<ge> 0 \\<and> x > y})\""], ["proof (prove)\nusing this:\n  \\<forall>i. 0 \\<le> g (Suc i) \\<and> g (Suc i) < g i\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       f 0 = g 0 \\<and>\n       (\\<forall>i. (f i, f (Suc i)) \\<in> {(x, y). 0 \\<le> y \\<and> y < x})", "by auto"], ["proof (state)\nthis:\n  \\<exists>f.\n     f 0 = g 0 \\<and>\n     (\\<forall>i. (f i, f (Suc i)) \\<in> {(x, y). 0 \\<le> y \\<and> y < x})\n\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic y \\<and> y < x}", "with int_SN.SN"], ["proof (chain)\npicking this:\n  SN {(x, y). 0 \\<le> y \\<and> y < x}\n  \\<exists>f.\n     f 0 = g 0 \\<and>\n     (\\<forall>i. (f i, f (Suc i)) \\<in> {(x, y). 0 \\<le> y \\<and> y < x})", "have False"], ["proof (prove)\nusing this:\n  SN {(x, y). 0 \\<le> y \\<and> y < x}\n  \\<exists>f.\n     f 0 = g 0 \\<and>\n     (\\<forall>i. (f i, f (Suc i)) \\<in> {(x, y). 0 \\<le> y \\<and> y < x})\n\ngoal (1 subgoal):\n 1. False", "unfolding SN_defs"], ["proof (prove)\nusing this:\n  \\<nexists>f.\n     f 0 \\<in> UNIV \\<and>\n     (\\<forall>i. (f i, f (Suc i)) \\<in> {(x, y). 0 \\<le> y \\<and> y < x})\n  \\<exists>f.\n     f 0 = g 0 \\<and>\n     (\\<forall>i. (f i, f (Suc i)) \\<in> {(x, y). 0 \\<le> y \\<and> y < x})\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic y \\<and> y < x}", "}"], ["proof (state)\nthis:\n  \\<exists>f.\n     f 0 = ?x2 \\<and>\n     (\\<forall>i.\n         (f i, f (Suc i))\n         \\<in> {(x, y). pos_arctic y \\<and> y < x}) \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic y \\<and> y < x}", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>f.\n     f 0 = ?x2 \\<and>\n     (\\<forall>i.\n         (f i, f (Suc i))\n         \\<in> {(x, y). pos_arctic y \\<and> y < x}) \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic y \\<and> y < x}", "unfolding SN_defs"], ["proof (prove)\nusing this:\n  \\<exists>f.\n     f 0 = ?x2 \\<and>\n     (\\<forall>i.\n         (f i, f (Suc i))\n         \\<in> {(x, y). pos_arctic y \\<and> y < x}) \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. \\<nexists>f.\n       f 0 \\<in> UNIV \\<and>\n       (\\<forall>i.\n           (f i, f (Suc i)) \\<in> {(x, y). pos_arctic y \\<and> y < x})", "by auto"], ["proof (state)\nthis:\n  SN {(x, y). pos_arctic y \\<and> y < x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN {(x, y). pos_arctic y \\<and> y < x}\n\ngoal (2 subgoals):\n 1. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 2. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 2. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c", "fix y z x :: arctic"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 2. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c", "assume \"y > z\""], ["proof (state)\nthis:\n  z < y\n\ngoal (2 subgoals):\n 1. \\<And>y z x. z < y \\<Longrightarrow> x * z < x * y\n 2. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c", "thus \"x * y > x * z\""], ["proof (prove)\nusing this:\n  z < y\n\ngoal (1 subgoal):\n 1. x * z < x * y", "by (cases x, simp, cases z, simp, cases y, auto)"], ["proof (state)\nthis:\n  x * z < x * y\n\ngoal (1 subgoal):\n 1. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c", "fix c d"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c", "assume \"pos_arctic d\""], ["proof (state)\nthis:\n  pos_arctic d\n\ngoal (1 subgoal):\n 1. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c", "then"], ["proof (chain)\npicking this:\n  pos_arctic d", "obtain n where d: \"d = Num_arc n\" and n: \"0 \\<le> n\""], ["proof (prove)\nusing this:\n  pos_arctic d\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>d = Num_arc n; 0 \\<le> n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases d, auto)"], ["proof (state)\nthis:\n  d = Num_arc n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>c d.\n       pos_arctic d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c", "show \"\\<exists> e. e \\<ge> 0 \\<and> pos_arctic e \\<and> \\<not> c \\<ge> d * e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c", "proof (cases c)"], ["proof (state)\ngoal (2 subgoals):\n 1. c = MinInfty \\<Longrightarrow>\n    \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n 2. \\<And>x2.\n       c = Num_arc x2 \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c", "case MinInfty"], ["proof (state)\nthis:\n  c = MinInfty\n\ngoal (2 subgoals):\n 1. c = MinInfty \\<Longrightarrow>\n    \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n 2. \\<And>x2.\n       c = Num_arc x2 \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c", "by (rule exI[of _ \"Num_arc 0\"],\n        unfold d MinInfty zero_arctic_def, simp)"], ["proof (state)\nthis:\n  \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       c = Num_arc x2 \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       c = Num_arc x2 \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c", "case (Num_arc m)"], ["proof (state)\nthis:\n  c = Num_arc m\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       c = Num_arc x2 \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c", "by (rule exI[of _ \"Num_arc (abs m  + 1)\"], insert n,\n        unfold d Num_arc zero_arctic_def, simp)"], ["proof (state)\nthis:\n  \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>e\\<ge>0. pos_arctic e \\<and> \\<not> d * e \\<le> c\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The arctic semiring over an arbitrary archimedean field\\<close>"], ["", "text \\<open>completely analogous to the integers, where one has to use delta-orderings\\<close>"], ["", "datatype 'a arctic_delta = MinInfty_delta | Num_arc_delta 'a"], ["", "instantiation arctic_delta :: (ord) ord\nbegin"], ["", "fun less_eq_arctic_delta :: \"'a arctic_delta \\<Rightarrow> 'a arctic_delta \\<Rightarrow> bool\" where \n  \"less_eq_arctic_delta MinInfty_delta x = True\"\n| \"less_eq_arctic_delta (Num_arc_delta _) MinInfty_delta = False\"\n| \"less_eq_arctic_delta (Num_arc_delta y) (Num_arc_delta x) = (y \\<le> x)\""], ["", "fun less_arctic_delta :: \"'a arctic_delta \\<Rightarrow> 'a arctic_delta \\<Rightarrow> bool\" where \n  \"less_arctic_delta MinInfty_delta x = True\"\n| \"less_arctic_delta (Num_arc_delta _) MinInfty_delta = False\"\n| \"less_arctic_delta (Num_arc_delta y) (Num_arc_delta x) = (y < x)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a arctic_delta, ord_class)", ".."], ["", "end"], ["", "instantiation arctic_delta :: (linordered_field) ordered_semiring_1\nbegin"], ["", "fun plus_arctic_delta :: \"'a arctic_delta \\<Rightarrow> 'a arctic_delta \\<Rightarrow> 'a arctic_delta\" where\n  \"plus_arctic_delta MinInfty_delta y = y\"\n| \"plus_arctic_delta x MinInfty_delta = x\"\n| \"plus_arctic_delta (Num_arc_delta x) (Num_arc_delta y) = (Num_arc_delta (max x y))\""], ["", "fun times_arctic_delta :: \"'a arctic_delta \\<Rightarrow> 'a arctic_delta \\<Rightarrow> 'a arctic_delta\" where \n  \"times_arctic_delta MinInfty_delta y = MinInfty_delta\"\n| \"times_arctic_delta x MinInfty_delta = MinInfty_delta\"\n| \"times_arctic_delta (Num_arc_delta x) (Num_arc_delta y) = (Num_arc_delta (x + y))\""], ["", "definition zero_arctic_delta :: \"'a arctic_delta\" where \n  \"zero_arctic_delta = MinInfty_delta\""], ["", "definition one_arctic_delta :: \"'a arctic_delta\" where \n  \"one_arctic_delta = Num_arc_delta 0\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a arctic_delta, ordered_semiring_1_class)", "proof"], ["proof (state)\ngoal (23 subgoals):\n 1. \\<And>a b c. a * b * c = a * (b * c)\n 2. \\<And>a. 1 * a = a\n 3. \\<And>a. a * 1 = a\n 4. \\<And>a b c. a + b + c = a + (b + c)\n 5. \\<And>a b. a + b = b + a\n 6. \\<And>a. 0 + a = a\n 7. \\<And>a. 0 * a = 0\n 8. \\<And>a. a * 0 = 0\n 9. \\<And>a b c. (a + b) * c = a * c + b * c\n 10. \\<And>a b c. a * (b + c) = a * b + a * c\nA total of 23 subgoals...", "fix x y z :: \"'a arctic_delta\""], ["proof (state)\ngoal (23 subgoals):\n 1. \\<And>a b c. a * b * c = a * (b * c)\n 2. \\<And>a. 1 * a = a\n 3. \\<And>a. a * 1 = a\n 4. \\<And>a b c. a + b + c = a + (b + c)\n 5. \\<And>a b. a + b = b + a\n 6. \\<And>a. 0 + a = a\n 7. \\<And>a. 0 * a = 0\n 8. \\<And>a. a * 0 = 0\n 9. \\<And>a b c. (a + b) * c = a * c + b * c\n 10. \\<And>a b c. a * (b + c) = a * b + a * c\nA total of 23 subgoals...", "show \"x + y = y + x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x + y = y + x", "by (cases x, cases y, auto, cases y, auto)"], ["proof (state)\nthis:\n  x + y = y + x\n\ngoal (22 subgoals):\n 1. \\<And>a b c. a * b * c = a * (b * c)\n 2. \\<And>a. 1 * a = a\n 3. \\<And>a. a * 1 = a\n 4. \\<And>a b c. a + b + c = a + (b + c)\n 5. \\<And>a. 0 + a = a\n 6. \\<And>a. 0 * a = 0\n 7. \\<And>a. a * 0 = 0\n 8. \\<And>a b c. (a + b) * c = a * c + b * c\n 9. \\<And>a b c. a * (b + c) = a * b + a * c\n 10. 0 \\<noteq> 1\nA total of 22 subgoals...", "show \"(x + y) + z = x + (y + z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x + y + z = x + (y + z)", "by (cases x, auto, cases y, auto, cases z, auto)"], ["proof (state)\nthis:\n  x + y + z = x + (y + z)\n\ngoal (21 subgoals):\n 1. \\<And>a b c. a * b * c = a * (b * c)\n 2. \\<And>a. 1 * a = a\n 3. \\<And>a. a * 1 = a\n 4. \\<And>a. 0 + a = a\n 5. \\<And>a. 0 * a = 0\n 6. \\<And>a. a * 0 = 0\n 7. \\<And>a b c. (a + b) * c = a * c + b * c\n 8. \\<And>a b c. a * (b + c) = a * b + a * c\n 9. 0 \\<noteq> 1\n 10. \\<And>a. a + 0 = a\nA total of 21 subgoals...", "show \"(x * y) * z = x * (y * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * y * z = x * (y * z)", "by (cases x, auto, cases y, auto, cases z, auto)"], ["proof (state)\nthis:\n  x * y * z = x * (y * z)\n\ngoal (20 subgoals):\n 1. \\<And>a. 1 * a = a\n 2. \\<And>a. a * 1 = a\n 3. \\<And>a. 0 + a = a\n 4. \\<And>a. 0 * a = 0\n 5. \\<And>a. a * 0 = 0\n 6. \\<And>a b c. (a + b) * c = a * c + b * c\n 7. \\<And>a b c. a * (b + c) = a * b + a * c\n 8. 0 \\<noteq> 1\n 9. \\<And>a. a + 0 = a\n 10. \\<And>x. x \\<le> x\nA total of 20 subgoals...", "show \"x * 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * 0 = 0", "by (cases x, auto simp: zero_arctic_delta_def)"], ["proof (state)\nthis:\n  x * 0 = 0\n\ngoal (19 subgoals):\n 1. \\<And>a. 1 * a = a\n 2. \\<And>a. a * 1 = a\n 3. \\<And>a. 0 + a = a\n 4. \\<And>a. 0 * a = 0\n 5. \\<And>a b c. (a + b) * c = a * c + b * c\n 6. \\<And>a b c. a * (b + c) = a * b + a * c\n 7. 0 \\<noteq> 1\n 8. \\<And>a. a + 0 = a\n 9. \\<And>x. x \\<le> x\n 10. \\<And>y x z.\n        \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\nA total of 19 subgoals...", "show \"x * (y + z) = x * y + x * z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * (y + z) = x * y + x * z", "by (cases x, auto, cases y, auto, cases z, auto)"], ["proof (state)\nthis:\n  x * (y + z) = x * y + x * z\n\ngoal (18 subgoals):\n 1. \\<And>a. 1 * a = a\n 2. \\<And>a. a * 1 = a\n 3. \\<And>a. 0 + a = a\n 4. \\<And>a. 0 * a = 0\n 5. \\<And>a b c. (a + b) * c = a * c + b * c\n 6. 0 \\<noteq> 1\n 7. \\<And>a. a + 0 = a\n 8. \\<And>x. x \\<le> x\n 9. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 10. \\<And>x y. max x y = max y x\nA total of 18 subgoals...", "show \"(x + y) * z = x * z + y * z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y) * z = x * z + y * z", "by (cases x, auto, cases y, cases z, auto, cases z, auto)"], ["proof (state)\nthis:\n  (x + y) * z = x * z + y * z\n\ngoal (17 subgoals):\n 1. \\<And>a. 1 * a = a\n 2. \\<And>a. a * 1 = a\n 3. \\<And>a. 0 + a = a\n 4. \\<And>a. 0 * a = 0\n 5. 0 \\<noteq> 1\n 6. \\<And>a. a + 0 = a\n 7. \\<And>x. x \\<le> x\n 8. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 9. \\<And>x y. max x y = max y x\n 10. \\<And>x y. x \\<le> max x y\nA total of 17 subgoals...", "show \"1 * x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 * x = x", "by (cases x, simp_all add: one_arctic_delta_def)"], ["proof (state)\nthis:\n  1 * x = x\n\ngoal (16 subgoals):\n 1. \\<And>a. a * 1 = a\n 2. \\<And>a. 0 + a = a\n 3. \\<And>a. 0 * a = 0\n 4. 0 \\<noteq> 1\n 5. \\<And>a. a + 0 = a\n 6. \\<And>x. x \\<le> x\n 7. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 8. \\<And>x y. max x y = max y x\n 9. \\<And>x y. x \\<le> max x y\n 10. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\nA total of 16 subgoals...", "show \"x * 1 = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * 1 = x", "by (cases x, simp_all add: one_arctic_delta_def)"], ["proof (state)\nthis:\n  x * 1 = x\n\ngoal (15 subgoals):\n 1. \\<And>a. 0 + a = a\n 2. \\<And>a. 0 * a = 0\n 3. 0 \\<noteq> 1\n 4. \\<And>a. a + 0 = a\n 5. \\<And>x. x \\<le> x\n 6. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 7. \\<And>x y. max x y = max y x\n 8. \\<And>x y. x \\<le> max x y\n 9. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 10. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\nA total of 15 subgoals...", "show \"0 + x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 + x = x", "by (simp add: zero_arctic_delta_def)"], ["proof (state)\nthis:\n  0 + x = x\n\ngoal (14 subgoals):\n 1. \\<And>a. 0 * a = 0\n 2. 0 \\<noteq> 1\n 3. \\<And>a. a + 0 = a\n 4. \\<And>x. x \\<le> x\n 5. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 6. \\<And>x y. max x y = max y x\n 7. \\<And>x y. x \\<le> max x y\n 8. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 9. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 10. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\nA total of 14 subgoals...", "show \"0 * x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 * x = 0", "by (simp add: zero_arctic_delta_def)"], ["proof (state)\nthis:\n  0 * x = 0\n\ngoal (13 subgoals):\n 1. 0 \\<noteq> 1\n 2. \\<And>a. a + 0 = a\n 3. \\<And>x. x \\<le> x\n 4. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 5. \\<And>x y. max x y = max y x\n 6. \\<And>x y. x \\<le> max x y\n 7. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 8. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 9. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 10. \\<And>z y x.\n        \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> y * z \\<le> x * z\nA total of 13 subgoals...", "show \"(0 :: 'a arctic_delta) \\<noteq> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<noteq> 1", "by (simp add: zero_arctic_delta_def one_arctic_delta_def)"], ["proof (state)\nthis:\n  0 \\<noteq> 1\n\ngoal (12 subgoals):\n 1. \\<And>a. a + 0 = a\n 2. \\<And>x. x \\<le> x\n 3. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 4. \\<And>x y. max x y = max y x\n 5. \\<And>x y. x \\<le> max x y\n 6. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 7. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 8. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 9. \\<And>z y x.\n       \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 10. \\<And>x z y.\n        \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n        \\<Longrightarrow> x * z \\<le> x * y\nA total of 12 subgoals...", "show \"x + 0 = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x + 0 = x", "by (cases x, auto simp: zero_arctic_delta_def)"], ["proof (state)\nthis:\n  x + 0 = x\n\ngoal (11 subgoals):\n 1. \\<And>x. x \\<le> x\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 3. \\<And>x y. max x y = max y x\n 4. \\<And>x y. x \\<le> max x y\n 5. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 6. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 7. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 8. \\<And>z y x.\n       \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 9. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 10. \\<And>y x z.\n        \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n        \\<Longrightarrow> x * z \\<le> y * z\nA total of 11 subgoals...", "show \"x \\<ge> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> x", "by (cases x, auto)"], ["proof (state)\nthis:\n  x \\<le> x\n\ngoal (10 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>x y. max x y = max y x\n 3. \\<And>x y. x \\<le> max x y\n 4. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 5. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 6. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 7. \\<And>z y x.\n       \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 8. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 9. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z\n 10. 0 \\<le> 1", "show \"(1 :: 'a arctic_delta) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 1", "by (simp add: zero_arctic_delta_def one_arctic_delta_def)"], ["proof (state)\nthis:\n  0 \\<le> 1\n\ngoal (9 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>x y. max x y = max y x\n 3. \\<And>x y. x \\<le> max x y\n 4. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 5. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 6. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 7. \\<And>z y x.\n       \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 8. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 9. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "show \"max x y = max y x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max x y = max y x", "unfolding max_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if x \\<le> y then y else x) = (if y \\<le> x then x else y)", "by (cases x, (cases y, auto)+)"], ["proof (state)\nthis:\n  max x y = max y x\n\ngoal (8 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>x y. x \\<le> max x y\n 3. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 4. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 5. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 6. \\<And>z y x.\n       \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 7. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 8. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "show \"max x y \\<ge> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> max x y", "unfolding max_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> (if x \\<le> y then y else x)", "by (cases x, (cases y, auto)+)"], ["proof (state)\nthis:\n  x \\<le> max x y\n\ngoal (7 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 3. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 4. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 5. \\<And>z y x.\n       \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 6. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 7. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "assume ge: \"x \\<ge> y\""], ["proof (state)\nthis:\n  y \\<le> x\n\ngoal (7 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 3. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 4. \\<And>y x z. y \\<le> x \\<Longrightarrow> y + z \\<le> x + z\n 5. \\<And>z y x.\n       \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 6. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 7. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "from ge"], ["proof (chain)\npicking this:\n  y \\<le> x", "show \"x + z \\<ge> y + z\""], ["proof (prove)\nusing this:\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. y + z \\<le> x + z", "by (cases x, cases y, cases z, auto, cases y, cases z, auto, cases z, auto)"], ["proof (state)\nthis:\n  y + z \\<le> x + z\n\ngoal (6 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 3. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 4. \\<And>z y x.\n       \\<lbrakk>0 \\<le> z; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y * z \\<le> x * z\n 5. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 6. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "from ge"], ["proof (chain)\npicking this:\n  y \\<le> x", "show \"x * z \\<ge> y * z\""], ["proof (prove)\nusing this:\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. y * z \\<le> x * z", "by (cases x, cases y, cases z, auto, cases y, cases z, auto, cases z, auto)"], ["proof (state)\nthis:\n  y * z \\<le> x * z\n\ngoal (5 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>y x. y \\<le> x \\<Longrightarrow> max x y = x\n 3. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 4. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 5. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "from ge"], ["proof (chain)\npicking this:\n  y \\<le> x", "show \"max x y = x\""], ["proof (prove)\nusing this:\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. max x y = x", "unfolding max_def"], ["proof (prove)\nusing this:\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. (if x \\<le> y then y else x) = x", "by (cases x, (cases y, auto)+)"], ["proof (state)\nthis:\n  max x y = x\n\ngoal (4 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>y x z. y \\<le> x \\<Longrightarrow> max z y \\<le> max z x\n 3. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 4. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "from ge"], ["proof (chain)\npicking this:\n  y \\<le> x", "show \"max z x \\<ge> max z y\""], ["proof (prove)\nusing this:\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. max z y \\<le> max z x", "unfolding max_def"], ["proof (prove)\nusing this:\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. (if z \\<le> y then y else z) \\<le> (if z \\<le> x then x else z)", "by (cases z, cases x, auto, cases x, (cases y, auto)+)"], ["proof (state)\nthis:\n  max z y \\<le> max z x\n\ngoal (3 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 3. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 3. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "fix x y z :: \"'a arctic_delta\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 3. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "assume \"x \\<ge> y\" and \"y \\<ge> z\""], ["proof (state)\nthis:\n  y \\<le> x\n  z \\<le> y\n\ngoal (3 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> y\\<rbrakk> \\<Longrightarrow> z \\<le> x\n 2. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 3. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "thus \"x \\<ge> z\""], ["proof (prove)\nusing this:\n  y \\<le> x\n  z \\<le> y\n\ngoal (1 subgoal):\n 1. z \\<le> x", "by (cases x, cases y, auto, cases y, cases z, auto, cases z, auto)"], ["proof (state)\nthis:\n  z \\<le> x\n\ngoal (2 subgoals):\n 1. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "fix x y z :: \"'a arctic_delta\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "assume \"y \\<ge> z\""], ["proof (state)\nthis:\n  z \\<le> y\n\ngoal (2 subgoals):\n 1. \\<And>x z y.\n       \\<lbrakk>0 \\<le> x; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> x * y\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "thus \"x * y \\<ge> x * z\""], ["proof (prove)\nusing this:\n  z \\<le> y\n\ngoal (1 subgoal):\n 1. x * z \\<le> x * y", "by (cases x, cases y, cases z, auto, cases y, cases z, auto, cases z, auto)"], ["proof (state)\nthis:\n  x * z \\<le> x * y\n\ngoal (1 subgoal):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "fix x y z :: \"'a arctic_delta\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> x * z \\<le> y * z", "show \"x \\<ge> y \\<Longrightarrow> 0 \\<ge> z \\<Longrightarrow> y * z \\<ge> x * z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk>\n    \\<Longrightarrow> x * z \\<le> y * z", "by (cases z, cases x, auto simp: zero_arctic_delta_def)"], ["proof (state)\nthis:\n  \\<lbrakk>y \\<le> x; z \\<le> 0\\<rbrakk> \\<Longrightarrow> x * z \\<le> y * z\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>x >d y is interpreted as y = -inf or (x,y != -inf and x >d y)\\<close>"], ["", "fun gt_arctic_delta :: \"'a :: floor_ceiling \\<Rightarrow> 'a arctic_delta \\<Rightarrow> 'a arctic_delta \\<Rightarrow> bool\"\nwhere \"gt_arctic_delta \\<delta> _ MinInfty_delta = True\"\n   |  \"gt_arctic_delta \\<delta> MinInfty_delta (Num_arc_delta _) = False\"\n   |  \"gt_arctic_delta \\<delta> (Num_arc_delta x) (Num_arc_delta y) = delta_gt \\<delta> x y\""], ["", "fun get_arctic_delta_num :: \"'a arctic_delta \\<Rightarrow> 'a\"\nwhere \"get_arctic_delta_num (Num_arc_delta n) = n\""], ["", "fun pos_arctic_delta :: \"('a :: floor_ceiling) arctic_delta \\<Rightarrow> bool\"\nwhere \"pos_arctic_delta MinInfty_delta = False\"\n    | \"pos_arctic_delta (Num_arc_delta n) = (0 \\<le> n)\""], ["", "lemma arctic_delta_interpretation: assumes dpos: \"\\<delta> > 0\" shows \"SN_both_mono_ordered_semiring_1 1 (gt_arctic_delta \\<delta>) pos_arctic_delta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_both_mono_ordered_semiring_1 1 (gt_arctic_delta \\<delta>)\n     pos_arctic_delta", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_both_mono_ordered_semiring_1 1 (gt_arctic_delta \\<delta>)\n     pos_arctic_delta", "from delta_interpretation[OF dpos]"], ["proof (chain)\npicking this:\n  \\<delta> \\<le> ?def \\<Longrightarrow>\n  SN_strict_mono_ordered_semiring_1 ?def (delta_gt \\<delta>) delta_mono", "interpret SN_strict_mono_ordered_semiring_1 \\<delta> \"delta_gt \\<delta>\" delta_mono"], ["proof (prove)\nusing this:\n  \\<delta> \\<le> ?def \\<Longrightarrow>\n  SN_strict_mono_ordered_semiring_1 ?def (delta_gt \\<delta>) delta_mono\n\ngoal (1 subgoal):\n 1. SN_strict_mono_ordered_semiring_1 \\<delta> (delta_gt \\<delta>)\n     delta_mono", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. SN_both_mono_ordered_semiring_1 1 (gt_arctic_delta \\<delta>)\n     pos_arctic_delta", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN_both_mono_ordered_semiring_1 1 (gt_arctic_delta \\<delta>)\n     pos_arctic_delta", "proof"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; gt_arctic_delta \\<delta> y z\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> x z\n 2. \\<And>x y z.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> x z\n 3. \\<And>x y. gt_arctic_delta \\<delta> x y \\<Longrightarrow> y \\<le> x\n 4. 0 \\<le> 1\n 5. \\<And>x y z u.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y;\n        gt_arctic_delta \\<delta> z u\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> (x + z) (y + u)\n 6. \\<And>x y z.\n       gt_arctic_delta \\<delta> x y \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * z) (y * z)\n 7. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 8. \\<And>x. gt_arctic_delta \\<delta> x 0\n 9. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 10. \\<And>x. 0 \\<le> x\nA total of 16 subgoals...", "fix x y z :: \"'a arctic_delta\""], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; gt_arctic_delta \\<delta> y z\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> x z\n 2. \\<And>x y z.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> x z\n 3. \\<And>x y. gt_arctic_delta \\<delta> x y \\<Longrightarrow> y \\<le> x\n 4. 0 \\<le> 1\n 5. \\<And>x y z u.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y;\n        gt_arctic_delta \\<delta> z u\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> (x + z) (y + u)\n 6. \\<And>x y z.\n       gt_arctic_delta \\<delta> x y \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * z) (y * z)\n 7. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 8. \\<And>x. gt_arctic_delta \\<delta> x 0\n 9. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 10. \\<And>x. 0 \\<le> x\nA total of 16 subgoals...", "assume \"x \\<ge> y\" and \"gt_arctic_delta \\<delta> y z\""], ["proof (state)\nthis:\n  y \\<le> x\n  gt_arctic_delta \\<delta> y z\n\ngoal (16 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; gt_arctic_delta \\<delta> y z\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> x z\n 2. \\<And>x y z.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> x z\n 3. \\<And>x y. gt_arctic_delta \\<delta> x y \\<Longrightarrow> y \\<le> x\n 4. 0 \\<le> 1\n 5. \\<And>x y z u.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y;\n        gt_arctic_delta \\<delta> z u\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> (x + z) (y + u)\n 6. \\<And>x y z.\n       gt_arctic_delta \\<delta> x y \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * z) (y * z)\n 7. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 8. \\<And>x. gt_arctic_delta \\<delta> x 0\n 9. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 10. \\<And>x. 0 \\<le> x\nA total of 16 subgoals...", "thus \"gt_arctic_delta \\<delta> x z\""], ["proof (prove)\nusing this:\n  y \\<le> x\n  gt_arctic_delta \\<delta> y z\n\ngoal (1 subgoal):\n 1. gt_arctic_delta \\<delta> x z", "by (cases z, simp, cases y, simp, cases x, simp, simp add: compat)"], ["proof (state)\nthis:\n  gt_arctic_delta \\<delta> x z\n\ngoal (15 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> x z\n 2. \\<And>x y. gt_arctic_delta \\<delta> x y \\<Longrightarrow> y \\<le> x\n 3. 0 \\<le> 1\n 4. \\<And>x y z u.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y;\n        gt_arctic_delta \\<delta> z u\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> (x + z) (y + u)\n 5. \\<And>x y z.\n       gt_arctic_delta \\<delta> x y \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * z) (y * z)\n 6. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 7. \\<And>x. gt_arctic_delta \\<delta> x 0\n 8. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 9. \\<And>x. 0 \\<le> x\n 10. pos_arctic_delta 1\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> x z\n 2. \\<And>x y. gt_arctic_delta \\<delta> x y \\<Longrightarrow> y \\<le> x\n 3. 0 \\<le> 1\n 4. \\<And>x y z u.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y;\n        gt_arctic_delta \\<delta> z u\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> (x + z) (y + u)\n 5. \\<And>x y z.\n       gt_arctic_delta \\<delta> x y \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * z) (y * z)\n 6. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 7. \\<And>x. gt_arctic_delta \\<delta> x 0\n 8. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 9. \\<And>x. 0 \\<le> x\n 10. pos_arctic_delta 1\nA total of 15 subgoals...", "fix x y z :: \"'a arctic_delta\""], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> x z\n 2. \\<And>x y. gt_arctic_delta \\<delta> x y \\<Longrightarrow> y \\<le> x\n 3. 0 \\<le> 1\n 4. \\<And>x y z u.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y;\n        gt_arctic_delta \\<delta> z u\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> (x + z) (y + u)\n 5. \\<And>x y z.\n       gt_arctic_delta \\<delta> x y \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * z) (y * z)\n 6. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 7. \\<And>x. gt_arctic_delta \\<delta> x 0\n 8. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 9. \\<And>x. 0 \\<le> x\n 10. pos_arctic_delta 1\nA total of 15 subgoals...", "assume \"gt_arctic_delta \\<delta> x y\" and \"y \\<ge> z\""], ["proof (state)\nthis:\n  gt_arctic_delta \\<delta> x y\n  z \\<le> y\n\ngoal (15 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y; z \\<le> y\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> x z\n 2. \\<And>x y. gt_arctic_delta \\<delta> x y \\<Longrightarrow> y \\<le> x\n 3. 0 \\<le> 1\n 4. \\<And>x y z u.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y;\n        gt_arctic_delta \\<delta> z u\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> (x + z) (y + u)\n 5. \\<And>x y z.\n       gt_arctic_delta \\<delta> x y \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * z) (y * z)\n 6. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 7. \\<And>x. gt_arctic_delta \\<delta> x 0\n 8. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 9. \\<And>x. 0 \\<le> x\n 10. pos_arctic_delta 1\nA total of 15 subgoals...", "thus \"gt_arctic_delta \\<delta> x z\""], ["proof (prove)\nusing this:\n  gt_arctic_delta \\<delta> x y\n  z \\<le> y\n\ngoal (1 subgoal):\n 1. gt_arctic_delta \\<delta> x z", "by (cases z, simp, cases y, simp, cases x, simp, simp add: compat2)"], ["proof (state)\nthis:\n  gt_arctic_delta \\<delta> x z\n\ngoal (14 subgoals):\n 1. \\<And>x y. gt_arctic_delta \\<delta> x y \\<Longrightarrow> y \\<le> x\n 2. 0 \\<le> 1\n 3. \\<And>x y z u.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y;\n        gt_arctic_delta \\<delta> z u\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> (x + z) (y + u)\n 4. \\<And>x y z.\n       gt_arctic_delta \\<delta> x y \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * z) (y * z)\n 5. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 6. \\<And>x. gt_arctic_delta \\<delta> x 0\n 7. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 8. \\<And>x. 0 \\<le> x\n 9. pos_arctic_delta 1\n 10. \\<not> pos_arctic_delta 0\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>x y. gt_arctic_delta \\<delta> x y \\<Longrightarrow> y \\<le> x\n 2. 0 \\<le> 1\n 3. \\<And>x y z u.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y;\n        gt_arctic_delta \\<delta> z u\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> (x + z) (y + u)\n 4. \\<And>x y z.\n       gt_arctic_delta \\<delta> x y \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * z) (y * z)\n 5. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 6. \\<And>x. gt_arctic_delta \\<delta> x 0\n 7. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 8. \\<And>x. 0 \\<le> x\n 9. pos_arctic_delta 1\n 10. \\<not> pos_arctic_delta 0\nA total of 14 subgoals...", "fix x y :: \"'a arctic_delta\""], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>x y. gt_arctic_delta \\<delta> x y \\<Longrightarrow> y \\<le> x\n 2. 0 \\<le> 1\n 3. \\<And>x y z u.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y;\n        gt_arctic_delta \\<delta> z u\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> (x + z) (y + u)\n 4. \\<And>x y z.\n       gt_arctic_delta \\<delta> x y \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * z) (y * z)\n 5. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 6. \\<And>x. gt_arctic_delta \\<delta> x 0\n 7. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 8. \\<And>x. 0 \\<le> x\n 9. pos_arctic_delta 1\n 10. \\<not> pos_arctic_delta 0\nA total of 14 subgoals...", "assume \"gt_arctic_delta \\<delta> x y\""], ["proof (state)\nthis:\n  gt_arctic_delta \\<delta> x y\n\ngoal (14 subgoals):\n 1. \\<And>x y. gt_arctic_delta \\<delta> x y \\<Longrightarrow> y \\<le> x\n 2. 0 \\<le> 1\n 3. \\<And>x y z u.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y;\n        gt_arctic_delta \\<delta> z u\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> (x + z) (y + u)\n 4. \\<And>x y z.\n       gt_arctic_delta \\<delta> x y \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * z) (y * z)\n 5. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 6. \\<And>x. gt_arctic_delta \\<delta> x 0\n 7. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 8. \\<And>x. 0 \\<le> x\n 9. pos_arctic_delta 1\n 10. \\<not> pos_arctic_delta 0\nA total of 14 subgoals...", "thus \"x \\<ge> y\""], ["proof (prove)\nusing this:\n  gt_arctic_delta \\<delta> x y\n\ngoal (1 subgoal):\n 1. y \\<le> x", "by (cases x, insert dpos, (cases y, auto simp: delta_gt_def)+)"], ["proof (state)\nthis:\n  y \\<le> x\n\ngoal (13 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>x y z u.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y;\n        gt_arctic_delta \\<delta> z u\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> (x + z) (y + u)\n 3. \\<And>x y z.\n       gt_arctic_delta \\<delta> x y \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * z) (y * z)\n 4. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 5. \\<And>x. gt_arctic_delta \\<delta> x 0\n 6. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 7. \\<And>x. 0 \\<le> x\n 8. pos_arctic_delta 1\n 9. \\<not> pos_arctic_delta 0\n 10. \\<And>x y.\n        pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>x y z u.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y;\n        gt_arctic_delta \\<delta> z u\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> (x + z) (y + u)\n 3. \\<And>x y z.\n       gt_arctic_delta \\<delta> x y \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * z) (y * z)\n 4. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 5. \\<And>x. gt_arctic_delta \\<delta> x 0\n 6. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 7. \\<And>x. 0 \\<le> x\n 8. pos_arctic_delta 1\n 9. \\<not> pos_arctic_delta 0\n 10. \\<And>x y.\n        pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\nA total of 13 subgoals...", "fix x y z u"], ["proof (state)\ngoal (13 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>x y z u.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y;\n        gt_arctic_delta \\<delta> z u\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> (x + z) (y + u)\n 3. \\<And>x y z.\n       gt_arctic_delta \\<delta> x y \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * z) (y * z)\n 4. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 5. \\<And>x. gt_arctic_delta \\<delta> x 0\n 6. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 7. \\<And>x. 0 \\<le> x\n 8. pos_arctic_delta 1\n 9. \\<not> pos_arctic_delta 0\n 10. \\<And>x y.\n        pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\nA total of 13 subgoals...", "assume \"gt_arctic_delta \\<delta> x y\" and \"gt_arctic_delta \\<delta> z u\""], ["proof (state)\nthis:\n  gt_arctic_delta \\<delta> x y\n  gt_arctic_delta \\<delta> z u\n\ngoal (13 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>x y z u.\n       \\<lbrakk>gt_arctic_delta \\<delta> x y;\n        gt_arctic_delta \\<delta> z u\\<rbrakk>\n       \\<Longrightarrow> gt_arctic_delta \\<delta> (x + z) (y + u)\n 3. \\<And>x y z.\n       gt_arctic_delta \\<delta> x y \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * z) (y * z)\n 4. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 5. \\<And>x. gt_arctic_delta \\<delta> x 0\n 6. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 7. \\<And>x. 0 \\<le> x\n 8. pos_arctic_delta 1\n 9. \\<not> pos_arctic_delta 0\n 10. \\<And>x y.\n        pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\nA total of 13 subgoals...", "thus \"gt_arctic_delta \\<delta> (x + z) (y + u)\""], ["proof (prove)\nusing this:\n  gt_arctic_delta \\<delta> x y\n  gt_arctic_delta \\<delta> z u\n\ngoal (1 subgoal):\n 1. gt_arctic_delta \\<delta> (x + z) (y + u)", "by (cases y, cases u, simp, cases z, simp, cases x, simp, simp add: delta_gt_def, \n        cases z, cases x, simp, cases u, simp, simp, cases x, simp, cases z, simp, cases u, simp add: delta_gt_def, simp add: delta_gt_def)"], ["proof (state)\nthis:\n  gt_arctic_delta \\<delta> (x + z) (y + u)\n\ngoal (12 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>x y z.\n       gt_arctic_delta \\<delta> x y \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * z) (y * z)\n 3. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 4. \\<And>x. gt_arctic_delta \\<delta> x 0\n 5. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 6. \\<And>x. 0 \\<le> x\n 7. pos_arctic_delta 1\n 8. \\<not> pos_arctic_delta 0\n 9. \\<And>x y. pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\n 10. \\<And>x y.\n        \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n        \\<Longrightarrow> pos_arctic_delta (x * y)\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>x y z.\n       gt_arctic_delta \\<delta> x y \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * z) (y * z)\n 3. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 4. \\<And>x. gt_arctic_delta \\<delta> x 0\n 5. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 6. \\<And>x. 0 \\<le> x\n 7. pos_arctic_delta 1\n 8. \\<not> pos_arctic_delta 0\n 9. \\<And>x y. pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\n 10. \\<And>x y.\n        \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n        \\<Longrightarrow> pos_arctic_delta (x * y)\nA total of 12 subgoals...", "fix x y z"], ["proof (state)\ngoal (12 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>x y z.\n       gt_arctic_delta \\<delta> x y \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * z) (y * z)\n 3. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 4. \\<And>x. gt_arctic_delta \\<delta> x 0\n 5. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 6. \\<And>x. 0 \\<le> x\n 7. pos_arctic_delta 1\n 8. \\<not> pos_arctic_delta 0\n 9. \\<And>x y. pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\n 10. \\<And>x y.\n        \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n        \\<Longrightarrow> pos_arctic_delta (x * y)\nA total of 12 subgoals...", "assume \"gt_arctic_delta \\<delta> x y\""], ["proof (state)\nthis:\n  gt_arctic_delta \\<delta> x y\n\ngoal (12 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>x y z.\n       gt_arctic_delta \\<delta> x y \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * z) (y * z)\n 3. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 4. \\<And>x. gt_arctic_delta \\<delta> x 0\n 5. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 6. \\<And>x. 0 \\<le> x\n 7. pos_arctic_delta 1\n 8. \\<not> pos_arctic_delta 0\n 9. \\<And>x y. pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\n 10. \\<And>x y.\n        \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n        \\<Longrightarrow> pos_arctic_delta (x * y)\nA total of 12 subgoals...", "thus \"gt_arctic_delta \\<delta> (x * z) (y * z)\""], ["proof (prove)\nusing this:\n  gt_arctic_delta \\<delta> x y\n\ngoal (1 subgoal):\n 1. gt_arctic_delta \\<delta> (x * z) (y * z)", "by (cases y, simp, cases z, simp, cases x, simp, simp add: plus_gt_left_mono)"], ["proof (state)\nthis:\n  gt_arctic_delta \\<delta> (x * z) (y * z)\n\ngoal (11 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 3. \\<And>x. gt_arctic_delta \\<delta> x 0\n 4. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 5. \\<And>x. 0 \\<le> x\n 6. pos_arctic_delta 1\n 7. \\<not> pos_arctic_delta 0\n 8. \\<And>x y. pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\n 9. \\<And>x y.\n       \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic_delta (x * y)\n 10. \\<And>c d.\n        pos_arctic_delta d \\<Longrightarrow>\n        \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 3. \\<And>x. gt_arctic_delta \\<delta> x 0\n 4. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 5. \\<And>x. 0 \\<le> x\n 6. pos_arctic_delta 1\n 7. \\<not> pos_arctic_delta 0\n 8. \\<And>x y. pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\n 9. \\<And>x y.\n       \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic_delta (x * y)\n 10. \\<And>c d.\n        pos_arctic_delta d \\<Longrightarrow>\n        \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\nA total of 11 subgoals...", "fix x"], ["proof (state)\ngoal (11 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 3. \\<And>x. gt_arctic_delta \\<delta> x 0\n 4. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 5. \\<And>x. 0 \\<le> x\n 6. pos_arctic_delta 1\n 7. \\<not> pos_arctic_delta 0\n 8. \\<And>x y. pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\n 9. \\<And>x y.\n       \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic_delta (x * y)\n 10. \\<And>c d.\n        pos_arctic_delta d \\<Longrightarrow>\n        \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\nA total of 11 subgoals...", "assume \"gt_arctic_delta \\<delta> 0 x\""], ["proof (state)\nthis:\n  gt_arctic_delta \\<delta> 0 x\n\ngoal (11 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 3. \\<And>x. gt_arctic_delta \\<delta> x 0\n 4. \\<And>x. gt_arctic_delta \\<delta> 0 x \\<Longrightarrow> x = 0\n 5. \\<And>x. 0 \\<le> x\n 6. pos_arctic_delta 1\n 7. \\<not> pos_arctic_delta 0\n 8. \\<And>x y. pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\n 9. \\<And>x y.\n       \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic_delta (x * y)\n 10. \\<And>c d.\n        pos_arctic_delta d \\<Longrightarrow>\n        \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\nA total of 11 subgoals...", "thus \"x = 0\""], ["proof (prove)\nusing this:\n  gt_arctic_delta \\<delta> 0 x\n\ngoal (1 subgoal):\n 1. x = 0", "by (cases x, auto simp: zero_arctic_delta_def)"], ["proof (state)\nthis:\n  x = 0\n\ngoal (10 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 3. \\<And>x. gt_arctic_delta \\<delta> x 0\n 4. \\<And>x. 0 \\<le> x\n 5. pos_arctic_delta 1\n 6. \\<not> pos_arctic_delta 0\n 7. \\<And>x y. pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\n 8. \\<And>x y.\n       \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic_delta (x * y)\n 9. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n 10. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 3. \\<And>x. gt_arctic_delta \\<delta> x 0\n 4. \\<And>x. 0 \\<le> x\n 5. pos_arctic_delta 1\n 6. \\<not> pos_arctic_delta 0\n 7. \\<And>x y. pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\n 8. \\<And>x y.\n       \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic_delta (x * y)\n 9. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n 10. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "fix x"], ["proof (state)\ngoal (10 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 3. \\<And>x. gt_arctic_delta \\<delta> x 0\n 4. \\<And>x. 0 \\<le> x\n 5. pos_arctic_delta 1\n 6. \\<not> pos_arctic_delta 0\n 7. \\<And>x y. pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\n 8. \\<And>x y.\n       \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic_delta (x * y)\n 9. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n 10. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "show \"pos_arctic_delta 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_arctic_delta 1", "unfolding one_arctic_delta_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_arctic_delta (Num_arc_delta (0::'b))", "by simp"], ["proof (state)\nthis:\n  pos_arctic_delta 1\n\ngoal (9 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 3. \\<And>x. gt_arctic_delta \\<delta> x 0\n 4. \\<And>x. 0 \\<le> x\n 5. \\<not> pos_arctic_delta 0\n 6. \\<And>x y. pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\n 7. \\<And>x y.\n       \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic_delta (x * y)\n 8. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n 9. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "show \"gt_arctic_delta \\<delta> x 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gt_arctic_delta \\<delta> x 0", "unfolding zero_arctic_delta_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. gt_arctic_delta \\<delta> x MinInfty_delta", "by simp"], ["proof (state)\nthis:\n  gt_arctic_delta \\<delta> x 0\n\ngoal (8 subgoals):\n 1. 0 \\<le> 1\n 2. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 3. \\<And>x. 0 \\<le> x\n 4. \\<not> pos_arctic_delta 0\n 5. \\<And>x y. pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\n 6. \\<And>x y.\n       \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic_delta (x * y)\n 7. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n 8. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "show \"(1 :: 'a arctic_delta) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 1", "unfolding zero_arctic_delta_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. MinInfty_delta \\<le> 1", "by simp"], ["proof (state)\nthis:\n  0 \\<le> 1\n\ngoal (7 subgoals):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 2. \\<And>x. 0 \\<le> x\n 3. \\<not> pos_arctic_delta 0\n 4. \\<And>x y. pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\n 5. \\<And>x y.\n       \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic_delta (x * y)\n 6. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n 7. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "show \"x \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> x", "unfolding zero_arctic_delta_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. MinInfty_delta \\<le> x", "by simp"], ["proof (state)\nthis:\n  0 \\<le> x\n\ngoal (6 subgoals):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 2. \\<not> pos_arctic_delta 0\n 3. \\<And>x y. pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\n 4. \\<And>x y.\n       \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic_delta (x * y)\n 5. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n 6. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "show \"\\<not> pos_arctic_delta 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> pos_arctic_delta 0", "unfolding zero_arctic_delta_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> pos_arctic_delta MinInfty_delta", "by simp"], ["proof (state)\nthis:\n  \\<not> pos_arctic_delta 0\n\ngoal (5 subgoals):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 2. \\<And>x y. pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\n 3. \\<And>x y.\n       \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic_delta (x * y)\n 4. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n 5. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 2. \\<And>x y. pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\n 3. \\<And>x y.\n       \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic_delta (x * y)\n 4. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n 5. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "fix x y :: \"'a arctic_delta\""], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 2. \\<And>x y. pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\n 3. \\<And>x y.\n       \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic_delta (x * y)\n 4. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n 5. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "assume \"pos_arctic_delta x\""], ["proof (state)\nthis:\n  pos_arctic_delta x\n\ngoal (5 subgoals):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 2. \\<And>x y. pos_arctic_delta x \\<Longrightarrow> pos_arctic_delta (x + y)\n 3. \\<And>x y.\n       \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic_delta (x * y)\n 4. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n 5. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "thus \"pos_arctic_delta (x + y)\""], ["proof (prove)\nusing this:\n  pos_arctic_delta x\n\ngoal (1 subgoal):\n 1. pos_arctic_delta (x + y)", "by (cases x, simp, cases y, auto)"], ["proof (state)\nthis:\n  pos_arctic_delta (x + y)\n\ngoal (4 subgoals):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 2. \\<And>x y.\n       \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic_delta (x * y)\n 3. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n 4. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 2. \\<And>x y.\n       \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic_delta (x * y)\n 3. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n 4. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "fix x y :: \"'a arctic_delta\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 2. \\<And>x y.\n       \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic_delta (x * y)\n 3. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n 4. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "assume \"pos_arctic_delta x\" and \"pos_arctic_delta y\""], ["proof (state)\nthis:\n  pos_arctic_delta x\n  pos_arctic_delta y\n\ngoal (4 subgoals):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 2. \\<And>x y.\n       \\<lbrakk>pos_arctic_delta x; pos_arctic_delta y\\<rbrakk>\n       \\<Longrightarrow> pos_arctic_delta (x * y)\n 3. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n 4. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "thus \"pos_arctic_delta (x * y)\""], ["proof (prove)\nusing this:\n  pos_arctic_delta x\n  pos_arctic_delta y\n\ngoal (1 subgoal):\n 1. pos_arctic_delta (x * y)", "by (cases x, simp, cases y, auto)"], ["proof (state)\nthis:\n  pos_arctic_delta (x * y)\n\ngoal (3 subgoals):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 2. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n 3. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 2. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n 3. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "show \"SN {(x,y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}\" (is \"SN ?rel\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "assume \"\\<exists> f . f 0 = x \\<and> (\\<forall> i. (f i, f (Suc i)) \\<in> ?rel)\""], ["proof (state)\nthis:\n  \\<exists>f.\n     f 0 = x \\<and>\n     (\\<forall>i.\n         (f i, f (Suc i))\n         \\<in> {(x, y).\n                pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y})\n\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "from this"], ["proof (chain)\npicking this:\n  \\<exists>f.\n     f 0 = x \\<and>\n     (\\<forall>i.\n         (f i, f (Suc i))\n         \\<in> {(x, y).\n                pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y})", "obtain f where \"f 0 = x\" and seq: \"\\<forall> i. (f i, f (Suc i)) \\<in> ?rel\""], ["proof (prove)\nusing this:\n  \\<exists>f.\n     f 0 = x \\<and>\n     (\\<forall>i.\n         (f i, f (Suc i))\n         \\<in> {(x, y).\n                pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y})\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f 0 = x;\n         \\<forall>i.\n            (f i, f (Suc i))\n            \\<in> {(x, y).\n                   pos_arctic_delta y \\<and>\n                   gt_arctic_delta \\<delta> x y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f 0 = x\n  \\<forall>i.\n     (f i, f (Suc i))\n     \\<in> {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}\n\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "from seq"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     (f i, f (Suc i))\n     \\<in> {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "have steps: \"\\<forall> i. gt_arctic_delta \\<delta> (f i) (f (Suc i)) \\<and> pos_arctic_delta (f (Suc i)) \""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (f i, f (Suc i))\n     \\<in> {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       gt_arctic_delta \\<delta> (f i) (f (Suc i)) \\<and>\n       pos_arctic_delta (f (Suc i))", "by auto"], ["proof (state)\nthis:\n  \\<forall>i.\n     gt_arctic_delta \\<delta> (f i) (f (Suc i)) \\<and>\n     pos_arctic_delta (f (Suc i))\n\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "let ?g = \"\\<lambda> i. get_arctic_delta_num (f i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "have \"\\<forall> i. ?g (Suc i) \\<ge> 0 \\<and> delta_gt \\<delta> (?g i) (?g (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (0::'a) \\<le> get_arctic_delta_num (f (Suc i)) \\<and>\n       delta_gt \\<delta> (get_arctic_delta_num (f i))\n        (get_arctic_delta_num (f (Suc i)))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       (0::'a) \\<le> get_arctic_delta_num (f (Suc i)) \\<and>\n       delta_gt \\<delta> (get_arctic_delta_num (f i))\n        (get_arctic_delta_num (f (Suc i)))", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       (0::'a) \\<le> get_arctic_delta_num (f (Suc i)) \\<and>\n       delta_gt \\<delta> (get_arctic_delta_num (f i))\n        (get_arctic_delta_num (f (Suc i)))", "from steps"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     gt_arctic_delta \\<delta> (f i) (f (Suc i)) \\<and>\n     pos_arctic_delta (f (Suc i))", "have i: \"gt_arctic_delta \\<delta> (f i) (f (Suc i)) \\<and> pos_arctic_delta (f (Suc i))\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     gt_arctic_delta \\<delta> (f i) (f (Suc i)) \\<and>\n     pos_arctic_delta (f (Suc i))\n\ngoal (1 subgoal):\n 1. gt_arctic_delta \\<delta> (f i) (f (Suc i)) \\<and>\n    pos_arctic_delta (f (Suc i))", "by auto"], ["proof (state)\nthis:\n  gt_arctic_delta \\<delta> (f i) (f (Suc i)) \\<and>\n  pos_arctic_delta (f (Suc i))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       (0::'a) \\<le> get_arctic_delta_num (f (Suc i)) \\<and>\n       delta_gt \\<delta> (get_arctic_delta_num (f i))\n        (get_arctic_delta_num (f (Suc i)))", "from i"], ["proof (chain)\npicking this:\n  gt_arctic_delta \\<delta> (f i) (f (Suc i)) \\<and>\n  pos_arctic_delta (f (Suc i))", "obtain n where fi: \"f i = Num_arc_delta n\""], ["proof (prove)\nusing this:\n  gt_arctic_delta \\<delta> (f i) (f (Suc i)) \\<and>\n  pos_arctic_delta (f (Suc i))\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        f i = Num_arc_delta n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases \"f (Suc i)\", simp, cases \"f i\", auto)"], ["proof (state)\nthis:\n  f i = Num_arc_delta n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       (0::'a) \\<le> get_arctic_delta_num (f (Suc i)) \\<and>\n       delta_gt \\<delta> (get_arctic_delta_num (f i))\n        (get_arctic_delta_num (f (Suc i)))", "from i"], ["proof (chain)\npicking this:\n  gt_arctic_delta \\<delta> (f i) (f (Suc i)) \\<and>\n  pos_arctic_delta (f (Suc i))", "obtain m where fsi: \"f (Suc i) = Num_arc_delta m\""], ["proof (prove)\nusing this:\n  gt_arctic_delta \\<delta> (f i) (f (Suc i)) \\<and>\n  pos_arctic_delta (f (Suc i))\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        f (Suc i) = Num_arc_delta m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"f (Suc i)\", auto)"], ["proof (state)\nthis:\n  f (Suc i) = Num_arc_delta m\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       (0::'a) \\<le> get_arctic_delta_num (f (Suc i)) \\<and>\n       delta_gt \\<delta> (get_arctic_delta_num (f i))\n        (get_arctic_delta_num (f (Suc i)))", "with i"], ["proof (chain)\npicking this:\n  gt_arctic_delta \\<delta> (f i) (f (Suc i)) \\<and>\n  pos_arctic_delta (f (Suc i))\n  f (Suc i) = Num_arc_delta m", "have gz: \"0 \\<le> m\""], ["proof (prove)\nusing this:\n  gt_arctic_delta \\<delta> (f i) (f (Suc i)) \\<and>\n  pos_arctic_delta (f (Suc i))\n  f (Suc i) = Num_arc_delta m\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> m", "by simp"], ["proof (state)\nthis:\n  (0::'a) \\<le> m\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       (0::'a) \\<le> get_arctic_delta_num (f (Suc i)) \\<and>\n       delta_gt \\<delta> (get_arctic_delta_num (f i))\n        (get_arctic_delta_num (f (Suc i)))", "from i fi fsi"], ["proof (chain)\npicking this:\n  gt_arctic_delta \\<delta> (f i) (f (Suc i)) \\<and>\n  pos_arctic_delta (f (Suc i))\n  f i = Num_arc_delta n\n  f (Suc i) = Num_arc_delta m", "have \"delta_gt \\<delta> n m\""], ["proof (prove)\nusing this:\n  gt_arctic_delta \\<delta> (f i) (f (Suc i)) \\<and>\n  pos_arctic_delta (f (Suc i))\n  f i = Num_arc_delta n\n  f (Suc i) = Num_arc_delta m\n\ngoal (1 subgoal):\n 1. delta_gt \\<delta> n m", "by auto"], ["proof (state)\nthis:\n  delta_gt \\<delta> n m\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       (0::'a) \\<le> get_arctic_delta_num (f (Suc i)) \\<and>\n       delta_gt \\<delta> (get_arctic_delta_num (f i))\n        (get_arctic_delta_num (f (Suc i)))", "with fi fsi gz"], ["proof (chain)\npicking this:\n  f i = Num_arc_delta n\n  f (Suc i) = Num_arc_delta m\n  (0::'a) \\<le> m\n  delta_gt \\<delta> n m", "show \"?g (Suc i) \\<ge> 0 \\<and> delta_gt \\<delta> (?g i) (?g (Suc i))\""], ["proof (prove)\nusing this:\n  f i = Num_arc_delta n\n  f (Suc i) = Num_arc_delta m\n  (0::'a) \\<le> m\n  delta_gt \\<delta> n m\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> get_arctic_delta_num (f (Suc i)) \\<and>\n    delta_gt \\<delta> (get_arctic_delta_num (f i))\n     (get_arctic_delta_num (f (Suc i)))", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<le> get_arctic_delta_num (f (Suc i)) \\<and>\n  delta_gt \\<delta> (get_arctic_delta_num (f i))\n   (get_arctic_delta_num (f (Suc i)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i.\n     (0::'a) \\<le> get_arctic_delta_num (f (Suc i)) \\<and>\n     delta_gt \\<delta> (get_arctic_delta_num (f i))\n      (get_arctic_delta_num (f (Suc i)))\n\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "from this"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     (0::'a) \\<le> get_arctic_delta_num (f (Suc i)) \\<and>\n     delta_gt \\<delta> (get_arctic_delta_num (f i))\n      (get_arctic_delta_num (f (Suc i)))", "obtain g where \"\\<forall> i. g (Suc i) \\<ge> 0 \\<and> delta_gt \\<delta> (g i) (g (Suc i))\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (0::'a) \\<le> get_arctic_delta_num (f (Suc i)) \\<and>\n     delta_gt \\<delta> (get_arctic_delta_num (f i))\n      (get_arctic_delta_num (f (Suc i)))\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<forall>i.\n           (0::'a) \\<le> g (Suc i) \\<and>\n           delta_gt \\<delta> (g i) (g (Suc i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>i.\n     (0::'a) \\<le> g (Suc i) \\<and> delta_gt \\<delta> (g i) (g (Suc i))\n\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "hence \"\\<exists> f. f 0 = g 0 \\<and> (\\<forall> i. (f i, f (Suc i)) \\<in> {(x,y). y \\<ge> 0 \\<and> delta_gt \\<delta> x y})\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (0::'a) \\<le> g (Suc i) \\<and> delta_gt \\<delta> (g i) (g (Suc i))\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       f 0 = g 0 \\<and>\n       (\\<forall>i.\n           (f i, f (Suc i))\n           \\<in> {(x, y). (0::'a) \\<le> y \\<and> delta_gt \\<delta> x y})", "by auto"], ["proof (state)\nthis:\n  \\<exists>f.\n     f 0 = g 0 \\<and>\n     (\\<forall>i.\n         (f i, f (Suc i))\n         \\<in> {(x, y). (0::'a) \\<le> y \\<and> delta_gt \\<delta> x y})\n\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "with SN"], ["proof (chain)\npicking this:\n  SN {(x, y). (0::'a) \\<le> y \\<and> delta_gt \\<delta> x y}\n  \\<exists>f.\n     f 0 = g 0 \\<and>\n     (\\<forall>i.\n         (f i, f (Suc i))\n         \\<in> {(x, y). (0::'a) \\<le> y \\<and> delta_gt \\<delta> x y})", "have False"], ["proof (prove)\nusing this:\n  SN {(x, y). (0::'a) \\<le> y \\<and> delta_gt \\<delta> x y}\n  \\<exists>f.\n     f 0 = g 0 \\<and>\n     (\\<forall>i.\n         (f i, f (Suc i))\n         \\<in> {(x, y). (0::'a) \\<le> y \\<and> delta_gt \\<delta> x y})\n\ngoal (1 subgoal):\n 1. False", "unfolding SN_defs"], ["proof (prove)\nusing this:\n  \\<nexists>f.\n     f 0 \\<in> UNIV \\<and>\n     (\\<forall>i.\n         (f i, f (Suc i))\n         \\<in> {(x, y). (0::'a) \\<le> y \\<and> delta_gt \\<delta> x y})\n  \\<exists>f.\n     f 0 = g 0 \\<and>\n     (\\<forall>i.\n         (f i, f (Suc i))\n         \\<in> {(x, y). (0::'a) \\<le> y \\<and> delta_gt \\<delta> x y})\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "}"], ["proof (state)\nthis:\n  \\<exists>f.\n     f 0 = ?x2 \\<and>\n     (\\<forall>i.\n         (f i, f (Suc i))\n         \\<in> {(x, y).\n                pos_arctic_delta y \\<and>\n                gt_arctic_delta \\<delta> x y}) \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>f.\n     f 0 = ?x2 \\<and>\n     (\\<forall>i.\n         (f i, f (Suc i))\n         \\<in> {(x, y).\n                pos_arctic_delta y \\<and>\n                gt_arctic_delta \\<delta> x y}) \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}", "unfolding SN_defs"], ["proof (prove)\nusing this:\n  \\<exists>f.\n     f 0 = ?x2 \\<and>\n     (\\<forall>i.\n         (f i, f (Suc i))\n         \\<in> {(x, y).\n                pos_arctic_delta y \\<and>\n                gt_arctic_delta \\<delta> x y}) \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. \\<nexists>f.\n       f 0 \\<in> UNIV \\<and>\n       (\\<forall>i.\n           (f i, f (Suc i))\n           \\<in> {(x, y).\n                  pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y})", "by auto"], ["proof (state)\nthis:\n  SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN {(x, y). pos_arctic_delta y \\<and> gt_arctic_delta \\<delta> x y}\n\ngoal (2 subgoals):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 2. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 2. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c", "fix c d :: \"'a arctic_delta\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 2. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c", "assume \"pos_arctic_delta d\""], ["proof (state)\nthis:\n  pos_arctic_delta d\n\ngoal (2 subgoals):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 2. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c", "then"], ["proof (chain)\npicking this:\n  pos_arctic_delta d", "obtain n where d: \"d = Num_arc_delta n\" and n: \"0 \\<le> n\""], ["proof (prove)\nusing this:\n  pos_arctic_delta d\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>d = Num_arc_delta n; (0::'a) \\<le> n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases d, auto)"], ["proof (state)\nthis:\n  d = Num_arc_delta n\n  (0::'a) \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)\n 2. \\<And>c d.\n       pos_arctic_delta d \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c", "show \"\\<exists> e. e \\<ge> 0 \\<and> pos_arctic_delta e \\<and> \\<not> c \\<ge> d * e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c", "proof (cases c)"], ["proof (state)\ngoal (2 subgoals):\n 1. c = MinInfty_delta \\<Longrightarrow>\n    \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n 2. \\<And>x2.\n       c = Num_arc_delta x2 \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c", "case MinInfty_delta"], ["proof (state)\nthis:\n  c = MinInfty_delta\n\ngoal (2 subgoals):\n 1. c = MinInfty_delta \\<Longrightarrow>\n    \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n 2. \\<And>x2.\n       c = Num_arc_delta x2 \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c", "by (rule exI[of _ \"Num_arc_delta 0\"],\n          unfold d MinInfty_delta zero_arctic_delta_def, simp)"], ["proof (state)\nthis:\n  \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       c = Num_arc_delta x2 \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       c = Num_arc_delta x2 \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c", "case (Num_arc_delta m)"], ["proof (state)\nthis:\n  c = Num_arc_delta m\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       c = Num_arc_delta x2 \\<Longrightarrow>\n       \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c", "by (rule exI[of _ \"Num_arc_delta (abs m  + 1)\"], insert n,\n          unfold d Num_arc_delta zero_arctic_delta_def, simp)"], ["proof (state)\nthis:\n  \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>e\\<ge>0. pos_arctic_delta e \\<and> \\<not> d * e \\<le> c\n\ngoal (1 subgoal):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)", "fix x y z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)", "assume gt: \"gt_arctic_delta \\<delta> y z\""], ["proof (state)\nthis:\n  gt_arctic_delta \\<delta> y z\n\ngoal (1 subgoal):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)", "{"], ["proof (state)\nthis:\n  gt_arctic_delta \\<delta> y z\n\ngoal (1 subgoal):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)", "fix x y z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)", "assume gt: \"delta_gt \\<delta> y z\""], ["proof (state)\nthis:\n  delta_gt \\<delta> y z\n\ngoal (1 subgoal):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)", "have \"delta_gt \\<delta> (x + y) (x + z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. delta_gt \\<delta> (x + y) (x + z)", "using plus_gt_left_mono[OF gt]"], ["proof (prove)\nusing this:\n  delta_gt \\<delta> (y + ?z) (z + ?z)\n\ngoal (1 subgoal):\n 1. delta_gt \\<delta> (x + y) (x + z)", "by (auto simp: field_simps)"], ["proof (state)\nthis:\n  delta_gt \\<delta> (x + y) (x + z)\n\ngoal (1 subgoal):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)", "}"], ["proof (state)\nthis:\n  delta_gt \\<delta> ?ya2 ?za2 \\<Longrightarrow>\n  delta_gt \\<delta> (?xa2 + ?ya2) (?xa2 + ?za2)\n\ngoal (1 subgoal):\n 1. \\<And>y z x.\n       gt_arctic_delta \\<delta> y z \\<Longrightarrow>\n       gt_arctic_delta \\<delta> (x * y) (x * z)", "with gt"], ["proof (chain)\npicking this:\n  gt_arctic_delta \\<delta> y z\n  delta_gt \\<delta> ?ya2 ?za2 \\<Longrightarrow>\n  delta_gt \\<delta> (?xa2 + ?ya2) (?xa2 + ?za2)", "show \"gt_arctic_delta \\<delta> (x * y) (x * z)\""], ["proof (prove)\nusing this:\n  gt_arctic_delta \\<delta> y z\n  delta_gt \\<delta> ?ya2 ?za2 \\<Longrightarrow>\n  delta_gt \\<delta> (?xa2 + ?ya2) (?xa2 + ?za2)\n\ngoal (1 subgoal):\n 1. gt_arctic_delta \\<delta> (x * y) (x * z)", "by (cases x, simp, cases z, simp, cases y, simp_all)"], ["proof (state)\nthis:\n  gt_arctic_delta \\<delta> (x * y) (x * z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN_both_mono_ordered_semiring_1 1 (gt_arctic_delta \\<delta>)\n   pos_arctic_delta\n\ngoal:\nNo subgoals!", "qed"], ["", "fun weak_gt_arctic_delta :: \"('a :: floor_ceiling) arctic_delta \\<Rightarrow> 'a arctic_delta \\<Rightarrow> bool\"\nwhere \"weak_gt_arctic_delta _ MinInfty_delta = True\"\n   |  \"weak_gt_arctic_delta MinInfty_delta (Num_arc_delta _) = False\"\n   |  \"weak_gt_arctic_delta (Num_arc_delta x) (Num_arc_delta y) = (x > y)\""], ["", "interpretation weak_arctic_delta_SN: weak_SN_both_mono_ordered_semiring_1 weak_gt_arctic_delta 1 pos_arctic_delta"], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_SN_both_mono_ordered_semiring_1 weak_gt_arctic_delta 1\n     pos_arctic_delta", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xys.\n       \\<forall>x y.\n          (x, y) \\<in> set xys \\<longrightarrow>\n          weak_gt_arctic_delta x y \\<Longrightarrow>\n       \\<exists>gt.\n          SN_both_mono_ordered_semiring_1 1 gt pos_arctic_delta \\<and>\n          (\\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> gt x y)", "fix xys"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xys.\n       \\<forall>x y.\n          (x, y) \\<in> set xys \\<longrightarrow>\n          weak_gt_arctic_delta x y \\<Longrightarrow>\n       \\<exists>gt.\n          SN_both_mono_ordered_semiring_1 1 gt pos_arctic_delta \\<and>\n          (\\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> gt x y)", "assume orient: \"\\<forall> x y. (x,y) \\<in> set xys \\<longrightarrow> weak_gt_arctic_delta x y\""], ["proof (state)\nthis:\n  \\<forall>x y.\n     (x, y) \\<in> set xys \\<longrightarrow> weak_gt_arctic_delta x y\n\ngoal (1 subgoal):\n 1. \\<And>xys.\n       \\<forall>x y.\n          (x, y) \\<in> set xys \\<longrightarrow>\n          weak_gt_arctic_delta x y \\<Longrightarrow>\n       \\<exists>gt.\n          SN_both_mono_ordered_semiring_1 1 gt pos_arctic_delta \\<and>\n          (\\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> gt x y)", "obtain xysp where xysp: \"xysp = map (\\<lambda> (ax, ay). (case ax of Num_arc_delta x \\<Rightarrow> x , case ay of Num_arc_delta y \\<Rightarrow> y)) (filter (\\<lambda> (ax,ay). ax \\<noteq> MinInfty_delta \\<and> ay \\<noteq> MinInfty_delta) xys)\"\n    (is \"_ = map ?f _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xysp.\n        xysp =\n        map (\\<lambda>(ax, ay).\n                (case ax of Num_arc_delta x \\<Rightarrow> x,\n                 case ay of Num_arc_delta y \\<Rightarrow> y))\n         (filter\n           (\\<lambda>(ax, ay).\n               ax \\<noteq> MinInfty_delta \\<and> ay \\<noteq> MinInfty_delta)\n           xys) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xysp =\n  map (\\<lambda>(ax, ay).\n          (case ax of Num_arc_delta x \\<Rightarrow> x,\n           case ay of Num_arc_delta y \\<Rightarrow> y))\n   (filter\n     (\\<lambda>(ax, ay).\n         ax \\<noteq> MinInfty_delta \\<and> ay \\<noteq> MinInfty_delta)\n     xys)\n\ngoal (1 subgoal):\n 1. \\<And>xys.\n       \\<forall>x y.\n          (x, y) \\<in> set xys \\<longrightarrow>\n          weak_gt_arctic_delta x y \\<Longrightarrow>\n       \\<exists>gt.\n          SN_both_mono_ordered_semiring_1 1 gt pos_arctic_delta \\<and>\n          (\\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> gt x y)", "have \"\\<forall> x y. (x,y) \\<in> set xysp \\<longrightarrow> x > y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y. (x, y) \\<in> set xysp \\<longrightarrow> y < x", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. (x, y) \\<in> set xysp \\<Longrightarrow> y < x", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. (x, y) \\<in> set xysp \\<Longrightarrow> y < x", "assume \"(x,y) \\<in> set xysp\""], ["proof (state)\nthis:\n  (x, y) \\<in> set xysp\n\ngoal (1 subgoal):\n 1. \\<And>x y. (x, y) \\<in> set xysp \\<Longrightarrow> y < x", "with xysp"], ["proof (chain)\npicking this:\n  xysp =\n  map (\\<lambda>(ax, ay).\n          (case ax of Num_arc_delta x \\<Rightarrow> x,\n           case ay of Num_arc_delta y \\<Rightarrow> y))\n   (filter\n     (\\<lambda>(ax, ay).\n         ax \\<noteq> MinInfty_delta \\<and> ay \\<noteq> MinInfty_delta)\n     xys)\n  (x, y) \\<in> set xysp", "obtain ax ay where \"(ax,ay) \\<in> set xys\" and \"ax \\<noteq> MinInfty_delta\" and \"ay \\<noteq> MinInfty_delta\" and \"(x,y) = ?f (ax,ay)\""], ["proof (prove)\nusing this:\n  xysp =\n  map (\\<lambda>(ax, ay).\n          (case ax of Num_arc_delta x \\<Rightarrow> x,\n           case ay of Num_arc_delta y \\<Rightarrow> y))\n   (filter\n     (\\<lambda>(ax, ay).\n         ax \\<noteq> MinInfty_delta \\<and> ay \\<noteq> MinInfty_delta)\n     xys)\n  (x, y) \\<in> set xysp\n\ngoal (1 subgoal):\n 1. (\\<And>ax ay.\n        \\<lbrakk>(ax, ay) \\<in> set xys; ax \\<noteq> MinInfty_delta;\n         ay \\<noteq> MinInfty_delta;\n         (x, y) =\n         (case (ax, ay) of\n          (ax, ay) \\<Rightarrow>\n            (case ax of Num_arc_delta x \\<Rightarrow> x,\n             case ay of Num_arc_delta y \\<Rightarrow> y))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (ax, ay) \\<in> set xys\n  ax \\<noteq> MinInfty_delta\n  ay \\<noteq> MinInfty_delta\n  (x, y) =\n  (case (ax, ay) of\n   (ax, ay) \\<Rightarrow>\n     (case ax of Num_arc_delta x \\<Rightarrow> x,\n      case ay of Num_arc_delta y \\<Rightarrow> y))\n\ngoal (1 subgoal):\n 1. \\<And>x y. (x, y) \\<in> set xysp \\<Longrightarrow> y < x", "hence \"(Num_arc_delta x, Num_arc_delta y) \\<in> set xys\""], ["proof (prove)\nusing this:\n  (ax, ay) \\<in> set xys\n  ax \\<noteq> MinInfty_delta\n  ay \\<noteq> MinInfty_delta\n  (x, y) =\n  (case (ax, ay) of\n   (ax, ay) \\<Rightarrow>\n     (case ax of Num_arc_delta x \\<Rightarrow> x,\n      case ay of Num_arc_delta y \\<Rightarrow> y))\n\ngoal (1 subgoal):\n 1. (Num_arc_delta x, Num_arc_delta y) \\<in> set xys", "by (cases ax, simp, cases ay, auto)"], ["proof (state)\nthis:\n  (Num_arc_delta x, Num_arc_delta y) \\<in> set xys\n\ngoal (1 subgoal):\n 1. \\<And>x y. (x, y) \\<in> set xysp \\<Longrightarrow> y < x", "with orient"], ["proof (chain)\npicking this:\n  \\<forall>x y.\n     (x, y) \\<in> set xys \\<longrightarrow> weak_gt_arctic_delta x y\n  (Num_arc_delta x, Num_arc_delta y) \\<in> set xys", "show \"x > y\""], ["proof (prove)\nusing this:\n  \\<forall>x y.\n     (x, y) \\<in> set xys \\<longrightarrow> weak_gt_arctic_delta x y\n  (Num_arc_delta x, Num_arc_delta y) \\<in> set xys\n\ngoal (1 subgoal):\n 1. y < x", "by force"], ["proof (state)\nthis:\n  y < x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x y. (x, y) \\<in> set xysp \\<longrightarrow> y < x\n\ngoal (1 subgoal):\n 1. \\<And>xys.\n       \\<forall>x y.\n          (x, y) \\<in> set xys \\<longrightarrow>\n          weak_gt_arctic_delta x y \\<Longrightarrow>\n       \\<exists>gt.\n          SN_both_mono_ordered_semiring_1 1 gt pos_arctic_delta \\<and>\n          (\\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> gt x y)", "with delta_minimal_delta[of xysp]"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      (x, y) \\<in> set xysp \\<Longrightarrow> y < x) \\<Longrightarrow>\n  \\<exists>\\<delta>>0::'b.\n     \\<forall>x y.\n        (x, y) \\<in> set xysp \\<longrightarrow> delta_gt \\<delta> x y\n  \\<forall>x y. (x, y) \\<in> set xysp \\<longrightarrow> y < x", "obtain \\<delta> where dpos: \"\\<delta> > 0\" and orient2: \"\\<And> x y. (x, y) \\<in> set xysp \\<Longrightarrow> delta_gt \\<delta> x y\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      (x, y) \\<in> set xysp \\<Longrightarrow> y < x) \\<Longrightarrow>\n  \\<exists>\\<delta>>0::'b.\n     \\<forall>x y.\n        (x, y) \\<in> set xysp \\<longrightarrow> delta_gt \\<delta> x y\n  \\<forall>x y. (x, y) \\<in> set xysp \\<longrightarrow> y < x\n\ngoal (1 subgoal):\n 1. (\\<And>\\<delta>.\n        \\<lbrakk>(0::'b) < \\<delta>;\n         \\<And>x y.\n            (x, y) \\<in> set xysp \\<Longrightarrow>\n            delta_gt \\<delta> x y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (0::'b) < \\<delta>\n  (?x, ?y) \\<in> set xysp \\<Longrightarrow> delta_gt \\<delta> ?x ?y\n\ngoal (1 subgoal):\n 1. \\<And>xys.\n       \\<forall>x y.\n          (x, y) \\<in> set xys \\<longrightarrow>\n          weak_gt_arctic_delta x y \\<Longrightarrow>\n       \\<exists>gt.\n          SN_both_mono_ordered_semiring_1 1 gt pos_arctic_delta \\<and>\n          (\\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> gt x y)", "have orient: \"\\<forall> x y. (x,y) \\<in> set xys \\<longrightarrow> gt_arctic_delta \\<delta> x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       (x, y) \\<in> set xys \\<longrightarrow> gt_arctic_delta \\<delta> x y", "proof(intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y) \\<in> set xys \\<Longrightarrow> gt_arctic_delta \\<delta> x y", "fix ax ay"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y) \\<in> set xys \\<Longrightarrow> gt_arctic_delta \\<delta> x y", "assume axay: \"(ax,ay) \\<in> set xys\""], ["proof (state)\nthis:\n  (ax, ay) \\<in> set xys\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y) \\<in> set xys \\<Longrightarrow> gt_arctic_delta \\<delta> x y", "with orient"], ["proof (chain)\npicking this:\n  \\<forall>x y.\n     (x, y) \\<in> set xys \\<longrightarrow> weak_gt_arctic_delta x y\n  (ax, ay) \\<in> set xys", "have orient: \"weak_gt_arctic_delta ax ay\""], ["proof (prove)\nusing this:\n  \\<forall>x y.\n     (x, y) \\<in> set xys \\<longrightarrow> weak_gt_arctic_delta x y\n  (ax, ay) \\<in> set xys\n\ngoal (1 subgoal):\n 1. weak_gt_arctic_delta ax ay", "by auto"], ["proof (state)\nthis:\n  weak_gt_arctic_delta ax ay\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y) \\<in> set xys \\<Longrightarrow> gt_arctic_delta \\<delta> x y", "show \"gt_arctic_delta \\<delta> ax ay\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gt_arctic_delta \\<delta> ax ay", "proof (cases ay, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       ay = Num_arc_delta x2 \\<Longrightarrow>\n       gt_arctic_delta \\<delta> ax ay", "case (Num_arc_delta y)"], ["proof (state)\nthis:\n  ay = Num_arc_delta y\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       ay = Num_arc_delta x2 \\<Longrightarrow>\n       gt_arctic_delta \\<delta> ax ay", "note ay = this"], ["proof (state)\nthis:\n  ay = Num_arc_delta y\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       ay = Num_arc_delta x2 \\<Longrightarrow>\n       gt_arctic_delta \\<delta> ax ay", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. gt_arctic_delta \\<delta> ax ay", "proof (cases ax)"], ["proof (state)\ngoal (2 subgoals):\n 1. ax = MinInfty_delta \\<Longrightarrow> gt_arctic_delta \\<delta> ax ay\n 2. \\<And>x2.\n       ax = Num_arc_delta x2 \\<Longrightarrow>\n       gt_arctic_delta \\<delta> ax ay", "case MinInfty_delta"], ["proof (state)\nthis:\n  ax = MinInfty_delta\n\ngoal (2 subgoals):\n 1. ax = MinInfty_delta \\<Longrightarrow> gt_arctic_delta \\<delta> ax ay\n 2. \\<And>x2.\n       ax = Num_arc_delta x2 \\<Longrightarrow>\n       gt_arctic_delta \\<delta> ax ay", "with ay orient"], ["proof (chain)\npicking this:\n  ay = Num_arc_delta y\n  weak_gt_arctic_delta ax ay\n  ax = MinInfty_delta", "show ?thesis"], ["proof (prove)\nusing this:\n  ay = Num_arc_delta y\n  weak_gt_arctic_delta ax ay\n  ax = MinInfty_delta\n\ngoal (1 subgoal):\n 1. gt_arctic_delta \\<delta> ax ay", "by auto"], ["proof (state)\nthis:\n  gt_arctic_delta \\<delta> ax ay\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       ax = Num_arc_delta x2 \\<Longrightarrow>\n       gt_arctic_delta \\<delta> ax ay", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       ax = Num_arc_delta x2 \\<Longrightarrow>\n       gt_arctic_delta \\<delta> ax ay", "case (Num_arc_delta x)"], ["proof (state)\nthis:\n  ax = Num_arc_delta x\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       ax = Num_arc_delta x2 \\<Longrightarrow>\n       gt_arctic_delta \\<delta> ax ay", "note ax = this"], ["proof (state)\nthis:\n  ax = Num_arc_delta x\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       ax = Num_arc_delta x2 \\<Longrightarrow>\n       gt_arctic_delta \\<delta> ax ay", "from ax ay axay"], ["proof (chain)\npicking this:\n  ax = Num_arc_delta x\n  ay = Num_arc_delta y\n  (ax, ay) \\<in> set xys", "have \"(x,y) \\<in> set xysp\""], ["proof (prove)\nusing this:\n  ax = Num_arc_delta x\n  ay = Num_arc_delta y\n  (ax, ay) \\<in> set xys\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> set xysp", "unfolding xysp"], ["proof (prove)\nusing this:\n  ax = Num_arc_delta x\n  ay = Num_arc_delta y\n  (ax, ay) \\<in> set xys\n\ngoal (1 subgoal):\n 1. (x, y)\n    \\<in> set (map (\\<lambda>(ax, ay).\n                       (case ax of Num_arc_delta x \\<Rightarrow> x,\n                        case ay of Num_arc_delta y \\<Rightarrow> y))\n                (filter\n                  (\\<lambda>(ax, ay).\n                      ax \\<noteq> MinInfty_delta \\<and>\n                      ay \\<noteq> MinInfty_delta)\n                  xys))", "by force"], ["proof (state)\nthis:\n  (x, y) \\<in> set xysp\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       ax = Num_arc_delta x2 \\<Longrightarrow>\n       gt_arctic_delta \\<delta> ax ay", "from ax ay orient2[OF this]"], ["proof (chain)\npicking this:\n  ax = Num_arc_delta x\n  ay = Num_arc_delta y\n  delta_gt \\<delta> x y", "show ?thesis"], ["proof (prove)\nusing this:\n  ax = Num_arc_delta x\n  ay = Num_arc_delta y\n  delta_gt \\<delta> x y\n\ngoal (1 subgoal):\n 1. gt_arctic_delta \\<delta> ax ay", "by simp"], ["proof (state)\nthis:\n  gt_arctic_delta \\<delta> ax ay\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  gt_arctic_delta \\<delta> ax ay\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  gt_arctic_delta \\<delta> ax ay\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x y.\n     (x, y) \\<in> set xys \\<longrightarrow> gt_arctic_delta \\<delta> x y\n\ngoal (1 subgoal):\n 1. \\<And>xys.\n       \\<forall>x y.\n          (x, y) \\<in> set xys \\<longrightarrow>\n          weak_gt_arctic_delta x y \\<Longrightarrow>\n       \\<exists>gt.\n          SN_both_mono_ordered_semiring_1 1 gt pos_arctic_delta \\<and>\n          (\\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> gt x y)", "show \"\\<exists>gt. SN_both_mono_ordered_semiring_1 1 gt pos_arctic_delta \\<and> (\\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> gt x y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>gt.\n       SN_both_mono_ordered_semiring_1 1 gt pos_arctic_delta \\<and>\n       (\\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> gt x y)", "by (intro exI conjI, rule arctic_delta_interpretation[OF dpos], rule orient)"], ["proof (state)\nthis:\n  \\<exists>gt.\n     SN_both_mono_ordered_semiring_1 1 gt pos_arctic_delta \\<and>\n     (\\<forall>x y. (x, y) \\<in> set xys \\<longrightarrow> gt x y)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}