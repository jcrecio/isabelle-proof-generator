{"file_name": "/home/qj213/afp-2021-10-22/thys/Poincare_Bendixson/Analysis_Misc.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Poincare_Bendixson", "problem_names": ["lemma uminus_uminus_image: \"uminus ` uminus ` S = S\"\n  for S::\"'r::ab_group_add set\"", "lemma in_uminus_image_iff[simp]: \"x \\<in> uminus ` S \\<longleftrightarrow> - x \\<in> S\"\n  for S::\"'r::ab_group_add set\"", "lemma closed_subsegmentI:\n  \"w + t *\\<^sub>R (z - w) \\<in> {x--y}\"\n  if \"w \\<in> {x -- y}\" \"z \\<in> {x -- y}\" and t: \"0 \\<le> t\" \"t\\<le> 1\"", "lemma tendsto_minus_cancel_right: \"((\\<lambda>x. -g x) \\<longlongrightarrow> l) F \\<longleftrightarrow> (g \\<longlongrightarrow> -l) F\"\n  \\<comment> \\<open>cf @{thm tendsto_minus_cancel_left}\\<close>\n  for g::\"_ \\<Rightarrow> 'b::topological_group_add\"", "lemma tendsto_nhds_continuousI: \"(f \\<longlongrightarrow> l) (nhds x)\" if \"(f \\<longlongrightarrow> l) (at x)\" \"f x = l\"\n  \\<comment> \\<open>TODO: the assumption is continuity of f at x\\<close>", "lemma inj_composeD:\n  assumes \"inj (\\<lambda>x. g (t x))\"\n  shows \"inj t\"", "lemma compact_sequentialE:\n  fixes S T::\"'a::first_countable_topology set\"\n  assumes \"compact S\"\n  assumes \"infinite T\"\n  assumes \"T \\<subseteq> S\"\n  obtains t::\"nat \\<Rightarrow> 'a\" and l::'a\n  where \"\\<And>n. t n \\<in> T\" \"\\<And>n. t n \\<noteq> l\" \"t \\<longlonglongrightarrow> l\" \"l \\<in> S\"", "lemma infinite_countable_subsetE:\n  fixes S::\"'a set\"\n  assumes \"infinite S\"\n  obtains g::\"nat\\<Rightarrow>'a\" where \"inj g\" \"range g \\<subseteq> S\"", "lemma real_quad_ge: \"2 * (an * bn) \\<le> an * an + bn * bn\" for an bn::real", "lemma inner_quad_ge: \"2 * (a \\<bullet> b) \\<le> a \\<bullet> a + b \\<bullet> b\"\n  for a b::\"'a::euclidean_space\"\\<comment> \\<open>generalize?\\<close>", "lemma inner_quad_gt: \"2 * (a \\<bullet> b) < a \\<bullet> a + b \\<bullet> b\"\n  if \"a \\<noteq> b\"\n  for a b::\"'a::euclidean_space\"\\<comment> \\<open>generalize?\\<close>", "lemma closed_segment_line_hyperplanes:\n  \"{a -- b} = range (\\<lambda>u. a + u *\\<^sub>R (b - a)) \\<inter> {x. a \\<bullet> (b - a) \\<le> x \\<bullet> (b - a) \\<and> x \\<bullet> (b - a) \\<le> b \\<bullet> (b - a)}\"\n  if \"a \\<noteq> b\"\n  for a b::\"'a::euclidean_space\"", "lemma open_segment_line_hyperplanes:\n  \"{a <--< b} = range (\\<lambda>u. a + u *\\<^sub>R (b - a)) \\<inter> {x. a \\<bullet> (b - a) < x \\<bullet> (b - a) \\<and> x \\<bullet> (b - a) < b \\<bullet> (b - a)}\"\n  if \"a \\<noteq> b\"\n  for a b::\"'a::euclidean_space\"", "lemma at_within_interior: \"NO_MATCH UNIV S \\<Longrightarrow> x \\<in> interior S \\<Longrightarrow> at x within S = at x\"", "lemma tendsto_at_topI:\n  \"(f \\<longlongrightarrow> l) at_top\" if \"\\<And>e. 0 < e \\<Longrightarrow> \\<exists>x0. \\<forall>x\\<ge>x0. dist (f x) l < e\"\nfor f::\"'a::linorder_topology \\<Rightarrow> 'b::metric_space\"", "lemma tendsto_at_topE:\n  fixes f::\"'a::linorder_topology \\<Rightarrow> 'b::metric_space\"\n  assumes \"(f \\<longlongrightarrow> l) at_top\"\n  assumes \"e > 0\"\n  obtains x0 where \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> dist (f x) l < e\"", "lemma tendsto_at_top_iff: \"(f \\<longlongrightarrow> l) at_top \\<longleftrightarrow> (\\<forall>e>0. \\<exists>x0. \\<forall>x\\<ge>x0. dist (f x) l < e)\"\n  for f::\"'a::linorder_topology \\<Rightarrow> 'b::metric_space\"", "lemma tendsto_at_top_eq_left:\n  fixes f g::\"'a::linorder_topology \\<Rightarrow> 'b::metric_space\"\n  assumes \"(f \\<longlongrightarrow> l) at_top\"\n  assumes \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> f x = g x\"\n  shows \"(g \\<longlongrightarrow> l) at_top\"", "lemma lim_divide_n: \"(\\<lambda>x. e / real x) \\<longlonglongrightarrow> 0\"", "lemma at_top_within_at_top[simp]:\n  shows \"at_top_within UNIV = at_top\"", "lemma at_top_within_empty[simp]:\n  shows \"at_top_within {} = top\"", "lemma eventually_nhds_set:\n  \"(\\<forall>\\<^sub>F x in nhds_set X. P x) \\<longleftrightarrow> (\\<exists>S. open S \\<and> X \\<subseteq> S \\<and> (\\<forall>x\\<in>S. P x))\"", "lemma limpt_closed_imp_exploding_subsequence:\\<comment>\\<open>TODO: improve name?!\\<close>\n  fixes f::\"'a::{heine_borel,real_normed_vector} \\<Rightarrow> 'b::{first_countable_topology, t2_space}\"\n  assumes cont[THEN continuous_on_compose2, continuous_intros]: \"continuous_on T f\"\n  assumes closed: \"closed T\"\n  assumes bound: \"\\<And>t. t \\<in> T \\<Longrightarrow> f t \\<noteq> l\"\n  assumes limpt: \"l islimpt (f ` T)\"\n  obtains s where\n    \"(f \\<circ> s) \\<longlonglongrightarrow> l\"\n    \"\\<And>i. s i \\<in> T\"\n    \"\\<And>C. compact C \\<Longrightarrow> C \\<subseteq> T \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially. s i \\<notin> C\"", "lemma Inf_islimpt: \"bdd_below S \\<Longrightarrow> Inf S \\<notin> S \\<Longrightarrow> S \\<noteq> {} \\<Longrightarrow> Inf S islimpt S\" for S::\"real set\"", "lemma Int_Ico[simp]:\n  shows \"{a..} \\<inter> {b..} = {max a b ..}\"", "lemma Int_Ici_Ico[simp]:\n  shows \"{a..} \\<inter> {b..<c} = {max a b ..<c}\"", "lemma Int_Ico_Ici[simp]:\n  shows \"{a..<c} \\<inter> {b..} = {max a b ..<c}\"", "lemma subset_Ico_iff[simp]:\n  \"{a..<b} \\<subseteq> {c..<b} \\<longleftrightarrow> b \\<le> a \\<or> c \\<le> a\"", "lemma Ico_subset_Ioo_iff[simp]:\n  \"{a..<b} \\<subseteq> {c<..<b} \\<longleftrightarrow> b \\<le> a \\<or> c < a\"", "lemma Icc_Un_Ici[simp]:\n  shows \"{a..b} \\<union> {b..} = {min a b..}\"", "lemma at_top_within_at_top_unbounded_right:\n  fixes a::\"'a::linorder\"\n  shows \"at_top_within {a..} = at_top\"", "lemma at_top_within_at_top_unbounded_rightI:\n  fixes a::\"'a::linorder\"\n  assumes \"{a..} \\<subseteq> s\"\n  shows \"at_top_within s = at_top\"", "lemma at_top_within_at_top_bounded_right:\n  fixes a b::\"'a::{dense_order,linorder_topology}\"\n  assumes \"a < b\"\n  shows \"at_top_within {a..<b} = at_left b\"", "lemma at_top_within_at_top_bounded_right':\n  fixes a b::\"'a::{dense_order,linorder_topology}\"\n  assumes \"a < b\"\n  shows \"at_top_within {..<b} = at_left b\"", "lemma eventually_at_top_within_linorder:\n  assumes sn:\"s \\<noteq> {}\"\n  shows \"eventually P (at_top_within s) \\<longleftrightarrow> (\\<exists>x0::'a::{linorder_topology} \\<in> s. \\<forall>x \\<ge> x0. x\\<in> s \\<longrightarrow> P x)\"", "lemma tendsto_at_top_withinI:\n  fixes f::\"'a::linorder_topology \\<Rightarrow> 'b::metric_space\"\n  assumes \"s \\<noteq> {}\"\n  assumes \"\\<And>e. 0 < e \\<Longrightarrow> \\<exists>x0 \\<in> s. \\<forall>x \\<in> {x0..} \\<inter> s. dist (f x) l < e\"\n  shows  \"(f \\<longlongrightarrow> l) (at_top_within s)\"", "lemma tendsto_at_top_withinE:\n  fixes f::\"'a::linorder_topology \\<Rightarrow> 'b::metric_space\"\n  assumes \"s \\<noteq> {}\"\n  assumes \"(f \\<longlongrightarrow> l) (at_top_within s)\"\n  assumes \"e > 0\"\n  obtains x0 where \"x0 \\<in> s\" \"\\<And>x. x \\<in> {x0..} \\<inter> s \\<Longrightarrow> dist (f x) l < e\"", "lemma tendsto_at_top_within_iff:\n  fixes f::\"'a::linorder_topology \\<Rightarrow> 'b::metric_space\"\n  assumes \"s \\<noteq> {}\"\n  shows \"(f \\<longlongrightarrow> l) (at_top_within s) \\<longleftrightarrow> (\\<forall>e>0. \\<exists>x0 \\<in> s. \\<forall>x \\<in> {x0..} \\<inter> s. dist (f x) l < e)\"", "lemma filterlim_at_top_at_top_within_bounded_right:\n  fixes a b::\"'a::{dense_order,linorder_topology}\"\n  fixes f::\"'a \\<Rightarrow> real\"\n  assumes \"a < b\"\n  shows \"filterlim f at_top (at_top_within {..<b}) = (f \\<longlongrightarrow> \\<infinity>) (at_left b)\"", "lemma not_tendsto_frequentlyE:\n  assumes \"\\<not>((f \\<longlongrightarrow> l) F)\"\n  obtains S where \"open S\" \"l \\<in> S\" \"\\<exists>\\<^sub>F x in F. f x \\<notin> S\"", "lemma not_tendsto_frequently_metricE:\n  assumes \"\\<not>((f \\<longlongrightarrow> l) F)\"\n  obtains e where \"e > 0\" \"\\<exists>\\<^sub>F x in F. e \\<le> dist (f x) l\"", "lemma eventually_frequently_conj: \"frequently P F \\<Longrightarrow> eventually Q F \\<Longrightarrow> frequently (\\<lambda>x. P x \\<and> Q x) F\"", "lemma frequently_at_top:\n  \"(\\<exists>\\<^sub>F t in at_top. P t) \\<longleftrightarrow> (\\<forall>t0. \\<exists>t>t0. P t)\"\n  for P::\"'a::{linorder,no_top}\\<Rightarrow>bool\"", "lemma frequently_at_topE:\n  fixes P::\"nat \\<Rightarrow> 'a::{linorder,no_top}\\<Rightarrow>_\"\n  assumes freq[rule_format]: \"\\<forall>n. \\<exists>\\<^sub>F a in at_top. P n a\"\n  obtains s::\"nat\\<Rightarrow>'a\"\n  where \"\\<And>i. P i (s i)\" \"strict_mono s\"", "lemma frequently_at_topE':\n  fixes P::\"nat \\<Rightarrow> 'a::{linorder,no_top}\\<Rightarrow>_\"\n  assumes freq[rule_format]: \"\\<forall>n. \\<exists>\\<^sub>F a in at_top. P n a\"\n    and g: \"filterlim g at_top sequentially\"\n  obtains s::\"nat\\<Rightarrow>'a\"\n  where \"\\<And>i. P i (s i)\" \"strict_mono s\" \"\\<And>n. g n \\<le> s n\"", "lemma frequently_at_top_at_topE:\n  fixes P::\"nat \\<Rightarrow> 'a::{linorder,no_top}\\<Rightarrow>_\" and g::\"nat\\<Rightarrow>'a\"\n  assumes \"\\<forall>n. \\<exists>\\<^sub>F a in at_top. P n a\" \"filterlim g at_top sequentially\"\n  obtains s::\"nat\\<Rightarrow>'a\"\n  where \"\\<And>i. P i (s i)\" \"filterlim s at_top sequentially\"", "lemma not_tendsto_convergent_seq:\n  fixes f::\"real \\<Rightarrow> 'a::metric_space\"\n  assumes X: \"compact (X::'a set)\"\n  assumes im: \"\\<And>x. x \\<ge> 0 \\<Longrightarrow> f x \\<in> X\"\n  assumes nl: \"\\<not> ((f \\<longlongrightarrow> (l::'a)) at_top)\"\n  obtains s k where\n    \"k \\<in> X\" \"k \\<noteq> l\" \"(f \\<circ> s) \\<longlonglongrightarrow> k\" \"strict_mono s\" \"\\<forall>n. s n \\<ge> n\"", "lemma harmonic_bound:\n  shows \"1 / 2 ^(Suc n) < 1 / real (Suc n)\"", "lemma INF_bounded_imp_convergent_seq:\n  fixes f::\"real \\<Rightarrow> real\"\n  assumes cont: \"continuous_on {a..} f\"\n  assumes bound: \"\\<And>t. t \\<ge> a \\<Longrightarrow> f t > l\"\n  assumes inf: \"(INF t\\<in>{a..}. f t) = l\"\n  obtains s where\n    \"(f \\<circ> s) \\<longlonglongrightarrow> l\"\n    \"\\<And>i. s i \\<in> {a..}\"\n    \"filterlim s at_top sequentially\"", "lemma filterlim_at_top_strict_mono:\n  fixes s :: \"_ \\<Rightarrow> 'a::linorder\"\n  fixes r :: \"nat \\<Rightarrow> _\"\n  assumes \"strict_mono s\"\n  assumes \"strict_mono r\"\n  assumes \"filterlim s at_top F\"\n  shows \"filterlim (s \\<circ> r) at_top F\"", "lemma LIMSEQ_lb:\n  assumes fl: \"s \\<longlonglongrightarrow> (l::real)\"\n  assumes u: \"l < u\"\n  shows \"\\<exists>n0. \\<forall>n\\<ge>n0. s n < u\"", "lemma filterlim_at_top_choose_lower:\n  assumes \"filterlim s at_top sequentially\"\n  assumes \"(f \\<circ> s) \\<longlonglongrightarrow> l\"\n  obtains t where\n    \"filterlim t at_top sequentially\"\n    \"(f \\<circ> t) \\<longlonglongrightarrow> l\"\n    \"\\<forall>n. t n \\<ge> (b::real)\"", "lemma frequently_at_top_realE:\n  fixes P::\"nat \\<Rightarrow> real \\<Rightarrow> bool\"\n  assumes \"\\<forall>n. \\<exists>\\<^sub>F t in at_top. P n t\"\n  obtains s::\"nat\\<Rightarrow>real\"\n  where \"\\<And>i. P i (s i)\" \"filterlim s at_top at_top\"", "lemma approachable_sequenceE:\n  fixes f::\"real \\<Rightarrow> 'a::metric_space\"\n  assumes \"\\<And>t e. 0 \\<le> t \\<Longrightarrow> 0 < e \\<Longrightarrow> \\<exists>tt\\<ge>t. dist (f tt) p < e\"\n  obtains s where \"filterlim s at_top sequentially\" \"(f \\<circ> s) \\<longlonglongrightarrow> p\"", "lemma mono_inc_bdd_above_has_limit_at_topI:\n  fixes f::\"real \\<Rightarrow> real\"\n  assumes \"mono f\"\n  assumes \"\\<And>x. f x \\<le> u\"\n  shows \"\\<exists>l. (f \\<longlongrightarrow> l) at_top\"", "lemma gen_mono_inc_bdd_above_has_limit_at_topI:\n  fixes f::\"real \\<Rightarrow> real\"\n  assumes \"\\<And>x y. x \\<ge> b \\<Longrightarrow> x \\<le> y \\<Longrightarrow> f x \\<le> f y\"\n  assumes \"\\<And>x. x \\<ge> b \\<Longrightarrow> f x \\<le> u\"\n  shows \"\\<exists>l. (f \\<longlongrightarrow> l) at_top\"", "lemma gen_mono_dec_bdd_below_has_limit_at_topI:\n  fixes f::\"real \\<Rightarrow> real\"\n  assumes \"\\<And>x y. x \\<ge> b \\<Longrightarrow> x \\<le> y \\<Longrightarrow> f x \\<ge> f y\"\n  assumes \"\\<And>x. x \\<ge> b \\<Longrightarrow> f x \\<ge> u\"\n  shows \"\\<exists>l. (f \\<longlongrightarrow> l) at_top\"", "lemma infdist_closed:\n  shows \"closed ({z. infdist z S \\<ge> e})\"", "lemma LIMSEQ_norm_0_pow:\n  assumes \"k > 0\" \"b > 1\"\n  assumes  \"\\<And>n::nat. norm (s n) \\<le> k / b^n\"\n  shows \"s \\<longlonglongrightarrow> 0\"", "lemma filterlim_apply_filtermap:\n  assumes g: \"filterlim g G F\"\n  shows \"filterlim (\\<lambda>x. m (g x)) (filtermap m G) F\"", "lemma eventually_at_right_field_le:\n  \"eventually P (at_right x) \\<longleftrightarrow> (\\<exists>b>x. \\<forall>y>x. y \\<le> b \\<longrightarrow> P y)\"\n  for x :: \"'a::{linordered_field, linorder_topology}\"", "lemma eucl_eq_iff: \"x = y \\<longleftrightarrow> (\\<forall>i<DIM('a). nth_eucl x i = nth_eucl y i)\"\n  for x y::\"'a::executable_euclidean_space\"", "lemma eucl_of_list_eucl_nth:\n  \"(eucl_of_list xs::'a) $\\<^sub>e i = xs ! i\"\n  if \"length xs = DIM('a::executable_euclidean_space)\"\n    \"i < DIM('a)\"", "lemma eucl_of_list_inner:\n  \"(eucl_of_list xs::'a) \\<bullet> eucl_of_list ys = (\\<Sum>(x,y)\\<leftarrow>zip xs ys. x * y)\"\n  if \"length xs = DIM('a::executable_euclidean_space)\"\n    \"length ys = DIM('a::executable_euclidean_space)\"", "lemma self_eq_eucl_of_list: \"x = eucl_of_list (map (\\<lambda>i. x $\\<^sub>e i) [0..<DIM('a)])\"\n  for x::\"'a::executable_euclidean_space\"", "lemma inner_nth_eucl: \"x \\<bullet> y = (\\<Sum>i<DIM('a). x $\\<^sub>e i * y $\\<^sub>e i)\"\n  for x y::\"'a::executable_euclidean_space\"", "lemma norm_nth_eucl: \"norm x = L2_set (\\<lambda>i. x $\\<^sub>e i) {..<DIM('a)}\"\n  for x::\"'a::executable_euclidean_space\"", "lemma plus_nth_eucl: \"(x + y) $\\<^sub>e i = x $\\<^sub>e i + y $\\<^sub>e i\"\n  and minus_nth_eucl: \"(x - y) $\\<^sub>e i = x $\\<^sub>e i - y $\\<^sub>e i\"\n  and uminus_nth_eucl: \"(-x) $\\<^sub>e i = - x $\\<^sub>e i\"\n  and scaleR_nth_eucl: \"(c *\\<^sub>R x) $\\<^sub>e i = c *\\<^sub>R (x $\\<^sub>e i)\"", "lemma inf_nth_eucl: \"inf x y $\\<^sub>e i = min (x $\\<^sub>e i) (y $\\<^sub>e i)\"\n  if \"i < DIM('a)\"\n  for x::\"'a::executable_euclidean_space\"", "lemma sup_nth_eucl: \"sup x y $\\<^sub>e i = max (x $\\<^sub>e i) (y $\\<^sub>e i)\"\n  if \"i < DIM('a)\"\n  for x::\"'a::executable_euclidean_space\"", "lemma le_iff_le_nth_eucl: \"x \\<le> y \\<longleftrightarrow> (\\<forall>i<DIM('a). (x $\\<^sub>e i) \\<le> (y $\\<^sub>e i))\"\n  for x::\"'a::executable_euclidean_space\"", "lemma eucl_less_iff_less_nth_eucl: \"eucl_less x y \\<longleftrightarrow> (\\<forall>i<DIM('a). (x $\\<^sub>e i) < (y $\\<^sub>e i))\"\n  for x::\"'a::executable_euclidean_space\"", "lemma continuous_on_nth_eucl[continuous_intros]:\n  \"continuous_on X (\\<lambda>x. f x $\\<^sub>e i)\"\n  if \"continuous_on X f\"", "lemma eventually_at_ne[intro, simp]: \"\\<forall>\\<^sub>F x in at x0. x \\<noteq> x0\"", "lemma has_vector_derivative_withinD:\n  fixes f::\"real \\<Rightarrow> 'b::euclidean_space\"\n  assumes \"(f has_vector_derivative f') (at x0 within S)\"\n  shows \"((\\<lambda>x. (f x - f x0) /\\<^sub>R (x - x0)) \\<longlongrightarrow> f') (at x0 within S)\"", "lemma path_connected_frontier:\n  fixes S :: \"'a::real_normed_vector set\"\n  assumes \"path_connected S\"\n  assumes \"S \\<inter> T \\<noteq> {}\"\n  assumes \"S \\<inter> -T \\<noteq> {}\"\n  obtains s where \"s \\<in> S\" \"s \\<in> frontier T\"", "lemma path_connected_not_frontier_subset:\n  fixes S :: \"'a::real_normed_vector set\"\n  assumes \"path_connected S\"\n  assumes \"S \\<inter> T \\<noteq> {}\"\n  assumes \"S \\<inter> frontier T = {}\"\n  shows \"S \\<subseteq> T\"", "lemma compact_attains_bounds:\n  fixes f::\"'a::topological_space \\<Rightarrow> 'b::linorder_topology\"\n  assumes compact: \"compact S\"\n  assumes ne: \"S \\<noteq> {}\"\n  assumes cont: \"continuous_on S f\"\n  obtains l u where \"l \\<in> S\" \"u \\<in> S\" \"\\<And>x. x \\<in> S \\<Longrightarrow> f x \\<in> {f l .. f u}\"", "lemma uniform_limit_const[uniform_limit_intros]:\n  \"uniform_limit S (\\<lambda>x y. f x) (\\<lambda>_. l) F\" if \"(f \\<longlongrightarrow> l) F\"", "lemma in_closed_segment_iff_line: \"x \\<in> {a -- b} \\<longleftrightarrow> (\\<exists>c\\<in>{0..1}. x = line a b c)\"", "lemma in_open_segment_iff_line: \"x \\<in> {a <--< b} \\<longleftrightarrow> (\\<exists>c\\<in>{0<..<1}. a \\<noteq> b \\<and> x = line a b c)\"", "lemma line_convex_combination1: \"(1 - u) *\\<^sub>R line a b i + u *\\<^sub>R b = line a b (i + u - i * u)\"", "lemma line_convex_combination2: \"(1 - u) *\\<^sub>R a + u *\\<^sub>R line a b i = line a b (i*u)\"", "lemma line_convex_combination12: \"(1 - u) *\\<^sub>R line a b i + u *\\<^sub>R line a b j = line a b (i + u * (j - i))\"", "lemma mult_less_one_less_self: \"0 < x \\<Longrightarrow> i < 1 \\<Longrightarrow> i * x < x\" for i x::real", "lemma plus_times_le_one_lemma: \"i + u - i * u \\<le> 1\" if \"i \\<le> 1\" \"u \\<le> 1\" for i u::real", "lemma plus_times_less_one_lemma: \"i + u - i * u < 1\" if \"i < 1\" \"u < 1\" for i u::real", "lemma line_eq_endpoint_iff[simp]:\n  \"line a b i = b \\<longleftrightarrow> (a = b \\<or> i = 1)\"\n  \"a = line a b i \\<longleftrightarrow> (a = b \\<or> i = 0)\"", "lemma line_eq_iff[simp]: \"line a b x = line a b y \\<longleftrightarrow> (x = y \\<or> a = b)\"", "lemma line_open_segment_iff:\n  \"{line a b i<--<b} = line a b ` {i<..<1}\"\n  if \"i < 1\" \"a \\<noteq> b\"", "lemma open_segment_line_iff:\n  \"{a<--<line a b i} = line a b ` {0<..<i}\"\n  if \"0 < i\" \"a \\<noteq> b\"", "lemma line_closed_segment_iff:\n  \"{line a b i--b} = line a b ` {i..1}\"\n  if \"i \\<le> 1\" \"a \\<noteq> b\"", "lemma closed_segment_line_iff:\n  \"{a--line a b i} = line a b ` {0..i}\"\n  if \"0 < i\" \"a \\<noteq> b\"", "lemma closed_segment_line_line_iff: \"{line a b i1--line a b i2} = line a b ` {i1..i2}\" if \"i1 \\<le> i2\"", "lemma line_line1: \"line (line a b c) b x = line a b (c + x - c * x)\"", "lemma line_line2: \"line a (line a b c) x = line a b (c*x)\"", "lemma line_in_subsegment:\n  \"i1 < 1 \\<Longrightarrow> i2 < 1 \\<Longrightarrow> a \\<noteq> b \\<Longrightarrow> line a b i1 \\<in> {line a b i2<--<b} \\<longleftrightarrow> i2 < i1\"", "lemma line_in_subsegment2:\n  \"0 < i2 \\<Longrightarrow> 0 < i1 \\<Longrightarrow> a \\<noteq> b \\<Longrightarrow> line a b i1 \\<in> {a<--<line a b i2} \\<longleftrightarrow> i1 < i2\"", "lemma line_in_open_segment_iff[simp]:\n  \"line a b i \\<in> {a<--<b} \\<longleftrightarrow> (a \\<noteq> b \\<and> 0 < i \\<and> i < 1)\"", "lemma open_segment_subsegment:\n  assumes \"x1 \\<in> {x0<--<x3}\"\n    \"x2 \\<in> {x1<--<x3}\"\n  shows \"x1 \\<in> {x0<--<x2}\"", "lemma subpath0_linepath:\n  shows \"subpath 0 u (linepath t t') = linepath t (t + u * (t' - t))\"", "lemma linepath_image0_right_open_real:\n  assumes \"t < (t'::real)\"\n  shows \"linepath t t' ` {0..<1} = {t..<t'}\"", "lemma oriented_subsegment_scale:\n  assumes \"x1 \\<in> {a<--<b}\"\n  assumes \"x2 \\<in> {x1<--<b}\"\n  obtains e where \"e > 0\" \"b-a = e *\\<^sub>R (x2-x1)\""], "translations": [["", "lemma uminus_uminus_image: \"uminus ` uminus ` S = S\"\n  for S::\"'r::ab_group_add set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uminus ` uminus ` S = S", "by (auto simp: image_image)"], ["", "lemma in_uminus_image_iff[simp]: \"x \\<in> uminus ` S \\<longleftrightarrow> - x \\<in> S\"\n  for S::\"'r::ab_group_add set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> uminus ` S) = (- x \\<in> S)", "by force"], ["", "lemma closed_subsegmentI:\n  \"w + t *\\<^sub>R (z - w) \\<in> {x--y}\"\n  if \"w \\<in> {x -- y}\" \"z \\<in> {x -- y}\" and t: \"0 \\<le> t\" \"t\\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w + t *\\<^sub>R (z - w) \\<in> {x--y}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. w + t *\\<^sub>R (z - w) \\<in> {x--y}", "from that"], ["proof (chain)\npicking this:\n  w \\<in> {x--y}\n  z \\<in> {x--y}\n  0 \\<le> t\n  t \\<le> 1", "obtain u v where\n    w_def: \"w = (1 - u) *\\<^sub>R x + u *\\<^sub>R y\" and u: \"0 \\<le> u\" \"u \\<le> 1\"\n    and z_def: \"z = (1 - v) *\\<^sub>R x + v *\\<^sub>R y\" and v: \"0 \\<le> v\" \"v \\<le> 1\""], ["proof (prove)\nusing this:\n  w \\<in> {x--y}\n  z \\<in> {x--y}\n  0 \\<le> t\n  t \\<le> 1\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>w = (1 - u) *\\<^sub>R x + u *\\<^sub>R y; 0 \\<le> u;\n         u \\<le> 1; z = (1 - v) *\\<^sub>R x + v *\\<^sub>R y; 0 \\<le> v;\n         v \\<le> 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: in_segment)"], ["proof (state)\nthis:\n  w = (1 - u) *\\<^sub>R x + u *\\<^sub>R y\n  0 \\<le> u\n  u \\<le> 1\n  z = (1 - v) *\\<^sub>R x + v *\\<^sub>R y\n  0 \\<le> v\n  v \\<le> 1\n\ngoal (1 subgoal):\n 1. w + t *\\<^sub>R (z - w) \\<in> {x--y}", "have \"w + t *\\<^sub>R (z - w) =\n    (1 - (u - t * (u - v))) *\\<^sub>R x + (u - t * (u - v)) *\\<^sub>R y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w + t *\\<^sub>R (z - w) =\n    (1 - (u - t * (u - v))) *\\<^sub>R x + (u - t * (u - v)) *\\<^sub>R y", "by (simp add: algebra_simps w_def z_def)"], ["proof (state)\nthis:\n  w + t *\\<^sub>R (z - w) =\n  (1 - (u - t * (u - v))) *\\<^sub>R x + (u - t * (u - v)) *\\<^sub>R y\n\ngoal (1 subgoal):\n 1. w + t *\\<^sub>R (z - w) \\<in> {x--y}", "also"], ["proof (state)\nthis:\n  w + t *\\<^sub>R (z - w) =\n  (1 - (u - t * (u - v))) *\\<^sub>R x + (u - t * (u - v)) *\\<^sub>R y\n\ngoal (1 subgoal):\n 1. w + t *\\<^sub>R (z - w) \\<in> {x--y}", "have \"\\<dots> \\<in> {x -- y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - (u - t * (u - v))) *\\<^sub>R x + (u - t * (u - v)) *\\<^sub>R y\n    \\<in> {x--y}", "unfolding closed_segment_image_interval"], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - (u - t * (u - v))) *\\<^sub>R x + (u - t * (u - v)) *\\<^sub>R y\n    \\<in> (\\<lambda>u. (1 - u) *\\<^sub>R x + u *\\<^sub>R y) ` {0..1}", "apply (rule imageI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. u - t * (u - v) \\<in> {0..1}", "using t u v"], ["proof (prove)\nusing this:\n  0 \\<le> t\n  t \\<le> 1\n  0 \\<le> u\n  u \\<le> 1\n  0 \\<le> v\n  v \\<le> 1\n\ngoal (1 subgoal):\n 1. u - t * (u - v) \\<in> {0..1}", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 \\<le> t; t \\<le> 1; 0 \\<le> u; u \\<le> 1; 0 \\<le> v;\n     v \\<le> 1\\<rbrakk>\n    \\<Longrightarrow> t * (u - v) \\<le> u\n 2. \\<lbrakk>0 \\<le> t; t \\<le> 1; 0 \\<le> u; u \\<le> 1; 0 \\<le> v;\n     v \\<le> 1\\<rbrakk>\n    \\<Longrightarrow> u - t * (u - v) \\<le> 1", "apply (metis (full_types) diff_0_right diff_left_mono linear mult_left_le_one_le mult_nonneg_nonpos order.trans)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> t; t \\<le> 1; 0 \\<le> u; u \\<le> 1; 0 \\<le> v;\n     v \\<le> 1\\<rbrakk>\n    \\<Longrightarrow> u - t * (u - v) \\<le> 1", "by (smt mult_left_le_one_le mult_nonneg_nonneg vector_space_over_itself.scale_right_diff_distrib)"], ["proof (state)\nthis:\n  (1 - (u - t * (u - v))) *\\<^sub>R x + (u - t * (u - v)) *\\<^sub>R y\n  \\<in> {x--y}\n\ngoal (1 subgoal):\n 1. w + t *\\<^sub>R (z - w) \\<in> {x--y}", "finally"], ["proof (chain)\npicking this:\n  w + t *\\<^sub>R (z - w) \\<in> {x--y}", "show ?thesis"], ["proof (prove)\nusing this:\n  w + t *\\<^sub>R (z - w) \\<in> {x--y}\n\ngoal (1 subgoal):\n 1. w + t *\\<^sub>R (z - w) \\<in> {x--y}", "."], ["proof (state)\nthis:\n  w + t *\\<^sub>R (z - w) \\<in> {x--y}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tendsto_minus_cancel_right: \"((\\<lambda>x. -g x) \\<longlongrightarrow> l) F \\<longleftrightarrow> (g \\<longlongrightarrow> -l) F\"\n  \\<comment> \\<open>cf @{thm tendsto_minus_cancel_left}\\<close>\n  for g::\"_ \\<Rightarrow> 'b::topological_group_add\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. - g x) \\<longlongrightarrow> l) F =\n    (g \\<longlongrightarrow> - l) F", "by (simp add: tendsto_minus_cancel_left)"], ["", "lemma tendsto_nhds_continuousI: \"(f \\<longlongrightarrow> l) (nhds x)\" if \"(f \\<longlongrightarrow> l) (at x)\" \"f x = l\"\n  \\<comment> \\<open>TODO: the assumption is continuity of f at x\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> l) (nhds x)", "proof (rule topological_tendstoI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>open S; l \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<^sub>F x in nhds x. f x \\<in> S", "fix S::\"'b set\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>open S; l \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<^sub>F x in nhds x. f x \\<in> S", "assume \"open S\" \"l \\<in> S\""], ["proof (state)\nthis:\n  open S\n  l \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>open S; l \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<^sub>F x in nhds x. f x \\<in> S", "from topological_tendstoD[OF that(1) this]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at x. f x \\<in> S", "have \"\\<forall>\\<^sub>F x in at x. f x \\<in> S\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x. f x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x. f x \\<in> S", "."], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x. f x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>open S; l \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<^sub>F x in nhds x. f x \\<in> S", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at x. f x \\<in> S", "show \"\\<forall>\\<^sub>F x in nhds x. f x \\<in> S\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x. f x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in nhds x. f x \\<in> S", "unfolding eventually_at_filter"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F xa in nhds x.\n     xa \\<noteq> x \\<longrightarrow>\n     xa \\<in> UNIV \\<longrightarrow> f xa \\<in> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in nhds x. f x \\<in> S", "by eventually_elim (auto simp: that \\<open>l \\<in> S\\<close>)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in nhds x. f x \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inj_composeD:\n  assumes \"inj (\\<lambda>x. g (t x))\"\n  shows \"inj t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj t", "using assms"], ["proof (prove)\nusing this:\n  inj (\\<lambda>x. g (t x))\n\ngoal (1 subgoal):\n 1. inj t", "by (auto simp: inj_def)"], ["", "lemma compact_sequentialE:\n  fixes S T::\"'a::first_countable_topology set\"\n  assumes \"compact S\"\n  assumes \"infinite T\"\n  assumes \"T \\<subseteq> S\"\n  obtains t::\"nat \\<Rightarrow> 'a\" and l::'a\n  where \"\\<And>n. t n \\<in> T\" \"\\<And>n. t n \\<noteq> l\" \"t \\<longlonglongrightarrow> l\" \"l \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t l.\n        \\<lbrakk>\\<And>n. t n \\<in> T; \\<And>n. t n \\<noteq> l;\n         t \\<longlonglongrightarrow> l; l \\<in> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>t l.\n        \\<lbrakk>\\<And>n. t n \\<in> T; \\<And>n. t n \\<noteq> l;\n         t \\<longlonglongrightarrow> l; l \\<in> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from Heine_Borel_imp_Bolzano_Weierstrass[OF assms]"], ["proof (chain)\npicking this:\n  \\<exists>x\\<in>S. x islimpt T", "obtain l where \"l \\<in> S\" \"l islimpt T\""], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>S. x islimpt T\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>l \\<in> S; l islimpt T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  l \\<in> S\n  l islimpt T\n\ngoal (1 subgoal):\n 1. (\\<And>t l.\n        \\<lbrakk>\\<And>n. t n \\<in> T; \\<And>n. t n \\<noteq> l;\n         t \\<longlonglongrightarrow> l; l \\<in> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  l \\<in> S\n  l islimpt T", "obtain t where \"t n \\<in> T\" \"t n \\<noteq> l\" \"t \\<longlonglongrightarrow> l\" \"l \\<in> S\" for n"], ["proof (prove)\nusing this:\n  l \\<in> S\n  l islimpt T\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>\\<And>n. t n \\<in> T; \\<And>n. t n \\<noteq> l;\n         t \\<longlonglongrightarrow> l; l \\<in> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding islimpt_sequential"], ["proof (prove)\nusing this:\n  l \\<in> S\n  \\<exists>f.\n     (\\<forall>n. f n \\<in> T - {l}) \\<and> f \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>\\<And>n. t n \\<in> T; \\<And>n. t n \\<noteq> l;\n         t \\<longlonglongrightarrow> l; l \\<in> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t ?n \\<in> T\n  t ?n \\<noteq> l\n  t \\<longlonglongrightarrow> l\n  l \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>t l.\n        \\<lbrakk>\\<And>n. t n \\<in> T; \\<And>n. t n \\<noteq> l;\n         t \\<longlonglongrightarrow> l; l \\<in> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  t ?n \\<in> T\n  t ?n \\<noteq> l\n  t \\<longlonglongrightarrow> l\n  l \\<in> S", "show ?thesis"], ["proof (prove)\nusing this:\n  t ?n \\<in> T\n  t ?n \\<noteq> l\n  t \\<longlonglongrightarrow> l\n  l \\<in> S\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infinite_countable_subsetE:\n  fixes S::\"'a set\"\n  assumes \"infinite S\"\n  obtains g::\"nat\\<Rightarrow>'a\" where \"inj g\" \"range g \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>inj g; range g \\<subseteq> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  infinite S\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>inj g; range g \\<subseteq> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by atomize_elim (simp add: infinite_countable_subset)"], ["", "lemma real_quad_ge: \"2 * (an * bn) \\<le> an * an + bn * bn\" for an bn::real"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * (an * bn) \\<le> an * an + bn * bn", "by (sos \"(((A<0 * R<1) + (R<1 * (R<1 * [an + ~1*bn]^2))))\")"], ["", "lemma inner_quad_ge: \"2 * (a \\<bullet> b) \\<le> a \\<bullet> a + b \\<bullet> b\"\n  for a b::\"'a::euclidean_space\"\\<comment> \\<open>generalize?\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * (a \\<bullet> b) \\<le> a \\<bullet> a + b \\<bullet> b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 * (a \\<bullet> b) \\<le> a \\<bullet> a + b \\<bullet> b", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * (a \\<bullet> b) \\<le> a \\<bullet> a + b \\<bullet> b", "by (subst (1 2 3) euclidean_inner)\n      (auto simp add: sum.distrib[symmetric] sum_distrib_left intro!: sum_mono real_quad_ge)"], ["proof (state)\nthis:\n  2 * (a \\<bullet> b) \\<le> a \\<bullet> a + b \\<bullet> b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inner_quad_gt: \"2 * (a \\<bullet> b) < a \\<bullet> a + b \\<bullet> b\"\n  if \"a \\<noteq> b\"\n  for a b::\"'a::euclidean_space\"\\<comment> \\<open>generalize?\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * (a \\<bullet> b) < a \\<bullet> a + b \\<bullet> b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 * (a \\<bullet> b) < a \\<bullet> a + b \\<bullet> b", "from that"], ["proof (chain)\npicking this:\n  a \\<noteq> b", "obtain i where \"i \\<in> Basis\" \"a \\<bullet> i \\<noteq> b \\<bullet> i\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i \\<in> Basis;\n         a \\<bullet> i \\<noteq> b \\<bullet> i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: euclidean_eq_iff[where 'a='a])"], ["proof (state)\nthis:\n  i \\<in> Basis\n  a \\<bullet> i \\<noteq> b \\<bullet> i\n\ngoal (1 subgoal):\n 1. 2 * (a \\<bullet> b) < a \\<bullet> a + b \\<bullet> b", "then"], ["proof (chain)\npicking this:\n  i \\<in> Basis\n  a \\<bullet> i \\<noteq> b \\<bullet> i", "have \"2 * (a \\<bullet> i * (b \\<bullet> i)) < a \\<bullet> i * (a \\<bullet> i) + b \\<bullet> i * (b \\<bullet> i)\""], ["proof (prove)\nusing this:\n  i \\<in> Basis\n  a \\<bullet> i \\<noteq> b \\<bullet> i\n\ngoal (1 subgoal):\n 1. 2 * (a \\<bullet> i * (b \\<bullet> i))\n    < a \\<bullet> i * (a \\<bullet> i) + b \\<bullet> i * (b \\<bullet> i)", "using sum_sqs_eq[of \"a\\<bullet>i\" \"b\\<bullet>i\"]"], ["proof (prove)\nusing this:\n  i \\<in> Basis\n  a \\<bullet> i \\<noteq> b \\<bullet> i\n  a \\<bullet> i * (a \\<bullet> i) + b \\<bullet> i * (b \\<bullet> i) =\n  a \\<bullet> i * (b \\<bullet> i * 2) \\<Longrightarrow>\n  b \\<bullet> i = a \\<bullet> i\n\ngoal (1 subgoal):\n 1. 2 * (a \\<bullet> i * (b \\<bullet> i))\n    < a \\<bullet> i * (a \\<bullet> i) + b \\<bullet> i * (b \\<bullet> i)", "by (auto intro!: le_neq_trans real_quad_ge)"], ["proof (state)\nthis:\n  2 * (a \\<bullet> i * (b \\<bullet> i))\n  < a \\<bullet> i * (a \\<bullet> i) + b \\<bullet> i * (b \\<bullet> i)\n\ngoal (1 subgoal):\n 1. 2 * (a \\<bullet> b) < a \\<bullet> a + b \\<bullet> b", "then"], ["proof (chain)\npicking this:\n  2 * (a \\<bullet> i * (b \\<bullet> i))\n  < a \\<bullet> i * (a \\<bullet> i) + b \\<bullet> i * (b \\<bullet> i)", "show ?thesis"], ["proof (prove)\nusing this:\n  2 * (a \\<bullet> i * (b \\<bullet> i))\n  < a \\<bullet> i * (a \\<bullet> i) + b \\<bullet> i * (b \\<bullet> i)\n\ngoal (1 subgoal):\n 1. 2 * (a \\<bullet> b) < a \\<bullet> a + b \\<bullet> b", "by (subst (1 2 3) euclidean_inner)\n      (auto simp add: \\<open>i \\<in> Basis\\<close> sum.distrib[symmetric] sum_distrib_left\n        intro!: sum_strict_mono_ex1 real_quad_ge)"], ["proof (state)\nthis:\n  2 * (a \\<bullet> b) < a \\<bullet> a + b \\<bullet> b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma closed_segment_line_hyperplanes:\n  \"{a -- b} = range (\\<lambda>u. a + u *\\<^sub>R (b - a)) \\<inter> {x. a \\<bullet> (b - a) \\<le> x \\<bullet> (b - a) \\<and> x \\<bullet> (b - a) \\<le> b \\<bullet> (b - a)}\"\n  if \"a \\<noteq> b\"\n  for a b::\"'a::euclidean_space\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a--b} =\n    range (\\<lambda>u. a + u *\\<^sub>R (b - a)) \\<inter>\n    {x. a \\<bullet> (b - a) \\<le> x \\<bullet> (b - a) \\<and>\n        x \\<bullet> (b - a) \\<le> b \\<bullet> (b - a)}", "proof safe"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> {a--b} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>u. a + u *\\<^sub>R (b - a))\n 2. \\<And>x.\n       x \\<in> {a--b} \\<Longrightarrow>\n       a \\<bullet> (b - a) \\<le> x \\<bullet> (b - a)\n 3. \\<And>x.\n       x \\<in> {a--b} \\<Longrightarrow>\n       x \\<bullet> (b - a) \\<le> b \\<bullet> (b - a)\n 4. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a)\n        \\<le> (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        \\<le> b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a--b}", "fix x"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> {a--b} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>u. a + u *\\<^sub>R (b - a))\n 2. \\<And>x.\n       x \\<in> {a--b} \\<Longrightarrow>\n       a \\<bullet> (b - a) \\<le> x \\<bullet> (b - a)\n 3. \\<And>x.\n       x \\<in> {a--b} \\<Longrightarrow>\n       x \\<bullet> (b - a) \\<le> b \\<bullet> (b - a)\n 4. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a)\n        \\<le> (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        \\<le> b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a--b}", "assume x: \"x \\<in> {a--b}\""], ["proof (state)\nthis:\n  x \\<in> {a--b}\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> {a--b} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>u. a + u *\\<^sub>R (b - a))\n 2. \\<And>x.\n       x \\<in> {a--b} \\<Longrightarrow>\n       a \\<bullet> (b - a) \\<le> x \\<bullet> (b - a)\n 3. \\<And>x.\n       x \\<in> {a--b} \\<Longrightarrow>\n       x \\<bullet> (b - a) \\<le> b \\<bullet> (b - a)\n 4. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a)\n        \\<le> (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        \\<le> b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a--b}", "then"], ["proof (chain)\npicking this:\n  x \\<in> {a--b}", "obtain u where u: \"0 \\<le> u\" \"u \\<le> 1\" and x_eq: \"x = a + u *\\<^sub>R (b - a)\""], ["proof (prove)\nusing this:\n  x \\<in> {a--b}\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>0 \\<le> u; u \\<le> 1; x = a + u *\\<^sub>R (b - a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: in_segment algebra_simps)"], ["proof (state)\nthis:\n  0 \\<le> u\n  u \\<le> 1\n  x = a + u *\\<^sub>R (b - a)\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> {a--b} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>u. a + u *\\<^sub>R (b - a))\n 2. \\<And>x.\n       x \\<in> {a--b} \\<Longrightarrow>\n       a \\<bullet> (b - a) \\<le> x \\<bullet> (b - a)\n 3. \\<And>x.\n       x \\<in> {a--b} \\<Longrightarrow>\n       x \\<bullet> (b - a) \\<le> b \\<bullet> (b - a)\n 4. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a)\n        \\<le> (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        \\<le> b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a--b}", "show \"x \\<in> range (\\<lambda>u. a + u *\\<^sub>R (b - a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> range (\\<lambda>u. a + u *\\<^sub>R (b - a))", "using x_eq"], ["proof (prove)\nusing this:\n  x = a + u *\\<^sub>R (b - a)\n\ngoal (1 subgoal):\n 1. x \\<in> range (\\<lambda>u. a + u *\\<^sub>R (b - a))", "by auto"], ["proof (state)\nthis:\n  x \\<in> range (\\<lambda>u. a + u *\\<^sub>R (b - a))\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> {a--b} \\<Longrightarrow>\n       a \\<bullet> (b - a) \\<le> x \\<bullet> (b - a)\n 2. \\<And>x.\n       x \\<in> {a--b} \\<Longrightarrow>\n       x \\<bullet> (b - a) \\<le> b \\<bullet> (b - a)\n 3. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a)\n        \\<le> (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        \\<le> b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a--b}", "have \"2 * (a \\<bullet> b) \\<le> a \\<bullet> a + b \\<bullet> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * (a \\<bullet> b) \\<le> a \\<bullet> a + b \\<bullet> b", "by (rule inner_quad_ge)"], ["proof (state)\nthis:\n  2 * (a \\<bullet> b) \\<le> a \\<bullet> a + b \\<bullet> b\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> {a--b} \\<Longrightarrow>\n       a \\<bullet> (b - a) \\<le> x \\<bullet> (b - a)\n 2. \\<And>x.\n       x \\<in> {a--b} \\<Longrightarrow>\n       x \\<bullet> (b - a) \\<le> b \\<bullet> (b - a)\n 3. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a)\n        \\<le> (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        \\<le> b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a--b}", "then"], ["proof (chain)\npicking this:\n  2 * (a \\<bullet> b) \\<le> a \\<bullet> a + b \\<bullet> b", "have \"u * (2 * (a \\<bullet> b) - a \\<bullet> a - b \\<bullet> b) \\<le> 0\"\n    \"0 \\<le> (1 - u) * (a \\<bullet> a + b \\<bullet> b - a \\<bullet> b * 2)\""], ["proof (prove)\nusing this:\n  2 * (a \\<bullet> b) \\<le> a \\<bullet> a + b \\<bullet> b\n\ngoal (1 subgoal):\n 1. u * (2 * (a \\<bullet> b) - a \\<bullet> a - b \\<bullet> b) \\<le> 0 &&&\n    0 \\<le> (1 - u) * (a \\<bullet> a + b \\<bullet> b - a \\<bullet> b * 2)", "by (simp_all add: mult_le_0_iff u)"], ["proof (state)\nthis:\n  u * (2 * (a \\<bullet> b) - a \\<bullet> a - b \\<bullet> b) \\<le> 0\n  0 \\<le> (1 - u) * (a \\<bullet> a + b \\<bullet> b - a \\<bullet> b * 2)\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> {a--b} \\<Longrightarrow>\n       a \\<bullet> (b - a) \\<le> x \\<bullet> (b - a)\n 2. \\<And>x.\n       x \\<in> {a--b} \\<Longrightarrow>\n       x \\<bullet> (b - a) \\<le> b \\<bullet> (b - a)\n 3. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a)\n        \\<le> (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        \\<le> b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a--b}", "then"], ["proof (chain)\npicking this:\n  u * (2 * (a \\<bullet> b) - a \\<bullet> a - b \\<bullet> b) \\<le> 0\n  0 \\<le> (1 - u) * (a \\<bullet> a + b \\<bullet> b - a \\<bullet> b * 2)", "show \" a \\<bullet> (b - a) \\<le> x \\<bullet> (b - a)\" \"x \\<bullet> (b - a) \\<le> b \\<bullet> (b - a)\""], ["proof (prove)\nusing this:\n  u * (2 * (a \\<bullet> b) - a \\<bullet> a - b \\<bullet> b) \\<le> 0\n  0 \\<le> (1 - u) * (a \\<bullet> a + b \\<bullet> b - a \\<bullet> b * 2)\n\ngoal (1 subgoal):\n 1. a \\<bullet> (b - a) \\<le> x \\<bullet> (b - a) &&&\n    x \\<bullet> (b - a) \\<le> b \\<bullet> (b - a)", "by (auto simp: x_eq algebra_simps power2_eq_square inner_commute)"], ["proof (state)\nthis:\n  a \\<bullet> (b - a) \\<le> x \\<bullet> (b - a)\n  x \\<bullet> (b - a) \\<le> b \\<bullet> (b - a)\n\ngoal (1 subgoal):\n 1. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a)\n        \\<le> (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        \\<le> b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a--b}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a)\n        \\<le> (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        \\<le> b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a--b}", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a)\n        \\<le> (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        \\<le> b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a--b}", "assume\n    \"a \\<bullet> (b - a) \\<le> (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\"\n    \"(a + u *\\<^sub>R (b - a)) \\<bullet> (b - a) \\<le> b \\<bullet> (b - a)\""], ["proof (state)\nthis:\n  a \\<bullet> (b - a) \\<le> (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n  (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a) \\<le> b \\<bullet> (b - a)\n\ngoal (1 subgoal):\n 1. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a)\n        \\<le> (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        \\<le> b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a--b}", "then"], ["proof (chain)\npicking this:\n  a \\<bullet> (b - a) \\<le> (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n  (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a) \\<le> b \\<bullet> (b - a)", "have \"0 \\<le> u * ((b - a) \\<bullet> (b - a))\" \"0 \\<le> (1 - u) * ((b - a) \\<bullet> (b - a))\""], ["proof (prove)\nusing this:\n  a \\<bullet> (b - a) \\<le> (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n  (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a) \\<le> b \\<bullet> (b - a)\n\ngoal (1 subgoal):\n 1. 0 \\<le> u * ((b - a) \\<bullet> (b - a)) &&&\n    0 \\<le> (1 - u) * ((b - a) \\<bullet> (b - a))", "by (auto simp: algebra_simps)"], ["proof (state)\nthis:\n  0 \\<le> u * ((b - a) \\<bullet> (b - a))\n  0 \\<le> (1 - u) * ((b - a) \\<bullet> (b - a))\n\ngoal (1 subgoal):\n 1. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a)\n        \\<le> (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        \\<le> b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a--b}", "then"], ["proof (chain)\npicking this:\n  0 \\<le> u * ((b - a) \\<bullet> (b - a))\n  0 \\<le> (1 - u) * ((b - a) \\<bullet> (b - a))", "have \"0 \\<le> u\" \"u \\<le> 1\""], ["proof (prove)\nusing this:\n  0 \\<le> u * ((b - a) \\<bullet> (b - a))\n  0 \\<le> (1 - u) * ((b - a) \\<bullet> (b - a))\n\ngoal (1 subgoal):\n 1. 0 \\<le> u &&& u \\<le> 1", "using inner_ge_zero[of \"(b - a)\"] that"], ["proof (prove)\nusing this:\n  0 \\<le> u * ((b - a) \\<bullet> (b - a))\n  0 \\<le> (1 - u) * ((b - a) \\<bullet> (b - a))\n  0 \\<le> (b - a) \\<bullet> (b - a)\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. 0 \\<le> u &&& u \\<le> 1", "by (auto simp add: zero_le_mult_iff)"], ["proof (state)\nthis:\n  0 \\<le> u\n  u \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a)\n        \\<le> (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        \\<le> b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a--b}", "then"], ["proof (chain)\npicking this:\n  0 \\<le> u\n  u \\<le> 1", "show \"a + u *\\<^sub>R (b - a) \\<in> {a--b}\""], ["proof (prove)\nusing this:\n  0 \\<le> u\n  u \\<le> 1\n\ngoal (1 subgoal):\n 1. a + u *\\<^sub>R (b - a) \\<in> {a--b}", "by (auto simp: in_segment algebra_simps)"], ["proof (state)\nthis:\n  a + u *\\<^sub>R (b - a) \\<in> {a--b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma open_segment_line_hyperplanes:\n  \"{a <--< b} = range (\\<lambda>u. a + u *\\<^sub>R (b - a)) \\<inter> {x. a \\<bullet> (b - a) < x \\<bullet> (b - a) \\<and> x \\<bullet> (b - a) < b \\<bullet> (b - a)}\"\n  if \"a \\<noteq> b\"\n  for a b::\"'a::euclidean_space\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a<--<b} =\n    range (\\<lambda>u. a + u *\\<^sub>R (b - a)) \\<inter>\n    {x. a \\<bullet> (b - a) < x \\<bullet> (b - a) \\<and>\n        x \\<bullet> (b - a) < b \\<bullet> (b - a)}", "proof safe"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> {a<--<b} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>u. a + u *\\<^sub>R (b - a))\n 2. \\<And>x.\n       x \\<in> {a<--<b} \\<Longrightarrow>\n       a \\<bullet> (b - a) < x \\<bullet> (b - a)\n 3. \\<And>x.\n       x \\<in> {a<--<b} \\<Longrightarrow>\n       x \\<bullet> (b - a) < b \\<bullet> (b - a)\n 4. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a) < (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        < b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a<--<b}", "fix x"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> {a<--<b} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>u. a + u *\\<^sub>R (b - a))\n 2. \\<And>x.\n       x \\<in> {a<--<b} \\<Longrightarrow>\n       a \\<bullet> (b - a) < x \\<bullet> (b - a)\n 3. \\<And>x.\n       x \\<in> {a<--<b} \\<Longrightarrow>\n       x \\<bullet> (b - a) < b \\<bullet> (b - a)\n 4. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a) < (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        < b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a<--<b}", "assume x: \"x \\<in> {a<--<b}\""], ["proof (state)\nthis:\n  x \\<in> {a<--<b}\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> {a<--<b} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>u. a + u *\\<^sub>R (b - a))\n 2. \\<And>x.\n       x \\<in> {a<--<b} \\<Longrightarrow>\n       a \\<bullet> (b - a) < x \\<bullet> (b - a)\n 3. \\<And>x.\n       x \\<in> {a<--<b} \\<Longrightarrow>\n       x \\<bullet> (b - a) < b \\<bullet> (b - a)\n 4. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a) < (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        < b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a<--<b}", "then"], ["proof (chain)\npicking this:\n  x \\<in> {a<--<b}", "obtain u where u: \"0 < u\" \"u < 1\" and x_eq: \"x = a + u *\\<^sub>R (b - a)\""], ["proof (prove)\nusing this:\n  x \\<in> {a<--<b}\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>0 < u; u < 1; x = a + u *\\<^sub>R (b - a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: in_segment algebra_simps)"], ["proof (state)\nthis:\n  0 < u\n  u < 1\n  x = a + u *\\<^sub>R (b - a)\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> {a<--<b} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>u. a + u *\\<^sub>R (b - a))\n 2. \\<And>x.\n       x \\<in> {a<--<b} \\<Longrightarrow>\n       a \\<bullet> (b - a) < x \\<bullet> (b - a)\n 3. \\<And>x.\n       x \\<in> {a<--<b} \\<Longrightarrow>\n       x \\<bullet> (b - a) < b \\<bullet> (b - a)\n 4. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a) < (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        < b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a<--<b}", "show \"x \\<in> range (\\<lambda>u. a + u *\\<^sub>R (b - a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> range (\\<lambda>u. a + u *\\<^sub>R (b - a))", "using x_eq"], ["proof (prove)\nusing this:\n  x = a + u *\\<^sub>R (b - a)\n\ngoal (1 subgoal):\n 1. x \\<in> range (\\<lambda>u. a + u *\\<^sub>R (b - a))", "by auto"], ["proof (state)\nthis:\n  x \\<in> range (\\<lambda>u. a + u *\\<^sub>R (b - a))\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> {a<--<b} \\<Longrightarrow>\n       a \\<bullet> (b - a) < x \\<bullet> (b - a)\n 2. \\<And>x.\n       x \\<in> {a<--<b} \\<Longrightarrow>\n       x \\<bullet> (b - a) < b \\<bullet> (b - a)\n 3. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a) < (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        < b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a<--<b}", "have \"2 * (a \\<bullet> b) < a \\<bullet> a + b \\<bullet> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * (a \\<bullet> b) < a \\<bullet> a + b \\<bullet> b", "using that"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. 2 * (a \\<bullet> b) < a \\<bullet> a + b \\<bullet> b", "by (rule inner_quad_gt)"], ["proof (state)\nthis:\n  2 * (a \\<bullet> b) < a \\<bullet> a + b \\<bullet> b\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> {a<--<b} \\<Longrightarrow>\n       a \\<bullet> (b - a) < x \\<bullet> (b - a)\n 2. \\<And>x.\n       x \\<in> {a<--<b} \\<Longrightarrow>\n       x \\<bullet> (b - a) < b \\<bullet> (b - a)\n 3. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a) < (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        < b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a<--<b}", "then"], ["proof (chain)\npicking this:\n  2 * (a \\<bullet> b) < a \\<bullet> a + b \\<bullet> b", "have \"u * (2 * (a \\<bullet> b) - a \\<bullet> a - b \\<bullet> b) < 0\"\n    \"0 < (1 - u) * (a \\<bullet> a + b \\<bullet> b - a \\<bullet> b * 2)\""], ["proof (prove)\nusing this:\n  2 * (a \\<bullet> b) < a \\<bullet> a + b \\<bullet> b\n\ngoal (1 subgoal):\n 1. u * (2 * (a \\<bullet> b) - a \\<bullet> a - b \\<bullet> b) < 0 &&&\n    0 < (1 - u) * (a \\<bullet> a + b \\<bullet> b - a \\<bullet> b * 2)", "by (simp_all add: mult_less_0_iff u)"], ["proof (state)\nthis:\n  u * (2 * (a \\<bullet> b) - a \\<bullet> a - b \\<bullet> b) < 0\n  0 < (1 - u) * (a \\<bullet> a + b \\<bullet> b - a \\<bullet> b * 2)\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> {a<--<b} \\<Longrightarrow>\n       a \\<bullet> (b - a) < x \\<bullet> (b - a)\n 2. \\<And>x.\n       x \\<in> {a<--<b} \\<Longrightarrow>\n       x \\<bullet> (b - a) < b \\<bullet> (b - a)\n 3. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a) < (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        < b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a<--<b}", "then"], ["proof (chain)\npicking this:\n  u * (2 * (a \\<bullet> b) - a \\<bullet> a - b \\<bullet> b) < 0\n  0 < (1 - u) * (a \\<bullet> a + b \\<bullet> b - a \\<bullet> b * 2)", "show \" a \\<bullet> (b - a) < x \\<bullet> (b - a)\" \"x \\<bullet> (b - a) < b \\<bullet> (b - a)\""], ["proof (prove)\nusing this:\n  u * (2 * (a \\<bullet> b) - a \\<bullet> a - b \\<bullet> b) < 0\n  0 < (1 - u) * (a \\<bullet> a + b \\<bullet> b - a \\<bullet> b * 2)\n\ngoal (1 subgoal):\n 1. a \\<bullet> (b - a) < x \\<bullet> (b - a) &&&\n    x \\<bullet> (b - a) < b \\<bullet> (b - a)", "by (auto simp: x_eq algebra_simps power2_eq_square inner_commute)"], ["proof (state)\nthis:\n  a \\<bullet> (b - a) < x \\<bullet> (b - a)\n  x \\<bullet> (b - a) < b \\<bullet> (b - a)\n\ngoal (1 subgoal):\n 1. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a) < (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        < b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a<--<b}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a) < (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        < b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a<--<b}", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a) < (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        < b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a<--<b}", "assume\n    \"a \\<bullet> (b - a) < (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\"\n    \"(a + u *\\<^sub>R (b - a)) \\<bullet> (b - a) < b \\<bullet> (b - a)\""], ["proof (state)\nthis:\n  a \\<bullet> (b - a) < (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n  (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a) < b \\<bullet> (b - a)\n\ngoal (1 subgoal):\n 1. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a) < (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        < b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a<--<b}", "then"], ["proof (chain)\npicking this:\n  a \\<bullet> (b - a) < (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n  (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a) < b \\<bullet> (b - a)", "have \"0 < u * ((b - a) \\<bullet> (b - a))\" \"0 < (1 - u) * ((b - a) \\<bullet> (b - a))\""], ["proof (prove)\nusing this:\n  a \\<bullet> (b - a) < (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n  (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a) < b \\<bullet> (b - a)\n\ngoal (1 subgoal):\n 1. 0 < u * ((b - a) \\<bullet> (b - a)) &&&\n    0 < (1 - u) * ((b - a) \\<bullet> (b - a))", "by (auto simp: algebra_simps)"], ["proof (state)\nthis:\n  0 < u * ((b - a) \\<bullet> (b - a))\n  0 < (1 - u) * ((b - a) \\<bullet> (b - a))\n\ngoal (1 subgoal):\n 1. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a) < (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        < b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a<--<b}", "then"], ["proof (chain)\npicking this:\n  0 < u * ((b - a) \\<bullet> (b - a))\n  0 < (1 - u) * ((b - a) \\<bullet> (b - a))", "have \"0 < u\" \"u < 1\""], ["proof (prove)\nusing this:\n  0 < u * ((b - a) \\<bullet> (b - a))\n  0 < (1 - u) * ((b - a) \\<bullet> (b - a))\n\ngoal (1 subgoal):\n 1. 0 < u &&& u < 1", "using inner_ge_zero[of \"(b - a)\"] that"], ["proof (prove)\nusing this:\n  0 < u * ((b - a) \\<bullet> (b - a))\n  0 < (1 - u) * ((b - a) \\<bullet> (b - a))\n  0 \\<le> (b - a) \\<bullet> (b - a)\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. 0 < u &&& u < 1", "by (auto simp add: zero_less_mult_iff)"], ["proof (state)\nthis:\n  0 < u\n  u < 1\n\ngoal (1 subgoal):\n 1. \\<And>x u.\n       \\<lbrakk>u \\<in> UNIV;\n        a \\<bullet> (b - a) < (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a);\n        (a + u *\\<^sub>R (b - a)) \\<bullet> (b - a)\n        < b \\<bullet> (b - a)\\<rbrakk>\n       \\<Longrightarrow> a + u *\\<^sub>R (b - a) \\<in> {a<--<b}", "then"], ["proof (chain)\npicking this:\n  0 < u\n  u < 1", "show \"a + u *\\<^sub>R (b - a) \\<in> {a<--<b}\""], ["proof (prove)\nusing this:\n  0 < u\n  u < 1\n\ngoal (1 subgoal):\n 1. a + u *\\<^sub>R (b - a) \\<in> {a<--<b}", "by (auto simp: in_segment algebra_simps that)"], ["proof (state)\nthis:\n  a + u *\\<^sub>R (b - a) \\<in> {a<--<b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma at_within_interior: \"NO_MATCH UNIV S \\<Longrightarrow> x \\<in> interior S \\<Longrightarrow> at x within S = at x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>NO_MATCH UNIV S; x \\<in> interior S\\<rbrakk>\n    \\<Longrightarrow> at x within S = at x", "by (auto intro: at_within_interior)"], ["", "lemma tendsto_at_topI:\n  \"(f \\<longlongrightarrow> l) at_top\" if \"\\<And>e. 0 < e \\<Longrightarrow> \\<exists>x0. \\<forall>x\\<ge>x0. dist (f x) l < e\"\nfor f::\"'a::linorder_topology \\<Rightarrow> 'b::metric_space\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> l) at_top", "using that"], ["proof (prove)\nusing this:\n  0 < ?e \\<Longrightarrow> \\<exists>x0. \\<forall>x\\<ge>x0. dist (f x) l < ?e\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> l) at_top", "apply (intro tendstoI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>\\<And>e.\n                   0 < e \\<Longrightarrow>\n                   \\<exists>x0. \\<forall>x\\<ge>x0. dist (f x) l < e;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<^sub>F x in at_top. dist (f x) l < e", "unfolding eventually_at_top_linorder"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>\\<And>e.\n                   0 < e \\<Longrightarrow>\n                   \\<exists>x0. \\<forall>x\\<ge>x0. dist (f x) l < e;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>N. \\<forall>n\\<ge>N. dist (f n) l < e", "by auto"], ["", "lemma tendsto_at_topE:\n  fixes f::\"'a::linorder_topology \\<Rightarrow> 'b::metric_space\"\n  assumes \"(f \\<longlongrightarrow> l) at_top\"\n  assumes \"e > 0\"\n  obtains x0 where \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> dist (f x) l < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x0.\n        (\\<And>x.\n            x0 \\<le> x \\<Longrightarrow> dist (f x) l < e) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>x0.\n        (\\<And>x.\n            x0 \\<le> x \\<Longrightarrow> dist (f x) l < e) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from assms(1)[THEN tendstoD, OF assms(2)]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top. dist (f x) l < e", "have \"\\<forall>\\<^sub>F x in at_top. dist (f x) l < e\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. dist (f x) l < e\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top. dist (f x) l < e", "."], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top. dist (f x) l < e\n\ngoal (1 subgoal):\n 1. (\\<And>x0.\n        (\\<And>x.\n            x0 \\<le> x \\<Longrightarrow> dist (f x) l < e) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top. dist (f x) l < e", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top. dist (f x) l < e\n\ngoal (1 subgoal):\n 1. thesis", "unfolding eventually_at_top_linorder"], ["proof (prove)\nusing this:\n  \\<exists>N. \\<forall>n\\<ge>N. dist (f n) l < e\n\ngoal (1 subgoal):\n 1. thesis", "by (auto intro: that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tendsto_at_top_iff: \"(f \\<longlongrightarrow> l) at_top \\<longleftrightarrow> (\\<forall>e>0. \\<exists>x0. \\<forall>x\\<ge>x0. dist (f x) l < e)\"\n  for f::\"'a::linorder_topology \\<Rightarrow> 'b::metric_space\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> l) at_top =\n    (\\<forall>e>0. \\<exists>x0. \\<forall>x\\<ge>x0. dist (f x) l < e)", "by (auto intro!: tendsto_at_topI elim!: tendsto_at_topE)"], ["", "lemma tendsto_at_top_eq_left:\n  fixes f g::\"'a::linorder_topology \\<Rightarrow> 'b::metric_space\"\n  assumes \"(f \\<longlongrightarrow> l) at_top\"\n  assumes \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> f x = g x\"\n  shows \"(g \\<longlongrightarrow> l) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g \\<longlongrightarrow> l) at_top", "unfolding tendsto_at_top_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>e>0. \\<exists>x0. \\<forall>x\\<ge>x0. dist (g x) l < e", "by (metis (no_types, hide_lams) assms(1) assms(2) linear order_trans tendsto_at_topE)"], ["", "lemma lim_divide_n: \"(\\<lambda>x. e / real x) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. e / real x) \\<longlonglongrightarrow> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. e / real x) \\<longlonglongrightarrow> 0", "have \"(\\<lambda>x. e * inverse (real x)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. e * inverse (real x)) \\<longlonglongrightarrow> 0", "by (auto intro: tendsto_eq_intros lim_inverse_n)"], ["proof (state)\nthis:\n  (\\<lambda>x. e * inverse (real x)) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. e / real x) \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. e * inverse (real x)) \\<longlonglongrightarrow> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. e * inverse (real x)) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. e / real x) \\<longlonglongrightarrow> 0", "by (simp add: inverse_eq_divide)"], ["proof (state)\nthis:\n  (\\<lambda>x. e / real x) \\<longlonglongrightarrow> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "definition at_top_within :: \"('a::order) set \\<Rightarrow> 'a filter\"\n  where \"at_top_within s = (INF k \\<in> s. principal ({k ..} \\<inter> s)) \""], ["", "lemma at_top_within_at_top[simp]:\n  shows \"at_top_within UNIV = at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at_top_within UNIV = at_top", "unfolding at_top_within_def at_top_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (INF k. principal ({k..} \\<inter> UNIV)) = (INF k. principal {k..})", "by (auto)"], ["", "lemma at_top_within_empty[simp]:\n  shows \"at_top_within {} = top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at_top_within {} = top", "unfolding at_top_within_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (INF k\\<in>{}. principal ({k..} \\<inter> {})) = top", "by (auto)"], ["", "definition \"nhds_set X = (INF S\\<in>{S. open S \\<and> X \\<subseteq> S}. principal S)\""], ["", "lemma eventually_nhds_set:\n  \"(\\<forall>\\<^sub>F x in nhds_set X. P x) \\<longleftrightarrow> (\\<exists>S. open S \\<and> X \\<subseteq> S \\<and> (\\<forall>x\\<in>S. P x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually P (nhds_set X) =\n    (\\<exists>S.\n        open S \\<and> X \\<subseteq> S \\<and> (\\<forall>x\\<in>S. P x))", "unfolding nhds_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually P (Inf (principal ` {S. open S \\<and> X \\<subseteq> S})) =\n    (\\<exists>S.\n        open S \\<and> X \\<subseteq> S \\<and> (\\<forall>x\\<in>S. P x))", "by (subst eventually_INF_base) (auto simp: eventually_principal)"], ["", "term \"filterlim f (nhds_set (frontier X)) F\" \\<comment> \\<open>f tends to the boundary of X?\\<close>"], ["", "text \\<open>somewhat inspired by @{thm islimpt_range_imp_convergent_subsequence} and its dependencies.\nThe class constraints seem somewhat arbitrary, perhaps this can be generalized in some way.\n\\<close>"], ["", "lemma limpt_closed_imp_exploding_subsequence:\\<comment>\\<open>TODO: improve name?!\\<close>\n  fixes f::\"'a::{heine_borel,real_normed_vector} \\<Rightarrow> 'b::{first_countable_topology, t2_space}\"\n  assumes cont[THEN continuous_on_compose2, continuous_intros]: \"continuous_on T f\"\n  assumes closed: \"closed T\"\n  assumes bound: \"\\<And>t. t \\<in> T \\<Longrightarrow> f t \\<noteq> l\"\n  assumes limpt: \"l islimpt (f ` T)\"\n  obtains s where\n    \"(f \\<circ> s) \\<longlonglongrightarrow> l\"\n    \"\\<And>i. s i \\<in> T\"\n    \"\\<And>C. compact C \\<Longrightarrow> C \\<subseteq> T \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially. s i \\<notin> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n         \\<And>i. s i \\<in> T;\n         \\<And>C.\n            \\<lbrakk>compact C; C \\<subseteq> T\\<rbrakk>\n            \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially.\n                                 s i \\<notin> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n         \\<And>i. s i \\<in> T;\n         \\<And>C.\n            \\<lbrakk>compact C; C \\<subseteq> T\\<rbrakk>\n            \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially.\n                                 s i \\<notin> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from countable_basis_at_decseq[of l]"], ["proof (chain)\npicking this:\n  (\\<And>A.\n      \\<lbrakk>\\<And>i. open (A i); \\<And>i. l \\<in> A i;\n       \\<And>S.\n          \\<lbrakk>open S; l \\<in> S\\<rbrakk>\n          \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially.\n                               A i \\<subseteq> S\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain A where A: \"\\<And>i. open (A i)\" \"\\<And>i. l \\<in> A i\"\n    and evA: \"\\<And>S. open S \\<Longrightarrow> l \\<in> S \\<Longrightarrow> eventually (\\<lambda>i. A i \\<subseteq> S) sequentially\""], ["proof (prove)\nusing this:\n  (\\<And>A.\n      \\<lbrakk>\\<And>i. open (A i); \\<And>i. l \\<in> A i;\n       \\<And>S.\n          \\<lbrakk>open S; l \\<in> S\\<rbrakk>\n          \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially.\n                               A i \\<subseteq> S\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>\\<And>i. open (A i); \\<And>i. l \\<in> A i;\n         \\<And>S.\n            \\<lbrakk>open S; l \\<in> S\\<rbrakk>\n            \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially.\n                                 A i \\<subseteq> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  open (A ?i)\n  l \\<in> A ?i\n  \\<lbrakk>open ?S; l \\<in> ?S\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially. A i \\<subseteq> ?S\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n         \\<And>i. s i \\<in> T;\n         \\<And>C.\n            \\<lbrakk>compact C; C \\<subseteq> T\\<rbrakk>\n            \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially.\n                                 s i \\<notin> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from closed_Union_compact_subsets[OF closed]"], ["proof (chain)\npicking this:\n  (\\<And>F.\n      \\<lbrakk>\\<And>n. compact (F n); \\<And>n. F n \\<subseteq> T;\n       \\<And>n. F n \\<subseteq> F (Suc n); \\<Union> (range F) = T;\n       \\<And>K.\n          \\<lbrakk>compact K; K \\<subseteq> T\\<rbrakk>\n          \\<Longrightarrow> \\<exists>N.\n                               \\<forall>n\\<ge>N. K \\<subseteq> F n\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain C\n    where C: \"(\\<And>n. compact (C n))\" \"(\\<And>n. C n \\<subseteq> T)\" \"(\\<And>n. C n \\<subseteq> C (Suc n))\" \"\\<Union> (range C) = T\"\n      and evC: \"(\\<And>K. compact K \\<Longrightarrow> K \\<subseteq> T \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially. K \\<subseteq> C i)\""], ["proof (prove)\nusing this:\n  (\\<And>F.\n      \\<lbrakk>\\<And>n. compact (F n); \\<And>n. F n \\<subseteq> T;\n       \\<And>n. F n \\<subseteq> F (Suc n); \\<Union> (range F) = T;\n       \\<And>K.\n          \\<lbrakk>compact K; K \\<subseteq> T\\<rbrakk>\n          \\<Longrightarrow> \\<exists>N.\n                               \\<forall>n\\<ge>N. K \\<subseteq> F n\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>\\<And>n. compact (C n); \\<And>n. C n \\<subseteq> T;\n         \\<And>n. C n \\<subseteq> C (Suc n); \\<Union> (range C) = T;\n         \\<And>K.\n            \\<lbrakk>compact K; K \\<subseteq> T\\<rbrakk>\n            \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially.\n                                 K \\<subseteq> C i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis eventually_sequentially)"], ["proof (state)\nthis:\n  compact (C ?n)\n  C ?n \\<subseteq> T\n  C ?n \\<subseteq> C (Suc ?n)\n  \\<Union> (range C) = T\n  \\<lbrakk>compact ?K; ?K \\<subseteq> T\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially. ?K \\<subseteq> C i\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n         \\<And>i. s i \\<in> T;\n         \\<And>C.\n            \\<lbrakk>compact C; C \\<subseteq> T\\<rbrakk>\n            \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially.\n                                 s i \\<notin> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have AC: \"l \\<in> A i - f ` C i\" \"open (A i - f ` C i)\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. l \\<in> A i - f ` C i &&& open (A i - f ` C i)", "using C bound"], ["proof (prove)\nusing this:\n  compact (C ?n)\n  C ?n \\<subseteq> T\n  C ?n \\<subseteq> C (Suc ?n)\n  \\<Union> (range C) = T\n  ?t \\<in> T \\<Longrightarrow> f ?t \\<noteq> l\n\ngoal (1 subgoal):\n 1. l \\<in> A i - f ` C i &&& open (A i - f ` C i)", "by (fastforce intro!: open_Diff A compact_imp_closed compact_continuous_image continuous_intros)+"], ["proof (state)\nthis:\n  l \\<in> A ?i - f ` C ?i\n  open (A ?i - f ` C ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n         \\<And>i. s i \\<in> T;\n         \\<And>C.\n            \\<lbrakk>compact C; C \\<subseteq> T\\<rbrakk>\n            \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially.\n                                 s i \\<notin> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from islimptE[OF limpt AC]"], ["proof (chain)\npicking this:\n  (\\<And>y.\n      \\<lbrakk>y \\<in> f ` T; y \\<in> A ?i1 - f ` C ?i1;\n       y \\<noteq> l\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "have \"\\<exists>t\\<in>T. f t \\<in> A i - f ` C i \\<and> f t \\<noteq> l\" for i"], ["proof (prove)\nusing this:\n  (\\<And>y.\n      \\<lbrakk>y \\<in> f ` T; y \\<in> A ?i1 - f ` C ?i1;\n       y \\<noteq> l\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>t\\<in>T. f t \\<in> A i - f ` C i \\<and> f t \\<noteq> l", "by blast"], ["proof (state)\nthis:\n  \\<exists>t\\<in>T. f t \\<in> A ?i - f ` C ?i \\<and> f t \\<noteq> l\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n         \\<And>i. s i \\<in> T;\n         \\<And>C.\n            \\<lbrakk>compact C; C \\<subseteq> T\\<rbrakk>\n            \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially.\n                                 s i \\<notin> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>t\\<in>T. f t \\<in> A ?i - f ` C ?i \\<and> f t \\<noteq> l", "obtain t where t: \"\\<And>i. t i \\<in> T\" \"\\<And>i. f (t i) \\<in> A i - f ` C i\" \"\\<And>i. f (t i) \\<noteq> l\""], ["proof (prove)\nusing this:\n  \\<exists>t\\<in>T. f t \\<in> A ?i - f ` C ?i \\<and> f t \\<noteq> l\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>\\<And>i. t i \\<in> T; \\<And>i. f (t i) \\<in> A i - f ` C i;\n         \\<And>i. f (t i) \\<noteq> l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  t ?i \\<in> T\n  f (t ?i) \\<in> A ?i - f ` C ?i\n  f (t ?i) \\<noteq> l\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n         \\<And>i. s i \\<in> T;\n         \\<And>C.\n            \\<lbrakk>compact C; C \\<subseteq> T\\<rbrakk>\n            \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially.\n                                 s i \\<notin> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"(f o t) \\<longlonglongrightarrow> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<circ> t) \\<longlonglongrightarrow> l", "using t"], ["proof (prove)\nusing this:\n  t ?i \\<in> T\n  f (t ?i) \\<in> A ?i - f ` C ?i\n  f (t ?i) \\<noteq> l\n\ngoal (1 subgoal):\n 1. (f \\<circ> t) \\<longlonglongrightarrow> l", "by (auto intro!: topological_tendstoI dest!: evA elim!: eventually_mono)"], ["proof (state)\nthis:\n  (f \\<circ> t) \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n         \\<And>i. s i \\<in> T;\n         \\<And>C.\n            \\<lbrakk>compact C; C \\<subseteq> T\\<rbrakk>\n            \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially.\n                                 s i \\<notin> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  (f \\<circ> t) \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n         \\<And>i. s i \\<in> T;\n         \\<And>C.\n            \\<lbrakk>compact C; C \\<subseteq> T\\<rbrakk>\n            \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially.\n                                 s i \\<notin> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<And>i. t i \\<in> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. t i \\<in> T", "by fact"], ["proof (state)\nthis:\n  t ?i \\<in> T\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n         \\<And>i. s i \\<in> T;\n         \\<And>C.\n            \\<lbrakk>compact C; C \\<subseteq> T\\<rbrakk>\n            \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially.\n                                 s i \\<notin> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  t ?i \\<in> T\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n         \\<And>i. s i \\<in> T;\n         \\<And>C.\n            \\<lbrakk>compact C; C \\<subseteq> T\\<rbrakk>\n            \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially.\n                                 s i \\<notin> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<forall>\\<^sub>F i in sequentially. t i \\<notin> K\" if \"compact K\" \"K \\<subseteq> T\" for K"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F i in sequentially. t i \\<notin> K", "using evC[OF that]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F i in sequentially. K \\<subseteq> C i\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F i in sequentially. t i \\<notin> K", "by eventually_elim (use t in auto)"], ["proof (state)\nthis:\n  \\<lbrakk>compact ?K; ?K \\<subseteq> T\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially. t i \\<notin> ?K\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n         \\<And>i. s i \\<in> T;\n         \\<And>C.\n            \\<lbrakk>compact C; C \\<subseteq> T\\<rbrakk>\n            \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially.\n                                 s i \\<notin> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  (f \\<circ> t) \\<longlonglongrightarrow> l\n  t ?i \\<in> T\n  \\<lbrakk>compact ?K; ?K \\<subseteq> T\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially. t i \\<notin> ?K", "show ?thesis"], ["proof (prove)\nusing this:\n  (f \\<circ> t) \\<longlonglongrightarrow> l\n  t ?i \\<in> T\n  \\<lbrakk>compact ?K; ?K \\<subseteq> T\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially. t i \\<notin> ?K\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Inf_islimpt: \"bdd_below S \\<Longrightarrow> Inf S \\<notin> S \\<Longrightarrow> S \\<noteq> {} \\<Longrightarrow> Inf S islimpt S\" for S::\"real set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>bdd_below S; Inf S \\<notin> S; S \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> Inf S islimpt S", "by (auto simp: islimpt_in_closure intro!: closure_contains_Inf)"], ["", "context linorder\nbegin"], ["", "text \\<open>HOL-analysis doesn't seem to have these, maybe they were never needed.\n  Some variants are around @{thm Int_atLeastAtMost}, but with old-style naming conventions.\n  Change to the \"modern\" I.. convention there?\\<close>"], ["", "lemma Int_Ico[simp]:\n  shows \"{a..} \\<inter> {b..} = {max a b ..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a..} \\<inter> {b..} = {max a b..}", "by (auto)"], ["", "lemma Int_Ici_Ico[simp]:\n  shows \"{a..} \\<inter> {b..<c} = {max a b ..<c}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a..} \\<inter> {b..<c} = {max a b..<c}", "by auto"], ["", "lemma Int_Ico_Ici[simp]:\n  shows \"{a..<c} \\<inter> {b..} = {max a b ..<c}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a..<c} \\<inter> {b..} = {max a b..<c}", "by auto"], ["", "lemma subset_Ico_iff[simp]:\n  \"{a..<b} \\<subseteq> {c..<b} \\<longleftrightarrow> b \\<le> a \\<or> c \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ({a..<b} \\<subseteq> {c..<b}) = (b \\<le> a \\<or> c \\<le> a)", "unfolding atLeastLessThan_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ({a..} \\<inter> {..<b} \\<subseteq> {c..} \\<inter> {..<b}) =\n    (b \\<le> a \\<or> c \\<le> a)", "by auto"], ["", "lemma Ico_subset_Ioo_iff[simp]:\n  \"{a..<b} \\<subseteq> {c<..<b} \\<longleftrightarrow> b \\<le> a \\<or> c < a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ({a..<b} \\<subseteq> {c<..<b}) = (b \\<le> a \\<or> c < a)", "unfolding greaterThanLessThan_def atLeastLessThan_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ({a..} \\<inter> {..<b} \\<subseteq> {c<..} \\<inter> {..<b}) =\n    (b \\<le> a \\<or> c < a)", "by auto"], ["", "lemma Icc_Un_Ici[simp]:\n  shows \"{a..b} \\<union> {b..} = {min a b..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a..b} \\<union> {b..} = {min a b..}", "unfolding atLeastAtMost_def atLeast_def atMost_def min_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. a \\<le> x} \\<inter> {x. x \\<le> b} \\<union> {x. b \\<le> x} =\n    {x. (if a \\<le> b then a else b) \\<le> x}", "by auto"], ["", "end"], ["", "lemma at_top_within_at_top_unbounded_right:\n  fixes a::\"'a::linorder\"\n  shows \"at_top_within {a..} = at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at_top_within {a..} = at_top", "unfolding at_top_within_def at_top_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (INF k\\<in>{a..}. principal ({k..} \\<inter> {a..})) =\n    (INF k. principal {k..})", "apply (auto intro!: INF_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j. \\<exists>i\\<in>{a..}. j \\<le> max i a", "by (metis linorder_class.linear linorder_class.max.cobounded1 linorder_class.max.idem ord_class.atLeast_iff)"], ["", "lemma at_top_within_at_top_unbounded_rightI:\n  fixes a::\"'a::linorder\"\n  assumes \"{a..} \\<subseteq> s\"\n  shows \"at_top_within s = at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at_top_within s = at_top", "unfolding at_top_within_def at_top_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (INF k\\<in>s. principal ({k..} \\<inter> s)) = (INF k. principal {k..})", "apply (auto intro!: INF_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i \\<in> s \\<Longrightarrow> \\<exists>j\\<ge>i. {j..} \\<subseteq> s\n 2. \\<And>j. \\<exists>i\\<in>s. {i..} \\<inter> s \\<subseteq> {j..}", "apply (meson Ici_subset_Ioi_iff Ioi_le_Ico assms dual_order.refl dual_order.trans leI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j. \\<exists>i\\<in>s. {i..} \\<inter> s \\<subseteq> {j..}", "by (metis assms atLeast_iff atLeast_subset_iff inf.cobounded1 linear subsetD)"], ["", "lemma at_top_within_at_top_bounded_right:\n  fixes a b::\"'a::{dense_order,linorder_topology}\"\n  assumes \"a < b\"\n  shows \"at_top_within {a..<b} = at_left b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at_top_within {a..<b} = at_left b", "unfolding at_top_within_def at_left_eq[OF assms(1)]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (INF k\\<in>{a..<b}. principal ({k..} \\<inter> {a..<b})) =\n    (INF a\\<in>{..<b}. principal {a<..<b})", "apply (auto intro!: INF_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>a \\<le> i; i < b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>j\\<in>{..<b}.\n                            {j<..<b} \\<subseteq> {max i a..<b}\n 2. \\<And>j.\n       j < b \\<Longrightarrow>\n       \\<exists>i\\<in>{a..<b}. b \\<le> max i a \\<or> j < max i a", "apply (smt atLeastLessThan_iff greaterThanLessThan_iff le_less lessThan_iff max.absorb1 subset_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < b \\<Longrightarrow>\n       \\<exists>i\\<in>{a..<b}. b \\<le> max i a \\<or> j < max i a", "by (metis assms atLeastLessThan_iff dense linear max.absorb1 not_less order_trans)"], ["", "lemma at_top_within_at_top_bounded_right':\n  fixes a b::\"'a::{dense_order,linorder_topology}\"\n  assumes \"a < b\"\n  shows \"at_top_within {..<b} = at_left b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at_top_within {..<b} = at_left b", "unfolding at_top_within_def at_left_eq[OF assms(1)]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (INF k\\<in>{..<b}. principal ({k..} \\<inter> {..<b})) =\n    (INF a\\<in>{..<b}. principal {a<..<b})", "apply (auto intro!: INF_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < b \\<Longrightarrow>\n       \\<exists>j\\<in>{..<b}.\n          {j<..<b} \\<subseteq> {i..} \\<and> {j<..<b} \\<subseteq> {..<b}\n 2. \\<And>j.\n       j < b \\<Longrightarrow>\n       \\<exists>i\\<in>{..<b}. {i..} \\<inter> {..<b} \\<subseteq> {j<..<b}", "apply (meson atLeast_iff greaterThanLessThan_iff le_less lessThan_iff subset_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < b \\<Longrightarrow>\n       \\<exists>i\\<in>{..<b}. {i..} \\<inter> {..<b} \\<subseteq> {j<..<b}", "by (metis Ico_subset_Ioo_iff atLeastLessThan_def dense lessThan_iff)"], ["", "lemma eventually_at_top_within_linorder:\n  assumes sn:\"s \\<noteq> {}\"\n  shows \"eventually P (at_top_within s) \\<longleftrightarrow> (\\<exists>x0::'a::{linorder_topology} \\<in> s. \\<forall>x \\<ge> x0. x\\<in> s \\<longrightarrow> P x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually P (at_top_within s) =\n    (\\<exists>x0\\<in>s. \\<forall>x\\<ge>x0. x \\<in> s \\<longrightarrow> P x)", "unfolding at_top_within_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually P (INF k\\<in>s. principal ({k..} \\<inter> s)) =\n    (\\<exists>x0\\<in>s. \\<forall>x\\<ge>x0. x \\<in> s \\<longrightarrow> P x)", "apply (subst eventually_INF_base)"], ["proof (prove)\ngoal (3 subgoals):\n 1. s \\<noteq> {}\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> s; b \\<in> s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>s.\n                            principal ({x..} \\<inter> s)\n                            \\<le> inf (principal ({a..} \\<inter> s))\n                                   (principal ({b..} \\<inter> s))\n 3. (\\<exists>b\\<in>s. eventually P (principal ({b..} \\<inter> s))) =\n    (\\<exists>x0\\<in>s. \\<forall>x\\<ge>x0. x \\<in> s \\<longrightarrow> P x)", "apply (auto simp:eventually_principal sn)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> s; b \\<in> s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>s.\n                            {x..} \\<inter> s \\<subseteq> {a..} \\<and>\n                            {x..} \\<inter> s \\<subseteq> {b..}", "by (metis atLeast_subset_iff inf.coboundedI2 inf_commute linear)"], ["", "lemma tendsto_at_top_withinI:\n  fixes f::\"'a::linorder_topology \\<Rightarrow> 'b::metric_space\"\n  assumes \"s \\<noteq> {}\"\n  assumes \"\\<And>e. 0 < e \\<Longrightarrow> \\<exists>x0 \\<in> s. \\<forall>x \\<in> {x0..} \\<inter> s. dist (f x) l < e\"\n  shows  \"(f \\<longlongrightarrow> l) (at_top_within s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> l) (at_top_within s)", "apply(intro tendstoI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in at_top_within s. dist (f x) l < e", "unfolding at_top_within_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in INF k\\<in>s. principal ({k..} \\<inter> s).\n          dist (f x) l < e", "apply (subst eventually_INF_base)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e. 0 < e \\<Longrightarrow> s \\<noteq> {}\n 2. \\<And>e a b.\n       \\<lbrakk>0 < e; a \\<in> s; b \\<in> s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>s.\n                            principal ({x..} \\<inter> s)\n                            \\<le> inf (principal ({a..} \\<inter> s))\n                                   (principal ({b..} \\<inter> s))\n 3. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>b\\<in>s.\n          \\<forall>\\<^sub>F x in principal ({b..} \\<inter> s).\n             dist (f x) l < e", "apply (auto simp:eventually_principal assms)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       \\<lbrakk>0 < e; a \\<in> s; b \\<in> s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>s.\n                            {x..} \\<inter> s \\<subseteq> {a..} \\<and>\n                            {x..} \\<inter> s \\<subseteq> {b..}", "by (metis atLeast_subset_iff inf.coboundedI2 inf_commute linear)"], ["", "lemma tendsto_at_top_withinE:\n  fixes f::\"'a::linorder_topology \\<Rightarrow> 'b::metric_space\"\n  assumes \"s \\<noteq> {}\"\n  assumes \"(f \\<longlongrightarrow> l) (at_top_within s)\"\n  assumes \"e > 0\"\n  obtains x0 where \"x0 \\<in> s\" \"\\<And>x. x \\<in> {x0..} \\<inter> s \\<Longrightarrow> dist (f x) l < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x0.\n        \\<lbrakk>x0 \\<in> s;\n         \\<And>x.\n            x \\<in> {x0..} \\<inter> s \\<Longrightarrow>\n            dist (f x) l < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>x0.\n        \\<lbrakk>x0 \\<in> s;\n         \\<And>x.\n            x \\<in> {x0..} \\<inter> s \\<Longrightarrow>\n            dist (f x) l < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms(2)[THEN tendstoD, OF assms(3)]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top_within s. dist (f x) l < e", "have \"\\<forall>\\<^sub>F x in at_top_within s. dist (f x) l < e\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top_within s. dist (f x) l < e\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top_within s. dist (f x) l < e", "."], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top_within s. dist (f x) l < e\n\ngoal (1 subgoal):\n 1. (\\<And>x0.\n        \\<lbrakk>x0 \\<in> s;\n         \\<And>x.\n            x \\<in> {x0..} \\<inter> s \\<Longrightarrow>\n            dist (f x) l < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top_within s. dist (f x) l < e", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top_within s. dist (f x) l < e\n\ngoal (1 subgoal):\n 1. thesis", "unfolding eventually_at_top_within_linorder[OF \\<open>s \\<noteq> {}\\<close>]"], ["proof (prove)\nusing this:\n  \\<exists>x0\\<in>s.\n     \\<forall>x\\<ge>x0. x \\<in> s \\<longrightarrow> dist (f x) l < e\n\ngoal (1 subgoal):\n 1. thesis", "by (auto intro: that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tendsto_at_top_within_iff:\n  fixes f::\"'a::linorder_topology \\<Rightarrow> 'b::metric_space\"\n  assumes \"s \\<noteq> {}\"\n  shows \"(f \\<longlongrightarrow> l) (at_top_within s) \\<longleftrightarrow> (\\<forall>e>0. \\<exists>x0 \\<in> s. \\<forall>x \\<in> {x0..} \\<inter> s. dist (f x) l < e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> l) (at_top_within s) =\n    (\\<forall>e>0.\n        \\<exists>x0\\<in>s.\n           \\<forall>x\\<in>{x0..} \\<inter> s. dist (f x) l < e)", "by (auto intro!: tendsto_at_top_withinI[OF \\<open>s \\<noteq> {}\\<close>] elim!: tendsto_at_top_withinE[OF \\<open>s \\<noteq> {}\\<close>])"], ["", "lemma filterlim_at_top_at_top_within_bounded_right:\n  fixes a b::\"'a::{dense_order,linorder_topology}\"\n  fixes f::\"'a \\<Rightarrow> real\"\n  assumes \"a < b\"\n  shows \"filterlim f at_top (at_top_within {..<b}) = (f \\<longlongrightarrow> \\<infinity>) (at_left b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim f at_top (at_top_within {..<b}) =\n    ((\\<lambda>x. ereal (f x)) \\<longlongrightarrow> \\<infinity>)\n     (at_left b)", "unfolding filterlim_at_top_dense\n    at_top_within_at_top_bounded_right'[OF assms(1)]\n    eventually_at_left[OF assms(1)]\n    tendsto_PInfty"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>Z.\n        \\<exists>ba<b. \\<forall>y>ba. y < b \\<longrightarrow> Z < f y) =\n    (\\<forall>r.\n        \\<exists>ba<b.\n           \\<forall>y>ba. y < b \\<longrightarrow> ereal r < ereal (f y))", "by auto"], ["", "text \\<open>Extract a sequence (going to infinity) bounded away from l\\<close>"], ["", "lemma not_tendsto_frequentlyE:\n  assumes \"\\<not>((f \\<longlongrightarrow> l) F)\"\n  obtains S where \"open S\" \"l \\<in> S\" \"\\<exists>\\<^sub>F x in F. f x \\<notin> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>open S; l \\<in> S;\n         \\<exists>\\<^sub>F x in F. f x \\<notin> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<not> (f \\<longlongrightarrow> l) F\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>open S; l \\<in> S;\n         \\<exists>\\<^sub>F x in F. f x \\<notin> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: tendsto_def not_eventually)"], ["", "lemma not_tendsto_frequently_metricE:\n  assumes \"\\<not>((f \\<longlongrightarrow> l) F)\"\n  obtains e where \"e > 0\" \"\\<exists>\\<^sub>F x in F. e \\<le> dist (f x) l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         \\<exists>\\<^sub>F x in F. e \\<le> dist (f x) l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<not> (f \\<longlongrightarrow> l) F\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         \\<exists>\\<^sub>F x in F. e \\<le> dist (f x) l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: tendsto_iff not_eventually not_less)"], ["", "lemma eventually_frequently_conj: \"frequently P F \\<Longrightarrow> eventually Q F \\<Longrightarrow> frequently (\\<lambda>x. P x \\<and> Q x) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>frequently P F; eventually Q F\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<^sub>F x in F. P x \\<and> Q x", "unfolding frequently_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (\\<forall>\\<^sub>F x in F. \\<not> P x);\n     eventually Q F\\<rbrakk>\n    \\<Longrightarrow> \\<not> (\\<forall>\\<^sub>F x in F.\n                                 \\<not> (P x \\<and> Q x))", "apply (erule contrapos_nn)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eventually Q F;\n     \\<forall>\\<^sub>F x in F. \\<not> (P x \\<and> Q x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F x in F. \\<not> P x", "subgoal premises prems"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. \\<not> P x", "using prems"], ["proof (prove)\nusing this:\n  eventually Q F\n  \\<forall>\\<^sub>F x in F. \\<not> (P x \\<and> Q x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. \\<not> P x", "by eventually_elim auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma frequently_at_top:\n  \"(\\<exists>\\<^sub>F t in at_top. P t) \\<longleftrightarrow> (\\<forall>t0. \\<exists>t>t0. P t)\"\n  for P::\"'a::{linorder,no_top}\\<Rightarrow>bool\""], ["proof (prove)\ngoal (1 subgoal):\n 1. frequently P at_top = (\\<forall>t0. \\<exists>t>t0. P t)", "by (auto simp: frequently_def eventually_at_top_dense)"], ["", "lemma frequently_at_topE:\n  fixes P::\"nat \\<Rightarrow> 'a::{linorder,no_top}\\<Rightarrow>_\"\n  assumes freq[rule_format]: \"\\<forall>n. \\<exists>\\<^sub>F a in at_top. P n a\"\n  obtains s::\"nat\\<Rightarrow>'a\"\n  where \"\\<And>i. P i (s i)\" \"strict_mono s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>\\<And>i. P i (s i); strict_mono s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>\\<And>i. P i (s i); strict_mono s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<exists>f. \\<forall>n. P n (f n) \\<and> f n < f (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f. \\<forall>n. P n (f n) \\<and> f n < f (Suc n)", "proof (rule dependent_nat_choice)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>x. P 0 x\n 2. \\<And>x n. P n x \\<Longrightarrow> \\<exists>y. P (Suc n) y \\<and> x < y", "from frequently_ex[OF freq[of 0]]"], ["proof (chain)\npicking this:\n  \\<exists>x. P 0 x", "show \"\\<exists>x. P 0 x\""], ["proof (prove)\nusing this:\n  \\<exists>x. P 0 x\n\ngoal (1 subgoal):\n 1. \\<exists>x. P 0 x", "."], ["proof (state)\nthis:\n  \\<exists>x. P 0 x\n\ngoal (1 subgoal):\n 1. \\<And>x n. P n x \\<Longrightarrow> \\<exists>y. P (Suc n) y \\<and> x < y", "fix x n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x n. P n x \\<Longrightarrow> \\<exists>y. P (Suc n) y \\<and> x < y", "assume \"P n x\""], ["proof (state)\nthis:\n  P n x\n\ngoal (1 subgoal):\n 1. \\<And>x n. P n x \\<Longrightarrow> \\<exists>y. P (Suc n) y \\<and> x < y", "from freq[unfolded frequently_at_top, rule_format, of x \"Suc n\"]"], ["proof (chain)\npicking this:\n  \\<exists>t>x. P (Suc n) t", "obtain y where \"P (Suc n) y\" \"y > x\""], ["proof (prove)\nusing this:\n  \\<exists>t>x. P (Suc n) t\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>P (Suc n) y; x < y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P (Suc n) y\n  x < y\n\ngoal (1 subgoal):\n 1. \\<And>x n. P n x \\<Longrightarrow> \\<exists>y. P (Suc n) y \\<and> x < y", "then"], ["proof (chain)\npicking this:\n  P (Suc n) y\n  x < y", "show \"\\<exists>y. P (Suc n) y \\<and> x < y\""], ["proof (prove)\nusing this:\n  P (Suc n) y\n  x < y\n\ngoal (1 subgoal):\n 1. \\<exists>y. P (Suc n) y \\<and> x < y", "by auto"], ["proof (state)\nthis:\n  \\<exists>y. P (Suc n) y \\<and> x < y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>f. \\<forall>n. P n (f n) \\<and> f n < f (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>\\<And>i. P i (s i); strict_mono s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>f. \\<forall>n. P n (f n) \\<and> f n < f (Suc n)", "obtain s where \"\\<And>i. P i (s i)\" \"strict_mono s\""], ["proof (prove)\nusing this:\n  \\<exists>f. \\<forall>n. P n (f n) \\<and> f n < f (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>\\<And>i. P i (s i); strict_mono s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding strict_mono_Suc_iff"], ["proof (prove)\nusing this:\n  \\<exists>f. \\<forall>n. P n (f n) \\<and> f n < f (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>\\<And>i. P i (s i); \\<forall>n. s n < s (Suc n)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P ?i (s ?i)\n  strict_mono s\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>\\<And>i. P i (s i); strict_mono s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  P ?i (s ?i)\n  strict_mono s", "show ?thesis"], ["proof (prove)\nusing this:\n  P ?i (s ?i)\n  strict_mono s\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma frequently_at_topE':\n  fixes P::\"nat \\<Rightarrow> 'a::{linorder,no_top}\\<Rightarrow>_\"\n  assumes freq[rule_format]: \"\\<forall>n. \\<exists>\\<^sub>F a in at_top. P n a\"\n    and g: \"filterlim g at_top sequentially\"\n  obtains s::\"nat\\<Rightarrow>'a\"\n  where \"\\<And>i. P i (s i)\" \"strict_mono s\" \"\\<And>n. g n \\<le> s n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>\\<And>i. P i (s i); strict_mono s;\n         \\<And>n. g n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>\\<And>i. P i (s i); strict_mono s;\n         \\<And>n. g n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<forall>n. \\<exists>\\<^sub>F a in at_top. P n a \\<and> g n \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. \\<exists>\\<^sub>F a in at_top. P n a \\<and> g n \\<le> a", "using freq"], ["proof (prove)\nusing this:\n  frequently (P ?n) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>n. \\<exists>\\<^sub>F a in at_top. P n a \\<and> g n \\<le> a", "by (auto intro!: eventually_frequently_conj)"], ["proof (state)\nthis:\n  \\<forall>n. \\<exists>\\<^sub>F a in at_top. P n a \\<and> g n \\<le> a\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>\\<And>i. P i (s i); strict_mono s;\n         \\<And>n. g n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from frequently_at_topE[OF this]"], ["proof (chain)\npicking this:\n  (\\<And>s.\n      \\<lbrakk>\\<And>i. P i (s i) \\<and> g i \\<le> s i;\n       strict_mono s\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain s where \"\\<And>i. P i (s i)\" \"strict_mono s\" \"\\<And>n. g n \\<le> s n\""], ["proof (prove)\nusing this:\n  (\\<And>s.\n      \\<lbrakk>\\<And>i. P i (s i) \\<and> g i \\<le> s i;\n       strict_mono s\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>\\<And>i. P i (s i); strict_mono s;\n         \\<And>n. g n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  P ?i (s ?i)\n  strict_mono s\n  g ?n \\<le> s ?n\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>\\<And>i. P i (s i); strict_mono s;\n         \\<And>n. g n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  P ?i (s ?i)\n  strict_mono s\n  g ?n \\<le> s ?n", "show ?thesis"], ["proof (prove)\nusing this:\n  P ?i (s ?i)\n  strict_mono s\n  g ?n \\<le> s ?n\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma frequently_at_top_at_topE:\n  fixes P::\"nat \\<Rightarrow> 'a::{linorder,no_top}\\<Rightarrow>_\" and g::\"nat\\<Rightarrow>'a\"\n  assumes \"\\<forall>n. \\<exists>\\<^sub>F a in at_top. P n a\" \"filterlim g at_top sequentially\"\n  obtains s::\"nat\\<Rightarrow>'a\"\n  where \"\\<And>i. P i (s i)\" \"filterlim s at_top sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>\\<And>i. P i (s i);\n         filterlim s at_top sequentially\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>\\<And>i. P i (s i);\n         filterlim s at_top sequentially\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from frequently_at_topE'[OF assms]"], ["proof (chain)\npicking this:\n  (\\<And>s.\n      \\<lbrakk>\\<And>i. P i (s i); strict_mono s;\n       \\<And>n. g n \\<le> s n\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain s where s: \"(\\<And>i. P i (s i))\" \"strict_mono s\" \"(\\<And>n. g n \\<le> s n)\""], ["proof (prove)\nusing this:\n  (\\<And>s.\n      \\<lbrakk>\\<And>i. P i (s i); strict_mono s;\n       \\<And>n. g n \\<le> s n\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>\\<And>i. P i (s i); strict_mono s;\n         \\<And>n. g n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P ?i (s ?i)\n  strict_mono s\n  g ?n \\<le> s ?n\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>\\<And>i. P i (s i);\n         filterlim s at_top sequentially\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have s_at_top: \"filterlim s at_top sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim s at_top sequentially", "by (rule filterlim_at_top_mono) (use assms s in auto)"], ["proof (state)\nthis:\n  filterlim s at_top sequentially\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>\\<And>i. P i (s i);\n         filterlim s at_top sequentially\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with s(1)"], ["proof (chain)\npicking this:\n  P ?i (s ?i)\n  filterlim s at_top sequentially", "show ?thesis"], ["proof (prove)\nusing this:\n  P ?i (s ?i)\n  filterlim s at_top sequentially\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "(* Extract a strict monotone and sequence converging to something other than l *)"], ["", "lemma not_tendsto_convergent_seq:\n  fixes f::\"real \\<Rightarrow> 'a::metric_space\"\n  assumes X: \"compact (X::'a set)\"\n  assumes im: \"\\<And>x. x \\<ge> 0 \\<Longrightarrow> f x \\<in> X\"\n  assumes nl: \"\\<not> ((f \\<longlongrightarrow> (l::'a)) at_top)\"\n  obtains s k where\n    \"k \\<in> X\" \"k \\<noteq> l\" \"(f \\<circ> s) \\<longlonglongrightarrow> k\" \"strict_mono s\" \"\\<forall>n. s n \\<ge> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k s.\n        \\<lbrakk>k \\<in> X; k \\<noteq> l;\n         (f \\<circ> s) \\<longlonglongrightarrow> k; strict_mono s;\n         \\<forall>n. real n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k s.\n        \\<lbrakk>k \\<in> X; k \\<noteq> l;\n         (f \\<circ> s) \\<longlonglongrightarrow> k; strict_mono s;\n         \\<forall>n. real n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from not_tendsto_frequentlyE[OF nl]"], ["proof (chain)\npicking this:\n  (\\<And>S.\n      \\<lbrakk>open S; l \\<in> S;\n       \\<exists>\\<^sub>F x in at_top. f x \\<notin> S\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain S where \"open S\" \"l \\<in> S\" \"\\<exists>\\<^sub>F x in at_top. f x \\<notin> S\""], ["proof (prove)\nusing this:\n  (\\<And>S.\n      \\<lbrakk>open S; l \\<in> S;\n       \\<exists>\\<^sub>F x in at_top. f x \\<notin> S\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>open S; l \\<in> S;\n         \\<exists>\\<^sub>F x in at_top. f x \\<notin> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  open S\n  l \\<in> S\n  \\<exists>\\<^sub>F x in at_top. f x \\<notin> S\n\ngoal (1 subgoal):\n 1. (\\<And>k s.\n        \\<lbrakk>k \\<in> X; k \\<noteq> l;\n         (f \\<circ> s) \\<longlonglongrightarrow> k; strict_mono s;\n         \\<forall>n. real n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<forall>n. \\<exists>\\<^sub>F x in at_top. f x \\<notin> S \\<and> real n \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       \\<exists>\\<^sub>F x in at_top. f x \\<notin> S \\<and> real n \\<le> x", "apply (rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<exists>\\<^sub>F x in at_top. f x \\<notin> S \\<and> real n \\<le> x", "apply (rule eventually_frequently_conj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n. \\<exists>\\<^sub>F x in at_top. f x \\<notin> S\n 2. \\<And>n. eventually ((\\<le>) (real n)) at_top", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. eventually ((\\<le>) (real n)) at_top", "by (rule eventually_ge_at_top)"], ["proof (state)\nthis:\n  \\<forall>n.\n     \\<exists>\\<^sub>F x in at_top. f x \\<notin> S \\<and> real n \\<le> x\n\ngoal (1 subgoal):\n 1. (\\<And>k s.\n        \\<lbrakk>k \\<in> X; k \\<noteq> l;\n         (f \\<circ> s) \\<longlonglongrightarrow> k; strict_mono s;\n         \\<forall>n. real n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from frequently_at_topE[OF this]"], ["proof (chain)\npicking this:\n  (\\<And>s.\n      \\<lbrakk>\\<And>i. f (s i) \\<notin> S \\<and> real i \\<le> s i;\n       strict_mono s\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain s where \"\\<And>i. f (s i) \\<notin> S\" and s: \"strict_mono s\" and s_ge: \"(\\<And>i. real i \\<le> s i)\""], ["proof (prove)\nusing this:\n  (\\<And>s.\n      \\<lbrakk>\\<And>i. f (s i) \\<notin> S \\<and> real i \\<le> s i;\n       strict_mono s\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>\\<And>i. f (s i) \\<notin> S; strict_mono s;\n         \\<And>i. real i \\<le> s i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  f (s ?i) \\<notin> S\n  strict_mono s\n  real ?i \\<le> s ?i\n\ngoal (1 subgoal):\n 1. (\\<And>k s.\n        \\<lbrakk>k \\<in> X; k \\<noteq> l;\n         (f \\<circ> s) \\<longlonglongrightarrow> k; strict_mono s;\n         \\<forall>n. real n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  f (s ?i) \\<notin> S\n  strict_mono s\n  real ?i \\<le> s ?i", "have \"0 \\<le> s i\" for i"], ["proof (prove)\nusing this:\n  f (s ?i) \\<notin> S\n  strict_mono s\n  real ?i \\<le> s ?i\n\ngoal (1 subgoal):\n 1. 0 \\<le> s i", "using dual_order.trans of_nat_0_le_iff"], ["proof (prove)\nusing this:\n  f (s ?i) \\<notin> S\n  strict_mono s\n  real ?i \\<le> s ?i\n  \\<lbrakk>?b \\<le> ?a; ?c \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?c \\<le> ?a\n  (0::?'a) \\<le> of_nat ?n\n\ngoal (1 subgoal):\n 1. 0 \\<le> s i", "by blast"], ["proof (state)\nthis:\n  0 \\<le> s ?i\n\ngoal (1 subgoal):\n 1. (\\<And>k s.\n        \\<lbrakk>k \\<in> X; k \\<noteq> l;\n         (f \\<circ> s) \\<longlonglongrightarrow> k; strict_mono s;\n         \\<forall>n. real n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  0 \\<le> s ?i", "have \"\\<forall>n. (f \\<circ> s) n \\<in> X\""], ["proof (prove)\nusing this:\n  0 \\<le> s ?i\n\ngoal (1 subgoal):\n 1. \\<forall>n. (f \\<circ> s) n \\<in> X", "using im"], ["proof (prove)\nusing this:\n  0 \\<le> s ?i\n  0 \\<le> ?x \\<Longrightarrow> f ?x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<forall>n. (f \\<circ> s) n \\<in> X", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. (f \\<circ> s) n \\<in> X\n\ngoal (1 subgoal):\n 1. (\\<And>k s.\n        \\<lbrakk>k \\<in> X; k \\<noteq> l;\n         (f \\<circ> s) \\<longlonglongrightarrow> k; strict_mono s;\n         \\<forall>n. real n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from X[unfolded compact_def, THEN spec, THEN mp, OF this]"], ["proof (chain)\npicking this:\n  \\<exists>l\\<in>X.\n     \\<exists>r.\n        strict_mono r \\<and>\n        (f \\<circ> s \\<circ> r) \\<longlonglongrightarrow> l", "obtain k r where k: \"k \\<in> X\" and r: \"strict_mono r\" and kLim: \"(f \\<circ> s \\<circ> r) \\<longlonglongrightarrow> k\""], ["proof (prove)\nusing this:\n  \\<exists>l\\<in>X.\n     \\<exists>r.\n        strict_mono r \\<and>\n        (f \\<circ> s \\<circ> r) \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. (\\<And>k r.\n        \\<lbrakk>k \\<in> X; strict_mono r;\n         (f \\<circ> s \\<circ> r) \\<longlonglongrightarrow> k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  k \\<in> X\n  strict_mono r\n  (f \\<circ> s \\<circ> r) \\<longlonglongrightarrow> k\n\ngoal (1 subgoal):\n 1. (\\<And>k s.\n        \\<lbrakk>k \\<in> X; k \\<noteq> l;\n         (f \\<circ> s) \\<longlonglongrightarrow> k; strict_mono s;\n         \\<forall>n. real n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"k \\<in> X - S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<in> X - S", "by (rule Lim_in_closed_set[of \"X - S\", OF _ _ _ kLim])\n      (auto simp: im \\<open>0 \\<le> s _\\<close>  \\<open>\\<And>i. f (s i) \\<notin> S\\<close> intro!: \\<open>open S\\<close> X intro: compact_imp_closed)"], ["proof (state)\nthis:\n  k \\<in> X - S\n\ngoal (1 subgoal):\n 1. (\\<And>k s.\n        \\<lbrakk>k \\<in> X; k \\<noteq> l;\n         (f \\<circ> s) \\<longlonglongrightarrow> k; strict_mono s;\n         \\<forall>n. real n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note k"], ["proof (state)\nthis:\n  k \\<in> X\n\ngoal (1 subgoal):\n 1. (\\<And>k s.\n        \\<lbrakk>k \\<in> X; k \\<noteq> l;\n         (f \\<circ> s) \\<longlonglongrightarrow> k; strict_mono s;\n         \\<forall>n. real n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  k \\<in> X\n\ngoal (1 subgoal):\n 1. (\\<And>k s.\n        \\<lbrakk>k \\<in> X; k \\<noteq> l;\n         (f \\<circ> s) \\<longlonglongrightarrow> k; strict_mono s;\n         \\<forall>n. real n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"k \\<noteq> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<noteq> l", "using \\<open>k \\<in> X - S\\<close> \\<open>l \\<in> S\\<close>"], ["proof (prove)\nusing this:\n  k \\<in> X - S\n  l \\<in> S\n\ngoal (1 subgoal):\n 1. k \\<noteq> l", "by auto"], ["proof (state)\nthis:\n  k \\<noteq> l\n\ngoal (1 subgoal):\n 1. (\\<And>k s.\n        \\<lbrakk>k \\<in> X; k \\<noteq> l;\n         (f \\<circ> s) \\<longlonglongrightarrow> k; strict_mono s;\n         \\<forall>n. real n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  k \\<noteq> l\n\ngoal (1 subgoal):\n 1. (\\<And>k s.\n        \\<lbrakk>k \\<in> X; k \\<noteq> l;\n         (f \\<circ> s) \\<longlonglongrightarrow> k; strict_mono s;\n         \\<forall>n. real n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"(f \\<circ> (s \\<circ> r)) \\<longlonglongrightarrow> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<circ> (s \\<circ> r)) \\<longlonglongrightarrow> k", "using kLim"], ["proof (prove)\nusing this:\n  (f \\<circ> s \\<circ> r) \\<longlonglongrightarrow> k\n\ngoal (1 subgoal):\n 1. (f \\<circ> (s \\<circ> r)) \\<longlonglongrightarrow> k", "by (simp add: o_assoc)"], ["proof (state)\nthis:\n  (f \\<circ> (s \\<circ> r)) \\<longlonglongrightarrow> k\n\ngoal (1 subgoal):\n 1. (\\<And>k s.\n        \\<lbrakk>k \\<in> X; k \\<noteq> l;\n         (f \\<circ> s) \\<longlonglongrightarrow> k; strict_mono s;\n         \\<forall>n. real n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  (f \\<circ> (s \\<circ> r)) \\<longlonglongrightarrow> k\n\ngoal (1 subgoal):\n 1. (\\<And>k s.\n        \\<lbrakk>k \\<in> X; k \\<noteq> l;\n         (f \\<circ> s) \\<longlonglongrightarrow> k; strict_mono s;\n         \\<forall>n. real n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"strict_mono (s \\<circ> r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono (s \\<circ> r)", "using s r"], ["proof (prove)\nusing this:\n  strict_mono s\n  strict_mono r\n\ngoal (1 subgoal):\n 1. strict_mono (s \\<circ> r)", "by (rule strict_mono_o)"], ["proof (state)\nthis:\n  strict_mono (s \\<circ> r)\n\ngoal (1 subgoal):\n 1. (\\<And>k s.\n        \\<lbrakk>k \\<in> X; k \\<noteq> l;\n         (f \\<circ> s) \\<longlonglongrightarrow> k; strict_mono s;\n         \\<forall>n. real n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  strict_mono (s \\<circ> r)\n\ngoal (1 subgoal):\n 1. (\\<And>k s.\n        \\<lbrakk>k \\<in> X; k \\<noteq> l;\n         (f \\<circ> s) \\<longlonglongrightarrow> k; strict_mono s;\n         \\<forall>n. real n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<forall>n. (s \\<circ> r) n \\<ge> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. real n \\<le> (s \\<circ> r) n", "using s_ge r"], ["proof (prove)\nusing this:\n  real ?i \\<le> s ?i\n  strict_mono r\n\ngoal (1 subgoal):\n 1. \\<forall>n. real n \\<le> (s \\<circ> r) n", "by (metis comp_apply dual_order.trans of_nat_le_iff seq_suble)"], ["proof (state)\nthis:\n  \\<forall>n. real n \\<le> (s \\<circ> r) n\n\ngoal (1 subgoal):\n 1. (\\<And>k s.\n        \\<lbrakk>k \\<in> X; k \\<noteq> l;\n         (f \\<circ> s) \\<longlonglongrightarrow> k; strict_mono s;\n         \\<forall>n. real n \\<le> s n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  k \\<in> X\n  k \\<noteq> l\n  (f \\<circ> (s \\<circ> r)) \\<longlonglongrightarrow> k\n  strict_mono (s \\<circ> r)\n  \\<forall>n. real n \\<le> (s \\<circ> r) n", "show ?thesis"], ["proof (prove)\nusing this:\n  k \\<in> X\n  k \\<noteq> l\n  (f \\<circ> (s \\<circ> r)) \\<longlonglongrightarrow> k\n  strict_mono (s \\<circ> r)\n  \\<forall>n. real n \\<le> (s \\<circ> r) n\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma harmonic_bound:\n  shows \"1 / 2 ^(Suc n) < 1 / real (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / 2 ^ Suc n < 1 / real (Suc n)", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. 1 / 2 ^ Suc 0 < 1 / real (Suc 0)\n 2. \\<And>n.\n       1 / 2 ^ Suc n < 1 / real (Suc n) \\<Longrightarrow>\n       1 / 2 ^ Suc (Suc n) < 1 / real (Suc (Suc n))", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. 1 / 2 ^ Suc 0 < 1 / real (Suc 0)\n 2. \\<And>n.\n       1 / 2 ^ Suc n < 1 / real (Suc n) \\<Longrightarrow>\n       1 / 2 ^ Suc (Suc n) < 1 / real (Suc (Suc n))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / 2 ^ Suc 0 < 1 / real (Suc 0)", "by auto"], ["proof (state)\nthis:\n  1 / 2 ^ Suc 0 < 1 / real (Suc 0)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       1 / 2 ^ Suc n < 1 / real (Suc n) \\<Longrightarrow>\n       1 / 2 ^ Suc (Suc n) < 1 / real (Suc (Suc n))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       1 / 2 ^ Suc n < 1 / real (Suc n) \\<Longrightarrow>\n       1 / 2 ^ Suc (Suc n) < 1 / real (Suc (Suc n))", "case (Suc n)"], ["proof (state)\nthis:\n  1 / 2 ^ Suc n < 1 / real (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       1 / 2 ^ Suc n < 1 / real (Suc n) \\<Longrightarrow>\n       1 / 2 ^ Suc (Suc n) < 1 / real (Suc (Suc n))", "then"], ["proof (chain)\npicking this:\n  1 / 2 ^ Suc n < 1 / real (Suc n)", "show ?case"], ["proof (prove)\nusing this:\n  1 / 2 ^ Suc n < 1 / real (Suc n)\n\ngoal (1 subgoal):\n 1. 1 / 2 ^ Suc (Suc n) < 1 / real (Suc (Suc n))", "by (smt frac_less2 of_nat_0_less_iff of_nat_less_two_power zero_less_Suc)"], ["proof (state)\nthis:\n  1 / 2 ^ Suc (Suc n) < 1 / real (Suc (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma INF_bounded_imp_convergent_seq:\n  fixes f::\"real \\<Rightarrow> real\"\n  assumes cont: \"continuous_on {a..} f\"\n  assumes bound: \"\\<And>t. t \\<ge> a \\<Longrightarrow> f t > l\"\n  assumes inf: \"(INF t\\<in>{a..}. f t) = l\"\n  obtains s where\n    \"(f \\<circ> s) \\<longlonglongrightarrow> l\"\n    \"\\<And>i. s i \\<in> {a..}\"\n    \"filterlim s at_top sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n         \\<And>i. s i \\<in> {a..}; filterlim s at_top sequentially\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n         \\<And>i. s i \\<in> {a..}; filterlim s at_top sequentially\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have bound': \"t \\<in> {a..} \\<Longrightarrow> f t \\<noteq> l\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> {a..} \\<Longrightarrow> f t \\<noteq> l", "using bound[of t]"], ["proof (prove)\nusing this:\n  a \\<le> t \\<Longrightarrow> l < f t\n\ngoal (1 subgoal):\n 1. t \\<in> {a..} \\<Longrightarrow> f t \\<noteq> l", "by auto"], ["proof (state)\nthis:\n  ?t \\<in> {a..} \\<Longrightarrow> f ?t \\<noteq> l\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n         \\<And>i. s i \\<in> {a..}; filterlim s at_top sequentially\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have limpt: \"l islimpt f ` {a..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l islimpt f ` {a..}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. l islimpt f ` {a..}", "have \"Inf (f ` {a..}) islimpt f ` {a..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf (f ` {a..}) islimpt f ` {a..}", "by (rule Inf_islimpt) (auto simp: inf intro!: bdd_belowI2[where m=l] dest: bound)"], ["proof (state)\nthis:\n  Inf (f ` {a..}) islimpt f ` {a..}\n\ngoal (1 subgoal):\n 1. l islimpt f ` {a..}", "then"], ["proof (chain)\npicking this:\n  Inf (f ` {a..}) islimpt f ` {a..}", "show ?thesis"], ["proof (prove)\nusing this:\n  Inf (f ` {a..}) islimpt f ` {a..}\n\ngoal (1 subgoal):\n 1. l islimpt f ` {a..}", "by (simp add: inf)"], ["proof (state)\nthis:\n  l islimpt f ` {a..}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  l islimpt f ` {a..}\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n         \\<And>i. s i \\<in> {a..}; filterlim s at_top sequentially\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from limpt_closed_imp_exploding_subsequence[OF cont closed_atLeast bound' limpt]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>t. t \\<in> {a..} \\<Longrightarrow> t \\<in> {a..};\n   \\<And>s.\n      \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n       \\<And>i. s i \\<in> {a..};\n       \\<And>C.\n          \\<lbrakk>compact C; C \\<subseteq> {a..}\\<rbrakk>\n          \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially.\n                               s i \\<notin> C\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "obtain s where s: \"(f \\<circ> s) \\<longlonglongrightarrow> l\"\n    \"\\<And>i. s i \\<in> {a..}\"\n    \"compact C \\<Longrightarrow> C \\<subseteq> {a..} \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially. s i \\<notin> C\" for C"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>t. t \\<in> {a..} \\<Longrightarrow> t \\<in> {a..};\n   \\<And>s.\n      \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n       \\<And>i. s i \\<in> {a..};\n       \\<And>C.\n          \\<lbrakk>compact C; C \\<subseteq> {a..}\\<rbrakk>\n          \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially.\n                               s i \\<notin> C\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n         \\<And>i. s i \\<in> {a..};\n         \\<And>C.\n            \\<lbrakk>compact C; C \\<subseteq> {a..}\\<rbrakk>\n            \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially.\n                                 s i \\<notin> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  (f \\<circ> s) \\<longlonglongrightarrow> l\n  s ?i \\<in> {a..}\n  \\<lbrakk>compact ?C; ?C \\<subseteq> {a..}\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially. s i \\<notin> ?C\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n         \\<And>i. s i \\<in> {a..}; filterlim s at_top sequentially\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<forall>\\<^sub>F i in sequentially. s i \\<ge> n\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F i in sequentially. n \\<le> s i", "using s(3)[of \"{a..n}\"] s(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>compact {a..n}; {a..n} \\<subseteq> {a..}\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F i in sequentially. s i \\<notin> {a..n}\n  s ?i \\<in> {a..}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F i in sequentially. n \\<le> s i", "by (auto elim!: eventually_mono)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F i in sequentially. ?n \\<le> s i\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n         \\<And>i. s i \\<in> {a..}; filterlim s at_top sequentially\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F i in sequentially. ?n \\<le> s i", "have \"filterlim s at_top sequentially\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F i in sequentially. ?n \\<le> s i\n\ngoal (1 subgoal):\n 1. filterlim s at_top sequentially", "unfolding filterlim_at_top"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F i in sequentially. ?n \\<le> s i\n\ngoal (1 subgoal):\n 1. \\<forall>Z. \\<forall>\\<^sub>F x in sequentially. Z \\<le> s x", "by auto"], ["proof (state)\nthis:\n  filterlim s at_top sequentially\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(f \\<circ> s) \\<longlonglongrightarrow> l;\n         \\<And>i. s i \\<in> {a..}; filterlim s at_top sequentially\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from s(1) s(2) this"], ["proof (chain)\npicking this:\n  (f \\<circ> s) \\<longlonglongrightarrow> l\n  s ?i \\<in> {a..}\n  filterlim s at_top sequentially", "show ?thesis"], ["proof (prove)\nusing this:\n  (f \\<circ> s) \\<longlonglongrightarrow> l\n  s ?i \\<in> {a..}\n  filterlim s at_top sequentially\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "(* Generalizes to other combinations of strict_mono and filterlim *)"], ["", "lemma filterlim_at_top_strict_mono:\n  fixes s :: \"_ \\<Rightarrow> 'a::linorder\"\n  fixes r :: \"nat \\<Rightarrow> _\"\n  assumes \"strict_mono s\"\n  assumes \"strict_mono r\"\n  assumes \"filterlim s at_top F\"\n  shows \"filterlim (s \\<circ> r) at_top F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim (s \\<circ> r) at_top F", "apply (rule filterlim_at_top_mono[OF assms(3)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. s x \\<le> (s \\<circ> r) x", "by (simp add: assms(1) assms(2) seq_suble strict_mono_leD)"], ["", "lemma LIMSEQ_lb:\n  assumes fl: \"s \\<longlonglongrightarrow> (l::real)\"\n  assumes u: \"l < u\"\n  shows \"\\<exists>n0. \\<forall>n\\<ge>n0. s n < u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n0. \\<forall>n\\<ge>n0. s n < u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n0. \\<forall>n\\<ge>n0. s n < u", "from fl"], ["proof (chain)\npicking this:\n  s \\<longlonglongrightarrow> l", "have \"\\<exists>no>0. \\<forall>n\\<ge>no. dist (s n) l < u-l\""], ["proof (prove)\nusing this:\n  s \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. \\<exists>no>0. \\<forall>n\\<ge>no. dist (s n) l < u - l", "unfolding LIMSEQ_iff_nz"], ["proof (prove)\nusing this:\n  \\<forall>r>0. \\<exists>no>0. \\<forall>n\\<ge>no. dist (s n) l < r\n\ngoal (1 subgoal):\n 1. \\<exists>no>0. \\<forall>n\\<ge>no. dist (s n) l < u - l", "using u"], ["proof (prove)\nusing this:\n  \\<forall>r>0. \\<exists>no>0. \\<forall>n\\<ge>no. dist (s n) l < r\n  l < u\n\ngoal (1 subgoal):\n 1. \\<exists>no>0. \\<forall>n\\<ge>no. dist (s n) l < u - l", "by simp"], ["proof (state)\nthis:\n  \\<exists>no>0. \\<forall>n\\<ge>no. dist (s n) l < u - l\n\ngoal (1 subgoal):\n 1. \\<exists>n0. \\<forall>n\\<ge>n0. s n < u", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>no>0. \\<forall>n\\<ge>no. dist (s n) l < u - l\n\ngoal (1 subgoal):\n 1. \\<exists>n0. \\<forall>n\\<ge>n0. s n < u", "using dist_real_def"], ["proof (prove)\nusing this:\n  \\<exists>no>0. \\<forall>n\\<ge>no. dist (s n) l < u - l\n  dist ?x ?y = \\<bar>?x - ?y\\<bar>\n\ngoal (1 subgoal):\n 1. \\<exists>n0. \\<forall>n\\<ge>n0. s n < u", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>n0. \\<forall>n\\<ge>n0. s n < u\n\ngoal:\nNo subgoals!", "qed"], ["", "(* Used to sharpen a tendsto with additional information*)"], ["", "lemma filterlim_at_top_choose_lower:\n  assumes \"filterlim s at_top sequentially\"\n  assumes \"(f \\<circ> s) \\<longlonglongrightarrow> l\"\n  obtains t where\n    \"filterlim t at_top sequentially\"\n    \"(f \\<circ> t) \\<longlonglongrightarrow> l\"\n    \"\\<forall>n. t n \\<ge> (b::real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>filterlim t at_top sequentially;\n         (f \\<circ> t) \\<longlonglongrightarrow> l;\n         \\<forall>n. b \\<le> t n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>filterlim t at_top sequentially;\n         (f \\<circ> t) \\<longlonglongrightarrow> l;\n         \\<forall>n. b \\<le> t n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain k where k: \"\\<forall>n \\<ge> k. s n \\<ge> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<forall>n\\<ge>k. b \\<le> s n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms(1)"], ["proof (prove)\nusing this:\n  filterlim s at_top sequentially\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<forall>n\\<ge>k. b \\<le> s n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding filterlim_at_top eventually_sequentially"], ["proof (prove)\nusing this:\n  \\<forall>Z. \\<exists>N. \\<forall>n\\<ge>N. Z \\<le> s n\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<forall>n\\<ge>k. b \\<le> s n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>n\\<ge>k. b \\<le> s n\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>filterlim t at_top sequentially;\n         (f \\<circ> t) \\<longlonglongrightarrow> l;\n         \\<forall>n. b \\<le> t n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define t where \"t = (\\<lambda>n. s (n+k))\""], ["proof (state)\nthis:\n  t = (\\<lambda>n. s (n + k))\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>filterlim t at_top sequentially;\n         (f \\<circ> t) \\<longlonglongrightarrow> l;\n         \\<forall>n. b \\<le> t n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  t = (\\<lambda>n. s (n + k))", "have \"\\<forall>n. t n \\<ge> b\""], ["proof (prove)\nusing this:\n  t = (\\<lambda>n. s (n + k))\n\ngoal (1 subgoal):\n 1. \\<forall>n. b \\<le> t n", "using k"], ["proof (prove)\nusing this:\n  t = (\\<lambda>n. s (n + k))\n  \\<forall>n\\<ge>k. b \\<le> s n\n\ngoal (1 subgoal):\n 1. \\<forall>n. b \\<le> t n", "by simp"], ["proof (state)\nthis:\n  \\<forall>n. b \\<le> t n\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>filterlim t at_top sequentially;\n         (f \\<circ> t) \\<longlonglongrightarrow> l;\n         \\<forall>n. b \\<le> t n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"filterlim t at_top sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim t at_top sequentially", "using assms(1)"], ["proof (prove)\nusing this:\n  filterlim s at_top sequentially\n\ngoal (1 subgoal):\n 1. filterlim t at_top sequentially", "unfolding filterlim_at_top eventually_sequentially t_def"], ["proof (prove)\nusing this:\n  \\<forall>Z. \\<exists>N. \\<forall>n\\<ge>N. Z \\<le> s n\n\ngoal (1 subgoal):\n 1. \\<forall>Z. \\<exists>N. \\<forall>n\\<ge>N. Z \\<le> s (n + k)", "by (metis (full_types) add.commute trans_le_add2)"], ["proof (state)\nthis:\n  filterlim t at_top sequentially\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>filterlim t at_top sequentially;\n         (f \\<circ> t) \\<longlonglongrightarrow> l;\n         \\<forall>n. b \\<le> t n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from LIMSEQ_ignore_initial_segment[OF assms(2), of \"k\"]"], ["proof (chain)\npicking this:\n  (\\<lambda>n. (f \\<circ> s) (n + k)) \\<longlonglongrightarrow> l", "have \"(\\<lambda>n. (f \\<circ> s) (n + k)) \\<longlonglongrightarrow> l\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. (f \\<circ> s) (n + k)) \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (f \\<circ> s) (n + k)) \\<longlonglongrightarrow> l", "."], ["proof (state)\nthis:\n  (\\<lambda>n. (f \\<circ> s) (n + k)) \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>filterlim t at_top sequentially;\n         (f \\<circ> t) \\<longlonglongrightarrow> l;\n         \\<forall>n. b \\<le> t n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. (f \\<circ> s) (n + k)) \\<longlonglongrightarrow> l", "have \"(f \\<circ> t) \\<longlonglongrightarrow> l\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. (f \\<circ> s) (n + k)) \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. (f \\<circ> t) \\<longlonglongrightarrow> l", "unfolding t_def o_def"], ["proof (prove)\nusing this:\n  (\\<lambda>n. f (s (n + k))) \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (s (x + k))) \\<longlonglongrightarrow> l", "by simp"], ["proof (state)\nthis:\n  (f \\<circ> t) \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>filterlim t at_top sequentially;\n         (f \\<circ> t) \\<longlonglongrightarrow> l;\n         \\<forall>n. b \\<le> t n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using \\<open>(f \\<circ> t) \\<longlonglongrightarrow> l\\<close> \\<open>\\<forall>n. b \\<le> t n\\<close> \\<open>filterlim t at_top sequentially\\<close> that"], ["proof (prove)\nusing this:\n  (f \\<circ> t) \\<longlonglongrightarrow> l\n  \\<forall>n. b \\<le> t n\n  filterlim t at_top sequentially\n  \\<lbrakk>filterlim ?t at_top sequentially;\n   (f \\<circ> ?t) \\<longlonglongrightarrow> l;\n   \\<forall>n. b \\<le> ?t n\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma frequently_at_top_realE:\n  fixes P::\"nat \\<Rightarrow> real \\<Rightarrow> bool\"\n  assumes \"\\<forall>n. \\<exists>\\<^sub>F t in at_top. P n t\"\n  obtains s::\"nat\\<Rightarrow>real\"\n  where \"\\<And>i. P i (s i)\" \"filterlim s at_top at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>\\<And>i. P i (s i);\n         filterlim s at_top sequentially\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis assms frequently_at_top_at_topE[OF _ filterlim_real_sequentially])"], ["", "lemma approachable_sequenceE:\n  fixes f::\"real \\<Rightarrow> 'a::metric_space\"\n  assumes \"\\<And>t e. 0 \\<le> t \\<Longrightarrow> 0 < e \\<Longrightarrow> \\<exists>tt\\<ge>t. dist (f tt) p < e\"\n  obtains s where \"filterlim s at_top sequentially\" \"(f \\<circ> s) \\<longlonglongrightarrow> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>filterlim s at_top sequentially;\n         (f \\<circ> s) \\<longlonglongrightarrow> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>filterlim s at_top sequentially;\n         (f \\<circ> s) \\<longlonglongrightarrow> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<forall>n. \\<exists>\\<^sub>F i in at_top. dist (f i) p < 1/real (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       \\<exists>\\<^sub>F i in at_top. dist (f i) p < 1 / real (Suc n)", "unfolding frequently_at_top"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n t0. \\<exists>t>t0. dist (f t) p < 1 / real (Suc n)", "apply (auto )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n t0. \\<exists>t>t0. dist (f t) p < 1 / (1 + real n)", "subgoal for n m"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t>m. dist (f t) p < 1 / (1 + real n)", "using assms[of \"max 0 (m+1)\" \"1/(Suc n)\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> max 0 (m + 1); 0 < 1 / real (Suc n)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>tt\\<ge>max 0 (m + 1).\n                       dist (f tt) p < 1 / real (Suc n)\n\ngoal (1 subgoal):\n 1. \\<exists>t>m. dist (f t) p < 1 / (1 + real n)", "by force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>n. \\<exists>\\<^sub>F i in at_top. dist (f i) p < 1 / real (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>filterlim s at_top sequentially;\n         (f \\<circ> s) \\<longlonglongrightarrow> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from frequently_at_top_realE[OF this]"], ["proof (chain)\npicking this:\n  (\\<And>s.\n      \\<lbrakk>\\<And>i. dist (f (s i)) p < 1 / real (Suc i);\n       filterlim s at_top sequentially\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain s where s: \"\\<And>i. dist (f (s i)) p < 1 / real (Suc i)\" \"filterlim s at_top sequentially\""], ["proof (prove)\nusing this:\n  (\\<And>s.\n      \\<lbrakk>\\<And>i. dist (f (s i)) p < 1 / real (Suc i);\n       filterlim s at_top sequentially\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>\\<And>i. dist (f (s i)) p < 1 / real (Suc i);\n         filterlim s at_top sequentially\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  dist (f (s ?i)) p < 1 / real (Suc ?i)\n  filterlim s at_top sequentially\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>filterlim s at_top sequentially;\n         (f \\<circ> s) \\<longlonglongrightarrow> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note this(2)"], ["proof (state)\nthis:\n  filterlim s at_top sequentially\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>filterlim s at_top sequentially;\n         (f \\<circ> s) \\<longlonglongrightarrow> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  filterlim s at_top sequentially\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>filterlim s at_top sequentially;\n         (f \\<circ> s) \\<longlonglongrightarrow> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"(f o s) \\<longlonglongrightarrow> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<circ> s) \\<longlonglongrightarrow> p", "proof (rule tendstoI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially. dist ((f \\<circ> s) x) p < e", "fix e::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially. dist ((f \\<circ> s) x) p < e", "assume \"e > 0\""], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially. dist ((f \\<circ> s) x) p < e", "have \"\\<forall>\\<^sub>F i in sequentially. 1 / real (Suc i) < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F i in sequentially. 1 / real (Suc i) < e", "apply (rule order_tendstoD[OF _ \\<open>0 < e\\<close>])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. 1 / real (Suc x)) \\<longlonglongrightarrow> 0", "apply (rule real_tendsto_divide_at_top)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<lambda>x. 1) \\<longlonglongrightarrow> ?c3\n 2. LIM x sequentially. real (Suc x) :> at_top", "apply (rule tendsto_intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM x sequentially. real (Suc x) :> at_top", "by (rule filterlim_compose[OF filterlim_real_sequentially filterlim_Suc])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F i in sequentially. 1 / real (Suc i) < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in sequentially. dist ((f \\<circ> s) x) p < e", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F i in sequentially. 1 / real (Suc i) < e", "show \"\\<forall>\\<^sub>F x in sequentially. dist ((f \\<circ> s) x) p < e\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F i in sequentially. 1 / real (Suc i) < e\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially. dist ((f \\<circ> s) x) p < e", "by eventually_elim (use dual_order.strict_trans s \\<open>e > 0\\<close> in auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in sequentially. dist ((f \\<circ> s) x) p < e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (f \\<circ> s) \\<longlonglongrightarrow> p\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>filterlim s at_top sequentially;\n         (f \\<circ> s) \\<longlonglongrightarrow> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  filterlim s at_top sequentially\n  (f \\<circ> s) \\<longlonglongrightarrow> p", "show ?thesis"], ["proof (prove)\nusing this:\n  filterlim s at_top sequentially\n  (f \\<circ> s) \\<longlonglongrightarrow> p\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mono_inc_bdd_above_has_limit_at_topI:\n  fixes f::\"real \\<Rightarrow> real\"\n  assumes \"mono f\"\n  assumes \"\\<And>x. f x \\<le> u\"\n  shows \"\\<exists>l. (f \\<longlongrightarrow> l) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "define l where \"l = Sup (range (\\<lambda>n. f (real n)))\""], ["proof (state)\nthis:\n  l = (SUP n. f (real n))\n\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "have t:\"(\\<lambda>n. f (real n)) \\<longlonglongrightarrow> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (real n)) \\<longlonglongrightarrow> l", "unfolding l_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (real n)) \\<longlonglongrightarrow> (SUP n. f (real n))", "apply (rule LIMSEQ_incseq_SUP)"], ["proof (prove)\ngoal (2 subgoals):\n 1. bdd_above (range (\\<lambda>n. f (real n)))\n 2. incseq (\\<lambda>n. f (real n))", "apply (meson assms(2) bdd_aboveI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. incseq (\\<lambda>n. f (real n))", "by (meson assms(1) mono_def of_nat_mono)"], ["proof (state)\nthis:\n  (\\<lambda>n. f (real n)) \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "from tendsto_at_topI_sequentially_real[OF assms(1) t]"], ["proof (chain)\npicking this:\n  (f \\<longlongrightarrow> l) at_top", "have \"(f \\<longlongrightarrow> l) at_top\""], ["proof (prove)\nusing this:\n  (f \\<longlongrightarrow> l) at_top\n\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> l) at_top", "."], ["proof (state)\nthis:\n  (f \\<longlongrightarrow> l) at_top\n\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "thus ?thesis"], ["proof (prove)\nusing this:\n  (f \\<longlongrightarrow> l) at_top\n\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "by blast"], ["proof (state)\nthis:\n  \\<exists>l. (f \\<longlongrightarrow> l) at_top\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gen_mono_inc_bdd_above_has_limit_at_topI:\n  fixes f::\"real \\<Rightarrow> real\"\n  assumes \"\\<And>x y. x \\<ge> b \\<Longrightarrow> x \\<le> y \\<Longrightarrow> f x \\<le> f y\"\n  assumes \"\\<And>x. x \\<ge> b \\<Longrightarrow> f x \\<le> u\"\n  shows \"\\<exists>l. (f \\<longlongrightarrow> l) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "define ff where \"ff = (\\<lambda>x. if x \\<ge> b then f x else f b)\""], ["proof (state)\nthis:\n  ff = (\\<lambda>x. if b \\<le> x then f x else f b)\n\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "have m1:\"mono ff\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono ff", "unfolding ff_def mono_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       x \\<le> y \\<longrightarrow>\n       (if b \\<le> x then f x else f b)\n       \\<le> (if b \\<le> y then f y else f b)", "using assms(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>b \\<le> ?x; ?x \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> f ?x \\<le> f ?y\n\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       x \\<le> y \\<longrightarrow>\n       (if b \\<le> x then f x else f b)\n       \\<le> (if b \\<le> y then f y else f b)", "by simp"], ["proof (state)\nthis:\n  mono ff\n\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "have m2:\"\\<And>x. ff x \\<le> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. ff x \\<le> u", "unfolding ff_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. (if b \\<le> x then f x else f b) \\<le> u", "using assms(2)"], ["proof (prove)\nusing this:\n  b \\<le> ?x \\<Longrightarrow> f ?x \\<le> u\n\ngoal (1 subgoal):\n 1. \\<And>x. (if b \\<le> x then f x else f b) \\<le> u", "by simp"], ["proof (state)\nthis:\n  ff ?x \\<le> u\n\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "from mono_inc_bdd_above_has_limit_at_topI[OF m1 m2]"], ["proof (chain)\npicking this:\n  \\<exists>l. (ff \\<longlongrightarrow> l) at_top", "obtain l where \"(ff \\<longlongrightarrow> l) at_top\""], ["proof (prove)\nusing this:\n  \\<exists>l. (ff \\<longlongrightarrow> l) at_top\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        (ff \\<longlongrightarrow> l) at_top \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (ff \\<longlongrightarrow> l) at_top\n\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "thus ?thesis"], ["proof (prove)\nusing this:\n  (ff \\<longlongrightarrow> l) at_top\n\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "by (meson \\<open>(ff \\<longlongrightarrow> l) at_top\\<close> ff_def tendsto_at_top_eq_left)"], ["proof (state)\nthis:\n  \\<exists>l. (f \\<longlongrightarrow> l) at_top\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gen_mono_dec_bdd_below_has_limit_at_topI:\n  fixes f::\"real \\<Rightarrow> real\"\n  assumes \"\\<And>x y. x \\<ge> b \\<Longrightarrow> x \\<le> y \\<Longrightarrow> f x \\<ge> f y\"\n  assumes \"\\<And>x. x \\<ge> b \\<Longrightarrow> f x \\<ge> u\"\n  shows \"\\<exists>l. (f \\<longlongrightarrow> l) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "define ff where \"ff = (\\<lambda>x. if x \\<ge> b then f x else f b)\""], ["proof (state)\nthis:\n  ff = (\\<lambda>x. if b \\<le> x then f x else f b)\n\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "have m1:\"mono (-ff)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono (- ff)", "unfolding ff_def mono_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       x \\<le> y \\<longrightarrow>\n       (- (\\<lambda>x. if b \\<le> x then f x else f b)) x\n       \\<le> (- (\\<lambda>x. if b \\<le> x then f x else f b)) y", "using assms(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>b \\<le> ?x; ?x \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> f ?y \\<le> f ?x\n\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       x \\<le> y \\<longrightarrow>\n       (- (\\<lambda>x. if b \\<le> x then f x else f b)) x\n       \\<le> (- (\\<lambda>x. if b \\<le> x then f x else f b)) y", "by simp"], ["proof (state)\nthis:\n  mono (- ff)\n\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "have m2:\"\\<And>x. (-ff) x \\<le> -u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. (- ff) x \\<le> - u", "unfolding ff_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. (- (\\<lambda>x. if b \\<le> x then f x else f b)) x \\<le> - u", "using assms(2)"], ["proof (prove)\nusing this:\n  b \\<le> ?x \\<Longrightarrow> u \\<le> f ?x\n\ngoal (1 subgoal):\n 1. \\<And>x. (- (\\<lambda>x. if b \\<le> x then f x else f b)) x \\<le> - u", "by simp"], ["proof (state)\nthis:\n  (- ff) ?x \\<le> - u\n\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "from mono_inc_bdd_above_has_limit_at_topI[OF m1 m2]"], ["proof (chain)\npicking this:\n  \\<exists>l. (- ff \\<longlongrightarrow> l) at_top", "obtain l where \"(-ff \\<longlongrightarrow> l) at_top\""], ["proof (prove)\nusing this:\n  \\<exists>l. (- ff \\<longlongrightarrow> l) at_top\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        (- ff \\<longlongrightarrow> l) at_top \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (- ff \\<longlongrightarrow> l) at_top\n\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "then"], ["proof (chain)\npicking this:\n  (- ff \\<longlongrightarrow> l) at_top", "have \"(ff \\<longlongrightarrow> -l) at_top\""], ["proof (prove)\nusing this:\n  (- ff \\<longlongrightarrow> l) at_top\n\ngoal (1 subgoal):\n 1. (ff \\<longlongrightarrow> - l) at_top", "using tendsto_at_top_eq_left tendsto_minus_cancel_left"], ["proof (prove)\nusing this:\n  (- ff \\<longlongrightarrow> l) at_top\n  \\<lbrakk>(?f \\<longlongrightarrow> ?l) at_top;\n   \\<And>x. ?x0.0 \\<le> x \\<Longrightarrow> ?f x = ?g x\\<rbrakk>\n  \\<Longrightarrow> (?g \\<longlongrightarrow> ?l) at_top\n  (?f \\<longlongrightarrow> - ?y) ?F =\n  ((\\<lambda>x. - ?f x) \\<longlongrightarrow> ?y) ?F\n\ngoal (1 subgoal):\n 1. (ff \\<longlongrightarrow> - l) at_top", "by fastforce"], ["proof (state)\nthis:\n  (ff \\<longlongrightarrow> - l) at_top\n\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "thus ?thesis"], ["proof (prove)\nusing this:\n  (ff \\<longlongrightarrow> - l) at_top\n\ngoal (1 subgoal):\n 1. \\<exists>l. (f \\<longlongrightarrow> l) at_top", "by (meson \\<open>(ff \\<longlongrightarrow> -l) at_top\\<close> ff_def tendsto_at_top_eq_left)"], ["proof (state)\nthis:\n  \\<exists>l. (f \\<longlongrightarrow> l) at_top\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infdist_closed:\n  shows \"closed ({z. infdist z S \\<ge> e})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed {z. e \\<le> infdist z S}", "by (auto intro!:closed_Collect_le simp add:continuous_on_infdist)"], ["", "(* TODO: this is a copy of LIMSEQ_norm_0 where the sequence\n  is bounded above in norm by a geometric series *)"], ["", "lemma LIMSEQ_norm_0_pow:\n  assumes \"k > 0\" \"b > 1\"\n  assumes  \"\\<And>n::nat. norm (s n) \\<le> k / b^n\"\n  shows \"s \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<longlonglongrightarrow> (0::'a)", "proof (rule metric_LIMSEQ_I)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no. \\<forall>n\\<ge>no. dist (s n) (0::'a) < r", "fix e"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no. \\<forall>n\\<ge>no. dist (s n) (0::'a) < r", "assume \"e > (0::real)\""], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no. \\<forall>n\\<ge>no. dist (s n) (0::'a) < r", "then"], ["proof (chain)\npicking this:\n  0 < e", "have \"k / e > 0\""], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. 0 < k / e", "using assms(1)"], ["proof (prove)\nusing this:\n  0 < e\n  0 < k\n\ngoal (1 subgoal):\n 1. 0 < k / e", "by auto"], ["proof (state)\nthis:\n  0 < k / e\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no. \\<forall>n\\<ge>no. dist (s n) (0::'a) < r", "obtain N where N: \"b^(N::nat) > k / e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N. k / e < b ^ N \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(2)"], ["proof (prove)\nusing this:\n  1 < b\n\ngoal (1 subgoal):\n 1. (\\<And>N. k / e < b ^ N \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using real_arch_pow"], ["proof (prove)\nusing this:\n  1 < b\n  1 < ?x \\<Longrightarrow> \\<exists>n. ?y < ?x ^ n\n\ngoal (1 subgoal):\n 1. (\\<And>N. k / e < b ^ N \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  k / e < b ^ N\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no. \\<forall>n\\<ge>no. dist (s n) (0::'a) < r", "then"], ["proof (chain)\npicking this:\n  k / e < b ^ N", "have \"norm (s n) < e\" if \"n \\<ge> N\" for n"], ["proof (prove)\nusing this:\n  k / e < b ^ N\n\ngoal (1 subgoal):\n 1. norm (s n) < e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k / e < b ^ N \\<Longrightarrow> norm (s n) < e", "have \"k / b^n \\<le> k / b^N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k / b ^ n \\<le> k / b ^ N", "by (smt assms(1) assms(2) frac_le leD power_less_imp_less_exp that zero_less_power)"], ["proof (state)\nthis:\n  k / b ^ n \\<le> k / b ^ N\n\ngoal (1 subgoal):\n 1. k / e < b ^ N \\<Longrightarrow> norm (s n) < e", "also"], ["proof (state)\nthis:\n  k / b ^ n \\<le> k / b ^ N\n\ngoal (1 subgoal):\n 1. k / e < b ^ N \\<Longrightarrow> norm (s n) < e", "have \" ... < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k / b ^ N < e", "using N"], ["proof (prove)\nusing this:\n  k / e < b ^ N\n\ngoal (1 subgoal):\n 1. k / b ^ N < e", "by (metis \\<open>0 < e\\<close> assms(2) less_trans mult.commute pos_divide_less_eq zero_less_one zero_less_power)"], ["proof (state)\nthis:\n  k / b ^ N < e\n\ngoal (1 subgoal):\n 1. k / e < b ^ N \\<Longrightarrow> norm (s n) < e", "finally"], ["proof (chain)\npicking this:\n  k / b ^ n < e", "show ?thesis"], ["proof (prove)\nusing this:\n  k / b ^ n < e\n\ngoal (1 subgoal):\n 1. norm (s n) < e", "by (meson assms less_eq_real_def not_le order_trans)"], ["proof (state)\nthis:\n  norm (s n) < e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  N \\<le> ?n \\<Longrightarrow> norm (s ?n) < e\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no. \\<forall>n\\<ge>no. dist (s n) (0::'a) < r", "then"], ["proof (chain)\npicking this:\n  N \\<le> ?n \\<Longrightarrow> norm (s ?n) < e", "show \"\\<exists>no. \\<forall>n\\<ge>no. dist (s n) 0 < e\""], ["proof (prove)\nusing this:\n  N \\<le> ?n \\<Longrightarrow> norm (s ?n) < e\n\ngoal (1 subgoal):\n 1. \\<exists>no. \\<forall>n\\<ge>no. dist (s n) (0::'a) < e", "by auto"], ["proof (state)\nthis:\n  \\<exists>no. \\<forall>n\\<ge>no. dist (s n) (0::'a) < e\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma filterlim_apply_filtermap:\n  assumes g: \"filterlim g G F\"\n  shows \"filterlim (\\<lambda>x. m (g x)) (filtermap m G) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM x F. m (g x) :> filtermap m G", "by (metis filterlim_def filterlim_filtermap filtermap_mono g)"], ["", "lemma eventually_at_right_field_le:\n  \"eventually P (at_right x) \\<longleftrightarrow> (\\<exists>b>x. \\<forall>y>x. y \\<le> b \\<longrightarrow> P y)\"\n  for x :: \"'a::{linordered_field, linorder_topology}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually P (at_right x) =\n    (\\<exists>b>x. \\<forall>y>x. y \\<le> b \\<longrightarrow> P y)", "by (smt dense eventually_at_right_field le_less_trans less_le_not_le order.strict_trans1)"], ["", "subsection \\<open>indexing euclidean space with natural numbers\\<close>"], ["", "definition  nth_eucl :: \"'a::executable_euclidean_space \\<Rightarrow> nat \\<Rightarrow> real\" where\n  \"nth_eucl x i = x \\<bullet> (Basis_list ! i)\"\n  \\<comment> \\<open>TODO: why is that and some sort of \\<open>lambda_eucl\\<close> nowhere available?\\<close>"], ["", "definition lambda_eucl :: \"(nat \\<Rightarrow> real) \\<Rightarrow> 'a::executable_euclidean_space\" where\n  \"lambda_eucl (f::nat\\<Rightarrow>real) = (\\<Sum>i<DIM('a). f i *\\<^sub>R Basis_list ! i)\""], ["", "lemma eucl_eq_iff: \"x = y \\<longleftrightarrow> (\\<forall>i<DIM('a). nth_eucl x i = nth_eucl y i)\"\n  for x y::\"'a::executable_euclidean_space\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x = y) = (\\<forall>i<DIM('a). nth_eucl x i = nth_eucl y i)", "apply (auto simp: nth_eucl_def euclidean_eq_iff[where 'a='a])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>\\<forall>i<DIM('a).\n                   x \\<bullet> Basis_list ! i = y \\<bullet> Basis_list ! i;\n        b \\<in> Basis\\<rbrakk>\n       \\<Longrightarrow> x \\<bullet> b = y \\<bullet> b", "by (metis eucl_of_list_list_of_eucl list_of_eucl_eq_iff)"], ["", "bundle eucl_notation begin"], ["", "notation nth_eucl (infixl \"$\\<^sub>e\" 90)"], ["", "end"], ["", "bundle no_eucl_notation begin"], ["", "no_notation nth_eucl (infixl \"$\\<^sub>e\" 90)"], ["", "end"], ["", "unbundle eucl_notation"], ["", "lemma eucl_of_list_eucl_nth:\n  \"(eucl_of_list xs::'a) $\\<^sub>e i = xs ! i\"\n  if \"length xs = DIM('a::executable_euclidean_space)\"\n    \"i < DIM('a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eucl_of_list xs $\\<^sub>e i = xs ! i", "using that"], ["proof (prove)\nusing this:\n  length xs = DIM('a)\n  i < DIM('a)\n\ngoal (1 subgoal):\n 1. eucl_of_list xs $\\<^sub>e i = xs ! i", "apply (auto simp: nth_eucl_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs = DIM('a); i < DIM('a)\\<rbrakk>\n    \\<Longrightarrow> eucl_of_list xs \\<bullet> Basis_list ! i = xs ! i", "by (metis list_of_eucl_eucl_of_list list_of_eucl_nth)"], ["", "lemma eucl_of_list_inner:\n  \"(eucl_of_list xs::'a) \\<bullet> eucl_of_list ys = (\\<Sum>(x,y)\\<leftarrow>zip xs ys. x * y)\"\n  if \"length xs = DIM('a::executable_euclidean_space)\"\n    \"length ys = DIM('a::executable_euclidean_space)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eucl_of_list xs \\<bullet> eucl_of_list ys = sum_list (map2 (*) xs ys)", "using that"], ["proof (prove)\nusing this:\n  length xs = DIM('a)\n  length ys = DIM('a)\n\ngoal (1 subgoal):\n 1. eucl_of_list xs \\<bullet> eucl_of_list ys = sum_list (map2 (*) xs ys)", "by (auto simp: nth_eucl_def eucl_of_list_inner_eq inner_lv_rel_def)"], ["", "lemma self_eq_eucl_of_list: \"x = eucl_of_list (map (\\<lambda>i. x $\\<^sub>e i) [0..<DIM('a)])\"\n  for x::\"'a::executable_euclidean_space\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = eucl_of_list (map (($\\<^sub>e) x) [0..<DIM('a)])", "by (auto simp: eucl_eq_iff[where 'a='a] eucl_of_list_eucl_nth)"], ["", "lemma inner_nth_eucl: \"x \\<bullet> y = (\\<Sum>i<DIM('a). x $\\<^sub>e i * y $\\<^sub>e i)\"\n  for x y::\"'a::executable_euclidean_space\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<bullet> y = (\\<Sum>i<DIM('a). x $\\<^sub>e i * y $\\<^sub>e i)", "apply (subst self_eq_eucl_of_list[where x=x])"], ["proof (prove)\ngoal (1 subgoal):\n 1. eucl_of_list (map (($\\<^sub>e) x) [0..<DIM('a)]) \\<bullet> y =\n    (\\<Sum>i<DIM('a). x $\\<^sub>e i * y $\\<^sub>e i)", "apply (subst self_eq_eucl_of_list[where x=y])"], ["proof (prove)\ngoal (1 subgoal):\n 1. eucl_of_list (map (($\\<^sub>e) x) [0..<DIM('a)]) \\<bullet>\n    eucl_of_list (map (($\\<^sub>e) y) [0..<DIM('a)]) =\n    (\\<Sum>i<DIM('a). x $\\<^sub>e i * y $\\<^sub>e i)", "apply (subst eucl_of_list_inner)"], ["proof (prove)\ngoal (3 subgoals):\n 1. length (map (($\\<^sub>e) x) [0..<DIM('a)]) = DIM('a)\n 2. length (map (($\\<^sub>e) y) [0..<DIM('a)]) = DIM('a)\n 3. sum_list\n     (map2 (*) (map (($\\<^sub>e) x) [0..<DIM('a)])\n       (map (($\\<^sub>e) y) [0..<DIM('a)])) =\n    (\\<Sum>i<DIM('a). x $\\<^sub>e i * y $\\<^sub>e i)", "by (auto simp: map2_map_map atLeast_upt interv_sum_list_conv_sum_set_nat)"], ["", "lemma norm_nth_eucl: \"norm x = L2_set (\\<lambda>i. x $\\<^sub>e i) {..<DIM('a)}\"\n  for x::\"'a::executable_euclidean_space\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm x = L2_set (($\\<^sub>e) x) {..<DIM('a)}", "unfolding norm_eq_sqrt_inner inner_nth_eucl L2_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (\\<Sum>i<DIM('a). x $\\<^sub>e i * x $\\<^sub>e i) =\n    sqrt (\\<Sum>i<DIM('a). (x $\\<^sub>e i)\\<^sup>2)", "by (auto simp: power2_eq_square)"], ["", "lemma plus_nth_eucl: \"(x + y) $\\<^sub>e i = x $\\<^sub>e i + y $\\<^sub>e i\"\n  and minus_nth_eucl: \"(x - y) $\\<^sub>e i = x $\\<^sub>e i - y $\\<^sub>e i\"\n  and uminus_nth_eucl: \"(-x) $\\<^sub>e i = - x $\\<^sub>e i\"\n  and scaleR_nth_eucl: \"(c *\\<^sub>R x) $\\<^sub>e i = c *\\<^sub>R (x $\\<^sub>e i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x + y) $\\<^sub>e i = x $\\<^sub>e i + y $\\<^sub>e i &&&\n     (x - y) $\\<^sub>e i = x $\\<^sub>e i - y $\\<^sub>e i) &&&\n    (- x) $\\<^sub>e i = - x $\\<^sub>e i &&&\n    (c *\\<^sub>R x) $\\<^sub>e i = c *\\<^sub>R x $\\<^sub>e i", "by (auto simp: nth_eucl_def algebra_simps)"], ["", "lemma inf_nth_eucl: \"inf x y $\\<^sub>e i = min (x $\\<^sub>e i) (y $\\<^sub>e i)\"\n  if \"i < DIM('a)\"\n  for x::\"'a::executable_euclidean_space\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inf x y $\\<^sub>e i = min (x $\\<^sub>e i) (y $\\<^sub>e i)", "by (auto simp: nth_eucl_def algebra_simps inner_Basis_inf_left that inf_min)"], ["", "lemma sup_nth_eucl: \"sup x y $\\<^sub>e i = max (x $\\<^sub>e i) (y $\\<^sub>e i)\"\n  if \"i < DIM('a)\"\n  for x::\"'a::executable_euclidean_space\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup x y $\\<^sub>e i = max (x $\\<^sub>e i) (y $\\<^sub>e i)", "by (auto simp: nth_eucl_def algebra_simps inner_Basis_sup_left that sup_max)"], ["", "lemma le_iff_le_nth_eucl: \"x \\<le> y \\<longleftrightarrow> (\\<forall>i<DIM('a). (x $\\<^sub>e i) \\<le> (y $\\<^sub>e i))\"\n  for x::\"'a::executable_euclidean_space\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<le> y) = (\\<forall>i<DIM('a). x $\\<^sub>e i \\<le> y $\\<^sub>e i)", "apply (auto simp: nth_eucl_def algebra_simps eucl_le[where 'a='a])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i<DIM('a).\n                   x \\<bullet> Basis_list ! i\n                   \\<le> y \\<bullet> Basis_list ! i;\n        i \\<in> Basis\\<rbrakk>\n       \\<Longrightarrow> x \\<bullet> i \\<le> y \\<bullet> i", "by (meson eucl_le eucl_le_Basis_list_iff)"], ["", "lemma eucl_less_iff_less_nth_eucl: \"eucl_less x y \\<longleftrightarrow> (\\<forall>i<DIM('a). (x $\\<^sub>e i) < (y $\\<^sub>e i))\"\n  for x::\"'a::executable_euclidean_space\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eucl_less x y = (\\<forall>i<DIM('a). x $\\<^sub>e i < y $\\<^sub>e i)", "apply (auto simp: nth_eucl_def algebra_simps eucl_less_def[where 'a='a])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i<DIM('a).\n                   x \\<bullet> Basis_list ! i < y \\<bullet> Basis_list ! i;\n        i \\<in> Basis\\<rbrakk>\n       \\<Longrightarrow> x \\<bullet> i < y \\<bullet> i", "by (metis Basis_zero eucl_eq_iff inner_not_same_Basis inner_zero_left length_Basis_list\n      nth_Basis_list_in_Basis nth_eucl_def)"], ["", "lemma continuous_on_nth_eucl[continuous_intros]:\n  \"continuous_on X (\\<lambda>x. f x $\\<^sub>e i)\"\n  if \"continuous_on X f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on X (\\<lambda>x. f x $\\<^sub>e i)", "by (auto simp: nth_eucl_def intro!: continuous_intros that)"], ["", "subsection \\<open>derivatives\\<close>"], ["", "lemma eventually_at_ne[intro, simp]: \"\\<forall>\\<^sub>F x in at x0. x \\<noteq> x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x0. x \\<noteq> x0", "by (auto simp: eventually_at_filter)"], ["", "lemma has_vector_derivative_withinD:\n  fixes f::\"real \\<Rightarrow> 'b::euclidean_space\"\n  assumes \"(f has_vector_derivative f') (at x0 within S)\"\n  shows \"((\\<lambda>x. (f x - f x0) /\\<^sub>R (x - x0)) \\<longlongrightarrow> f') (at x0 within S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (f x - f x0) /\\<^sub>R (x - x0)) \\<longlongrightarrow> f')\n     (at x0 within S)", "apply (rule LIM_zero_cancel)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         (f x - f x0) /\\<^sub>R (x - x0) - f') \\<longlongrightarrow>\n     (0::'b))\n     (at x0 within S)", "apply (rule tendsto_norm_zero_cancel)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         norm ((f x - f x0) /\\<^sub>R (x - x0) - f')) \\<longlongrightarrow>\n     0)\n     (at x0 within S)", "apply (rule Lim_transform_eventually)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (?f4 \\<longlongrightarrow> 0) (at x0 within S)\n 2. \\<forall>\\<^sub>F x in at x0 within S.\n       ?f4 x = norm ((f x - f x0) /\\<^sub>R (x - x0) - f')", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. (?f4 \\<longlongrightarrow> 0) (at x0 within S)\n 2. \\<forall>\\<^sub>F x in at x0 within S.\n       ?f4 x = norm ((f x - f x0) /\\<^sub>R (x - x0) - f')", "show \"\\<forall>\\<^sub>F x in at x0 within S. norm ((f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R norm (x - x0)) =\n    norm ((f x - f x0) /\\<^sub>R (x - x0) - f')\"\n    (is \"\\<forall>\\<^sub>F x in _. ?th x\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at x0 within S.\n       norm ((f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R norm (x - x0)) =\n       norm ((f x - f x0) /\\<^sub>R (x - x0) - f')", "unfolding eventually_at_filter"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in nhds x0.\n       x \\<noteq> x0 \\<longrightarrow>\n       x \\<in> S \\<longrightarrow>\n       norm ((f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R norm (x - x0)) =\n       norm ((f x - f x0) /\\<^sub>R (x - x0) - f')", "proof (safe intro!: eventuallyI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<noteq> x0; x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R\n                           norm (x - x0)) =\n                         norm ((f x - f x0) /\\<^sub>R (x - x0) - f')", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<noteq> x0; x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R\n                           norm (x - x0)) =\n                         norm ((f x - f x0) /\\<^sub>R (x - x0) - f')", "assume x: \"x \\<noteq> x0\""], ["proof (state)\nthis:\n  x \\<noteq> x0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<noteq> x0; x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R\n                           norm (x - x0)) =\n                         norm ((f x - f x0) /\\<^sub>R (x - x0) - f')", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> x0", "have \"norm ((f x - f x0) /\\<^sub>R (x - x0) - f') = norm (sgn (x - x0) *\\<^sub>R ((f x - f x0) /\\<^sub>R (x - x0) - f'))\""], ["proof (prove)\nusing this:\n  x \\<noteq> x0\n\ngoal (1 subgoal):\n 1. norm ((f x - f x0) /\\<^sub>R (x - x0) - f') =\n    norm (sgn (x - x0) *\\<^sub>R ((f x - f x0) /\\<^sub>R (x - x0) - f'))", "by simp"], ["proof (state)\nthis:\n  norm ((f x - f x0) /\\<^sub>R (x - x0) - f') =\n  norm (sgn (x - x0) *\\<^sub>R ((f x - f x0) /\\<^sub>R (x - x0) - f'))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<noteq> x0; x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R\n                           norm (x - x0)) =\n                         norm ((f x - f x0) /\\<^sub>R (x - x0) - f')", "also"], ["proof (state)\nthis:\n  norm ((f x - f x0) /\\<^sub>R (x - x0) - f') =\n  norm (sgn (x - x0) *\\<^sub>R ((f x - f x0) /\\<^sub>R (x - x0) - f'))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<noteq> x0; x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R\n                           norm (x - x0)) =\n                         norm ((f x - f x0) /\\<^sub>R (x - x0) - f')", "have \"sgn (x - x0) *\\<^sub>R ((f x - f x0) /\\<^sub>R (x - x0) - f') = ((f x - f x0) /\\<^sub>R norm (x - x0) - (x - x0) *\\<^sub>R f' /\\<^sub>R norm (x - x0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn (x - x0) *\\<^sub>R ((f x - f x0) /\\<^sub>R (x - x0) - f') =\n    (f x - f x0) /\\<^sub>R norm (x - x0) -\n    (x - x0) *\\<^sub>R f' /\\<^sub>R norm (x - x0)", "by (auto simp add: algebra_simps sgn_div_norm divide_simps)\n        (metis add.commute add_divide_distrib diff_add_cancel scaleR_add_left)"], ["proof (state)\nthis:\n  sgn (x - x0) *\\<^sub>R ((f x - f x0) /\\<^sub>R (x - x0) - f') =\n  (f x - f x0) /\\<^sub>R norm (x - x0) -\n  (x - x0) *\\<^sub>R f' /\\<^sub>R norm (x - x0)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<noteq> x0; x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R\n                           norm (x - x0)) =\n                         norm ((f x - f x0) /\\<^sub>R (x - x0) - f')", "also"], ["proof (state)\nthis:\n  sgn (x - x0) *\\<^sub>R ((f x - f x0) /\\<^sub>R (x - x0) - f') =\n  (f x - f x0) /\\<^sub>R norm (x - x0) -\n  (x - x0) *\\<^sub>R f' /\\<^sub>R norm (x - x0)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<noteq> x0; x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R\n                           norm (x - x0)) =\n                         norm ((f x - f x0) /\\<^sub>R (x - x0) - f')", "have \"\\<dots> = (f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R norm (x - x0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f x - f x0) /\\<^sub>R norm (x - x0) -\n    (x - x0) *\\<^sub>R f' /\\<^sub>R norm (x - x0) =\n    (f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R norm (x - x0)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  (f x - f x0) /\\<^sub>R norm (x - x0) -\n  (x - x0) *\\<^sub>R f' /\\<^sub>R norm (x - x0) =\n  (f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R norm (x - x0)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<noteq> x0; x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> norm\n                          ((f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R\n                           norm (x - x0)) =\n                         norm ((f x - f x0) /\\<^sub>R (x - x0) - f')", "finally"], ["proof (chain)\npicking this:\n  norm ((f x - f x0) /\\<^sub>R (x - x0) - f') =\n  norm ((f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R norm (x - x0))", "show \"?th x\""], ["proof (prove)\nusing this:\n  norm ((f x - f x0) /\\<^sub>R (x - x0) - f') =\n  norm ((f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R norm (x - x0))\n\ngoal (1 subgoal):\n 1. norm ((f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R norm (x - x0)) =\n    norm ((f x - f x0) /\\<^sub>R (x - x0) - f')", ".."], ["proof (state)\nthis:\n  norm ((f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R norm (x - x0)) =\n  norm ((f x - f x0) /\\<^sub>R (x - x0) - f')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at x0 within S.\n     norm ((f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R norm (x - x0)) =\n     norm ((f x - f x0) /\\<^sub>R (x - x0) - f')\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         norm\n          ((f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R\n           norm (x - x0))) \\<longlongrightarrow>\n     0)\n     (at x0 within S)", "show \"((\\<lambda>x. norm ((f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R norm (x - x0))) \\<longlongrightarrow> 0) (at x0 within S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         norm\n          ((f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R\n           norm (x - x0))) \\<longlongrightarrow>\n     0)\n     (at x0 within S)", "by (rule tendsto_norm_zero)\n      (use assms in \\<open>auto simp: has_vector_derivative_def has_derivative_at_within\\<close>)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       norm\n        ((f x - f x0 - (x - x0) *\\<^sub>R f') /\\<^sub>R\n         norm (x - x0))) \\<longlongrightarrow>\n   0)\n   (at x0 within S)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A \\<open>path_connected\\<close> set \\<open>S\\<close> entering both \\<open>T\\<close> and \\<open>-T\\<close>\n      must cross the frontier of \\<open>T\\<close> \\<close>"], ["", "lemma path_connected_frontier:\n  fixes S :: \"'a::real_normed_vector set\"\n  assumes \"path_connected S\"\n  assumes \"S \\<inter> T \\<noteq> {}\"\n  assumes \"S \\<inter> -T \\<noteq> {}\"\n  obtains s where \"s \\<in> S\" \"s \\<in> frontier T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> S; s \\<in> frontier T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> S; s \\<in> frontier T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain st where st:\"st \\<in> S \\<inter> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>st.\n        st \\<in> S \\<inter> T \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(2)"], ["proof (prove)\nusing this:\n  S \\<inter> T \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>st.\n        st \\<in> S \\<inter> T \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  st \\<in> S \\<inter> T\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> S; s \\<in> frontier T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain sn where sn:\"sn \\<in> S \\<inter> -T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>sn.\n        sn \\<in> S \\<inter> - T \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(3)"], ["proof (prove)\nusing this:\n  S \\<inter> - T \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>sn.\n        sn \\<in> S \\<inter> - T \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  sn \\<in> S \\<inter> - T\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> S; s \\<in> frontier T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain g where g: \"path g\" \"path_image g \\<subseteq> S\"\n    \"pathstart g = st\" \"pathfinish g = sn\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>path g; path_image g \\<subseteq> S; pathstart g = st;\n         pathfinish g = sn\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(1) st sn"], ["proof (prove)\nusing this:\n  path_connected S\n  st \\<in> S \\<inter> T\n  sn \\<in> S \\<inter> - T\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>path g; path_image g \\<subseteq> S; pathstart g = st;\n         pathfinish g = sn\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding path_connected_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>S.\n     \\<forall>y\\<in>S.\n        \\<exists>g.\n           path g \\<and>\n           path_image g \\<subseteq> S \\<and>\n           pathstart g = x \\<and> pathfinish g = y\n  st \\<in> S \\<inter> T\n  sn \\<in> S \\<inter> - T\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>path g; path_image g \\<subseteq> S; pathstart g = st;\n         pathfinish g = sn\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  path g\n  path_image g \\<subseteq> S\n  pathstart g = st\n  pathfinish g = sn\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> S; s \\<in> frontier T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have a1:\"pathstart g \\<in> closure T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pathstart g \\<in> closure T", "using st g(3) closure_Un_frontier"], ["proof (prove)\nusing this:\n  st \\<in> S \\<inter> T\n  pathstart g = st\n  closure ?S = ?S \\<union> frontier ?S\n\ngoal (1 subgoal):\n 1. pathstart g \\<in> closure T", "by fastforce"], ["proof (state)\nthis:\n  pathstart g \\<in> closure T\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> S; s \\<in> frontier T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have a2:\"pathfinish g \\<notin> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pathfinish g \\<notin> T", "using sn g(4)"], ["proof (prove)\nusing this:\n  sn \\<in> S \\<inter> - T\n  pathfinish g = sn\n\ngoal (1 subgoal):\n 1. pathfinish g \\<notin> T", "by auto"], ["proof (state)\nthis:\n  pathfinish g \\<notin> T\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> S; s \\<in> frontier T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from exists_path_subpath_to_frontier[OF g(1) a1 a2]"], ["proof (chain)\npicking this:\n  (\\<And>h.\n      \\<lbrakk>path h; pathstart h = pathstart g;\n       path_image h \\<subseteq> path_image g;\n       path_image h - {pathfinish h} \\<subseteq> interior T;\n       pathfinish h \\<in> frontier T\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain h where \"path_image h \\<subseteq> path_image g\" \"pathfinish h \\<in> frontier T\""], ["proof (prove)\nusing this:\n  (\\<And>h.\n      \\<lbrakk>path h; pathstart h = pathstart g;\n       path_image h \\<subseteq> path_image g;\n       path_image h - {pathfinish h} \\<subseteq> interior T;\n       pathfinish h \\<in> frontier T\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>path_image h \\<subseteq> path_image g;\n         pathfinish h \\<in> frontier T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  path_image h \\<subseteq> path_image g\n  pathfinish h \\<in> frontier T\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> S; s \\<in> frontier T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  path_image h \\<subseteq> path_image g\n  pathfinish h \\<in> frontier T\n\ngoal (1 subgoal):\n 1. thesis", "using g(2)"], ["proof (prove)\nusing this:\n  path_image h \\<subseteq> path_image g\n  pathfinish h \\<in> frontier T\n  path_image g \\<subseteq> S\n\ngoal (1 subgoal):\n 1. thesis", "by (meson in_mono pathfinish_in_path_image that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma path_connected_not_frontier_subset:\n  fixes S :: \"'a::real_normed_vector set\"\n  assumes \"path_connected S\"\n  assumes \"S \\<inter> T \\<noteq> {}\"\n  assumes \"S \\<inter> frontier T = {}\"\n  shows \"S \\<subseteq> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<subseteq> T", "using path_connected_frontier assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>path_connected ?S; ?S \\<inter> ?T \\<noteq> {};\n   ?S \\<inter> - ?T \\<noteq> {};\n   \\<And>s.\n      \\<lbrakk>s \\<in> ?S; s \\<in> frontier ?T\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  path_connected S\n  S \\<inter> T \\<noteq> {}\n  S \\<inter> frontier T = {}\n\ngoal (1 subgoal):\n 1. S \\<subseteq> T", "by auto"], ["", "lemma compact_attains_bounds:\n  fixes f::\"'a::topological_space \\<Rightarrow> 'b::linorder_topology\"\n  assumes compact: \"compact S\"\n  assumes ne: \"S \\<noteq> {}\"\n  assumes cont: \"continuous_on S f\"\n  obtains l u where \"l \\<in> S\" \"u \\<in> S\" \"\\<And>x. x \\<in> S \\<Longrightarrow> f x \\<in> {f l .. f u}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<in> S; u \\<in> S;\n         \\<And>x. x \\<in> S \\<Longrightarrow> f x \\<in> {f l..f u}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<in> S; u \\<in> S;\n         \\<And>x. x \\<in> S \\<Longrightarrow> f x \\<in> {f l..f u}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from compact_continuous_image[OF cont compact]"], ["proof (chain)\npicking this:\n  compact (f ` S)", "have compact_image: \"compact (f ` S)\""], ["proof (prove)\nusing this:\n  compact (f ` S)\n\ngoal (1 subgoal):\n 1. compact (f ` S)", "."], ["proof (state)\nthis:\n  compact (f ` S)\n\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<in> S; u \\<in> S;\n         \\<And>x. x \\<in> S \\<Longrightarrow> f x \\<in> {f l..f u}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have ne_image: \"f ` S \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` S \\<noteq> {}", "using ne"], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. f ` S \\<noteq> {}", "by simp"], ["proof (state)\nthis:\n  f ` S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<in> S; u \\<in> S;\n         \\<And>x. x \\<in> S \\<Longrightarrow> f x \\<in> {f l..f u}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from compact_attains_inf[OF compact_image ne_image]"], ["proof (chain)\npicking this:\n  \\<exists>s\\<in>f ` S. \\<forall>t\\<in>f ` S. s \\<le> t", "obtain l where \"l \\<in> S\" \"\\<And>x. x \\<in> S \\<Longrightarrow> f l \\<le> f x\""], ["proof (prove)\nusing this:\n  \\<exists>s\\<in>f ` S. \\<forall>t\\<in>f ` S. s \\<le> t\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>l \\<in> S;\n         \\<And>x. x \\<in> S \\<Longrightarrow> f l \\<le> f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  l \\<in> S\n  ?x \\<in> S \\<Longrightarrow> f l \\<le> f ?x\n\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<in> S; u \\<in> S;\n         \\<And>x. x \\<in> S \\<Longrightarrow> f x \\<in> {f l..f u}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  l \\<in> S\n  ?x \\<in> S \\<Longrightarrow> f l \\<le> f ?x\n\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<in> S; u \\<in> S;\n         \\<And>x. x \\<in> S \\<Longrightarrow> f x \\<in> {f l..f u}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from compact_attains_sup[OF compact_image ne_image]"], ["proof (chain)\npicking this:\n  \\<exists>s\\<in>f ` S. \\<forall>t\\<in>f ` S. t \\<le> s", "obtain u where \"u \\<in> S\" \"\\<And>x. x \\<in> S \\<Longrightarrow> f x \\<le> f u\""], ["proof (prove)\nusing this:\n  \\<exists>s\\<in>f ` S. \\<forall>t\\<in>f ` S. t \\<le> s\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> S;\n         \\<And>x. x \\<in> S \\<Longrightarrow> f x \\<le> f u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u \\<in> S\n  ?x \\<in> S \\<Longrightarrow> f ?x \\<le> f u\n\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<in> S; u \\<in> S;\n         \\<And>x. x \\<in> S \\<Longrightarrow> f x \\<in> {f l..f u}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  l \\<in> S\n  ?x \\<in> S \\<Longrightarrow> f l \\<le> f ?x\n  u \\<in> S\n  ?x \\<in> S \\<Longrightarrow> f ?x \\<le> f u", "have \"l \\<in> S\" \"u \\<in> S\" \"\\<And>x. x \\<in> S \\<Longrightarrow> f x \\<in> {f l .. f u}\""], ["proof (prove)\nusing this:\n  l \\<in> S\n  ?x \\<in> S \\<Longrightarrow> f l \\<le> f ?x\n  u \\<in> S\n  ?x \\<in> S \\<Longrightarrow> f ?x \\<le> f u\n\ngoal (1 subgoal):\n 1. l \\<in> S &&&\n    u \\<in> S &&&\n    (\\<And>x. x \\<in> S \\<Longrightarrow> f x \\<in> {f l..f u})", "by auto"], ["proof (state)\nthis:\n  l \\<in> S\n  u \\<in> S\n  ?x \\<in> S \\<Longrightarrow> f ?x \\<in> {f l..f u}\n\ngoal (1 subgoal):\n 1. (\\<And>l u.\n        \\<lbrakk>l \\<in> S; u \\<in> S;\n         \\<And>x. x \\<in> S \\<Longrightarrow> f x \\<in> {f l..f u}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  l \\<in> S\n  u \\<in> S\n  ?x \\<in> S \\<Longrightarrow> f ?x \\<in> {f l..f u}", "show ?thesis"], ["proof (prove)\nusing this:\n  l \\<in> S\n  u \\<in> S\n  ?x \\<in> S \\<Longrightarrow> f ?x \\<in> {f l..f u}\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma uniform_limit_const[uniform_limit_intros]:\n  \"uniform_limit S (\\<lambda>x y. f x) (\\<lambda>_. l) F\" if \"(f \\<longlongrightarrow> l) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit S (\\<lambda>x y. f x) (\\<lambda>_. l) F", "apply (auto simp: uniform_limit_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in F.\n          (\\<exists>x. x \\<in> S) \\<longrightarrow> dist (f n) l < e", "subgoal for e"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < e \\<Longrightarrow>\n    \\<forall>\\<^sub>F n in F.\n       (\\<exists>x. x \\<in> S) \\<longrightarrow> dist (f n) l < e", "using tendstoD[OF that(1), of e]"], ["proof (prove)\nusing this:\n  0 < e \\<Longrightarrow> \\<forall>\\<^sub>F x in F. dist (f x) l < e\n\ngoal (1 subgoal):\n 1. 0 < e \\<Longrightarrow>\n    \\<forall>\\<^sub>F n in F.\n       (\\<exists>x. x \\<in> S) \\<longrightarrow> dist (f n) l < e", "by (auto simp: eventually_mono)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \\<open>Segments\\<close>"], ["", "text \\<open>\\<open>closed_segment\\<close> throws away the order that our intuition keeps\\<close>"], ["", "definition line::\"'a::real_vector \\<Rightarrow> 'a \\<Rightarrow> real \\<Rightarrow> 'a\"\n  (\"{_ -- _}\\<^bsub>_\\<^esub>\")\n  where \"{a -- b}\\<^bsub>u\\<^esub> = a + u *\\<^sub>R (b - a)\""], ["", "abbreviation \"line_image a b U \\<equiv>(\\<lambda>u. {a -- b}\\<^bsub>u\\<^esub>) ` U\""], ["", "notation line_image (\"{_ -- _}\\<^bsub>`_\\<^esub>\")"], ["", "lemma in_closed_segment_iff_line: \"x \\<in> {a -- b} \\<longleftrightarrow> (\\<exists>c\\<in>{0..1}. x = line a b c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> {a--b}) =\n    (\\<exists>c\\<in>{0..1}. x = {a -- b}\\<^bsub>c\\<^esub>)", "by (auto simp: in_segment line_def algebra_simps)"], ["", "lemma in_open_segment_iff_line: \"x \\<in> {a <--< b} \\<longleftrightarrow> (\\<exists>c\\<in>{0<..<1}. a \\<noteq> b \\<and> x = line a b c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> {a<--<b}) =\n    (\\<exists>c\\<in>{0<..<1}.\n        a \\<noteq> b \\<and> x = {a -- b}\\<^bsub>c\\<^esub>)", "by (auto simp: in_segment line_def algebra_simps)"], ["", "lemma line_convex_combination1: \"(1 - u) *\\<^sub>R line a b i + u *\\<^sub>R b = line a b (i + u - i * u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - u) *\\<^sub>R {a -- b}\\<^bsub>i\\<^esub> + u *\\<^sub>R b =\n    {a -- b}\\<^bsub>i + u - i * u\\<^esub>", "by (auto simp: line_def algebra_simps)"], ["", "lemma line_convex_combination2: \"(1 - u) *\\<^sub>R a + u *\\<^sub>R line a b i = line a b (i*u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - u) *\\<^sub>R a + u *\\<^sub>R {a -- b}\\<^bsub>i\\<^esub> =\n    {a -- b}\\<^bsub>i * u\\<^esub>", "by (auto simp: line_def algebra_simps)"], ["", "lemma line_convex_combination12: \"(1 - u) *\\<^sub>R line a b i + u *\\<^sub>R line a b j = line a b (i + u * (j - i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 - u) *\\<^sub>R {a -- b}\\<^bsub>i\\<^esub> +\n    u *\\<^sub>R {a -- b}\\<^bsub>j\\<^esub> =\n    {a -- b}\\<^bsub>i + u * (j - i)\\<^esub>", "by (auto simp: line_def algebra_simps)"], ["", "lemma mult_less_one_less_self: \"0 < x \\<Longrightarrow> i < 1 \\<Longrightarrow> i * x < x\" for i x::real"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < x; i < 1\\<rbrakk> \\<Longrightarrow> i * x < x", "by auto"], ["", "lemma plus_times_le_one_lemma: \"i + u - i * u \\<le> 1\" if \"i \\<le> 1\" \"u \\<le> 1\" for i u::real"], ["proof (prove)\ngoal (1 subgoal):\n 1. i + u - i * u \\<le> 1", "by (simp add: diff_le_eq sum_le_prod1 that)"], ["", "lemma plus_times_less_one_lemma: \"i + u - i * u < 1\" if \"i < 1\" \"u < 1\" for i u::real"], ["proof (prove)\ngoal (1 subgoal):\n 1. i + u - i * u < 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. i + u - i * u < 1", "have \"u * (1 - i) < 1 - i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u * (1 - i) < 1 - i", "using that"], ["proof (prove)\nusing this:\n  i < 1\n  u < 1\n\ngoal (1 subgoal):\n 1. u * (1 - i) < 1 - i", "by force"], ["proof (state)\nthis:\n  u * (1 - i) < 1 - i\n\ngoal (1 subgoal):\n 1. i + u - i * u < 1", "then"], ["proof (chain)\npicking this:\n  u * (1 - i) < 1 - i", "show ?thesis"], ["proof (prove)\nusing this:\n  u * (1 - i) < 1 - i\n\ngoal (1 subgoal):\n 1. i + u - i * u < 1", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  i + u - i * u < 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma line_eq_endpoint_iff[simp]:\n  \"line a b i = b \\<longleftrightarrow> (a = b \\<or> i = 1)\"\n  \"a = line a b i \\<longleftrightarrow> (a = b \\<or> i = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ({a -- b}\\<^bsub>i\\<^esub> = b) = (a = b \\<or> i = 1) &&&\n    (a = {a -- b}\\<^bsub>i\\<^esub>) = (a = b \\<or> i = 0)", "by (auto simp: line_def algebra_simps)"], ["", "lemma line_eq_iff[simp]: \"line a b x = line a b y \\<longleftrightarrow> (x = y \\<or> a = b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ({a -- b}\\<^bsub>x\\<^esub> = {a -- b}\\<^bsub>y\\<^esub>) =\n    (x = y \\<or> a = b)", "by (auto simp: line_def)"], ["", "lemma line_open_segment_iff:\n  \"{line a b i<--<b} = line a b ` {i<..<1}\"\n  if \"i < 1\" \"a \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {{a -- b}\\<^bsub>i\\<^esub><--<b} = {a -- b}\\<^bsub>`{i<..<1}\\<^esub>", "using that"], ["proof (prove)\nusing this:\n  i < 1\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. {{a -- b}\\<^bsub>i\\<^esub><--<b} = {a -- b}\\<^bsub>`{i<..<1}\\<^esub>", "apply (auto simp: in_segment line_convex_combination1 plus_times_less_one_lemma)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>a \\<noteq> b; i < xa; xa < 1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u>0. u < 1 \\<and> xa = i + u - i * u", "subgoal for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> b; i < j; j < 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u>0. u < 1 \\<and> j = i + u - i * u", "apply (rule exI[where x=\"(j - i)/(1 - i)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> b; i < j; j < 1\\<rbrakk>\n    \\<Longrightarrow> 0 < (j - i) / (1 - i) \\<and>\n                      (j - i) / (1 - i) < 1 \\<and>\n                      j = i + (j - i) / (1 - i) - i * ((j - i) / (1 - i))", "apply (auto simp: divide_simps algebra_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> b; i < j; j < 1; 1 + i * i = i * 2\\<rbrakk>\n    \\<Longrightarrow> j = 0", "by (metis add_diff_cancel less_numeral_extra(4) mult_2_right plus_times_less_one_lemma that(1))"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma open_segment_line_iff:\n  \"{a<--<line a b i} = line a b ` {0<..<i}\"\n  if \"0 < i\" \"a \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a<--<{a -- b}\\<^bsub>i\\<^esub>} = {a -- b}\\<^bsub>`{0<..<i}\\<^esub>", "using that"], ["proof (prove)\nusing this:\n  0 < i\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. {a<--<{a -- b}\\<^bsub>i\\<^esub>} = {a -- b}\\<^bsub>`{0<..<i}\\<^esub>", "apply (auto simp: in_segment line_convex_combination2 plus_times_less_one_lemma)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>a \\<noteq> b; 0 < xa; xa < i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u>0. u < 1 \\<and> xa = i * u", "subgoal for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> b; 0 < j; j < i\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u>0. u < 1 \\<and> j = i * u", "apply (rule exI[where x=\"j/i\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> b; 0 < j; j < i\\<rbrakk>\n    \\<Longrightarrow> 0 < j / i \\<and> j / i < 1 \\<and> j = i * (j / i)", "by (auto simp: )"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma line_closed_segment_iff:\n  \"{line a b i--b} = line a b ` {i..1}\"\n  if \"i \\<le> 1\" \"a \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {{a -- b}\\<^bsub>i\\<^esub>--b} = {a -- b}\\<^bsub>`{i..1}\\<^esub>", "using that"], ["proof (prove)\nusing this:\n  i \\<le> 1\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. {{a -- b}\\<^bsub>i\\<^esub>--b} = {a -- b}\\<^bsub>`{i..1}\\<^esub>", "apply (auto simp: in_segment line_convex_combination1 mult_le_cancel_right2 plus_times_le_one_lemma)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>a \\<noteq> b; i \\<le> xa; xa \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u\\<ge>0.\n                            u \\<le> 1 \\<and> xa = i + u - i * u", "subgoal for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> b; i \\<le> j; j \\<le> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u\\<ge>0. u \\<le> 1 \\<and> j = i + u - i * u", "apply (rule exI[where x=\"(j - i)/(1 - i)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> b; i \\<le> j; j \\<le> 1\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> (j - i) / (1 - i) \\<and>\n                      (j - i) / (1 - i) \\<le> 1 \\<and>\n                      j = i + (j - i) / (1 - i) - i * ((j - i) / (1 - i))", "apply (auto simp: divide_simps algebra_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> b; i \\<le> j; j \\<le> 1; 1 + i * i = i * 2;\n     i < 1\\<rbrakk>\n    \\<Longrightarrow> j = 0", "by (metis add_diff_cancel less_numeral_extra(4) mult_2_right plus_times_less_one_lemma that(1))"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma closed_segment_line_iff:\n  \"{a--line a b i} = line a b ` {0..i}\"\n  if \"0 < i\" \"a \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a--{a -- b}\\<^bsub>i\\<^esub>} = {a -- b}\\<^bsub>`{0..i}\\<^esub>", "using that"], ["proof (prove)\nusing this:\n  0 < i\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. {a--{a -- b}\\<^bsub>i\\<^esub>} = {a -- b}\\<^bsub>`{0..i}\\<^esub>", "apply (auto simp: in_segment line_convex_combination2 plus_times_less_one_lemma)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 < i; a \\<noteq> b; 0 \\<le> xa; xa \\<le> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u\\<ge>0. u \\<le> 1 \\<and> xa = i * u", "subgoal for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < i; a \\<noteq> b; 0 \\<le> j; j \\<le> i\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u\\<ge>0. u \\<le> 1 \\<and> j = i * u", "apply (rule exI[where x=\"j/i\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < i; a \\<noteq> b; 0 \\<le> j; j \\<le> i\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> j / i \\<and>\n                      j / i \\<le> 1 \\<and> j = i * (j / i)", "by (auto simp: )"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma closed_segment_line_line_iff: \"{line a b i1--line a b i2} = line a b ` {i1..i2}\" if \"i1 \\<le> i2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {{a -- b}\\<^bsub>i1\\<^esub>--{a -- b}\\<^bsub>i2\\<^esub>} =\n    {a -- b}\\<^bsub>`{i1..i2}\\<^esub>", "using that"], ["proof (prove)\nusing this:\n  i1 \\<le> i2\n\ngoal (1 subgoal):\n 1. {{a -- b}\\<^bsub>i1\\<^esub>--{a -- b}\\<^bsub>i2\\<^esub>} =\n    {a -- b}\\<^bsub>`{i1..i2}\\<^esub>", "apply (auto simp: in_segment line_convex_combination12 intro!: imageI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>u.\n       \\<lbrakk>i1 \\<le> i2; 0 \\<le> u; u \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> i1 + u * (i2 - i1) \\<le> i2\n 2. \\<And>xa.\n       \\<lbrakk>i1 \\<le> xa; xa \\<le> i2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u\\<ge>0.\n                            u \\<le> 1 \\<and>\n                            (xa = i1 + u * (i2 - i1) \\<or> a = b)", "apply (smt mult_left_le_one_le)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>i1 \\<le> xa; xa \\<le> i2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u\\<ge>0.\n                            u \\<le> 1 \\<and>\n                            (xa = i1 + u * (i2 - i1) \\<or> a = b)", "subgoal for u"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i1 \\<le> u; u \\<le> i2\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua\\<ge>0.\n                         ua \\<le> 1 \\<and>\n                         (u = i1 + ua * (i2 - i1) \\<or> a = b)", "by (rule exI[where x=\"(u - i1)/(i2-i1)\"]) auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma line_line1: \"line (line a b c) b x = line a b (c + x - c * x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {{a -- b}\\<^bsub>c\\<^esub> -- b}\\<^bsub>x\\<^esub> =\n    {a -- b}\\<^bsub>c + x - c * x\\<^esub>", "by (simp add: line_def algebra_simps)"], ["", "lemma line_line2: \"line a (line a b c) x = line a b (c*x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a -- {a -- b}\\<^bsub>c\\<^esub>}\\<^bsub>x\\<^esub> =\n    {a -- b}\\<^bsub>c * x\\<^esub>", "by (simp add: line_def algebra_simps)"], ["", "lemma line_in_subsegment:\n  \"i1 < 1 \\<Longrightarrow> i2 < 1 \\<Longrightarrow> a \\<noteq> b \\<Longrightarrow> line a b i1 \\<in> {line a b i2<--<b} \\<longleftrightarrow> i2 < i1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i1 < 1; i2 < 1; a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> ({a -- b}\\<^bsub>i1\\<^esub>\n                       \\<in> {{a -- b}\\<^bsub>i2\\<^esub><--<b}) =\n                      (i2 < i1)", "by (auto simp: line_open_segment_iff intro!: imageI)"], ["", "lemma line_in_subsegment2:\n  \"0 < i2 \\<Longrightarrow> 0 < i1 \\<Longrightarrow> a \\<noteq> b \\<Longrightarrow> line a b i1 \\<in> {a<--<line a b i2} \\<longleftrightarrow> i1 < i2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < i2; 0 < i1; a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> ({a -- b}\\<^bsub>i1\\<^esub>\n                       \\<in> {a<--<{a -- b}\\<^bsub>i2\\<^esub>}) =\n                      (i1 < i2)", "by (auto simp: open_segment_line_iff intro!: imageI)"], ["", "lemma line_in_open_segment_iff[simp]:\n  \"line a b i \\<in> {a<--<b} \\<longleftrightarrow> (a \\<noteq> b \\<and> 0 < i \\<and> i < 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ({a -- b}\\<^bsub>i\\<^esub> \\<in> {a<--<b}) =\n    (a \\<noteq> b \\<and> 0 < i \\<and> i < 1)", "by (auto simp: in_open_segment_iff_line)"], ["", "subsection \\<open>Open Segments\\<close>"], ["", "lemma open_segment_subsegment:\n  assumes \"x1 \\<in> {x0<--<x3}\"\n    \"x2 \\<in> {x1<--<x3}\"\n  shows \"x1 \\<in> {x0<--<x2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x1 \\<in> {x0<--<x2}", "using assms"], ["proof (prove)\nusing this:\n  x1 \\<in> {x0<--<x3}\n  x2 \\<in> {x1<--<x3}\n\ngoal (1 subgoal):\n 1. x1 \\<in> {x0<--<x2}", "proof -\\<comment> \\<open>TODO: use \\<open>line\\<close>\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x1 \\<in> {x0<--<x3}; x2 \\<in> {x1<--<x3}\\<rbrakk>\n    \\<Longrightarrow> x1 \\<in> {x0<--<x2}", "from assms"], ["proof (chain)\npicking this:\n  x1 \\<in> {x0<--<x3}\n  x2 \\<in> {x1<--<x3}", "obtain u v::real where\n    ne: \"x0 \\<noteq> x3\" \"(1 - u) *\\<^sub>R x0 + u *\\<^sub>R x3 \\<noteq> x3\"\n    and x1_def: \"x1 = (1 - u) *\\<^sub>R x0 + u *\\<^sub>R x3\"\n    and x2_def: \"x2 = (1 - v) *\\<^sub>R ((1 - u) *\\<^sub>R x0 + u *\\<^sub>R x3) + v *\\<^sub>R x3\"\n    and uv: \\<open>0 < u\\<close> \\<open>0 < v\\<close> \\<open>u < 1\\<close> \\<open>v < 1\\<close>"], ["proof (prove)\nusing this:\n  x1 \\<in> {x0<--<x3}\n  x2 \\<in> {x1<--<x3}\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>x0 \\<noteq> x3;\n         (1 - u) *\\<^sub>R x0 + u *\\<^sub>R x3 \\<noteq> x3;\n         x1 = (1 - u) *\\<^sub>R x0 + u *\\<^sub>R x3;\n         x2 =\n         (1 - v) *\\<^sub>R ((1 - u) *\\<^sub>R x0 + u *\\<^sub>R x3) +\n         v *\\<^sub>R x3;\n         0 < u; 0 < v; u < 1; v < 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: in_segment)"], ["proof (state)\nthis:\n  x0 \\<noteq> x3\n  (1 - u) *\\<^sub>R x0 + u *\\<^sub>R x3 \\<noteq> x3\n  x1 = (1 - u) *\\<^sub>R x0 + u *\\<^sub>R x3\n  x2 =\n  (1 - v) *\\<^sub>R ((1 - u) *\\<^sub>R x0 + u *\\<^sub>R x3) + v *\\<^sub>R x3\n  0 < u\n  0 < v\n  u < 1\n  v < 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x1 \\<in> {x0<--<x3}; x2 \\<in> {x1<--<x3}\\<rbrakk>\n    \\<Longrightarrow> x1 \\<in> {x0<--<x2}", "let ?d = \"(u + v - u * v)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x1 \\<in> {x0<--<x3}; x2 \\<in> {x1<--<x3}\\<rbrakk>\n    \\<Longrightarrow> x1 \\<in> {x0<--<x2}", "have \"?d > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < u + v - u * v", "using uv"], ["proof (prove)\nusing this:\n  0 < u\n  0 < v\n  u < 1\n  v < 1\n\ngoal (1 subgoal):\n 1. 0 < u + v - u * v", "by (auto simp: add_nonneg_pos pos_add_strict)"], ["proof (state)\nthis:\n  0 < u + v - u * v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x1 \\<in> {x0<--<x3}; x2 \\<in> {x1<--<x3}\\<rbrakk>\n    \\<Longrightarrow> x1 \\<in> {x0<--<x2}", "with \\<open>x0 \\<noteq> x3\\<close>"], ["proof (chain)\npicking this:\n  x0 \\<noteq> x3\n  0 < u + v - u * v", "have \"0 \\<noteq> ?d *\\<^sub>R (x3 - x0)\""], ["proof (prove)\nusing this:\n  x0 \\<noteq> x3\n  0 < u + v - u * v\n\ngoal (1 subgoal):\n 1. (0::'a) \\<noteq> (u + v - u * v) *\\<^sub>R (x3 - x0)", "by simp"], ["proof (state)\nthis:\n  (0::'a) \\<noteq> (u + v - u * v) *\\<^sub>R (x3 - x0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x1 \\<in> {x0<--<x3}; x2 \\<in> {x1<--<x3}\\<rbrakk>\n    \\<Longrightarrow> x1 \\<in> {x0<--<x2}", "moreover"], ["proof (state)\nthis:\n  (0::'a) \\<noteq> (u + v - u * v) *\\<^sub>R (x3 - x0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x1 \\<in> {x0<--<x3}; x2 \\<in> {x1<--<x3}\\<rbrakk>\n    \\<Longrightarrow> x1 \\<in> {x0<--<x2}", "define ua where \"ua = u / ?d\""], ["proof (state)\nthis:\n  ua = u / (u + v - u * v)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x1 \\<in> {x0<--<x3}; x2 \\<in> {x1<--<x3}\\<rbrakk>\n    \\<Longrightarrow> x1 \\<in> {x0<--<x2}", "have \"ua * (u * v - u - v) - - u = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ua * (u * v - u - v) - - u = 0", "by (auto simp: ua_def algebra_simps divide_simps)\n      (metis uv add_less_same_cancel1 add_strict_mono mult.right_neutral\n        mult_less_cancel_left_pos not_real_square_gt_zero vector_space_over_itself.scale_zero_left)"], ["proof (state)\nthis:\n  ua * (u * v - u - v) - - u = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x1 \\<in> {x0<--<x3}; x2 \\<in> {x1<--<x3}\\<rbrakk>\n    \\<Longrightarrow> x1 \\<in> {x0<--<x2}", "then"], ["proof (chain)\npicking this:\n  ua * (u * v - u - v) - - u = 0", "have \"(ua * (u * v - u - v) - - u) *\\<^sub>R (x3 - x0) = 0\""], ["proof (prove)\nusing this:\n  ua * (u * v - u - v) - - u = 0\n\ngoal (1 subgoal):\n 1. (ua * (u * v - u - v) - - u) *\\<^sub>R (x3 - x0) = (0::'a)", "by simp"], ["proof (state)\nthis:\n  (ua * (u * v - u - v) - - u) *\\<^sub>R (x3 - x0) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x1 \\<in> {x0<--<x3}; x2 \\<in> {x1<--<x3}\\<rbrakk>\n    \\<Longrightarrow> x1 \\<in> {x0<--<x2}", "moreover"], ["proof (state)\nthis:\n  (ua * (u * v - u - v) - - u) *\\<^sub>R (x3 - x0) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x1 \\<in> {x0<--<x3}; x2 \\<in> {x1<--<x3}\\<rbrakk>\n    \\<Longrightarrow> x1 \\<in> {x0<--<x2}", "have \"0 < ua\" \"ua < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < ua &&& ua < 1", "using \\<open>0 < u\\<close> \\<open>0 < v\\<close> \\<open>u < 1\\<close> \\<open>v < 1\\<close>"], ["proof (prove)\nusing this:\n  0 < u\n  0 < v\n  u < 1\n  v < 1\n\ngoal (1 subgoal):\n 1. 0 < ua &&& ua < 1", "by (auto simp: ua_def pos_add_strict intro!: divide_pos_pos)"], ["proof (state)\nthis:\n  0 < ua\n  ua < 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x1 \\<in> {x0<--<x3}; x2 \\<in> {x1<--<x3}\\<rbrakk>\n    \\<Longrightarrow> x1 \\<in> {x0<--<x2}", "ultimately"], ["proof (chain)\npicking this:\n  (0::'a) \\<noteq> (u + v - u * v) *\\<^sub>R (x3 - x0)\n  (ua * (u * v - u - v) - - u) *\\<^sub>R (x3 - x0) = (0::'a)\n  0 < ua\n  ua < 1", "show ?thesis"], ["proof (prove)\nusing this:\n  (0::'a) \\<noteq> (u + v - u * v) *\\<^sub>R (x3 - x0)\n  (ua * (u * v - u - v) - - u) *\\<^sub>R (x3 - x0) = (0::'a)\n  0 < ua\n  ua < 1\n\ngoal (1 subgoal):\n 1. x1 \\<in> {x0<--<x2}", "unfolding x1_def x2_def"], ["proof (prove)\nusing this:\n  (0::'a) \\<noteq> (u + v - u * v) *\\<^sub>R (x3 - x0)\n  (ua * (u * v - u - v) - - u) *\\<^sub>R (x3 - x0) = (0::'a)\n  0 < ua\n  ua < 1\n\ngoal (1 subgoal):\n 1. (1 - u) *\\<^sub>R x0 + u *\\<^sub>R x3\n    \\<in> {x0<--<(1 - v) *\\<^sub>R ((1 - u) *\\<^sub>R x0 + u *\\<^sub>R x3) +\n                 v *\\<^sub>R x3}", "by (auto intro!: exI[where x=ua] simp: algebra_simps in_segment)"], ["proof (state)\nthis:\n  x1 \\<in> {x0<--<x2}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Syntax\\<close>"], ["", "abbreviation sequentially_at_top::\"(nat\\<Rightarrow>real)\\<Rightarrow>bool\"\n  (\"_ \\<longlonglongrightarrow>\\<^bsub>\\<^esub> \\<infinity>\") \\<comment> \\<open>the \\<open>\\<^bsub>\\<^esub>\\<close> is to disambiguate syntax...\\<close>\n  where \"s \\<longlonglongrightarrow>\\<^bsub>\\<^esub> \\<infinity>  \\<equiv> filterlim s at_top sequentially\""], ["", "abbreviation sequentially_at_bot::\"(nat\\<Rightarrow>real)\\<Rightarrow>bool\"\n  (\"_ \\<longlonglongrightarrow>\\<^bsub>\\<^esub> -\\<infinity>\")\n  where \"s \\<longlonglongrightarrow>\\<^bsub>\\<^esub> -\\<infinity>  \\<equiv> filterlim s at_bot sequentially\""], ["", "subsection \\<open>Paths\\<close>"], ["", "lemma subpath0_linepath:\n  shows \"subpath 0 u (linepath t t') = linepath t (t + u * (t' - t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subpath 0 u (linepath t t') = linepath t (t + u * (t' - t))", "unfolding subpath_def linepath_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        (1 - ((u - 0) * x + 0)) *\\<^sub>R t +\n        ((u - 0) * x + 0) *\\<^sub>R t') =\n    (\\<lambda>x. (1 - x) *\\<^sub>R t + x *\\<^sub>R (t + u * (t' - t)))", "apply (rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (1 - ((u - 0) * x + 0)) *\\<^sub>R t +\n       ((u - 0) * x + 0) *\\<^sub>R t' =\n       (1 - x) *\\<^sub>R t + x *\\<^sub>R (t + u * (t' - t))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (1 - u * x) * t + u * x * t' = (1 - x) * t + x * (t + u * (t' - t))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (1 - u * x) * t + u * x * t' = (1 - x) * t + x * (t + u * (t' - t))", "fix x :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (1 - u * x) * t + u * x * t' = (1 - x) * t + x * (t + u * (t' - t))", "have f1: \"\\<And>r ra rb rc. (r::real) + ra * rb - ra * rc = r - ra * (rc - rb)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r ra rb rc. r + ra * rb - ra * rc = r - ra * (rc - rb)", "by (simp add: right_diff_distrib')"], ["proof (state)\nthis:\n  ?r + ?ra * ?rb - ?ra * ?rc = ?r - ?ra * (?rc - ?rb)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (1 - u * x) * t + u * x * t' = (1 - x) * t + x * (t + u * (t' - t))", "have f2: \"\\<And>r ra. (r::real) - r * ra = r * (1 - ra)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r ra. r - r * ra = r * (1 - ra)", "by (simp add: right_diff_distrib')"], ["proof (state)\nthis:\n  ?r - ?r * ?ra = ?r * (1 - ?ra)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (1 - u * x) * t + u * x * t' = (1 - x) * t + x * (t + u * (t' - t))", "have f3: \"\\<And>r ra rb. (r::real) - ra + rb + ra - r = rb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r ra rb. r - ra + rb + ra - r = rb", "by auto"], ["proof (state)\nthis:\n  ?r - ?ra + ?rb + ?ra - ?r = ?rb\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (1 - u * x) * t + u * x * t' = (1 - x) * t + x * (t + u * (t' - t))", "have f4: \"\\<And>r. (r::real) + (1 - 1) = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r. r + (1 - 1) = r", "by linarith"], ["proof (state)\nthis:\n  ?r + (1 - 1) = ?r\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (1 - u * x) * t + u * x * t' = (1 - x) * t + x * (t + u * (t' - t))", "have f5: \"\\<And>r ra. (r::real) + ra = ra + r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r ra. r + ra = ra + r", "by force"], ["proof (state)\nthis:\n  ?r + ?ra = ?ra + ?r\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (1 - u * x) * t + u * x * t' = (1 - x) * t + x * (t + u * (t' - t))", "have f6: \"\\<And>r ra. (r::real) + (1 - (r + 1) + ra) = ra\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r ra. r + (1 - (r + 1) + ra) = ra", "by linarith"], ["proof (state)\nthis:\n  ?r + (1 - (?r + 1) + ?ra) = ?ra\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (1 - u * x) * t + u * x * t' = (1 - x) * t + x * (t + u * (t' - t))", "have \"t - x * (t - (t + u * (t' - t))) = t' * (u * x) + (t - t * (u * x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t - x * (t - (t + u * (t' - t))) = t' * (u * x) + (t - t * (u * x))", "by (simp add: right_diff_distrib')"], ["proof (state)\nthis:\n  t - x * (t - (t + u * (t' - t))) = t' * (u * x) + (t - t * (u * x))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (1 - u * x) * t + u * x * t' = (1 - x) * t + x * (t + u * (t' - t))", "then"], ["proof (chain)\npicking this:\n  t - x * (t - (t + u * (t' - t))) = t' * (u * x) + (t - t * (u * x))", "show \"(1 - u * x) * t + u * x * t' = (1 - x) * t + x * (t + u * (t' - t))\""], ["proof (prove)\nusing this:\n  t - x * (t - (t + u * (t' - t))) = t' * (u * x) + (t - t * (u * x))\n\ngoal (1 subgoal):\n 1. (1 - u * x) * t + u * x * t' = (1 - x) * t + x * (t + u * (t' - t))", "using f6 f5 f4 f3 f2 f1"], ["proof (prove)\nusing this:\n  t - x * (t - (t + u * (t' - t))) = t' * (u * x) + (t - t * (u * x))\n  ?r + (1 - (?r + 1) + ?ra) = ?ra\n  ?r + ?ra = ?ra + ?r\n  ?r + (1 - 1) = ?r\n  ?r - ?ra + ?rb + ?ra - ?r = ?rb\n  ?r - ?r * ?ra = ?r * (1 - ?ra)\n  ?r + ?ra * ?rb - ?ra * ?rc = ?r - ?ra * (?rc - ?rb)\n\ngoal (1 subgoal):\n 1. (1 - u * x) * t + u * x * t' = (1 - x) * t + x * (t + u * (t' - t))", "by (metis (no_types) mult.commute)"], ["proof (state)\nthis:\n  (1 - u * x) * t + u * x * t' = (1 - x) * t + x * (t + u * (t' - t))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma linepath_image0_right_open_real:\n  assumes \"t < (t'::real)\"\n  shows \"linepath t t' ` {0..<1} = {t..<t'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. linepath t t' ` {0..<1} = {t..<t'}", "unfolding linepath_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (1 - x) *\\<^sub>R t + x *\\<^sub>R t') ` {0..<1} = {t..<t'}", "apply auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>0 \\<le> xa; xa < 1\\<rbrakk>\n       \\<Longrightarrow> t \\<le> (1 - xa) * t + xa * t'\n 2. \\<And>xa.\n       \\<lbrakk>0 \\<le> xa; xa < 1\\<rbrakk>\n       \\<Longrightarrow> (1 - xa) * t + xa * t' < t'\n 3. \\<And>x.\n       \\<lbrakk>t \\<le> x; x < t'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<lambda>x. (1 - x) * t + x * t') `\n                                 {0..<1}", "apply (metis add.commute add_diff_cancel_left' assms diff_diff_eq2 diff_le_eq less_eq_real_def mult.commute mult.right_neutral mult_right_mono right_diff_distrib')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>0 \\<le> xa; xa < 1\\<rbrakk>\n       \\<Longrightarrow> (1 - xa) * t + xa * t' < t'\n 2. \\<And>x.\n       \\<lbrakk>t \\<le> x; x < t'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<lambda>x. (1 - x) * t + x * t') `\n                                 {0..<1}", "apply (smt assms comm_semiring_class.distrib mult_diff_mult semiring_normalization_rules(2) zero_le_mult_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>t \\<le> x; x < t'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<lambda>x. (1 - x) * t + x * t') `\n                                 {0..<1}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>t \\<le> x; x < t'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<lambda>x. (1 - x) * t + x * t') `\n                                 {0..<1}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>t \\<le> x; x < t'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<lambda>x. (1 - x) * t + x * t') `\n                                 {0..<1}", "assume \"t \\<le> x\" \"x < t'\""], ["proof (state)\nthis:\n  t \\<le> x\n  x < t'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>t \\<le> x; x < t'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<lambda>x. (1 - x) * t + x * t') `\n                                 {0..<1}", "let ?u = \"(x-t)/(t'-t)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>t \\<le> x; x < t'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<lambda>x. (1 - x) * t + x * t') `\n                                 {0..<1}", "have \"?u \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (x - t) / (t' - t)", "using \\<open>t \\<le> x\\<close> assms"], ["proof (prove)\nusing this:\n  t \\<le> x\n  t < t'\n\ngoal (1 subgoal):\n 1. 0 \\<le> (x - t) / (t' - t)", "by auto"], ["proof (state)\nthis:\n  0 \\<le> (x - t) / (t' - t)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>t \\<le> x; x < t'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<lambda>x. (1 - x) * t + x * t') `\n                                 {0..<1}", "moreover"], ["proof (state)\nthis:\n  0 \\<le> (x - t) / (t' - t)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>t \\<le> x; x < t'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<lambda>x. (1 - x) * t + x * t') `\n                                 {0..<1}", "have \"?u < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x - t) / (t' - t) < 1", "by (simp add: \\<open>x < t'\\<close> assms)"], ["proof (state)\nthis:\n  (x - t) / (t' - t) < 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>t \\<le> x; x < t'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<lambda>x. (1 - x) * t + x * t') `\n                                 {0..<1}", "moreover"], ["proof (state)\nthis:\n  (x - t) / (t' - t) < 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>t \\<le> x; x < t'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<lambda>x. (1 - x) * t + x * t') `\n                                 {0..<1}", "have \"x = (1-?u) * t + ?u*t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = (1 - (x - t) / (t' - t)) * t + (x - t) / (t' - t) * t'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x = (1 - (x - t) / (t' - t)) * t + (x - t) / (t' - t) * t'", "have f1: \"\\<forall>r ra. (ra::real) * - r = r * - ra\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r ra. ra * - r = r * - ra", "by simp"], ["proof (state)\nthis:\n  \\<forall>r ra. ra * - r = r * - ra\n\ngoal (1 subgoal):\n 1. x = (1 - (x - t) / (t' - t)) * t + (x - t) / (t' - t) * t'", "have \"t + (t' + - t) * ((x + - t) / (t' + - t)) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t + (t' + - t) * ((x + - t) / (t' + - t)) = x", "using assms"], ["proof (prove)\nusing this:\n  t < t'\n\ngoal (1 subgoal):\n 1. t + (t' + - t) * ((x + - t) / (t' + - t)) = x", "by force"], ["proof (state)\nthis:\n  t + (t' + - t) * ((x + - t) / (t' + - t)) = x\n\ngoal (1 subgoal):\n 1. x = (1 - (x - t) / (t' - t)) * t + (x - t) / (t' - t) * t'", "then"], ["proof (chain)\npicking this:\n  t + (t' + - t) * ((x + - t) / (t' + - t)) = x", "have \"t' * ((x + - t) / (t' + - t)) + t * (1 + - ((x + - t) / (t' + - t))) = x\""], ["proof (prove)\nusing this:\n  t + (t' + - t) * ((x + - t) / (t' + - t)) = x\n\ngoal (1 subgoal):\n 1. t' * ((x + - t) / (t' + - t)) + t * (1 + - ((x + - t) / (t' + - t))) = x", "using f1"], ["proof (prove)\nusing this:\n  t + (t' + - t) * ((x + - t) / (t' + - t)) = x\n  \\<forall>r ra. ra * - r = r * - ra\n\ngoal (1 subgoal):\n 1. t' * ((x + - t) / (t' + - t)) + t * (1 + - ((x + - t) / (t' + - t))) = x", "by (metis (no_types) add.left_commute distrib_left mult.commute mult.right_neutral)"], ["proof (state)\nthis:\n  t' * ((x + - t) / (t' + - t)) + t * (1 + - ((x + - t) / (t' + - t))) = x\n\ngoal (1 subgoal):\n 1. x = (1 - (x - t) / (t' - t)) * t + (x - t) / (t' - t) * t'", "then"], ["proof (chain)\npicking this:\n  t' * ((x + - t) / (t' + - t)) + t * (1 + - ((x + - t) / (t' + - t))) = x", "show ?thesis"], ["proof (prove)\nusing this:\n  t' * ((x + - t) / (t' + - t)) + t * (1 + - ((x + - t) / (t' + - t))) = x\n\ngoal (1 subgoal):\n 1. x = (1 - (x - t) / (t' - t)) * t + (x - t) / (t' - t) * t'", "by (simp add: mult.commute)"], ["proof (state)\nthis:\n  x = (1 - (x - t) / (t' - t)) * t + (x - t) / (t' - t) * t'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = (1 - (x - t) / (t' - t)) * t + (x - t) / (t' - t) * t'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>t \\<le> x; x < t'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<lambda>x. (1 - x) * t + x * t') `\n                                 {0..<1}", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> (x - t) / (t' - t)\n  (x - t) / (t' - t) < 1\n  x = (1 - (x - t) / (t' - t)) * t + (x - t) / (t' - t) * t'", "show \"x \\<in> (\\<lambda>x. (1 - x) * t + x * t') ` {0..<1}\""], ["proof (prove)\nusing this:\n  0 \\<le> (x - t) / (t' - t)\n  (x - t) / (t' - t) < 1\n  x = (1 - (x - t) / (t' - t)) * t + (x - t) / (t' - t) * t'\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x. (1 - x) * t + x * t') ` {0..<1}", "using atLeastLessThan_iff"], ["proof (prove)\nusing this:\n  0 \\<le> (x - t) / (t' - t)\n  (x - t) / (t' - t) < 1\n  x = (1 - (x - t) / (t' - t)) * t + (x - t) / (t' - t) * t'\n  (?i \\<in> {?l..<?u}) = (?l \\<le> ?i \\<and> ?i < ?u)\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x. (1 - x) * t + x * t') ` {0..<1}", "by blast"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>x. (1 - x) * t + x * t') ` {0..<1}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma oriented_subsegment_scale:\n  assumes \"x1 \\<in> {a<--<b}\"\n  assumes \"x2 \\<in> {x1<--<b}\"\n  obtains e where \"e > 0\" \"b-a = e *\\<^sub>R (x2-x1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e; b - a = e *\\<^sub>R (x2 - x1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e; b - a = e *\\<^sub>R (x2 - x1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms(1)"], ["proof (chain)\npicking this:\n  x1 \\<in> {a<--<b}", "obtain u where u : \"u > 0\" \"u < 1\" \"x1 = (1 - u) *\\<^sub>R a + u *\\<^sub>R b\""], ["proof (prove)\nusing this:\n  x1 \\<in> {a<--<b}\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>0 < u; u < 1;\n         x1 = (1 - u) *\\<^sub>R a + u *\\<^sub>R b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding in_segment"], ["proof (prove)\nusing this:\n  a \\<noteq> b \\<and>\n  (\\<exists>u>0. u < 1 \\<and> x1 = (1 - u) *\\<^sub>R a + u *\\<^sub>R b)\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>0 < u; u < 1;\n         x1 = (1 - u) *\\<^sub>R a + u *\\<^sub>R b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  0 < u\n  u < 1\n  x1 = (1 - u) *\\<^sub>R a + u *\\<^sub>R b\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e; b - a = e *\\<^sub>R (x2 - x1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms(2)"], ["proof (chain)\npicking this:\n  x2 \\<in> {x1<--<b}", "obtain v where v: \"v > 0\" \"v < 1\" \"x2 = (1 - v) *\\<^sub>R x1 + v *\\<^sub>R b\""], ["proof (prove)\nusing this:\n  x2 \\<in> {x1<--<b}\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>0 < v; v < 1;\n         x2 = (1 - v) *\\<^sub>R x1 + v *\\<^sub>R b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding in_segment"], ["proof (prove)\nusing this:\n  x1 \\<noteq> b \\<and>\n  (\\<exists>u>0. u < 1 \\<and> x2 = (1 - u) *\\<^sub>R x1 + u *\\<^sub>R b)\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>0 < v; v < 1;\n         x2 = (1 - v) *\\<^sub>R x1 + v *\\<^sub>R b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  0 < v\n  v < 1\n  x2 = (1 - v) *\\<^sub>R x1 + v *\\<^sub>R b\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e; b - a = e *\\<^sub>R (x2 - x1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"x2-x1 = -v *\\<^sub>R x1 + v *\\<^sub>R b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x2 - x1 = - v *\\<^sub>R x1 + v *\\<^sub>R b", "using v"], ["proof (prove)\nusing this:\n  0 < v\n  v < 1\n  x2 = (1 - v) *\\<^sub>R x1 + v *\\<^sub>R b\n\ngoal (1 subgoal):\n 1. x2 - x1 = - v *\\<^sub>R x1 + v *\\<^sub>R b", "by (metis add.commute add_diff_cancel_right diff_minus_eq_add scaleR_collapse scaleR_left.minus)"], ["proof (state)\nthis:\n  x2 - x1 = - v *\\<^sub>R x1 + v *\\<^sub>R b\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e; b - a = e *\\<^sub>R (x2 - x1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  x2 - x1 = - v *\\<^sub>R x1 + v *\\<^sub>R b\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e; b - a = e *\\<^sub>R (x2 - x1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"... = (-v) *\\<^sub>R ((1 - u) *\\<^sub>R a + u *\\<^sub>R b)  + v *\\<^sub>R b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - v *\\<^sub>R x1 + v *\\<^sub>R b =\n    - v *\\<^sub>R ((1 - u) *\\<^sub>R a + u *\\<^sub>R b) + v *\\<^sub>R b", "using u"], ["proof (prove)\nusing this:\n  0 < u\n  u < 1\n  x1 = (1 - u) *\\<^sub>R a + u *\\<^sub>R b\n\ngoal (1 subgoal):\n 1. - v *\\<^sub>R x1 + v *\\<^sub>R b =\n    - v *\\<^sub>R ((1 - u) *\\<^sub>R a + u *\\<^sub>R b) + v *\\<^sub>R b", "by auto"], ["proof (state)\nthis:\n  - v *\\<^sub>R x1 + v *\\<^sub>R b =\n  - v *\\<^sub>R ((1 - u) *\\<^sub>R a + u *\\<^sub>R b) + v *\\<^sub>R b\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e; b - a = e *\\<^sub>R (x2 - x1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  - v *\\<^sub>R x1 + v *\\<^sub>R b =\n  - v *\\<^sub>R ((1 - u) *\\<^sub>R a + u *\\<^sub>R b) + v *\\<^sub>R b\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e; b - a = e *\\<^sub>R (x2 - x1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"... = v *\\<^sub>R ((1-u)*\\<^sub>R b - (1-u)*\\<^sub>R a )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - v *\\<^sub>R ((1 - u) *\\<^sub>R a + u *\\<^sub>R b) + v *\\<^sub>R b =\n    v *\\<^sub>R ((1 - u) *\\<^sub>R b - (1 - u) *\\<^sub>R a)", "by (smt add_diff_cancel diff_diff_add diff_minus_eq_add minus_diff_eq scaleR_collapse scale_minus_left scale_right_diff_distrib)"], ["proof (state)\nthis:\n  - v *\\<^sub>R ((1 - u) *\\<^sub>R a + u *\\<^sub>R b) + v *\\<^sub>R b =\n  v *\\<^sub>R ((1 - u) *\\<^sub>R b - (1 - u) *\\<^sub>R a)\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e; b - a = e *\\<^sub>R (x2 - x1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  x2 - x1 = v *\\<^sub>R ((1 - u) *\\<^sub>R b - (1 - u) *\\<^sub>R a)", "have x2x1:\"x2-x1 = (v *(1-u)) *\\<^sub>R (b - a)\""], ["proof (prove)\nusing this:\n  x2 - x1 = v *\\<^sub>R ((1 - u) *\\<^sub>R b - (1 - u) *\\<^sub>R a)\n\ngoal (1 subgoal):\n 1. x2 - x1 = (v * (1 - u)) *\\<^sub>R (b - a)", "by (metis scaleR_scaleR scale_right_diff_distrib)"], ["proof (state)\nthis:\n  x2 - x1 = (v * (1 - u)) *\\<^sub>R (b - a)\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e; b - a = e *\\<^sub>R (x2 - x1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"v * (1-u) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < v * (1 - u)", "using u(2) v(1)"], ["proof (prove)\nusing this:\n  u < 1\n  0 < v\n\ngoal (1 subgoal):\n 1. 0 < v * (1 - u)", "by simp"], ["proof (state)\nthis:\n  0 < v * (1 - u)\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e; b - a = e *\\<^sub>R (x2 - x1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  0 < v * (1 - u)", "have \"(x2-x1)/\\<^sub>R (v * (1-u)) = (b-a)\""], ["proof (prove)\nusing this:\n  0 < v * (1 - u)\n\ngoal (1 subgoal):\n 1. (x2 - x1) /\\<^sub>R (v * (1 - u)) = b - a", "unfolding x2x1"], ["proof (prove)\nusing this:\n  0 < v * (1 - u)\n\ngoal (1 subgoal):\n 1. (v * (1 - u)) *\\<^sub>R (b - a) /\\<^sub>R (v * (1 - u)) = b - a", "by (smt field_class.field_inverse scaleR_one scaleR_scaleR)"], ["proof (state)\nthis:\n  (x2 - x1) /\\<^sub>R (v * (1 - u)) = b - a\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e; b - a = e *\\<^sub>R (x2 - x1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  (x2 - x1) /\\<^sub>R (v * (1 - u)) = b - a\n\ngoal (1 subgoal):\n 1. thesis", "using \\<open>0 < v * (1 - u)\\<close> positive_imp_inverse_positive that"], ["proof (prove)\nusing this:\n  (x2 - x1) /\\<^sub>R (v * (1 - u)) = b - a\n  0 < v * (1 - u)\n  (0::?'a) < ?a \\<Longrightarrow> (0::?'a) < inverse ?a\n  \\<lbrakk>0 < ?e; b - a = ?e *\\<^sub>R (x2 - x1)\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by fastforce"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}