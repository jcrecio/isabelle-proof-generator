{"file_name": "/home/qj213/afp-2021-10-22/thys/Poincare_Bendixson/Affine_Arithmetic_Misc.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Poincare_Bendixson", "problem_names": ["lemma prove_nonneg_simps[simp]:\n  \"prove_nonneg prnt 0 p slp X = False\"\n  \"prove_nonneg prnt (Suc i) p slp XXS =\n    (case XXS of [] \\<Rightarrow> True | (X#XS) \\<Rightarrow>\n      let RS = approx_slp_outer p 1 slp X\n      in if RS\\<noteq>None \\<and> Inf_aform' p (hd (the RS)) \\<ge> 0\n        then prove_nonneg prnt i p slp XS\n        else case split_aforms_largest_uncond X of (a, b) \\<Rightarrow> prove_nonneg prnt i p slp (a#b#XS))\"", "lemmas [simp del] = prove_nonneg.simps", "lemma split_aforms_lemma:\n  fixes xs::\"real list\"\n  assumes \"split_aforms XS i = (YS, ZS)\"\n  assumes \"xs \\<in> Joints XS\"\n  shows \"xs \\<in> Joints YS \\<union> Joints ZS\"", "lemma prove_nonneg_empty[simp]: \"prove_nonneg prnt (Suc i) p slp []\"", "lemma prove_nonneg_fuel_mono:\n  \"prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS\"\n  if \"prove_nonneg prnt i p (slp_of_fas [fa]) YSS\"", "lemma prove_nonneg_mono:\n  \"prove_nonneg prnt i p (slp_of_fas [fa]) YSS\" if \"prove_nonneg prnt i p (slp_of_fas [fa]) (YS # YSS)\"", "lemma prove_nonneg:\n  assumes \"prove_nonneg prnt i p (slp_of_fas [fa]) XSS\"\n  shows \"\\<forall>XS \\<in> set XSS. \\<forall>xs \\<in> Joints XS. interpret_floatarith fa xs \\<ge> 0\""], "translations": [["", "lemma prove_nonneg_simps[simp]:\n  \"prove_nonneg prnt 0 p slp X = False\"\n  \"prove_nonneg prnt (Suc i) p slp XXS =\n    (case XXS of [] \\<Rightarrow> True | (X#XS) \\<Rightarrow>\n      let RS = approx_slp_outer p 1 slp X\n      in if RS\\<noteq>None \\<and> Inf_aform' p (hd (the RS)) \\<ge> 0\n        then prove_nonneg prnt i p slp XS\n        else case split_aforms_largest_uncond X of (a, b) \\<Rightarrow> prove_nonneg prnt i p slp (a#b#XS))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prove_nonneg prnt 0 p slp X = False &&&\n    prove_nonneg prnt (Suc i) p slp XXS =\n    (case XXS of [] \\<Rightarrow> True\n     | X # XS \\<Rightarrow>\n         let RS = approx_slp_outer p 1 slp X\n         in if RS \\<noteq> None \\<and> 0 \\<le> Inf_aform' p (hd (the RS))\n            then prove_nonneg prnt i p slp XS\n            else case split_aforms_largest_uncond X of\n                 (a, b) \\<Rightarrow>\n                   prove_nonneg prnt i p slp (a # b # XS))", "by (auto simp: Let_def split: if_splits option.splits list.splits)"], ["", "lemmas [simp del] = prove_nonneg.simps"], ["", "lemma split_aforms_lemma:\n  fixes xs::\"real list\"\n  assumes \"split_aforms XS i = (YS, ZS)\"\n  assumes \"xs \\<in> Joints XS\"\n  shows \"xs \\<in> Joints YS \\<union> Joints ZS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<in> Joints YS \\<union> Joints ZS", "using set_rev_mp[OF assms(2) Joints_map_split_aform[of XS i]] assms(1)"], ["proof (prove)\nusing this:\n  xs \\<in> Joints (map (\\<lambda>a. fst (split_aform a i)) XS) \\<union>\n           Joints (map (\\<lambda>b. snd (split_aform b i)) XS)\n  split_aforms XS i = (YS, ZS)\n\ngoal (1 subgoal):\n 1. xs \\<in> Joints YS \\<union> Joints ZS", "by (auto simp: split_aforms_def o_def)"], ["", "lemma prove_nonneg_empty[simp]: \"prove_nonneg prnt (Suc i) p slp []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prove_nonneg prnt (Suc i) p slp []", "by simp"], ["", "lemma prove_nonneg_fuel_mono:\n  \"prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS\"\n  if \"prove_nonneg prnt i p (slp_of_fas [fa]) YSS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS", "using that"], ["proof (prove)\nusing this:\n  prove_nonneg prnt i p (slp_of_fas [fa]) YSS\n\ngoal (1 subgoal):\n 1. prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS", "proof (induction i arbitrary: YSS)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>YSS.\n       prove_nonneg prnt 0 p (slp_of_fas [fa]) YSS \\<Longrightarrow>\n       prove_nonneg prnt (Suc 0) p (slp_of_fas [fa]) YSS\n 2. \\<And>i YSS.\n       \\<lbrakk>\\<And>YSS.\n                   prove_nonneg prnt i p (slp_of_fas [fa])\n                    YSS \\<Longrightarrow>\n                   prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS;\n        prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc (Suc i)) p (slp_of_fas [fa])\n                          YSS", "case 0"], ["proof (state)\nthis:\n  prove_nonneg prnt 0 p (slp_of_fas [fa]) YSS\n\ngoal (2 subgoals):\n 1. \\<And>YSS.\n       prove_nonneg prnt 0 p (slp_of_fas [fa]) YSS \\<Longrightarrow>\n       prove_nonneg prnt (Suc 0) p (slp_of_fas [fa]) YSS\n 2. \\<And>i YSS.\n       \\<lbrakk>\\<And>YSS.\n                   prove_nonneg prnt i p (slp_of_fas [fa])\n                    YSS \\<Longrightarrow>\n                   prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS;\n        prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc (Suc i)) p (slp_of_fas [fa])\n                          YSS", "then"], ["proof (chain)\npicking this:\n  prove_nonneg prnt 0 p (slp_of_fas [fa]) YSS", "show ?case"], ["proof (prove)\nusing this:\n  prove_nonneg prnt 0 p (slp_of_fas [fa]) YSS\n\ngoal (1 subgoal):\n 1. prove_nonneg prnt (Suc 0) p (slp_of_fas [fa]) YSS", "by simp"], ["proof (state)\nthis:\n  prove_nonneg prnt (Suc 0) p (slp_of_fas [fa]) YSS\n\ngoal (1 subgoal):\n 1. \\<And>i YSS.\n       \\<lbrakk>\\<And>YSS.\n                   prove_nonneg prnt i p (slp_of_fas [fa])\n                    YSS \\<Longrightarrow>\n                   prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS;\n        prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc (Suc i)) p (slp_of_fas [fa])\n                          YSS", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i YSS.\n       \\<lbrakk>\\<And>YSS.\n                   prove_nonneg prnt i p (slp_of_fas [fa])\n                    YSS \\<Longrightarrow>\n                   prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS;\n        prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc (Suc i)) p (slp_of_fas [fa])\n                          YSS", "case (Suc i)"], ["proof (state)\nthis:\n  prove_nonneg prnt i p (slp_of_fas [fa]) ?YSS \\<Longrightarrow>\n  prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) ?YSS\n  prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS\n\ngoal (1 subgoal):\n 1. \\<And>i YSS.\n       \\<lbrakk>\\<And>YSS.\n                   prove_nonneg prnt i p (slp_of_fas [fa])\n                    YSS \\<Longrightarrow>\n                   prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS;\n        prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc (Suc i)) p (slp_of_fas [fa])\n                          YSS", "from Suc.prems"], ["proof (chain)\npicking this:\n  prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS", "show ?case"], ["proof (prove)\nusing this:\n  prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS\n\ngoal (1 subgoal):\n 1. prove_nonneg prnt (Suc (Suc i)) p (slp_of_fas [fa]) YSS", "supply [simp del] = prove_nonneg_simps"], ["proof (prove)\nusing this:\n  prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS\n\ngoal (1 subgoal):\n 1. prove_nonneg prnt (Suc (Suc i)) p (slp_of_fas [fa]) YSS", "apply (subst prove_nonneg_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS \\<Longrightarrow>\n    case YSS of [] \\<Rightarrow> True\n    | X # XS \\<Rightarrow>\n        let RS = approx_slp_outer p 1 (slp_of_fas [fa]) X\n        in if RS \\<noteq> None \\<and> 0 \\<le> Inf_aform' p (hd (the RS))\n           then prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) XS\n           else case split_aforms_largest_uncond X of\n                (a, b) \\<Rightarrow>\n                  prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (a # b # XS)", "apply (auto simp: Let_def split: if_splits option.splits list.splits)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x21 x22 y.\n       \\<lbrakk>prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (x21 # x22);\n        YSS = x21 # x22; 0 \\<le> Inf_aform' p (hd y);\n        approx_slp_outer p (Suc 0) (slp_of_fas [fa]) x21 = Some y\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) x22\n 2. \\<And>x21 x22 a b.\n       \\<lbrakk>prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (x21 # x22);\n        YSS = x21 # x22;\n        approx_slp_outer p (Suc 0) (slp_of_fas [fa]) x21 = None;\n        split_aforms_largest_uncond x21 = (a, b)\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa])\n                          (a # b # x22)\n 3. \\<And>x21 x22 a b.\n       \\<lbrakk>prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (x21 # x22);\n        YSS = x21 # x22;\n        \\<not> 0 \\<le> Inf_aform' p\n                        (hd (the (approx_slp_outer p (Suc 0)\n                                   (slp_of_fas [fa]) x21)));\n        split_aforms_largest_uncond x21 = (a, b)\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa])\n                          (a # b # x22)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (x21_ # x22_);\n     YSS = x21_ # x22_; 0 \\<le> Inf_aform' p (hd y_);\n     approx_slp_outer p (Suc 0) (slp_of_fas [fa]) x21_ = Some y_\\<rbrakk>\n    \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) x22_", "apply (rule Suc.IH)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (x21_ # x22_);\n     YSS = x21_ # x22_; 0 \\<le> Inf_aform' p (hd y_);\n     approx_slp_outer p (Suc 0) (slp_of_fas [fa]) x21_ = Some y_\\<rbrakk>\n    \\<Longrightarrow> prove_nonneg prnt i p (slp_of_fas [fa]) x22_", "apply (subst (asm) prove_nonneg_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>case x21_ # x22_ of [] \\<Rightarrow> True\n             | X # XS \\<Rightarrow>\n                 let RS = approx_slp_outer p 1 (slp_of_fas [fa]) X\n                 in if RS \\<noteq> None \\<and>\n                       0 \\<le> Inf_aform' p (hd (the RS))\n                    then prove_nonneg prnt i p (slp_of_fas [fa]) XS\n                    else case split_aforms_largest_uncond X of\n                         (a, b) \\<Rightarrow>\n                           prove_nonneg prnt i p (slp_of_fas [fa])\n                            (a # b # XS);\n     YSS = x21_ # x22_; 0 \\<le> Inf_aform' p (hd y_);\n     approx_slp_outer p (Suc 0) (slp_of_fas [fa]) x21_ = Some y_\\<rbrakk>\n    \\<Longrightarrow> prove_nonneg prnt i p (slp_of_fas [fa]) x22_", "by (auto simp: Let_def split: if_splits option.splits list.splits)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x21 x22 a b.\n       \\<lbrakk>prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (x21 # x22);\n        YSS = x21 # x22;\n        approx_slp_outer p (Suc 0) (slp_of_fas [fa]) x21 = None;\n        split_aforms_largest_uncond x21 = (a, b)\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa])\n                          (a # b # x22)\n 2. \\<And>x21 x22 a b.\n       \\<lbrakk>prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (x21 # x22);\n        YSS = x21 # x22;\n        \\<not> 0 \\<le> Inf_aform' p\n                        (hd (the (approx_slp_outer p (Suc 0)\n                                   (slp_of_fas [fa]) x21)));\n        split_aforms_largest_uncond x21 = (a, b)\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa])\n                          (a # b # x22)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (x21_ # x22_);\n     YSS = x21_ # x22_;\n     approx_slp_outer p (Suc 0) (slp_of_fas [fa]) x21_ = None;\n     split_aforms_largest_uncond x21_ = (a_, b_)\\<rbrakk>\n    \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa])\n                       (a_ # b_ # x22_)", "apply (rule Suc.IH)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (x21_ # x22_);\n     YSS = x21_ # x22_;\n     approx_slp_outer p (Suc 0) (slp_of_fas [fa]) x21_ = None;\n     split_aforms_largest_uncond x21_ = (a_, b_)\\<rbrakk>\n    \\<Longrightarrow> prove_nonneg prnt i p (slp_of_fas [fa])\n                       (a_ # b_ # x22_)", "apply (subst (asm) prove_nonneg.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>case x21_ # x22_ of [] \\<Rightarrow> True\n             | X # XS \\<Rightarrow>\n                 let RS = approx_slp_outer p 1 (slp_of_fas [fa]) X\n                 in if RS \\<noteq> None \\<and>\n                       0 \\<le> Inf_aform' p (hd (the RS))\n                    then let _ = if prnt \\<noteq> []\n                                 then print STR ''# Success\\<newline>''\n                                 else ();\n                             _ = if prnt \\<noteq> []\n                                 then print_string\n ((shows ''# '' \\<circ>\\<circ> shows_box_of_aforms_hr) X ''\\<newline>'')\n                                 else ();\n                             _ = fold\n                                  (\\<lambda>(a, b, c) _.\nprint_string (shows_segments_of_aform a b X c ''\\<newline>''))\n                                  prnt ()\n                         in prove_nonneg prnt i p (slp_of_fas [fa]) XS\n                    else let _ = if prnt \\<noteq> []\n                                 then print STR ''# Split\\<newline>''\n                                 else ()\n                         in case split_aforms_largest_uncond X of\n                            (a, b) \\<Rightarrow>\n                              prove_nonneg prnt i p (slp_of_fas [fa])\n                               (a # b # XS);\n     YSS = x21_ # x22_;\n     approx_slp_outer p (Suc 0) (slp_of_fas [fa]) x21_ = None;\n     split_aforms_largest_uncond x21_ = (a_, b_)\\<rbrakk>\n    \\<Longrightarrow> prove_nonneg prnt i p (slp_of_fas [fa])\n                       (a_ # b_ # x22_)", "by (auto simp: Let_def split: if_splits option.splits list.splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 a b.\n       \\<lbrakk>prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (x21 # x22);\n        YSS = x21 # x22;\n        \\<not> 0 \\<le> Inf_aform' p\n                        (hd (the (approx_slp_outer p (Suc 0)\n                                   (slp_of_fas [fa]) x21)));\n        split_aforms_largest_uncond x21 = (a, b)\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa])\n                          (a # b # x22)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (x21_ # x22_);\n     YSS = x21_ # x22_;\n     \\<not> 0 \\<le> Inf_aform' p\n                     (hd (the (approx_slp_outer p (Suc 0) (slp_of_fas [fa])\n                                x21_)));\n     split_aforms_largest_uncond x21_ = (a_, b_)\\<rbrakk>\n    \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa])\n                       (a_ # b_ # x22_)", "apply (rule Suc.IH)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (x21_ # x22_);\n     YSS = x21_ # x22_;\n     \\<not> 0 \\<le> Inf_aform' p\n                     (hd (the (approx_slp_outer p (Suc 0) (slp_of_fas [fa])\n                                x21_)));\n     split_aforms_largest_uncond x21_ = (a_, b_)\\<rbrakk>\n    \\<Longrightarrow> prove_nonneg prnt i p (slp_of_fas [fa])\n                       (a_ # b_ # x22_)", "apply (subst (asm) prove_nonneg.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>case x21_ # x22_ of [] \\<Rightarrow> True\n             | X # XS \\<Rightarrow>\n                 let RS = approx_slp_outer p 1 (slp_of_fas [fa]) X\n                 in if RS \\<noteq> None \\<and>\n                       0 \\<le> Inf_aform' p (hd (the RS))\n                    then let _ = if prnt \\<noteq> []\n                                 then print STR ''# Success\\<newline>''\n                                 else ();\n                             _ = if prnt \\<noteq> []\n                                 then print_string\n ((shows ''# '' \\<circ>\\<circ> shows_box_of_aforms_hr) X ''\\<newline>'')\n                                 else ();\n                             _ = fold\n                                  (\\<lambda>(a, b, c) _.\nprint_string (shows_segments_of_aform a b X c ''\\<newline>''))\n                                  prnt ()\n                         in prove_nonneg prnt i p (slp_of_fas [fa]) XS\n                    else let _ = if prnt \\<noteq> []\n                                 then print STR ''# Split\\<newline>''\n                                 else ()\n                         in case split_aforms_largest_uncond X of\n                            (a, b) \\<Rightarrow>\n                              prove_nonneg prnt i p (slp_of_fas [fa])\n                               (a # b # XS);\n     YSS = x21_ # x22_;\n     \\<not> 0 \\<le> Inf_aform' p\n                     (hd (the (approx_slp_outer p (Suc 0) (slp_of_fas [fa])\n                                x21_)));\n     split_aforms_largest_uncond x21_ = (a_, b_)\\<rbrakk>\n    \\<Longrightarrow> prove_nonneg prnt i p (slp_of_fas [fa])\n                       (a_ # b_ # x22_)", "by (auto simp: Let_def split: if_splits option.splits list.splits)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  prove_nonneg prnt (Suc (Suc i)) p (slp_of_fas [fa]) YSS\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prove_nonneg_mono:\n  \"prove_nonneg prnt i p (slp_of_fas [fa]) YSS\" if \"prove_nonneg prnt i p (slp_of_fas [fa]) (YS # YSS)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prove_nonneg prnt i p (slp_of_fas [fa]) YSS", "using that"], ["proof (prove)\nusing this:\n  prove_nonneg prnt i p (slp_of_fas [fa]) (YS # YSS)\n\ngoal (1 subgoal):\n 1. prove_nonneg prnt i p (slp_of_fas [fa]) YSS", "proof (induction i arbitrary: YS YSS)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>YS YSS.\n       prove_nonneg prnt 0 p (slp_of_fas [fa]) (YS # YSS) \\<Longrightarrow>\n       prove_nonneg prnt 0 p (slp_of_fas [fa]) YSS\n 2. \\<And>i YS YSS.\n       \\<lbrakk>\\<And>YS YSS.\n                   prove_nonneg prnt i p (slp_of_fas [fa])\n                    (YS # YSS) \\<Longrightarrow>\n                   prove_nonneg prnt i p (slp_of_fas [fa]) YSS;\n        prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (YS # YSS)\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS", "case 0"], ["proof (state)\nthis:\n  prove_nonneg prnt 0 p (slp_of_fas [fa]) (YS # YSS)\n\ngoal (2 subgoals):\n 1. \\<And>YS YSS.\n       prove_nonneg prnt 0 p (slp_of_fas [fa]) (YS # YSS) \\<Longrightarrow>\n       prove_nonneg prnt 0 p (slp_of_fas [fa]) YSS\n 2. \\<And>i YS YSS.\n       \\<lbrakk>\\<And>YS YSS.\n                   prove_nonneg prnt i p (slp_of_fas [fa])\n                    (YS # YSS) \\<Longrightarrow>\n                   prove_nonneg prnt i p (slp_of_fas [fa]) YSS;\n        prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (YS # YSS)\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS", "then"], ["proof (chain)\npicking this:\n  prove_nonneg prnt 0 p (slp_of_fas [fa]) (YS # YSS)", "show ?case"], ["proof (prove)\nusing this:\n  prove_nonneg prnt 0 p (slp_of_fas [fa]) (YS # YSS)\n\ngoal (1 subgoal):\n 1. prove_nonneg prnt 0 p (slp_of_fas [fa]) YSS", "by auto"], ["proof (state)\nthis:\n  prove_nonneg prnt 0 p (slp_of_fas [fa]) YSS\n\ngoal (1 subgoal):\n 1. \\<And>i YS YSS.\n       \\<lbrakk>\\<And>YS YSS.\n                   prove_nonneg prnt i p (slp_of_fas [fa])\n                    (YS # YSS) \\<Longrightarrow>\n                   prove_nonneg prnt i p (slp_of_fas [fa]) YSS;\n        prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (YS # YSS)\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i YS YSS.\n       \\<lbrakk>\\<And>YS YSS.\n                   prove_nonneg prnt i p (slp_of_fas [fa])\n                    (YS # YSS) \\<Longrightarrow>\n                   prove_nonneg prnt i p (slp_of_fas [fa]) YSS;\n        prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (YS # YSS)\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS", "case (Suc i)"], ["proof (state)\nthis:\n  prove_nonneg prnt i p (slp_of_fas [fa]) (?YS # ?YSS) \\<Longrightarrow>\n  prove_nonneg prnt i p (slp_of_fas [fa]) ?YSS\n  prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (YS # YSS)\n\ngoal (1 subgoal):\n 1. \\<And>i YS YSS.\n       \\<lbrakk>\\<And>YS YSS.\n                   prove_nonneg prnt i p (slp_of_fas [fa])\n                    (YS # YSS) \\<Longrightarrow>\n                   prove_nonneg prnt i p (slp_of_fas [fa]) YSS;\n        prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (YS # YSS)\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS", "from Suc.prems"], ["proof (chain)\npicking this:\n  prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (YS # YSS)", "show ?case"], ["proof (prove)\nusing this:\n  prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (YS # YSS)\n\ngoal (1 subgoal):\n 1. prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS", "supply [simp del] = prove_nonneg_simps"], ["proof (prove)\nusing this:\n  prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) (YS # YSS)\n\ngoal (1 subgoal):\n 1. prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS", "apply (subst (asm) prove_nonneg_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. case YS # YSS of [] \\<Rightarrow> True\n    | X # XS \\<Rightarrow>\n        let RS = approx_slp_outer p 1 (slp_of_fas [fa]) X\n        in if RS \\<noteq> None \\<and> 0 \\<le> Inf_aform' p (hd (the RS))\n           then prove_nonneg prnt i p (slp_of_fas [fa]) XS\n           else case split_aforms_largest_uncond X of\n                (a, b) \\<Rightarrow>\n                  prove_nonneg prnt i p (slp_of_fas [fa])\n                   (a # b # XS) \\<Longrightarrow>\n    prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS", "apply (auto simp: Let_def split: if_splits option.splits list.splits)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>0 \\<le> Inf_aform' p (hd y);\n        approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = Some y;\n        prove_nonneg prnt i p (slp_of_fas [fa]) YSS\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS\n 2. \\<And>x y.\n       \\<lbrakk>split_aforms_largest_uncond YS = (x, y);\n        prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n        approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = None\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS\n 3. \\<And>x y.\n       \\<lbrakk>split_aforms_largest_uncond YS = (x, y);\n        prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n        \\<not> 0 \\<le> Inf_aform' p\n                        (hd (the (approx_slp_outer p (Suc 0)\n                                   (slp_of_fas [fa]) YS)))\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> Inf_aform' p (hd y_);\n     approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = Some y_;\n     prove_nonneg prnt i p (slp_of_fas [fa]) YSS\\<rbrakk>\n    \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS", "by (rule prove_nonneg_fuel_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>split_aforms_largest_uncond YS = (x, y);\n        prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n        approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = None\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS\n 2. \\<And>x y.\n       \\<lbrakk>split_aforms_largest_uncond YS = (x, y);\n        prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n        \\<not> 0 \\<le> Inf_aform' p\n                        (hd (the (approx_slp_outer p (Suc 0)\n                                   (slp_of_fas [fa]) YS)))\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS", "subgoal for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>split_aforms_largest_uncond YS = (x, y);\n     prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n     approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = None\\<rbrakk>\n    \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS", "apply (rule prove_nonneg_fuel_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>split_aforms_largest_uncond YS = (x, y);\n     prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n     approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = None\\<rbrakk>\n    \\<Longrightarrow> prove_nonneg prnt i p (slp_of_fas [fa]) YSS", "apply (rule Suc.IH[of y])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>split_aforms_largest_uncond YS = (x, y);\n     prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n     approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = None\\<rbrakk>\n    \\<Longrightarrow> prove_nonneg prnt i p (slp_of_fas [fa]) (y # YSS)", "by (rule Suc.IH[of x])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>split_aforms_largest_uncond YS = (x, y);\n        prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n        \\<not> 0 \\<le> Inf_aform' p\n                        (hd (the (approx_slp_outer p (Suc 0)\n                                   (slp_of_fas [fa]) YS)))\\<rbrakk>\n       \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS", "subgoal for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>split_aforms_largest_uncond YS = (x, y);\n     prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n     \\<not> 0 \\<le> Inf_aform' p\n                     (hd (the (approx_slp_outer p (Suc 0) (slp_of_fas [fa])\n                                YS)))\\<rbrakk>\n    \\<Longrightarrow> prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS", "apply (rule prove_nonneg_fuel_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>split_aforms_largest_uncond YS = (x, y);\n     prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n     \\<not> 0 \\<le> Inf_aform' p\n                     (hd (the (approx_slp_outer p (Suc 0) (slp_of_fas [fa])\n                                YS)))\\<rbrakk>\n    \\<Longrightarrow> prove_nonneg prnt i p (slp_of_fas [fa]) YSS", "apply (rule Suc.IH[of y])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>split_aforms_largest_uncond YS = (x, y);\n     prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n     \\<not> 0 \\<le> Inf_aform' p\n                     (hd (the (approx_slp_outer p (Suc 0) (slp_of_fas [fa])\n                                YS)))\\<rbrakk>\n    \\<Longrightarrow> prove_nonneg prnt i p (slp_of_fas [fa]) (y # YSS)", "by (rule Suc.IH[of x])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) YSS\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prove_nonneg:\n  assumes \"prove_nonneg prnt i p (slp_of_fas [fa]) XSS\"\n  shows \"\\<forall>XS \\<in> set XSS. \\<forall>xs \\<in> Joints XS. interpret_floatarith fa xs \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>XS\\<in>set XSS.\n       \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs", "using assms"], ["proof (prove)\nusing this:\n  prove_nonneg prnt i p (slp_of_fas [fa]) XSS\n\ngoal (1 subgoal):\n 1. \\<forall>XS\\<in>set XSS.\n       \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs", "proof (induction i arbitrary: XSS)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>XSS.\n       prove_nonneg prnt 0 p (slp_of_fas [fa]) XSS \\<Longrightarrow>\n       \\<forall>XS\\<in>set XSS.\n          \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs\n 2. \\<And>i XSS.\n       \\<lbrakk>\\<And>XSS.\n                   prove_nonneg prnt i p (slp_of_fas [fa])\n                    XSS \\<Longrightarrow>\n                   \\<forall>XS\\<in>set XSS.\n                      \\<forall>xs\\<in>Joints XS.\n                         0 \\<le> interpret_floatarith fa xs;\n        prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) XSS\\<rbrakk>\n       \\<Longrightarrow> \\<forall>XS\\<in>set XSS.\n                            \\<forall>xs\\<in>Joints XS.\n                               0 \\<le> interpret_floatarith fa xs", "case 0"], ["proof (state)\nthis:\n  prove_nonneg prnt 0 p (slp_of_fas [fa]) XSS\n\ngoal (2 subgoals):\n 1. \\<And>XSS.\n       prove_nonneg prnt 0 p (slp_of_fas [fa]) XSS \\<Longrightarrow>\n       \\<forall>XS\\<in>set XSS.\n          \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs\n 2. \\<And>i XSS.\n       \\<lbrakk>\\<And>XSS.\n                   prove_nonneg prnt i p (slp_of_fas [fa])\n                    XSS \\<Longrightarrow>\n                   \\<forall>XS\\<in>set XSS.\n                      \\<forall>xs\\<in>Joints XS.\n                         0 \\<le> interpret_floatarith fa xs;\n        prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) XSS\\<rbrakk>\n       \\<Longrightarrow> \\<forall>XS\\<in>set XSS.\n                            \\<forall>xs\\<in>Joints XS.\n                               0 \\<le> interpret_floatarith fa xs", "then"], ["proof (chain)\npicking this:\n  prove_nonneg prnt 0 p (slp_of_fas [fa]) XSS", "show ?case"], ["proof (prove)\nusing this:\n  prove_nonneg prnt 0 p (slp_of_fas [fa]) XSS\n\ngoal (1 subgoal):\n 1. \\<forall>XS\\<in>set XSS.\n       \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs", "by (auto )"], ["proof (state)\nthis:\n  \\<forall>XS\\<in>set XSS.\n     \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs\n\ngoal (1 subgoal):\n 1. \\<And>i XSS.\n       \\<lbrakk>\\<And>XSS.\n                   prove_nonneg prnt i p (slp_of_fas [fa])\n                    XSS \\<Longrightarrow>\n                   \\<forall>XS\\<in>set XSS.\n                      \\<forall>xs\\<in>Joints XS.\n                         0 \\<le> interpret_floatarith fa xs;\n        prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) XSS\\<rbrakk>\n       \\<Longrightarrow> \\<forall>XS\\<in>set XSS.\n                            \\<forall>xs\\<in>Joints XS.\n                               0 \\<le> interpret_floatarith fa xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i XSS.\n       \\<lbrakk>\\<And>XSS.\n                   prove_nonneg prnt i p (slp_of_fas [fa])\n                    XSS \\<Longrightarrow>\n                   \\<forall>XS\\<in>set XSS.\n                      \\<forall>xs\\<in>Joints XS.\n                         0 \\<le> interpret_floatarith fa xs;\n        prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) XSS\\<rbrakk>\n       \\<Longrightarrow> \\<forall>XS\\<in>set XSS.\n                            \\<forall>xs\\<in>Joints XS.\n                               0 \\<le> interpret_floatarith fa xs", "case (Suc i)"], ["proof (state)\nthis:\n  prove_nonneg prnt i p (slp_of_fas [fa]) ?XSS \\<Longrightarrow>\n  \\<forall>XS\\<in>set ?XSS.\n     \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs\n  prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) XSS\n\ngoal (1 subgoal):\n 1. \\<And>i XSS.\n       \\<lbrakk>\\<And>XSS.\n                   prove_nonneg prnt i p (slp_of_fas [fa])\n                    XSS \\<Longrightarrow>\n                   \\<forall>XS\\<in>set XSS.\n                      \\<forall>xs\\<in>Joints XS.\n                         0 \\<le> interpret_floatarith fa xs;\n        prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) XSS\\<rbrakk>\n       \\<Longrightarrow> \\<forall>XS\\<in>set XSS.\n                            \\<forall>xs\\<in>Joints XS.\n                               0 \\<le> interpret_floatarith fa xs", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>XS\\<in>set XSS.\n       \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs", "proof (cases XSS)"], ["proof (state)\ngoal (2 subgoals):\n 1. XSS = [] \\<Longrightarrow>\n    \\<forall>XS\\<in>set XSS.\n       \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs\n 2. \\<And>a list.\n       XSS = a # list \\<Longrightarrow>\n       \\<forall>XS\\<in>set XSS.\n          \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs", "case Nil"], ["proof (state)\nthis:\n  XSS = []\n\ngoal (2 subgoals):\n 1. XSS = [] \\<Longrightarrow>\n    \\<forall>XS\\<in>set XSS.\n       \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs\n 2. \\<And>a list.\n       XSS = a # list \\<Longrightarrow>\n       \\<forall>XS\\<in>set XSS.\n          \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs", "then"], ["proof (chain)\npicking this:\n  XSS = []", "show ?thesis"], ["proof (prove)\nusing this:\n  XSS = []\n\ngoal (1 subgoal):\n 1. \\<forall>XS\\<in>set XSS.\n       \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs", "by auto"], ["proof (state)\nthis:\n  \\<forall>XS\\<in>set XSS.\n     \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       XSS = a # list \\<Longrightarrow>\n       \\<forall>XS\\<in>set XSS.\n          \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       XSS = a # list \\<Longrightarrow>\n       \\<forall>XS\\<in>set XSS.\n          \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs", "case (Cons YS YSS)"], ["proof (state)\nthis:\n  XSS = YS # YSS\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       XSS = a # list \\<Longrightarrow>\n       \\<forall>XS\\<in>set XSS.\n          \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>XS\\<in>set XSS.\n       \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs", "unfolding Cons"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>XS\\<in>set (YS # YSS).\n       \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xs.\n       xs \\<in> Joints YS \\<Longrightarrow>\n       0 \\<le> interpret_floatarith fa xs\n 2. \\<And>XS xs.\n       \\<lbrakk>XS \\<in> set YSS; xs \\<in> Joints XS\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "subgoal for xs"], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<in> Joints YS \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "using Suc.prems"], ["proof (prove)\nusing this:\n  prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) XSS\n\ngoal (1 subgoal):\n 1. xs \\<in> Joints YS \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "apply (auto simp: Cons Let_def split: if_splits option.splits)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>xs \\<in> Joints YS; 0 \\<le> Inf_aform' p (hd y);\n        approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = Some y;\n        prove_nonneg prnt i p (slp_of_fas [fa]) YSS\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs\n 2. \\<And>x y.\n       \\<lbrakk>xs \\<in> Joints YS; split_aforms_largest_uncond YS = (x, y);\n        prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n        approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = None\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs\n 3. \\<And>x y.\n       \\<lbrakk>xs \\<in> Joints YS; split_aforms_largest_uncond YS = (x, y);\n        prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n        \\<not> 0 \\<le> Inf_aform' p\n                        (hd (the (approx_slp_outer p (Suc 0)\n                                   (slp_of_fas [fa]) YS)))\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "subgoal for ys"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<in> Joints YS; 0 \\<le> Inf_aform' p (hd ys);\n     approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = Some ys;\n     prove_nonneg prnt i p (slp_of_fas [fa]) YSS\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "apply (drule approx_slp_outer_plain)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>xs \\<in> Joints YS; 0 \\<le> Inf_aform' p (hd ys);\n     prove_nonneg prnt i p (slp_of_fas [fa]) YSS\\<rbrakk>\n    \\<Longrightarrow> slp_of_fas [fa] = slp_of_fas ?fas\n 2. \\<lbrakk>xs \\<in> Joints YS; 0 \\<le> Inf_aform' p (hd ys);\n     prove_nonneg prnt i p (slp_of_fas [fa]) YSS\\<rbrakk>\n    \\<Longrightarrow> Suc 0 = length ?fas\n 3. \\<lbrakk>xs \\<in> Joints YS; 0 \\<le> Inf_aform' p (hd ys);\n     prove_nonneg prnt i p (slp_of_fas [fa]) YSS\\<rbrakk>\n    \\<Longrightarrow> ?xs \\<in> Joints YS\n 4. \\<lbrakk>xs \\<in> Joints YS; 0 \\<le> Inf_aform' p (hd ys);\n     prove_nonneg prnt i p (slp_of_fas [fa]) YSS;\n     interpret_floatariths ?fas ?xs \\<in> Joints ys\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "apply (rule refl)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>xs \\<in> Joints YS; 0 \\<le> Inf_aform' p (hd ys);\n     prove_nonneg prnt i p (slp_of_fas [fa]) YSS\\<rbrakk>\n    \\<Longrightarrow> Suc 0 = length [fa]\n 2. \\<lbrakk>xs \\<in> Joints YS; 0 \\<le> Inf_aform' p (hd ys);\n     prove_nonneg prnt i p (slp_of_fas [fa]) YSS\\<rbrakk>\n    \\<Longrightarrow> ?xs \\<in> Joints YS\n 3. \\<lbrakk>xs \\<in> Joints YS; 0 \\<le> Inf_aform' p (hd ys);\n     prove_nonneg prnt i p (slp_of_fas [fa]) YSS;\n     interpret_floatariths [fa] ?xs \\<in> Joints ys\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "apply force"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>xs \\<in> Joints YS; 0 \\<le> Inf_aform' p (hd ys);\n     prove_nonneg prnt i p (slp_of_fas [fa]) YSS\\<rbrakk>\n    \\<Longrightarrow> ?xs \\<in> Joints YS\n 2. \\<lbrakk>xs \\<in> Joints YS; 0 \\<le> Inf_aform' p (hd ys);\n     prove_nonneg prnt i p (slp_of_fas [fa]) YSS;\n     interpret_floatariths [fa] ?xs \\<in> Joints ys\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<in> Joints YS; 0 \\<le> Inf_aform' p (hd ys);\n     prove_nonneg prnt i p (slp_of_fas [fa]) YSS;\n     interpret_floatariths [fa] xs \\<in> Joints ys\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<in> Joints YS; 0 \\<le> Inf_aform' p (hd ys);\n     prove_nonneg prnt i p (slp_of_fas [fa]) YSS;\n     [interpret_floatarith fa xs] \\<in> Joints ys\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "apply (frule Joints_imp_length_eq[where XS=ys])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<in> Joints YS; 0 \\<le> Inf_aform' p (hd ys);\n     prove_nonneg prnt i p (slp_of_fas [fa]) YSS;\n     [interpret_floatarith fa xs] \\<in> Joints ys;\n     length [interpret_floatarith fa xs] = length ys\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "apply (auto simp: Suc_length_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>xs \\<in> Joints YS; 0 \\<le> Inf_aform' p (a, b);\n        prove_nonneg prnt i p (slp_of_fas [fa]) YSS;\n        interpret_floatarith fa xs \\<in> Affine (a, b);\n        ys = [(a, b)]\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "by (smt Inf_aform'_Affine_le)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>xs \\<in> Joints YS; split_aforms_largest_uncond YS = (x, y);\n        prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n        approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = None\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs\n 2. \\<And>x y.\n       \\<lbrakk>xs \\<in> Joints YS; split_aforms_largest_uncond YS = (x, y);\n        prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n        \\<not> 0 \\<le> Inf_aform' p\n                        (hd (the (approx_slp_outer p (Suc 0)\n                                   (slp_of_fas [fa]) YS)))\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<in> Joints YS; split_aforms_largest_uncond YS = (x_, y_);\n     prove_nonneg prnt i p (slp_of_fas [fa]) (x_ # y_ # YSS);\n     approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = None\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "apply (simp add: split_aforms_largest_uncond_def split: prod.splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>prove_nonneg prnt i p (slp_of_fas [fa]) (x_ # y_ # YSS);\n        approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = None;\n        xs \\<in> Joints YS;\n        max_pdev (abssum_of_pdevs_list (map snd YS)) = (x1, x2);\n        split_aforms YS x1 = (x_, y_)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "apply (drule Suc.IH)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = None;\n        xs \\<in> Joints YS;\n        max_pdev (abssum_of_pdevs_list (map snd YS)) = (x1, x2);\n        split_aforms YS x1 = (x_, y_);\n        \\<forall>XS\\<in>set (x_ # y_ # YSS).\n           \\<forall>xs\\<in>Joints XS.\n              0 \\<le> interpret_floatarith fa xs\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "apply (drule split_aforms_lemma, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = None;\n        xs \\<in> Joints YS;\n        max_pdev (abssum_of_pdevs_list (map snd YS)) = (x1, x2);\n        \\<forall>XS\\<in>set (x_ # y_ # YSS).\n           \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs;\n        xs \\<in> Joints x_ \\<union> Joints y_\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>xs \\<in> Joints YS; split_aforms_largest_uncond YS = (x, y);\n        prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n        \\<not> 0 \\<le> Inf_aform' p\n                        (hd (the (approx_slp_outer p (Suc 0)\n                                   (slp_of_fas [fa]) YS)))\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<in> Joints YS; split_aforms_largest_uncond YS = (x_, y_);\n     prove_nonneg prnt i p (slp_of_fas [fa]) (x_ # y_ # YSS);\n     \\<not> 0 \\<le> Inf_aform' p\n                     (hd (the (approx_slp_outer p (Suc 0) (slp_of_fas [fa])\n                                YS)))\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "apply (simp add: split_aforms_largest_uncond_def split: prod.splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>prove_nonneg prnt i p (slp_of_fas [fa]) (x_ # y_ # YSS);\n        \\<not> 0 \\<le> Inf_aform' p\n                        (hd (the (approx_slp_outer p (Suc 0)\n                                   (slp_of_fas [fa]) YS)));\n        xs \\<in> Joints YS;\n        max_pdev (abssum_of_pdevs_list (map snd YS)) = (x1, x2);\n        split_aforms YS x1 = (x_, y_)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "apply (drule Suc.IH)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<not> 0 \\<le> Inf_aform' p\n                                (hd (the\n(approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS)));\n        xs \\<in> Joints YS;\n        max_pdev (abssum_of_pdevs_list (map snd YS)) = (x1, x2);\n        split_aforms YS x1 = (x_, y_);\n        \\<forall>XS\\<in>set (x_ # y_ # YSS).\n           \\<forall>xs\\<in>Joints XS.\n              0 \\<le> interpret_floatarith fa xs\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "apply (drule split_aforms_lemma, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<not> 0 \\<le> Inf_aform' p\n                                (hd (the\n(approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS)));\n        xs \\<in> Joints YS;\n        max_pdev (abssum_of_pdevs_list (map snd YS)) = (x1, x2);\n        \\<forall>XS\\<in>set (x_ # y_ # YSS).\n           \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs;\n        xs \\<in> Joints x_ \\<union> Joints y_\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>XS xs.\n       \\<lbrakk>XS \\<in> set YSS; xs \\<in> Joints XS\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "subgoal for XS xs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>XS \\<in> set YSS; xs \\<in> Joints XS\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "using Suc.prems"], ["proof (prove)\nusing this:\n  prove_nonneg prnt (Suc i) p (slp_of_fas [fa]) XSS\n\ngoal (1 subgoal):\n 1. \\<lbrakk>XS \\<in> set YSS; xs \\<in> Joints XS\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "apply (auto simp: Cons Let_def split: if_splits option.splits)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>XS \\<in> set YSS; xs \\<in> Joints XS;\n        0 \\<le> Inf_aform' p (hd y);\n        approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = Some y;\n        prove_nonneg prnt i p (slp_of_fas [fa]) YSS\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs\n 2. \\<And>x y.\n       \\<lbrakk>XS \\<in> set YSS; xs \\<in> Joints XS;\n        split_aforms_largest_uncond YS = (x, y);\n        prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n        approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = None\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs\n 3. \\<And>x y.\n       \\<lbrakk>XS \\<in> set YSS; xs \\<in> Joints XS;\n        split_aforms_largest_uncond YS = (x, y);\n        prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n        \\<not> 0 \\<le> Inf_aform' p\n                        (hd (the (approx_slp_outer p (Suc 0)\n                                   (slp_of_fas [fa]) YS)))\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "subgoal for ys"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>XS \\<in> set YSS; xs \\<in> Joints XS;\n     0 \\<le> Inf_aform' p (hd ys);\n     approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = Some ys;\n     prove_nonneg prnt i p (slp_of_fas [fa]) YSS\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "by (rule Suc.IH[rule_format], assumption, assumption, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>XS \\<in> set YSS; xs \\<in> Joints XS;\n        split_aforms_largest_uncond YS = (x, y);\n        prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n        approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = None\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs\n 2. \\<And>x y.\n       \\<lbrakk>XS \\<in> set YSS; xs \\<in> Joints XS;\n        split_aforms_largest_uncond YS = (x, y);\n        prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n        \\<not> 0 \\<le> Inf_aform' p\n                        (hd (the (approx_slp_outer p (Suc 0)\n                                   (slp_of_fas [fa]) YS)))\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "subgoal for ys"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>XS \\<in> set YSS; xs \\<in> Joints XS;\n     split_aforms_largest_uncond YS = (ys, y_);\n     prove_nonneg prnt i p (slp_of_fas [fa]) (ys # y_ # YSS);\n     approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = None\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "apply (drule prove_nonneg_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>XS \\<in> set YSS; xs \\<in> Joints XS;\n     split_aforms_largest_uncond YS = (ys, y_);\n     approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = None;\n     prove_nonneg prnt i p (slp_of_fas [fa]) (y_ # YSS)\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "apply (drule prove_nonneg_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>XS \\<in> set YSS; xs \\<in> Joints XS;\n     split_aforms_largest_uncond YS = (ys, y_);\n     approx_slp_outer p (Suc 0) (slp_of_fas [fa]) YS = None;\n     prove_nonneg prnt i p (slp_of_fas [fa]) YSS\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "by (rule Suc.IH[rule_format], assumption, assumption, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>XS \\<in> set YSS; xs \\<in> Joints XS;\n        split_aforms_largest_uncond YS = (x, y);\n        prove_nonneg prnt i p (slp_of_fas [fa]) (x # y # YSS);\n        \\<not> 0 \\<le> Inf_aform' p\n                        (hd (the (approx_slp_outer p (Suc 0)\n                                   (slp_of_fas [fa]) YS)))\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "subgoal for ys"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>XS \\<in> set YSS; xs \\<in> Joints XS;\n     split_aforms_largest_uncond YS = (ys, y_);\n     prove_nonneg prnt i p (slp_of_fas [fa]) (ys # y_ # YSS);\n     \\<not> 0 \\<le> Inf_aform' p\n                     (hd (the (approx_slp_outer p (Suc 0) (slp_of_fas [fa])\n                                YS)))\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "apply (drule prove_nonneg_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>XS \\<in> set YSS; xs \\<in> Joints XS;\n     split_aforms_largest_uncond YS = (ys, y_);\n     \\<not> 0 \\<le> Inf_aform' p\n                     (hd (the (approx_slp_outer p (Suc 0) (slp_of_fas [fa])\n                                YS)));\n     prove_nonneg prnt i p (slp_of_fas [fa]) (y_ # YSS)\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "apply (drule prove_nonneg_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>XS \\<in> set YSS; xs \\<in> Joints XS;\n     split_aforms_largest_uncond YS = (ys, y_);\n     \\<not> 0 \\<le> Inf_aform' p\n                     (hd (the (approx_slp_outer p (Suc 0) (slp_of_fas [fa])\n                                YS)));\n     prove_nonneg prnt i p (slp_of_fas [fa]) YSS\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> interpret_floatarith fa xs", "by (rule Suc.IH[rule_format], assumption, assumption, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>XS\\<in>set XSS.\n     \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>XS\\<in>set XSS.\n     \\<forall>xs\\<in>Joints XS. 0 \\<le> interpret_floatarith fa xs\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}