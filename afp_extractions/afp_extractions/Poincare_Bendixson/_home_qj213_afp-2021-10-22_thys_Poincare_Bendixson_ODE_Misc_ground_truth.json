{"file_name": "/home/qj213/afp-2021-10-22/thys/Poincare_Bendixson/ODE_Misc.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Poincare_Bendixson", "problem_names": ["lemma local_lipschitz_compact_bicomposeE:\n  assumes ll: \"local_lipschitz T X f\"\n  assumes cf: \"\\<And>x. x \\<in> X \\<Longrightarrow> continuous_on I (\\<lambda>t. f t x)\"\n  assumes cI: \"compact I\"\n  assumes \"I \\<subseteq> T\"\n  assumes cv: \"continuous_on I v\"\n  assumes cw: \"continuous_on I w\"\n  assumes v: \"v ` I \\<subseteq> X\"\n  assumes w: \"w ` I \\<subseteq> X\"\n  obtains L where \"L > 0\" \"\\<And>x. x \\<in> I \\<Longrightarrow> dist (f x (v x)) (f x (w x)) \\<le> L * dist (v x) (w x)\"", "lemma comparison_principle_le:\n  fixes f::\"real \\<Rightarrow> real \\<Rightarrow> real\"\n    and \\<phi> \\<psi>::\"real \\<Rightarrow> real\"\n  assumes ll: \"local_lipschitz X Y f\"\n  assumes cf: \"\\<And>x. x \\<in> Y \\<Longrightarrow> continuous_on {a..b} (\\<lambda>t. f t x)\"\n  assumes abX: \"{a .. b} \\<subseteq> X\"\n  assumes \\<phi>': \"\\<And>x. x \\<in> {a .. b} \\<Longrightarrow> (\\<phi> has_real_derivative \\<phi>' x) (at x)\"\n  assumes \\<psi>': \"\\<And>x. x \\<in> {a .. b} \\<Longrightarrow> (\\<psi> has_real_derivative \\<psi>' x) (at x)\"\n  assumes \\<phi>_in: \"\\<phi> ` {a..b} \\<subseteq> Y\"\n  assumes \\<psi>_in: \"\\<psi> ` {a..b} \\<subseteq> Y\"\n  assumes init: \"\\<phi> a \\<le> \\<psi> a\"\n  assumes defect: \"\\<And>x. x \\<in> {a .. b} \\<Longrightarrow> \\<phi>' x - f x (\\<phi> x) \\<le> \\<psi>' x - f x (\\<psi> x)\"\n  shows \"\\<forall>x \\<in> {a .. b}. \\<phi> x \\<le> \\<psi> x\" (is \"?th1\")", "lemma local_lipschitz_mult:\n  shows \"local_lipschitz  (UNIV::real set) (UNIV::real set) (*)\"", "lemma comparison_principle_le_linear:\n  fixes \\<phi> :: \"real \\<Rightarrow> real\"\n  assumes \"continuous_on {a..b} g\"\n  assumes \"(\\<And>t. t \\<in> {a..b} \\<Longrightarrow> (\\<phi> has_real_derivative \\<phi>' t) (at t))\"\n  assumes \"\\<phi> a \\<le> 0\"\n  assumes \"(\\<And>t. t \\<in> {a..b} \\<Longrightarrow> \\<phi>' t \\<le> g t *\\<^sub>R \\<phi> t)\"\n  shows \"\\<forall>t\\<in>{a..b}. \\<phi> t \\<le> 0\"", "lemma flow_lipschitzE:\n  assumes \"{a .. b} \\<subseteq> existence_ivl t0 x\"\n  obtains L where \"L-lipschitz_on {a .. b} (flow t0 x)\"", "lemma flow_undefined0: \"t \\<notin> existence_ivl t0 x \\<Longrightarrow> flow t0 x t = 0\"", "lemma csols_undefined: \"x \\<notin> X \\<Longrightarrow> csols t0 x = {}\"", "lemmas existence_ivl_undefined = existence_ivl_empty2", "lemma range_preflect_0[simp]: \"range (preflect 0) = UNIV\"", "lemma range_uminus[simp]: \"range uminus = (UNIV::'a::ab_group_add set)\"", "lemma existence_ivl_eq_rev0: \"existence_ivl0 y = uminus ` rev.existence_ivl0 y\" for y", "lemma rev_existence_ivl_eq0: \"rev.existence_ivl0 y = uminus ` existence_ivl0 y\" for y", "lemma flow_eq_rev0: \"flow0 y t = rev.flow0 y (-t)\" for y t", "lemma rev_eq_flow: \"rev.flow0 y t = flow0 y (-t)\" for y t", "lemma rev_flow_image_eq: \"rev.flow0 x ` S = flow0 x ` (uminus ` S)\"", "lemma flow_image_eq_rev: \"flow0 x ` S = rev.flow0 x ` (uminus ` S)\"", "lemma bdd_above_is_intervalI: \"bdd_above I\"\n  if \"is_interval I\" \"a \\<le> b\" \"a \\<in> I\" \"b \\<notin> I\" for I::\"real set\"", "lemma bdd_below_is_intervalI: \"bdd_below I\"\n  if \"is_interval I\" \"a \\<le> b\" \"a \\<notin> I\" \"b \\<in> I\" for I::\"real set\"", "lemma open_existence_ivl0:\n  assumes x : \"x \\<in> X\"\n  shows \"\\<exists>a b. a < 0 \\<and> 0 < b \\<and> {a..b} \\<subseteq> existence_ivl0 x\"", "lemma open_existence_ivl':\n  assumes x : \"x \\<in> X\"\n  obtains a where \"a > 0\"  \"{-a..a} \\<subseteq> existence_ivl0 x\"", "lemma open_existence_ivl_on_compact:\n  assumes C: \"C \\<subseteq> X\" and \"compact C\" \"C \\<noteq> {}\"\n  obtains a where \"a > 0\" \"\\<And>x. x \\<in> C \\<Longrightarrow> {-a..a} \\<subseteq> existence_ivl0 x\"", "lemma trapped_iff_on_existence_ivl0:\n  \"trapped x K \\<longleftrightarrow> (flow0 x ` (existence_ivl0 x) \\<subseteq> K)\"", "lemma infinite_rev_existence_ivl0_rewrites:\n  \"{0..} \\<subseteq> rev.existence_ivl0 x \\<longleftrightarrow> {..0} \\<subseteq> existence_ivl0 x\"\n  \"{..0} \\<subseteq> rev.existence_ivl0 x \\<longleftrightarrow> {0..} \\<subseteq> existence_ivl0 x\"", "lemma trapped_backward_iff_rev_trapped_forward:\n  \"trapped_backward x K  \\<longleftrightarrow> rev.trapped_forward x K\"", "lemma trapped_sol_right:\n  \\<comment> \\<open>TODO: when building on afp-devel (??? outdated):\n    \\<^url>\\<open>https://bitbucket.org/isa-afp/afp-devel/commits/0c3edf9248d5389197f248c723b625c419e4d3eb\\<close>\\<close>\n  assumes \"compact K\" \"K \\<subseteq> X\"\n  assumes \"x \\<in> X\" \"trapped_forward x K\"\n  shows \"{0..} \\<subseteq> existence_ivl0 x\"", "lemma trapped_sol_right_gen:\n  assumes \"compact K\" \"K \\<subseteq> X\"\n  assumes \"t \\<in> existence_ivl0 x\" \"trapped_forward (flow0 x t) K\"\n  shows \"{t..} \\<subseteq> existence_ivl0 x\"", "lemma trapped_sol_left:\n  \\<comment> \\<open>TODO: when building on afp-devel:\n    \\<^url>\\<open>https://bitbucket.org/isa-afp/afp-devel/commits/0c3edf9248d5389197f248c723b625c419e4d3eb\\<close>\\<close>\n  assumes \"compact K\" \"K \\<subseteq> X\"\n  assumes \"x \\<in> X\" \"trapped_backward x K\"\n  shows \"{..0} \\<subseteq> existence_ivl0 x\"", "lemma trapped_sol_left_gen:\n  assumes \"compact K\" \"K \\<subseteq> X\"\n  assumes \"t \\<in> existence_ivl0 x\" \"trapped_backward (flow0 x t) K\"\n  shows \"{..t} \\<subseteq> existence_ivl0 x\"", "lemma trapped_sol:\n  assumes \"compact K\" \"K \\<subseteq> X\"\n  assumes \"x \\<in> X\" \"trapped x K\"\n  shows \"existence_ivl0 x = UNIV\"", "lemma regular_locally_noteq:\\<comment> \\<open>TODO: should be true in \\<open>ll_on_open_it\\<close>\\<close>\n  assumes \"x \\<in> X\" \"f x \\<noteq> 0\"\n  shows \"eventually (\\<lambda>t. flow0 x t \\<noteq> x) (at 0)\"", "lemma compact_max_time_flow_in_closed:\n  assumes \"closed M\" and t_ex: \"t \\<in> existence_ivl0 x\"\n  shows \"compact {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}\" (is \"compact ?C\")", "lemma flow_in_closed_max_timeE:\n  assumes \"closed M\" \"t \\<in> existence_ivl0 x\" \"0 \\<le> t\" \"x \\<in> M\"\n  obtains T where \"0 \\<le> T\" \"T \\<le> t\" \"flow0 x ` {0..T} \\<subseteq> M\"\n    \"\\<And>s'. 0 \\<le> s' \\<Longrightarrow> s' \\<le> t \\<Longrightarrow> flow0 x ` {0..s'} \\<subseteq> M \\<Longrightarrow> s' \\<le> T\"", "lemma flow_leaves_closed_at_frontierE:\n  assumes \"closed M\" and t_ex: \"t \\<in> existence_ivl0 x\" and \"0 \\<le> t\" \"x \\<in> M\" \"flow0 x t \\<notin> M\"\n  obtains s where \"0 \\<le> s\" \"s < t\" \"flow0 x ` {0..s} \\<subseteq> M\"\n    \"flow0 x s \\<in> frontier M\"\n    \"\\<exists>\\<^sub>F s' in at_right s. flow0 x s' \\<notin> M\"", "lemma fcontX:\n  shows \"continuous_on X f\"", "lemma fcontx:\n  assumes \"x \\<in> X\"\n  shows \"continuous (at x) f\"", "lemma continuous_at_imp_cball:\n  assumes \"continuous (at x) g\"\n  assumes \"g x > (0::real)\"\n  obtains r where \"r > 0\" \"\\<forall>y \\<in> cball x r. g y > 0\"", "lemma flow0_path_connected_time:\n  assumes \"ts \\<subseteq> existence_ivl0 x\" \"path_connected ts\"\n  shows \"path_connected (flow0 x ` ts)\"", "lemma flow0_path_connected:\n  assumes \"path_connected D\"\n    \"path_connected ts\"\n    \"\\<And>x. x \\<in> D \\<Longrightarrow> ts \\<subseteq> existence_ivl0 x\"\n  shows \"path_connected ( (\\<lambda>(x, y). flow0 x y) ` (D \\<times> ts))\"", "lemma flow_implicit_function:\n  \\<comment> \\<open>TODO: generalization of @{thm returns_to_implicit_function}!\\<close>\n  fixes s::\"'a::euclidean_space \\<Rightarrow> real\" and S::\"'a set\"\n  assumes t: \"t \\<in> existence_ivl0 x\" and x: \"x \\<in> X\" and st: \"s (flow0 x t) = 0\"\n  assumes Ds: \"\\<And>x. (s has_derivative blinfun_apply (Ds x)) (at x)\"\n  assumes DsC: \"isCont Ds (flow0 x t)\"\n  assumes nz: \"Ds (flow0 x t) (f (flow0 x t)) \\<noteq> 0\"\n  obtains u e\n  where \"s (flow0 x (u x)) = 0\"\n    \"u x = t\"\n    \"(\\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0)\"\n    \"continuous_on (cball x e) u\"\n    \"(\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> Sigma X existence_ivl0\"\n    \"0 < e\" \"(u has_derivative (- blinfun_scaleR_left\n                   (inverse (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) o\\<^sub>L\n                      (Ds (flow0 x t) o\\<^sub>L flowderiv x t) o\\<^sub>L embed1_blinfun)) (at x)\"", "lemma flow_implicit_function_at:\n  fixes s::\"'a::euclidean_space \\<Rightarrow> real\" and S::\"'a set\"\n  assumes x: \"x \\<in> X\" and st: \"s x = 0\"\n  assumes Ds: \"\\<And>x. (s has_derivative blinfun_apply (Ds x)) (at x)\"\n  assumes DsC: \"isCont Ds x\"\n  assumes nz: \"Ds x (f x) \\<noteq> 0\"\n  assumes pos: \"e > 0\"\n  obtains u d\n  where\n    \"0 < d\"\n    \"u x = 0\"\n    \"\\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0\"\n    \"\\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e\"\n    \"\\<And>y. y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y\"\n    \"continuous_on (cball x d) u\"\n    \"(u has_derivative -Ds x /\\<^sub>R (Ds x) (f x)) (at x)\"", "lemma returns_to_implicit_function_gen:\n  \\<comment> \\<open>TODO: generalizes proof of @{thm returns_to_implicit_function}!\\<close>\n  fixes s::\"'a::euclidean_space \\<Rightarrow> real\"\n  assumes rt: \"returns_to {x \\<in> S. s x = 0} x\" (is \"returns_to ?P x\")\n  assumes cS: \"closed S\"\n  assumes Ds: \"\\<And>x. (s has_derivative blinfun_apply (Ds x)) (at x)\"\n    \"isCont Ds (poincare_map ?P x)\"\n    \"Ds (poincare_map ?P x) (f (poincare_map ?P x)) \\<noteq> 0\"\n  obtains u e\n  where \"s (flow0 x (u x)) = 0\"\n    \"u x = return_time ?P x\"\n    \"(\\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0)\"\n    \"continuous_on (cball x e) u\"\n    \"(\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> Sigma X existence_ivl0\"\n    \"0 < e\" \"(u has_derivative (- blinfun_scaleR_left\n                   (inverse (blinfun_apply (Ds (poincare_map ?P x)) (f (poincare_map ?P x)))) o\\<^sub>L\n                      (Ds (poincare_map ?P x) o\\<^sub>L flowderiv x (return_time ?P x)) o\\<^sub>L embed1_blinfun)) (at x)\"", "lemma flow_transversal_surface_finite_intersections:\n  fixes s::\"'a \\<Rightarrow> 'b::real_normed_vector\"\n    and Ds::\"'a \\<Rightarrow> 'a \\<Rightarrow>\\<^sub>L 'b\"\n  assumes \"closed S\"\n  assumes \"\\<And>x. (s has_derivative (Ds x)) (at x)\"\n  assumes \"\\<And>x. x \\<in> S \\<Longrightarrow> s x = 0 \\<Longrightarrow> Ds x (f x) \\<noteq> 0\"\n  assumes \"a \\<le> b\" \"{a .. b} \\<subseteq> existence_ivl0 x\"\n  shows \"finite {t\\<in>{a..b}. flow0 x t \\<in> {x \\<in> S. s x = 0}}\"\n    \\<comment> \\<open>TODO: define notion of (compact/closed)-(continuous/differentiable/C1)-surface?\\<close>", "lemma uniform_limit_flow0_state:\\<comment> \\<open>TODO: is that something more general?\\<close>\n  assumes \"compact C\"\n  assumes \"C \\<subseteq> X\"\n  shows \"uniform_limit C (\\<lambda>s x. flow0 x s) (\\<lambda>x. flow0 x 0) (at 0)\"", "lemma fixpoint_sol:\n  assumes \"x \\<in> X\" \"f x = 0\"\n  shows \"existence_ivl0 x = UNIV\" \"flow0 x t = x\""], "translations": [["", "lemma local_lipschitz_compact_bicomposeE:\n  assumes ll: \"local_lipschitz T X f\"\n  assumes cf: \"\\<And>x. x \\<in> X \\<Longrightarrow> continuous_on I (\\<lambda>t. f t x)\"\n  assumes cI: \"compact I\"\n  assumes \"I \\<subseteq> T\"\n  assumes cv: \"continuous_on I v\"\n  assumes cw: \"continuous_on I w\"\n  assumes v: \"v ` I \\<subseteq> X\"\n  assumes w: \"w ` I \\<subseteq> X\"\n  obtains L where \"L > 0\" \"\\<And>x. x \\<in> I \\<Longrightarrow> dist (f x (v x)) (f x (w x)) \\<le> L * dist (v x) (w x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>0 < L;\n         \\<And>x.\n            x \\<in> I \\<Longrightarrow>\n            dist (f x (v x)) (f x (w x)) \\<le> L * dist (v x) (w x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>0 < L;\n         \\<And>x.\n            x \\<in> I \\<Longrightarrow>\n            dist (f x (v x)) (f x (w x)) \\<le> L * dist (v x) (w x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from v w"], ["proof (chain)\npicking this:\n  v ` I \\<subseteq> X\n  w ` I \\<subseteq> X", "have \"v ` I \\<union> w ` I \\<subseteq> X\""], ["proof (prove)\nusing this:\n  v ` I \\<subseteq> X\n  w ` I \\<subseteq> X\n\ngoal (1 subgoal):\n 1. v ` I \\<union> w ` I \\<subseteq> X", "by auto"], ["proof (state)\nthis:\n  v ` I \\<union> w ` I \\<subseteq> X\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>0 < L;\n         \\<And>x.\n            x \\<in> I \\<Longrightarrow>\n            dist (f x (v x)) (f x (w x)) \\<le> L * dist (v x) (w x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with ll \\<open>I \\<subseteq> T\\<close>"], ["proof (chain)\npicking this:\n  local_lipschitz T X f\n  I \\<subseteq> T\n  v ` I \\<union> w ` I \\<subseteq> X", "have llI:\"local_lipschitz I (v ` I \\<union> w ` I) f\""], ["proof (prove)\nusing this:\n  local_lipschitz T X f\n  I \\<subseteq> T\n  v ` I \\<union> w ` I \\<subseteq> X\n\ngoal (1 subgoal):\n 1. local_lipschitz I (v ` I \\<union> w ` I) f", "by (rule local_lipschitz_subset)"], ["proof (state)\nthis:\n  local_lipschitz I (v ` I \\<union> w ` I) f\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>0 < L;\n         \\<And>x.\n            x \\<in> I \\<Longrightarrow>\n            dist (f x (v x)) (f x (w x)) \\<le> L * dist (v x) (w x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have cvwI: \"compact (v ` I \\<union> w ` I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compact (v ` I \\<union> w ` I)", "by (auto intro!: compact_continuous_image cv cw cI)"], ["proof (state)\nthis:\n  compact (v ` I \\<union> w ` I)\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>0 < L;\n         \\<And>x.\n            x \\<in> I \\<Longrightarrow>\n            dist (f x (v x)) (f x (w x)) \\<le> L * dist (v x) (w x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from local_lipschitz_compact_implies_lipschitz[OF llI cvwI \\<open>compact I\\<close> cf]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x.\n              x \\<in> v ` I \\<union> w ` I \\<Longrightarrow> x \\<in> X;\n   \\<And>L.\n      (\\<And>t.\n          t \\<in> I \\<Longrightarrow>\n          L-lipschitz_on (v ` I \\<union> w ` I) (f t)) \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "obtain L where L: \"\\<And>t. t \\<in> I \\<Longrightarrow> L-lipschitz_on (v ` I \\<union> w ` I) (f t)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x.\n              x \\<in> v ` I \\<union> w ` I \\<Longrightarrow> x \\<in> X;\n   \\<And>L.\n      (\\<And>t.\n          t \\<in> I \\<Longrightarrow>\n          L-lipschitz_on (v ` I \\<union> w ` I) (f t)) \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        (\\<And>t.\n            t \\<in> I \\<Longrightarrow>\n            L-lipschitz_on (v ` I \\<union> w ` I) (f t)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using v w"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x.\n              x \\<in> v ` I \\<union> w ` I \\<Longrightarrow> x \\<in> X;\n   \\<And>L.\n      (\\<And>t.\n          t \\<in> I \\<Longrightarrow>\n          L-lipschitz_on (v ` I \\<union> w ` I) (f t)) \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  v ` I \\<subseteq> X\n  w ` I \\<subseteq> X\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        (\\<And>t.\n            t \\<in> I \\<Longrightarrow>\n            L-lipschitz_on (v ` I \\<union> w ` I) (f t)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ?t \\<in> I \\<Longrightarrow> L-lipschitz_on (v ` I \\<union> w ` I) (f ?t)\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>0 < L;\n         \\<And>x.\n            x \\<in> I \\<Longrightarrow>\n            dist (f x (v x)) (f x (w x)) \\<le> L * dist (v x) (w x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define L' where \"L' = max L 1\""], ["proof (state)\nthis:\n  L' = max L 1\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>0 < L;\n         \\<And>x.\n            x \\<in> I \\<Longrightarrow>\n            dist (f x (v x)) (f x (w x)) \\<le> L * dist (v x) (w x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with L"], ["proof (chain)\npicking this:\n  ?t \\<in> I \\<Longrightarrow> L-lipschitz_on (v ` I \\<union> w ` I) (f ?t)\n  L' = max L 1", "have \"L' > 0\" \"\\<And>x. x \\<in> I \\<Longrightarrow> dist (f x (v x)) (f x (w x)) \\<le> L' * dist (v x) (w x)\""], ["proof (prove)\nusing this:\n  ?t \\<in> I \\<Longrightarrow> L-lipschitz_on (v ` I \\<union> w ` I) (f ?t)\n  L' = max L 1\n\ngoal (1 subgoal):\n 1. 0 < L' &&&\n    (\\<And>x.\n        x \\<in> I \\<Longrightarrow>\n        dist (f x (v x)) (f x (w x)) \\<le> L' * dist (v x) (w x))", "apply (auto simp: lipschitz_on_def L'_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> I;\n        \\<And>t.\n           t \\<in> I \\<Longrightarrow>\n           0 \\<le> L \\<and>\n           (\\<forall>x\\<in>v ` I \\<union> w ` I.\n               \\<forall>y\\<in>v ` I \\<union> w ` I.\n                  dist (f t x) (f t y) \\<le> L * dist x y)\\<rbrakk>\n       \\<Longrightarrow> dist (f x (v x)) (f x (w x))\n                         \\<le> max L 1 * dist (v x) (w x)", "by (smt Un_iff image_eqI mult_right_mono zero_le_dist)"], ["proof (state)\nthis:\n  0 < L'\n  ?x \\<in> I \\<Longrightarrow>\n  dist (f ?x (v ?x)) (f ?x (w ?x)) \\<le> L' * dist (v ?x) (w ?x)\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>0 < L;\n         \\<And>x.\n            x \\<in> I \\<Longrightarrow>\n            dist (f x (v x)) (f x (w x)) \\<le> L * dist (v x) (w x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  0 < L'\n  ?x \\<in> I \\<Longrightarrow>\n  dist (f ?x (v ?x)) (f ?x (w ?x)) \\<le> L' * dist (v ?x) (w ?x)", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < L'\n  ?x \\<in> I \\<Longrightarrow>\n  dist (f ?x (v ?x)) (f ?x (w ?x)) \\<le> L' * dist (v ?x) (w ?x)\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Comparison Principle\\<close>"], ["", "lemma comparison_principle_le:\n  fixes f::\"real \\<Rightarrow> real \\<Rightarrow> real\"\n    and \\<phi> \\<psi>::\"real \\<Rightarrow> real\"\n  assumes ll: \"local_lipschitz X Y f\"\n  assumes cf: \"\\<And>x. x \\<in> Y \\<Longrightarrow> continuous_on {a..b} (\\<lambda>t. f t x)\"\n  assumes abX: \"{a .. b} \\<subseteq> X\"\n  assumes \\<phi>': \"\\<And>x. x \\<in> {a .. b} \\<Longrightarrow> (\\<phi> has_real_derivative \\<phi>' x) (at x)\"\n  assumes \\<psi>': \"\\<And>x. x \\<in> {a .. b} \\<Longrightarrow> (\\<psi> has_real_derivative \\<psi>' x) (at x)\"\n  assumes \\<phi>_in: \"\\<phi> ` {a..b} \\<subseteq> Y\"\n  assumes \\<psi>_in: \"\\<psi> ` {a..b} \\<subseteq> Y\"\n  assumes init: \"\\<phi> a \\<le> \\<psi> a\"\n  assumes defect: \"\\<And>x. x \\<in> {a .. b} \\<Longrightarrow> \\<phi>' x - f x (\\<phi> x) \\<le> \\<psi>' x - f x (\\<psi> x)\"\n  shows \"\\<forall>x \\<in> {a .. b}. \\<phi> x \\<le> \\<psi> x\" (is \"?th1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> \\<psi> x", "(*\n    \"(\\<forall>x \\<in> {a .. b}. \\<phi> x < \\<psi> x) \\<or> (\\<exists>c\\<in>{a..b}. (\\<forall>x\\<in>{a..c}. \\<phi> x \\<le> \\<psi> x) \\<and> (\\<forall>x\\<in>{c<..b}. \\<phi> x < \\<psi> x))\"\n    (is \"?th2\")\n*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> \\<psi> x", "unfolding atomize_conj"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> \\<psi> x", "apply (cases \"a \\<le> b\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<le> b \\<Longrightarrow>\n    \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> \\<psi> x\n 2. \\<not> a \\<le> b \\<Longrightarrow>\n    \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> \\<psi> x", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<not> a \\<le> b \\<Longrightarrow>\n    \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> \\<psi> x\n 2. a \\<le> b \\<Longrightarrow>\n    \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> \\<psi> x", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> a \\<le> b \\<Longrightarrow>\n    \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> \\<psi> x", "by simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow>\n    \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> \\<psi> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow>\n    \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> \\<psi> x", "assume \"a \\<le> b\""], ["proof (state)\nthis:\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow>\n    \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> \\<psi> x", "note \\<phi>_cont = has_real_derivative_imp_continuous_on[OF \\<phi>']"], ["proof (state)\nthis:\n  (\\<And>x. x \\<in> ?A \\<Longrightarrow> x \\<in> {a..b}) \\<Longrightarrow>\n  continuous_on ?A \\<phi>\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow>\n    \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> \\<psi> x", "note \\<psi>_cont = has_real_derivative_imp_continuous_on[OF \\<psi>']"], ["proof (state)\nthis:\n  (\\<And>x. x \\<in> ?A \\<Longrightarrow> x \\<in> {a..b}) \\<Longrightarrow>\n  continuous_on ?A \\<psi>\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow>\n    \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> \\<psi> x", "from local_lipschitz_compact_bicomposeE[OF ll cf compact_Icc abX \\<phi>_cont \\<psi>_cont \\<phi>_in \\<psi>_in]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x. x \\<in> Y \\<Longrightarrow> x \\<in> Y;\n   \\<And>x. x \\<in> {a..b} \\<Longrightarrow> x \\<in> {a..b};\n   \\<And>x. x \\<in> {a..b} \\<Longrightarrow> x \\<in> {a..b};\n   \\<And>L.\n      \\<lbrakk>0 < L;\n       \\<And>x.\n          x \\<in> {a..b} \\<Longrightarrow>\n          dist (f x (\\<phi> x)) (f x (\\<psi> x))\n          \\<le> L * dist (\\<phi> x) (\\<psi> x)\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "obtain L where L: \"L > 0\" \"\\<And>x. x \\<in> {a..b} \\<Longrightarrow> dist (f x (\\<phi> x)) (f x (\\<psi> x)) \\<le> L * dist (\\<phi> x) (\\<psi> x)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x. x \\<in> Y \\<Longrightarrow> x \\<in> Y;\n   \\<And>x. x \\<in> {a..b} \\<Longrightarrow> x \\<in> {a..b};\n   \\<And>x. x \\<in> {a..b} \\<Longrightarrow> x \\<in> {a..b};\n   \\<And>L.\n      \\<lbrakk>0 < L;\n       \\<And>x.\n          x \\<in> {a..b} \\<Longrightarrow>\n          dist (f x (\\<phi> x)) (f x (\\<psi> x))\n          \\<le> L * dist (\\<phi> x) (\\<psi> x)\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>0 < L;\n         \\<And>x.\n            x \\<in> {a..b} \\<Longrightarrow>\n            dist (f x (\\<phi> x)) (f x (\\<psi> x))\n            \\<le> L * dist (\\<phi> x) (\\<psi> x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  0 < L\n  ?x \\<in> {a..b} \\<Longrightarrow>\n  dist (f ?x (\\<phi> ?x)) (f ?x (\\<psi> ?x))\n  \\<le> L * dist (\\<phi> ?x) (\\<psi> ?x)\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow>\n    \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> \\<psi> x", "define w where \"w x = \\<psi> x - \\<phi> x\" for x"], ["proof (state)\nthis:\n  w ?x = \\<psi> ?x - \\<phi> ?x\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow>\n    \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> \\<psi> x", "have w'[derivative_intros]: \"\\<And>x. x \\<in> {a .. b} \\<Longrightarrow> (w has_real_derivative \\<psi>' x - \\<phi>' x) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {a..b} \\<Longrightarrow>\n       (w has_real_derivative \\<psi>' x - \\<phi>' x) (at x)", "using \\<phi>' \\<psi>'"], ["proof (prove)\nusing this:\n  ?x \\<in> {a..b} \\<Longrightarrow>\n  (\\<phi> has_real_derivative \\<phi>' ?x) (at ?x)\n  ?x \\<in> {a..b} \\<Longrightarrow>\n  (\\<psi> has_real_derivative \\<psi>' ?x) (at ?x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {a..b} \\<Longrightarrow>\n       (w has_real_derivative \\<psi>' x - \\<phi>' x) (at x)", "by (auto simp: has_vderiv_on_def w_def[abs_def] intro!: derivative_eq_intros)"], ["proof (state)\nthis:\n  ?x \\<in> {a..b} \\<Longrightarrow>\n  (w has_real_derivative \\<psi>' ?x - \\<phi>' ?x) (at ?x)\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow>\n    \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> \\<psi> x", "note w_cont[continuous_intros] = has_real_derivative_imp_continuous_on[OF w', THEN continuous_on_compose2]"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>x. x \\<in> ?t \\<Longrightarrow> x \\<in> {a..b};\n   continuous_on ?s ?f; ?f ` ?s \\<subseteq> ?t\\<rbrakk>\n  \\<Longrightarrow> continuous_on ?s (\\<lambda>x. w (?f x))\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow>\n    \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> \\<psi> x", "have \"w d \\<ge> 0\" if \"d \\<in> {a .. b}\" for d"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> w d", "proof (rule ccontr, unfold not_le)"], ["proof (state)\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "assume \"w d < 0\""], ["proof (state)\nthis:\n  w d < 0\n\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "let ?N = \"(w -` {..0} \\<inter> {a .. d})\""], ["proof (state)\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "from \\<open>w d < 0\\<close> that"], ["proof (chain)\npicking this:\n  w d < 0\n  d \\<in> {a..b}", "have \"d \\<in> ?N\""], ["proof (prove)\nusing this:\n  w d < 0\n  d \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. d \\<in> w -` {..0} \\<inter> {a..d}", "by auto"], ["proof (state)\nthis:\n  d \\<in> w -` {..0} \\<inter> {a..d}\n\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  d \\<in> w -` {..0} \\<inter> {a..d}", "have \"?N \\<noteq> {}\""], ["proof (prove)\nusing this:\n  d \\<in> w -` {..0} \\<inter> {a..d}\n\ngoal (1 subgoal):\n 1. w -` {..0} \\<inter> {a..d} \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  w -` {..0} \\<inter> {a..d} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "have \"closed ?N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed (w -` {..0} \\<inter> {a..d})", "unfolding compact_eq_bounded_closed"], ["proof (prove)\ngoal (1 subgoal):\n 1. closed (w -` {..0} \\<inter> {a..d})", "using that"], ["proof (prove)\nusing this:\n  d \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. closed (w -` {..0} \\<inter> {a..d})", "by (intro conjI closed_vimage_Int) (auto intro!: continuous_intros)"], ["proof (state)\nthis:\n  closed (w -` {..0} \\<inter> {a..d})\n\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "let ?N' = \"{a0 \\<in> {a .. d}. w ` {a0 .. d} \\<subseteq> {..0}}\""], ["proof (state)\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "from \\<open>w d < 0\\<close> that"], ["proof (chain)\npicking this:\n  w d < 0\n  d \\<in> {a..b}", "have \"d \\<in> ?N'\""], ["proof (prove)\nusing this:\n  w d < 0\n  d \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. d \\<in> {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}", "by simp"], ["proof (state)\nthis:\n  d \\<in> {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}\n\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  d \\<in> {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}", "have \"?N' \\<noteq> {}\""], ["proof (prove)\nusing this:\n  d \\<in> {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}\n\ngoal (1 subgoal):\n 1. {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}} \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "have \"compact ?N'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compact {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}", "unfolding compact_eq_bounded_closed"], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}} \\<and>\n    closed {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. bounded {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}\n 2. closed {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}", "have \"?N' \\<subseteq> {a .. d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}} \\<subseteq> {a..d}", "using that"], ["proof (prove)\nusing this:\n  d \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}} \\<subseteq> {a..d}", "by auto"], ["proof (state)\nthis:\n  {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}} \\<subseteq> {a..d}\n\ngoal (2 subgoals):\n 1. bounded {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}\n 2. closed {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}", "then"], ["proof (chain)\npicking this:\n  {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}} \\<subseteq> {a..d}", "show \"bounded ?N'\""], ["proof (prove)\nusing this:\n  {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}} \\<subseteq> {a..d}\n\ngoal (1 subgoal):\n 1. bounded {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}", "by (rule bounded_subset[rotated]) simp"], ["proof (state)\nthis:\n  bounded {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}\n\ngoal (1 subgoal):\n 1. closed {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}", "have \"w u \\<le> 0\" if \"(\\<forall>n. x n \\<in> ?N')\" \"x \\<longlonglongrightarrow> l\" \"l \\<le> u\" \"u \\<le> d\" for x l u"], ["proof (prove)\ngoal (1 subgoal):\n 1. w u \\<le> 0", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> w u \\<le> 0\n 2. \\<not> ?P \\<Longrightarrow> w u \\<le> 0", "assume \"l = u\""], ["proof (state)\nthis:\n  l = u\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> w u \\<le> 0\n 2. \\<not> ?P \\<Longrightarrow> w u \\<le> 0", "have \"\\<forall>n. x n \\<in> ?N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. x n \\<in> w -` {..0} \\<inter> {a..d}", "using that(1)"], ["proof (prove)\nusing this:\n  \\<forall>n. x n \\<in> {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}\n\ngoal (1 subgoal):\n 1. \\<forall>n. x n \\<in> w -` {..0} \\<inter> {a..d}", "by force"], ["proof (state)\nthis:\n  \\<forall>n. x n \\<in> w -` {..0} \\<inter> {a..d}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> w u \\<le> 0\n 2. \\<not> ?P \\<Longrightarrow> w u \\<le> 0", "from closed_sequentially[OF \\<open>closed ?N\\<close> this \\<open>x \\<longlonglongrightarrow> l\\<close>]"], ["proof (chain)\npicking this:\n  l \\<in> w -` {..0} \\<inter> {a..d}", "show ?thesis"], ["proof (prove)\nusing this:\n  l \\<in> w -` {..0} \\<inter> {a..d}\n\ngoal (1 subgoal):\n 1. w u \\<le> 0", "by (auto simp: \\<open>l = u\\<close>)"], ["proof (state)\nthis:\n  w u \\<le> 0\n\ngoal (1 subgoal):\n 1. l \\<noteq> u \\<Longrightarrow> w u \\<le> 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. l \\<noteq> u \\<Longrightarrow> w u \\<le> 0", "assume \"l \\<noteq> u\""], ["proof (state)\nthis:\n  l \\<noteq> u\n\ngoal (1 subgoal):\n 1. l \\<noteq> u \\<Longrightarrow> w u \\<le> 0", "with that"], ["proof (chain)\npicking this:\n  \\<forall>n. x n \\<in> {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}\n  x \\<longlonglongrightarrow> l\n  l \\<le> u\n  u \\<le> d\n  l \\<noteq> u", "have \"l < u\""], ["proof (prove)\nusing this:\n  \\<forall>n. x n \\<in> {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}\n  x \\<longlonglongrightarrow> l\n  l \\<le> u\n  u \\<le> d\n  l \\<noteq> u\n\ngoal (1 subgoal):\n 1. l < u", "by auto"], ["proof (state)\nthis:\n  l < u\n\ngoal (1 subgoal):\n 1. l \\<noteq> u \\<Longrightarrow> w u \\<le> 0", "from order_tendstoD(2)[OF \\<open>x \\<longlonglongrightarrow> l\\<close> \\<open>l < u\\<close>]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F xa in sequentially. x xa < u", "obtain n where \"x n < u\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F xa in sequentially. x xa < u\n\ngoal (1 subgoal):\n 1. (\\<And>n. x n < u \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto dest: eventually_happens)"], ["proof (state)\nthis:\n  x n < u\n\ngoal (1 subgoal):\n 1. l \\<noteq> u \\<Longrightarrow> w u \\<le> 0", "with that"], ["proof (chain)\npicking this:\n  \\<forall>n. x n \\<in> {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}\n  x \\<longlonglongrightarrow> l\n  l \\<le> u\n  u \\<le> d\n  x n < u", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n. x n \\<in> {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}\n  x \\<longlonglongrightarrow> l\n  l \\<le> u\n  u \\<le> d\n  x n < u\n\ngoal (1 subgoal):\n 1. w u \\<le> 0", "using \\<open>l < u\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>n. x n \\<in> {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}\n  x \\<longlonglongrightarrow> l\n  l \\<le> u\n  u \\<le> d\n  x n < u\n  l < u\n\ngoal (1 subgoal):\n 1. w u \\<le> 0", "by (auto dest!: spec[where x=n] simp: image_subset_iff)"], ["proof (state)\nthis:\n  w u \\<le> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>n.\n              ?x n \\<in> {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}};\n   ?x \\<longlonglongrightarrow> ?l; ?l \\<le> ?u; ?u \\<le> d\\<rbrakk>\n  \\<Longrightarrow> w ?u \\<le> 0\n\ngoal (1 subgoal):\n 1. closed {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<forall>n.\n              ?x n \\<in> {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}};\n   ?x \\<longlonglongrightarrow> ?l; ?l \\<le> ?u; ?u \\<le> d\\<rbrakk>\n  \\<Longrightarrow> w ?u \\<le> 0", "show \"closed ?N'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>n.\n              ?x n \\<in> {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}};\n   ?x \\<longlonglongrightarrow> ?l; ?l \\<le> ?u; ?u \\<le> d\\<rbrakk>\n  \\<Longrightarrow> w ?u \\<le> 0\n\ngoal (1 subgoal):\n 1. closed {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}", "unfolding closed_sequential_limits"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>n.\n              ?x n \\<in> {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}};\n   ?x \\<longlonglongrightarrow> ?l; ?l \\<le> ?u; ?u \\<le> d\\<rbrakk>\n  \\<Longrightarrow> w ?u \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<forall>x l.\n       (\\<forall>n.\n           x n\n           \\<in> {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}) \\<and>\n       x \\<longlonglongrightarrow> l \\<longrightarrow>\n       l \\<in> {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}", "by (auto simp: Lim_bounded Lim_bounded2)"], ["proof (state)\nthis:\n  closed {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  compact {a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}\n\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "from compact_attains_inf[OF \\<open>compact ?N'\\<close> \\<open>?N' \\<noteq> {}\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>s\\<in>{a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}.\n     \\<forall>t\\<in>{a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}.\n        s \\<le> t", "obtain a0 where a0: \"a \\<le> a0\" \"a0 \\<le> d\" \"w ` {a0..d} \\<subseteq> {..0}\"\n      and a0_least: \"\\<And>x. a \\<le> x \\<Longrightarrow> x \\<le> d \\<Longrightarrow> w ` {x..d} \\<subseteq> {..0} \\<Longrightarrow> a0 \\<le> x\""], ["proof (prove)\nusing this:\n  \\<exists>s\\<in>{a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}.\n     \\<forall>t\\<in>{a0 \\<in> {a..d}. w ` {a0..d} \\<subseteq> {..0}}.\n        s \\<le> t\n\ngoal (1 subgoal):\n 1. (\\<And>a0.\n        \\<lbrakk>a \\<le> a0; a0 \\<le> d; w ` {a0..d} \\<subseteq> {..0};\n         \\<And>x.\n            \\<lbrakk>a \\<le> x; x \\<le> d;\n             w ` {x..d} \\<subseteq> {..0}\\<rbrakk>\n            \\<Longrightarrow> a0 \\<le> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a \\<le> a0\n  a0 \\<le> d\n  w ` {a0..d} \\<subseteq> {..0}\n  \\<lbrakk>a \\<le> ?x; ?x \\<le> d; w ` {?x..d} \\<subseteq> {..0}\\<rbrakk>\n  \\<Longrightarrow> a0 \\<le> ?x\n\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "have a0d: \"{a0 .. d} \\<subseteq> {a .. b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a0..d} \\<subseteq> {a..b}", "using that a0"], ["proof (prove)\nusing this:\n  d \\<in> {a..b}\n  a \\<le> a0\n  a0 \\<le> d\n  w ` {a0..d} \\<subseteq> {..0}\n\ngoal (1 subgoal):\n 1. {a0..d} \\<subseteq> {a..b}", "by auto"], ["proof (state)\nthis:\n  {a0..d} \\<subseteq> {a..b}\n\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "have L_w_bound: \"L * w x \\<le> \\<psi>' x - \\<phi>' x\" if \"x \\<in> {a0 .. d}\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. L * w x \\<le> \\<psi>' x - \\<phi>' x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. L * w x \\<le> \\<psi>' x - \\<phi>' x", "from set_mp[OF a0d that]"], ["proof (chain)\npicking this:\n  x \\<in> {a..b}", "have \"x \\<in> {a .. b}\""], ["proof (prove)\nusing this:\n  x \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. x \\<in> {a..b}", "."], ["proof (state)\nthis:\n  x \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. L * w x \\<le> \\<psi>' x - \\<phi>' x", "from defect[OF this]"], ["proof (chain)\npicking this:\n  \\<phi>' x - f x (\\<phi> x) \\<le> \\<psi>' x - f x (\\<psi> x)", "have \"\\<phi>' x - \\<psi>' x \\<le> dist (f x (\\<phi> x)) (f x (\\<psi> x))\""], ["proof (prove)\nusing this:\n  \\<phi>' x - f x (\\<phi> x) \\<le> \\<psi>' x - f x (\\<psi> x)\n\ngoal (1 subgoal):\n 1. \\<phi>' x - \\<psi>' x \\<le> dist (f x (\\<phi> x)) (f x (\\<psi> x))", "by (simp add: dist_real_def)"], ["proof (state)\nthis:\n  \\<phi>' x - \\<psi>' x \\<le> dist (f x (\\<phi> x)) (f x (\\<psi> x))\n\ngoal (1 subgoal):\n 1. L * w x \\<le> \\<psi>' x - \\<phi>' x", "also"], ["proof (state)\nthis:\n  \\<phi>' x - \\<psi>' x \\<le> dist (f x (\\<phi> x)) (f x (\\<psi> x))\n\ngoal (1 subgoal):\n 1. L * w x \\<le> \\<psi>' x - \\<phi>' x", "have \"\\<dots> \\<le> L * dist (\\<phi> x) (\\<psi> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f x (\\<phi> x)) (f x (\\<psi> x))\n    \\<le> L * dist (\\<phi> x) (\\<psi> x)", "using \\<open>x \\<in> {a .. b}\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. dist (f x (\\<phi> x)) (f x (\\<psi> x))\n    \\<le> L * dist (\\<phi> x) (\\<psi> x)", "by (rule L)"], ["proof (state)\nthis:\n  dist (f x (\\<phi> x)) (f x (\\<psi> x))\n  \\<le> L * dist (\\<phi> x) (\\<psi> x)\n\ngoal (1 subgoal):\n 1. L * w x \\<le> \\<psi>' x - \\<phi>' x", "also"], ["proof (state)\nthis:\n  dist (f x (\\<phi> x)) (f x (\\<psi> x))\n  \\<le> L * dist (\\<phi> x) (\\<psi> x)\n\ngoal (1 subgoal):\n 1. L * w x \\<le> \\<psi>' x - \\<phi>' x", "have \"\\<dots> \\<le> -L * w x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L * dist (\\<phi> x) (\\<psi> x) \\<le> - L * w x", "using \\<open>0 < L\\<close> a0 that"], ["proof (prove)\nusing this:\n  0 < L\n  a \\<le> a0\n  a0 \\<le> d\n  w ` {a0..d} \\<subseteq> {..0}\n  x \\<in> {a0..d}\n\ngoal (1 subgoal):\n 1. L * dist (\\<phi> x) (\\<psi> x) \\<le> - L * w x", "by (force simp add: dist_real_def abs_real_def w_def algebra_split_simps )"], ["proof (state)\nthis:\n  L * dist (\\<phi> x) (\\<psi> x) \\<le> - L * w x\n\ngoal (1 subgoal):\n 1. L * w x \\<le> \\<psi>' x - \\<phi>' x", "finally"], ["proof (chain)\npicking this:\n  \\<phi>' x - \\<psi>' x \\<le> - L * w x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<phi>' x - \\<psi>' x \\<le> - L * w x\n\ngoal (1 subgoal):\n 1. L * w x \\<le> \\<psi>' x - \\<phi>' x", "by simp"], ["proof (state)\nthis:\n  L * w x \\<le> \\<psi>' x - \\<phi>' x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> {a0..d} \\<Longrightarrow> L * w ?x \\<le> \\<psi>' ?x - \\<phi>' ?x\n\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "have mono: \"mono_on (\\<lambda>x. w x * exp(-L*x)) {a0..d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono_on (\\<lambda>x. w x * exp (- L * x)) {a0..d}", "apply (rule mono_onI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r s.\n       \\<lbrakk>r \\<in> {a0..d}; s \\<in> {a0..d}; r \\<le> s\\<rbrakk>\n       \\<Longrightarrow> w r * exp (- L * r) \\<le> w s * exp (- L * s)", "apply (rule DERIV_nonneg_imp_nondecreasing, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r s x.\n       \\<lbrakk>r \\<in> {a0..d}; s \\<in> {a0..d}; r \\<le> s; r \\<le> x;\n        x \\<le> s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            ((\\<lambda>a.\n                                 w a * exp (- L * a)) has_real_derivative\n                             y)\n                             (at x) \\<and>\n                            0 \\<le> y", "using a0d"], ["proof (prove)\nusing this:\n  {a0..d} \\<subseteq> {a..b}\n\ngoal (1 subgoal):\n 1. \\<And>r s x.\n       \\<lbrakk>r \\<in> {a0..d}; s \\<in> {a0..d}; r \\<le> s; r \\<le> x;\n        x \\<le> s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            ((\\<lambda>a.\n                                 w a * exp (- L * a)) has_real_derivative\n                             y)\n                             (at x) \\<and>\n                            0 \\<le> y", "by (auto intro!: exI[where x=\"(\\<psi>' x - \\<phi>' x) * exp (- (L * x)) - exp (- (L * x)) * L * w x\" for x]\n          derivative_eq_intros L_w_bound simp: )"], ["proof (state)\nthis:\n  mono_on (\\<lambda>x. w x * exp (- L * x)) {a0..d}\n\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  mono_on (\\<lambda>x. w x * exp (- L * x)) {a0..d}", "have \"w a0 * exp (-L * a0) \\<le> w d * exp (-L * d)\""], ["proof (prove)\nusing this:\n  mono_on (\\<lambda>x. w x * exp (- L * x)) {a0..d}\n\ngoal (1 subgoal):\n 1. w a0 * exp (- L * a0) \\<le> w d * exp (- L * d)", "by (rule mono_onD) (use that a0 in auto)"], ["proof (state)\nthis:\n  w a0 * exp (- L * a0) \\<le> w d * exp (- L * d)\n\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  w a0 * exp (- L * a0) \\<le> w d * exp (- L * d)\n\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "have \"\\<dots> < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w d * exp (- L * d) < 0", "using \\<open>w d < 0\\<close>"], ["proof (prove)\nusing this:\n  w d < 0\n\ngoal (1 subgoal):\n 1. w d * exp (- L * d) < 0", "by (simp add: algebra_split_simps)"], ["proof (state)\nthis:\n  w d * exp (- L * d) < 0\n\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  w a0 * exp (- L * a0) < 0", "have \"w a0 * exp (- L * a0) < 0\""], ["proof (prove)\nusing this:\n  w a0 * exp (- L * a0) < 0\n\ngoal (1 subgoal):\n 1. w a0 * exp (- L * a0) < 0", "."], ["proof (state)\nthis:\n  w a0 * exp (- L * a0) < 0\n\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  w a0 * exp (- L * a0) < 0", "have \"w a0 < 0\""], ["proof (prove)\nusing this:\n  w a0 * exp (- L * a0) < 0\n\ngoal (1 subgoal):\n 1. w a0 < 0", "by (simp add: algebra_split_simps)"], ["proof (state)\nthis:\n  w a0 < 0\n\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "have \"a0 \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a0 \\<le> a", "proof (rule ccontr, unfold not_le)"], ["proof (state)\ngoal (1 subgoal):\n 1. a < a0 \\<Longrightarrow> False", "assume \"a < a0\""], ["proof (state)\nthis:\n  a < a0\n\ngoal (1 subgoal):\n 1. a < a0 \\<Longrightarrow> False", "have \"continuous_on {a.. a0} w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on {a..a0} w", "by (rule continuous_intros, assumption) (use a0 a0d in auto)"], ["proof (state)\nthis:\n  continuous_on {a..a0} w\n\ngoal (1 subgoal):\n 1. a < a0 \\<Longrightarrow> False", "from continuous_on_Icc_at_leftD[OF this \\<open>a < a0\\<close>]"], ["proof (chain)\npicking this:\n  (w \\<longlongrightarrow> w a0) (at_left a0)", "have \"(w \\<longlongrightarrow> w a0) (at_left a0)\""], ["proof (prove)\nusing this:\n  (w \\<longlongrightarrow> w a0) (at_left a0)\n\ngoal (1 subgoal):\n 1. (w \\<longlongrightarrow> w a0) (at_left a0)", "."], ["proof (state)\nthis:\n  (w \\<longlongrightarrow> w a0) (at_left a0)\n\ngoal (1 subgoal):\n 1. a < a0 \\<Longrightarrow> False", "from order_tendstoD(2)[OF this \\<open>w a0 < 0\\<close>]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_left a0. w x < 0", "have \"\\<forall>\\<^sub>F x in at_left a0. w x < 0\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_left a0. w x < 0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_left a0. w x < 0", "."], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_left a0. w x < 0\n\ngoal (1 subgoal):\n 1. a < a0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_left a0. w x < 0\n\ngoal (1 subgoal):\n 1. a < a0 \\<Longrightarrow> False", "have \"\\<forall>\\<^sub>F x in at_left a0. a < x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually ((<) a) (at_left a0)", "by (rule order_tendstoD) (auto intro!: \\<open>a < a0\\<close>)"], ["proof (state)\nthis:\n  eventually ((<) a) (at_left a0)\n\ngoal (1 subgoal):\n 1. a < a0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_left a0. w x < 0\n  eventually ((<) a) (at_left a0)", "have \"\\<forall>\\<^sub>F x in at_left a0. a < x \\<and> w x < 0\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_left a0. w x < 0\n  eventually ((<) a) (at_left a0)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_left a0. a < x \\<and> w x < 0", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_left a0. a < x \\<and> w x < 0\n\ngoal (1 subgoal):\n 1. a < a0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_left a0. a < x \\<and> w x < 0", "obtain a1' where \"a1'<a0\" and a1_neg: \"\\<And>y. y > a1' \\<Longrightarrow> y < a0 \\<Longrightarrow> a < y \\<and> w y < 0\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_left a0. a < x \\<and> w x < 0\n\ngoal (1 subgoal):\n 1. (\\<And>a1'.\n        \\<lbrakk>a1' < a0;\n         \\<And>y.\n            \\<lbrakk>a1' < y; y < a0\\<rbrakk>\n            \\<Longrightarrow> a < y \\<and> w y < 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding eventually_at_left_field"], ["proof (prove)\nusing this:\n  \\<exists>b<a0. \\<forall>y>b. y < a0 \\<longrightarrow> a < y \\<and> w y < 0\n\ngoal (1 subgoal):\n 1. (\\<And>a1'.\n        \\<lbrakk>a1' < a0;\n         \\<And>y.\n            \\<lbrakk>a1' < y; y < a0\\<rbrakk>\n            \\<Longrightarrow> a < y \\<and> w y < 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a1' < a0\n  \\<lbrakk>a1' < ?y; ?y < a0\\<rbrakk>\n  \\<Longrightarrow> a < ?y \\<and> w ?y < 0\n\ngoal (1 subgoal):\n 1. a < a0 \\<Longrightarrow> False", "define a1 where \"a1 = (a1' + a0)/2\""], ["proof (state)\nthis:\n  a1 = (a1' + a0) / 2\n\ngoal (1 subgoal):\n 1. a < a0 \\<Longrightarrow> False", "have \"a1 < a0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a1 < a0", "using \\<open>a1' < a0\\<close>"], ["proof (prove)\nusing this:\n  a1' < a0\n\ngoal (1 subgoal):\n 1. a1 < a0", "by (auto simp: a1_def)"], ["proof (state)\nthis:\n  a1 < a0\n\ngoal (1 subgoal):\n 1. a < a0 \\<Longrightarrow> False", "have \"a \\<le> a1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> a1", "using \\<open>a < a0\\<close> a1_neg"], ["proof (prove)\nusing this:\n  a < a0\n  \\<lbrakk>a1' < ?y; ?y < a0\\<rbrakk>\n  \\<Longrightarrow> a < ?y \\<and> w ?y < 0\n\ngoal (1 subgoal):\n 1. a \\<le> a1", "by (force simp: a1_def)"], ["proof (state)\nthis:\n  a \\<le> a1\n\ngoal (1 subgoal):\n 1. a < a0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  a \\<le> a1\n\ngoal (1 subgoal):\n 1. a < a0 \\<Longrightarrow> False", "have \"a1 \\<le> d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a1 \\<le> d", "using \\<open>a1' < a0\\<close> a0(2)"], ["proof (prove)\nusing this:\n  a1' < a0\n  a0 \\<le> d\n\ngoal (1 subgoal):\n 1. a1 \\<le> d", "by (auto simp: a1_def)"], ["proof (state)\nthis:\n  a1 \\<le> d\n\ngoal (1 subgoal):\n 1. a < a0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  a1 \\<le> d\n\ngoal (1 subgoal):\n 1. a < a0 \\<Longrightarrow> False", "have \"w ` {a1..a0} \\<subseteq> {..0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w ` {a1..a0} \\<subseteq> {..0}", "using \\<open>w a0 < 0\\<close> a1_neg a0(3)"], ["proof (prove)\nusing this:\n  w a0 < 0\n  \\<lbrakk>a1' < ?y; ?y < a0\\<rbrakk>\n  \\<Longrightarrow> a < ?y \\<and> w ?y < 0\n  w ` {a0..d} \\<subseteq> {..0}\n\ngoal (1 subgoal):\n 1. w ` {a1..a0} \\<subseteq> {..0}", "by (auto simp: a1_def) smt"], ["proof (state)\nthis:\n  w ` {a1..a0} \\<subseteq> {..0}\n\ngoal (1 subgoal):\n 1. a < a0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  w ` {a1..a0} \\<subseteq> {..0}\n\ngoal (1 subgoal):\n 1. a < a0 \\<Longrightarrow> False", "have \"w ` {a0..d} \\<subseteq> {..0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w ` {a0..d} \\<subseteq> {..0}", "using a0"], ["proof (prove)\nusing this:\n  a \\<le> a0\n  a0 \\<le> d\n  w ` {a0..d} \\<subseteq> {..0}\n\ngoal (1 subgoal):\n 1. w ` {a0..d} \\<subseteq> {..0}", "by auto"], ["proof (state)\nthis:\n  w ` {a0..d} \\<subseteq> {..0}\n\ngoal (1 subgoal):\n 1. a < a0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  a \\<le> a1\n  a1 \\<le> d\n  w ` {a1..a0} \\<subseteq> {..0}\n  w ` {a0..d} \\<subseteq> {..0}", "have \"a0 \\<le> a1\""], ["proof (prove)\nusing this:\n  a \\<le> a1\n  a1 \\<le> d\n  w ` {a1..a0} \\<subseteq> {..0}\n  w ` {a0..d} \\<subseteq> {..0}\n\ngoal (1 subgoal):\n 1. a0 \\<le> a1", "apply (intro a0_least)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<le> a1; a1 \\<le> d; w ` {a1..a0} \\<subseteq> {..0};\n     w ` {a0..d} \\<subseteq> {..0}\\<rbrakk>\n    \\<Longrightarrow> a \\<le> a1\n 2. \\<lbrakk>a \\<le> a1; a1 \\<le> d; w ` {a1..a0} \\<subseteq> {..0};\n     w ` {a0..d} \\<subseteq> {..0}\\<rbrakk>\n    \\<Longrightarrow> a1 \\<le> d\n 3. \\<lbrakk>a \\<le> a1; a1 \\<le> d; w ` {a1..a0} \\<subseteq> {..0};\n     w ` {a0..d} \\<subseteq> {..0}\\<rbrakk>\n    \\<Longrightarrow> w ` {a1..d} \\<subseteq> {..0}", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<le> a1; a1 \\<le> d; w ` {a1..a0} \\<subseteq> {..0};\n     w ` {a0..d} \\<subseteq> {..0}\\<rbrakk>\n    \\<Longrightarrow> a1 \\<le> d\n 2. \\<lbrakk>a \\<le> a1; a1 \\<le> d; w ` {a1..a0} \\<subseteq> {..0};\n     w ` {a0..d} \\<subseteq> {..0}\\<rbrakk>\n    \\<Longrightarrow> w ` {a1..d} \\<subseteq> {..0}", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> a1; a1 \\<le> d; w ` {a1..a0} \\<subseteq> {..0};\n     w ` {a0..d} \\<subseteq> {..0}\\<rbrakk>\n    \\<Longrightarrow> w ` {a1..d} \\<subseteq> {..0}", "by (smt atLeastAtMost_iff image_subset_iff)"], ["proof (state)\nthis:\n  a0 \\<le> a1\n\ngoal (1 subgoal):\n 1. a < a0 \\<Longrightarrow> False", "with \\<open>a1<a0\\<close>"], ["proof (chain)\npicking this:\n  a1 < a0\n  a0 \\<le> a1", "show False"], ["proof (prove)\nusing this:\n  a1 < a0\n  a0 \\<le> a1\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a0 \\<le> a\n\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  a0 \\<le> a", "have \"a0 = a\""], ["proof (prove)\nusing this:\n  a0 \\<le> a\n\ngoal (1 subgoal):\n 1. a0 = a", "using \\<open>a \\<le> a0\\<close>"], ["proof (prove)\nusing this:\n  a0 \\<le> a\n  a \\<le> a0\n\ngoal (1 subgoal):\n 1. a0 = a", "by simp"], ["proof (state)\nthis:\n  a0 = a\n\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "with \\<open>w a0 < 0\\<close>"], ["proof (chain)\npicking this:\n  w a0 < 0\n  a0 = a", "have \"w a < 0\""], ["proof (prove)\nusing this:\n  w a0 < 0\n  a0 = a\n\ngoal (1 subgoal):\n 1. w a < 0", "by simp"], ["proof (state)\nthis:\n  w a < 0\n\ngoal (1 subgoal):\n 1. w d < 0 \\<Longrightarrow> False", "with init"], ["proof (chain)\npicking this:\n  \\<phi> a \\<le> \\<psi> a\n  w a < 0", "show False"], ["proof (prove)\nusing this:\n  \\<phi> a \\<le> \\<psi> a\n  w a < 0\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: w_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?d \\<in> {a..b} \\<Longrightarrow> 0 \\<le> w ?d\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow>\n    \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> \\<psi> x", "then"], ["proof (chain)\npicking this:\n  ?d \\<in> {a..b} \\<Longrightarrow> 0 \\<le> w ?d", "show ?thesis"], ["proof (prove)\nusing this:\n  ?d \\<in> {a..b} \\<Longrightarrow> 0 \\<le> w ?d\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> \\<psi> x", "by (auto simp: w_def)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> \\<psi> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma local_lipschitz_mult:\n  shows \"local_lipschitz  (UNIV::real set) (UNIV::real set) (*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_lipschitz UNIV UNIV (*)", "apply (auto intro!: c1_implies_local_lipschitz[where f'=\"\\<lambda>p. blinfun_mult_left (fst p)\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t x. ((*) t has_derivative (\\<lambda>y. y * t)) (at x)\n 2. continuous_on UNIV (\\<lambda>x. blinfun_mult_left (fst x))", "apply (simp add: has_derivative_mult_right mult_commute_abs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV (\\<lambda>x. blinfun_mult_left (fst x))", "by (auto intro!: continuous_intros)"], ["", "lemma comparison_principle_le_linear:\n  fixes \\<phi> :: \"real \\<Rightarrow> real\"\n  assumes \"continuous_on {a..b} g\"\n  assumes \"(\\<And>t. t \\<in> {a..b} \\<Longrightarrow> (\\<phi> has_real_derivative \\<phi>' t) (at t))\"\n  assumes \"\\<phi> a \\<le> 0\"\n  assumes \"(\\<And>t. t \\<in> {a..b} \\<Longrightarrow> \\<phi>' t \\<le> g t *\\<^sub>R \\<phi> t)\"\n  shows \"\\<forall>t\\<in>{a..b}. \\<phi> t \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>{a..b}. \\<phi> t \\<le> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>{a..b}. \\<phi> t \\<le> 0", "have *: \"\\<And>x. continuous_on {a..b} (\\<lambda>t. g t * x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. continuous_on {a..b} (\\<lambda>t. g t * x)", "using assms(1) continuous_on_mult_right"], ["proof (prove)\nusing this:\n  continuous_on {a..b} g\n  continuous_on ?s ?f \\<Longrightarrow>\n  continuous_on ?s (\\<lambda>x. ?f x * ?c)\n\ngoal (1 subgoal):\n 1. \\<And>x. continuous_on {a..b} (\\<lambda>t. g t * x)", "by blast"], ["proof (state)\nthis:\n  continuous_on {a..b} (\\<lambda>t. g t * ?x)\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>{a..b}. \\<phi> t \\<le> 0", "then"], ["proof (chain)\npicking this:\n  continuous_on {a..b} (\\<lambda>t. g t * ?x)", "have \"local_lipschitz (g`{a..b}) UNIV (*)\""], ["proof (prove)\nusing this:\n  continuous_on {a..b} (\\<lambda>t. g t * ?x)\n\ngoal (1 subgoal):\n 1. local_lipschitz (g ` {a..b}) UNIV (*)", "using local_lipschitz_subset[OF local_lipschitz_mult]"], ["proof (prove)\nusing this:\n  continuous_on {a..b} (\\<lambda>t. g t * ?x)\n  \\<lbrakk>?S \\<subseteq> UNIV; ?Y \\<subseteq> UNIV\\<rbrakk>\n  \\<Longrightarrow> local_lipschitz ?S ?Y (*)\n\ngoal (1 subgoal):\n 1. local_lipschitz (g ` {a..b}) UNIV (*)", "by blast"], ["proof (state)\nthis:\n  local_lipschitz (g ` {a..b}) UNIV (*)\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>{a..b}. \\<phi> t \\<le> 0", "from local_lipschitz_compose1[OF this assms(1)]"], ["proof (chain)\npicking this:\n  local_lipschitz {a..b} UNIV (\\<lambda>t. (*) (g t))", "have \"local_lipschitz {a..b} UNIV (\\<lambda>t. (*) (g t))\""], ["proof (prove)\nusing this:\n  local_lipschitz {a..b} UNIV (\\<lambda>t. (*) (g t))\n\ngoal (1 subgoal):\n 1. local_lipschitz {a..b} UNIV (\\<lambda>t. (*) (g t))", "."], ["proof (state)\nthis:\n  local_lipschitz {a..b} UNIV (\\<lambda>t. (*) (g t))\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>{a..b}. \\<phi> t \\<le> 0", "from comparison_principle_le[OF this _ _ assms(2) _ _ _ assms(3), of b \"\\<lambda>t.0\"] * assms(4)"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x.\n              x \\<in> UNIV \\<Longrightarrow>\n              continuous_on {a..b} (\\<lambda>t. g t * x);\n   {a..b} \\<subseteq> {a..b};\n   \\<And>x. x \\<in> {a..b} \\<Longrightarrow> x \\<in> {a..b};\n   \\<And>x.\n      x \\<in> {a..b} \\<Longrightarrow>\n      ((\\<lambda>a. 0) has_real_derivative 0) (at x);\n   \\<phi> ` {a..b} \\<subseteq> UNIV;\n   (\\<lambda>a. 0) ` {a..b} \\<subseteq> UNIV;\n   \\<And>x.\n      x \\<in> {a..b} \\<Longrightarrow>\n      \\<phi>' x - g x * \\<phi> x \\<le> 0 - g x * 0\\<rbrakk>\n  \\<Longrightarrow> \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> 0\n  continuous_on {a..b} (\\<lambda>t. g t * ?x)\n  ?t \\<in> {a..b} \\<Longrightarrow>\n  \\<phi>' ?t \\<le> g ?t *\\<^sub>R \\<phi> ?t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x.\n              x \\<in> UNIV \\<Longrightarrow>\n              continuous_on {a..b} (\\<lambda>t. g t * x);\n   {a..b} \\<subseteq> {a..b};\n   \\<And>x. x \\<in> {a..b} \\<Longrightarrow> x \\<in> {a..b};\n   \\<And>x.\n      x \\<in> {a..b} \\<Longrightarrow>\n      ((\\<lambda>a. 0) has_real_derivative 0) (at x);\n   \\<phi> ` {a..b} \\<subseteq> UNIV;\n   (\\<lambda>a. 0) ` {a..b} \\<subseteq> UNIV;\n   \\<And>x.\n      x \\<in> {a..b} \\<Longrightarrow>\n      \\<phi>' x - g x * \\<phi> x \\<le> 0 - g x * 0\\<rbrakk>\n  \\<Longrightarrow> \\<forall>x\\<in>{a..b}. \\<phi> x \\<le> 0\n  continuous_on {a..b} (\\<lambda>t. g t * ?x)\n  ?t \\<in> {a..b} \\<Longrightarrow>\n  \\<phi>' ?t \\<le> g ?t *\\<^sub>R \\<phi> ?t\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>{a..b}. \\<phi> t \\<le> 0", "by auto"], ["proof (state)\nthis:\n  \\<forall>t\\<in>{a..b}. \\<phi> t \\<le> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Locally Lipschitz ODEs\\<close>"], ["", "context ll_on_open_it begin"], ["", "lemma flow_lipschitzE:\n  assumes \"{a .. b} \\<subseteq> existence_ivl t0 x\"\n  obtains L where \"L-lipschitz_on {a .. b} (flow t0 x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>L.\n        L-lipschitz_on {a..b} (flow t0 x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>L.\n        L-lipschitz_on {a..b} (flow t0 x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have f': \"(flow t0 x has_derivative (\\<lambda>i. i *\\<^sub>R f t (flow t0 x t))) (at t within {a .. b})\" if \"t \\<in> {a .. b}\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. (flow t0 x has_derivative (\\<lambda>i. i *\\<^sub>R f t (flow t0 x t)))\n     (at t within {a..b})", "using flow_has_derivative[of t x] assms that"], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl t0 x \\<Longrightarrow>\n  (flow t0 x has_derivative (\\<lambda>i. i *\\<^sub>R f t (flow t0 x t)))\n   (at t)\n  {a..b} \\<subseteq> existence_ivl t0 x\n  t \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. (flow t0 x has_derivative (\\<lambda>i. i *\\<^sub>R f t (flow t0 x t)))\n     (at t within {a..b})", "by (auto simp: has_derivative_at_withinI)"], ["proof (state)\nthis:\n  ?t \\<in> {a..b} \\<Longrightarrow>\n  (flow t0 x has_derivative (\\<lambda>i. i *\\<^sub>R f ?t (flow t0 x ?t)))\n   (at ?t within {a..b})\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        L-lipschitz_on {a..b} (flow t0 x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"compact ((\\<lambda>t. f t (flow t0 x t)) ` {a .. b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compact ((\\<lambda>t. f t (flow t0 x t)) ` {a..b})", "using assms"], ["proof (prove)\nusing this:\n  {a..b} \\<subseteq> existence_ivl t0 x\n\ngoal (1 subgoal):\n 1. compact ((\\<lambda>t. f t (flow t0 x t)) ` {a..b})", "apply (auto intro!: compact_continuous_image continuous_intros)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>{a..b} \\<subseteq> existence_ivl t0 x; a \\<le> xa;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> x \\<in> X\n 2. \\<And>xa.\n       \\<lbrakk>{a..b} \\<subseteq> existence_ivl t0 x; a \\<le> xa;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> T\n 3. \\<And>xa.\n       \\<lbrakk>{a..b} \\<subseteq> existence_ivl t0 x; a \\<le> xa;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> flow t0 x xa \\<in> X", "using local.existence_ivl_empty2"], ["proof (prove)\nusing this:\n  ?x0.0 \\<notin> X \\<Longrightarrow> existence_ivl t0 ?x0.0 = {}\n\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>{a..b} \\<subseteq> existence_ivl t0 x; a \\<le> xa;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> x \\<in> X\n 2. \\<And>xa.\n       \\<lbrakk>{a..b} \\<subseteq> existence_ivl t0 x; a \\<le> xa;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> T\n 3. \\<And>xa.\n       \\<lbrakk>{a..b} \\<subseteq> existence_ivl t0 x; a \\<le> xa;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> flow t0 x xa \\<in> X", "apply fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>{a..b} \\<subseteq> existence_ivl t0 x; a \\<le> xa;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> T\n 2. \\<And>xa.\n       \\<lbrakk>{a..b} \\<subseteq> existence_ivl t0 x; a \\<le> xa;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> flow t0 x xa \\<in> X", "apply (meson atLeastAtMost_iff general.existence_ivl_subset in_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>{a..b} \\<subseteq> existence_ivl t0 x; a \\<le> xa;\n        xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> flow t0 x xa \\<in> X", "by (simp add: general.flow_in_domain subset_iff)"], ["proof (state)\nthis:\n  compact ((\\<lambda>t. f t (flow t0 x t)) ` {a..b})\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        L-lipschitz_on {a..b} (flow t0 x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  compact ((\\<lambda>t. f t (flow t0 x t)) ` {a..b})", "obtain C where \"t \\<in> {a .. b} \\<Longrightarrow> norm (f t (flow t0 x t)) \\<le> C\" for t"], ["proof (prove)\nusing this:\n  compact ((\\<lambda>t. f t (flow t0 x t)) ` {a..b})\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        (\\<And>t.\n            t \\<in> {a..b} \\<Longrightarrow>\n            norm (f t (flow t0 x t)) \\<le> C) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (fastforce dest!: compact_imp_bounded simp: bounded_iff intro: that)"], ["proof (state)\nthis:\n  ?t \\<in> {a..b} \\<Longrightarrow> norm (f ?t (flow t0 x ?t)) \\<le> C\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        L-lipschitz_on {a..b} (flow t0 x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  ?t \\<in> {a..b} \\<Longrightarrow> norm (f ?t (flow t0 x ?t)) \\<le> C", "have \"t \\<in> {a..b} \\<Longrightarrow> onorm (\\<lambda>i. i *\\<^sub>R f t (flow t0 x t)) \\<le> max 0 C\" for t"], ["proof (prove)\nusing this:\n  ?t \\<in> {a..b} \\<Longrightarrow> norm (f ?t (flow t0 x ?t)) \\<le> C\n\ngoal (1 subgoal):\n 1. t \\<in> {a..b} \\<Longrightarrow>\n    onorm (\\<lambda>i. i *\\<^sub>R f t (flow t0 x t)) \\<le> max 0 C", "apply (subst onorm_scaleR_left)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>t \\<in> {a..b};\n     \\<And>t.\n        t \\<in> {a..b} \\<Longrightarrow>\n        norm (f t (flow t0 x t)) \\<le> C\\<rbrakk>\n    \\<Longrightarrow> bounded_linear (\\<lambda>i. i)\n 2. \\<lbrakk>t \\<in> {a..b};\n     \\<And>t.\n        t \\<in> {a..b} \\<Longrightarrow>\n        norm (f t (flow t0 x t)) \\<le> C\\<rbrakk>\n    \\<Longrightarrow> onorm (\\<lambda>i. i) * norm (f t (flow t0 x t))\n                      \\<le> max 0 C", "apply (auto simp: onorm_id max_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>t.\n                a \\<le> t \\<and> t \\<le> b \\<Longrightarrow>\n                norm (f t (flow t0 x t)) \\<le> C;\n     a \\<le> t; t \\<le> b; \\<not> 0 \\<le> C\\<rbrakk>\n    \\<Longrightarrow> f t (flow t0 x t) = (0::'a)", "by (metis diff_0_right diff_mono diff_self norm_ge_zero)"], ["proof (state)\nthis:\n  ?t \\<in> {a..b} \\<Longrightarrow>\n  onorm (\\<lambda>i. i *\\<^sub>R f ?t (flow t0 x ?t)) \\<le> max 0 C\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        L-lipschitz_on {a..b} (flow t0 x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from bounded_derivative_imp_lipschitz[OF f' _ this]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x. x \\<in> {a..b} \\<Longrightarrow> x \\<in> {a..b};\n   convex {a..b}; \\<And>x. x \\<in> {a..b} \\<Longrightarrow> x \\<in> {a..b};\n   0 \\<le> max 0 C\\<rbrakk>\n  \\<Longrightarrow> (max 0 C)-lipschitz_on {a..b} (flow t0 x)", "have \"(max 0 C)-lipschitz_on {a..b} (flow t0 x)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x. x \\<in> {a..b} \\<Longrightarrow> x \\<in> {a..b};\n   convex {a..b}; \\<And>x. x \\<in> {a..b} \\<Longrightarrow> x \\<in> {a..b};\n   0 \\<le> max 0 C\\<rbrakk>\n  \\<Longrightarrow> (max 0 C)-lipschitz_on {a..b} (flow t0 x)\n\ngoal (1 subgoal):\n 1. (max 0 C)-lipschitz_on {a..b} (flow t0 x)", "by auto"], ["proof (state)\nthis:\n  (max 0 C)-lipschitz_on {a..b} (flow t0 x)\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        L-lipschitz_on {a..b} (flow t0 x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  (max 0 C)-lipschitz_on {a..b} (flow t0 x)", "show ?thesis"], ["proof (prove)\nusing this:\n  (max 0 C)-lipschitz_on {a..b} (flow t0 x)\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma flow_undefined0: \"t \\<notin> existence_ivl t0 x \\<Longrightarrow> flow t0 x t = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<notin> existence_ivl t0 x \\<Longrightarrow> flow t0 x t = (0::'a)", "unfolding flow_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<notin> existence_ivl t0 x \\<Longrightarrow>\n    (if t \\<in> existence_ivl t0 x then csol t0 x t t else (0::'a)) =\n    (0::'a)", "by auto"], ["", "lemma csols_undefined: \"x \\<notin> X \\<Longrightarrow> csols t0 x = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> X \\<Longrightarrow> csols t0 x = {}", "apply (auto simp: csols_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a t0 \\<notin> X; x = a t0; {t0--b} \\<subseteq> T;\n        (a solves_ode f) {t0--b} X\\<rbrakk>\n       \\<Longrightarrow> False", "using general.existence_ivl_empty2 general.existence_ivl_maximal_segment"], ["proof (prove)\nusing this:\n  ?x0.0 \\<notin> X \\<Longrightarrow> existence_ivl ?t0.0 ?x0.0 = {}\n  \\<lbrakk>(?x solves_ode f) {?t0.0--?t} X; ?x ?t0.0 = ?x0.0;\n   {?t0.0--?t} \\<subseteq> T\\<rbrakk>\n  \\<Longrightarrow> ?t \\<in> existence_ivl ?t0.0 ?x0.0\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a t0 \\<notin> X; x = a t0; {t0--b} \\<subseteq> T;\n        (a solves_ode f) {t0--b} X\\<rbrakk>\n       \\<Longrightarrow> False", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemmas existence_ivl_undefined = existence_ivl_empty2"], ["", "end"], ["", "subsection \\<open>Reverse flow as Sublocale\\<close>"], ["", "lemma range_preflect_0[simp]: \"range (preflect 0) = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. surj (preflect (0::'a))", "by (auto simp: preflect_def)"], ["", "lemma range_uminus[simp]: \"range uminus = (UNIV::'a::ab_group_add set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. surj uminus", "by auto"], ["", "context auto_ll_on_open begin"], ["", "sublocale rev: auto_ll_on_open \"-f\" rewrites \"-(-f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. auto_ll_on_open (- f) X &&& - (- f) = f", "apply unfold_locales"], ["proof (prove)\ngoal (3 subgoals):\n 1. local_lipschitz UNIV X (\\<lambda>_. - f)\n 2. open X\n 3. - (- f) = f", "using auto_local_lipschitz auto_open_domain"], ["proof (prove)\nusing this:\n  local_lipschitz UNIV X (\\<lambda>_. f)\n  open X\n\ngoal (3 subgoals):\n 1. local_lipschitz UNIV X (\\<lambda>_. - f)\n 2. open X\n 3. - (- f) = f", "unfolding fun_Compl_def local_lipschitz_minus"], ["proof (prove)\nusing this:\n  local_lipschitz UNIV X (\\<lambda>_. f)\n  open X\n\ngoal (3 subgoals):\n 1. local_lipschitz UNIV X (\\<lambda>_. f)\n 2. open X\n 3. (\\<lambda>x. - (- f x)) = f", "by auto"], ["", "lemma existence_ivl_eq_rev0: \"existence_ivl0 y = uminus ` rev.existence_ivl0 y\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. existence_ivl0 y = uminus ` rev.existence_ivl0 y", "by (auto simp: existence_ivl_eq_rev rev.existence_ivl0_def preflect_def)"], ["", "lemma rev_existence_ivl_eq0: \"rev.existence_ivl0 y = uminus ` existence_ivl0 y\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. rev.existence_ivl0 y = uminus ` existence_ivl0 y", "using uminus_uminus_image[of \"rev.existence_ivl0 y\"]"], ["proof (prove)\nusing this:\n  uminus ` uminus ` rev.existence_ivl0 y = rev.existence_ivl0 y\n\ngoal (1 subgoal):\n 1. rev.existence_ivl0 y = uminus ` existence_ivl0 y", "by (simp add: existence_ivl_eq_rev0)"], ["", "lemma flow_eq_rev0: \"flow0 y t = rev.flow0 y (-t)\" for y t"], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 y t = rev.flow0 y (- t)", "apply (cases \"t \\<in> existence_ivl0 y\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. t \\<in> existence_ivl0 y \\<Longrightarrow> flow0 y t = rev.flow0 y (- t)\n 2. t \\<notin> existence_ivl0 y \\<Longrightarrow>\n    flow0 y t = rev.flow0 y (- t)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> existence_ivl0 y \\<Longrightarrow> flow0 y t = rev.flow0 y (- t)", "apply (subst flow_eq_rev(2), assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> existence_ivl0 y \\<Longrightarrow>\n    ll_on_open.flow (range (preflect 0)) (\\<lambda>t. - f) X 0 y\n     (preflect 0 t) =\n    rev.flow0 y (- t)", "apply (subst rev.flow0_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> existence_ivl0 y \\<Longrightarrow>\n    ll_on_open.flow (range (preflect 0)) (\\<lambda>t. - f) X 0 y\n     (preflect 0 t) =\n    ll_on_open.flow UNIV (\\<lambda>_. - f) X 0 y (- t)", "by (simp add: preflect_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<notin> existence_ivl0 y \\<Longrightarrow>\n    flow0 y t = rev.flow0 y (- t)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<notin> existence_ivl0 y \\<Longrightarrow>\n    flow0 y t = rev.flow0 y (- t)", "apply (frule flow_undefined0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<notin> existence_ivl0 y; flow0 y t = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> flow0 y t = rev.flow0 y (- t)", "by (auto simp: existence_ivl_eq_rev0 rev.flow_undefined0)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rev_eq_flow: \"rev.flow0 y t = flow0 y (-t)\" for y t"], ["proof (prove)\ngoal (1 subgoal):\n 1. rev.flow0 y t = flow0 y (- t)", "apply (subst flow_eq_rev0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. rev.flow0 y t = rev.flow0 y (- (- t))", "using uminus_uminus_image[of \"rev.existence_ivl0 y\"]"], ["proof (prove)\nusing this:\n  uminus ` uminus ` rev.existence_ivl0 y = rev.existence_ivl0 y\n\ngoal (1 subgoal):\n 1. rev.flow0 y t = rev.flow0 y (- (- t))", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. uminus ` uminus ` rev.existence_ivl0 y =\n    rev.existence_ivl0 y \\<Longrightarrow>\n    rev.flow0 y t = rev.flow0 y (- (- t))", "apply (subst (asm) existence_ivl_eq_rev0[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. uminus ` existence_ivl0 y = rev.existence_ivl0 y \\<Longrightarrow>\n    rev.flow0 y t = rev.flow0 y (- (- t))", "by auto"], ["", "lemma rev_flow_image_eq: \"rev.flow0 x ` S = flow0 x ` (uminus ` S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev.flow0 x ` S = flow0 x ` uminus ` S", "unfolding rev_eq_flow[abs_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. flow0 x (- t)) ` S = flow0 x ` uminus ` S", "by force"], ["", "lemma flow_image_eq_rev: \"flow0 x ` S = rev.flow0 x ` (uminus ` S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 x ` S = rev.flow0 x ` uminus ` S", "unfolding rev_eq_flow[abs_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 x ` S = (\\<lambda>t. flow0 x (- t)) ` uminus ` S", "by force"], ["", "end"], ["", "context c1_on_open begin"], ["", "sublocale rev: c1_on_open \"-f\" \"-f'\" rewrites \"-(-f) = f\" and \"-(-f') = f'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c1_on_open (- f) (- f') X &&& - (- f) = f &&& - (- f') = f'", "by (rule c1_on_open_rev) auto"], ["", "end"], ["", "context c1_on_open_euclidean begin"], ["", "sublocale rev: c1_on_open_euclidean \"-f\" \"-f'\" rewrites \"-(-f) = f\" and \"-(-f') = f'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c1_on_open_euclidean (- f) (- f') X &&& - (- f) = f &&& - (- f') = f'", "by unfold_locales auto"], ["", "end"], ["", "subsection \\<open>Autonomous LL ODE : Existence Interval and trapping on the interval\\<close>"], ["", "lemma bdd_above_is_intervalI: \"bdd_above I\"\n  if \"is_interval I\" \"a \\<le> b\" \"a \\<in> I\" \"b \\<notin> I\" for I::\"real set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bdd_above I", "by (meson bdd_above_def is_interval_1 le_cases that)"], ["", "lemma bdd_below_is_intervalI: \"bdd_below I\"\n  if \"is_interval I\" \"a \\<le> b\" \"a \\<notin> I\" \"b \\<in> I\" for I::\"real set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bdd_below I", "by (meson bdd_below_def is_interval_1 le_cases that)"], ["", "context auto_ll_on_open begin"], ["", "lemma open_existence_ivl0:\n  assumes x : \"x \\<in> X\"\n  shows \"\\<exists>a b. a < 0 \\<and> 0 < b \\<and> {a..b} \\<subseteq> existence_ivl0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       a < 0 \\<and> 0 < b \\<and> {a..b} \\<subseteq> existence_ivl0 x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       a < 0 \\<and> 0 < b \\<and> {a..b} \\<subseteq> existence_ivl0 x", "have a1:\"0 \\<in> existence_ivl0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<in> existence_ivl0 x", "by (simp add: x)"], ["proof (state)\nthis:\n  0 \\<in> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       a < 0 \\<and> 0 < b \\<and> {a..b} \\<subseteq> existence_ivl0 x", "have a2: \"open (existence_ivl0 x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open (existence_ivl0 x)", "by (simp add: x)"], ["proof (state)\nthis:\n  open (existence_ivl0 x)\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       a < 0 \\<and> 0 < b \\<and> {a..b} \\<subseteq> existence_ivl0 x", "from a1 a2"], ["proof (chain)\npicking this:\n  0 \\<in> existence_ivl0 x\n  open (existence_ivl0 x)", "obtain d where \"d > 0\" \"ball 0 d \\<subseteq> existence_ivl0 x\""], ["proof (prove)\nusing this:\n  0 \\<in> existence_ivl0 x\n  open (existence_ivl0 x)\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<lbrakk>0 < d; ball 0 d \\<subseteq> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using openE"], ["proof (prove)\nusing this:\n  0 \\<in> existence_ivl0 x\n  open (existence_ivl0 x)\n  \\<lbrakk>open ?S; ?x \\<in> ?S;\n   \\<And>e.\n      \\<lbrakk>0 < e; ball ?x e \\<subseteq> ?S\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<lbrakk>0 < d; ball 0 d \\<subseteq> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  0 < d\n  ball 0 d \\<subseteq> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       a < 0 \\<and> 0 < b \\<and> {a..b} \\<subseteq> existence_ivl0 x", "have \"{-d/2..d/2} \\<subseteq> ball 0 d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {- d / 2..d / 2} \\<subseteq> ball 0 d", "using \\<open>0 < d\\<close> dist_norm mem_ball"], ["proof (prove)\nusing this:\n  0 < d\n  dist ?x ?y = norm (?x - ?y)\n  (?y \\<in> ball ?x ?e) = (dist ?x ?y < ?e)\n\ngoal (1 subgoal):\n 1. {- d / 2..d / 2} \\<subseteq> ball 0 d", "by auto"], ["proof (state)\nthis:\n  {- d / 2..d / 2} \\<subseteq> ball 0 d\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       a < 0 \\<and> 0 < b \\<and> {a..b} \\<subseteq> existence_ivl0 x", "thus ?thesis"], ["proof (prove)\nusing this:\n  {- d / 2..d / 2} \\<subseteq> ball 0 d\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       a < 0 \\<and> 0 < b \\<and> {a..b} \\<subseteq> existence_ivl0 x", "by (smt \\<open>0 < d\\<close> \\<open>ball 0 d \\<subseteq> existence_ivl0 x\\<close> divide_minus_left half_gt_zero order_trans)"], ["proof (state)\nthis:\n  \\<exists>a b.\n     a < 0 \\<and> 0 < b \\<and> {a..b} \\<subseteq> existence_ivl0 x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma open_existence_ivl':\n  assumes x : \"x \\<in> X\"\n  obtains a where \"a > 0\"  \"{-a..a} \\<subseteq> existence_ivl0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a; {- a..a} \\<subseteq> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a; {- a..a} \\<subseteq> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from open_existence_ivl0[OF assms(1)]"], ["proof (chain)\npicking this:\n  \\<exists>a b.\n     a < 0 \\<and> 0 < b \\<and> {a..b} \\<subseteq> existence_ivl0 x", "obtain a b where ab: \"a < 0\" \"0 < b\" \"{a..b} \\<subseteq> existence_ivl0 x\""], ["proof (prove)\nusing this:\n  \\<exists>a b.\n     a < 0 \\<and> 0 < b \\<and> {a..b} \\<subseteq> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>a < 0; 0 < b; {a..b} \\<subseteq> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a < 0\n  0 < b\n  {a..b} \\<subseteq> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a; {- a..a} \\<subseteq> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  a < 0\n  0 < b\n  {a..b} \\<subseteq> existence_ivl0 x", "have \"min (-a) b > 0\""], ["proof (prove)\nusing this:\n  a < 0\n  0 < b\n  {a..b} \\<subseteq> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. 0 < min (- a) b", "by linarith"], ["proof (state)\nthis:\n  0 < min (- a) b\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a; {- a..a} \\<subseteq> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"{-min (-a) b .. min(-a) b} \\<subseteq> {a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {- min (- a) b..min (- a) b} \\<subseteq> {a..b}", "by auto"], ["proof (state)\nthis:\n  {- min (- a) b..min (- a) b} \\<subseteq> {a..b}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a; {- a..a} \\<subseteq> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  {- min (- a) b..min (- a) b} \\<subseteq> {a..b}\n\ngoal (1 subgoal):\n 1. thesis", "using ab(3) that[OF \\<open>min (-a) b > 0\\<close>]"], ["proof (prove)\nusing this:\n  {- min (- a) b..min (- a) b} \\<subseteq> {a..b}\n  {a..b} \\<subseteq> existence_ivl0 x\n  {- min (- a) b..min (- a) b}\n  \\<subseteq> existence_ivl0 x \\<Longrightarrow>\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma open_existence_ivl_on_compact:\n  assumes C: \"C \\<subseteq> X\" and \"compact C\" \"C \\<noteq> {}\"\n  obtains a where \"a > 0\" \"\\<And>x. x \\<in> C \\<Longrightarrow> {-a..a} \\<subseteq> existence_ivl0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a;\n         \\<And>x.\n            x \\<in> C \\<Longrightarrow>\n            {- a..a} \\<subseteq> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a;\n         \\<And>x.\n            x \\<in> C \\<Longrightarrow>\n            {- a..a} \\<subseteq> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from existence_ivl_cballs"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 \\<in> UNIV; ?x0.0 \\<in> X;\n   \\<And>t u L.\n      \\<lbrakk>\\<And>y.\n                  y \\<in> cball ?x0.0 u \\<Longrightarrow>\n                  cball 0 t \\<subseteq> existence_ivl0 y;\n       \\<And>s y.\n          \\<lbrakk>y \\<in> cball ?x0.0 u; s \\<in> cball 0 t\\<rbrakk>\n          \\<Longrightarrow> flow0 y s \\<in> cball y u;\n       L-lipschitz_on (cball 0 t \\<times> cball ?x0.0 u)\n        (\\<lambda>(t, x). flow0 x t);\n       \\<And>y.\n          y \\<in> cball ?x0.0 u \\<Longrightarrow> cball y u \\<subseteq> X;\n       0 < t; 0 < u\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "have \"\\<forall>x\\<in>C. \\<exists>e>0. \\<exists>t>0. \\<forall>y\\<in>cball x e. cball 0 t\\<subseteq>existence_ivl0 y\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<in> UNIV; ?x0.0 \\<in> X;\n   \\<And>t u L.\n      \\<lbrakk>\\<And>y.\n                  y \\<in> cball ?x0.0 u \\<Longrightarrow>\n                  cball 0 t \\<subseteq> existence_ivl0 y;\n       \\<And>s y.\n          \\<lbrakk>y \\<in> cball ?x0.0 u; s \\<in> cball 0 t\\<rbrakk>\n          \\<Longrightarrow> flow0 y s \\<in> cball y u;\n       L-lipschitz_on (cball 0 t \\<times> cball ?x0.0 u)\n        (\\<lambda>(t, x). flow0 x t);\n       \\<And>y.\n          y \\<in> cball ?x0.0 u \\<Longrightarrow> cball y u \\<subseteq> X;\n       0 < t; 0 < u\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>C.\n       \\<exists>e>0.\n          \\<exists>t>0.\n             \\<forall>y\\<in>cball x e.\n                cball 0 t \\<subseteq> existence_ivl0 y", "by (metis (full_types) C Int_absorb1 Int_iff UNIV_I)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>C.\n     \\<exists>e>0.\n        \\<exists>t>0.\n           \\<forall>y\\<in>cball x e. cball 0 t \\<subseteq> existence_ivl0 y\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a;\n         \\<And>x.\n            x \\<in> C \\<Longrightarrow>\n            {- a..a} \\<subseteq> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>C.\n     \\<exists>e>0.\n        \\<exists>t>0.\n           \\<forall>y\\<in>cball x e. cball 0 t \\<subseteq> existence_ivl0 y", "obtain d' t' where *:\n    \"\\<forall>x\\<in>C. 0 < d' x \\<and> t' x > 0 \\<and> (\\<forall>y\\<in>cball x (d' x). cball 0 (t' x) \\<subseteq> existence_ivl0 y)\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>C.\n     \\<exists>e>0.\n        \\<exists>t>0.\n           \\<forall>y\\<in>cball x e. cball 0 t \\<subseteq> existence_ivl0 y\n\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<forall>x\\<in>C.\n           0 < d' x \\<and>\n           0 < t' x \\<and>\n           (\\<forall>y\\<in>cball x (d' x).\n               cball 0 (t' x)\n               \\<subseteq> existence_ivl0 y) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<forall>x\\<in>C.\n     0 < d' x \\<and>\n     0 < t' x \\<and>\n     (\\<forall>y\\<in>cball x (d' x).\n         cball 0 (t' x) \\<subseteq> existence_ivl0 y)\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a;\n         \\<And>x.\n            x \\<in> C \\<Longrightarrow>\n            {- a..a} \\<subseteq> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with compactE_image[OF \\<open>compact C\\<close>, of C \"\\<lambda>x. ball x (d' x)\"]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>T. T \\<in> C \\<Longrightarrow> open (ball T (d' T));\n   C \\<subseteq> (\\<Union>c\\<in>C. ball c (d' c));\n   \\<And>C'.\n      \\<lbrakk>C' \\<subseteq> C; finite C';\n       C \\<subseteq> (\\<Union>c\\<in>C'. ball c (d' c))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<forall>x\\<in>C.\n     0 < d' x \\<and>\n     0 < t' x \\<and>\n     (\\<forall>y\\<in>cball x (d' x).\n         cball 0 (t' x) \\<subseteq> existence_ivl0 y)", "obtain C' where \"C' \\<subseteq> C\" and [simp]: \"finite C'\" and C_subset: \"C \\<subseteq> (\\<Union>c\\<in>C'. ball c (d' c))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>T. T \\<in> C \\<Longrightarrow> open (ball T (d' T));\n   C \\<subseteq> (\\<Union>c\\<in>C. ball c (d' c));\n   \\<And>C'.\n      \\<lbrakk>C' \\<subseteq> C; finite C';\n       C \\<subseteq> (\\<Union>c\\<in>C'. ball c (d' c))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<forall>x\\<in>C.\n     0 < d' x \\<and>\n     0 < t' x \\<and>\n     (\\<forall>y\\<in>cball x (d' x).\n         cball 0 (t' x) \\<subseteq> existence_ivl0 y)\n\ngoal (1 subgoal):\n 1. (\\<And>C'.\n        \\<lbrakk>C' \\<subseteq> C; finite C';\n         C \\<subseteq> (\\<Union>c\\<in>C'. ball c (d' c))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  C' \\<subseteq> C\n  finite C'\n  C \\<subseteq> (\\<Union>c\\<in>C'. ball c (d' c))\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a;\n         \\<And>x.\n            x \\<in> C \\<Longrightarrow>\n            {- a..a} \\<subseteq> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from C_subset \\<open>C \\<noteq> {}\\<close>"], ["proof (chain)\npicking this:\n  C \\<subseteq> (\\<Union>c\\<in>C'. ball c (d' c))\n  C \\<noteq> {}", "have [simp]: \"C' \\<noteq> {}\""], ["proof (prove)\nusing this:\n  C \\<subseteq> (\\<Union>c\\<in>C'. ball c (d' c))\n  C \\<noteq> {}\n\ngoal (1 subgoal):\n 1. C' \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  C' \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a;\n         \\<And>x.\n            x \\<in> C \\<Longrightarrow>\n            {- a..a} \\<subseteq> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define d where \"d = Min (d' ` C')\""], ["proof (state)\nthis:\n  d = Min (d' ` C')\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a;\n         \\<And>x.\n            x \\<in> C \\<Longrightarrow>\n            {- a..a} \\<subseteq> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define t where \"t = Min (t' ` C')\""], ["proof (state)\nthis:\n  t = Min (t' ` C')\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a;\n         \\<And>x.\n            x \\<in> C \\<Longrightarrow>\n            {- a..a} \\<subseteq> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"t > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < t", "using * \\<open>C' \\<subseteq> C\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>C.\n     0 < d' x \\<and>\n     0 < t' x \\<and>\n     (\\<forall>y\\<in>cball x (d' x).\n         cball 0 (t' x) \\<subseteq> existence_ivl0 y)\n  C' \\<subseteq> C\n\ngoal (1 subgoal):\n 1. 0 < t", "by (auto simp: t_def)"], ["proof (state)\nthis:\n  0 < t\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a;\n         \\<And>x.\n            x \\<in> C \\<Longrightarrow>\n            {- a..a} \\<subseteq> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  0 < t\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a;\n         \\<And>x.\n            x \\<in> C \\<Longrightarrow>\n            {- a..a} \\<subseteq> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"{-t .. t} \\<subseteq> existence_ivl0 x\" if \"x \\<in> C\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. {- t..t} \\<subseteq> existence_ivl0 x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {- t..t} \\<subseteq> existence_ivl0 x", "from C_subset that \\<open>C' \\<subseteq> C\\<close>"], ["proof (chain)\npicking this:\n  C \\<subseteq> (\\<Union>c\\<in>C'. ball c (d' c))\n  x \\<in> C\n  C' \\<subseteq> C", "obtain c where c: \"c \\<in> C'\" \"x \\<in> ball c (d' c)\" \"c \\<in> C\""], ["proof (prove)\nusing this:\n  C \\<subseteq> (\\<Union>c\\<in>C'. ball c (d' c))\n  x \\<in> C\n  C' \\<subseteq> C\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> C'; x \\<in> ball c (d' c); c \\<in> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  c \\<in> C'\n  x \\<in> ball c (d' c)\n  c \\<in> C\n\ngoal (1 subgoal):\n 1. {- t..t} \\<subseteq> existence_ivl0 x", "then"], ["proof (chain)\npicking this:\n  c \\<in> C'\n  x \\<in> ball c (d' c)\n  c \\<in> C", "have \"{-t .. t} \\<subseteq> cball 0 (t' c)\""], ["proof (prove)\nusing this:\n  c \\<in> C'\n  x \\<in> ball c (d' c)\n  c \\<in> C\n\ngoal (1 subgoal):\n 1. {- t..t} \\<subseteq> cball 0 (t' c)", "by (auto simp: abs_real_def t_def minus_le_iff)"], ["proof (state)\nthis:\n  {- t..t} \\<subseteq> cball 0 (t' c)\n\ngoal (1 subgoal):\n 1. {- t..t} \\<subseteq> existence_ivl0 x", "also"], ["proof (state)\nthis:\n  {- t..t} \\<subseteq> cball 0 (t' c)\n\ngoal (1 subgoal):\n 1. {- t..t} \\<subseteq> existence_ivl0 x", "from c"], ["proof (chain)\npicking this:\n  c \\<in> C'\n  x \\<in> ball c (d' c)\n  c \\<in> C", "have \"cball 0 (t' c) \\<subseteq> existence_ivl0 x\""], ["proof (prove)\nusing this:\n  c \\<in> C'\n  x \\<in> ball c (d' c)\n  c \\<in> C\n\ngoal (1 subgoal):\n 1. cball 0 (t' c) \\<subseteq> existence_ivl0 x", "using *[rule_format, OF \\<open>c \\<in> C\\<close>]"], ["proof (prove)\nusing this:\n  c \\<in> C'\n  x \\<in> ball c (d' c)\n  c \\<in> C\n  0 < d' c \\<and>\n  0 < t' c \\<and>\n  (\\<forall>y\\<in>cball c (d' c).\n      cball 0 (t' c) \\<subseteq> existence_ivl0 y)\n\ngoal (1 subgoal):\n 1. cball 0 (t' c) \\<subseteq> existence_ivl0 x", "by auto"], ["proof (state)\nthis:\n  cball 0 (t' c) \\<subseteq> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. {- t..t} \\<subseteq> existence_ivl0 x", "finally"], ["proof (chain)\npicking this:\n  {- t..t} \\<subseteq> existence_ivl0 x", "show ?thesis"], ["proof (prove)\nusing this:\n  {- t..t} \\<subseteq> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. {- t..t} \\<subseteq> existence_ivl0 x", "."], ["proof (state)\nthis:\n  {- t..t} \\<subseteq> existence_ivl0 x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> C \\<Longrightarrow> {- t..t} \\<subseteq> existence_ivl0 ?x\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a;\n         \\<And>x.\n            x \\<in> C \\<Longrightarrow>\n            {- a..a} \\<subseteq> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  0 < t\n  ?x \\<in> C \\<Longrightarrow> {- t..t} \\<subseteq> existence_ivl0 ?x", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < t\n  ?x \\<in> C \\<Longrightarrow> {- t..t} \\<subseteq> existence_ivl0 ?x\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"trapped_forward x K \\<longleftrightarrow> (flow0 x ` (existence_ivl0 x \\<inter> {0..}) \\<subseteq> K)\"\n  \\<comment> \\<open>TODO: use this for backwards trapped, invariant, and all assumptions\\<close>"], ["", "definition \"trapped_backward x K \\<longleftrightarrow> (flow0 x ` (existence_ivl0 x \\<inter> {..0}) \\<subseteq> K)\""], ["", "definition \"trapped x K \\<longleftrightarrow> trapped_forward x K \\<and> trapped_backward x K\""], ["", "lemma trapped_iff_on_existence_ivl0:\n  \"trapped x K \\<longleftrightarrow> (flow0 x ` (existence_ivl0 x) \\<subseteq> K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trapped x K = (flow0 x ` existence_ivl0 x \\<subseteq> K)", "unfolding trapped_def trapped_forward_def trapped_backward_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (flow0 x ` (existence_ivl0 x \\<inter> {0..}) \\<subseteq> K \\<and>\n     flow0 x ` (existence_ivl0 x \\<inter> {..0}) \\<subseteq> K) =\n    (flow0 x ` existence_ivl0 x \\<subseteq> K)", "apply (auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> existence_ivl0 x;\n        flow0 x ` (existence_ivl0 x \\<inter> {0..}) \\<subseteq> K;\n        flow0 x ` (existence_ivl0 x \\<inter> {..0}) \\<subseteq> K\\<rbrakk>\n       \\<Longrightarrow> flow0 x xa \\<in> K", "by (metis IntI atLeast_iff atMost_iff image_subset_iff less_eq_real_def linorder_not_less)"], ["", "end"], ["", "context auto_ll_on_open begin"], ["", "lemma infinite_rev_existence_ivl0_rewrites:\n  \"{0..} \\<subseteq> rev.existence_ivl0 x \\<longleftrightarrow> {..0} \\<subseteq> existence_ivl0 x\"\n  \"{..0} \\<subseteq> rev.existence_ivl0 x \\<longleftrightarrow> {0..} \\<subseteq> existence_ivl0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ({0..} \\<subseteq> rev.existence_ivl0 x) =\n    ({..0} \\<subseteq> existence_ivl0 x) &&&\n    ({..0} \\<subseteq> rev.existence_ivl0 x) =\n    ({0..} \\<subseteq> existence_ivl0 x)", "apply (auto simp add: rev.rev_existence_ivl_eq0 subset_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>\\<forall>t\\<le>0. - t \\<in> rev.existence_ivl0 x;\n        0 \\<le> t\\<rbrakk>\n       \\<Longrightarrow> t \\<in> rev.existence_ivl0 x\n 2. \\<And>t.\n       \\<lbrakk>\\<forall>t\\<ge>0. - t \\<in> rev.existence_ivl0 x;\n        t \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> t \\<in> rev.existence_ivl0 x", "using neg_le_0_iff_le"], ["proof (prove)\nusing this:\n  (- ?a \\<le> (0::?'a)) = ((0::?'a) \\<le> ?a)\n\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>\\<forall>t\\<le>0. - t \\<in> rev.existence_ivl0 x;\n        0 \\<le> t\\<rbrakk>\n       \\<Longrightarrow> t \\<in> rev.existence_ivl0 x\n 2. \\<And>t.\n       \\<lbrakk>\\<forall>t\\<ge>0. - t \\<in> rev.existence_ivl0 x;\n        t \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> t \\<in> rev.existence_ivl0 x", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<forall>t\\<ge>0. - t \\<in> rev.existence_ivl0 x;\n        t \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> t \\<in> rev.existence_ivl0 x", "using neg_0_le_iff_le"], ["proof (prove)\nusing this:\n  ((0::?'a) \\<le> - ?a) = (?a \\<le> (0::?'a))\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<forall>t\\<ge>0. - t \\<in> rev.existence_ivl0 x;\n        t \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> t \\<in> rev.existence_ivl0 x", "by fastforce"], ["", "lemma trapped_backward_iff_rev_trapped_forward:\n  \"trapped_backward x K  \\<longleftrightarrow> rev.trapped_forward x K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trapped_backward x K = rev.trapped_forward x K", "unfolding trapped_backward_def rev.trapped_forward_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (flow0 x ` (existence_ivl0 x \\<inter> {..0}) \\<subseteq> K) =\n    (rev.flow0 x ` (rev.existence_ivl0 x \\<inter> {0..}) \\<subseteq> K)", "by (auto simp add: rev_flow_image_eq existence_ivl_eq_rev0 image_subset_iff)"], ["", "text \\<open>If solution is trapped in a compact set at some time\n  on its existence interval then it is trapped forever\\<close>"], ["", "lemma trapped_sol_right:\n  \\<comment> \\<open>TODO: when building on afp-devel (??? outdated):\n    \\<^url>\\<open>https://bitbucket.org/isa-afp/afp-devel/commits/0c3edf9248d5389197f248c723b625c419e4d3eb\\<close>\\<close>\n  assumes \"compact K\" \"K \\<subseteq> X\"\n  assumes \"x \\<in> X\" \"trapped_forward x K\"\n  shows \"{0..} \\<subseteq> existence_ivl0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..} \\<subseteq> existence_ivl0 x", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> {0..} \\<subseteq> existence_ivl0 x \\<Longrightarrow> False", "assume \"\\<not> {0..} \\<subseteq> existence_ivl0 x\""], ["proof (state)\nthis:\n  \\<not> {0..} \\<subseteq> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. \\<not> {0..} \\<subseteq> existence_ivl0 x \\<Longrightarrow> False", "from this"], ["proof (chain)\npicking this:\n  \\<not> {0..} \\<subseteq> existence_ivl0 x", "obtain t where \"0 \\<le> t\" \"t \\<notin> existence_ivl0 x\""], ["proof (prove)\nusing this:\n  \\<not> {0..} \\<subseteq> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>0 \\<le> t; t \\<notin> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  0 \\<le> t\n  t \\<notin> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. \\<not> {0..} \\<subseteq> existence_ivl0 x \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  0 \\<le> t\n  t \\<notin> existence_ivl0 x", "have bdd: \"bdd_above (existence_ivl0 x)\""], ["proof (prove)\nusing this:\n  0 \\<le> t\n  t \\<notin> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. bdd_above (existence_ivl0 x)", "by (auto intro!: bdd_above_is_intervalI \\<open>x \\<in> X\\<close>)"], ["proof (state)\nthis:\n  bdd_above (existence_ivl0 x)\n\ngoal (1 subgoal):\n 1. \\<not> {0..} \\<subseteq> existence_ivl0 x \\<Longrightarrow> False", "from flow_leaves_compact_ivl_right [OF UNIV_I \\<open>x \\<in> X\\<close> bdd UNIV_I assms(1-2)]"], ["proof (chain)\npicking this:\n  (\\<And>t.\n      \\<lbrakk>0 \\<le> t; t \\<in> existence_ivl0 x;\n       flow0 x t \\<notin> K\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "show False"], ["proof (prove)\nusing this:\n  (\\<And>t.\n      \\<lbrakk>0 \\<le> t; t \\<in> existence_ivl0 x;\n       flow0 x t \\<notin> K\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. False", "by (metis assms(4) trapped_forward_def IntI atLeast_iff image_subset_iff)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma trapped_sol_right_gen:\n  assumes \"compact K\" \"K \\<subseteq> X\"\n  assumes \"t \\<in> existence_ivl0 x\" \"trapped_forward (flow0 x t) K\"\n  shows \"{t..} \\<subseteq> existence_ivl0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t..} \\<subseteq> existence_ivl0 x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {t..} \\<subseteq> existence_ivl0 x", "have \"x \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> X", "using assms(3) local.existence_ivl_empty_iff"], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl0 x\n  (existence_ivl0 ?x0.0 = {}) = (0 \\<notin> UNIV \\<or> ?x0.0 \\<notin> X)\n\ngoal (1 subgoal):\n 1. x \\<in> X", "by fastforce"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. {t..} \\<subseteq> existence_ivl0 x", "have xtk: \"flow0 x t \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 x t \\<in> X", "by (simp add: assms(3) local.flow_in_domain)"], ["proof (state)\nthis:\n  flow0 x t \\<in> X\n\ngoal (1 subgoal):\n 1. {t..} \\<subseteq> existence_ivl0 x", "from trapped_sol_right[OF assms(1-2) xtk assms(4)]"], ["proof (chain)\npicking this:\n  {0..} \\<subseteq> existence_ivl0 (flow0 x t)", "have \"{0..} \\<subseteq> existence_ivl0 (flow0 x t)\""], ["proof (prove)\nusing this:\n  {0..} \\<subseteq> existence_ivl0 (flow0 x t)\n\ngoal (1 subgoal):\n 1. {0..} \\<subseteq> existence_ivl0 (flow0 x t)", "."], ["proof (state)\nthis:\n  {0..} \\<subseteq> existence_ivl0 (flow0 x t)\n\ngoal (1 subgoal):\n 1. {t..} \\<subseteq> existence_ivl0 x", "thus \"{t..} \\<subseteq> existence_ivl0 x\""], ["proof (prove)\nusing this:\n  {0..} \\<subseteq> existence_ivl0 (flow0 x t)\n\ngoal (1 subgoal):\n 1. {t..} \\<subseteq> existence_ivl0 x", "using existence_ivl_trans[OF assms(3)]"], ["proof (prove)\nusing this:\n  {0..} \\<subseteq> existence_ivl0 (flow0 x t)\n  ?t \\<in> existence_ivl0 (flow0 x t) \\<Longrightarrow>\n  t + ?t \\<in> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. {t..} \\<subseteq> existence_ivl0 x", "by (metis add.commute atLeast_iff diff_add_cancel le_add_same_cancel1 subset_iff)"], ["proof (state)\nthis:\n  {t..} \\<subseteq> existence_ivl0 x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma trapped_sol_left:\n  \\<comment> \\<open>TODO: when building on afp-devel:\n    \\<^url>\\<open>https://bitbucket.org/isa-afp/afp-devel/commits/0c3edf9248d5389197f248c723b625c419e4d3eb\\<close>\\<close>\n  assumes \"compact K\" \"K \\<subseteq> X\"\n  assumes \"x \\<in> X\" \"trapped_backward x K\"\n  shows \"{..0} \\<subseteq> existence_ivl0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..0} \\<subseteq> existence_ivl0 x", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> {..0} \\<subseteq> existence_ivl0 x \\<Longrightarrow> False", "assume \"\\<not> {..0} \\<subseteq> existence_ivl0 x\""], ["proof (state)\nthis:\n  \\<not> {..0} \\<subseteq> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. \\<not> {..0} \\<subseteq> existence_ivl0 x \\<Longrightarrow> False", "from this"], ["proof (chain)\npicking this:\n  \\<not> {..0} \\<subseteq> existence_ivl0 x", "obtain t where \"t \\<le> 0\" \"t \\<notin> existence_ivl0 x\""], ["proof (prove)\nusing this:\n  \\<not> {..0} \\<subseteq> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>t \\<le> 0; t \\<notin> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t \\<le> 0\n  t \\<notin> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. \\<not> {..0} \\<subseteq> existence_ivl0 x \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  t \\<le> 0\n  t \\<notin> existence_ivl0 x", "have bdd: \"bdd_below (existence_ivl0 x)\""], ["proof (prove)\nusing this:\n  t \\<le> 0\n  t \\<notin> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. bdd_below (existence_ivl0 x)", "by (auto intro!: bdd_below_is_intervalI \\<open>x \\<in> X\\<close>)"], ["proof (state)\nthis:\n  bdd_below (existence_ivl0 x)\n\ngoal (1 subgoal):\n 1. \\<not> {..0} \\<subseteq> existence_ivl0 x \\<Longrightarrow> False", "from flow_leaves_compact_ivl_left [OF UNIV_I \\<open>x \\<in> X\\<close> bdd UNIV_I assms(1-2)]"], ["proof (chain)\npicking this:\n  (\\<And>t.\n      \\<lbrakk>t \\<le> 0; t \\<in> existence_ivl0 x;\n       flow0 x t \\<notin> K\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "show False"], ["proof (prove)\nusing this:\n  (\\<And>t.\n      \\<lbrakk>t \\<le> 0; t \\<in> existence_ivl0 x;\n       flow0 x t \\<notin> K\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. False", "by (metis IntI assms(4) atMost_iff auto_ll_on_open.trapped_backward_def auto_ll_on_open_axioms image_subset_iff)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma trapped_sol_left_gen:\n  assumes \"compact K\" \"K \\<subseteq> X\"\n  assumes \"t \\<in> existence_ivl0 x\" \"trapped_backward (flow0 x t) K\"\n  shows \"{..t} \\<subseteq> existence_ivl0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..t} \\<subseteq> existence_ivl0 x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {..t} \\<subseteq> existence_ivl0 x", "have \"x \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> X", "using assms(3) local.existence_ivl_empty_iff"], ["proof (prove)\nusing this:\n  t \\<in> existence_ivl0 x\n  (existence_ivl0 ?x0.0 = {}) = (0 \\<notin> UNIV \\<or> ?x0.0 \\<notin> X)\n\ngoal (1 subgoal):\n 1. x \\<in> X", "by fastforce"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. {..t} \\<subseteq> existence_ivl0 x", "have xtk: \"flow0 x t \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 x t \\<in> X", "by (simp add: assms(3) local.flow_in_domain)"], ["proof (state)\nthis:\n  flow0 x t \\<in> X\n\ngoal (1 subgoal):\n 1. {..t} \\<subseteq> existence_ivl0 x", "from trapped_sol_left[OF assms(1-2) xtk assms(4)]"], ["proof (chain)\npicking this:\n  {..0} \\<subseteq> existence_ivl0 (flow0 x t)", "have \"{..0} \\<subseteq> existence_ivl0 (flow0 x t)\""], ["proof (prove)\nusing this:\n  {..0} \\<subseteq> existence_ivl0 (flow0 x t)\n\ngoal (1 subgoal):\n 1. {..0} \\<subseteq> existence_ivl0 (flow0 x t)", "."], ["proof (state)\nthis:\n  {..0} \\<subseteq> existence_ivl0 (flow0 x t)\n\ngoal (1 subgoal):\n 1. {..t} \\<subseteq> existence_ivl0 x", "thus \"{..t} \\<subseteq> existence_ivl0 x\""], ["proof (prove)\nusing this:\n  {..0} \\<subseteq> existence_ivl0 (flow0 x t)\n\ngoal (1 subgoal):\n 1. {..t} \\<subseteq> existence_ivl0 x", "using existence_ivl_trans[OF assms(3)]"], ["proof (prove)\nusing this:\n  {..0} \\<subseteq> existence_ivl0 (flow0 x t)\n  ?t \\<in> existence_ivl0 (flow0 x t) \\<Longrightarrow>\n  t + ?t \\<in> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. {..t} \\<subseteq> existence_ivl0 x", "by (metis add.commute add_le_same_cancel1 atMost_iff diff_add_cancel subset_eq)"], ["proof (state)\nthis:\n  {..t} \\<subseteq> existence_ivl0 x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma trapped_sol:\n  assumes \"compact K\" \"K \\<subseteq> X\"\n  assumes \"x \\<in> X\" \"trapped x K\"\n  shows \"existence_ivl0 x = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. existence_ivl0 x = UNIV", "by (metis (mono_tags, lifting) assms existence_ivl_zero image_subset_iff interval local.existence_ivl_initial_time_iff local.existence_ivl_subset local.subset_mem_compact_implies_subset_existence_interval order_refl subset_antisym trapped_iff_on_existence_ivl0)"], ["", "(* Follows from rectification *)"], ["", "lemma regular_locally_noteq:\\<comment> \\<open>TODO: should be true in \\<open>ll_on_open_it\\<close>\\<close>\n  assumes \"x \\<in> X\" \"f x \\<noteq> 0\"\n  shows \"eventually (\\<lambda>t. flow0 x t \\<noteq> x) (at 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at 0. flow0 x t \\<noteq> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at 0. flow0 x t \\<noteq> x", "have nf:\"norm (f x) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < norm (f x)", "by (simp add: assms(2))"], ["proof (state)\nthis:\n  0 < norm (f x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at 0. flow0 x t \\<noteq> x", "(* By continuity of solutions and f probably *)"], ["proof (state)\nthis:\n  0 < norm (f x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at 0. flow0 x t \\<noteq> x", "obtain a where\n    a: \"a>0\"\n    \"{-a--a} \\<subseteq> existence_ivl0 x\"\n    \"0 \\<in> {-a--a}\"\n    \"\\<And>t. t \\<in> {-a--a} \\<Longrightarrow> norm(f (flow0 x t) - f (flow0 x 0)) \\<le> norm(f x)/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a; {- a--a} \\<subseteq> existence_ivl0 x;\n         0 \\<in> {- a--a};\n         \\<And>t.\n            t \\<in> {- a--a} \\<Longrightarrow>\n            norm (f (flow0 x t) - f (flow0 x 0))\n            \\<le> norm (f x) / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a; {- a--a} \\<subseteq> existence_ivl0 x;\n         0 \\<in> {- a--a};\n         \\<And>t.\n            t \\<in> {- a--a} \\<Longrightarrow>\n            norm (f (flow0 x t) - f (flow0 x 0))\n            \\<le> norm (f x) / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from open_existence_ivl'[OF assms(1)]"], ["proof (chain)\npicking this:\n  (\\<And>a.\n      \\<lbrakk>0 < a; {- a..a} \\<subseteq> existence_ivl0 x\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain a1 where a1: \"a1 > 0\" \"{-a1..a1} \\<subseteq> existence_ivl0 x\""], ["proof (prove)\nusing this:\n  (\\<And>a.\n      \\<lbrakk>0 < a; {- a..a} \\<subseteq> existence_ivl0 x\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>a1.\n        \\<lbrakk>0 < a1; {- a1..a1} \\<subseteq> existence_ivl0 x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  0 < a1\n  {- a1..a1} \\<subseteq> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a; {- a--a} \\<subseteq> existence_ivl0 x;\n         0 \\<in> {- a--a};\n         \\<And>t.\n            t \\<in> {- a--a} \\<Longrightarrow>\n            norm (f (flow0 x t) - f (flow0 x 0))\n            \\<le> norm (f x) / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"continuous (at 0) (\\<lambda>t. norm(f (flow0 x t) - f (flow0 x 0) ))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (\\<lambda>t. norm (f (flow0 x t) - f (flow0 x 0))) 0", "apply (auto intro!: continuous_intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (\\<lambda>xa. f (flow0 x xa)) 0", "by (simp add: assms(1) local.f_flow_continuous)"], ["proof (state)\nthis:\n  isCont (\\<lambda>t. norm (f (flow0 x t) - f (flow0 x 0))) 0\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a; {- a--a} \\<subseteq> existence_ivl0 x;\n         0 \\<in> {- a--a};\n         \\<And>t.\n            t \\<in> {- a--a} \\<Longrightarrow>\n            norm (f (flow0 x t) - f (flow0 x 0))\n            \\<le> norm (f x) / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  isCont (\\<lambda>t. norm (f (flow0 x t) - f (flow0 x 0))) 0", "obtain a2 where \"a2>0\"\n      \"\\<forall>t. norm t < a2 \\<longrightarrow>\n             norm (f (flow0 x t) - f (flow0 x 0)) < norm(f x)/2\""], ["proof (prove)\nusing this:\n  isCont (\\<lambda>t. norm (f (flow0 x t) - f (flow0 x 0))) 0\n\ngoal (1 subgoal):\n 1. (\\<And>a2.\n        \\<lbrakk>0 < a2;\n         \\<forall>t.\n            norm t < a2 \\<longrightarrow>\n            norm (f (flow0 x t) - f (flow0 x 0)) < norm (f x) / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding continuous_at_real_range"], ["proof (prove)\nusing this:\n  \\<forall>e>0.\n     \\<exists>d>0.\n        \\<forall>x'.\n           norm (x' - 0) < d \\<longrightarrow>\n           \\<bar>norm (f (flow0 x x') - f (flow0 x 0)) -\n                 norm (f (flow0 x 0) - f (flow0 x 0))\\<bar>\n           < e\n\ngoal (1 subgoal):\n 1. (\\<And>a2.\n        \\<lbrakk>0 < a2;\n         \\<forall>t.\n            norm t < a2 \\<longrightarrow>\n            norm (f (flow0 x t) - f (flow0 x 0)) < norm (f x) / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis abs_norm_cancel cancel_comm_monoid_add_class.diff_cancel diff_zero half_gt_zero nf norm_zero)"], ["proof (state)\nthis:\n  0 < a2\n  \\<forall>t.\n     norm t < a2 \\<longrightarrow>\n     norm (f (flow0 x t) - f (flow0 x 0)) < norm (f x) / 2\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a; {- a--a} \\<subseteq> existence_ivl0 x;\n         0 \\<in> {- a--a};\n         \\<And>t.\n            t \\<in> {- a--a} \\<Longrightarrow>\n            norm (f (flow0 x t) - f (flow0 x 0))\n            \\<le> norm (f x) / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  0 < a2\n  \\<forall>t.\n     norm t < a2 \\<longrightarrow>\n     norm (f (flow0 x t) - f (flow0 x 0)) < norm (f x) / 2", "have \n      t: \"\\<And>t. t \\<in> {-a2<--<a2} \\<Longrightarrow> norm(f (flow0 x t) - f (flow0 x 0)) \\<le> norm(f x)/2\""], ["proof (prove)\nusing this:\n  0 < a2\n  \\<forall>t.\n     norm t < a2 \\<longrightarrow>\n     norm (f (flow0 x t) - f (flow0 x 0)) < norm (f x) / 2\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> {- a2<--<a2} \\<Longrightarrow>\n       norm (f (flow0 x t) - f (flow0 x 0)) \\<le> norm (f x) / 2", "by (smt open_segment_bound(2) open_segment_bound1 real_norm_def)"], ["proof (state)\nthis:\n  ?t \\<in> {- a2<--<a2} \\<Longrightarrow>\n  norm (f (flow0 x ?t) - f (flow0 x 0)) \\<le> norm (f x) / 2\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a; {- a--a} \\<subseteq> existence_ivl0 x;\n         0 \\<in> {- a--a};\n         \\<And>t.\n            t \\<in> {- a--a} \\<Longrightarrow>\n            norm (f (flow0 x t) - f (flow0 x 0))\n            \\<le> norm (f x) / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define a where \"a = min a1 (a2/2)\""], ["proof (state)\nthis:\n  a = min a1 (a2 / 2)\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a; {- a--a} \\<subseteq> existence_ivl0 x;\n         0 \\<in> {- a--a};\n         \\<And>t.\n            t \\<in> {- a--a} \\<Longrightarrow>\n            norm (f (flow0 x t) - f (flow0 x 0))\n            \\<le> norm (f x) / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have t1:\"a > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < a", "unfolding a_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < min a1 (a2 / 2)", "using \\<open>a1 > 0\\<close> \\<open>a2 > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < a1\n  0 < a2\n\ngoal (1 subgoal):\n 1. 0 < min a1 (a2 / 2)", "by auto"], ["proof (state)\nthis:\n  0 < a\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a; {- a--a} \\<subseteq> existence_ivl0 x;\n         0 \\<in> {- a--a};\n         \\<And>t.\n            t \\<in> {- a--a} \\<Longrightarrow>\n            norm (f (flow0 x t) - f (flow0 x 0))\n            \\<le> norm (f x) / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  0 < a", "have t3:\"0 \\<in>{-a--a}\""], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. 0 \\<in> {- a--a}", "using closed_segment_eq_real_ivl"], ["proof (prove)\nusing this:\n  0 < a\n  {?a--?b} = (if ?a \\<le> ?b then {?a..?b} else {?b..?a})\n\ngoal (1 subgoal):\n 1. 0 \\<in> {- a--a}", "by auto"], ["proof (state)\nthis:\n  0 \\<in> {- a--a}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a; {- a--a} \\<subseteq> existence_ivl0 x;\n         0 \\<in> {- a--a};\n         \\<And>t.\n            t \\<in> {- a--a} \\<Longrightarrow>\n            norm (f (flow0 x t) - f (flow0 x 0))\n            \\<le> norm (f x) / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"{-a--a} \\<subseteq> {-a1..a1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {- a--a} \\<subseteq> {- a1..a1}", "unfolding a_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {- min a1 (a2 / 2)--min a1 (a2 / 2)} \\<subseteq> {- a1..a1}", "using \\<open>a1 > 0\\<close> \\<open>a2 > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < a1\n  0 < a2\n\ngoal (1 subgoal):\n 1. {- min a1 (a2 / 2)--min a1 (a2 / 2)} \\<subseteq> {- a1..a1}", "using ODE_Auxiliarities.closed_segment_eq_real_ivl"], ["proof (prove)\nusing this:\n  0 < a1\n  0 < a2\n  {?a--?b} = (if ?a \\<le> ?b then {?a..?b} else {?b..?a})\n\ngoal (1 subgoal):\n 1. {- min a1 (a2 / 2)--min a1 (a2 / 2)} \\<subseteq> {- a1..a1}", "by auto"], ["proof (state)\nthis:\n  {- a--a} \\<subseteq> {- a1..a1}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a; {- a--a} \\<subseteq> existence_ivl0 x;\n         0 \\<in> {- a--a};\n         \\<And>t.\n            t \\<in> {- a--a} \\<Longrightarrow>\n            norm (f (flow0 x t) - f (flow0 x 0))\n            \\<le> norm (f x) / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  {- a--a} \\<subseteq> {- a1..a1}", "have t2:\"{-a--a} \\<subseteq> existence_ivl0 x\""], ["proof (prove)\nusing this:\n  {- a--a} \\<subseteq> {- a1..a1}\n\ngoal (1 subgoal):\n 1. {- a--a} \\<subseteq> existence_ivl0 x", "using a1"], ["proof (prove)\nusing this:\n  {- a--a} \\<subseteq> {- a1..a1}\n  0 < a1\n  {- a1..a1} \\<subseteq> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. {- a--a} \\<subseteq> existence_ivl0 x", "by auto"], ["proof (state)\nthis:\n  {- a--a} \\<subseteq> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a; {- a--a} \\<subseteq> existence_ivl0 x;\n         0 \\<in> {- a--a};\n         \\<And>t.\n            t \\<in> {- a--a} \\<Longrightarrow>\n            norm (f (flow0 x t) - f (flow0 x 0))\n            \\<le> norm (f x) / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"{-a--a} \\<subseteq> {-a2<--<a2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {- a--a} \\<subseteq> {- a2<--<a2}", "unfolding a_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {- min a1 (a2 / 2)--min a1 (a2 / 2)} \\<subseteq> {- a2<--<a2}", "using \\<open>a1 > 0\\<close> \\<open>a2 > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < a1\n  0 < a2\n\ngoal (1 subgoal):\n 1. {- min a1 (a2 / 2)--min a1 (a2 / 2)} \\<subseteq> {- a2<--<a2}", "by (smt Diff_iff closed_segment_eq_real_ivl atLeastAtMost_iff empty_iff half_gt_zero insert_iff pos_half_less segment(1) subset_eq)"], ["proof (state)\nthis:\n  {- a--a} \\<subseteq> {- a2<--<a2}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a; {- a--a} \\<subseteq> existence_ivl0 x;\n         0 \\<in> {- a--a};\n         \\<And>t.\n            t \\<in> {- a--a} \\<Longrightarrow>\n            norm (f (flow0 x t) - f (flow0 x 0))\n            \\<le> norm (f x) / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  {- a--a} \\<subseteq> {- a2<--<a2}", "have t4:\"\\<And>t. t \\<in> {-a--a} \\<Longrightarrow> norm(f (flow0 x t) - f (flow0 x 0)) \\<le> norm(f x)/2\""], ["proof (prove)\nusing this:\n  {- a--a} \\<subseteq> {- a2<--<a2}\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> {- a--a} \\<Longrightarrow>\n       norm (f (flow0 x t) - f (flow0 x 0)) \\<le> norm (f x) / 2", "using t"], ["proof (prove)\nusing this:\n  {- a--a} \\<subseteq> {- a2<--<a2}\n  ?t \\<in> {- a2<--<a2} \\<Longrightarrow>\n  norm (f (flow0 x ?t) - f (flow0 x 0)) \\<le> norm (f x) / 2\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> {- a--a} \\<Longrightarrow>\n       norm (f (flow0 x t) - f (flow0 x 0)) \\<le> norm (f x) / 2", "by auto"], ["proof (state)\nthis:\n  ?t \\<in> {- a--a} \\<Longrightarrow>\n  norm (f (flow0 x ?t) - f (flow0 x 0)) \\<le> norm (f x) / 2\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>0 < a; {- a--a} \\<subseteq> existence_ivl0 x;\n         0 \\<in> {- a--a};\n         \\<And>t.\n            t \\<in> {- a--a} \\<Longrightarrow>\n            norm (f (flow0 x t) - f (flow0 x 0))\n            \\<le> norm (f x) / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using t1 t2 t3 t4 that"], ["proof (prove)\nusing this:\n  0 < a\n  {- a--a} \\<subseteq> existence_ivl0 x\n  0 \\<in> {- a--a}\n  ?t \\<in> {- a--a} \\<Longrightarrow>\n  norm (f (flow0 x ?t) - f (flow0 x 0)) \\<le> norm (f x) / 2\n  \\<lbrakk>0 < ?a; {- ?a--?a} \\<subseteq> existence_ivl0 x;\n   0 \\<in> {- ?a--?a};\n   \\<And>t.\n      t \\<in> {- ?a--?a} \\<Longrightarrow>\n      norm (f (flow0 x t) - f (flow0 x 0)) \\<le> norm (f x) / 2\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < a\n  {- a--a} \\<subseteq> existence_ivl0 x\n  0 \\<in> {- a--a}\n  ?t \\<in> {- a--a} \\<Longrightarrow>\n  norm (f (flow0 x ?t) - f (flow0 x 0)) \\<le> norm (f x) / 2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at 0. flow0 x t \\<noteq> x", "have \"\\<And>t. t \\<in> {-a--a} \\<Longrightarrow> (flow0 x has_vector_derivative f (flow0 x t)) (at t within {-a--a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> {- a--a} \\<Longrightarrow>\n       (flow0 x has_vector_derivative f (flow0 x t)) (at t within {- a--a})", "apply (rule has_vector_derivative_at_within)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> {- a--a} \\<Longrightarrow>\n       (flow0 x has_vector_derivative f (flow0 x t)) (at t)", "using a(2)"], ["proof (prove)\nusing this:\n  {- a--a} \\<subseteq> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> {- a--a} \\<Longrightarrow>\n       (flow0 x has_vector_derivative f (flow0 x t)) (at t)", "by (auto intro!:flow_has_vector_derivative)"], ["proof (state)\nthis:\n  ?t \\<in> {- a--a} \\<Longrightarrow>\n  (flow0 x has_vector_derivative f (flow0 x ?t)) (at ?t within {- a--a})\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at 0. flow0 x t \\<noteq> x", "from vector_differentiable_bound_linearization[OF this _ a(4)]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x. x \\<in> {- a--a} \\<Longrightarrow> x \\<in> {- a--a};\n   {?a--?b} \\<subseteq> {- a--a};\n   \\<And>x. x \\<in> {- a--a} \\<Longrightarrow> x \\<in> {- a--a};\n   0 \\<in> {- a--a}\\<rbrakk>\n  \\<Longrightarrow> norm\n                     (flow0 x ?b - flow0 x ?a -\n                      (?b - ?a) *\\<^sub>R f (flow0 x 0))\n                    \\<le> norm (?b - ?a) * (norm (f x) / 2)", "have nb:\"\\<And>c d. {c--d} \\<subseteq> {-a--a} \\<Longrightarrow>\n   norm (flow0 x d - flow0 x c - (d - c) *\\<^sub>R f (flow0 x 0))  \\<le> norm (d - c) * (norm (f x) / 2)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x. x \\<in> {- a--a} \\<Longrightarrow> x \\<in> {- a--a};\n   {?a--?b} \\<subseteq> {- a--a};\n   \\<And>x. x \\<in> {- a--a} \\<Longrightarrow> x \\<in> {- a--a};\n   0 \\<in> {- a--a}\\<rbrakk>\n  \\<Longrightarrow> norm\n                     (flow0 x ?b - flow0 x ?a -\n                      (?b - ?a) *\\<^sub>R f (flow0 x 0))\n                    \\<le> norm (?b - ?a) * (norm (f x) / 2)\n\ngoal (1 subgoal):\n 1. \\<And>c d.\n       {c--d} \\<subseteq> {- a--a} \\<Longrightarrow>\n       norm (flow0 x d - flow0 x c - (d - c) *\\<^sub>R f (flow0 x 0))\n       \\<le> norm (d - c) * (norm (f x) / 2)", "using a(3)"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x. x \\<in> {- a--a} \\<Longrightarrow> x \\<in> {- a--a};\n   {?a--?b} \\<subseteq> {- a--a};\n   \\<And>x. x \\<in> {- a--a} \\<Longrightarrow> x \\<in> {- a--a};\n   0 \\<in> {- a--a}\\<rbrakk>\n  \\<Longrightarrow> norm\n                     (flow0 x ?b - flow0 x ?a -\n                      (?b - ?a) *\\<^sub>R f (flow0 x 0))\n                    \\<le> norm (?b - ?a) * (norm (f x) / 2)\n  0 \\<in> {- a--a}\n\ngoal (1 subgoal):\n 1. \\<And>c d.\n       {c--d} \\<subseteq> {- a--a} \\<Longrightarrow>\n       norm (flow0 x d - flow0 x c - (d - c) *\\<^sub>R f (flow0 x 0))\n       \\<le> norm (d - c) * (norm (f x) / 2)", "by blast"], ["proof (state)\nthis:\n  {?c--?d} \\<subseteq> {- a--a} \\<Longrightarrow>\n  norm (flow0 x ?d - flow0 x ?c - (?d - ?c) *\\<^sub>R f (flow0 x 0))\n  \\<le> norm (?d - ?c) * (norm (f x) / 2)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at 0. flow0 x t \\<noteq> x", "have \"\\<And>t. dist t 0 < a \\<Longrightarrow> t \\<noteq> 0 \\<Longrightarrow> flow0 x t \\<noteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> flow0 x t \\<noteq> x", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"dist t 0 < a\" \"t \\<noteq> 0\" \"\\<not> flow0 x t \\<noteq> x\""], ["proof (state)\nthis:\n  dist t 0 < a\n  t \\<noteq> 0\n  \\<not> flow0 x t \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  dist t 0 < a\n  t \\<noteq> 0\n  \\<not> flow0 x t \\<noteq> x", "have tx:\"flow0 x t = x\""], ["proof (prove)\nusing this:\n  dist t 0 < a\n  t \\<noteq> 0\n  \\<not> flow0 x t \\<noteq> x\n\ngoal (1 subgoal):\n 1. flow0 x t = x", "by auto"], ["proof (state)\nthis:\n  flow0 x t = x\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "have \"t \\<in> {-a--a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> {- a--a}", "using closed_segment_eq_real_ivl \\<open>dist t 0 < a\\<close>"], ["proof (prove)\nusing this:\n  {?a--?b} = (if ?a \\<le> ?b then {?a..?b} else {?b..?a})\n  dist t 0 < a\n\ngoal (1 subgoal):\n 1. t \\<in> {- a--a}", "by auto"], ["proof (state)\nthis:\n  t \\<in> {- a--a}\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "have \"t > 0 \\<or> t < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < t \\<or> t < 0", "using \\<open>t \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  t \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < t \\<or> t < 0", "by linarith"], ["proof (state)\nthis:\n  0 < t \\<or> t < 0\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  0 < t \\<or> t < 0\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  0 < t \\<or> t < 0\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"t > 0\""], ["proof (state)\nthis:\n  0 < t\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  0 < t", "have \"{0--t} \\<subseteq> {-a--a}\""], ["proof (prove)\nusing this:\n  0 < t\n\ngoal (1 subgoal):\n 1. {0--t} \\<subseteq> {- a--a}", "by (simp add: \\<open>t \\<in> {-a--a}\\<close> a(3) subset_closed_segment)"], ["proof (state)\nthis:\n  {0--t} \\<subseteq> {- a--a}\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "from nb[OF this]"], ["proof (chain)\npicking this:\n  norm (flow0 x t - flow0 x 0 - (t - 0) *\\<^sub>R f (flow0 x 0))\n  \\<le> norm (t - 0) * (norm (f x) / 2)", "have\n        \"norm (flow0 x t - x - t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)\""], ["proof (prove)\nusing this:\n  norm (flow0 x t - flow0 x 0 - (t - 0) *\\<^sub>R f (flow0 x 0))\n  \\<le> norm (t - 0) * (norm (f x) / 2)\n\ngoal (1 subgoal):\n 1. norm (flow0 x t - x - t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)", "by (simp add: assms(1))"], ["proof (state)\nthis:\n  norm (flow0 x t - x - t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  norm (flow0 x t - x - t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)", "have \"norm (t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)\""], ["proof (prove)\nusing this:\n  norm (flow0 x t - x - t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)\n\ngoal (1 subgoal):\n 1. norm (t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)", "using tx"], ["proof (prove)\nusing this:\n  norm (flow0 x t - x - t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)\n  flow0 x t = x\n\ngoal (1 subgoal):\n 1. norm (t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)", "by auto"], ["proof (state)\nthis:\n  norm (t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  norm (t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)", "have False"], ["proof (prove)\nusing this:\n  norm (t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)\n\ngoal (1 subgoal):\n 1. False", "using nf"], ["proof (prove)\nusing this:\n  norm (t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)\n  0 < norm (f x)\n\ngoal (1 subgoal):\n 1. False", "using \\<open>0 < t\\<close>"], ["proof (prove)\nusing this:\n  norm (t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)\n  0 < norm (f x)\n  0 < t\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  0 < t \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  0 < t \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  0 < t \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"t < 0\""], ["proof (state)\nthis:\n  t < 0\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  t < 0", "have \"{t--0} \\<subseteq> {-a--a}\""], ["proof (prove)\nusing this:\n  t < 0\n\ngoal (1 subgoal):\n 1. {t--0} \\<subseteq> {- a--a}", "by (simp add: \\<open>t \\<in> {-a--a}\\<close> a(3) subset_closed_segment)"], ["proof (state)\nthis:\n  {t--0} \\<subseteq> {- a--a}\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "from nb[OF this]"], ["proof (chain)\npicking this:\n  norm (flow0 x 0 - flow0 x t - (0 - t) *\\<^sub>R f (flow0 x 0))\n  \\<le> norm (0 - t) * (norm (f x) / 2)", "have\n        \"norm (x - flow0 x t + t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)\""], ["proof (prove)\nusing this:\n  norm (flow0 x 0 - flow0 x t - (0 - t) *\\<^sub>R f (flow0 x 0))\n  \\<le> norm (0 - t) * (norm (f x) / 2)\n\ngoal (1 subgoal):\n 1. norm (x - flow0 x t + t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)", "by (simp add: assms(1))"], ["proof (state)\nthis:\n  norm (x - flow0 x t + t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  norm (x - flow0 x t + t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)", "have \"norm (t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)\""], ["proof (prove)\nusing this:\n  norm (x - flow0 x t + t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)\n\ngoal (1 subgoal):\n 1. norm (t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)", "using tx"], ["proof (prove)\nusing this:\n  norm (x - flow0 x t + t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)\n  flow0 x t = x\n\ngoal (1 subgoal):\n 1. norm (t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)", "by auto"], ["proof (state)\nthis:\n  norm (t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  norm (t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)", "have False"], ["proof (prove)\nusing this:\n  norm (t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)\n\ngoal (1 subgoal):\n 1. False", "using nf"], ["proof (prove)\nusing this:\n  norm (t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)\n  0 < norm (f x)\n\ngoal (1 subgoal):\n 1. False", "using \\<open>t < 0\\<close>"], ["proof (prove)\nusing this:\n  norm (t *\\<^sub>R f x) \\<le> norm t * (norm (f x) / 2)\n  0 < norm (f x)\n  t < 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  t < 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>dist t 0 < a; t \\<noteq> 0;\n        \\<not> flow0 x t \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  0 < t \\<or> t < 0\n  0 < t \\<Longrightarrow> False\n  t < 0 \\<Longrightarrow> False", "show False"], ["proof (prove)\nusing this:\n  0 < t \\<or> t < 0\n  0 < t \\<Longrightarrow> False\n  t < 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>dist ?t 0 < a; ?t \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> flow0 x ?t \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at 0. flow0 x t \\<noteq> x", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>dist ?t 0 < a; ?t \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> flow0 x ?t \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F t in at 0. flow0 x t \\<noteq> x", "unfolding eventually_at"], ["proof (prove)\nusing this:\n  \\<lbrakk>dist ?t 0 < a; ?t \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> flow0 x ?t \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>xa\\<in>UNIV.\n          xa \\<noteq> 0 \\<and> dist xa 0 < d \\<longrightarrow>\n          flow0 x xa \\<noteq> x", "using a(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>dist ?t 0 < a; ?t \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> flow0 x ?t \\<noteq> x\n  0 < a\n\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>xa\\<in>UNIV.\n          xa \\<noteq> 0 \\<and> dist xa 0 < d \\<longrightarrow>\n          flow0 x xa \\<noteq> x", "by blast"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F t in at 0. flow0 x t \\<noteq> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma compact_max_time_flow_in_closed:\n  assumes \"closed M\" and t_ex: \"t \\<in> existence_ivl0 x\"\n  shows \"compact {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}\" (is \"compact ?C\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. compact {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}", "unfolding compact_eq_bounded_closed"], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M} \\<and>\n    closed {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. bounded {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}\n 2. closed {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}", "have \"bounded {0 .. t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded {0..t}", "by auto"], ["proof (state)\nthis:\n  bounded {0..t}\n\ngoal (2 subgoals):\n 1. bounded {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}\n 2. closed {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}", "then"], ["proof (chain)\npicking this:\n  bounded {0..t}", "show \"bounded ?C\""], ["proof (prove)\nusing this:\n  bounded {0..t}\n\ngoal (1 subgoal):\n 1. bounded {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}", "by (rule bounded_subset) auto"], ["proof (state)\nthis:\n  bounded {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}\n\ngoal (1 subgoal):\n 1. closed {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}", "show \"closed ?C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}", "unfolding closed_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. open (- {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M})", "proof (rule topological_space_class.openI, clarsimp)\n    \\<comment> \\<open>TODO: there must be a more abstract argument for this, e.g., with\n      @{thm continuous_on_closed_vimageI} and then reasoning about the connected component around 0?\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<le> t \\<longrightarrow>\n       0 \\<le> xa \\<longrightarrow>\n       \\<not> flow0 x ` {0..xa} \\<subseteq> M \\<Longrightarrow>\n       \\<exists>T.\n          open T \\<and>\n          xa \\<in> T \\<and>\n          T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                              s \\<le> t \\<and>\n                              flow0 x ` {0..s} \\<subseteq> M}", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<le> t \\<longrightarrow>\n       0 \\<le> xa \\<longrightarrow>\n       \\<not> flow0 x ` {0..xa} \\<subseteq> M \\<Longrightarrow>\n       \\<exists>T.\n          open T \\<and>\n          xa \\<in> T \\<and>\n          T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                              s \\<le> t \\<and>\n                              flow0 x ` {0..s} \\<subseteq> M}", "assume notM: \"s \\<le> t \\<longrightarrow> 0 \\<le> s \\<longrightarrow> \\<not> flow0 x ` {0..s} \\<subseteq> M\""], ["proof (state)\nthis:\n  s \\<le> t \\<longrightarrow>\n  0 \\<le> s \\<longrightarrow> \\<not> flow0 x ` {0..s} \\<subseteq> M\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<le> t \\<longrightarrow>\n       0 \\<le> xa \\<longrightarrow>\n       \\<not> flow0 x ` {0..xa} \\<subseteq> M \\<Longrightarrow>\n       \\<exists>T.\n          open T \\<and>\n          xa \\<in> T \\<and>\n          T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                              s \\<le> t \\<and>\n                              flow0 x ` {0..s} \\<subseteq> M}", "consider \"0 \\<le> s\" \"s \\<le> t\" \"flow0 x s \\<notin> M\" | \"0 \\<le> s\" \"s \\<le> t\" \"flow0 x s \\<in> M\" | \"s < 0\" | \"s > t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<notin> M\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<in> M\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     s < 0 \\<Longrightarrow> thesis; t < s \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by arith"], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<notin> M\\<rbrakk>\n           \\<Longrightarrow> ?thesis;\n   \\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<in> M\\<rbrakk>\n   \\<Longrightarrow> ?thesis;\n   s < 0 \\<Longrightarrow> ?thesis; t < s \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<le> t \\<longrightarrow>\n       0 \\<le> xa \\<longrightarrow>\n       \\<not> flow0 x ` {0..xa} \\<subseteq> M \\<Longrightarrow>\n       \\<exists>T.\n          open T \\<and>\n          xa \\<in> T \\<and>\n          T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                              s \\<le> t \\<and>\n                              flow0 x ` {0..s} \\<subseteq> M}", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<notin> M\\<rbrakk>\n           \\<Longrightarrow> ?thesis;\n   \\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<in> M\\<rbrakk>\n   \\<Longrightarrow> ?thesis;\n   s < 0 \\<Longrightarrow> ?thesis; t < s \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"\\<exists>T. open T \\<and> s \\<in> T \\<and> T \\<subseteq> - {s. 0 \\<le> s \\<and> s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<notin> M\\<rbrakk>\n           \\<Longrightarrow> ?thesis;\n   \\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<in> M\\<rbrakk>\n   \\<Longrightarrow> ?thesis;\n   s < 0 \\<Longrightarrow> ?thesis; t < s \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}", "proof cases"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<notin> M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         open T \\<and>\n                         s \\<in> T \\<and>\n                         T \\<subseteq> - {s.\n    0 \\<le> s \\<and> s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 2. \\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<in> M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         open T \\<and>\n                         s \\<in> T \\<and>\n                         T \\<subseteq> - {s.\n    0 \\<le> s \\<and> s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 3. s < 0 \\<Longrightarrow>\n    \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 4. t < s \\<Longrightarrow>\n    \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}", "assume s: \"0 \\<le> s\" \"s \\<le> t\" and sM: \"flow0 x s \\<notin> M\""], ["proof (state)\nthis:\n  0 \\<le> s\n  s \\<le> t\n  flow0 x s \\<notin> M\n\ngoal (4 subgoals):\n 1. \\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<notin> M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         open T \\<and>\n                         s \\<in> T \\<and>\n                         T \\<subseteq> - {s.\n    0 \\<le> s \\<and> s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 2. \\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<in> M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         open T \\<and>\n                         s \\<in> T \\<and>\n                         T \\<subseteq> - {s.\n    0 \\<le> s \\<and> s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 3. s < 0 \\<Longrightarrow>\n    \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 4. t < s \\<Longrightarrow>\n    \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}", "have \"isCont (flow0 x) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (flow0 x) s", "using s ivl_subset_existence_ivl[OF t_ex]"], ["proof (prove)\nusing this:\n  0 \\<le> s\n  s \\<le> t\n  {0..t} \\<subseteq> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. isCont (flow0 x) s", "by (auto intro!: flow_continuous)"], ["proof (state)\nthis:\n  isCont (flow0 x) s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<notin> M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         open T \\<and>\n                         s \\<in> T \\<and>\n                         T \\<subseteq> - {s.\n    0 \\<le> s \\<and> s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 2. \\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<in> M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         open T \\<and>\n                         s \\<in> T \\<and>\n                         T \\<subseteq> - {s.\n    0 \\<le> s \\<and> s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 3. s < 0 \\<Longrightarrow>\n    \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 4. t < s \\<Longrightarrow>\n    \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}", "from this[unfolded continuous_at_open, rule_format, of \"-M\"] sM \\<open>closed M\\<close>"], ["proof (chain)\npicking this:\n  open (- M) \\<and> flow0 x s \\<in> - M \\<Longrightarrow>\n  \\<exists>sa.\n     open sa \\<and>\n     s \\<in> sa \\<and> (\\<forall>x'\\<in>sa. flow0 x x' \\<in> - M)\n  flow0 x s \\<notin> M\n  closed M", "obtain S where \"open S\" \"s \\<in> S\" \"(\\<forall>x'\\<in>S. flow0 x x' \\<in> - M)\""], ["proof (prove)\nusing this:\n  open (- M) \\<and> flow0 x s \\<in> - M \\<Longrightarrow>\n  \\<exists>sa.\n     open sa \\<and>\n     s \\<in> sa \\<and> (\\<forall>x'\\<in>sa. flow0 x x' \\<in> - M)\n  flow0 x s \\<notin> M\n  closed M\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>open S; s \\<in> S;\n         \\<forall>x'\\<in>S. flow0 x x' \\<in> - M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  open S\n  s \\<in> S\n  \\<forall>x'\\<in>S. flow0 x x' \\<in> - M\n\ngoal (4 subgoals):\n 1. \\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<notin> M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         open T \\<and>\n                         s \\<in> T \\<and>\n                         T \\<subseteq> - {s.\n    0 \\<le> s \\<and> s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 2. \\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<in> M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         open T \\<and>\n                         s \\<in> T \\<and>\n                         T \\<subseteq> - {s.\n    0 \\<le> s \\<and> s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 3. s < 0 \\<Longrightarrow>\n    \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 4. t < s \\<Longrightarrow>\n    \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}", "then"], ["proof (chain)\npicking this:\n  open S\n  s \\<in> S\n  \\<forall>x'\\<in>S. flow0 x x' \\<in> - M", "show ?thesis"], ["proof (prove)\nusing this:\n  open S\n  s \\<in> S\n  \\<forall>x'\\<in>S. flow0 x x' \\<in> - M\n\ngoal (1 subgoal):\n 1. \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}", "by (force intro!: exI[where x=S])"], ["proof (state)\nthis:\n  \\<exists>T.\n     open T \\<and>\n     s \\<in> T \\<and>\n     T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                         s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n\ngoal (3 subgoals):\n 1. \\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<in> M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         open T \\<and>\n                         s \\<in> T \\<and>\n                         T \\<subseteq> - {s.\n    0 \\<le> s \\<and> s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 2. s < 0 \\<Longrightarrow>\n    \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 3. t < s \\<Longrightarrow>\n    \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<in> M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         open T \\<and>\n                         s \\<in> T \\<and>\n                         T \\<subseteq> - {s.\n    0 \\<le> s \\<and> s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 2. s < 0 \\<Longrightarrow>\n    \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 3. t < s \\<Longrightarrow>\n    \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}", "assume s: \"0 \\<le> s\" \"s \\<le> t\" and sM: \"flow0 x s \\<in> M\""], ["proof (state)\nthis:\n  0 \\<le> s\n  s \\<le> t\n  flow0 x s \\<in> M\n\ngoal (3 subgoals):\n 1. \\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<in> M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         open T \\<and>\n                         s \\<in> T \\<and>\n                         T \\<subseteq> - {s.\n    0 \\<le> s \\<and> s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 2. s < 0 \\<Longrightarrow>\n    \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 3. t < s \\<Longrightarrow>\n    \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}", "from this notM"], ["proof (chain)\npicking this:\n  0 \\<le> s\n  s \\<le> t\n  flow0 x s \\<in> M\n  s \\<le> t \\<longrightarrow>\n  0 \\<le> s \\<longrightarrow> \\<not> flow0 x ` {0..s} \\<subseteq> M", "obtain s0 where s0: \"0 \\<le> s0\" \"s0 < s\" \"flow0 x s0 \\<notin> M\""], ["proof (prove)\nusing this:\n  0 \\<le> s\n  s \\<le> t\n  flow0 x s \\<in> M\n  s \\<le> t \\<longrightarrow>\n  0 \\<le> s \\<longrightarrow> \\<not> flow0 x ` {0..s} \\<subseteq> M\n\ngoal (1 subgoal):\n 1. (\\<And>s0.\n        \\<lbrakk>0 \\<le> s0; s0 < s; flow0 x s0 \\<notin> M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  0 \\<le> s0\n  s0 < s\n  flow0 x s0 \\<notin> M\n\ngoal (3 subgoals):\n 1. \\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<in> M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         open T \\<and>\n                         s \\<in> T \\<and>\n                         T \\<subseteq> - {s.\n    0 \\<le> s \\<and> s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 2. s < 0 \\<Longrightarrow>\n    \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 3. t < s \\<Longrightarrow>\n    \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}", "from order_tendstoD(1)[OF tendsto_ident_at \\<open>s0 < s\\<close>, of UNIV, unfolded eventually_at_topological]"], ["proof (chain)\npicking this:\n  \\<exists>S.\n     open S \\<and>\n     s \\<in> S \\<and>\n     (\\<forall>x\\<in>S.\n         x \\<noteq> s \\<longrightarrow>\n         x \\<in> UNIV \\<longrightarrow> s0 < x)", "obtain S where \"open S\" \"s \\<in> S\" \"\\<And>x. x \\<in> S \\<Longrightarrow> x \\<noteq> s \\<Longrightarrow> s0 < x\""], ["proof (prove)\nusing this:\n  \\<exists>S.\n     open S \\<and>\n     s \\<in> S \\<and>\n     (\\<forall>x\\<in>S.\n         x \\<noteq> s \\<longrightarrow>\n         x \\<in> UNIV \\<longrightarrow> s0 < x)\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>open S; s \\<in> S;\n         \\<And>x.\n            \\<lbrakk>x \\<in> S; x \\<noteq> s\\<rbrakk>\n            \\<Longrightarrow> s0 < x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  open S\n  s \\<in> S\n  \\<lbrakk>?x \\<in> S; ?x \\<noteq> s\\<rbrakk> \\<Longrightarrow> s0 < ?x\n\ngoal (3 subgoals):\n 1. \\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x s \\<in> M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         open T \\<and>\n                         s \\<in> T \\<and>\n                         T \\<subseteq> - {s.\n    0 \\<le> s \\<and> s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 2. s < 0 \\<Longrightarrow>\n    \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 3. t < s \\<Longrightarrow>\n    \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}", "then"], ["proof (chain)\npicking this:\n  open S\n  s \\<in> S\n  \\<lbrakk>?x \\<in> S; ?x \\<noteq> s\\<rbrakk> \\<Longrightarrow> s0 < ?x", "show ?thesis"], ["proof (prove)\nusing this:\n  open S\n  s \\<in> S\n  \\<lbrakk>?x \\<in> S; ?x \\<noteq> s\\<rbrakk> \\<Longrightarrow> s0 < ?x\n\ngoal (1 subgoal):\n 1. \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}", "using s0"], ["proof (prove)\nusing this:\n  open S\n  s \\<in> S\n  \\<lbrakk>?x \\<in> S; ?x \\<noteq> s\\<rbrakk> \\<Longrightarrow> s0 < ?x\n  0 \\<le> s0\n  s0 < s\n  flow0 x s0 \\<notin> M\n\ngoal (1 subgoal):\n 1. \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}", "by (auto simp: intro!: exI[where x=S]) (smt atLeastAtMost_iff image_subset_iff)"], ["proof (state)\nthis:\n  \\<exists>T.\n     open T \\<and>\n     s \\<in> T \\<and>\n     T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                         s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n\ngoal (2 subgoals):\n 1. s < 0 \\<Longrightarrow>\n    \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n 2. t < s \\<Longrightarrow>\n    \\<exists>T.\n       open T \\<and>\n       s \\<in> T \\<and>\n       T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                           s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}", "qed (force intro: exI[where x=\"{t<..}\"] exI[where x=\"{..<0}\"])+"], ["proof (state)\nthis:\n  \\<exists>T.\n     open T \\<and>\n     s \\<in> T \\<and>\n     T \\<subseteq> - {s. 0 \\<le> s \\<and>\n                         s \\<le> t \\<and> flow0 x ` {0..s} \\<subseteq> M}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  closed {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma flow_in_closed_max_timeE:\n  assumes \"closed M\" \"t \\<in> existence_ivl0 x\" \"0 \\<le> t\" \"x \\<in> M\"\n  obtains T where \"0 \\<le> T\" \"T \\<le> t\" \"flow0 x ` {0..T} \\<subseteq> M\"\n    \"\\<And>s'. 0 \\<le> s' \\<Longrightarrow> s' \\<le> t \\<Longrightarrow> flow0 x ` {0..s'} \\<subseteq> M \\<Longrightarrow> s' \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>T.\n        \\<lbrakk>0 \\<le> T; T \\<le> t; flow0 x ` {0..T} \\<subseteq> M;\n         \\<And>s'.\n            \\<lbrakk>0 \\<le> s'; s' \\<le> t;\n             flow0 x ` {0..s'} \\<subseteq> M\\<rbrakk>\n            \\<Longrightarrow> s' \\<le> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>T.\n        \\<lbrakk>0 \\<le> T; T \\<le> t; flow0 x ` {0..T} \\<subseteq> M;\n         \\<And>s'.\n            \\<lbrakk>0 \\<le> s'; s' \\<le> t;\n             flow0 x ` {0..s'} \\<subseteq> M\\<rbrakk>\n            \\<Longrightarrow> s' \\<le> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?C = \"{s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>T.\n        \\<lbrakk>0 \\<le> T; T \\<le> t; flow0 x ` {0..T} \\<subseteq> M;\n         \\<And>s'.\n            \\<lbrakk>0 \\<le> s'; s' \\<le> t;\n             flow0 x ` {0..s'} \\<subseteq> M\\<rbrakk>\n            \\<Longrightarrow> s' \\<le> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"?C \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M} \\<noteq> {}", "using assms"], ["proof (prove)\nusing this:\n  closed M\n  t \\<in> existence_ivl0 x\n  0 \\<le> t\n  x \\<in> M\n\ngoal (1 subgoal):\n 1. {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M} \\<noteq> {}", "using local.mem_existence_ivl_iv_defined"], ["proof (prove)\nusing this:\n  closed M\n  t \\<in> existence_ivl0 x\n  0 \\<le> t\n  x \\<in> M\n  ?t \\<in> existence_ivl0 ?x0.0 \\<Longrightarrow> 0 \\<in> UNIV\n  ?t \\<in> existence_ivl0 ?x0.0 \\<Longrightarrow> ?x0.0 \\<in> X\n\ngoal (1 subgoal):\n 1. {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M} \\<noteq> {}", "by (auto intro!: exI[where x=0])"], ["proof (state)\nthis:\n  {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>T.\n        \\<lbrakk>0 \\<le> T; T \\<le> t; flow0 x ` {0..T} \\<subseteq> M;\n         \\<And>s'.\n            \\<lbrakk>0 \\<le> s'; s' \\<le> t;\n             flow0 x ` {0..s'} \\<subseteq> M\\<rbrakk>\n            \\<Longrightarrow> s' \\<le> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from compact_max_time_flow_in_closed[OF assms(1,2)]"], ["proof (chain)\npicking this:\n  compact {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}", "have \"compact ?C\""], ["proof (prove)\nusing this:\n  compact {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}\n\ngoal (1 subgoal):\n 1. compact {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}", "."], ["proof (state)\nthis:\n  compact {s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}\n\ngoal (1 subgoal):\n 1. (\\<And>T.\n        \\<lbrakk>0 \\<le> T; T \\<le> t; flow0 x ` {0..T} \\<subseteq> M;\n         \\<And>s'.\n            \\<lbrakk>0 \\<le> s'; s' \\<le> t;\n             flow0 x ` {0..s'} \\<subseteq> M\\<rbrakk>\n            \\<Longrightarrow> s' \\<le> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from compact_attains_sup[OF this \\<open>?C \\<noteq> {}\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>s\\<in>{s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}.\n     \\<forall>t\\<in>{s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}.\n        t \\<le> s", "obtain s where s: \"0 \\<le> s\" \"s \\<le> t\" \"flow0 x ` {0..s} \\<subseteq> M\"\n    and s_max: \"\\<And>s'. 0 \\<le> s' \\<Longrightarrow> s' \\<le> t \\<Longrightarrow> flow0 x ` {0..s'} \\<subseteq> M \\<Longrightarrow> s' \\<le> s\""], ["proof (prove)\nusing this:\n  \\<exists>s\\<in>{s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}.\n     \\<forall>t\\<in>{s \\<in> {0..t}. flow0 x ` {0..s} \\<subseteq> M}.\n        t \\<le> s\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>0 \\<le> s; s \\<le> t; flow0 x ` {0..s} \\<subseteq> M;\n         \\<And>s'.\n            \\<lbrakk>0 \\<le> s'; s' \\<le> t;\n             flow0 x ` {0..s'} \\<subseteq> M\\<rbrakk>\n            \\<Longrightarrow> s' \\<le> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 \\<le> s\n  s \\<le> t\n  flow0 x ` {0..s} \\<subseteq> M\n  \\<lbrakk>0 \\<le> ?s'; ?s' \\<le> t;\n   flow0 x ` {0..?s'} \\<subseteq> M\\<rbrakk>\n  \\<Longrightarrow> ?s' \\<le> s\n\ngoal (1 subgoal):\n 1. (\\<And>T.\n        \\<lbrakk>0 \\<le> T; T \\<le> t; flow0 x ` {0..T} \\<subseteq> M;\n         \\<And>s'.\n            \\<lbrakk>0 \\<le> s'; s' \\<le> t;\n             flow0 x ` {0..s'} \\<subseteq> M\\<rbrakk>\n            \\<Longrightarrow> s' \\<le> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  0 \\<le> s\n  s \\<le> t\n  flow0 x ` {0..s} \\<subseteq> M\n  \\<lbrakk>0 \\<le> ?s'; ?s' \\<le> t;\n   flow0 x ` {0..?s'} \\<subseteq> M\\<rbrakk>\n  \\<Longrightarrow> ?s' \\<le> s", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> s\n  s \\<le> t\n  flow0 x ` {0..s} \\<subseteq> M\n  \\<lbrakk>0 \\<le> ?s'; ?s' \\<le> t;\n   flow0 x ` {0..?s'} \\<subseteq> M\\<rbrakk>\n  \\<Longrightarrow> ?s' \\<le> s\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma flow_leaves_closed_at_frontierE:\n  assumes \"closed M\" and t_ex: \"t \\<in> existence_ivl0 x\" and \"0 \\<le> t\" \"x \\<in> M\" \"flow0 x t \\<notin> M\"\n  obtains s where \"0 \\<le> s\" \"s < t\" \"flow0 x ` {0..s} \\<subseteq> M\"\n    \"flow0 x s \\<in> frontier M\"\n    \"\\<exists>\\<^sub>F s' in at_right s. flow0 x s' \\<notin> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>0 \\<le> s; s < t; flow0 x ` {0..s} \\<subseteq> M;\n         flow0 x s \\<in> frontier M;\n         \\<exists>\\<^sub>F s' in at_right s. flow0 x s' \\<notin> M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>0 \\<le> s; s < t; flow0 x ` {0..s} \\<subseteq> M;\n         flow0 x s \\<in> frontier M;\n         \\<exists>\\<^sub>F s' in at_right s. flow0 x s' \\<notin> M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from flow_in_closed_max_timeE[OF assms(1-4)] assms(5)"], ["proof (chain)\npicking this:\n  (\\<And>T.\n      \\<lbrakk>0 \\<le> T; T \\<le> t; flow0 x ` {0..T} \\<subseteq> M;\n       \\<And>s'.\n          \\<lbrakk>0 \\<le> s'; s' \\<le> t;\n           flow0 x ` {0..s'} \\<subseteq> M\\<rbrakk>\n          \\<Longrightarrow> s' \\<le> T\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n  flow0 x t \\<notin> M", "obtain s where s: \"0 \\<le> s\" \"s < t\" \"flow0 x ` {0..s} \\<subseteq> M\"\n    and s_max: \"\\<And>s'. 0 \\<le> s' \\<Longrightarrow> s' \\<le> t \\<Longrightarrow> flow0 x ` {0..s'} \\<subseteq> M \\<Longrightarrow> s' \\<le> s\""], ["proof (prove)\nusing this:\n  (\\<And>T.\n      \\<lbrakk>0 \\<le> T; T \\<le> t; flow0 x ` {0..T} \\<subseteq> M;\n       \\<And>s'.\n          \\<lbrakk>0 \\<le> s'; s' \\<le> t;\n           flow0 x ` {0..s'} \\<subseteq> M\\<rbrakk>\n          \\<Longrightarrow> s' \\<le> T\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n  flow0 x t \\<notin> M\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>0 \\<le> s; s < t; flow0 x ` {0..s} \\<subseteq> M;\n         \\<And>s'.\n            \\<lbrakk>0 \\<le> s'; s' \\<le> t;\n             flow0 x ` {0..s'} \\<subseteq> M\\<rbrakk>\n            \\<Longrightarrow> s' \\<le> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (smt atLeastAtMost_iff image_subset_iff)"], ["proof (state)\nthis:\n  0 \\<le> s\n  s < t\n  flow0 x ` {0..s} \\<subseteq> M\n  \\<lbrakk>0 \\<le> ?s'; ?s' \\<le> t;\n   flow0 x ` {0..?s'} \\<subseteq> M\\<rbrakk>\n  \\<Longrightarrow> ?s' \\<le> s\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>0 \\<le> s; s < t; flow0 x ` {0..s} \\<subseteq> M;\n         flow0 x s \\<in> frontier M;\n         \\<exists>\\<^sub>F s' in at_right s. flow0 x s' \\<notin> M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note s"], ["proof (state)\nthis:\n  0 \\<le> s\n  s < t\n  flow0 x ` {0..s} \\<subseteq> M\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>0 \\<le> s; s < t; flow0 x ` {0..s} \\<subseteq> M;\n         flow0 x s \\<in> frontier M;\n         \\<exists>\\<^sub>F s' in at_right s. flow0 x s' \\<notin> M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  0 \\<le> s\n  s < t\n  flow0 x ` {0..s} \\<subseteq> M\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>0 \\<le> s; s < t; flow0 x ` {0..s} \\<subseteq> M;\n         flow0 x s \\<in> frontier M;\n         \\<exists>\\<^sub>F s' in at_right s. flow0 x s' \\<notin> M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"flow0 x s \\<notin> interior M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 x s \\<notin> interior M", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. flow0 x s \\<in> interior M \\<Longrightarrow> False", "assume interior: \"flow0 x s \\<in> interior M\""], ["proof (state)\nthis:\n  flow0 x s \\<in> interior M\n\ngoal (1 subgoal):\n 1. flow0 x s \\<in> interior M \\<Longrightarrow> False", "have \"s \\<in> existence_ivl0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> existence_ivl0 x", "using ivl_subset_existence_ivl[OF \\<open>t \\<in> _\\<close>] s"], ["proof (prove)\nusing this:\n  {0..t} \\<subseteq> existence_ivl0 x\n  0 \\<le> s\n  s < t\n  flow0 x ` {0..s} \\<subseteq> M\n\ngoal (1 subgoal):\n 1. s \\<in> existence_ivl0 x", "by auto"], ["proof (state)\nthis:\n  s \\<in> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. flow0 x s \\<in> interior M \\<Longrightarrow> False", "from flow_continuous[OF this, THEN isContD, THEN topological_tendstoD, OF open_interior interior]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F xa in at s. flow0 x xa \\<in> interior M", "have \"\\<forall>\\<^sub>F s' in at s. flow0 x s' \\<in> interior M\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F xa in at s. flow0 x xa \\<in> interior M\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s' in at s. flow0 x s' \\<in> interior M", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s' in at s. flow0 x s' \\<in> interior M\n\ngoal (1 subgoal):\n 1. flow0 x s \\<in> interior M \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F s' in at s. flow0 x s' \\<in> interior M", "have \"\\<forall>\\<^sub>F s' in at_right s. flow0 x s' \\<in> interior M\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s' in at s. flow0 x s' \\<in> interior M\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s' in at_right s. flow0 x s' \\<in> interior M", "by (auto simp: eventually_at_split)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s' in at_right s. flow0 x s' \\<in> interior M\n\ngoal (1 subgoal):\n 1. flow0 x s \\<in> interior M \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s' in at_right s. flow0 x s' \\<in> interior M\n\ngoal (1 subgoal):\n 1. flow0 x s \\<in> interior M \\<Longrightarrow> False", "have \"\\<forall>\\<^sub>F s' in at_right s. s' < t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s' in at_right s. s' < t", "using tendsto_ident_at \\<open>s < t\\<close>"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. x) \\<longlongrightarrow> ?a) (at ?a within ?s)\n  s < t\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s' in at_right s. s' < t", "by (rule order_tendstoD)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s' in at_right s. s' < t\n\ngoal (1 subgoal):\n 1. flow0 x s \\<in> interior M \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F s' in at_right s. flow0 x s' \\<in> interior M\n  \\<forall>\\<^sub>F s' in at_right s. s' < t", "have \"\\<forall>\\<^sub>F s' in at_right s. flow0 x s' \\<in> M \\<and> s' < t\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s' in at_right s. flow0 x s' \\<in> interior M\n  \\<forall>\\<^sub>F s' in at_right s. s' < t\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s' in at_right s. flow0 x s' \\<in> M \\<and> s' < t", "by eventually_elim (use interior_subset[of M] in auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s' in at_right s. flow0 x s' \\<in> M \\<and> s' < t\n\ngoal (1 subgoal):\n 1. flow0 x s \\<in> interior M \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F s' in at_right s. flow0 x s' \\<in> M \\<and> s' < t", "obtain s' where s': \"s < s'\" \"s' < t\" \"\\<And>y. y > s \\<Longrightarrow> y \\<le> s' \\<Longrightarrow> flow0 x y \\<in> M\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s' in at_right s. flow0 x s' \\<in> M \\<and> s' < t\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<lbrakk>s < s'; s' < t;\n         \\<And>y.\n            \\<lbrakk>s < y; y \\<le> s'\\<rbrakk>\n            \\<Longrightarrow> flow0 x y \\<in> M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_at_right_field_le)"], ["proof (state)\nthis:\n  s < s'\n  s' < t\n  \\<lbrakk>s < ?y; ?y \\<le> s'\\<rbrakk> \\<Longrightarrow> flow0 x ?y \\<in> M\n\ngoal (1 subgoal):\n 1. flow0 x s \\<in> interior M \\<Longrightarrow> False", "have s'_ivl: \"flow0 x ` {0..s'} \\<subseteq> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 x ` {0..s'} \\<subseteq> M", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa xaa. xaa \\<in> {0..s'} \\<Longrightarrow> flow0 x xaa \\<in> M", "fix s''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa xaa. xaa \\<in> {0..s'} \\<Longrightarrow> flow0 x xaa \\<in> M", "assume \"s'' \\<in> {0 .. s'}\""], ["proof (state)\nthis:\n  s'' \\<in> {0..s'}\n\ngoal (1 subgoal):\n 1. \\<And>xa xaa. xaa \\<in> {0..s'} \\<Longrightarrow> flow0 x xaa \\<in> M", "then"], ["proof (chain)\npicking this:\n  s'' \\<in> {0..s'}", "show \"flow0 x s'' \\<in> M\""], ["proof (prove)\nusing this:\n  s'' \\<in> {0..s'}\n\ngoal (1 subgoal):\n 1. flow0 x s'' \\<in> M", "using s interior_subset[of M] s'"], ["proof (prove)\nusing this:\n  s'' \\<in> {0..s'}\n  0 \\<le> s\n  s < t\n  flow0 x ` {0..s} \\<subseteq> M\n  interior M \\<subseteq> M\n  s < s'\n  s' < t\n  \\<lbrakk>s < ?y; ?y \\<le> s'\\<rbrakk> \\<Longrightarrow> flow0 x ?y \\<in> M\n\ngoal (1 subgoal):\n 1. flow0 x s'' \\<in> M", "by (cases \"s'' \\<le> s\") auto"], ["proof (state)\nthis:\n  flow0 x s'' \\<in> M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  flow0 x ` {0..s'} \\<subseteq> M\n\ngoal (1 subgoal):\n 1. flow0 x s \\<in> interior M \\<Longrightarrow> False", "with s_max[of s'] \\<open>s' < t\\<close> \\<open>0 \\<le> s\\<close> \\<open>s < s'\\<close>"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 \\<le> s'; s' \\<le> t; flow0 x ` {0..s'} \\<subseteq> M\\<rbrakk>\n  \\<Longrightarrow> s' \\<le> s\n  s' < t\n  0 \\<le> s\n  s < s'\n  flow0 x ` {0..s'} \\<subseteq> M", "show False"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> s'; s' \\<le> t; flow0 x ` {0..s'} \\<subseteq> M\\<rbrakk>\n  \\<Longrightarrow> s' \\<le> s\n  s' < t\n  0 \\<le> s\n  s < s'\n  flow0 x ` {0..s'} \\<subseteq> M\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  flow0 x s \\<notin> interior M\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>0 \\<le> s; s < t; flow0 x ` {0..s} \\<subseteq> M;\n         flow0 x s \\<in> frontier M;\n         \\<exists>\\<^sub>F s' in at_right s. flow0 x s' \\<notin> M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  flow0 x s \\<notin> interior M", "have \"flow0 x s \\<in> frontier M\""], ["proof (prove)\nusing this:\n  flow0 x s \\<notin> interior M\n\ngoal (1 subgoal):\n 1. flow0 x s \\<in> frontier M", "using s closure_subset[of M]"], ["proof (prove)\nusing this:\n  flow0 x s \\<notin> interior M\n  0 \\<le> s\n  s < t\n  flow0 x ` {0..s} \\<subseteq> M\n  M \\<subseteq> closure M\n\ngoal (1 subgoal):\n 1. flow0 x s \\<in> frontier M", "by (force simp: frontier_def)"], ["proof (state)\nthis:\n  flow0 x s \\<in> frontier M\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>0 \\<le> s; s < t; flow0 x ` {0..s} \\<subseteq> M;\n         flow0 x s \\<in> frontier M;\n         \\<exists>\\<^sub>F s' in at_right s. flow0 x s' \\<notin> M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  flow0 x s \\<in> frontier M\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>0 \\<le> s; s < t; flow0 x ` {0..s} \\<subseteq> M;\n         flow0 x s \\<in> frontier M;\n         \\<exists>\\<^sub>F s' in at_right s. flow0 x s' \\<notin> M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"compact (flow0 x -` M \\<inter> {s..t})\" (is \"compact ?C\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. compact (flow0 x -` M \\<inter> {s..t})", "unfolding compact_eq_bounded_closed"], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded (flow0 x -` M \\<inter> {s..t}) \\<and>\n    closed (flow0 x -` M \\<inter> {s..t})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. bounded (flow0 x -` M \\<inter> {s..t})\n 2. closed (flow0 x -` M \\<inter> {s..t})", "have \"bounded {s .. t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded {s..t}", "by simp"], ["proof (state)\nthis:\n  bounded {s..t}\n\ngoal (2 subgoals):\n 1. bounded (flow0 x -` M \\<inter> {s..t})\n 2. closed (flow0 x -` M \\<inter> {s..t})", "then"], ["proof (chain)\npicking this:\n  bounded {s..t}", "show \"bounded ?C\""], ["proof (prove)\nusing this:\n  bounded {s..t}\n\ngoal (1 subgoal):\n 1. bounded (flow0 x -` M \\<inter> {s..t})", "by (rule bounded_subset) auto"], ["proof (state)\nthis:\n  bounded (flow0 x -` M \\<inter> {s..t})\n\ngoal (1 subgoal):\n 1. closed (flow0 x -` M \\<inter> {s..t})", "show \"closed ?C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed (flow0 x -` M \\<inter> {s..t})", "using \\<open>closed M\\<close> assms mem_existence_ivl_iv_defined(2)[OF t_ex] ivl_subset_existence_ivl[OF t_ex] \\<open>0 \\<le> s\\<close>"], ["proof (prove)\nusing this:\n  closed M\n  closed M\n  t \\<in> existence_ivl0 x\n  0 \\<le> t\n  x \\<in> M\n  flow0 x t \\<notin> M\n  x \\<in> X\n  {0..t} \\<subseteq> existence_ivl0 x\n  0 \\<le> s\n\ngoal (1 subgoal):\n 1. closed (flow0 x -` M \\<inter> {s..t})", "by (intro closed_vimage_Int) (auto intro!: continuous_intros)"], ["proof (state)\nthis:\n  closed (flow0 x -` M \\<inter> {s..t})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  compact (flow0 x -` M \\<inter> {s..t})\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>0 \\<le> s; s < t; flow0 x ` {0..s} \\<subseteq> M;\n         flow0 x s \\<in> frontier M;\n         \\<exists>\\<^sub>F s' in at_right s. flow0 x s' \\<notin> M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<exists>\\<^sub>F s' in at_right s. flow0 x s' \\<notin> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<^sub>F s' in at_right s. flow0 x s' \\<notin> M", "apply (rule ccontr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>\\<^sub>F s' in at_right s.\n               flow0 x s' \\<notin> M) \\<Longrightarrow>\n    False", "unfolding not_frequently"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F xa in at_right s.\n       \\<not> flow0 x xa \\<notin> M \\<Longrightarrow>\n    False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F xa in at_right s.\n       \\<not> flow0 x xa \\<notin> M \\<Longrightarrow>\n    False", "assume \"\\<forall>\\<^sub>F s' in at_right s. \\<not> flow0 x s' \\<notin> M\""], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s' in at_right s. \\<not> flow0 x s' \\<notin> M\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F xa in at_right s.\n       \\<not> flow0 x xa \\<notin> M \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s' in at_right s. \\<not> flow0 x s' \\<notin> M\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F xa in at_right s.\n       \\<not> flow0 x xa \\<notin> M \\<Longrightarrow>\n    False", "have \"\\<forall>\\<^sub>F s' in at_right s. s' < t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s' in at_right s. s' < t", "using tendsto_ident_at \\<open>s < t\\<close>"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. x) \\<longlongrightarrow> ?a) (at ?a within ?s)\n  s < t\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s' in at_right s. s' < t", "by (rule order_tendstoD)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s' in at_right s. s' < t\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F xa in at_right s.\n       \\<not> flow0 x xa \\<notin> M \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F s' in at_right s. \\<not> flow0 x s' \\<notin> M\n  \\<forall>\\<^sub>F s' in at_right s. s' < t", "have \"\\<forall>\\<^sub>F s' in at_right s. flow0 x s' \\<in> M \\<and> s' < t\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s' in at_right s. \\<not> flow0 x s' \\<notin> M\n  \\<forall>\\<^sub>F s' in at_right s. s' < t\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s' in at_right s. flow0 x s' \\<in> M \\<and> s' < t", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s' in at_right s. flow0 x s' \\<in> M \\<and> s' < t\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F xa in at_right s.\n       \\<not> flow0 x xa \\<notin> M \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F s' in at_right s. flow0 x s' \\<in> M \\<and> s' < t", "obtain s' where s': \"s < s'\"\n      \"\\<And>y. y > s \\<Longrightarrow> y < s' \\<Longrightarrow> flow0 x y \\<in> M\"\n      \"\\<And>y. y > s \\<Longrightarrow> y < s' \\<Longrightarrow> y < t\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s' in at_right s. flow0 x s' \\<in> M \\<and> s' < t\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<lbrakk>s < s';\n         \\<And>y.\n            \\<lbrakk>s < y; y < s'\\<rbrakk>\n            \\<Longrightarrow> flow0 x y \\<in> M;\n         \\<And>y.\n            \\<lbrakk>s < y; y < s'\\<rbrakk> \\<Longrightarrow> y < t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_at_right_field)"], ["proof (state)\nthis:\n  s < s'\n  \\<lbrakk>s < ?y; ?y < s'\\<rbrakk> \\<Longrightarrow> flow0 x ?y \\<in> M\n  \\<lbrakk>s < ?y; ?y < s'\\<rbrakk> \\<Longrightarrow> ?y < t\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F xa in at_right s.\n       \\<not> flow0 x xa \\<notin> M \\<Longrightarrow>\n    False", "define s'' where \"s'' = (s + s') / 2\""], ["proof (state)\nthis:\n  s'' = (s + s') / 2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F xa in at_right s.\n       \\<not> flow0 x xa \\<notin> M \\<Longrightarrow>\n    False", "have \"0 \\<le> s''\" \"s'' \\<le> t\"  \"s < s''\" \"s'' < s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 \\<le> s'' &&& s'' \\<le> t) &&& s < s'' &&& s'' < s'", "using s s'"], ["proof (prove)\nusing this:\n  0 \\<le> s\n  s < t\n  flow0 x ` {0..s} \\<subseteq> M\n  s < s'\n  \\<lbrakk>s < ?y; ?y < s'\\<rbrakk> \\<Longrightarrow> flow0 x ?y \\<in> M\n  \\<lbrakk>s < ?y; ?y < s'\\<rbrakk> \\<Longrightarrow> ?y < t\n\ngoal (1 subgoal):\n 1. (0 \\<le> s'' &&& s'' \\<le> t) &&& s < s'' &&& s'' < s'", "by (auto simp del: divide_le_eq_numeral1 le_divide_eq_numeral1 simp: s''_def) fastforce"], ["proof (state)\nthis:\n  0 \\<le> s''\n  s'' \\<le> t\n  s < s''\n  s'' < s'\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F xa in at_right s.\n       \\<not> flow0 x xa \\<notin> M \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  0 \\<le> s''\n  s'' \\<le> t\n  s < s''\n  s'' < s'", "have \"flow0 x ` {0..s''} \\<subseteq> M\""], ["proof (prove)\nusing this:\n  0 \\<le> s''\n  s'' \\<le> t\n  s < s''\n  s'' < s'\n\ngoal (1 subgoal):\n 1. flow0 x ` {0..s''} \\<subseteq> M", "using s s'"], ["proof (prove)\nusing this:\n  0 \\<le> s''\n  s'' \\<le> t\n  s < s''\n  s'' < s'\n  0 \\<le> s\n  s < t\n  flow0 x ` {0..s} \\<subseteq> M\n  s < s'\n  \\<lbrakk>s < ?y; ?y < s'\\<rbrakk> \\<Longrightarrow> flow0 x ?y \\<in> M\n  \\<lbrakk>s < ?y; ?y < s'\\<rbrakk> \\<Longrightarrow> ?y < t\n\ngoal (1 subgoal):\n 1. flow0 x ` {0..s''} \\<subseteq> M", "apply (auto simp: )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>s'' \\<le> t; s < s''; s'' < s'; 0 \\<le> s;\n        flow0 x ` {0..s} \\<subseteq> M;\n        \\<And>y.\n           \\<lbrakk>s < y; y < s'\\<rbrakk>\n           \\<Longrightarrow> flow0 x y \\<in> M;\n        \\<And>y. \\<lbrakk>s < y; y < s'\\<rbrakk> \\<Longrightarrow> y < t;\n        0 \\<le> xa; xa \\<le> s''\\<rbrakk>\n       \\<Longrightarrow> flow0 x xa \\<in> M", "subgoal for u"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s'' \\<le> t; s < s''; s'' < s'; 0 \\<le> s;\n     flow0 x ` {0..s} \\<subseteq> M;\n     \\<And>y.\n        \\<lbrakk>s < y; y < s'\\<rbrakk> \\<Longrightarrow> flow0 x y \\<in> M;\n     \\<And>y. \\<lbrakk>s < y; y < s'\\<rbrakk> \\<Longrightarrow> y < t;\n     0 \\<le> u; u \\<le> s''\\<rbrakk>\n    \\<Longrightarrow> flow0 x u \\<in> M", "by (cases \"u\\<le>s\") auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  flow0 x ` {0..s''} \\<subseteq> M\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F xa in at_right s.\n       \\<not> flow0 x xa \\<notin> M \\<Longrightarrow>\n    False", "from s_max[OF \\<open>0 \\<le> s''\\<close> \\<open>s''\\<le> t\\<close> this] \\<open>s'' > s\\<close>"], ["proof (chain)\npicking this:\n  s'' \\<le> s\n  s < s''", "show False"], ["proof (prove)\nusing this:\n  s'' \\<le> s\n  s < s''\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>\\<^sub>F s' in at_right s. flow0 x s' \\<notin> M\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>0 \\<le> s; s < t; flow0 x ` {0..s} \\<subseteq> M;\n         flow0 x s \\<in> frontier M;\n         \\<exists>\\<^sub>F s' in at_right s. flow0 x s' \\<notin> M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> s\n  s < t\n  flow0 x ` {0..s} \\<subseteq> M\n  flow0 x s \\<in> frontier M\n  \\<exists>\\<^sub>F s' in at_right s. flow0 x s' \\<notin> M", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> s\n  s < t\n  flow0 x ` {0..s} \\<subseteq> M\n  flow0 x s \\<in> frontier M\n  \\<exists>\\<^sub>F s' in at_right s. flow0 x s' \\<notin> M\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Connectedness\\<close>"], ["", "lemma fcontX:\n  shows \"continuous_on X f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on X f", "using auto_local_lipschitz local_lipschitz_continuous_on"], ["proof (prove)\nusing this:\n  local_lipschitz UNIV X (\\<lambda>_. f)\n  \\<lbrakk>local_lipschitz ?T ?X ?f; ?t \\<in> ?T\\<rbrakk>\n  \\<Longrightarrow> continuous_on ?X (?f ?t)\n\ngoal (1 subgoal):\n 1. continuous_on X f", "by blast"], ["", "lemma fcontx:\n  assumes \"x \\<in> X\"\n  shows \"continuous (at x) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont f x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. isCont f x", "have \"open X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open X", "by simp"], ["proof (state)\nthis:\n  open X\n\ngoal (1 subgoal):\n 1. isCont f x", "from continuous_on_eq_continuous_at[OF this]"], ["proof (chain)\npicking this:\n  continuous_on X ?f = (\\<forall>x\\<in>X. isCont ?f x)", "show ?thesis"], ["proof (prove)\nusing this:\n  continuous_on X ?f = (\\<forall>x\\<in>X. isCont ?f x)\n\ngoal (1 subgoal):\n 1. isCont f x", "using fcontX assms(1)"], ["proof (prove)\nusing this:\n  continuous_on X ?f = (\\<forall>x\\<in>X. isCont ?f x)\n  continuous_on X f\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. isCont f x", "by blast"], ["proof (state)\nthis:\n  isCont f x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma continuous_at_imp_cball:\n  assumes \"continuous (at x) g\"\n  assumes \"g x > (0::real)\"\n  obtains r where \"r > 0\" \"\\<forall>y \\<in> cball x r. g y > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>0 < r; \\<forall>y\\<in>cball x r. 0 < g y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>0 < r; \\<forall>y\\<in>cball x r. 0 < g y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms(1)"], ["proof (chain)\npicking this:\n  isCont g x", "obtain d where \"d>0\" \"g ` (ball x d) \\<subseteq> ball (g x) ((g x)/2)\""], ["proof (prove)\nusing this:\n  isCont g x\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<lbrakk>0 < d;\n         g ` ball x d \\<subseteq> ball (g x) (g x / 2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson assms(2) continuous_at_ball half_gt_zero)"], ["proof (state)\nthis:\n  0 < d\n  g ` ball x d \\<subseteq> ball (g x) (g x / 2)\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>0 < r; \\<forall>y\\<in>cball x r. 0 < g y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  0 < d\n  g ` ball x d \\<subseteq> ball (g x) (g x / 2)", "have \"\\<forall>y \\<in> cball x (d/2). g y > 0\""], ["proof (prove)\nusing this:\n  0 < d\n  g ` ball x d \\<subseteq> ball (g x) (g x / 2)\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>cball x (d / 2). 0 < g y", "by (smt assms(2) dist_norm image_subset_iff mem_ball mem_cball pos_half_less real_norm_def)"], ["proof (state)\nthis:\n  \\<forall>y\\<in>cball x (d / 2). 0 < g y\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>0 < r; \\<forall>y\\<in>cball x r. 0 < g y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>cball x (d / 2). 0 < g y\n\ngoal (1 subgoal):\n 1. thesis", "using \\<open>0 < d\\<close> that half_gt_zero"], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>cball x (d / 2). 0 < g y\n  0 < d\n  \\<lbrakk>0 < ?r; \\<forall>y\\<in>cball x ?r. 0 < g y\\<rbrakk>\n  \\<Longrightarrow> thesis\n  (0::?'a) < ?a \\<Longrightarrow> (0::?'a) < ?a / (2::?'a)\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open> \\<open>flow0\\<close> is \\<open>path_connected\\<close> \\<close>"], ["", "lemma flow0_path_connected_time:\n  assumes \"ts \\<subseteq> existence_ivl0 x\" \"path_connected ts\"\n  shows \"path_connected (flow0 x ` ts)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path_connected (flow0 x ` ts)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. path_connected (flow0 x ` ts)", "have \"continuous_on ts (flow0 x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on ts (flow0 x)", "by (meson assms continuous_on_sequentially flow_continuous_on subsetD)"], ["proof (state)\nthis:\n  continuous_on ts (flow0 x)\n\ngoal (1 subgoal):\n 1. path_connected (flow0 x ` ts)", "from path_connected_continuous_image[OF this assms(2)]"], ["proof (chain)\npicking this:\n  path_connected (flow0 x ` ts)", "show ?thesis"], ["proof (prove)\nusing this:\n  path_connected (flow0 x ` ts)\n\ngoal (1 subgoal):\n 1. path_connected (flow0 x ` ts)", "."], ["proof (state)\nthis:\n  path_connected (flow0 x ` ts)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma flow0_path_connected:\n  assumes \"path_connected D\"\n    \"path_connected ts\"\n    \"\\<And>x. x \\<in> D \\<Longrightarrow> ts \\<subseteq> existence_ivl0 x\"\n  shows \"path_connected ( (\\<lambda>(x, y). flow0 x y) ` (D \\<times> ts))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path_connected ((\\<lambda>(x, y). flow0 x y) ` (D \\<times> ts))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. path_connected ((\\<lambda>(x, y). flow0 x y) ` (D \\<times> ts))", "have \"D \\<times> ts \\<subseteq> Sigma X existence_ivl0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<times> ts \\<subseteq> Sigma X existence_ivl0", "using assms(3) subset_iff"], ["proof (prove)\nusing this:\n  ?x \\<in> D \\<Longrightarrow> ts \\<subseteq> existence_ivl0 ?x\n  (?A \\<subseteq> ?B) =\n  (\\<forall>t. t \\<in> ?A \\<longrightarrow> t \\<in> ?B)\n\ngoal (1 subgoal):\n 1. D \\<times> ts \\<subseteq> Sigma X existence_ivl0", "by fastforce"], ["proof (state)\nthis:\n  D \\<times> ts \\<subseteq> Sigma X existence_ivl0\n\ngoal (1 subgoal):\n 1. path_connected ((\\<lambda>(x, y). flow0 x y) ` (D \\<times> ts))", "then"], ["proof (chain)\npicking this:\n  D \\<times> ts \\<subseteq> Sigma X existence_ivl0", "have a1:\"continuous_on (D \\<times> ts) (\\<lambda>(x, y). flow0 x y)\""], ["proof (prove)\nusing this:\n  D \\<times> ts \\<subseteq> Sigma X existence_ivl0\n\ngoal (1 subgoal):\n 1. continuous_on (D \\<times> ts) (\\<lambda>(x, y). flow0 x y)", "using flow_continuous_on_state_space continuous_on_subset"], ["proof (prove)\nusing this:\n  D \\<times> ts \\<subseteq> Sigma X existence_ivl0\n  continuous_on (Sigma X existence_ivl0) (\\<lambda>(x, y). flow0 x y)\n  \\<lbrakk>continuous_on ?s ?f; ?t \\<subseteq> ?s\\<rbrakk>\n  \\<Longrightarrow> continuous_on ?t ?f\n\ngoal (1 subgoal):\n 1. continuous_on (D \\<times> ts) (\\<lambda>(x, y). flow0 x y)", "by blast"], ["proof (state)\nthis:\n  continuous_on (D \\<times> ts) (\\<lambda>(x, y). flow0 x y)\n\ngoal (1 subgoal):\n 1. path_connected ((\\<lambda>(x, y). flow0 x y) ` (D \\<times> ts))", "have a2 : \"path_connected (D \\<times> ts)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path_connected (D \\<times> ts)", "using path_connected_Times assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>path_connected ?s; path_connected ?t\\<rbrakk>\n  \\<Longrightarrow> path_connected (?s \\<times> ?t)\n  path_connected D\n  path_connected ts\n  ?x \\<in> D \\<Longrightarrow> ts \\<subseteq> existence_ivl0 ?x\n\ngoal (1 subgoal):\n 1. path_connected (D \\<times> ts)", "by auto"], ["proof (state)\nthis:\n  path_connected (D \\<times> ts)\n\ngoal (1 subgoal):\n 1. path_connected ((\\<lambda>(x, y). flow0 x y) ` (D \\<times> ts))", "from path_connected_continuous_image[OF a1 a2]"], ["proof (chain)\npicking this:\n  path_connected ((\\<lambda>(x, y). flow0 x y) ` (D \\<times> ts))", "show ?thesis"], ["proof (prove)\nusing this:\n  path_connected ((\\<lambda>(x, y). flow0 x y) ` (D \\<times> ts))\n\ngoal (1 subgoal):\n 1. path_connected ((\\<lambda>(x, y). flow0 x y) ` (D \\<times> ts))", "."], ["proof (state)\nthis:\n  path_connected ((\\<lambda>(x, y). flow0 x y) ` (D \\<times> ts))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Return Time and Implicit Function Theorem\\<close>"], ["", "context c1_on_open_euclidean begin"], ["", "lemma flow_implicit_function:\n  \\<comment> \\<open>TODO: generalization of @{thm returns_to_implicit_function}!\\<close>\n  fixes s::\"'a::euclidean_space \\<Rightarrow> real\" and S::\"'a set\"\n  assumes t: \"t \\<in> existence_ivl0 x\" and x: \"x \\<in> X\" and st: \"s (flow0 x t) = 0\"\n  assumes Ds: \"\\<And>x. (s has_derivative blinfun_apply (Ds x)) (at x)\"\n  assumes DsC: \"isCont Ds (flow0 x t)\"\n  assumes nz: \"Ds (flow0 x t) (f (flow0 x t)) \\<noteq> 0\"\n  obtains u e\n  where \"s (flow0 x (u x)) = 0\"\n    \"u x = t\"\n    \"(\\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0)\"\n    \"continuous_on (cball x e) u\"\n    \"(\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> Sigma X existence_ivl0\"\n    \"0 < e\" \"(u has_derivative (- blinfun_scaleR_left\n                   (inverse (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) o\\<^sub>L\n                      (Ds (flow0 x t) o\\<^sub>L flowderiv x t) o\\<^sub>L embed1_blinfun)) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0; u x = t;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) o\\<^sub>L\n            (Ds (flow0 x t) o\\<^sub>L flowderiv x t) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0; u x = t;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) o\\<^sub>L\n            (Ds (flow0 x t) o\\<^sub>L flowderiv x t) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note [derivative_intros] = has_derivative_compose[OF _ Ds]"], ["proof (state)\nthis:\n  (?f has_derivative ?f') (at ?x within ?s) \\<Longrightarrow>\n  ((\\<lambda>x. s (?f x)) has_derivative\n   (\\<lambda>x. blinfun_apply (Ds (?f ?x)) (?f' x)))\n   (at ?x within ?s)\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0; u x = t;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) o\\<^sub>L\n            (Ds (flow0 x t) o\\<^sub>L flowderiv x t) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have cont_s: \"continuous_on UNIV s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV s", "by (rule has_derivative_continuous_on[OF Ds])"], ["proof (state)\nthis:\n  continuous_on UNIV s\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0; u x = t;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) o\\<^sub>L\n            (Ds (flow0 x t) o\\<^sub>L flowderiv x t) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note cls[simp, intro] = closed_levelset[OF cont_s]"], ["proof (state)\nthis:\n  closed {x. s x = ?c}\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0; u x = t;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) o\\<^sub>L\n            (Ds (flow0 x t) o\\<^sub>L flowderiv x t) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  closed {x. s x = ?c}", "have xt1: \"(x, t) \\<in> Sigma X existence_ivl0\""], ["proof (prove)\nusing this:\n  closed {x. s x = ?c}\n\ngoal (1 subgoal):\n 1. (x, t) \\<in> Sigma X existence_ivl0", "by (auto simp: t x)"], ["proof (state)\nthis:\n  (x, t) \\<in> Sigma X existence_ivl0\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0; u x = t;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) o\\<^sub>L\n            (Ds (flow0 x t) o\\<^sub>L flowderiv x t) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have D: \"(\\<And>x. x \\<in> Sigma X existence_ivl0 \\<Longrightarrow>\n      ((\\<lambda>(x, t). s (flow0 x t)) has_derivative\n       blinfun_apply (Ds (flow0 (fst x) (snd x)) o\\<^sub>L (flowderiv (fst x) (snd x))))\n       (at x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Sigma X existence_ivl0 \\<Longrightarrow>\n       ((\\<lambda>(x, t). s (flow0 x t)) has_derivative\n        blinfun_apply\n         (Ds (flow0 (fst x) (snd x)) o\\<^sub>L flowderiv (fst x) (snd x)))\n        (at x)", "by (auto intro!: derivative_eq_intros)"], ["proof (state)\nthis:\n  ?x2 \\<in> Sigma X existence_ivl0 \\<Longrightarrow>\n  ((\\<lambda>(x, t). s (flow0 x t)) has_derivative\n   blinfun_apply\n    (Ds (flow0 (fst ?x2) (snd ?x2)) o\\<^sub>L\n     flowderiv (fst ?x2) (snd ?x2)))\n   (at ?x2)\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0; u x = t;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) o\\<^sub>L\n            (Ds (flow0 x t) o\\<^sub>L flowderiv x t) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have C: \"isCont (\\<lambda>x. Ds (flow0 (fst x) (snd x)) o\\<^sub>L flowderiv (fst x) (snd x))\n   (x, t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont\n     (\\<lambda>x.\n         Ds (flow0 (fst x) (snd x)) o\\<^sub>L flowderiv (fst x) (snd x))\n     (x, t)", "using flowderiv_continuous_on[unfolded continuous_on_eq_continuous_within,\n        rule_format, OF xt1]"], ["proof (prove)\nusing this:\n  continuous (at (x, t) within Sigma X existence_ivl0)\n   (\\<lambda>(x, y). flowderiv x y)\n\ngoal (1 subgoal):\n 1. isCont\n     (\\<lambda>x.\n         Ds (flow0 (fst x) (snd x)) o\\<^sub>L flowderiv (fst x) (snd x))\n     (x, t)", "using at_within_open[OF xt1 open_state_space]"], ["proof (prove)\nusing this:\n  continuous (at (x, t) within Sigma X existence_ivl0)\n   (\\<lambda>(x, y). flowderiv x y)\n  at (x, t) within Sigma X existence_ivl0 = at (x, t)\n\ngoal (1 subgoal):\n 1. isCont\n     (\\<lambda>x.\n         Ds (flow0 (fst x) (snd x)) o\\<^sub>L flowderiv (fst x) (snd x))\n     (x, t)", "by (auto intro!: continuous_intros tendsto_eq_intros x t\n        isCont_tendsto_compose[OF DsC, unfolded poincare_map_def]\n        simp: split_beta' isCont_def)"], ["proof (state)\nthis:\n  isCont\n   (\\<lambda>x.\n       Ds (flow0 (fst x) (snd x)) o\\<^sub>L flowderiv (fst x) (snd x))\n   (x, t)\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0; u x = t;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) o\\<^sub>L\n            (Ds (flow0 x t) o\\<^sub>L flowderiv x t) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have Z: \"(case (x, t) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (case (x, t) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0", "by (auto simp: st)"], ["proof (state)\nthis:\n  (case (x, t) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0; u x = t;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) o\\<^sub>L\n            (Ds (flow0 x t) o\\<^sub>L flowderiv x t) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have I1: \"blinfun_scaleR_left (inverse (Ds (flow0 x t)(f (flow0 x t)))) o\\<^sub>L \n    ((Ds (flow0 (fst (x, t))\n            (snd (x, t))) o\\<^sub>L\n       flowderiv (fst (x, t))\n        (snd (x, t))) o\\<^sub>L\n      embed2_blinfun)\n     = 1\\<^sub>L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_scaleR_left\n     (inverse (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) o\\<^sub>L\n    (Ds (flow0 (fst (x, t)) (snd (x, t))) o\\<^sub>L\n     flowderiv (fst (x, t)) (snd (x, t)) o\\<^sub>L\n     embed2_blinfun) =\n    1\\<^sub>L", "using nz"], ["proof (prove)\nusing this:\n  blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. blinfun_scaleR_left\n     (inverse (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) o\\<^sub>L\n    (Ds (flow0 (fst (x, t)) (snd (x, t))) o\\<^sub>L\n     flowderiv (fst (x, t)) (snd (x, t)) o\\<^sub>L\n     embed2_blinfun) =\n    1\\<^sub>L", "by (auto intro!: blinfun_eqI\n        simp: flowderiv_def blinfun.bilinear_simps inverse_eq_divide poincare_map_def)"], ["proof (state)\nthis:\n  blinfun_scaleR_left\n   (inverse (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) o\\<^sub>L\n  (Ds (flow0 (fst (x, t)) (snd (x, t))) o\\<^sub>L\n   flowderiv (fst (x, t)) (snd (x, t)) o\\<^sub>L\n   embed2_blinfun) =\n  1\\<^sub>L\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0; u x = t;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) o\\<^sub>L\n            (Ds (flow0 x t) o\\<^sub>L flowderiv x t) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have I2: \"((Ds (flow0 (fst (x, t))\n            (snd (x, t))) o\\<^sub>L\n       flowderiv (fst (x, t))\n        (snd (x, t))) o\\<^sub>L\n      embed2_blinfun) o\\<^sub>L blinfun_scaleR_left (inverse (Ds (flow0 x t)(f (flow0 x t))))\n     = 1\\<^sub>L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ds (flow0 (fst (x, t)) (snd (x, t))) o\\<^sub>L\n    flowderiv (fst (x, t)) (snd (x, t)) o\\<^sub>L\n    embed2_blinfun o\\<^sub>L\n    blinfun_scaleR_left\n     (inverse (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) =\n    1\\<^sub>L", "using nz"], ["proof (prove)\nusing this:\n  blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Ds (flow0 (fst (x, t)) (snd (x, t))) o\\<^sub>L\n    flowderiv (fst (x, t)) (snd (x, t)) o\\<^sub>L\n    embed2_blinfun o\\<^sub>L\n    blinfun_scaleR_left\n     (inverse (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) =\n    1\\<^sub>L", "by (auto intro!: blinfun_eqI\n        simp: flowderiv_def blinfun.bilinear_simps inverse_eq_divide poincare_map_def)"], ["proof (state)\nthis:\n  Ds (flow0 (fst (x, t)) (snd (x, t))) o\\<^sub>L\n  flowderiv (fst (x, t)) (snd (x, t)) o\\<^sub>L\n  embed2_blinfun o\\<^sub>L\n  blinfun_scaleR_left\n   (inverse (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) =\n  1\\<^sub>L\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0; u x = t;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) o\\<^sub>L\n            (Ds (flow0 x t) o\\<^sub>L flowderiv x t) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "apply (rule implicit_function_theorem[where f=\"\\<lambda>(x, t). s (flow0 x t)\"\n          and S=\"Sigma X existence_ivl0\", OF D xt1 open_state_space order_refl C Z I1 I2])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> Sigma X existence_ivl0 \\<Longrightarrow>\n       x \\<in> Sigma X existence_ivl0\n 2. \\<And>u e r.\n       \\<lbrakk>(case (x, u x) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0;\n        u x = t;\n        \\<And>sa.\n           sa \\<in> cball x e \\<Longrightarrow>\n           (case (sa, u sa) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0;\n        continuous_on (cball x e) u;\n        (\\<lambda>t. (t, u t)) ` cball x e\n        \\<subseteq> Sigma X existence_ivl0;\n        0 < e;\n        (u has_derivative\n         blinfun_apply\n          (- blinfun_scaleR_left\n              (inverse\n                (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) o\\<^sub>L\n           (Ds (flow0 (fst (x, t)) (snd (x, t))) o\\<^sub>L\n            flowderiv (fst (x, t)) (snd (x, t))) o\\<^sub>L\n           embed1_blinfun))\n         (at x);\n        0 < r;\n        \\<And>U v sa.\n           \\<lbrakk>v x = t;\n            \\<And>sa.\n               sa \\<in> U \\<Longrightarrow>\n               (case (sa, v sa) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0;\n            U \\<subseteq> cball x e; continuous_on U v; sa \\<in> U;\n            (sa, v sa) \\<in> ball (x, t) r\\<rbrakk>\n           \\<Longrightarrow> u sa = v sa\\<rbrakk>\n       \\<Longrightarrow> thesis", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u e r.\n       \\<lbrakk>(case (x, u x) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0;\n        u x = t;\n        \\<And>sa.\n           sa \\<in> cball x e \\<Longrightarrow>\n           (case (sa, u sa) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0;\n        continuous_on (cball x e) u;\n        (\\<lambda>t. (t, u t)) ` cball x e\n        \\<subseteq> Sigma X existence_ivl0;\n        0 < e;\n        (u has_derivative\n         blinfun_apply\n          (- blinfun_scaleR_left\n              (inverse\n                (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) o\\<^sub>L\n           (Ds (flow0 (fst (x, t)) (snd (x, t))) o\\<^sub>L\n            flowderiv (fst (x, t)) (snd (x, t))) o\\<^sub>L\n           embed1_blinfun))\n         (at x);\n        0 < r;\n        \\<And>U v sa.\n           \\<lbrakk>v x = t;\n            \\<And>sa.\n               sa \\<in> U \\<Longrightarrow>\n               (case (sa, v sa) of (x, t) \\<Rightarrow> s (flow0 x t)) = 0;\n            U \\<subseteq> cball x e; continuous_on U v; sa \\<in> U;\n            (sa, v sa) \\<in> ball (x, t) r\\<rbrakk>\n           \\<Longrightarrow> u sa = v sa\\<rbrakk>\n       \\<Longrightarrow> thesis", "unfolding split_beta' fst_conv snd_conv poincare_map_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u e r.\n       \\<lbrakk>s (flow0 x (u x)) = 0; u x = t;\n        \\<And>sa.\n           sa \\<in> cball x e \\<Longrightarrow> s (flow0 sa (u sa)) = 0;\n        continuous_on (cball x e) u;\n        (\\<lambda>t. (t, u t)) ` cball x e\n        \\<subseteq> Sigma X existence_ivl0;\n        0 < e;\n        (u has_derivative\n         blinfun_apply\n          (- blinfun_scaleR_left\n              (inverse\n                (blinfun_apply (Ds (flow0 x t)) (f (flow0 x t)))) o\\<^sub>L\n           (Ds (flow0 x t) o\\<^sub>L flowderiv x t) o\\<^sub>L\n           embed1_blinfun))\n         (at x);\n        0 < r;\n        \\<And>U v sa.\n           \\<lbrakk>v x = t;\n            \\<And>sa. sa \\<in> U \\<Longrightarrow> s (flow0 sa (v sa)) = 0;\n            U \\<subseteq> cball x e; continuous_on U v; sa \\<in> U;\n            (sa, v sa) \\<in> ball (x, t) r\\<rbrakk>\n           \\<Longrightarrow> u sa = v sa\\<rbrakk>\n       \\<Longrightarrow> thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma flow_implicit_function_at:\n  fixes s::\"'a::euclidean_space \\<Rightarrow> real\" and S::\"'a set\"\n  assumes x: \"x \\<in> X\" and st: \"s x = 0\"\n  assumes Ds: \"\\<And>x. (s has_derivative blinfun_apply (Ds x)) (at x)\"\n  assumes DsC: \"isCont Ds x\"\n  assumes nz: \"Ds x (f x) \\<noteq> 0\"\n  assumes pos: \"e > 0\"\n  obtains u d\n  where\n    \"0 < d\"\n    \"u x = 0\"\n    \"\\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0\"\n    \"\\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e\"\n    \"\\<And>y. y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y\"\n    \"continuous_on (cball x d) u\"\n    \"(u has_derivative -Ds x /\\<^sub>R (Ds x) (f x)) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have x0: \"flow0 x 0 = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 x 0 = x", "by (simp add: x)"], ["proof (state)\nthis:\n  flow0 x 0 = x\n\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from flow_implicit_function[OF existence_ivl_zero[OF x] x, unfolded x0, of s, OF st Ds DsC nz]"], ["proof (chain)\npicking this:\n  (\\<And>u e.\n      \\<lbrakk>s (flow0 x (u x)) = 0; u x = 0;\n       \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n       continuous_on (cball x e) u;\n       (\\<lambda>t. (t, u t)) ` cball x e\n       \\<subseteq> Sigma X existence_ivl0;\n       0 < e;\n       (u has_derivative\n        blinfun_apply\n         (- blinfun_scaleR_left\n             (inverse (blinfun_apply (Ds x) (f x))) o\\<^sub>L\n          (Ds x o\\<^sub>L flowderiv x 0) o\\<^sub>L\n          embed1_blinfun))\n        (at x)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain u d0 where\n    s0: \"s (flow0 x (u x)) = 0\"\n    and u0: \"u x = 0\"\n    and u: \"\\<And>y. y \\<in> cball x d0 \\<Longrightarrow> s (flow0 y (u y)) = 0\"\n    and uc: \"continuous_on (cball x d0) u\"\n    and uex: \"(\\<lambda>t. (t, u t)) ` cball x d0 \\<subseteq> Sigma X existence_ivl0\"\n    and d0: \"0 < d0\"\n    and u': \"(u has_derivative\n     blinfun_apply\n      (- blinfun_scaleR_left (inverse (blinfun_apply (Ds x) (f x))) o\\<^sub>L (Ds x o\\<^sub>L flowderiv x 0) o\\<^sub>L embed1_blinfun))\n     (at x)\""], ["proof (prove)\nusing this:\n  (\\<And>u e.\n      \\<lbrakk>s (flow0 x (u x)) = 0; u x = 0;\n       \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n       continuous_on (cball x e) u;\n       (\\<lambda>t. (t, u t)) ` cball x e\n       \\<subseteq> Sigma X existence_ivl0;\n       0 < e;\n       (u has_derivative\n        blinfun_apply\n         (- blinfun_scaleR_left\n             (inverse (blinfun_apply (Ds x) (f x))) o\\<^sub>L\n          (Ds x o\\<^sub>L flowderiv x 0) o\\<^sub>L\n          embed1_blinfun))\n        (at x)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>u d0.\n        \\<lbrakk>s (flow0 x (u x)) = 0; u x = 0;\n         \\<And>y.\n            y \\<in> cball x d0 \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x d0) u;\n         (\\<lambda>t. (t, u t)) ` cball x d0\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < d0;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse (blinfun_apply (Ds x) (f x))) o\\<^sub>L\n            (Ds x o\\<^sub>L flowderiv x 0) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  s (flow0 x (u x)) = 0\n  u x = 0\n  ?y2 \\<in> cball x d0 \\<Longrightarrow> s (flow0 ?y2 (u ?y2)) = 0\n  continuous_on (cball x d0) u\n  (\\<lambda>t. (t, u t)) ` cball x d0 \\<subseteq> Sigma X existence_ivl0\n  0 < d0\n  (u has_derivative\n   blinfun_apply\n    (- blinfun_scaleR_left (inverse (blinfun_apply (Ds x) (f x))) o\\<^sub>L\n     (Ds x o\\<^sub>L flowderiv x 0) o\\<^sub>L\n     embed1_blinfun))\n   (at x)\n\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"at x within cball x d0 = at x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at x within cball x d0 = at x", "by (rule at_within_interior) (auto simp: \\<open>0 < d0\\<close>)"], ["proof (state)\nthis:\n  at x within cball x d0 = at x\n\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  at x within cball x d0 = at x", "have \"(u \\<longlongrightarrow> 0) (at x)\""], ["proof (prove)\nusing this:\n  at x within cball x d0 = at x\n\ngoal (1 subgoal):\n 1. u \\<midarrow>x\\<rightarrow> 0", "using uc d0"], ["proof (prove)\nusing this:\n  at x within cball x d0 = at x\n  continuous_on (cball x d0) u\n  0 < d0\n\ngoal (1 subgoal):\n 1. u \\<midarrow>x\\<rightarrow> 0", "by (auto simp: continuous_on_def u0 dest!: bspec[where x=x])"], ["proof (state)\nthis:\n  u \\<midarrow>x\\<rightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from tendstoD[OF this \\<open>0 < e\\<close>] pos u0"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at x. dist (u x) 0 < e\n  0 < e\n  u x = 0", "obtain d1 where d1: \"0 < d1\" \"\\<And>xa. dist xa x \\<le> d1 \\<Longrightarrow> \\<bar>u xa\\<bar> < e\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at x. dist (u x) 0 < e\n  0 < e\n  u x = 0\n\ngoal (1 subgoal):\n 1. (\\<And>d1.\n        \\<lbrakk>0 < d1;\n         \\<And>xa.\n            dist xa x \\<le> d1 \\<Longrightarrow>\n            \\<bar>u xa\\<bar> < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding eventually_at_le"], ["proof (prove)\nusing this:\n  \\<exists>d>0.\n     \\<forall>xa\\<in>UNIV.\n        xa \\<noteq> x \\<and> dist xa x \\<le> d \\<longrightarrow>\n        dist (u xa) 0 < e\n  0 < e\n  u x = 0\n\ngoal (1 subgoal):\n 1. (\\<And>d1.\n        \\<lbrakk>0 < d1;\n         \\<And>xa.\n            dist xa x \\<le> d1 \\<Longrightarrow>\n            \\<bar>u xa\\<bar> < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  0 < d1\n  dist ?xa2 x \\<le> d1 \\<Longrightarrow> \\<bar>u ?xa2\\<bar> < e\n\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define d where \"d = min d0 d1\""], ["proof (state)\nthis:\n  d = min d0 d1\n\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"0 < d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < d", "by (auto simp: d_def d0 d1)"], ["proof (state)\nthis:\n  0 < d\n\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  0 < d\n\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note u0"], ["proof (state)\nthis:\n  u x = 0\n\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  u x = 0\n\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0", "by (auto intro!: u simp: d_def)"], ["proof (state)\nthis:\n  ?y2 \\<in> cball x d \\<Longrightarrow> s (flow0 ?y2 (u ?y2)) = 0\n\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  ?y2 \\<in> cball x d \\<Longrightarrow> s (flow0 ?y2 (u ?y2)) = 0\n\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e", "using d1"], ["proof (prove)\nusing this:\n  0 < d1\n  dist ?xa2 x \\<le> d1 \\<Longrightarrow> \\<bar>u ?xa2\\<bar> < e\n\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e", "by (auto simp: d_def dist_commute)"], ["proof (state)\nthis:\n  ?y2 \\<in> cball x d \\<Longrightarrow> \\<bar>u ?y2\\<bar> < e\n\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  ?y2 \\<in> cball x d \\<Longrightarrow> \\<bar>u ?y2\\<bar> < e\n\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<And>y. y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y", "using uex"], ["proof (prove)\nusing this:\n  (\\<lambda>t. (t, u t)) ` cball x d0 \\<subseteq> Sigma X existence_ivl0\n\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y", "by (force simp: d_def)"], ["proof (state)\nthis:\n  ?y2 \\<in> cball x d \\<Longrightarrow> u ?y2 \\<in> existence_ivl0 ?y2\n\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  ?y2 \\<in> cball x d \\<Longrightarrow> u ?y2 \\<in> existence_ivl0 ?y2\n\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"continuous_on (cball x d) u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on (cball x d) u", "using uc"], ["proof (prove)\nusing this:\n  continuous_on (cball x d0) u\n\ngoal (1 subgoal):\n 1. continuous_on (cball x d) u", "by (rule continuous_on_subset) (auto simp: d_def)"], ["proof (state)\nthis:\n  continuous_on (cball x d) u\n\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  continuous_on (cball x d) u\n\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"(u has_derivative -Ds x /\\<^sub>R (Ds x) (f x)) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u has_derivative\n     blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n     (at x)", "using u'"], ["proof (prove)\nusing this:\n  (u has_derivative\n   blinfun_apply\n    (- blinfun_scaleR_left (inverse (blinfun_apply (Ds x) (f x))) o\\<^sub>L\n     (Ds x o\\<^sub>L flowderiv x 0) o\\<^sub>L\n     embed1_blinfun))\n   (at x)\n\ngoal (1 subgoal):\n 1. (u has_derivative\n     blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n     (at x)", "by (rule has_derivative_subst) (auto intro!: ext simp: x x0 flowderiv_def blinfun.bilinear_simps)"], ["proof (state)\nthis:\n  (u has_derivative\n   blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n   (at x)\n\ngoal (1 subgoal):\n 1. (\\<And>d u.\n        \\<lbrakk>0 < d; u x = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         \\<And>y. y \\<in> cball x d \\<Longrightarrow> \\<bar>u y\\<bar> < e;\n         \\<And>y.\n            y \\<in> cball x d \\<Longrightarrow> u y \\<in> existence_ivl0 y;\n         continuous_on (cball x d) u;\n         (u has_derivative\n          blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  0 < d\n  u x = 0\n  ?y2 \\<in> cball x d \\<Longrightarrow> s (flow0 ?y2 (u ?y2)) = 0\n  ?y2 \\<in> cball x d \\<Longrightarrow> \\<bar>u ?y2\\<bar> < e\n  ?y2 \\<in> cball x d \\<Longrightarrow> u ?y2 \\<in> existence_ivl0 ?y2\n  continuous_on (cball x d) u\n  (u has_derivative\n   blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n   (at x)", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < d\n  u x = 0\n  ?y2 \\<in> cball x d \\<Longrightarrow> s (flow0 ?y2 (u ?y2)) = 0\n  ?y2 \\<in> cball x d \\<Longrightarrow> \\<bar>u ?y2\\<bar> < e\n  ?y2 \\<in> cball x d \\<Longrightarrow> u ?y2 \\<in> existence_ivl0 ?y2\n  continuous_on (cball x d) u\n  (u has_derivative\n   blinfun_apply (- Ds x /\\<^sub>R blinfun_apply (Ds x) (f x)))\n   (at x)\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma returns_to_implicit_function_gen:\n  \\<comment> \\<open>TODO: generalizes proof of @{thm returns_to_implicit_function}!\\<close>\n  fixes s::\"'a::euclidean_space \\<Rightarrow> real\"\n  assumes rt: \"returns_to {x \\<in> S. s x = 0} x\" (is \"returns_to ?P x\")\n  assumes cS: \"closed S\"\n  assumes Ds: \"\\<And>x. (s has_derivative blinfun_apply (Ds x)) (at x)\"\n    \"isCont Ds (poincare_map ?P x)\"\n    \"Ds (poincare_map ?P x) (f (poincare_map ?P x)) \\<noteq> 0\"\n  obtains u e\n  where \"s (flow0 x (u x)) = 0\"\n    \"u x = return_time ?P x\"\n    \"(\\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0)\"\n    \"continuous_on (cball x e) u\"\n    \"(\\<lambda>t. (t, u t)) ` cball x e \\<subseteq> Sigma X existence_ivl0\"\n    \"0 < e\" \"(u has_derivative (- blinfun_scaleR_left\n                   (inverse (blinfun_apply (Ds (poincare_map ?P x)) (f (poincare_map ?P x)))) o\\<^sub>L\n                      (Ds (poincare_map ?P x) o\\<^sub>L flowderiv x (return_time ?P x)) o\\<^sub>L embed1_blinfun)) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note [derivative_intros] = has_derivative_compose[OF _ Ds(1)]"], ["proof (state)\nthis:\n  (?f has_derivative ?f') (at ?x within ?s) \\<Longrightarrow>\n  ((\\<lambda>x. s (?f x)) has_derivative\n   (\\<lambda>x. blinfun_apply (Ds (?f ?x)) (?f' x)))\n   (at ?x within ?s)\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have cont_s: \"continuous_on UNIV s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV s", "by (rule has_derivative_continuous_on[OF Ds(1)])"], ["proof (state)\nthis:\n  continuous_on UNIV s\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note cls[simp, intro] = closed_levelset[OF cont_s]"], ["proof (state)\nthis:\n  closed {x. s x = ?c}\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?t1 = \"return_time ?P x\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have cls[simp, intro]: \"closed {x \\<in> S. s x = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed {x \\<in> S. s x = 0}", "by (rule closed_levelset_within) (auto intro!: cS continuous_on_subset[OF cont_s])"], ["proof (state)\nthis:\n  closed {x \\<in> S. s x = 0}\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have *: \"poincare_map ?P x = flow0 x (return_time {x \\<in> S. s x = 0} x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poincare_map {x \\<in> S. s x = 0} x =\n    flow0 x (return_time {x \\<in> S. s x = 0} x)", "by (simp add: poincare_map_def)"], ["proof (state)\nthis:\n  poincare_map {x \\<in> S. s x = 0} x =\n  flow0 x (return_time {x \\<in> S. s x = 0} x)\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x\"\n    \"x \\<in> X\"\n    \"s (poincare_map ?P x) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x &&&\n    x \\<in> X &&& s (poincare_map {x \\<in> S. s x = 0} x) = 0", "using poincare_map_returns rt"], ["proof (prove)\nusing this:\n  \\<lbrakk>returns_to ?P ?x; closed ?P\\<rbrakk>\n  \\<Longrightarrow> poincare_map ?P ?x \\<in> ?P\n  returns_to {x \\<in> S. s x = 0} x\n\ngoal (1 subgoal):\n 1. return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x &&&\n    x \\<in> X &&& s (poincare_map {x \\<in> S. s x = 0} x) = 0", "by (auto intro!: return_time_exivl rt)"], ["proof (state)\nthis:\n  return_time {x \\<in> S. s x = 0} x \\<in> existence_ivl0 x\n  x \\<in> X\n  s (poincare_map {x \\<in> S. s x = 0} x) = 0\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note E = flow_implicit_function[of \"return_time ?P x\" x s Ds, OF this[unfolded *] Ds[unfolded *],\n      folded *]"], ["proof (state)\nthis:\n  (\\<And>u e.\n      \\<lbrakk>s (flow0 x (u x)) = 0;\n       u x = return_time {x \\<in> S. s x = 0} x;\n       \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n       continuous_on (cball x e) u;\n       (\\<lambda>t. (t, u t)) ` cball x e\n       \\<subseteq> Sigma X existence_ivl0;\n       0 < e;\n       (u has_derivative\n        blinfun_apply\n         (- blinfun_scaleR_left\n             (inverse\n               (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                 (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n          (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n           flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n          embed1_blinfun))\n        (at x)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>u e.\n        \\<lbrakk>s (flow0 x (u x)) = 0;\n         u x = return_time {x \\<in> S. s x = 0} x;\n         \\<And>y. y \\<in> cball x e \\<Longrightarrow> s (flow0 y (u y)) = 0;\n         continuous_on (cball x e) u;\n         (\\<lambda>t. (t, u t)) ` cball x e\n         \\<subseteq> Sigma X existence_ivl0;\n         0 < e;\n         (u has_derivative\n          blinfun_apply\n           (- blinfun_scaleR_left\n               (inverse\n                 (blinfun_apply (Ds (poincare_map {x \\<in> S. s x = 0} x))\n                   (f (poincare_map {x \\<in> S. s x = 0} x)))) o\\<^sub>L\n            (Ds (poincare_map {x \\<in> S. s x = 0} x) o\\<^sub>L\n             flowderiv x (return_time {x \\<in> S. s x = 0} x)) o\\<^sub>L\n            embed1_blinfun))\n          (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "by (rule E) rule"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>c.f. Perko Section 3.7 Lemma 2 part 1.\\<close>"], ["", "lemma flow_transversal_surface_finite_intersections:\n  fixes s::\"'a \\<Rightarrow> 'b::real_normed_vector\"\n    and Ds::\"'a \\<Rightarrow> 'a \\<Rightarrow>\\<^sub>L 'b\"\n  assumes \"closed S\"\n  assumes \"\\<And>x. (s has_derivative (Ds x)) (at x)\"\n  assumes \"\\<And>x. x \\<in> S \\<Longrightarrow> s x = 0 \\<Longrightarrow> Ds x (f x) \\<noteq> 0\"\n  assumes \"a \\<le> b\" \"{a .. b} \\<subseteq> existence_ivl0 x\"\n  shows \"finite {t\\<in>{a..b}. flow0 x t \\<in> {x \\<in> S. s x = 0}}\"\n    \\<comment> \\<open>TODO: define notion of (compact/closed)-(continuous/differentiable/C1)-surface?\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {t \\<in> {a..b}. flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}}", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    finite {t \\<in> {a..b}. flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}}\n 2. \\<not> ?P \\<Longrightarrow>\n    finite {t \\<in> {a..b}. flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}}", "note Ds = \\<open>\\<And>x. (s has_derivative (Ds x)) (at x)\\<close>"], ["proof (state)\nthis:\n  (s has_derivative blinfun_apply (Ds ?x)) (at ?x)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    finite {t \\<in> {a..b}. flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}}\n 2. \\<not> ?P \\<Longrightarrow>\n    finite {t \\<in> {a..b}. flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}}", "note transversal = \\<open>\\<And>x. x \\<in> S \\<Longrightarrow> s x = 0 \\<Longrightarrow> Ds x (f x) \\<noteq> 0\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> S; s ?x = (0::'b)\\<rbrakk>\n  \\<Longrightarrow> blinfun_apply (Ds ?x) (f ?x) \\<noteq> (0::'b)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    finite {t \\<in> {a..b}. flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}}\n 2. \\<not> ?P \\<Longrightarrow>\n    finite {t \\<in> {a..b}. flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}}", "assume \"a < b\""], ["proof (state)\nthis:\n  a < b\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    finite {t \\<in> {a..b}. flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}}\n 2. \\<not> ?P \\<Longrightarrow>\n    finite {t \\<in> {a..b}. flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {t \\<in> {a..b}. flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}}", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "let ?S = \"{x \\<in> S. s x = 0}\""], ["proof (state)\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "let ?T = \"{t\\<in>{a..b}. flow0 x t \\<in> {x \\<in> S. s x = 0}}\""], ["proof (state)\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "define \\<phi> where \"\\<phi> = flow0 x\""], ["proof (state)\nthis:\n  \\<phi> = flow0 x\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "have [THEN continuous_on_compose2, continuous_intros]: \"continuous_on S s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on S s", "by (auto simp: intro!: has_derivative_continuous_on Ds intro: has_derivative_at_withinI)"], ["proof (state)\nthis:\n  \\<lbrakk>continuous_on ?s ?f; ?f ` ?s \\<subseteq> S\\<rbrakk>\n  \\<Longrightarrow> continuous_on ?s (\\<lambda>x. s (?f x))\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "assume \"infinite ?T\""], ["proof (state)\nthis:\n  infinite {t \\<in> {a..b}. flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}}\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "from compact_sequentialE[OF compact_Icc[of a b] this]"], ["proof (chain)\npicking this:\n  \\<lbrakk>{t \\<in> {a..b}. flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}}\n           \\<subseteq> {a..b};\n   \\<And>t l.\n      \\<lbrakk>\\<And>n.\n                  t n\n                  \\<in> {t \\<in> {a..b}.\n                         flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}};\n       \\<And>n. t n \\<noteq> l; t \\<longlonglongrightarrow> l;\n       l \\<in> {a..b}\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "obtain t tl where t: \"t n \\<in> ?T\" \"flow0 x (t n) \\<in> ?S\" \"t n \\<in> {a .. b}\" \"t n \\<noteq> tl\"\n      and tl: \"t \\<longlonglongrightarrow> tl\" \"tl \\<in> {a..b}\"\n    for n"], ["proof (prove)\nusing this:\n  \\<lbrakk>{t \\<in> {a..b}. flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}}\n           \\<subseteq> {a..b};\n   \\<And>t l.\n      \\<lbrakk>\\<And>n.\n                  t n\n                  \\<in> {t \\<in> {a..b}.\n                         flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}};\n       \\<And>n. t n \\<noteq> l; t \\<longlonglongrightarrow> l;\n       l \\<in> {a..b}\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>t tl.\n        \\<lbrakk>\\<And>n.\n                    t n\n                    \\<in> {t \\<in> {a..b}.\n                           flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}};\n         \\<And>n. flow0 x (t n) \\<in> {x \\<in> S. s x = (0::'b)};\n         \\<And>n. t n \\<in> {a..b}; \\<And>n. t n \\<noteq> tl;\n         t \\<longlonglongrightarrow> tl; tl \\<in> {a..b}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  t ?n2 \\<in> {t \\<in> {a..b}. flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}}\n  flow0 x (t ?n2) \\<in> {x \\<in> S. s x = (0::'b)}\n  t ?n2 \\<in> {a..b}\n  t ?n2 \\<noteq> tl\n  t \\<longlonglongrightarrow> tl\n  tl \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "have tl_ex: \"tl \\<in> existence_ivl0 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tl \\<in> existence_ivl0 x", "using \\<open>{a .. b} \\<subseteq> existence_ivl0 x\\<close> \\<open>tl \\<in> {a .. b}\\<close>"], ["proof (prove)\nusing this:\n  {a..b} \\<subseteq> existence_ivl0 x\n  tl \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. tl \\<in> existence_ivl0 x", "by auto"], ["proof (state)\nthis:\n  tl \\<in> existence_ivl0 x\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "have \"closed ?S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed {x \\<in> S. s x = (0::'b)}", "by (auto intro!: closed_levelset_within \\<open>closed S\\<close> continuous_intros)"], ["proof (state)\nthis:\n  closed {x \\<in> S. s x = (0::'b)}\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  closed {x \\<in> S. s x = (0::'b)}\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "have \"\\<forall>n. flow0 x (t n) \\<in> ?S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. flow0 x (t n) \\<in> {x \\<in> S. s x = (0::'b)}", "using t"], ["proof (prove)\nusing this:\n  t ?n2 \\<in> {t \\<in> {a..b}. flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}}\n  flow0 x (t ?n2) \\<in> {x \\<in> S. s x = (0::'b)}\n  t ?n2 \\<in> {a..b}\n  t ?n2 \\<noteq> tl\n\ngoal (1 subgoal):\n 1. \\<forall>n. flow0 x (t n) \\<in> {x \\<in> S. s x = (0::'b)}", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. flow0 x (t n) \\<in> {x \\<in> S. s x = (0::'b)}\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<forall>n. flow0 x (t n) \\<in> {x \\<in> S. s x = (0::'b)}\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "have flow_t: \"(\\<lambda>n. flow0 x (t n)) \\<longlonglongrightarrow> flow0 x tl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. flow0 x (t n)) \\<longlonglongrightarrow> flow0 x tl", "by (auto intro!: tendsto_eq_intros tl_ex tl)"], ["proof (state)\nthis:\n  (\\<lambda>n. flow0 x (t n)) \\<longlonglongrightarrow> flow0 x tl\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  closed {x \\<in> S. s x = (0::'b)}\n  \\<forall>n. flow0 x (t n) \\<in> {x \\<in> S. s x = (0::'b)}\n  (\\<lambda>n. flow0 x (t n)) \\<longlonglongrightarrow> flow0 x tl", "have \"flow0 x tl \\<in> ?S\""], ["proof (prove)\nusing this:\n  closed {x \\<in> S. s x = (0::'b)}\n  \\<forall>n. flow0 x (t n) \\<in> {x \\<in> S. s x = (0::'b)}\n  (\\<lambda>n. flow0 x (t n)) \\<longlonglongrightarrow> flow0 x tl\n\ngoal (1 subgoal):\n 1. flow0 x tl \\<in> {x \\<in> S. s x = (0::'b)}", "by (rule closed_sequentially)"], ["proof (state)\nthis:\n  flow0 x tl \\<in> {x \\<in> S. s x = (0::'b)}\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "let ?qt = \"\\<lambda>t. (flow0 x t - flow0 x tl) /\\<^sub>R (t - tl)\""], ["proof (state)\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "from flow_has_vector_derivative[OF tl_ex, THEN has_vector_derivative_withinD]"], ["proof (chain)\npicking this:\n  (\\<lambda>xa. (flow0 x xa - flow0 x tl) /\\<^sub>R (xa - tl)) \\<midarrow>tl\n  \\<rightarrow> f (flow0 x tl)", "have qt_tendsto: \"?qt \\<midarrow>tl\\<rightarrow> f (flow0 x tl)\""], ["proof (prove)\nusing this:\n  (\\<lambda>xa. (flow0 x xa - flow0 x tl) /\\<^sub>R (xa - tl)) \\<midarrow>tl\n  \\<rightarrow> f (flow0 x tl)\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. (flow0 x t - flow0 x tl) /\\<^sub>R (t - tl)) \\<midarrow>tl\n    \\<rightarrow> f (flow0 x tl)", "."], ["proof (state)\nthis:\n  (\\<lambda>t. (flow0 x t - flow0 x tl) /\\<^sub>R (t - tl)) \\<midarrow>tl\n  \\<rightarrow> f (flow0 x tl)\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "let ?q = \"\\<lambda>n. ?qt (t n)\""], ["proof (state)\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "have \"filterlim t (at tl) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim t (at tl) sequentially", "using tl(1)"], ["proof (prove)\nusing this:\n  t \\<longlonglongrightarrow> tl\n\ngoal (1 subgoal):\n 1. filterlim t (at tl) sequentially", "by (rule filterlim_atI) (simp add: t)"], ["proof (state)\nthis:\n  filterlim t (at tl) sequentially\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "with qt_tendsto"], ["proof (chain)\npicking this:\n  (\\<lambda>t. (flow0 x t - flow0 x tl) /\\<^sub>R (t - tl)) \\<midarrow>tl\n  \\<rightarrow> f (flow0 x tl)\n  filterlim t (at tl) sequentially", "have \"?q \\<longlonglongrightarrow> f (flow0 x tl)\""], ["proof (prove)\nusing this:\n  (\\<lambda>t. (flow0 x t - flow0 x tl) /\\<^sub>R (t - tl)) \\<midarrow>tl\n  \\<rightarrow> f (flow0 x tl)\n  filterlim t (at tl) sequentially\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (flow0 x (t n) - flow0 x tl) /\\<^sub>R (t n - tl))\n    \\<longlonglongrightarrow> f (flow0 x tl)", "by (rule filterlim_compose)"], ["proof (state)\nthis:\n  (\\<lambda>n. (flow0 x (t n) - flow0 x tl) /\\<^sub>R (t n - tl))\n  \\<longlonglongrightarrow> f (flow0 x tl)\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. (flow0 x (t n) - flow0 x tl) /\\<^sub>R (t n - tl))\n  \\<longlonglongrightarrow> f (flow0 x tl)", "have \"((\\<lambda>n. Ds (flow0 x tl) (?q n))) \\<longlonglongrightarrow> Ds (flow0 x tl) (f (flow0 x tl))\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. (flow0 x (t n) - flow0 x tl) /\\<^sub>R (t n - tl))\n  \\<longlonglongrightarrow> f (flow0 x tl)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        blinfun_apply (Ds (flow0 x tl))\n         ((flow0 x (t n) - flow0 x tl) /\\<^sub>R (t n - tl)))\n    \\<longlonglongrightarrow> blinfun_apply (Ds (flow0 x tl))\n                               (f (flow0 x tl))", "by (auto intro!: tendsto_intros)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      blinfun_apply (Ds (flow0 x tl))\n       ((flow0 x (t n) - flow0 x tl) /\\<^sub>R (t n - tl)))\n  \\<longlonglongrightarrow> blinfun_apply (Ds (flow0 x tl)) (f (flow0 x tl))\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      blinfun_apply (Ds (flow0 x tl))\n       ((flow0 x (t n) - flow0 x tl) /\\<^sub>R (t n - tl)))\n  \\<longlonglongrightarrow> blinfun_apply (Ds (flow0 x tl)) (f (flow0 x tl))\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "from flow_lipschitzE[OF \\<open>{a .. b} \\<subseteq> existence_ivl0 x\\<close>]"], ["proof (chain)\npicking this:\n  (\\<And>L.\n      L-lipschitz_on {a..b} (flow0 x) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain L' where L': \"L'-lipschitz_on {a..b} (flow0 x)\""], ["proof (prove)\nusing this:\n  (\\<And>L.\n      L-lipschitz_on {a..b} (flow0 x) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>L'.\n        L'-lipschitz_on {a..b} (flow0 x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  L'-lipschitz_on {a..b} (flow0 x)\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "define L where \"L = L' + 1\""], ["proof (state)\nthis:\n  L = L' + 1\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "from lipschitz_on_le[OF L', of L] lipschitz_on_nonneg[OF L']"], ["proof (chain)\npicking this:\n  L' \\<le> L \\<Longrightarrow> L-lipschitz_on {a..b} (flow0 x)\n  0 \\<le> L'", "have L: \"L-lipschitz_on {a .. b} (flow0 x)\" and \"L > 0\""], ["proof (prove)\nusing this:\n  L' \\<le> L \\<Longrightarrow> L-lipschitz_on {a..b} (flow0 x)\n  0 \\<le> L'\n\ngoal (1 subgoal):\n 1. L-lipschitz_on {a..b} (flow0 x) &&& 0 < L", "by (auto simp: L_def)"], ["proof (state)\nthis:\n  L-lipschitz_on {a..b} (flow0 x)\n  0 < L\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "from flow_lipschitzE[OF \\<open>{a .. b} \\<subseteq> existence_ivl0 x\\<close>]"], ["proof (chain)\npicking this:\n  (\\<And>L.\n      L-lipschitz_on {a..b} (flow0 x) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain L' where \"L'-lipschitz_on {a..b} (flow0 x)\""], ["proof (prove)\nusing this:\n  (\\<And>L.\n      L-lipschitz_on {a..b} (flow0 x) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>L'.\n        L'-lipschitz_on {a..b} (flow0 x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".\n        \\<comment> \\<open>TODO: is this reasoning (below) with this Lipschitz constant really necessary?\\<close>"], ["proof (state)\nthis:\n  L'-lipschitz_on {a..b} (flow0 x)\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "have s[simp]: \"s (flow0 x (t n)) = 0\"\"s (flow0 x tl) = 0\"\n      for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. s (flow0 x (t n)) = (0::'b) &&& s (flow0 x tl) = (0::'b)", "using t \\<open>flow0 x tl \\<in> ?S\\<close>"], ["proof (prove)\nusing this:\n  t ?n2 \\<in> {t \\<in> {a..b}. flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}}\n  flow0 x (t ?n2) \\<in> {x \\<in> S. s x = (0::'b)}\n  t ?n2 \\<in> {a..b}\n  t ?n2 \\<noteq> tl\n  flow0 x tl \\<in> {x \\<in> S. s x = (0::'b)}\n\ngoal (1 subgoal):\n 1. s (flow0 x (t n)) = (0::'b) &&& s (flow0 x tl) = (0::'b)", "by auto"], ["proof (state)\nthis:\n  s (flow0 x (t ?n2)) = (0::'b)\n  s (flow0 x tl) = (0::'b)\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "from Ds(1)[of \"flow0 x tl\", unfolded has_derivative_within]"], ["proof (chain)\npicking this:\n  bounded_linear (blinfun_apply (Ds (flow0 x tl))) \\<and>\n  (\\<lambda>y.\n      (1 / norm (y - flow0 x tl)) *\\<^sub>R\n      (s y -\n       (s (flow0 x tl) + blinfun_apply (Ds (flow0 x tl)) (y - flow0 x tl))))\n  \\<midarrow>flow0 x tl\\<rightarrow> (0::'b)", "have \"(\\<lambda>y. (1 / norm (y - flow0 x tl)) *\\<^sub>R (s y - (s (flow0 x tl) + blinfun_apply (Ds (flow0 x tl)) (y - flow0 x tl)))) \\<midarrow>flow0 x tl\\<rightarrow> 0\""], ["proof (prove)\nusing this:\n  bounded_linear (blinfun_apply (Ds (flow0 x tl))) \\<and>\n  (\\<lambda>y.\n      (1 / norm (y - flow0 x tl)) *\\<^sub>R\n      (s y -\n       (s (flow0 x tl) + blinfun_apply (Ds (flow0 x tl)) (y - flow0 x tl))))\n  \\<midarrow>flow0 x tl\\<rightarrow> (0::'b)\n\ngoal (1 subgoal):\n 1. (\\<lambda>y.\n        (1 / norm (y - flow0 x tl)) *\\<^sub>R\n        (s y -\n         (s (flow0 x tl) +\n          blinfun_apply (Ds (flow0 x tl)) (y - flow0 x tl))))\n    \\<midarrow>flow0 x tl\\<rightarrow> (0::'b)", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>y.\n      (1 / norm (y - flow0 x tl)) *\\<^sub>R\n      (s y -\n       (s (flow0 x tl) + blinfun_apply (Ds (flow0 x tl)) (y - flow0 x tl))))\n  \\<midarrow>flow0 x tl\\<rightarrow> (0::'b)\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>y.\n      (1 / norm (y - flow0 x tl)) *\\<^sub>R\n      (s y -\n       (s (flow0 x tl) + blinfun_apply (Ds (flow0 x tl)) (y - flow0 x tl))))\n  \\<midarrow>flow0 x tl\\<rightarrow> (0::'b)", "have \"((\\<lambda>y. (1 / norm (y - flow0 x tl)) *\\<^sub>R (s y - (s (flow0 x tl) + blinfun_apply (Ds (flow0 x tl)) (y - flow0 x tl)))) \\<longlongrightarrow> 0)\n      (nhds (flow0 x tl))\""], ["proof (prove)\nusing this:\n  (\\<lambda>y.\n      (1 / norm (y - flow0 x tl)) *\\<^sub>R\n      (s y -\n       (s (flow0 x tl) + blinfun_apply (Ds (flow0 x tl)) (y - flow0 x tl))))\n  \\<midarrow>flow0 x tl\\<rightarrow> (0::'b)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         (1 / norm (y - flow0 x tl)) *\\<^sub>R\n         (s y -\n          (s (flow0 x tl) +\n           blinfun_apply (Ds (flow0 x tl))\n            (y - flow0 x tl)))) \\<longlongrightarrow>\n     (0::'b))\n     (nhds (flow0 x tl))", "by (rule tendsto_nhds_continuousI) simp"], ["proof (state)\nthis:\n  ((\\<lambda>y.\n       (1 / norm (y - flow0 x tl)) *\\<^sub>R\n       (s y -\n        (s (flow0 x tl) +\n         blinfun_apply (Ds (flow0 x tl))\n          (y - flow0 x tl)))) \\<longlongrightarrow>\n   (0::'b))\n   (nhds (flow0 x tl))\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "from filterlim_compose[OF this flow_t]"], ["proof (chain)\npicking this:\n  (\\<lambda>xa.\n      (1 / norm (flow0 x (t xa) - flow0 x tl)) *\\<^sub>R\n      (s (flow0 x (t xa)) -\n       (s (flow0 x tl) +\n        blinfun_apply (Ds (flow0 x tl)) (flow0 x (t xa) - flow0 x tl))))\n  \\<longlonglongrightarrow> (0::'b)", "have \"(\\<lambda>xa. (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t xa) - flow0 x tl)) /\\<^sub>R norm (flow0 x (t xa) - flow0 x tl))\n      \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>xa.\n      (1 / norm (flow0 x (t xa) - flow0 x tl)) *\\<^sub>R\n      (s (flow0 x (t xa)) -\n       (s (flow0 x tl) +\n        blinfun_apply (Ds (flow0 x tl)) (flow0 x (t xa) - flow0 x tl))))\n  \\<longlonglongrightarrow> (0::'b)\n\ngoal (1 subgoal):\n 1. (\\<lambda>xa.\n        blinfun_apply (Ds (flow0 x tl))\n         (flow0 x (t xa) - flow0 x tl) /\\<^sub>R\n        norm (flow0 x (t xa) - flow0 x tl))\n    \\<longlonglongrightarrow> (0::'b)", "using t"], ["proof (prove)\nusing this:\n  (\\<lambda>xa.\n      (1 / norm (flow0 x (t xa) - flow0 x tl)) *\\<^sub>R\n      (s (flow0 x (t xa)) -\n       (s (flow0 x tl) +\n        blinfun_apply (Ds (flow0 x tl)) (flow0 x (t xa) - flow0 x tl))))\n  \\<longlonglongrightarrow> (0::'b)\n  t ?n2 \\<in> {t \\<in> {a..b}. flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}}\n  flow0 x (t ?n2) \\<in> {x \\<in> S. s x = (0::'b)}\n  t ?n2 \\<in> {a..b}\n  t ?n2 \\<noteq> tl\n\ngoal (1 subgoal):\n 1. (\\<lambda>xa.\n        blinfun_apply (Ds (flow0 x tl))\n         (flow0 x (t xa) - flow0 x tl) /\\<^sub>R\n        norm (flow0 x (t xa) - flow0 x tl))\n    \\<longlonglongrightarrow> (0::'b)", "by (auto simp: inverse_eq_divide tendsto_minus_cancel_right)"], ["proof (state)\nthis:\n  (\\<lambda>xa.\n      blinfun_apply (Ds (flow0 x tl))\n       (flow0 x (t xa) - flow0 x tl) /\\<^sub>R\n      norm (flow0 x (t xa) - flow0 x tl))\n  \\<longlonglongrightarrow> (0::'b)\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "from tendsto_mult[OF tendsto_const[of \"L\"] tendsto_norm[OF this, simplified, simplified divide_inverse_commute[symmetric]]]\\<comment> \\<open>TODO: uuugly\\<close>"], ["proof (chain)\npicking this:\n  (\\<lambda>xa.\n      L *\n      (norm\n        (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t xa) - flow0 x tl)) /\n       norm (flow0 x (t xa) - flow0 x tl)))\n  \\<longlonglongrightarrow> L * 0", "have Ds0: \"(\\<lambda>xa. norm (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t xa) - flow0 x tl)) / (norm (flow0 x (t xa) - flow0 x tl)/(L))) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>xa.\n      L *\n      (norm\n        (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t xa) - flow0 x tl)) /\n       norm (flow0 x (t xa) - flow0 x tl)))\n  \\<longlonglongrightarrow> L * 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>xa.\n        norm\n         (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t xa) - flow0 x tl)) /\n        (norm (flow0 x (t xa) - flow0 x tl) / L))\n    \\<longlonglongrightarrow> 0", "by (auto simp: ac_simps)"], ["proof (state)\nthis:\n  (\\<lambda>xa.\n      norm (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t xa) - flow0 x tl)) /\n      (norm (flow0 x (t xa) - flow0 x tl) / L))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "from _ Ds0"], ["proof (chain)\npicking this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  (\\<lambda>xa.\n      norm (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t xa) - flow0 x tl)) /\n      (norm (flow0 x (t xa) - flow0 x tl) / L))\n  \\<longlonglongrightarrow> 0", "have \"((\\<lambda>n. Ds (flow0 x tl) (?q n)) \\<longlonglongrightarrow> 0)\""], ["proof (prove)\nusing this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  (\\<lambda>xa.\n      norm (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t xa) - flow0 x tl)) /\n      (norm (flow0 x (t xa) - flow0 x tl) / L))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        blinfun_apply (Ds (flow0 x tl))\n         ((flow0 x (t n) - flow0 x tl) /\\<^sub>R (t n - tl)))\n    \\<longlonglongrightarrow> (0::'b)", "apply (rule Lim_null_comparison)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F xa in sequentially.\n       norm\n        (blinfun_apply (Ds (flow0 x tl))\n          ((flow0 x (t xa) - flow0 x tl) /\\<^sub>R (t xa - tl)))\n       \\<le> norm\n              (blinfun_apply (Ds (flow0 x tl))\n                (flow0 x (t xa) - flow0 x tl)) /\n             (norm (flow0 x (t xa) - flow0 x tl) / L)", "apply (rule eventuallyI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       norm\n        (blinfun_apply (Ds (flow0 x tl))\n          ((flow0 x (t xa) - flow0 x tl) /\\<^sub>R (t xa - tl)))\n       \\<le> norm\n              (blinfun_apply (Ds (flow0 x tl))\n                (flow0 x (t xa) - flow0 x tl)) /\n             (norm (flow0 x (t xa) - flow0 x tl) / L)", "unfolding norm_scaleR blinfun.scaleR_right abs_inverse divide_inverse_commute[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       norm\n        (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t xa) - flow0 x tl)) /\n       \\<bar>t xa - tl\\<bar>\n       \\<le> norm\n              (blinfun_apply (Ds (flow0 x tl))\n                (flow0 x (t xa) - flow0 x tl)) /\n             (norm (flow0 x (t xa) - flow0 x tl) / L)", "subgoal for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t n) - flow0 x tl)) /\n    \\<bar>t n - tl\\<bar>\n    \\<le> norm\n           (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t n) - flow0 x tl)) /\n          (norm (flow0 x (t n) - flow0 x tl) / L)", "apply (cases \"flow0 x (t n) = flow0 x tl\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. flow0 x (t n) = flow0 x tl \\<Longrightarrow>\n    norm (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t n) - flow0 x tl)) /\n    \\<bar>t n - tl\\<bar>\n    \\<le> norm\n           (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t n) - flow0 x tl)) /\n          (norm (flow0 x (t n) - flow0 x tl) / L)\n 2. flow0 x (t n) \\<noteq> flow0 x tl \\<Longrightarrow>\n    norm (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t n) - flow0 x tl)) /\n    \\<bar>t n - tl\\<bar>\n    \\<le> norm\n           (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t n) - flow0 x tl)) /\n          (norm (flow0 x (t n) - flow0 x tl) / L)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 x (t n) = flow0 x tl \\<Longrightarrow>\n    norm (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t n) - flow0 x tl)) /\n    \\<bar>t n - tl\\<bar>\n    \\<le> norm\n           (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t n) - flow0 x tl)) /\n          (norm (flow0 x (t n) - flow0 x tl) / L)", "by (simp add: blinfun.bilinear_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 x (t n) \\<noteq> flow0 x tl \\<Longrightarrow>\n    norm (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t n) - flow0 x tl)) /\n    \\<bar>t n - tl\\<bar>\n    \\<le> norm\n           (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t n) - flow0 x tl)) /\n          (norm (flow0 x (t n) - flow0 x tl) / L)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. flow0 x (t n) \\<noteq> flow0 x tl \\<Longrightarrow>\n    norm (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t n) - flow0 x tl)) /\n    \\<bar>t n - tl\\<bar>\n    \\<le> norm\n           (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t n) - flow0 x tl)) /\n          (norm (flow0 x (t n) - flow0 x tl) / L)", "apply (rule divide_left_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. flow0 x (t n) \\<noteq> flow0 x tl \\<Longrightarrow>\n    norm (flow0 x (t n) - flow0 x tl) / L \\<le> \\<bar>t n - tl\\<bar>\n 2. flow0 x (t n) \\<noteq> flow0 x tl \\<Longrightarrow>\n    0 \\<le> norm\n             (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t n) - flow0 x tl))\n 3. flow0 x (t n) \\<noteq> flow0 x tl \\<Longrightarrow>\n    0 < \\<bar>t n - tl\\<bar> * (norm (flow0 x (t n) - flow0 x tl) / L)", "using lipschitz_onD[OF L, of \"t n\" tl] \\<open>0 < L\\<close> t(3) tl(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>t n \\<in> {a..b}; tl \\<in> {a..b}\\<rbrakk>\n  \\<Longrightarrow> dist (flow0 x (t n)) (flow0 x tl)\n                    \\<le> L * dist (t n) tl\n  0 < L\n  t ?n2 \\<in> {a..b}\n  tl \\<in> {a..b}\n\ngoal (3 subgoals):\n 1. flow0 x (t n) \\<noteq> flow0 x tl \\<Longrightarrow>\n    norm (flow0 x (t n) - flow0 x tl) / L \\<le> \\<bar>t n - tl\\<bar>\n 2. flow0 x (t n) \\<noteq> flow0 x tl \\<Longrightarrow>\n    0 \\<le> norm\n             (blinfun_apply (Ds (flow0 x tl)) (flow0 x (t n) - flow0 x tl))\n 3. flow0 x (t n) \\<noteq> flow0 x tl \\<Longrightarrow>\n    0 < \\<bar>t n - tl\\<bar> * (norm (flow0 x (t n) - flow0 x tl) / L)", "by (auto simp: algebra_split_simps zero_less_divide_iff dist_norm pos_divide_le_eq\n              intro!: add_pos_nonneg)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      blinfun_apply (Ds (flow0 x tl))\n       ((flow0 x (t n) - flow0 x tl) /\\<^sub>R (t n - tl)))\n  \\<longlonglongrightarrow> (0::'b)\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      blinfun_apply (Ds (flow0 x tl))\n       ((flow0 x (t n) - flow0 x tl) /\\<^sub>R (t n - tl)))\n  \\<longlonglongrightarrow> blinfun_apply (Ds (flow0 x tl)) (f (flow0 x tl))\n  (\\<lambda>n.\n      blinfun_apply (Ds (flow0 x tl))\n       ((flow0 x (t n) - flow0 x tl) /\\<^sub>R (t n - tl)))\n  \\<longlonglongrightarrow> (0::'b)", "have \"Ds (flow0 x tl) (f (flow0 x tl)) = 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      blinfun_apply (Ds (flow0 x tl))\n       ((flow0 x (t n) - flow0 x tl) /\\<^sub>R (t n - tl)))\n  \\<longlonglongrightarrow> blinfun_apply (Ds (flow0 x tl)) (f (flow0 x tl))\n  (\\<lambda>n.\n      blinfun_apply (Ds (flow0 x tl))\n       ((flow0 x (t n) - flow0 x tl) /\\<^sub>R (t n - tl)))\n  \\<longlonglongrightarrow> (0::'b)\n\ngoal (1 subgoal):\n 1. blinfun_apply (Ds (flow0 x tl)) (f (flow0 x tl)) = (0::'b)", "by (rule LIMSEQ_unique)"], ["proof (state)\nthis:\n  blinfun_apply (Ds (flow0 x tl)) (f (flow0 x tl)) = (0::'b)\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  blinfun_apply (Ds (flow0 x tl)) (f (flow0 x tl)) = (0::'b)\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "have \"Ds (flow0 x tl) (f (flow0 x tl)) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinfun_apply (Ds (flow0 x tl)) (f (flow0 x tl)) \\<noteq> (0::'b)", "by (rule transversal) (use \\<open>flow0 x tl \\<in> ?S\\<close> in auto)"], ["proof (state)\nthis:\n  blinfun_apply (Ds (flow0 x tl)) (f (flow0 x tl)) \\<noteq> (0::'b)\n\ngoal (1 subgoal):\n 1. infinite\n     {t \\<in> {a..b}.\n      flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}} \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  blinfun_apply (Ds (flow0 x tl)) (f (flow0 x tl)) = (0::'b)\n  blinfun_apply (Ds (flow0 x tl)) (f (flow0 x tl)) \\<noteq> (0::'b)", "show False"], ["proof (prove)\nusing this:\n  blinfun_apply (Ds (flow0 x tl)) (f (flow0 x tl)) = (0::'b)\n  blinfun_apply (Ds (flow0 x tl)) (f (flow0 x tl)) \\<noteq> (0::'b)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite {t \\<in> {a..b}. flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}}\n\ngoal (1 subgoal):\n 1. \\<not> a < b \\<Longrightarrow>\n    finite {t \\<in> {a..b}. flow0 x t \\<in> {x \\<in> S. s x = (0::'b)}}", "qed (use assms in auto)"], ["", "lemma uniform_limit_flow0_state:\\<comment> \\<open>TODO: is that something more general?\\<close>\n  assumes \"compact C\"\n  assumes \"C \\<subseteq> X\"\n  shows \"uniform_limit C (\\<lambda>s x. flow0 x s) (\\<lambda>x. flow0 x 0) (at 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit C (\\<lambda>s x. flow0 x s) (\\<lambda>x. flow0 x 0) (at 0)", "proof (cases \"C = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. C = {} \\<Longrightarrow>\n    uniform_limit C (\\<lambda>s x. flow0 x s) (\\<lambda>x. flow0 x 0) (at 0)\n 2. C \\<noteq> {} \\<Longrightarrow>\n    uniform_limit C (\\<lambda>s x. flow0 x s) (\\<lambda>x. flow0 x 0) (at 0)", "case True"], ["proof (state)\nthis:\n  C = {}\n\ngoal (2 subgoals):\n 1. C = {} \\<Longrightarrow>\n    uniform_limit C (\\<lambda>s x. flow0 x s) (\\<lambda>x. flow0 x 0) (at 0)\n 2. C \\<noteq> {} \\<Longrightarrow>\n    uniform_limit C (\\<lambda>s x. flow0 x s) (\\<lambda>x. flow0 x 0) (at 0)", "then"], ["proof (chain)\npicking this:\n  C = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  C = {}\n\ngoal (1 subgoal):\n 1. uniform_limit C (\\<lambda>s x. flow0 x s) (\\<lambda>x. flow0 x 0) (at 0)", "by auto"], ["proof (state)\nthis:\n  uniform_limit C (\\<lambda>s x. flow0 x s) (\\<lambda>x. flow0 x 0) (at 0)\n\ngoal (1 subgoal):\n 1. C \\<noteq> {} \\<Longrightarrow>\n    uniform_limit C (\\<lambda>s x. flow0 x s) (\\<lambda>x. flow0 x 0) (at 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. C \\<noteq> {} \\<Longrightarrow>\n    uniform_limit C (\\<lambda>s x. flow0 x s) (\\<lambda>x. flow0 x 0) (at 0)", "case False"], ["proof (state)\nthis:\n  C \\<noteq> {}\n\ngoal (1 subgoal):\n 1. C \\<noteq> {} \\<Longrightarrow>\n    uniform_limit C (\\<lambda>s x. flow0 x s) (\\<lambda>x. flow0 x 0) (at 0)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit C (\\<lambda>s x. flow0 x s) (\\<lambda>x. flow0 x 0) (at 0)", "proof (rule uniform_limitI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in at 0.\n          \\<forall>x\\<in>C. dist (flow0 x n) (flow0 x 0) < e", "fix e::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in at 0.\n          \\<forall>x\\<in>C. dist (flow0 x n) (flow0 x 0) < e", "assume \"0 < e\""], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in at 0.\n          \\<forall>x\\<in>C. dist (flow0 x n) (flow0 x 0) < e", "{"], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in at 0.\n          \\<forall>x\\<in>C. dist (flow0 x n) (flow0 x 0) < e", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in at 0.\n          \\<forall>x\\<in>C. dist (flow0 x n) (flow0 x 0) < e", "assume \"x \\<in> C\""], ["proof (state)\nthis:\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in at 0.\n          \\<forall>x\\<in>C. dist (flow0 x n) (flow0 x 0) < e", "with assms"], ["proof (chain)\npicking this:\n  compact C\n  C \\<subseteq> X\n  x \\<in> C", "have \"x \\<in> X\""], ["proof (prove)\nusing this:\n  compact C\n  C \\<subseteq> X\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. x \\<in> X", "by auto"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in at 0.\n          \\<forall>x\\<in>C. dist (flow0 x n) (flow0 x 0) < e", "from existence_ivl_cballs[OF UNIV_I \\<open>x \\<in> X\\<close>]"], ["proof (chain)\npicking this:\n  (\\<And>t u L.\n      \\<lbrakk>\\<And>y.\n                  y \\<in> cball x u \\<Longrightarrow>\n                  cball 0 t \\<subseteq> existence_ivl0 y;\n       \\<And>s y.\n          \\<lbrakk>y \\<in> cball x u; s \\<in> cball 0 t\\<rbrakk>\n          \\<Longrightarrow> flow0 y s \\<in> cball y u;\n       L-lipschitz_on (cball 0 t \\<times> cball x u)\n        (\\<lambda>(t, x). flow0 x t);\n       \\<And>y. y \\<in> cball x u \\<Longrightarrow> cball y u \\<subseteq> X;\n       0 < t; 0 < u\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain t L u where \"\\<And>y. y \\<in> cball x u \\<Longrightarrow> cball 0 t \\<subseteq> existence_ivl0 y\"\n        \"\\<And>s y. y \\<in> cball x u \\<Longrightarrow> s \\<in> cball 0 t \\<Longrightarrow> flow0 y s \\<in> cball y u\"\n        \"L-lipschitz_on (cball 0 t\\<times>cball x u) (\\<lambda>(t, x). flow0 x t)\"\n        \"\\<And>y. y \\<in> cball x u \\<Longrightarrow> cball y u \\<subseteq> X\"\n        \"0 < t\" \"0 < u\""], ["proof (prove)\nusing this:\n  (\\<And>t u L.\n      \\<lbrakk>\\<And>y.\n                  y \\<in> cball x u \\<Longrightarrow>\n                  cball 0 t \\<subseteq> existence_ivl0 y;\n       \\<And>s y.\n          \\<lbrakk>y \\<in> cball x u; s \\<in> cball 0 t\\<rbrakk>\n          \\<Longrightarrow> flow0 y s \\<in> cball y u;\n       L-lipschitz_on (cball 0 t \\<times> cball x u)\n        (\\<lambda>(t, x). flow0 x t);\n       \\<And>y. y \\<in> cball x u \\<Longrightarrow> cball y u \\<subseteq> X;\n       0 < t; 0 < u\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>u t L.\n        \\<lbrakk>\\<And>y.\n                    y \\<in> cball x u \\<Longrightarrow>\n                    cball 0 t \\<subseteq> existence_ivl0 y;\n         \\<And>s y.\n            \\<lbrakk>y \\<in> cball x u; s \\<in> cball 0 t\\<rbrakk>\n            \\<Longrightarrow> flow0 y s \\<in> cball y u;\n         L-lipschitz_on (cball 0 t \\<times> cball x u)\n          (\\<lambda>(t, x). flow0 x t);\n         \\<And>y.\n            y \\<in> cball x u \\<Longrightarrow> cball y u \\<subseteq> X;\n         0 < t; 0 < u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  ?y2 \\<in> cball x u \\<Longrightarrow>\n  cball 0 t \\<subseteq> existence_ivl0 ?y2\n  \\<lbrakk>?y2 \\<in> cball x u; ?s2 \\<in> cball 0 t\\<rbrakk>\n  \\<Longrightarrow> flow0 ?y2 ?s2 \\<in> cball ?y2 u\n  L-lipschitz_on (cball 0 t \\<times> cball x u) (\\<lambda>(t, x). flow0 x t)\n  ?y2 \\<in> cball x u \\<Longrightarrow> cball ?y2 u \\<subseteq> X\n  0 < t\n  0 < u\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in at 0.\n          \\<forall>x\\<in>C. dist (flow0 x n) (flow0 x 0) < e", "then"], ["proof (chain)\npicking this:\n  ?y2 \\<in> cball x u \\<Longrightarrow>\n  cball 0 t \\<subseteq> existence_ivl0 ?y2\n  \\<lbrakk>?y2 \\<in> cball x u; ?s2 \\<in> cball 0 t\\<rbrakk>\n  \\<Longrightarrow> flow0 ?y2 ?s2 \\<in> cball ?y2 u\n  L-lipschitz_on (cball 0 t \\<times> cball x u) (\\<lambda>(t, x). flow0 x t)\n  ?y2 \\<in> cball x u \\<Longrightarrow> cball ?y2 u \\<subseteq> X\n  0 < t\n  0 < u", "have \"\\<exists>L. \\<exists>u>0. \\<exists>t>0. L-lipschitz_on (cball 0 t\\<times>cball x u) (\\<lambda>(t, x). flow0 x t)\""], ["proof (prove)\nusing this:\n  ?y2 \\<in> cball x u \\<Longrightarrow>\n  cball 0 t \\<subseteq> existence_ivl0 ?y2\n  \\<lbrakk>?y2 \\<in> cball x u; ?s2 \\<in> cball 0 t\\<rbrakk>\n  \\<Longrightarrow> flow0 ?y2 ?s2 \\<in> cball ?y2 u\n  L-lipschitz_on (cball 0 t \\<times> cball x u) (\\<lambda>(t, x). flow0 x t)\n  ?y2 \\<in> cball x u \\<Longrightarrow> cball ?y2 u \\<subseteq> X\n  0 < t\n  0 < u\n\ngoal (1 subgoal):\n 1. \\<exists>L u.\n       0 < u \\<and>\n       (\\<exists>t>0.\n           L-lipschitz_on (cball 0 t \\<times> cball x u)\n            (\\<lambda>(t, x). flow0 x t))", "by blast"], ["proof (state)\nthis:\n  \\<exists>L u.\n     0 < u \\<and>\n     (\\<exists>t>0.\n         L-lipschitz_on (cball 0 t \\<times> cball x u)\n          (\\<lambda>(t, x). flow0 x t))\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in at 0.\n          \\<forall>x\\<in>C. dist (flow0 x n) (flow0 x 0) < e", "}"], ["proof (state)\nthis:\n  ?x4 \\<in> C \\<Longrightarrow>\n  \\<exists>L u.\n     0 < u \\<and>\n     (\\<exists>t>0.\n         L-lipschitz_on (cball 0 t \\<times> cball ?x4 u)\n          (\\<lambda>(t, x). flow0 x t))\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in at 0.\n          \\<forall>x\\<in>C. dist (flow0 x n) (flow0 x 0) < e", "then"], ["proof (chain)\npicking this:\n  ?x4 \\<in> C \\<Longrightarrow>\n  \\<exists>L u.\n     0 < u \\<and>\n     (\\<exists>t>0.\n         L-lipschitz_on (cball 0 t \\<times> cball ?x4 u)\n          (\\<lambda>(t, x). flow0 x t))", "have \"\\<forall>x\\<in>C. \\<exists>L. \\<exists>u>0. \\<exists>t>0. L-lipschitz_on (cball 0 t\\<times>cball x u) (\\<lambda>(t, x). flow0 x t)\""], ["proof (prove)\nusing this:\n  ?x4 \\<in> C \\<Longrightarrow>\n  \\<exists>L u.\n     0 < u \\<and>\n     (\\<exists>t>0.\n         L-lipschitz_on (cball 0 t \\<times> cball ?x4 u)\n          (\\<lambda>(t, x). flow0 x t))\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>C.\n       \\<exists>L u.\n          0 < u \\<and>\n          (\\<exists>t>0.\n              L-lipschitz_on (cball 0 t \\<times> cball x u)\n               (\\<lambda>(t, x). flow0 x t))", ".."], ["proof (state)\nthis:\n  \\<forall>x\\<in>C.\n     \\<exists>L u.\n        0 < u \\<and>\n        (\\<exists>t>0.\n            L-lipschitz_on (cball 0 t \\<times> cball x u)\n             (\\<lambda>(t, x). flow0 x t))\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in at 0.\n          \\<forall>x\\<in>C. dist (flow0 x n) (flow0 x 0) < e", "then"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>C.\n     \\<exists>L u.\n        0 < u \\<and>\n        (\\<exists>t>0.\n            L-lipschitz_on (cball 0 t \\<times> cball x u)\n             (\\<lambda>(t, x). flow0 x t))", "obtain L d' u' where\n      L: \"\\<And>x. x \\<in> C \\<Longrightarrow> (L x)-lipschitz_on (cball 0 (d' x)\\<times>cball x (u' x)) (\\<lambda>(t, x). flow0 x t)\"\n      and d': \"\\<And>x. x \\<in> C \\<Longrightarrow> d' x > 0\"\n      and u': \"\\<And>x. x \\<in> C \\<Longrightarrow> u' x > 0\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>C.\n     \\<exists>L u.\n        0 < u \\<and>\n        (\\<exists>t>0.\n            L-lipschitz_on (cball 0 t \\<times> cball x u)\n             (\\<lambda>(t, x). flow0 x t))\n\ngoal (1 subgoal):\n 1. (\\<And>L d' u'.\n        \\<lbrakk>\\<And>x.\n                    x \\<in> C \\<Longrightarrow>\n                    (L x)-lipschitz_on\n                     (cball 0 (d' x) \\<times> cball x (u' x))\n                     (\\<lambda>(t, x). flow0 x t);\n         \\<And>x. x \\<in> C \\<Longrightarrow> 0 < d' x;\n         \\<And>x. x \\<in> C \\<Longrightarrow> 0 < u' x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  ?x2 \\<in> C \\<Longrightarrow>\n  (L ?x2)-lipschitz_on (cball 0 (d' ?x2) \\<times> cball ?x2 (u' ?x2))\n   (\\<lambda>(t, x). flow0 x t)\n  ?x2 \\<in> C \\<Longrightarrow> 0 < d' ?x2\n  ?x2 \\<in> C \\<Longrightarrow> 0 < u' ?x2\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in at 0.\n          \\<forall>x\\<in>C. dist (flow0 x n) (flow0 x 0) < e", "have \"C \\<subseteq> (\\<Union>c\\<in>C. ball c (u' c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<subseteq> (\\<Union>c\\<in>C. ball c (u' c))", "using u'"], ["proof (prove)\nusing this:\n  ?x2 \\<in> C \\<Longrightarrow> 0 < u' ?x2\n\ngoal (1 subgoal):\n 1. C \\<subseteq> (\\<Union>c\\<in>C. ball c (u' c))", "by auto"], ["proof (state)\nthis:\n  C \\<subseteq> (\\<Union>c\\<in>C. ball c (u' c))\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in at 0.\n          \\<forall>x\\<in>C. dist (flow0 x n) (flow0 x 0) < e", "from compactE_image[OF \\<open>compact C\\<close> _ this]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>T. T \\<in> C \\<Longrightarrow> open (ball T (u' T));\n   \\<And>C'.\n      \\<lbrakk>C' \\<subseteq> C; finite C';\n       C \\<subseteq> (\\<Union>c\\<in>C'. ball c (u' c))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "obtain C' where \"C' \\<subseteq> C\" and [simp]: \"finite C'\" and C'_cover: \"C \\<subseteq> (\\<Union>c\\<in>C'. ball c (u' c))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>T. T \\<in> C \\<Longrightarrow> open (ball T (u' T));\n   \\<And>C'.\n      \\<lbrakk>C' \\<subseteq> C; finite C';\n       C \\<subseteq> (\\<Union>c\\<in>C'. ball c (u' c))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>C'.\n        \\<lbrakk>C' \\<subseteq> C; finite C';\n         C \\<subseteq> (\\<Union>c\\<in>C'. ball c (u' c))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C' \\<subseteq> C\n  finite C'\n  C \\<subseteq> (\\<Union>c\\<in>C'. ball c (u' c))\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in at 0.\n          \\<forall>x\\<in>C. dist (flow0 x n) (flow0 x 0) < e", "from C'_cover"], ["proof (chain)\npicking this:\n  C \\<subseteq> (\\<Union>c\\<in>C'. ball c (u' c))", "obtain c' where c': \"x \\<in> C \\<Longrightarrow> x \\<in> ball (c' x) (u' (c' x))\" \"x \\<in> C \\<Longrightarrow> c' x \\<in> C'\" for x"], ["proof (prove)\nusing this:\n  C \\<subseteq> (\\<Union>c\\<in>C'. ball c (u' c))\n\ngoal (1 subgoal):\n 1. (\\<And>c'.\n        \\<lbrakk>\\<And>x.\n                    x \\<in> C \\<Longrightarrow>\n                    x \\<in> ball (c' x) (u' (c' x));\n         \\<And>x. x \\<in> C \\<Longrightarrow> c' x \\<in> C'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: subset_iff) metis"], ["proof (state)\nthis:\n  ?x2 \\<in> C \\<Longrightarrow> ?x2 \\<in> ball (c' ?x2) (u' (c' ?x2))\n  ?x2 \\<in> C \\<Longrightarrow> c' ?x2 \\<in> C'\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in at 0.\n          \\<forall>x\\<in>C. dist (flow0 x n) (flow0 x 0) < e", "have \"\\<forall>\\<^sub>F s in at 0. \\<forall>x\\<in>ball c (u' c). dist (flow0 x s) (flow0 x 0) < e\" if \"c \\<in> C'\" for c"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0.\n       \\<forall>x\\<in>ball c (u' c). dist (flow0 x s) (flow0 x 0) < e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0.\n       \\<forall>x\\<in>ball c (u' c). dist (flow0 x s) (flow0 x 0) < e", "have cC: \"c \\<in> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<in> C", "using c' \\<open>c \\<in> C'\\<close> d' \\<open>C' \\<subseteq> C\\<close>"], ["proof (prove)\nusing this:\n  ?x2 \\<in> C \\<Longrightarrow> ?x2 \\<in> ball (c' ?x2) (u' (c' ?x2))\n  ?x2 \\<in> C \\<Longrightarrow> c' ?x2 \\<in> C'\n  c \\<in> C'\n  ?x2 \\<in> C \\<Longrightarrow> 0 < d' ?x2\n  C' \\<subseteq> C\n\ngoal (1 subgoal):\n 1. c \\<in> C", "by auto"], ["proof (state)\nthis:\n  c \\<in> C\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0.\n       \\<forall>x\\<in>ball c (u' c). dist (flow0 x s) (flow0 x 0) < e", "have *: \"dist (flow0 x s) (flow0 x 0) \\<le> L c * \\<bar>s\\<bar>\"\n        if \"x\\<in>ball c (u' c)\"\n          \"s \\<in> cball 0 (d' c)\"\n        for x s"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (flow0 x s) (flow0 x 0) \\<le> L c * \\<bar>s\\<bar>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (flow0 x s) (flow0 x 0) \\<le> L c * \\<bar>s\\<bar>", "from L[OF cC, THEN lipschitz_onD, of \"(0, x)\" \"(s, x)\"] d'[OF cC] that"], ["proof (chain)\npicking this:\n  \\<lbrakk>(0, x) \\<in> cball 0 (d' c) \\<times> cball c (u' c);\n   (s, x) \\<in> cball 0 (d' c) \\<times> cball c (u' c)\\<rbrakk>\n  \\<Longrightarrow> dist (case (0, x) of (t, x) \\<Rightarrow> flow0 x t)\n                     (case (s, x) of (t, x) \\<Rightarrow> flow0 x t)\n                    \\<le> L c * dist (0, x) (s, x)\n  0 < d' c\n  x \\<in> ball c (u' c)\n  s \\<in> cball 0 (d' c)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>(0, x) \\<in> cball 0 (d' c) \\<times> cball c (u' c);\n   (s, x) \\<in> cball 0 (d' c) \\<times> cball c (u' c)\\<rbrakk>\n  \\<Longrightarrow> dist (case (0, x) of (t, x) \\<Rightarrow> flow0 x t)\n                     (case (s, x) of (t, x) \\<Rightarrow> flow0 x t)\n                    \\<le> L c * dist (0, x) (s, x)\n  0 < d' c\n  x \\<in> ball c (u' c)\n  s \\<in> cball 0 (d' c)\n\ngoal (1 subgoal):\n 1. dist (flow0 x s) (flow0 x 0) \\<le> L c * \\<bar>s\\<bar>", "by (auto simp: dist_prod_def dist_commute)"], ["proof (state)\nthis:\n  dist (flow0 x s) (flow0 x 0) \\<le> L c * \\<bar>s\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x2 \\<in> ball c (u' c); ?s2 \\<in> cball 0 (d' c)\\<rbrakk>\n  \\<Longrightarrow> dist (flow0 ?x2 ?s2) (flow0 ?x2 0)\n                    \\<le> L c * \\<bar>?s2\\<bar>\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0.\n       \\<forall>x\\<in>ball c (u' c). dist (flow0 x s) (flow0 x 0) < e", "have \"\\<forall>\\<^sub>F s in at 0. abs s < d' c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0. \\<bar>s\\<bar> < d' c", "by (rule order_tendstoD tendsto_intros)+ (use d' cC in auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at 0. \\<bar>s\\<bar> < d' c\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0.\n       \\<forall>x\\<in>ball c (u' c). dist (flow0 x s) (flow0 x 0) < e", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at 0. \\<bar>s\\<bar> < d' c\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0.\n       \\<forall>x\\<in>ball c (u' c). dist (flow0 x s) (flow0 x 0) < e", "have \"\\<forall>\\<^sub>F s in at 0. L c * \\<bar>s\\<bar> < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0. L c * \\<bar>s\\<bar> < e", "by (rule order_tendstoD tendsto_intros)+ (use \\<open>0 < e\\<close> in auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at 0. L c * \\<bar>s\\<bar> < e\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0.\n       \\<forall>x\\<in>ball c (u' c). dist (flow0 x s) (flow0 x 0) < e", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F s in at 0. \\<bar>s\\<bar> < d' c\n  \\<forall>\\<^sub>F s in at 0. L c * \\<bar>s\\<bar> < e", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s in at 0. \\<bar>s\\<bar> < d' c\n  \\<forall>\\<^sub>F s in at 0. L c * \\<bar>s\\<bar> < e\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0.\n       \\<forall>x\\<in>ball c (u' c). dist (flow0 x s) (flow0 x 0) < e", "apply eventually_elim"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>\\<bar>s\\<bar> < d' c; L c * \\<bar>s\\<bar> < e\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>ball c (u' c).\n                            dist (flow0 x s) (flow0 x 0) < e", "apply (use * in auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s x.\n       \\<lbrakk>\\<bar>s\\<bar> < d' c; L c * \\<bar>s\\<bar> < e;\n        \\<And>x s.\n           \\<lbrakk>dist c x < u' c; \\<bar>s\\<bar> \\<le> d' c\\<rbrakk>\n           \\<Longrightarrow> dist (flow0 x s) (flow0 x 0)\n                             \\<le> L c * \\<bar>s\\<bar>;\n        dist c x < u' c\\<rbrakk>\n       \\<Longrightarrow> dist (flow0 x s) (flow0 x 0) < e", "by smt"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at 0.\n     \\<forall>x\\<in>ball c (u' c). dist (flow0 x s) (flow0 x 0) < e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?c2 \\<in> C' \\<Longrightarrow>\n  \\<forall>\\<^sub>F s in at 0.\n     \\<forall>x\\<in>ball ?c2 (u' ?c2). dist (flow0 x s) (flow0 x 0) < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in at 0.\n          \\<forall>x\\<in>C. dist (flow0 x n) (flow0 x 0) < e", "then"], ["proof (chain)\npicking this:\n  ?c2 \\<in> C' \\<Longrightarrow>\n  \\<forall>\\<^sub>F s in at 0.\n     \\<forall>x\\<in>ball ?c2 (u' ?c2). dist (flow0 x s) (flow0 x 0) < e", "have \"\\<forall>\\<^sub>F s in at 0. \\<forall>c\\<in>C'. \\<forall>x\\<in>ball c (u' c). dist (flow0 x s) (flow0 x 0) < e\""], ["proof (prove)\nusing this:\n  ?c2 \\<in> C' \\<Longrightarrow>\n  \\<forall>\\<^sub>F s in at 0.\n     \\<forall>x\\<in>ball ?c2 (u' ?c2). dist (flow0 x s) (flow0 x 0) < e\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0.\n       \\<forall>c\\<in>C'.\n          \\<forall>x\\<in>ball c (u' c). dist (flow0 x s) (flow0 x 0) < e", "by (simp add: eventually_ball_finite_distrib)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at 0.\n     \\<forall>c\\<in>C'.\n        \\<forall>x\\<in>ball c (u' c). dist (flow0 x s) (flow0 x 0) < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<forall>\\<^sub>F n in at 0.\n          \\<forall>x\\<in>C. dist (flow0 x n) (flow0 x 0) < e", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F s in at 0.\n     \\<forall>c\\<in>C'.\n        \\<forall>x\\<in>ball c (u' c). dist (flow0 x s) (flow0 x 0) < e", "show \"\\<forall>\\<^sub>F s in at 0. \\<forall>x\\<in>C. dist (flow0 x s) (flow0 x 0) < e\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s in at 0.\n     \\<forall>c\\<in>C'.\n        \\<forall>x\\<in>ball c (u' c). dist (flow0 x s) (flow0 x 0) < e\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0.\n       \\<forall>x\\<in>C. dist (flow0 x s) (flow0 x 0) < e", "apply eventually_elim"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<forall>c\\<in>C'.\n          \\<forall>sa\\<in>ball c (u' c).\n             dist (flow0 sa s) (flow0 sa 0) < e \\<Longrightarrow>\n       \\<forall>x\\<in>C. dist (flow0 x s) (flow0 x 0) < e", "apply (auto simp: )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s x.\n       \\<lbrakk>\\<forall>c\\<in>C'.\n                   \\<forall>sa\\<in>ball c (u' c).\n                      dist (flow0 sa s) (flow0 sa 0) < e;\n        x \\<in> C\\<rbrakk>\n       \\<Longrightarrow> dist (flow0 x s) (flow0 x 0) < e", "subgoal for s x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>c\\<in>C'.\n                \\<forall>sa\\<in>ball c (u' c).\n                   dist (flow0 sa s) (flow0 sa 0) < e;\n     x \\<in> C\\<rbrakk>\n    \\<Longrightarrow> dist (flow0 x s) (flow0 x 0) < e", "apply (drule bspec[where x=\"c' x\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<in> C \\<Longrightarrow> c' x \\<in> C'\n 2. \\<lbrakk>x \\<in> C;\n     \\<forall>sa\\<in>ball (c' x) (u' (c' x)).\n        dist (flow0 sa s) (flow0 sa 0) < e\\<rbrakk>\n    \\<Longrightarrow> dist (flow0 x s) (flow0 x 0) < e", "apply (simp add: c'(2))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> C;\n     \\<forall>sa\\<in>ball (c' x) (u' (c' x)).\n        dist (flow0 sa s) (flow0 sa 0) < e\\<rbrakk>\n    \\<Longrightarrow> dist (flow0 x s) (flow0 x 0) < e", "apply (drule bspec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<in> C \\<Longrightarrow> ?s3 \\<in> ball (c' x) (u' (c' x))\n 2. \\<lbrakk>x \\<in> C; dist (flow0 ?s3 s) (flow0 ?s3 0) < e\\<rbrakk>\n    \\<Longrightarrow> dist (flow0 x s) (flow0 x 0) < e", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> C; dist (flow0 ?s3 s) (flow0 ?s3 0) < e\\<rbrakk>\n    \\<Longrightarrow> dist (flow0 x s) (flow0 x 0) < e\n 2. x \\<in> C \\<Longrightarrow> ?s3 \\<in> ball (c' x) (u' (c' x))", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> C \\<Longrightarrow> x \\<in> ball (c' x) (u' (c' x))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> C \\<Longrightarrow> dist (c' x) x < u' (c' x)", "using c'(1)"], ["proof (prove)\nusing this:\n  ?x2 \\<in> C \\<Longrightarrow> ?x2 \\<in> ball (c' ?x2) (u' (c' ?x2))\n\ngoal (1 subgoal):\n 1. x \\<in> C \\<Longrightarrow> dist (c' x) x < u' (c' x)", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at 0.\n     \\<forall>x\\<in>C. dist (flow0 x s) (flow0 x 0) < e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  uniform_limit C (\\<lambda>s x. flow0 x s) (\\<lambda>x. flow0 x 0) (at 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Fixpoints\\<close>"], ["", "context auto_ll_on_open begin"], ["", "lemma fixpoint_sol:\n  assumes \"x \\<in> X\" \"f x = 0\"\n  shows \"existence_ivl0 x = UNIV\" \"flow0 x t = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. existence_ivl0 x = UNIV &&& flow0 x t = x", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. existence_ivl0 x = UNIV\n 2. flow0 x t = x", "have sol: \"((\\<lambda>t::real. x) solves_ode (\\<lambda>_. f)) UNIV X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. x) solves_ode (\\<lambda>_. f)) UNIV X", "apply (rule solves_odeI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((\\<lambda>t. x) has_vderiv_on (\\<lambda>t. f x)) UNIV\n 2. \\<And>t. t \\<in> UNIV \\<Longrightarrow> x \\<in> X", "by(auto simp add: assms intro!: derivative_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>t. x) solves_ode (\\<lambda>_. f)) UNIV X\n\ngoal (2 subgoals):\n 1. existence_ivl0 x = UNIV\n 2. flow0 x t = x", "from maximal_existence_flow[OF sol]"], ["proof (chain)\npicking this:\n  \\<lbrakk>x = ?x0.0; is_interval UNIV; 0 \\<in> UNIV;\n   UNIV \\<subseteq> UNIV\\<rbrakk>\n  \\<Longrightarrow> UNIV \\<subseteq> existence_ivl0 ?x0.0\n  \\<lbrakk>x = ?x0.0; is_interval UNIV; 0 \\<in> UNIV; UNIV \\<subseteq> UNIV;\n   ?t \\<in> UNIV\\<rbrakk>\n  \\<Longrightarrow> flow0 ?x0.0 ?t = x", "have\n    \"UNIV \\<subseteq> existence_ivl0 x\" \"flow0 x t = x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x = ?x0.0; is_interval UNIV; 0 \\<in> UNIV;\n   UNIV \\<subseteq> UNIV\\<rbrakk>\n  \\<Longrightarrow> UNIV \\<subseteq> existence_ivl0 ?x0.0\n  \\<lbrakk>x = ?x0.0; is_interval UNIV; 0 \\<in> UNIV; UNIV \\<subseteq> UNIV;\n   ?t \\<in> UNIV\\<rbrakk>\n  \\<Longrightarrow> flow0 ?x0.0 ?t = x\n\ngoal (1 subgoal):\n 1. UNIV \\<subseteq> existence_ivl0 x &&& flow0 x t = x", "by auto"], ["proof (state)\nthis:\n  UNIV \\<subseteq> existence_ivl0 x\n  flow0 x t = x\n\ngoal (2 subgoals):\n 1. existence_ivl0 x = UNIV\n 2. flow0 x t = x", "thus \"existence_ivl0 x = UNIV\" \"flow0 x t = x\""], ["proof (prove)\nusing this:\n  UNIV \\<subseteq> existence_ivl0 x\n  flow0 x t = x\n\ngoal (1 subgoal):\n 1. existence_ivl0 x = UNIV &&& flow0 x t = x", "by auto"], ["proof (state)\nthis:\n  existence_ivl0 x = UNIV\n  flow0 x t = x\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}